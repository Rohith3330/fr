{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst path_1 = require(\"path\");\n\nconst PassiveFileSystem_1 = require(\"../file-system/PassiveFileSystem\");\n\nconst forwardSlash_1 = __importDefault(require(\"../../utils/path/forwardSlash\"));\n\nconst RealFileSystem_1 = require(\"../file-system/RealFileSystem\");\n\nconst MemFileSystem_1 = require(\"../file-system/MemFileSystem\");\n\nfunction createControlledTypeScriptSystem(typescript) {\n  let mode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'readonly';\n  let artifacts = {\n    files: [],\n    dirs: [],\n    excluded: [],\n    extensions: []\n  };\n  let isInitialRun = true; // watchers\n\n  const fileWatcherCallbacksMap = new Map();\n  const directoryWatcherCallbacksMap = new Map();\n  const recursiveDirectoryWatcherCallbacksMap = new Map();\n  const deletedFiles = new Map(); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  const timeoutCallbacks = new Set(); // always use case-sensitive as normalization to lower-case can be a problem for some\n  // third-party libraries, like fsevents\n\n  const caseSensitive = true;\n  const realFileSystem = RealFileSystem_1.createRealFileSystem(caseSensitive);\n  const memFileSystem = MemFileSystem_1.createMemFileSystem(realFileSystem);\n  const passiveFileSystem = PassiveFileSystem_1.createPassiveFileSystem(memFileSystem, realFileSystem); // based on the ts.ignorePaths\n\n  const ignoredPaths = ['/node_modules/.', '/.git', '/.#'];\n\n  function createWatcher(watchersMap, path, callback) {\n    const normalizedPath = realFileSystem.normalizePath(path);\n    const watchers = watchersMap.get(normalizedPath) || [];\n    const nextWatchers = [...watchers, callback];\n    watchersMap.set(normalizedPath, nextWatchers);\n    return {\n      close: () => {\n        const watchers = watchersMap.get(normalizedPath) || [];\n        const nextWatchers = watchers.filter(watcher => watcher !== callback);\n\n        if (nextWatchers.length > 0) {\n          watchersMap.set(normalizedPath, nextWatchers);\n        } else {\n          watchersMap.delete(normalizedPath);\n        }\n      }\n    };\n  }\n\n  function invokeFileWatchers(path, event) {\n    const normalizedPath = realFileSystem.normalizePath(path);\n\n    if (normalizedPath.endsWith('.js')) {\n      // trigger relevant .d.ts file watcher - handles the case, when we have webpack watcher\n      // that points to a symlinked package\n      invokeFileWatchers(normalizedPath.slice(0, -3) + '.d.ts', event);\n    }\n\n    const fileWatcherCallbacks = fileWatcherCallbacksMap.get(normalizedPath);\n\n    if (fileWatcherCallbacks) {\n      // typescript expects normalized paths with posix forward slash\n      fileWatcherCallbacks.forEach(fileWatcherCallback => fileWatcherCallback(forwardSlash_1.default(normalizedPath), event));\n    }\n  }\n\n  function invokeDirectoryWatchers(path) {\n    const normalizedPath = realFileSystem.normalizePath(path);\n    const directory = path_1.dirname(normalizedPath);\n\n    if (ignoredPaths.some(ignoredPath => forwardSlash_1.default(normalizedPath).includes(ignoredPath))) {\n      return;\n    }\n\n    const directoryWatcherCallbacks = directoryWatcherCallbacksMap.get(directory);\n\n    if (directoryWatcherCallbacks) {\n      directoryWatcherCallbacks.forEach(directoryWatcherCallback => directoryWatcherCallback(forwardSlash_1.default(normalizedPath)));\n    }\n\n    recursiveDirectoryWatcherCallbacksMap.forEach((recursiveDirectoryWatcherCallbacks, watchedDirectory) => {\n      if (watchedDirectory === directory || directory.startsWith(watchedDirectory) && forwardSlash_1.default(directory)[watchedDirectory.length] === '/') {\n        recursiveDirectoryWatcherCallbacks.forEach(recursiveDirectoryWatcherCallback => recursiveDirectoryWatcherCallback(forwardSlash_1.default(normalizedPath)));\n      }\n    });\n  }\n\n  function isArtifact(path) {\n    return (artifacts.dirs.some(dir => path.includes(dir)) || artifacts.files.some(file => path === file)) && artifacts.extensions.some(extension => path.endsWith(extension));\n  }\n\n  function getReadFileSystem(path) {\n    if ((mode === 'readonly' || mode === 'write-tsbuildinfo') && isArtifact(path)) {\n      if (isInitialRun && !memFileSystem.exists(path) && passiveFileSystem.exists(path)) {\n        // copy file to memory on initial run\n        const stats = passiveFileSystem.readStats(path);\n\n        if (stats === null || stats === void 0 ? void 0 : stats.isFile()) {\n          const content = passiveFileSystem.readFile(path);\n\n          if (content) {\n            memFileSystem.writeFile(path, content);\n            memFileSystem.updateTimes(path, stats.atime, stats.mtime);\n          }\n        }\n      }\n\n      return memFileSystem;\n    }\n\n    return passiveFileSystem;\n  }\n\n  function getWriteFileSystem(path) {\n    if (mode === 'write-references' || mode === 'write-tsbuildinfo' && path.endsWith('.tsbuildinfo') || mode === 'write-dts' && ['.tsbuildinfo', '.d.ts', '.d.ts.map'].some(prefix => path.endsWith(prefix))) {\n      return realFileSystem;\n    }\n\n    return passiveFileSystem;\n  }\n\n  const controlledSystem = Object.assign(Object.assign({}, typescript.sys), {\n    useCaseSensitiveFileNames: caseSensitive,\n\n    realpath(path) {\n      return getReadFileSystem(path).realPath(path);\n    },\n\n    fileExists(path) {\n      const stats = getReadFileSystem(path).readStats(path);\n      return !!stats && stats.isFile();\n    },\n\n    readFile(path, encoding) {\n      return getReadFileSystem(path).readFile(path, encoding);\n    },\n\n    getFileSize(path) {\n      const stats = getReadFileSystem(path).readStats(path);\n      return stats ? stats.size : 0;\n    },\n\n    writeFile(path, data) {\n      getWriteFileSystem(path).writeFile(path, data);\n      controlledSystem.invokeFileChanged(path);\n    },\n\n    deleteFile(path) {\n      getWriteFileSystem(path).deleteFile(path);\n      controlledSystem.invokeFileDeleted(path);\n    },\n\n    directoryExists(path) {\n      var _a;\n\n      return Boolean((_a = getReadFileSystem(path).readStats(path)) === null || _a === void 0 ? void 0 : _a.isDirectory());\n    },\n\n    createDirectory(path) {\n      getWriteFileSystem(path).createDir(path);\n      invokeDirectoryWatchers(path);\n    },\n\n    getDirectories(path) {\n      const dirents = getReadFileSystem(path).readDir(path);\n      return dirents.filter(dirent => dirent.isDirectory() || dirent.isSymbolicLink() && controlledSystem.directoryExists(path_1.join(path, dirent.name))).map(dirent => dirent.name);\n    },\n\n    getModifiedTime(path) {\n      const stats = getReadFileSystem(path).readStats(path);\n\n      if (stats) {\n        return stats.mtime;\n      }\n    },\n\n    setModifiedTime(path, date) {\n      getWriteFileSystem(path).updateTimes(path, date, date);\n      invokeDirectoryWatchers(path);\n      invokeFileWatchers(path, typescript.FileWatcherEventKind.Changed);\n    },\n\n    watchFile(path, callback) {\n      return createWatcher(fileWatcherCallbacksMap, path, callback);\n    },\n\n    watchDirectory(path, callback) {\n      let recursive = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      return createWatcher(recursive ? recursiveDirectoryWatcherCallbacksMap : directoryWatcherCallbacksMap, path, callback);\n    },\n\n    // use immediate instead of timeout to avoid waiting 250ms for batching files changes\n    setTimeout: function (callback, timeout) {\n      for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n        args[_key - 2] = arguments[_key];\n      }\n\n      const timeoutId = setImmediate(() => {\n        callback(...args);\n        timeoutCallbacks.delete(timeoutId);\n      });\n      timeoutCallbacks.add(timeoutId);\n      return timeoutId;\n    },\n    clearTimeout: timeoutId => {\n      clearImmediate(timeoutId);\n      timeoutCallbacks.delete(timeoutId);\n    },\n\n    waitForQueued() {\n      return __awaiter(this, void 0, void 0, function* () {\n        while (timeoutCallbacks.size > 0) {\n          yield new Promise(resolve => setImmediate(resolve));\n        }\n\n        isInitialRun = false;\n      });\n    },\n\n    invokeFileCreated(path) {\n      const normalizedPath = realFileSystem.normalizePath(path);\n      invokeFileWatchers(path, typescript.FileWatcherEventKind.Created);\n      invokeDirectoryWatchers(normalizedPath);\n      deletedFiles.set(normalizedPath, false);\n    },\n\n    invokeFileChanged(path) {\n      const normalizedPath = realFileSystem.normalizePath(path);\n\n      if (deletedFiles.get(normalizedPath) || !fileWatcherCallbacksMap.has(normalizedPath)) {\n        invokeFileWatchers(path, typescript.FileWatcherEventKind.Created);\n        invokeDirectoryWatchers(normalizedPath);\n        deletedFiles.set(normalizedPath, false);\n      } else {\n        invokeFileWatchers(path, typescript.FileWatcherEventKind.Changed);\n      }\n    },\n\n    invokeFileDeleted(path) {\n      const normalizedPath = realFileSystem.normalizePath(path);\n\n      if (!deletedFiles.get(normalizedPath)) {\n        invokeFileWatchers(path, typescript.FileWatcherEventKind.Deleted);\n        invokeDirectoryWatchers(path);\n        deletedFiles.set(normalizedPath, true);\n      }\n    },\n\n    clearCache() {\n      realFileSystem.clearCache();\n      memFileSystem.clearCache();\n      passiveFileSystem.clearCache();\n    },\n\n    setArtifacts(nextArtifacts) {\n      artifacts = nextArtifacts;\n    }\n\n  });\n  return controlledSystem;\n}\n\nexports.createControlledTypeScriptSystem = createControlledTypeScriptSystem;","map":{"version":3,"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","__importDefault","mod","__esModule","Object","defineProperty","exports","path_1","require","PassiveFileSystem_1","forwardSlash_1","RealFileSystem_1","MemFileSystem_1","createControlledTypeScriptSystem","typescript","mode","artifacts","files","dirs","excluded","extensions","isInitialRun","fileWatcherCallbacksMap","Map","directoryWatcherCallbacksMap","recursiveDirectoryWatcherCallbacksMap","deletedFiles","timeoutCallbacks","Set","caseSensitive","realFileSystem","createRealFileSystem","memFileSystem","createMemFileSystem","passiveFileSystem","createPassiveFileSystem","ignoredPaths","createWatcher","watchersMap","path","callback","normalizedPath","normalizePath","watchers","get","nextWatchers","set","close","filter","watcher","length","delete","invokeFileWatchers","event","endsWith","slice","fileWatcherCallbacks","forEach","fileWatcherCallback","default","invokeDirectoryWatchers","directory","dirname","some","ignoredPath","includes","directoryWatcherCallbacks","directoryWatcherCallback","recursiveDirectoryWatcherCallbacks","watchedDirectory","startsWith","recursiveDirectoryWatcherCallback","isArtifact","dir","file","extension","getReadFileSystem","exists","stats","readStats","isFile","content","readFile","writeFile","updateTimes","atime","mtime","getWriteFileSystem","prefix","controlledSystem","assign","sys","useCaseSensitiveFileNames","realpath","realPath","fileExists","encoding","getFileSize","size","data","invokeFileChanged","deleteFile","invokeFileDeleted","directoryExists","_a","Boolean","isDirectory","createDirectory","createDir","getDirectories","dirents","readDir","dirent","isSymbolicLink","join","name","map","getModifiedTime","setModifiedTime","date","FileWatcherEventKind","Changed","watchFile","watchDirectory","recursive","setTimeout","timeout","args","timeoutId","setImmediate","add","clearTimeout","clearImmediate","waitForQueued","invokeFileCreated","Created","has","Deleted","clearCache","setArtifacts","nextArtifacts"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/fork-ts-checker-webpack-plugin/lib/typescript-reporter/reporter/ControlledTypeScriptSystem.js"],"sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst path_1 = require(\"path\");\nconst PassiveFileSystem_1 = require(\"../file-system/PassiveFileSystem\");\nconst forwardSlash_1 = __importDefault(require(\"../../utils/path/forwardSlash\"));\nconst RealFileSystem_1 = require(\"../file-system/RealFileSystem\");\nconst MemFileSystem_1 = require(\"../file-system/MemFileSystem\");\nfunction createControlledTypeScriptSystem(typescript, mode = 'readonly') {\n    let artifacts = {\n        files: [],\n        dirs: [],\n        excluded: [],\n        extensions: [],\n    };\n    let isInitialRun = true;\n    // watchers\n    const fileWatcherCallbacksMap = new Map();\n    const directoryWatcherCallbacksMap = new Map();\n    const recursiveDirectoryWatcherCallbacksMap = new Map();\n    const deletedFiles = new Map();\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const timeoutCallbacks = new Set();\n    // always use case-sensitive as normalization to lower-case can be a problem for some\n    // third-party libraries, like fsevents\n    const caseSensitive = true;\n    const realFileSystem = RealFileSystem_1.createRealFileSystem(caseSensitive);\n    const memFileSystem = MemFileSystem_1.createMemFileSystem(realFileSystem);\n    const passiveFileSystem = PassiveFileSystem_1.createPassiveFileSystem(memFileSystem, realFileSystem);\n    // based on the ts.ignorePaths\n    const ignoredPaths = ['/node_modules/.', '/.git', '/.#'];\n    function createWatcher(watchersMap, path, callback) {\n        const normalizedPath = realFileSystem.normalizePath(path);\n        const watchers = watchersMap.get(normalizedPath) || [];\n        const nextWatchers = [...watchers, callback];\n        watchersMap.set(normalizedPath, nextWatchers);\n        return {\n            close: () => {\n                const watchers = watchersMap.get(normalizedPath) || [];\n                const nextWatchers = watchers.filter((watcher) => watcher !== callback);\n                if (nextWatchers.length > 0) {\n                    watchersMap.set(normalizedPath, nextWatchers);\n                }\n                else {\n                    watchersMap.delete(normalizedPath);\n                }\n            },\n        };\n    }\n    function invokeFileWatchers(path, event) {\n        const normalizedPath = realFileSystem.normalizePath(path);\n        if (normalizedPath.endsWith('.js')) {\n            // trigger relevant .d.ts file watcher - handles the case, when we have webpack watcher\n            // that points to a symlinked package\n            invokeFileWatchers(normalizedPath.slice(0, -3) + '.d.ts', event);\n        }\n        const fileWatcherCallbacks = fileWatcherCallbacksMap.get(normalizedPath);\n        if (fileWatcherCallbacks) {\n            // typescript expects normalized paths with posix forward slash\n            fileWatcherCallbacks.forEach((fileWatcherCallback) => fileWatcherCallback(forwardSlash_1.default(normalizedPath), event));\n        }\n    }\n    function invokeDirectoryWatchers(path) {\n        const normalizedPath = realFileSystem.normalizePath(path);\n        const directory = path_1.dirname(normalizedPath);\n        if (ignoredPaths.some((ignoredPath) => forwardSlash_1.default(normalizedPath).includes(ignoredPath))) {\n            return;\n        }\n        const directoryWatcherCallbacks = directoryWatcherCallbacksMap.get(directory);\n        if (directoryWatcherCallbacks) {\n            directoryWatcherCallbacks.forEach((directoryWatcherCallback) => directoryWatcherCallback(forwardSlash_1.default(normalizedPath)));\n        }\n        recursiveDirectoryWatcherCallbacksMap.forEach((recursiveDirectoryWatcherCallbacks, watchedDirectory) => {\n            if (watchedDirectory === directory ||\n                (directory.startsWith(watchedDirectory) &&\n                    forwardSlash_1.default(directory)[watchedDirectory.length] === '/')) {\n                recursiveDirectoryWatcherCallbacks.forEach((recursiveDirectoryWatcherCallback) => recursiveDirectoryWatcherCallback(forwardSlash_1.default(normalizedPath)));\n            }\n        });\n    }\n    function isArtifact(path) {\n        return ((artifacts.dirs.some((dir) => path.includes(dir)) ||\n            artifacts.files.some((file) => path === file)) &&\n            artifacts.extensions.some((extension) => path.endsWith(extension)));\n    }\n    function getReadFileSystem(path) {\n        if ((mode === 'readonly' || mode === 'write-tsbuildinfo') && isArtifact(path)) {\n            if (isInitialRun && !memFileSystem.exists(path) && passiveFileSystem.exists(path)) {\n                // copy file to memory on initial run\n                const stats = passiveFileSystem.readStats(path);\n                if (stats === null || stats === void 0 ? void 0 : stats.isFile()) {\n                    const content = passiveFileSystem.readFile(path);\n                    if (content) {\n                        memFileSystem.writeFile(path, content);\n                        memFileSystem.updateTimes(path, stats.atime, stats.mtime);\n                    }\n                }\n            }\n            return memFileSystem;\n        }\n        return passiveFileSystem;\n    }\n    function getWriteFileSystem(path) {\n        if (mode === 'write-references' ||\n            (mode === 'write-tsbuildinfo' && path.endsWith('.tsbuildinfo')) ||\n            (mode === 'write-dts' &&\n                ['.tsbuildinfo', '.d.ts', '.d.ts.map'].some((prefix) => path.endsWith(prefix)))) {\n            return realFileSystem;\n        }\n        return passiveFileSystem;\n    }\n    const controlledSystem = Object.assign(Object.assign({}, typescript.sys), { useCaseSensitiveFileNames: caseSensitive, realpath(path) {\n            return getReadFileSystem(path).realPath(path);\n        },\n        fileExists(path) {\n            const stats = getReadFileSystem(path).readStats(path);\n            return !!stats && stats.isFile();\n        },\n        readFile(path, encoding) {\n            return getReadFileSystem(path).readFile(path, encoding);\n        },\n        getFileSize(path) {\n            const stats = getReadFileSystem(path).readStats(path);\n            return stats ? stats.size : 0;\n        },\n        writeFile(path, data) {\n            getWriteFileSystem(path).writeFile(path, data);\n            controlledSystem.invokeFileChanged(path);\n        },\n        deleteFile(path) {\n            getWriteFileSystem(path).deleteFile(path);\n            controlledSystem.invokeFileDeleted(path);\n        },\n        directoryExists(path) {\n            var _a;\n            return Boolean((_a = getReadFileSystem(path).readStats(path)) === null || _a === void 0 ? void 0 : _a.isDirectory());\n        },\n        createDirectory(path) {\n            getWriteFileSystem(path).createDir(path);\n            invokeDirectoryWatchers(path);\n        },\n        getDirectories(path) {\n            const dirents = getReadFileSystem(path).readDir(path);\n            return dirents\n                .filter((dirent) => dirent.isDirectory() ||\n                (dirent.isSymbolicLink() && controlledSystem.directoryExists(path_1.join(path, dirent.name))))\n                .map((dirent) => dirent.name);\n        },\n        getModifiedTime(path) {\n            const stats = getReadFileSystem(path).readStats(path);\n            if (stats) {\n                return stats.mtime;\n            }\n        },\n        setModifiedTime(path, date) {\n            getWriteFileSystem(path).updateTimes(path, date, date);\n            invokeDirectoryWatchers(path);\n            invokeFileWatchers(path, typescript.FileWatcherEventKind.Changed);\n        },\n        watchFile(path, callback) {\n            return createWatcher(fileWatcherCallbacksMap, path, callback);\n        },\n        watchDirectory(path, callback, recursive = false) {\n            return createWatcher(recursive ? recursiveDirectoryWatcherCallbacksMap : directoryWatcherCallbacksMap, path, callback);\n        }, \n        // use immediate instead of timeout to avoid waiting 250ms for batching files changes\n        setTimeout: (callback, timeout, ...args) => {\n            const timeoutId = setImmediate(() => {\n                callback(...args);\n                timeoutCallbacks.delete(timeoutId);\n            });\n            timeoutCallbacks.add(timeoutId);\n            return timeoutId;\n        }, clearTimeout: (timeoutId) => {\n            clearImmediate(timeoutId);\n            timeoutCallbacks.delete(timeoutId);\n        }, waitForQueued() {\n            return __awaiter(this, void 0, void 0, function* () {\n                while (timeoutCallbacks.size > 0) {\n                    yield new Promise((resolve) => setImmediate(resolve));\n                }\n                isInitialRun = false;\n            });\n        },\n        invokeFileCreated(path) {\n            const normalizedPath = realFileSystem.normalizePath(path);\n            invokeFileWatchers(path, typescript.FileWatcherEventKind.Created);\n            invokeDirectoryWatchers(normalizedPath);\n            deletedFiles.set(normalizedPath, false);\n        },\n        invokeFileChanged(path) {\n            const normalizedPath = realFileSystem.normalizePath(path);\n            if (deletedFiles.get(normalizedPath) || !fileWatcherCallbacksMap.has(normalizedPath)) {\n                invokeFileWatchers(path, typescript.FileWatcherEventKind.Created);\n                invokeDirectoryWatchers(normalizedPath);\n                deletedFiles.set(normalizedPath, false);\n            }\n            else {\n                invokeFileWatchers(path, typescript.FileWatcherEventKind.Changed);\n            }\n        },\n        invokeFileDeleted(path) {\n            const normalizedPath = realFileSystem.normalizePath(path);\n            if (!deletedFiles.get(normalizedPath)) {\n                invokeFileWatchers(path, typescript.FileWatcherEventKind.Deleted);\n                invokeDirectoryWatchers(path);\n                deletedFiles.set(normalizedPath, true);\n            }\n        },\n        clearCache() {\n            realFileSystem.clearCache();\n            memFileSystem.clearCache();\n            passiveFileSystem.clearCache();\n        },\n        setArtifacts(nextArtifacts) {\n            artifacts = nextArtifacts;\n        } });\n    return controlledSystem;\n}\nexports.createControlledTypeScriptSystem = createControlledTypeScriptSystem;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}