{"ast":null,"code":"/**\n * @fileoverview Rule to flag use of a debugger statement\n * @author Nicholas C. Zakas\n */\n\"use strict\"; //------------------------------------------------------------------------------\n// Rule Definition\n//------------------------------------------------------------------------------\n\n/** @type {import('../shared/types').Rule} */\n\nmodule.exports = {\n  meta: {\n    type: \"problem\",\n    docs: {\n      description: \"Disallow the use of `debugger`\",\n      recommended: true,\n      url: \"https://eslint.org/docs/rules/no-debugger\"\n    },\n    fixable: null,\n    schema: [],\n    messages: {\n      unexpected: \"Unexpected 'debugger' statement.\"\n    }\n  },\n\n  create(context) {\n    return {\n      DebuggerStatement(node) {\n        context.report({\n          node,\n          messageId: \"unexpected\"\n        });\n      }\n\n    };\n  }\n\n};","map":{"version":3,"names":["module","exports","meta","type","docs","description","recommended","url","fixable","schema","messages","unexpected","create","context","DebuggerStatement","node","report","messageId"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/eslint/lib/rules/no-debugger.js"],"sourcesContent":["/**\n * @fileoverview Rule to flag use of a debugger statement\n * @author Nicholas C. Zakas\n */\n\n\"use strict\";\n\n//------------------------------------------------------------------------------\n// Rule Definition\n//------------------------------------------------------------------------------\n\n/** @type {import('../shared/types').Rule} */\nmodule.exports = {\n    meta: {\n        type: \"problem\",\n\n        docs: {\n            description: \"Disallow the use of `debugger`\",\n            recommended: true,\n            url: \"https://eslint.org/docs/rules/no-debugger\"\n        },\n\n        fixable: null,\n        schema: [],\n\n        messages: {\n            unexpected: \"Unexpected 'debugger' statement.\"\n        }\n    },\n\n    create(context) {\n\n        return {\n            DebuggerStatement(node) {\n                context.report({\n                    node,\n                    messageId: \"unexpected\"\n                });\n            }\n        };\n\n    }\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AAEA,a,CAEA;AACA;AACA;;AAEA;;AACAA,MAAM,CAACC,OAAP,GAAiB;EACbC,IAAI,EAAE;IACFC,IAAI,EAAE,SADJ;IAGFC,IAAI,EAAE;MACFC,WAAW,EAAE,gCADX;MAEFC,WAAW,EAAE,IAFX;MAGFC,GAAG,EAAE;IAHH,CAHJ;IASFC,OAAO,EAAE,IATP;IAUFC,MAAM,EAAE,EAVN;IAYFC,QAAQ,EAAE;MACNC,UAAU,EAAE;IADN;EAZR,CADO;;EAkBbC,MAAM,CAACC,OAAD,EAAU;IAEZ,OAAO;MACHC,iBAAiB,CAACC,IAAD,EAAO;QACpBF,OAAO,CAACG,MAAR,CAAe;UACXD,IADW;UAEXE,SAAS,EAAE;QAFA,CAAf;MAIH;;IANE,CAAP;EASH;;AA7BY,CAAjB"},"metadata":{},"sourceType":"script"}