{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isMethodOrPropertySelector = exports.isMetaSelector = exports.selectorTypeToMessageString = void 0;\n\nconst enums_1 = require(\"./enums\");\n\nfunction selectorTypeToMessageString(selectorType) {\n  const notCamelCase = selectorType.replace(/([A-Z])/g, ' $1');\n  return notCamelCase.charAt(0).toUpperCase() + notCamelCase.slice(1);\n}\n\nexports.selectorTypeToMessageString = selectorTypeToMessageString;\n\nfunction isMetaSelector(selector) {\n  return selector in enums_1.MetaSelectors;\n}\n\nexports.isMetaSelector = isMetaSelector;\n\nfunction isMethodOrPropertySelector(selector) {\n  return selector === enums_1.MetaSelectors.method || selector === enums_1.MetaSelectors.property;\n}\n\nexports.isMethodOrPropertySelector = isMethodOrPropertySelector;","map":{"version":3,"mappings":";;;;;;;AAMA;;AAEA,SAASA,2BAAT,CAAqCC,YAArC,EAAkE;EAChE,MAAMC,YAAY,GAAGD,YAAY,CAACE,OAAb,CAAqB,UAArB,EAAiC,KAAjC,CAArB;EACA,OAAOD,YAAY,CAACE,MAAb,CAAoB,CAApB,EAAuBC,WAAvB,KAAuCH,YAAY,CAACI,KAAb,CAAmB,CAAnB,CAA9C;AACD;;AAiBCC;;AAfF,SAASC,cAAT,CACEC,QADF,EACwE;EAEtE,OAAOA,QAAQ,IAAIC,qBAAnB;AACD;;AAYCH;;AAVF,SAASI,0BAAT,CACEF,QADF,EACwE;EAEtE,OACEA,QAAQ,KAAKC,sBAAcE,MAA3B,IAAqCH,QAAQ,KAAKC,sBAAcG,QADlE;AAGD;;AAKCN","names":["selectorTypeToMessageString","selectorType","notCamelCase","replace","charAt","toUpperCase","slice","exports","isMetaSelector","selector","enums_1","isMethodOrPropertySelector","method","property"],"sources":["../../../src/rules/naming-convention-utils/shared.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}