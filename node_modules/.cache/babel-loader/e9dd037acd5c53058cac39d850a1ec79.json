{"ast":null,"code":"var test = require('tape');\n\nvar quote = require('../').quote;\n\ntest('quote', function (t) {\n  t.equal(quote(['a', 'b', 'c d']), 'a b \\'c d\\'');\n  t.equal(quote(['a', 'b', \"it's a \\\"neat thing\\\"\"]), 'a b \"it\\'s a \\\\\"neat thing\\\\\"\"');\n  t.equal(quote(['$', '`', '\\'']), '\\\\$ \\\\` \"\\'\"');\n  t.equal(quote([]), '');\n  t.equal(quote([\"a\\nb\"]), \"'a\\nb'\");\n  t.equal(quote([' #(){}*|][!']), \"' #(){}*|][!'\");\n  t.equal(quote([\"'#(){}*|][!\"]), '\"\\'#(){}*|][\\\\!\"');\n  t.equal(quote([\"X#(){}*|][!\"]), \"X\\\\#\\\\(\\\\)\\\\{\\\\}\\\\*\\\\|\\\\]\\\\[\\\\!\");\n  t.equal(quote([\"a\\n#\\nb\"]), \"'a\\n#\\nb'\");\n  t.equal(quote(['><;{}']), '\\\\>\\\\<\\\\;\\\\{\\\\}');\n  t.equal(quote(['a', 1, true, false]), 'a 1 true false');\n  t.equal(quote(['a', 1, null, undefined]), 'a 1 null undefined');\n  t.equal(quote(['a\\\\x']), 'a\\\\\\\\x');\n  t.end();\n});\ntest('quote ops', function (t) {\n  t.equal(quote(['a', {\n    op: '|'\n  }, 'b']), 'a \\\\| b');\n  t.equal(quote(['a', {\n    op: '&&'\n  }, 'b', {\n    op: ';'\n  }, 'c']), 'a \\\\&\\\\& b \\\\; c');\n  t.end();\n});\ntest('quote windows paths', {\n  skip: 'breaking change, disabled until 2.x'\n}, function (t) {\n  var path = 'C:\\\\projects\\\\node-shell-quote\\\\index.js';\n  t.equal(quote([path, 'b', 'c d']), 'C:\\\\projects\\\\node-shell-quote\\\\index.js b \\'c d\\'');\n  t.end();\n});\ntest(\"chars for windows paths don't break out\", function (t) {\n  var x = '`:\\\\a\\\\b';\n  t.equal(quote([x]), '\\\\`\\\\:\\\\\\\\a\\\\\\\\b');\n  t.end();\n});","map":{"version":3,"names":["test","require","quote","t","equal","undefined","end","op","skip","path","x"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/shell-quote/test/quote.js"],"sourcesContent":["var test = require('tape');\nvar quote = require('../').quote;\n\ntest('quote', function (t) {\n    t.equal(quote([ 'a', 'b', 'c d' ]), 'a b \\'c d\\'');\n    t.equal(\n        quote([ 'a', 'b', \"it's a \\\"neat thing\\\"\" ]),\n        'a b \"it\\'s a \\\\\"neat thing\\\\\"\"'\n    );\n    t.equal(\n        quote([ '$', '`', '\\'' ]),\n        '\\\\$ \\\\` \"\\'\"'\n    );\n    t.equal(quote([]), '');\n    t.equal(quote([\"a\\nb\"]), \"'a\\nb'\");\n    t.equal(quote([' #(){}*|][!']), \"' #(){}*|][!'\");\n    t.equal(quote([\"'#(){}*|][!\"]), '\"\\'#(){}*|][\\\\!\"');\n    t.equal(quote([\"X#(){}*|][!\"]), \"X\\\\#\\\\(\\\\)\\\\{\\\\}\\\\*\\\\|\\\\]\\\\[\\\\!\");\n    t.equal(quote([\"a\\n#\\nb\"]), \"'a\\n#\\nb'\");\n    t.equal(quote(['><;{}']), '\\\\>\\\\<\\\\;\\\\{\\\\}');\n    t.equal(quote([ 'a', 1, true, false ]), 'a 1 true false');\n    t.equal(quote([ 'a', 1, null, undefined ]), 'a 1 null undefined');\n    t.equal(quote([ 'a\\\\x' ]), 'a\\\\\\\\x');\n    t.end();\n});\n\ntest('quote ops', function (t) {\n    t.equal(quote([ 'a', { op: '|' }, 'b' ]), 'a \\\\| b');\n    t.equal(\n        quote([ 'a', { op: '&&' }, 'b', { op: ';' }, 'c' ]),\n        'a \\\\&\\\\& b \\\\; c'\n    );\n    t.end();\n});\n\ntest('quote windows paths', { skip: 'breaking change, disabled until 2.x' }, function (t) {\n    var path = 'C:\\\\projects\\\\node-shell-quote\\\\index.js'\n\n    t.equal(quote([path, 'b', 'c d']), 'C:\\\\projects\\\\node-shell-quote\\\\index.js b \\'c d\\'')\n\n    t.end()\n})\n\ntest(\"chars for windows paths don't break out\", function (t) {\n    var x = '`:\\\\a\\\\b'\n    t.equal(quote([x]), '\\\\`\\\\:\\\\\\\\a\\\\\\\\b')\n    t.end()\n})\n"],"mappings":"AAAA,IAAIA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAAlB;;AACA,IAAIC,KAAK,GAAGD,OAAO,CAAC,KAAD,CAAP,CAAeC,KAA3B;;AAEAF,IAAI,CAAC,OAAD,EAAU,UAAUG,CAAV,EAAa;EACvBA,CAAC,CAACC,KAAF,CAAQF,KAAK,CAAC,CAAE,GAAF,EAAO,GAAP,EAAY,KAAZ,CAAD,CAAb,EAAoC,aAApC;EACAC,CAAC,CAACC,KAAF,CACIF,KAAK,CAAC,CAAE,GAAF,EAAO,GAAP,EAAY,uBAAZ,CAAD,CADT,EAEI,gCAFJ;EAIAC,CAAC,CAACC,KAAF,CACIF,KAAK,CAAC,CAAE,GAAF,EAAO,GAAP,EAAY,IAAZ,CAAD,CADT,EAEI,cAFJ;EAIAC,CAAC,CAACC,KAAF,CAAQF,KAAK,CAAC,EAAD,CAAb,EAAmB,EAAnB;EACAC,CAAC,CAACC,KAAF,CAAQF,KAAK,CAAC,CAAC,MAAD,CAAD,CAAb,EAAyB,QAAzB;EACAC,CAAC,CAACC,KAAF,CAAQF,KAAK,CAAC,CAAC,aAAD,CAAD,CAAb,EAAgC,eAAhC;EACAC,CAAC,CAACC,KAAF,CAAQF,KAAK,CAAC,CAAC,aAAD,CAAD,CAAb,EAAgC,kBAAhC;EACAC,CAAC,CAACC,KAAF,CAAQF,KAAK,CAAC,CAAC,aAAD,CAAD,CAAb,EAAgC,iCAAhC;EACAC,CAAC,CAACC,KAAF,CAAQF,KAAK,CAAC,CAAC,SAAD,CAAD,CAAb,EAA4B,WAA5B;EACAC,CAAC,CAACC,KAAF,CAAQF,KAAK,CAAC,CAAC,OAAD,CAAD,CAAb,EAA0B,iBAA1B;EACAC,CAAC,CAACC,KAAF,CAAQF,KAAK,CAAC,CAAE,GAAF,EAAO,CAAP,EAAU,IAAV,EAAgB,KAAhB,CAAD,CAAb,EAAwC,gBAAxC;EACAC,CAAC,CAACC,KAAF,CAAQF,KAAK,CAAC,CAAE,GAAF,EAAO,CAAP,EAAU,IAAV,EAAgBG,SAAhB,CAAD,CAAb,EAA4C,oBAA5C;EACAF,CAAC,CAACC,KAAF,CAAQF,KAAK,CAAC,CAAE,MAAF,CAAD,CAAb,EAA2B,QAA3B;EACAC,CAAC,CAACG,GAAF;AACH,CArBG,CAAJ;AAuBAN,IAAI,CAAC,WAAD,EAAc,UAAUG,CAAV,EAAa;EAC3BA,CAAC,CAACC,KAAF,CAAQF,KAAK,CAAC,CAAE,GAAF,EAAO;IAAEK,EAAE,EAAE;EAAN,CAAP,EAAoB,GAApB,CAAD,CAAb,EAA0C,SAA1C;EACAJ,CAAC,CAACC,KAAF,CACIF,KAAK,CAAC,CAAE,GAAF,EAAO;IAAEK,EAAE,EAAE;EAAN,CAAP,EAAqB,GAArB,EAA0B;IAAEA,EAAE,EAAE;EAAN,CAA1B,EAAuC,GAAvC,CAAD,CADT,EAEI,kBAFJ;EAIAJ,CAAC,CAACG,GAAF;AACH,CAPG,CAAJ;AASAN,IAAI,CAAC,qBAAD,EAAwB;EAAEQ,IAAI,EAAE;AAAR,CAAxB,EAAyE,UAAUL,CAAV,EAAa;EACtF,IAAIM,IAAI,GAAG,0CAAX;EAEAN,CAAC,CAACC,KAAF,CAAQF,KAAK,CAAC,CAACO,IAAD,EAAO,GAAP,EAAY,KAAZ,CAAD,CAAb,EAAmC,oDAAnC;EAEAN,CAAC,CAACG,GAAF;AACH,CANG,CAAJ;AAQAN,IAAI,CAAC,yCAAD,EAA4C,UAAUG,CAAV,EAAa;EACzD,IAAIO,CAAC,GAAG,UAAR;EACAP,CAAC,CAACC,KAAF,CAAQF,KAAK,CAAC,CAACQ,CAAD,CAAD,CAAb,EAAoB,kBAApB;EACAP,CAAC,CAACG,GAAF;AACH,CAJG,CAAJ"},"metadata":{},"sourceType":"script"}