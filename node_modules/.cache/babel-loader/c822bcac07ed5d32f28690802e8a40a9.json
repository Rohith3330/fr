{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Rohith\\\\mern\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Rohith\\\\mern\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Rohith\\\\mern\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _get from \"C:\\\\Users\\\\Rohith\\\\mern\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Rohith\\\\mern\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Rohith\\\\mern\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\n/**\n * @license\n * Copyright 2022 CodeSmith LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\nimport { Layer } from '../../engine/topology';\nimport { serialization, mul, add, tidy } from '@tensorflow/tfjs-core';\nimport { getExactlyOneTensor } from '../../utils/types_utils';\nimport * as K from '../../backend/tfjs_backend';\n/**\n * Preprocessing Rescaling Layer\n *\n * This rescales images by a scaling and offset factor\n */\nexport var Rescaling = /*#__PURE__*/function (_Layer) {\n  _inherits(Rescaling, _Layer);\n  function Rescaling(args) {\n    var _this;\n    _classCallCheck(this, Rescaling);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Rescaling).call(this, args));\n    _this.scale = args.scale;\n    if (args.offset) {\n      _this.offset = args.offset;\n    } else {\n      _this.offset = 0;\n    }\n    return _this;\n  }\n  _createClass(Rescaling, [{\n    key: \"getConfig\",\n    value: function getConfig() {\n      var config = {\n        'scale': this.scale,\n        'offset': this.offset\n      };\n      var baseConfig = _get(_getPrototypeOf(Rescaling.prototype), \"getConfig\", this).call(this);\n      Object.assign(config, baseConfig);\n      return config;\n    }\n  }, {\n    key: \"call\",\n    value: function call(inputs, kwargs) {\n      var _this2 = this;\n      return tidy(function () {\n        inputs = getExactlyOneTensor(inputs);\n        if (inputs.dtype !== 'float32') {\n          inputs = K.cast(inputs, 'float32');\n        }\n        return add(mul(inputs, _this2.scale), _this2.offset);\n      });\n    }\n  }]);\n  return Rescaling;\n}(Layer);\n/** @nocollapse */\nRescaling.className = 'Rescaling';\nserialization.registerClass(Rescaling);","map":null,"metadata":{},"sourceType":"module"}