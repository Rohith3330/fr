{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = optimiseCallExpression;\n\nvar _t = require(\"@babel/types\");\n\nconst {\n  callExpression,\n  identifier,\n  isIdentifier,\n  isSpreadElement,\n  memberExpression,\n  optionalCallExpression,\n  optionalMemberExpression\n} = _t;\n\nfunction optimiseCallExpression(callee, thisNode, args, optional) {\n  if (args.length === 1 && isSpreadElement(args[0]) && isIdentifier(args[0].argument, {\n    name: \"arguments\"\n  })) {\n    if (optional) {\n      return optionalCallExpression(optionalMemberExpression(callee, identifier(\"apply\"), false, true), [thisNode, args[0].argument], false);\n    }\n\n    return callExpression(memberExpression(callee, identifier(\"apply\")), [thisNode, args[0].argument]);\n  } else {\n    if (optional) {\n      return optionalCallExpression(optionalMemberExpression(callee, identifier(\"call\"), false, true), [thisNode, ...args], false);\n    }\n\n    return callExpression(memberExpression(callee, identifier(\"call\")), [thisNode, ...args]);\n  }\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","default","optimiseCallExpression","_t","require","callExpression","identifier","isIdentifier","isSpreadElement","memberExpression","optionalCallExpression","optionalMemberExpression","callee","thisNode","args","optional","length","argument","name"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/@babel/helper-optimise-call-expression/lib/index.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = optimiseCallExpression;\n\nvar _t = require(\"@babel/types\");\n\nconst {\n  callExpression,\n  identifier,\n  isIdentifier,\n  isSpreadElement,\n  memberExpression,\n  optionalCallExpression,\n  optionalMemberExpression\n} = _t;\n\nfunction optimiseCallExpression(callee, thisNode, args, optional) {\n  if (args.length === 1 && isSpreadElement(args[0]) && isIdentifier(args[0].argument, {\n    name: \"arguments\"\n  })) {\n    if (optional) {\n      return optionalCallExpression(optionalMemberExpression(callee, identifier(\"apply\"), false, true), [thisNode, args[0].argument], false);\n    }\n\n    return callExpression(memberExpression(callee, identifier(\"apply\")), [thisNode, args[0].argument]);\n  } else {\n    if (optional) {\n      return optionalCallExpression(optionalMemberExpression(callee, identifier(\"call\"), false, true), [thisNode, ...args], false);\n    }\n\n    return callExpression(memberExpression(callee, identifier(\"call\")), [thisNode, ...args]);\n  }\n}"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAC3CC,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,sBAAlB;;AAEA,IAAIC,EAAE,GAAGC,OAAO,CAAC,cAAD,CAAhB;;AAEA,MAAM;EACJC,cADI;EAEJC,UAFI;EAGJC,YAHI;EAIJC,eAJI;EAKJC,gBALI;EAMJC,sBANI;EAOJC;AAPI,IAQFR,EARJ;;AAUA,SAASD,sBAAT,CAAgCU,MAAhC,EAAwCC,QAAxC,EAAkDC,IAAlD,EAAwDC,QAAxD,EAAkE;EAChE,IAAID,IAAI,CAACE,MAAL,KAAgB,CAAhB,IAAqBR,eAAe,CAACM,IAAI,CAAC,CAAD,CAAL,CAApC,IAAiDP,YAAY,CAACO,IAAI,CAAC,CAAD,CAAJ,CAAQG,QAAT,EAAmB;IAClFC,IAAI,EAAE;EAD4E,CAAnB,CAAjE,EAEI;IACF,IAAIH,QAAJ,EAAc;MACZ,OAAOL,sBAAsB,CAACC,wBAAwB,CAACC,MAAD,EAASN,UAAU,CAAC,OAAD,CAAnB,EAA8B,KAA9B,EAAqC,IAArC,CAAzB,EAAqE,CAACO,QAAD,EAAWC,IAAI,CAAC,CAAD,CAAJ,CAAQG,QAAnB,CAArE,EAAmG,KAAnG,CAA7B;IACD;;IAED,OAAOZ,cAAc,CAACI,gBAAgB,CAACG,MAAD,EAASN,UAAU,CAAC,OAAD,CAAnB,CAAjB,EAAgD,CAACO,QAAD,EAAWC,IAAI,CAAC,CAAD,CAAJ,CAAQG,QAAnB,CAAhD,CAArB;EACD,CARD,MAQO;IACL,IAAIF,QAAJ,EAAc;MACZ,OAAOL,sBAAsB,CAACC,wBAAwB,CAACC,MAAD,EAASN,UAAU,CAAC,MAAD,CAAnB,EAA6B,KAA7B,EAAoC,IAApC,CAAzB,EAAoE,CAACO,QAAD,EAAW,GAAGC,IAAd,CAApE,EAAyF,KAAzF,CAA7B;IACD;;IAED,OAAOT,cAAc,CAACI,gBAAgB,CAACG,MAAD,EAASN,UAAU,CAAC,MAAD,CAAnB,CAAjB,EAA+C,CAACO,QAAD,EAAW,GAAGC,IAAd,CAA/C,CAArB;EACD;AACF"},"metadata":{},"sourceType":"script"}