{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.resolveConfig = resolveConfig;\nexports.resolveConfigFile = resolveConfigFile;\nexports.loadConfig = loadConfig;\nexports.DEFAULT_CONFIG = void 0;\n\nvar _cosmiconfig = require(\"cosmiconfig\");\n\nconst DEFAULT_CONFIG = {\n  dimensions: true,\n  expandProps: 'end',\n  icon: false,\n  native: false,\n  typescript: false,\n  prettier: true,\n  prettierConfig: null,\n  memo: false,\n  ref: false,\n  replaceAttrValues: null,\n  svgProps: null,\n  svgo: true,\n  svgoConfig: null,\n  template: null,\n  titleProp: false,\n  runtimeConfig: true,\n  plugins: null,\n  namedExport: 'ReactComponent'\n};\nexports.DEFAULT_CONFIG = DEFAULT_CONFIG;\nconst explorer = (0, _cosmiconfig.cosmiconfig)('svgr', {\n  sync: true,\n  cache: true,\n  rcExtensions: true\n});\nconst explorerSync = (0, _cosmiconfig.cosmiconfigSync)('svgr', {\n  sync: true,\n  cache: true,\n  rcExtensions: true\n});\n\nasync function resolveConfig(searchFrom, configFile) {\n  if (configFile == null) {\n    const result = await explorer.search(searchFrom);\n    return result ? result.config : null;\n  }\n\n  const result = await explorer.load(configFile);\n  return result ? result.config : null;\n}\n\nresolveConfig.sync = (searchFrom, configFile) => {\n  if (configFile == null) {\n    const result = explorerSync.search(searchFrom);\n    return result ? result.config : null;\n  }\n\n  const result = explorerSync.load(configFile);\n  return result ? result.config : null;\n};\n\nasync function resolveConfigFile(filePath) {\n  const result = await explorer.search(filePath);\n  return result ? result.filepath : null;\n}\n\nresolveConfigFile.sync = filePath => {\n  const result = explorerSync.search(filePath);\n  return result ? result.filepath : null;\n};\n\nasync function loadConfig(_ref) {\n  let {\n    configFile,\n    ...baseConfig\n  } = _ref;\n  let state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const rcConfig = state.filePath && baseConfig.runtimeConfig !== false ? await resolveConfig(state.filePath, configFile) : {};\n  return { ...DEFAULT_CONFIG,\n    ...rcConfig,\n    ...baseConfig\n  };\n}\n\nloadConfig.sync = function (_ref2) {\n  let {\n    configFile,\n    ...baseConfig\n  } = _ref2;\n  let state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const rcConfig = state.filePath && baseConfig.runtimeConfig !== false ? resolveConfig.sync(state.filePath, configFile) : {};\n  return { ...DEFAULT_CONFIG,\n    ...rcConfig,\n    ...baseConfig\n  };\n};","map":{"version":3,"names":["exports","__esModule","resolveConfig","resolveConfigFile","loadConfig","DEFAULT_CONFIG","_cosmiconfig","require","dimensions","expandProps","icon","native","typescript","prettier","prettierConfig","memo","ref","replaceAttrValues","svgProps","svgo","svgoConfig","template","titleProp","runtimeConfig","plugins","namedExport","explorer","cosmiconfig","sync","cache","rcExtensions","explorerSync","cosmiconfigSync","searchFrom","configFile","result","search","config","load","filePath","filepath","baseConfig","state","rcConfig"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/@svgr/core/lib/config.js"],"sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.resolveConfig = resolveConfig;\nexports.resolveConfigFile = resolveConfigFile;\nexports.loadConfig = loadConfig;\nexports.DEFAULT_CONFIG = void 0;\n\nvar _cosmiconfig = require(\"cosmiconfig\");\n\nconst DEFAULT_CONFIG = {\n  dimensions: true,\n  expandProps: 'end',\n  icon: false,\n  native: false,\n  typescript: false,\n  prettier: true,\n  prettierConfig: null,\n  memo: false,\n  ref: false,\n  replaceAttrValues: null,\n  svgProps: null,\n  svgo: true,\n  svgoConfig: null,\n  template: null,\n  titleProp: false,\n  runtimeConfig: true,\n  plugins: null,\n  namedExport: 'ReactComponent'\n};\nexports.DEFAULT_CONFIG = DEFAULT_CONFIG;\nconst explorer = (0, _cosmiconfig.cosmiconfig)('svgr', {\n  sync: true,\n  cache: true,\n  rcExtensions: true\n});\nconst explorerSync = (0, _cosmiconfig.cosmiconfigSync)('svgr', {\n  sync: true,\n  cache: true,\n  rcExtensions: true\n});\n\nasync function resolveConfig(searchFrom, configFile) {\n  if (configFile == null) {\n    const result = await explorer.search(searchFrom);\n    return result ? result.config : null;\n  }\n\n  const result = await explorer.load(configFile);\n  return result ? result.config : null;\n}\n\nresolveConfig.sync = (searchFrom, configFile) => {\n  if (configFile == null) {\n    const result = explorerSync.search(searchFrom);\n    return result ? result.config : null;\n  }\n\n  const result = explorerSync.load(configFile);\n  return result ? result.config : null;\n};\n\nasync function resolveConfigFile(filePath) {\n  const result = await explorer.search(filePath);\n  return result ? result.filepath : null;\n}\n\nresolveConfigFile.sync = filePath => {\n  const result = explorerSync.search(filePath);\n  return result ? result.filepath : null;\n};\n\nasync function loadConfig({\n  configFile,\n  ...baseConfig\n}, state = {}) {\n  const rcConfig = state.filePath && baseConfig.runtimeConfig !== false ? await resolveConfig(state.filePath, configFile) : {};\n  return { ...DEFAULT_CONFIG,\n    ...rcConfig,\n    ...baseConfig\n  };\n}\n\nloadConfig.sync = ({\n  configFile,\n  ...baseConfig\n}, state = {}) => {\n  const rcConfig = state.filePath && baseConfig.runtimeConfig !== false ? resolveConfig.sync(state.filePath, configFile) : {};\n  return { ...DEFAULT_CONFIG,\n    ...rcConfig,\n    ...baseConfig\n  };\n};"],"mappings":"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"},"metadata":{},"sourceType":"script"}