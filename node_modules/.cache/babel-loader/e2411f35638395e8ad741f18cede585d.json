{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = getTabIndex;\n\nvar _jsxAstUtils = require(\"jsx-ast-utils\");\n/**\n * Returns the tabIndex value.\n */\n\n\nfunction getTabIndex(tabIndex) {\n  var literalValue = (0, _jsxAstUtils.getLiteralPropValue)(tabIndex); // String and number values.\n\n  if (['string', 'number'].indexOf(typeof literalValue) > -1) {\n    // Empty string will convert to zero, so check for it explicity.\n    if (typeof literalValue === 'string' && literalValue.length === 0) {\n      return undefined;\n    }\n\n    var value = Number(literalValue);\n\n    if (Number.isNaN(value)) {\n      return undefined;\n    }\n\n    return Number.isInteger(value) ? value : undefined;\n  } // Booleans are not valid values, return undefined.\n\n\n  if (literalValue === true || literalValue === false) {\n    return undefined;\n  }\n\n  return (0, _jsxAstUtils.getPropValue)(tabIndex);\n}\n\nmodule.exports = exports.default;","map":{"version":3,"names":["Object","defineProperty","exports","value","getTabIndex","_jsxAstUtils","require","tabIndex","literalValue","getLiteralPropValue","indexOf","length","undefined","Number","isNaN","isInteger","getPropValue","module","default"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/eslint-plugin-jsx-a11y/lib/util/getTabIndex.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = getTabIndex;\n\nvar _jsxAstUtils = require(\"jsx-ast-utils\");\n\n/**\n * Returns the tabIndex value.\n */\nfunction getTabIndex(tabIndex) {\n  var literalValue = (0, _jsxAstUtils.getLiteralPropValue)(tabIndex); // String and number values.\n\n  if (['string', 'number'].indexOf(typeof literalValue) > -1) {\n    // Empty string will convert to zero, so check for it explicity.\n    if (typeof literalValue === 'string' && literalValue.length === 0) {\n      return undefined;\n    }\n\n    var value = Number(literalValue);\n\n    if (Number.isNaN(value)) {\n      return undefined;\n    }\n\n    return Number.isInteger(value) ? value : undefined;\n  } // Booleans are not valid values, return undefined.\n\n\n  if (literalValue === true || literalValue === false) {\n    return undefined;\n  }\n\n  return (0, _jsxAstUtils.getPropValue)(tabIndex);\n}\n\nmodule.exports = exports.default;"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAC3CC,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAAC,SAAD,CAAP,GAAqBE,WAArB;;AAEA,IAAIC,YAAY,GAAGC,OAAO,CAAC,eAAD,CAA1B;AAEA;AACA;AACA;;;AACA,SAASF,WAAT,CAAqBG,QAArB,EAA+B;EAC7B,IAAIC,YAAY,GAAG,CAAC,GAAGH,YAAY,CAACI,mBAAjB,EAAsCF,QAAtC,CAAnB,CAD6B,CACuC;;EAEpE,IAAI,CAAC,QAAD,EAAW,QAAX,EAAqBG,OAArB,CAA6B,OAAOF,YAApC,IAAoD,CAAC,CAAzD,EAA4D;IAC1D;IACA,IAAI,OAAOA,YAAP,KAAwB,QAAxB,IAAoCA,YAAY,CAACG,MAAb,KAAwB,CAAhE,EAAmE;MACjE,OAAOC,SAAP;IACD;;IAED,IAAIT,KAAK,GAAGU,MAAM,CAACL,YAAD,CAAlB;;IAEA,IAAIK,MAAM,CAACC,KAAP,CAAaX,KAAb,CAAJ,EAAyB;MACvB,OAAOS,SAAP;IACD;;IAED,OAAOC,MAAM,CAACE,SAAP,CAAiBZ,KAAjB,IAA0BA,KAA1B,GAAkCS,SAAzC;EACD,CAhB4B,CAgB3B;;;EAGF,IAAIJ,YAAY,KAAK,IAAjB,IAAyBA,YAAY,KAAK,KAA9C,EAAqD;IACnD,OAAOI,SAAP;EACD;;EAED,OAAO,CAAC,GAAGP,YAAY,CAACW,YAAjB,EAA+BT,QAA/B,CAAP;AACD;;AAEDU,MAAM,CAACf,OAAP,GAAiBA,OAAO,CAACgB,OAAzB"},"metadata":{},"sourceType":"script"}