{"ast":null,"code":"/**\n * @fileoverview Enforce all elements that require alternative text have it.\n * @author Ethan Cohen\n */\n// -----------------------------------------------------------------------------\n// Requirements\n// -----------------------------------------------------------------------------\nimport { RuleTester } from 'eslint';\nimport parserOptionsMapper from '../../__util__/parserOptionsMapper';\nimport rule from '../../../src/rules/alt-text'; // -----------------------------------------------------------------------------\n// Tests\n// -----------------------------------------------------------------------------\n\nconst ruleTester = new RuleTester();\n\nconst missingPropError = type => ({\n  message: `${type} elements must have an alt prop, either with meaningful text, or an empty string for decorative images.`,\n  type: 'JSXOpeningElement'\n});\n\nconst altValueError = type => ({\n  message: `Invalid alt value for ${type}. \\\nUse alt=\"\" for presentational images.`,\n  type: 'JSXOpeningElement'\n});\n\nconst ariaLabelValueError = 'The aria-label attribute must have a value. The alt attribute is preferred over aria-label for images.';\nconst ariaLabelledbyValueError = 'The aria-labelledby attribute must have a value. The alt attribute is preferred over aria-labelledby for images.';\n\nconst preferAltError = () => ({\n  message: 'Prefer alt=\"\" over a presentational role. First rule of aria is to not use aria if it can be achieved via native HTML.',\n  type: 'JSXOpeningElement'\n});\n\nconst objectError = 'Embedded <object> elements must have alternative text by providing inner text, aria-label or aria-labelledby props.';\nconst areaError = 'Each area of an image map must have a text alternative through the `alt`, `aria-label`, or `aria-labelledby` prop.';\nconst inputImageError = '<input> elements with type=\"image\" must have a text alternative through the `alt`, `aria-label`, or `aria-labelledby` prop.';\nconst componentsSettings = {\n  'jsx-a11y': {\n    components: {\n      Input: 'input'\n    }\n  }\n};\nconst array = [{\n  img: ['Thumbnail', 'Image'],\n  object: ['Object'],\n  area: ['Area'],\n  'input[type=\"image\"]': ['InputImage']\n}];\nruleTester.run('alt-text', rule, {\n  valid: [// DEFAULT ELEMENT 'img' TESTS\n  {\n    code: '<img alt=\"foo\" />;'\n  }, {\n    code: '<img alt={\"foo\"} />;'\n  }, {\n    code: '<img alt={alt} />;'\n  }, {\n    code: '<img ALT=\"foo\" />;'\n  }, {\n    code: '<img ALT={`This is the ${alt} text`} />;'\n  }, {\n    code: '<img ALt=\"foo\" />;'\n  }, {\n    code: '<img alt=\"foo\" salt={undefined} />;'\n  }, {\n    code: '<img {...this.props} alt=\"foo\" />'\n  }, {\n    code: '<a />'\n  }, {\n    code: '<div />'\n  }, {\n    code: '<img alt={function(e) {} } />'\n  }, {\n    code: '<div alt={function(e) {} } />'\n  }, {\n    code: '<img alt={() => void 0} />'\n  }, {\n    code: '<IMG />'\n  }, {\n    code: '<UX.Layout>test</UX.Layout>'\n  }, {\n    code: '<img alt={alt || \"Alt text\" } />'\n  }, {\n    code: '<img alt={photo.caption} />;'\n  }, {\n    code: '<img alt={bar()} />;'\n  }, {\n    code: '<img alt={foo.bar || \"\"} />'\n  }, {\n    code: '<img alt={bar() || \"\"} />'\n  }, {\n    code: '<img alt={foo.bar() || \"\"} />'\n  }, {\n    code: '<img alt=\"\" />'\n  }, {\n    code: '<img alt={`${undefined}`} />'\n  }, {\n    code: '<img alt=\" \" />'\n  }, {\n    code: '<img alt=\"\" role=\"presentation\" />'\n  }, {\n    code: '<img alt=\"\" role=\"none\" />'\n  }, {\n    code: '<img alt=\"\" role={`presentation`} />'\n  }, {\n    code: '<img alt=\"\" role={\"presentation\"} />'\n  }, {\n    code: '<img alt=\"this is lit...\" role=\"presentation\" />'\n  }, {\n    code: '<img alt={error ? \"not working\": \"working\"} />'\n  }, {\n    code: '<img alt={undefined ? \"working\": \"not working\"} />'\n  }, {\n    code: '<img alt={plugin.name + \" Logo\"} />'\n  }, {\n    code: '<img aria-label=\"foo\" />'\n  }, {\n    code: '<img aria-labelledby=\"id1\" />'\n  }, // DEFAULT <object> TESTS\n  {\n    code: '<object aria-label=\"foo\" />'\n  }, {\n    code: '<object aria-labelledby=\"id1\" />'\n  }, {\n    code: '<object>Foo</object>'\n  }, {\n    code: '<object><p>This is descriptive!</p></object>'\n  }, {\n    code: '<Object />'\n  }, {\n    code: '<object title=\"An object\" />'\n  }, // DEFAULT <area> TESTS\n  {\n    code: '<area aria-label=\"foo\" />'\n  }, {\n    code: '<area aria-labelledby=\"id1\" />'\n  }, {\n    code: '<area alt=\"\" />'\n  }, {\n    code: '<area alt=\"This is descriptive!\" />'\n  }, {\n    code: '<area alt={altText} />'\n  }, {\n    code: '<Area />'\n  }, // DEFAULT <input type=\"image\"> TESTS\n  {\n    code: '<input />'\n  }, {\n    code: '<input type=\"foo\" />'\n  }, {\n    code: '<input type=\"image\" aria-label=\"foo\" />'\n  }, {\n    code: '<input type=\"image\" aria-labelledby=\"id1\" />'\n  }, {\n    code: '<input type=\"image\" alt=\"\" />'\n  }, {\n    code: '<input type=\"image\" alt=\"This is descriptive!\" />'\n  }, {\n    code: '<input type=\"image\" alt={altText} />'\n  }, {\n    code: '<InputImage />'\n  }, {\n    code: '<Input type=\"image\" alt=\"\" />',\n    settings: componentsSettings\n  }, // CUSTOM ELEMENT TESTS FOR ARRAY OPTION TESTS\n  {\n    code: '<Thumbnail alt=\"foo\" />;',\n    options: array\n  }, {\n    code: '<Thumbnail alt={\"foo\"} />;',\n    options: array\n  }, {\n    code: '<Thumbnail alt={alt} />;',\n    options: array\n  }, {\n    code: '<Thumbnail ALT=\"foo\" />;',\n    options: array\n  }, {\n    code: '<Thumbnail ALT={`This is the ${alt} text`} />;',\n    options: array\n  }, {\n    code: '<Thumbnail ALt=\"foo\" />;',\n    options: array\n  }, {\n    code: '<Thumbnail alt=\"foo\" salt={undefined} />;',\n    options: array\n  }, {\n    code: '<Thumbnail {...this.props} alt=\"foo\" />',\n    options: array\n  }, {\n    code: '<thumbnail />',\n    options: array\n  }, {\n    code: '<Thumbnail alt={function(e) {} } />',\n    options: array\n  }, {\n    code: '<div alt={function(e) {} } />',\n    options: array\n  }, {\n    code: '<Thumbnail alt={() => void 0} />',\n    options: array\n  }, {\n    code: '<THUMBNAIL />',\n    options: array\n  }, {\n    code: '<Thumbnail alt={alt || \"foo\" } />',\n    options: array\n  }, {\n    code: '<Image alt=\"foo\" />;',\n    options: array\n  }, {\n    code: '<Image alt={\"foo\"} />;',\n    options: array\n  }, {\n    code: '<Image alt={alt} />;',\n    options: array\n  }, {\n    code: '<Image ALT=\"foo\" />;',\n    options: array\n  }, {\n    code: '<Image ALT={`This is the ${alt} text`} />;',\n    options: array\n  }, {\n    code: '<Image ALt=\"foo\" />;',\n    options: array\n  }, {\n    code: '<Image alt=\"foo\" salt={undefined} />;',\n    options: array\n  }, {\n    code: '<Image {...this.props} alt=\"foo\" />',\n    options: array\n  }, {\n    code: '<image />',\n    options: array\n  }, {\n    code: '<Image alt={function(e) {} } />',\n    options: array\n  }, {\n    code: '<div alt={function(e) {} } />',\n    options: array\n  }, {\n    code: '<Image alt={() => void 0} />',\n    options: array\n  }, {\n    code: '<IMAGE />',\n    options: array\n  }, {\n    code: '<Image alt={alt || \"foo\" } />',\n    options: array\n  }, {\n    code: '<Object aria-label=\"foo\" />',\n    options: array\n  }, {\n    code: '<Object aria-labelledby=\"id1\" />',\n    options: array\n  }, {\n    code: '<Object>Foo</Object>',\n    options: array\n  }, {\n    code: '<Object><p>This is descriptive!</p></Object>',\n    options: array\n  }, {\n    code: '<Object title=\"An object\" />',\n    options: array\n  }, {\n    code: '<Area aria-label=\"foo\" />',\n    options: array\n  }, {\n    code: '<Area aria-labelledby=\"id1\" />',\n    options: array\n  }, {\n    code: '<Area alt=\"\" />',\n    options: array\n  }, {\n    code: '<Area alt=\"This is descriptive!\" />',\n    options: array\n  }, {\n    code: '<Area alt={altText} />',\n    options: array\n  }, {\n    code: '<InputImage aria-label=\"foo\" />',\n    options: array\n  }, {\n    code: '<InputImage aria-labelledby=\"id1\" />',\n    options: array\n  }, {\n    code: '<InputImage alt=\"\" />',\n    options: array\n  }, {\n    code: '<InputImage alt=\"This is descriptive!\" />',\n    options: array\n  }, {\n    code: '<InputImage alt={altText} />',\n    options: array\n  }].map(parserOptionsMapper),\n  invalid: [// DEFAULT ELEMENT 'img' TESTS\n  {\n    code: '<img />;',\n    errors: [missingPropError('img')]\n  }, {\n    code: '<img alt />;',\n    errors: [altValueError('img')]\n  }, {\n    code: '<img alt={undefined} />;',\n    errors: [altValueError('img')]\n  }, {\n    code: '<img src=\"xyz\" />',\n    errors: [missingPropError('img')]\n  }, {\n    code: '<img role />',\n    errors: [missingPropError('img')]\n  }, {\n    code: '<img {...this.props} />',\n    errors: [missingPropError('img')]\n  }, {\n    code: '<img alt={false || false} />',\n    errors: [altValueError('img')]\n  }, {\n    code: '<img alt={undefined} role=\"presentation\" />;',\n    errors: [altValueError('img')]\n  }, {\n    code: '<img alt role=\"presentation\" />;',\n    errors: [altValueError('img')]\n  }, {\n    code: '<img role=\"presentation\" />;',\n    errors: [preferAltError()]\n  }, {\n    code: '<img role=\"none\" />;',\n    errors: [preferAltError()]\n  }, {\n    code: '<img aria-label={undefined} />',\n    errors: [ariaLabelValueError]\n  }, {\n    code: '<img aria-labelledby={undefined} />',\n    errors: [ariaLabelledbyValueError]\n  }, {\n    code: '<img aria-label=\"\" />',\n    errors: [ariaLabelValueError]\n  }, {\n    code: '<img aria-labelledby=\"\" />',\n    errors: [ariaLabelledbyValueError]\n  }, // DEFAULT ELEMENT 'object' TESTS\n  {\n    code: '<object />',\n    errors: [objectError]\n  }, {\n    code: '<object><div aria-hidden /></object>',\n    errors: [objectError]\n  }, {\n    code: '<object title={undefined} />',\n    errors: [objectError]\n  }, {\n    code: '<object aria-label=\"\" />',\n    errors: [objectError]\n  }, {\n    code: '<object aria-labelledby=\"\" />',\n    errors: [objectError]\n  }, {\n    code: '<object aria-label={undefined} />',\n    errors: [objectError]\n  }, {\n    code: '<object aria-labelledby={undefined} />',\n    errors: [objectError]\n  }, // DEFAULT ELEMENT 'area' TESTS\n  {\n    code: '<area />',\n    errors: [areaError]\n  }, {\n    code: '<area alt />',\n    errors: [areaError]\n  }, {\n    code: '<area alt={undefined} />',\n    errors: [areaError]\n  }, {\n    code: '<area src=\"xyz\" />',\n    errors: [areaError]\n  }, {\n    code: '<area {...this.props} />',\n    errors: [areaError]\n  }, {\n    code: '<area aria-label=\"\" />',\n    errors: [areaError]\n  }, {\n    code: '<area aria-label={undefined} />',\n    errors: [areaError]\n  }, {\n    code: '<area aria-labelledby=\"\" />',\n    errors: [areaError]\n  }, {\n    code: '<area aria-labelledby={undefined} />',\n    errors: [areaError]\n  }, // DEFAULT ELEMENT 'input type=\"image\"' TESTS\n  {\n    code: '<input type=\"image\" />',\n    errors: [inputImageError]\n  }, {\n    code: '<input type=\"image\" alt />',\n    errors: [inputImageError]\n  }, {\n    code: '<input type=\"image\" alt={undefined} />',\n    errors: [inputImageError]\n  }, {\n    code: '<input type=\"image\">Foo</input>',\n    errors: [inputImageError]\n  }, {\n    code: '<input type=\"image\" {...this.props} />',\n    errors: [inputImageError]\n  }, {\n    code: '<input type=\"image\" aria-label=\"\" />',\n    errors: [inputImageError]\n  }, {\n    code: '<input type=\"image\" aria-label={undefined} />',\n    errors: [inputImageError]\n  }, {\n    code: '<input type=\"image\" aria-labelledby=\"\" />',\n    errors: [inputImageError]\n  }, {\n    code: '<input type=\"image\" aria-labelledby={undefined} />',\n    errors: [inputImageError]\n  }, // CUSTOM ELEMENT TESTS FOR ARRAY OPTION TESTS\n  {\n    code: '<Thumbnail />;',\n    errors: [missingPropError('Thumbnail')],\n    options: array\n  }, {\n    code: '<Thumbnail alt />;',\n    errors: [altValueError('Thumbnail')],\n    options: array\n  }, {\n    code: '<Thumbnail alt={undefined} />;',\n    errors: [altValueError('Thumbnail')],\n    options: array\n  }, {\n    code: '<Thumbnail src=\"xyz\" />',\n    errors: [missingPropError('Thumbnail')],\n    options: array\n  }, {\n    code: '<Thumbnail {...this.props} />',\n    errors: [missingPropError('Thumbnail')],\n    options: array\n  }, {\n    code: '<Image />;',\n    errors: [missingPropError('Image')],\n    options: array\n  }, {\n    code: '<Image alt />;',\n    errors: [altValueError('Image')],\n    options: array\n  }, {\n    code: '<Image alt={undefined} />;',\n    errors: [altValueError('Image')],\n    options: array\n  }, {\n    code: '<Image src=\"xyz\" />',\n    errors: [missingPropError('Image')],\n    options: array\n  }, {\n    code: '<Image {...this.props} />',\n    errors: [missingPropError('Image')],\n    options: array\n  }, {\n    code: '<Object />',\n    errors: [objectError],\n    options: array\n  }, {\n    code: '<Object><div aria-hidden /></Object>',\n    errors: [objectError],\n    options: array\n  }, {\n    code: '<Object title={undefined} />',\n    errors: [objectError],\n    options: array\n  }, {\n    code: '<Area />',\n    errors: [areaError],\n    options: array\n  }, {\n    code: '<Area alt />',\n    errors: [areaError],\n    options: array\n  }, {\n    code: '<Area alt={undefined} />',\n    errors: [areaError],\n    options: array\n  }, {\n    code: '<Area src=\"xyz\" />',\n    errors: [areaError],\n    options: array\n  }, {\n    code: '<Area {...this.props} />',\n    errors: [areaError],\n    options: array\n  }, {\n    code: '<InputImage />',\n    errors: [inputImageError],\n    options: array\n  }, {\n    code: '<InputImage alt />',\n    errors: [inputImageError],\n    options: array\n  }, {\n    code: '<InputImage alt={undefined} />',\n    errors: [inputImageError],\n    options: array\n  }, {\n    code: '<InputImage>Foo</InputImage>',\n    errors: [inputImageError],\n    options: array\n  }, {\n    code: '<InputImage {...this.props} />',\n    errors: [inputImageError],\n    options: array\n  }, {\n    code: '<Input type=\"image\" />',\n    errors: [inputImageError],\n    settings: componentsSettings\n  }].map(parserOptionsMapper)\n});","map":{"version":3,"names":["RuleTester","parserOptionsMapper","rule","ruleTester","missingPropError","type","message","altValueError","ariaLabelValueError","ariaLabelledbyValueError","preferAltError","objectError","areaError","inputImageError","componentsSettings","components","Input","array","img","object","area","run","valid","code","settings","options","map","invalid","errors"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/eslint-plugin-jsx-a11y/__tests__/src/rules/alt-text-test.js"],"sourcesContent":["/**\n * @fileoverview Enforce all elements that require alternative text have it.\n * @author Ethan Cohen\n */\n\n// -----------------------------------------------------------------------------\n// Requirements\n// -----------------------------------------------------------------------------\n\nimport { RuleTester } from 'eslint';\nimport parserOptionsMapper from '../../__util__/parserOptionsMapper';\nimport rule from '../../../src/rules/alt-text';\n\n// -----------------------------------------------------------------------------\n// Tests\n// -----------------------------------------------------------------------------\n\nconst ruleTester = new RuleTester();\n\nconst missingPropError = (type) => ({\n  message: `${type} elements must have an alt prop, either with meaningful text, or an empty string for decorative images.`,\n  type: 'JSXOpeningElement',\n});\n\nconst altValueError = (type) => ({\n  message: `Invalid alt value for ${type}. \\\nUse alt=\"\" for presentational images.`,\n  type: 'JSXOpeningElement',\n});\n\nconst ariaLabelValueError = 'The aria-label attribute must have a value. The alt attribute is preferred over aria-label for images.';\nconst ariaLabelledbyValueError = 'The aria-labelledby attribute must have a value. The alt attribute is preferred over aria-labelledby for images.';\n\nconst preferAltError = () => ({\n  message: 'Prefer alt=\"\" over a presentational role. First rule of aria is to not use aria if it can be achieved via native HTML.',\n  type: 'JSXOpeningElement',\n});\n\nconst objectError = 'Embedded <object> elements must have alternative text by providing inner text, aria-label or aria-labelledby props.';\n\nconst areaError = 'Each area of an image map must have a text alternative through the `alt`, `aria-label`, or `aria-labelledby` prop.';\n\nconst inputImageError = '<input> elements with type=\"image\" must have a text alternative through the `alt`, `aria-label`, or `aria-labelledby` prop.';\n\nconst componentsSettings = {\n  'jsx-a11y': {\n    components: {\n      Input: 'input',\n    },\n  },\n};\n\nconst array = [{\n  img: ['Thumbnail', 'Image'],\n  object: ['Object'],\n  area: ['Area'],\n  'input[type=\"image\"]': ['InputImage'],\n}];\n\nruleTester.run('alt-text', rule, {\n  valid: [\n    // DEFAULT ELEMENT 'img' TESTS\n    { code: '<img alt=\"foo\" />;' },\n    { code: '<img alt={\"foo\"} />;' },\n    { code: '<img alt={alt} />;' },\n    { code: '<img ALT=\"foo\" />;' },\n    { code: '<img ALT={`This is the ${alt} text`} />;' },\n    { code: '<img ALt=\"foo\" />;' },\n    { code: '<img alt=\"foo\" salt={undefined} />;' },\n    { code: '<img {...this.props} alt=\"foo\" />' },\n    { code: '<a />' },\n    { code: '<div />' },\n    { code: '<img alt={function(e) {} } />' },\n    { code: '<div alt={function(e) {} } />' },\n    { code: '<img alt={() => void 0} />' },\n    { code: '<IMG />' },\n    { code: '<UX.Layout>test</UX.Layout>' },\n    { code: '<img alt={alt || \"Alt text\" } />' },\n    { code: '<img alt={photo.caption} />;' },\n    { code: '<img alt={bar()} />;' },\n    { code: '<img alt={foo.bar || \"\"} />' },\n    { code: '<img alt={bar() || \"\"} />' },\n    { code: '<img alt={foo.bar() || \"\"} />' },\n    { code: '<img alt=\"\" />' },\n    { code: '<img alt={`${undefined}`} />' },\n    { code: '<img alt=\" \" />' },\n    { code: '<img alt=\"\" role=\"presentation\" />' },\n    { code: '<img alt=\"\" role=\"none\" />' },\n    { code: '<img alt=\"\" role={`presentation`} />' },\n    { code: '<img alt=\"\" role={\"presentation\"} />' },\n    { code: '<img alt=\"this is lit...\" role=\"presentation\" />' },\n    { code: '<img alt={error ? \"not working\": \"working\"} />' },\n    { code: '<img alt={undefined ? \"working\": \"not working\"} />' },\n    { code: '<img alt={plugin.name + \" Logo\"} />' },\n    { code: '<img aria-label=\"foo\" />' },\n    { code: '<img aria-labelledby=\"id1\" />' },\n\n    // DEFAULT <object> TESTS\n    { code: '<object aria-label=\"foo\" />' },\n    { code: '<object aria-labelledby=\"id1\" />' },\n    { code: '<object>Foo</object>' },\n    { code: '<object><p>This is descriptive!</p></object>' },\n    { code: '<Object />' },\n    { code: '<object title=\"An object\" />' },\n\n    // DEFAULT <area> TESTS\n    { code: '<area aria-label=\"foo\" />' },\n    { code: '<area aria-labelledby=\"id1\" />' },\n    { code: '<area alt=\"\" />' },\n    { code: '<area alt=\"This is descriptive!\" />' },\n    { code: '<area alt={altText} />' },\n    { code: '<Area />' },\n\n    // DEFAULT <input type=\"image\"> TESTS\n    { code: '<input />' },\n    { code: '<input type=\"foo\" />' },\n    { code: '<input type=\"image\" aria-label=\"foo\" />' },\n    { code: '<input type=\"image\" aria-labelledby=\"id1\" />' },\n    { code: '<input type=\"image\" alt=\"\" />' },\n    { code: '<input type=\"image\" alt=\"This is descriptive!\" />' },\n    { code: '<input type=\"image\" alt={altText} />' },\n    { code: '<InputImage />' },\n    { code: '<Input type=\"image\" alt=\"\" />', settings: componentsSettings },\n\n    // CUSTOM ELEMENT TESTS FOR ARRAY OPTION TESTS\n    { code: '<Thumbnail alt=\"foo\" />;', options: array },\n    { code: '<Thumbnail alt={\"foo\"} />;', options: array },\n    { code: '<Thumbnail alt={alt} />;', options: array },\n    { code: '<Thumbnail ALT=\"foo\" />;', options: array },\n    { code: '<Thumbnail ALT={`This is the ${alt} text`} />;', options: array },\n    { code: '<Thumbnail ALt=\"foo\" />;', options: array },\n    { code: '<Thumbnail alt=\"foo\" salt={undefined} />;', options: array },\n    { code: '<Thumbnail {...this.props} alt=\"foo\" />', options: array },\n    { code: '<thumbnail />', options: array },\n    { code: '<Thumbnail alt={function(e) {} } />', options: array },\n    { code: '<div alt={function(e) {} } />', options: array },\n    { code: '<Thumbnail alt={() => void 0} />', options: array },\n    { code: '<THUMBNAIL />', options: array },\n    { code: '<Thumbnail alt={alt || \"foo\" } />', options: array },\n    { code: '<Image alt=\"foo\" />;', options: array },\n    { code: '<Image alt={\"foo\"} />;', options: array },\n    { code: '<Image alt={alt} />;', options: array },\n    { code: '<Image ALT=\"foo\" />;', options: array },\n    { code: '<Image ALT={`This is the ${alt} text`} />;', options: array },\n    { code: '<Image ALt=\"foo\" />;', options: array },\n    { code: '<Image alt=\"foo\" salt={undefined} />;', options: array },\n    { code: '<Image {...this.props} alt=\"foo\" />', options: array },\n    { code: '<image />', options: array },\n    { code: '<Image alt={function(e) {} } />', options: array },\n    { code: '<div alt={function(e) {} } />', options: array },\n    { code: '<Image alt={() => void 0} />', options: array },\n    { code: '<IMAGE />', options: array },\n    { code: '<Image alt={alt || \"foo\" } />', options: array },\n    { code: '<Object aria-label=\"foo\" />', options: array },\n    { code: '<Object aria-labelledby=\"id1\" />', options: array },\n    { code: '<Object>Foo</Object>', options: array },\n    { code: '<Object><p>This is descriptive!</p></Object>', options: array },\n    { code: '<Object title=\"An object\" />', options: array },\n    { code: '<Area aria-label=\"foo\" />', options: array },\n    { code: '<Area aria-labelledby=\"id1\" />', options: array },\n    { code: '<Area alt=\"\" />', options: array },\n    { code: '<Area alt=\"This is descriptive!\" />', options: array },\n    { code: '<Area alt={altText} />', options: array },\n    { code: '<InputImage aria-label=\"foo\" />', options: array },\n    { code: '<InputImage aria-labelledby=\"id1\" />', options: array },\n    { code: '<InputImage alt=\"\" />', options: array },\n    { code: '<InputImage alt=\"This is descriptive!\" />', options: array },\n    { code: '<InputImage alt={altText} />', options: array },\n  ].map(parserOptionsMapper),\n  invalid: [\n    // DEFAULT ELEMENT 'img' TESTS\n    { code: '<img />;', errors: [missingPropError('img')] },\n    { code: '<img alt />;', errors: [altValueError('img')] },\n    { code: '<img alt={undefined} />;', errors: [altValueError('img')] },\n    { code: '<img src=\"xyz\" />', errors: [missingPropError('img')] },\n    { code: '<img role />', errors: [missingPropError('img')] },\n    { code: '<img {...this.props} />', errors: [missingPropError('img')] },\n    { code: '<img alt={false || false} />', errors: [altValueError('img')] },\n    { code: '<img alt={undefined} role=\"presentation\" />;', errors: [altValueError('img')] },\n    { code: '<img alt role=\"presentation\" />;', errors: [altValueError('img')] },\n    { code: '<img role=\"presentation\" />;', errors: [preferAltError()] },\n    { code: '<img role=\"none\" />;', errors: [preferAltError()] },\n    { code: '<img aria-label={undefined} />', errors: [ariaLabelValueError] },\n    { code: '<img aria-labelledby={undefined} />', errors: [ariaLabelledbyValueError] },\n    { code: '<img aria-label=\"\" />', errors: [ariaLabelValueError] },\n    { code: '<img aria-labelledby=\"\" />', errors: [ariaLabelledbyValueError] },\n\n    // DEFAULT ELEMENT 'object' TESTS\n    { code: '<object />', errors: [objectError] },\n    { code: '<object><div aria-hidden /></object>', errors: [objectError] },\n    { code: '<object title={undefined} />', errors: [objectError] },\n    { code: '<object aria-label=\"\" />', errors: [objectError] },\n    { code: '<object aria-labelledby=\"\" />', errors: [objectError] },\n    { code: '<object aria-label={undefined} />', errors: [objectError] },\n    { code: '<object aria-labelledby={undefined} />', errors: [objectError] },\n\n    // DEFAULT ELEMENT 'area' TESTS\n    { code: '<area />', errors: [areaError] },\n    { code: '<area alt />', errors: [areaError] },\n    { code: '<area alt={undefined} />', errors: [areaError] },\n    { code: '<area src=\"xyz\" />', errors: [areaError] },\n    { code: '<area {...this.props} />', errors: [areaError] },\n    { code: '<area aria-label=\"\" />', errors: [areaError] },\n    { code: '<area aria-label={undefined} />', errors: [areaError] },\n    { code: '<area aria-labelledby=\"\" />', errors: [areaError] },\n    { code: '<area aria-labelledby={undefined} />', errors: [areaError] },\n\n    // DEFAULT ELEMENT 'input type=\"image\"' TESTS\n    { code: '<input type=\"image\" />', errors: [inputImageError] },\n    { code: '<input type=\"image\" alt />', errors: [inputImageError] },\n    { code: '<input type=\"image\" alt={undefined} />', errors: [inputImageError] },\n    { code: '<input type=\"image\">Foo</input>', errors: [inputImageError] },\n    { code: '<input type=\"image\" {...this.props} />', errors: [inputImageError] },\n    { code: '<input type=\"image\" aria-label=\"\" />', errors: [inputImageError] },\n    { code: '<input type=\"image\" aria-label={undefined} />', errors: [inputImageError] },\n    { code: '<input type=\"image\" aria-labelledby=\"\" />', errors: [inputImageError] },\n    { code: '<input type=\"image\" aria-labelledby={undefined} />', errors: [inputImageError] },\n\n    // CUSTOM ELEMENT TESTS FOR ARRAY OPTION TESTS\n    {\n      code: '<Thumbnail />;',\n      errors: [missingPropError('Thumbnail')],\n      options: array,\n    },\n    {\n      code: '<Thumbnail alt />;',\n      errors: [altValueError('Thumbnail')],\n      options: array,\n    },\n    {\n      code: '<Thumbnail alt={undefined} />;',\n      errors: [altValueError('Thumbnail')],\n      options: array,\n    },\n    {\n      code: '<Thumbnail src=\"xyz\" />',\n      errors: [missingPropError('Thumbnail')],\n      options: array,\n    },\n    {\n      code: '<Thumbnail {...this.props} />',\n      errors: [missingPropError('Thumbnail')],\n      options: array,\n    },\n    { code: '<Image />;', errors: [missingPropError('Image')], options: array },\n    { code: '<Image alt />;', errors: [altValueError('Image')], options: array },\n    {\n      code: '<Image alt={undefined} />;',\n      errors: [altValueError('Image')],\n      options: array,\n    },\n    {\n      code: '<Image src=\"xyz\" />',\n      errors: [missingPropError('Image')],\n      options: array,\n    },\n    {\n      code: '<Image {...this.props} />',\n      errors: [missingPropError('Image')],\n      options: array,\n    },\n    { code: '<Object />', errors: [objectError], options: array },\n    { code: '<Object><div aria-hidden /></Object>', errors: [objectError], options: array },\n    { code: '<Object title={undefined} />', errors: [objectError], options: array },\n    { code: '<Area />', errors: [areaError], options: array },\n    { code: '<Area alt />', errors: [areaError], options: array },\n    { code: '<Area alt={undefined} />', errors: [areaError], options: array },\n    { code: '<Area src=\"xyz\" />', errors: [areaError], options: array },\n    { code: '<Area {...this.props} />', errors: [areaError], options: array },\n    { code: '<InputImage />', errors: [inputImageError], options: array },\n    { code: '<InputImage alt />', errors: [inputImageError], options: array },\n    { code: '<InputImage alt={undefined} />', errors: [inputImageError], options: array },\n    { code: '<InputImage>Foo</InputImage>', errors: [inputImageError], options: array },\n    { code: '<InputImage {...this.props} />', errors: [inputImageError], options: array },\n    { code: '<Input type=\"image\" />', errors: [inputImageError], settings: componentsSettings },\n  ].map(parserOptionsMapper),\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}