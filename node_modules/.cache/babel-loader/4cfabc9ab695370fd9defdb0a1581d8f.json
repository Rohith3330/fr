{"ast":null,"code":"'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $TypeError = GetIntrinsic('%TypeError%');\n\nvar callBound = require('call-bind/callBound');\n\nvar forEach = require('../helpers/forEach');\n\nvar every = require('../helpers/every');\n\nvar some = require('../helpers/some');\n\nvar OwnPropertyKeys = require('../helpers/OwnPropertyKeys');\n\nvar $isEnumerable = callBound('Object.prototype.propertyIsEnumerable');\n\nvar CreateDataPropertyOrThrow = require('./CreateDataPropertyOrThrow');\n\nvar Get = require('./Get');\n\nvar IsArray = require('./IsArray');\n\nvar IsIntegralNumber = require('./IsIntegralNumber');\n\nvar IsPropertyKey = require('./IsPropertyKey');\n\nvar SameValue = require('./SameValue');\n\nvar ToNumber = require('./ToNumber');\n\nvar ToObject = require('./ToObject');\n\nvar Type = require('./Type'); // https://www.ecma-international.org/ecma-262/12.0/#sec-copydataproperties\n\n\nmodule.exports = function CopyDataProperties(target, source, excludedItems) {\n  if (Type(target) !== 'Object') {\n    throw new $TypeError('Assertion failed: \"target\" must be an Object');\n  }\n\n  if (!IsArray(excludedItems) || !every(excludedItems, IsPropertyKey)) {\n    throw new $TypeError('Assertion failed: \"excludedItems\" must be a List of Property Keys');\n  }\n\n  if (typeof source === 'undefined' || source === null) {\n    return target;\n  }\n\n  var from = ToObject(source);\n  var keys = OwnPropertyKeys(from);\n  forEach(keys, function (nextKey) {\n    var excluded = some(excludedItems, function (e) {\n      return SameValue(e, nextKey) === true;\n    });\n    /*\n    var excluded = false;\n    \tforEach(excludedItems, function (e) {\n    \tif (SameValue(e, nextKey) === true) {\n    \t\texcluded = true;\n    \t}\n    });\n    */\n\n    var enumerable = $isEnumerable(from, nextKey) || // this is to handle string keys being non-enumerable in older engines\n    typeof source === 'string' && nextKey >= 0 && IsIntegralNumber(ToNumber(nextKey));\n\n    if (excluded === false && enumerable) {\n      var propValue = Get(from, nextKey);\n      CreateDataPropertyOrThrow(target, nextKey, propValue);\n    }\n  });\n  return target;\n};","map":{"version":3,"names":["GetIntrinsic","require","$TypeError","callBound","forEach","every","some","OwnPropertyKeys","$isEnumerable","CreateDataPropertyOrThrow","Get","IsArray","IsIntegralNumber","IsPropertyKey","SameValue","ToNumber","ToObject","Type","module","exports","CopyDataProperties","target","source","excludedItems","from","keys","nextKey","excluded","e","enumerable","propValue"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/es-abstract/2021/CopyDataProperties.js"],"sourcesContent":["'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $TypeError = GetIntrinsic('%TypeError%');\n\nvar callBound = require('call-bind/callBound');\nvar forEach = require('../helpers/forEach');\nvar every = require('../helpers/every');\nvar some = require('../helpers/some');\nvar OwnPropertyKeys = require('../helpers/OwnPropertyKeys');\n\nvar $isEnumerable = callBound('Object.prototype.propertyIsEnumerable');\n\nvar CreateDataPropertyOrThrow = require('./CreateDataPropertyOrThrow');\nvar Get = require('./Get');\nvar IsArray = require('./IsArray');\nvar IsIntegralNumber = require('./IsIntegralNumber');\nvar IsPropertyKey = require('./IsPropertyKey');\nvar SameValue = require('./SameValue');\nvar ToNumber = require('./ToNumber');\nvar ToObject = require('./ToObject');\nvar Type = require('./Type');\n\n// https://www.ecma-international.org/ecma-262/12.0/#sec-copydataproperties\n\nmodule.exports = function CopyDataProperties(target, source, excludedItems) {\n\tif (Type(target) !== 'Object') {\n\t\tthrow new $TypeError('Assertion failed: \"target\" must be an Object');\n\t}\n\n\tif (!IsArray(excludedItems) || !every(excludedItems, IsPropertyKey)) {\n\t\tthrow new $TypeError('Assertion failed: \"excludedItems\" must be a List of Property Keys');\n\t}\n\n\tif (typeof source === 'undefined' || source === null) {\n\t\treturn target;\n\t}\n\n\tvar from = ToObject(source);\n\n\tvar keys = OwnPropertyKeys(from);\n\tforEach(keys, function (nextKey) {\n\t\tvar excluded = some(excludedItems, function (e) {\n\t\t\treturn SameValue(e, nextKey) === true;\n\t\t});\n\t\t/*\n\t\tvar excluded = false;\n\n\t\tforEach(excludedItems, function (e) {\n\t\t\tif (SameValue(e, nextKey) === true) {\n\t\t\t\texcluded = true;\n\t\t\t}\n\t\t});\n\t\t*/\n\n\t\tvar enumerable = $isEnumerable(from, nextKey) || (\n\t\t// this is to handle string keys being non-enumerable in older engines\n\t\t\ttypeof source === 'string'\n\t\t\t&& nextKey >= 0\n\t\t\t&& IsIntegralNumber(ToNumber(nextKey))\n\t\t);\n\t\tif (excluded === false && enumerable) {\n\t\t\tvar propValue = Get(from, nextKey);\n\t\t\tCreateDataPropertyOrThrow(target, nextKey, propValue);\n\t\t}\n\t});\n\n\treturn target;\n};\n"],"mappings":"AAAA;;AAEA,IAAIA,YAAY,GAAGC,OAAO,CAAC,eAAD,CAA1B;;AAEA,IAAIC,UAAU,GAAGF,YAAY,CAAC,aAAD,CAA7B;;AAEA,IAAIG,SAAS,GAAGF,OAAO,CAAC,qBAAD,CAAvB;;AACA,IAAIG,OAAO,GAAGH,OAAO,CAAC,oBAAD,CAArB;;AACA,IAAII,KAAK,GAAGJ,OAAO,CAAC,kBAAD,CAAnB;;AACA,IAAIK,IAAI,GAAGL,OAAO,CAAC,iBAAD,CAAlB;;AACA,IAAIM,eAAe,GAAGN,OAAO,CAAC,4BAAD,CAA7B;;AAEA,IAAIO,aAAa,GAAGL,SAAS,CAAC,uCAAD,CAA7B;;AAEA,IAAIM,yBAAyB,GAAGR,OAAO,CAAC,6BAAD,CAAvC;;AACA,IAAIS,GAAG,GAAGT,OAAO,CAAC,OAAD,CAAjB;;AACA,IAAIU,OAAO,GAAGV,OAAO,CAAC,WAAD,CAArB;;AACA,IAAIW,gBAAgB,GAAGX,OAAO,CAAC,oBAAD,CAA9B;;AACA,IAAIY,aAAa,GAAGZ,OAAO,CAAC,iBAAD,CAA3B;;AACA,IAAIa,SAAS,GAAGb,OAAO,CAAC,aAAD,CAAvB;;AACA,IAAIc,QAAQ,GAAGd,OAAO,CAAC,YAAD,CAAtB;;AACA,IAAIe,QAAQ,GAAGf,OAAO,CAAC,YAAD,CAAtB;;AACA,IAAIgB,IAAI,GAAGhB,OAAO,CAAC,QAAD,CAAlB,C,CAEA;;;AAEAiB,MAAM,CAACC,OAAP,GAAiB,SAASC,kBAAT,CAA4BC,MAA5B,EAAoCC,MAApC,EAA4CC,aAA5C,EAA2D;EAC3E,IAAIN,IAAI,CAACI,MAAD,CAAJ,KAAiB,QAArB,EAA+B;IAC9B,MAAM,IAAInB,UAAJ,CAAe,8CAAf,CAAN;EACA;;EAED,IAAI,CAACS,OAAO,CAACY,aAAD,CAAR,IAA2B,CAAClB,KAAK,CAACkB,aAAD,EAAgBV,aAAhB,CAArC,EAAqE;IACpE,MAAM,IAAIX,UAAJ,CAAe,mEAAf,CAAN;EACA;;EAED,IAAI,OAAOoB,MAAP,KAAkB,WAAlB,IAAiCA,MAAM,KAAK,IAAhD,EAAsD;IACrD,OAAOD,MAAP;EACA;;EAED,IAAIG,IAAI,GAAGR,QAAQ,CAACM,MAAD,CAAnB;EAEA,IAAIG,IAAI,GAAGlB,eAAe,CAACiB,IAAD,CAA1B;EACApB,OAAO,CAACqB,IAAD,EAAO,UAAUC,OAAV,EAAmB;IAChC,IAAIC,QAAQ,GAAGrB,IAAI,CAACiB,aAAD,EAAgB,UAAUK,CAAV,EAAa;MAC/C,OAAOd,SAAS,CAACc,CAAD,EAAIF,OAAJ,CAAT,KAA0B,IAAjC;IACA,CAFkB,CAAnB;IAGA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;IAGE,IAAIG,UAAU,GAAGrB,aAAa,CAACgB,IAAD,EAAOE,OAAP,CAAb,IACjB;IACC,OAAOJ,MAAP,KAAkB,QAAlB,IACGI,OAAO,IAAI,CADd,IAEGd,gBAAgB,CAACG,QAAQ,CAACW,OAAD,CAAT,CAJpB;;IAMA,IAAIC,QAAQ,KAAK,KAAb,IAAsBE,UAA1B,EAAsC;MACrC,IAAIC,SAAS,GAAGpB,GAAG,CAACc,IAAD,EAAOE,OAAP,CAAnB;MACAjB,yBAAyB,CAACY,MAAD,EAASK,OAAT,EAAkBI,SAAlB,CAAzB;IACA;EACD,CAxBM,CAAP;EA0BA,OAAOT,MAAP;AACA,CA3CD"},"metadata":{},"sourceType":"script"}