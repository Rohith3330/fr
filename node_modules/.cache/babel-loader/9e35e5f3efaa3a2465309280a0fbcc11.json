{"ast":null,"code":"/**\n * @fileoverview Prevent passing of children as props\n * @author Benjamin Stepp\n */\n'use strict';\n\nconst docsUrl = require('../util/docsUrl');\n\nconst isCreateElement = require('../util/isCreateElement');\n\nconst report = require('../util/report'); // ------------------------------------------------------------------------------\n// Helpers\n// ------------------------------------------------------------------------------\n\n/**\n * Checks if the node is a createElement call with a props literal.\n * @param {ASTNode} node - The AST node being checked.\n * @param {Context} context - The AST node being checked.\n * @returns {Boolean} - True if node is a createElement call with a props\n * object literal, False if not.\n*/\n\n\nfunction isCreateElementWithProps(node, context) {\n  return isCreateElement(node, context) && node.arguments.length > 1 && node.arguments[1].type === 'ObjectExpression';\n} // ------------------------------------------------------------------------------\n// Rule Definition\n// ------------------------------------------------------------------------------\n\n\nconst messages = {\n  nestChildren: 'Do not pass children as props. Instead, nest children between the opening and closing tags.',\n  passChildrenAsArgs: 'Do not pass children as props. Instead, pass them as additional arguments to React.createElement.',\n  nestFunction: 'Do not nest a function between the opening and closing tags. Instead, pass it as a prop.',\n  passFunctionAsArgs: 'Do not pass a function as an additional argument to React.createElement. Instead, pass it as a prop.'\n};\nmodule.exports = {\n  meta: {\n    docs: {\n      description: 'Disallow passing of children as props',\n      category: 'Best Practices',\n      recommended: true,\n      url: docsUrl('no-children-prop')\n    },\n    messages,\n    schema: [{\n      type: 'object',\n      properties: {\n        allowFunctions: {\n          type: 'boolean',\n          default: false\n        }\n      },\n      additionalProperties: false\n    }]\n  },\n\n  create(context) {\n    const configuration = context.options[0] || {};\n\n    function isFunction(node) {\n      return configuration.allowFunctions && (node.type === 'ArrowFunctionExpression' || node.type === 'FunctionExpression');\n    }\n\n    return {\n      JSXAttribute(node) {\n        if (node.name.name !== 'children') {\n          return;\n        }\n\n        const value = node.value;\n\n        if (value && value.type === 'JSXExpressionContainer' && isFunction(value.expression)) {\n          return;\n        }\n\n        report(context, messages.nestChildren, 'nestChildren', {\n          node\n        });\n      },\n\n      CallExpression(node) {\n        if (!isCreateElementWithProps(node, context)) {\n          return;\n        }\n\n        const props = node.arguments[1].properties;\n        const childrenProp = props.find(prop => prop.key && prop.key.name === 'children');\n\n        if (childrenProp) {\n          if (childrenProp.value && !isFunction(childrenProp.value)) {\n            report(context, messages.passChildrenAsArgs, 'passChildrenAsArgs', {\n              node\n            });\n          }\n        } else if (node.arguments.length === 3) {\n          const children = node.arguments[2];\n\n          if (isFunction(children)) {\n            report(context, messages.passFunctionAsArgs, 'passFunctionAsArgs', {\n              node\n            });\n          }\n        }\n      },\n\n      JSXElement(node) {\n        const children = node.children;\n\n        if (children && children.length === 1 && children[0].type === 'JSXExpressionContainer') {\n          if (isFunction(children[0].expression)) {\n            report(context, messages.nestFunction, 'nestFunction', {\n              node\n            });\n          }\n        }\n      }\n\n    };\n  }\n\n};","map":{"version":3,"names":["docsUrl","require","isCreateElement","report","isCreateElementWithProps","node","context","arguments","length","type","messages","nestChildren","passChildrenAsArgs","nestFunction","passFunctionAsArgs","module","exports","meta","docs","description","category","recommended","url","schema","properties","allowFunctions","default","additionalProperties","create","configuration","options","isFunction","JSXAttribute","name","value","expression","CallExpression","props","childrenProp","find","prop","key","children","JSXElement"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/eslint-plugin-react/lib/rules/no-children-prop.js"],"sourcesContent":["/**\n * @fileoverview Prevent passing of children as props\n * @author Benjamin Stepp\n */\n\n'use strict';\n\nconst docsUrl = require('../util/docsUrl');\nconst isCreateElement = require('../util/isCreateElement');\nconst report = require('../util/report');\n\n// ------------------------------------------------------------------------------\n// Helpers\n// ------------------------------------------------------------------------------\n\n/**\n * Checks if the node is a createElement call with a props literal.\n * @param {ASTNode} node - The AST node being checked.\n * @param {Context} context - The AST node being checked.\n * @returns {Boolean} - True if node is a createElement call with a props\n * object literal, False if not.\n*/\nfunction isCreateElementWithProps(node, context) {\n  return isCreateElement(node, context)\n    && node.arguments.length > 1\n    && node.arguments[1].type === 'ObjectExpression';\n}\n\n// ------------------------------------------------------------------------------\n// Rule Definition\n// ------------------------------------------------------------------------------\n\nconst messages = {\n  nestChildren: 'Do not pass children as props. Instead, nest children between the opening and closing tags.',\n  passChildrenAsArgs: 'Do not pass children as props. Instead, pass them as additional arguments to React.createElement.',\n  nestFunction: 'Do not nest a function between the opening and closing tags. Instead, pass it as a prop.',\n  passFunctionAsArgs: 'Do not pass a function as an additional argument to React.createElement. Instead, pass it as a prop.',\n};\n\nmodule.exports = {\n  meta: {\n    docs: {\n      description: 'Disallow passing of children as props',\n      category: 'Best Practices',\n      recommended: true,\n      url: docsUrl('no-children-prop'),\n    },\n\n    messages,\n\n    schema: [{\n      type: 'object',\n      properties: {\n        allowFunctions: {\n          type: 'boolean',\n          default: false,\n        },\n      },\n      additionalProperties: false,\n    }],\n  },\n  create(context) {\n    const configuration = context.options[0] || {};\n\n    function isFunction(node) {\n      return configuration.allowFunctions && (node.type === 'ArrowFunctionExpression' || node.type === 'FunctionExpression');\n    }\n\n    return {\n      JSXAttribute(node) {\n        if (node.name.name !== 'children') {\n          return;\n        }\n\n        const value = node.value;\n        if (value && value.type === 'JSXExpressionContainer' && isFunction(value.expression)) {\n          return;\n        }\n\n        report(context, messages.nestChildren, 'nestChildren', {\n          node,\n        });\n      },\n      CallExpression(node) {\n        if (!isCreateElementWithProps(node, context)) {\n          return;\n        }\n\n        const props = node.arguments[1].properties;\n        const childrenProp = props.find((prop) => prop.key && prop.key.name === 'children');\n\n        if (childrenProp) {\n          if (childrenProp.value && !isFunction(childrenProp.value)) {\n            report(context, messages.passChildrenAsArgs, 'passChildrenAsArgs', {\n              node,\n            });\n          }\n        } else if (node.arguments.length === 3) {\n          const children = node.arguments[2];\n          if (isFunction(children)) {\n            report(context, messages.passFunctionAsArgs, 'passFunctionAsArgs', {\n              node,\n            });\n          }\n        }\n      },\n      JSXElement(node) {\n        const children = node.children;\n        if (children && children.length === 1 && children[0].type === 'JSXExpressionContainer') {\n          if (isFunction(children[0].expression)) {\n            report(context, messages.nestFunction, 'nestFunction', {\n              node,\n            });\n          }\n        }\n      },\n    };\n  },\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}