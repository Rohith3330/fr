{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getImportSource = getImportSource;\nexports.getRequireSource = getRequireSource;\nexports.isPolyfillSource = isPolyfillSource;\n\nvar _t = require(\"@babel/types\");\n\nconst {\n  isCallExpression,\n  isExpressionStatement,\n  isIdentifier,\n  isStringLiteral\n} = _t;\n\nfunction getImportSource(_ref) {\n  let {\n    node\n  } = _ref;\n  if (node.specifiers.length === 0) return node.source.value;\n}\n\nfunction getRequireSource(_ref2) {\n  let {\n    node\n  } = _ref2;\n  if (!isExpressionStatement(node)) return;\n  const {\n    expression\n  } = node;\n\n  if (isCallExpression(expression) && isIdentifier(expression.callee) && expression.callee.name === \"require\" && expression.arguments.length === 1 && isStringLiteral(expression.arguments[0])) {\n    return expression.arguments[0].value;\n  }\n}\n\nfunction isPolyfillSource(source) {\n  return source === \"@babel/polyfill\" || source === \"core-js\";\n}","map":{"version":3,"mappings":";;;;;;;;;AAAA;;;EACEA;EACAC;EACAC;EACAC;;;AAKK,SAASC,eAAT,OAAkE;EAAA,IAAzC;IAAEC;EAAF,CAAyC;EACvE,IAAIA,IAAI,CAACC,UAALD,CAAgBE,MAAhBF,KAA2B,CAA/B,EAAkC,OAAOA,IAAI,CAACG,MAALH,CAAYI,KAAnB;AACnC;;AAEM,SAASC,gBAAT,QAA8C;EAAA,IAApB;IAAEL;EAAF,CAAoB;EACnD,IAAI,CAACJ,qBAAqB,CAACI,IAAD,CAA1B,EAAkC;EAClC,MAAM;IAAEM;EAAF,IAAiBN,IAAvB;;EACA,IACEL,gBAAgB,CAACW,UAAD,CAAhBX,IACAE,YAAY,CAACS,UAAU,CAACC,MAAZ,CADZZ,IAEAW,UAAU,CAACC,MAAXD,CAAkBE,IAAlBF,KAA2B,SAF3BX,IAGAW,UAAU,CAACG,SAAXH,CAAqBJ,MAArBI,KAAgC,CAHhCX,IAIAG,eAAe,CAACQ,UAAU,CAACG,SAAXH,CAAqB,CAArBA,CAAD,CALjB,EAME;IACA,OAAOA,UAAU,CAACG,SAAXH,CAAqB,CAArBA,EAAwBF,KAA/B;EACD;AACF;;AAEM,SAASM,gBAAT,CAA0BP,MAA1B,EAA2D;EAChE,OAAOA,MAAM,KAAK,iBAAXA,IAAgCA,MAAM,KAAK,SAAlD;AACD","names":["isCallExpression","isExpressionStatement","isIdentifier","isStringLiteral","getImportSource","node","specifiers","length","source","value","getRequireSource","expression","callee","name","arguments","isPolyfillSource"],"sources":["C:\\Users\\Rohith\\mern\\frontend\\node_modules\\@babel\\preset-env\\src\\polyfills\\utils.ts"],"sourcesContent":["import {\n  isCallExpression,\n  isExpressionStatement,\n  isIdentifier,\n  isStringLiteral,\n} from \"@babel/types\";\nimport type * as t from \"@babel/types\";\nimport type { NodePath } from \"@babel/traverse\";\n\nexport function getImportSource({ node }: NodePath<t.ImportDeclaration>) {\n  if (node.specifiers.length === 0) return node.source.value;\n}\n\nexport function getRequireSource({ node }: NodePath) {\n  if (!isExpressionStatement(node)) return;\n  const { expression } = node;\n  if (\n    isCallExpression(expression) &&\n    isIdentifier(expression.callee) &&\n    expression.callee.name === \"require\" &&\n    expression.arguments.length === 1 &&\n    isStringLiteral(expression.arguments[0])\n  ) {\n    return expression.arguments[0].value;\n  }\n}\n\nexport function isPolyfillSource(source?: string | null): boolean {\n  return source === \"@babel/polyfill\" || source === \"core-js\";\n}\n"]},"metadata":{},"sourceType":"script"}