{"ast":null,"code":"/**\n * @fileoverview Prevent React to be marked as unused\n * @author Glen Mailer\n */\n'use strict';\n\nconst pragmaUtil = require('../util/pragma');\n\nconst docsUrl = require('../util/docsUrl'); // ------------------------------------------------------------------------------\n// Rule Definition\n// ------------------------------------------------------------------------------\n\n\nmodule.exports = {\n  // eslint-disable-next-line eslint-plugin/prefer-message-ids -- https://github.com/not-an-aardvark/eslint-plugin-eslint-plugin/issues/292\n  meta: {\n    docs: {\n      description: 'Disallow React to be incorrectly marked as unused',\n      category: 'Best Practices',\n      recommended: true,\n      url: docsUrl('jsx-uses-react')\n    },\n    schema: []\n  },\n\n  create(context) {\n    const pragma = pragmaUtil.getFromContext(context);\n    const fragment = pragmaUtil.getFragmentFromContext(context);\n\n    function handleOpeningElement() {\n      context.markVariableAsUsed(pragma);\n    } // --------------------------------------------------------------------------\n    // Public\n    // --------------------------------------------------------------------------\n\n\n    return {\n      JSXOpeningElement: handleOpeningElement,\n      JSXOpeningFragment: handleOpeningElement,\n\n      JSXFragment() {\n        context.markVariableAsUsed(fragment);\n      }\n\n    };\n  }\n\n};","map":{"version":3,"names":["pragmaUtil","require","docsUrl","module","exports","meta","docs","description","category","recommended","url","schema","create","context","pragma","getFromContext","fragment","getFragmentFromContext","handleOpeningElement","markVariableAsUsed","JSXOpeningElement","JSXOpeningFragment","JSXFragment"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/eslint-plugin-react/lib/rules/jsx-uses-react.js"],"sourcesContent":["/**\n * @fileoverview Prevent React to be marked as unused\n * @author Glen Mailer\n */\n\n'use strict';\n\nconst pragmaUtil = require('../util/pragma');\nconst docsUrl = require('../util/docsUrl');\n\n// ------------------------------------------------------------------------------\n// Rule Definition\n// ------------------------------------------------------------------------------\n\nmodule.exports = {\n  // eslint-disable-next-line eslint-plugin/prefer-message-ids -- https://github.com/not-an-aardvark/eslint-plugin-eslint-plugin/issues/292\n  meta: {\n    docs: {\n      description: 'Disallow React to be incorrectly marked as unused',\n      category: 'Best Practices',\n      recommended: true,\n      url: docsUrl('jsx-uses-react'),\n    },\n    schema: [],\n  },\n\n  create(context) {\n    const pragma = pragmaUtil.getFromContext(context);\n    const fragment = pragmaUtil.getFragmentFromContext(context);\n\n    function handleOpeningElement() {\n      context.markVariableAsUsed(pragma);\n    }\n    // --------------------------------------------------------------------------\n    // Public\n    // --------------------------------------------------------------------------\n\n    return {\n      JSXOpeningElement: handleOpeningElement,\n      JSXOpeningFragment: handleOpeningElement,\n      JSXFragment() {\n        context.markVariableAsUsed(fragment);\n      },\n    };\n  },\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;;AAEA,MAAMA,UAAU,GAAGC,OAAO,CAAC,gBAAD,CAA1B;;AACA,MAAMC,OAAO,GAAGD,OAAO,CAAC,iBAAD,CAAvB,C,CAEA;AACA;AACA;;;AAEAE,MAAM,CAACC,OAAP,GAAiB;EACf;EACAC,IAAI,EAAE;IACJC,IAAI,EAAE;MACJC,WAAW,EAAE,mDADT;MAEJC,QAAQ,EAAE,gBAFN;MAGJC,WAAW,EAAE,IAHT;MAIJC,GAAG,EAAER,OAAO,CAAC,gBAAD;IAJR,CADF;IAOJS,MAAM,EAAE;EAPJ,CAFS;;EAYfC,MAAM,CAACC,OAAD,EAAU;IACd,MAAMC,MAAM,GAAGd,UAAU,CAACe,cAAX,CAA0BF,OAA1B,CAAf;IACA,MAAMG,QAAQ,GAAGhB,UAAU,CAACiB,sBAAX,CAAkCJ,OAAlC,CAAjB;;IAEA,SAASK,oBAAT,GAAgC;MAC9BL,OAAO,CAACM,kBAAR,CAA2BL,MAA3B;IACD,CANa,CAOd;IACA;IACA;;;IAEA,OAAO;MACLM,iBAAiB,EAAEF,oBADd;MAELG,kBAAkB,EAAEH,oBAFf;;MAGLI,WAAW,GAAG;QACZT,OAAO,CAACM,kBAAR,CAA2BH,QAA3B;MACD;;IALI,CAAP;EAOD;;AA9Bc,CAAjB"},"metadata":{},"sourceType":"script"}