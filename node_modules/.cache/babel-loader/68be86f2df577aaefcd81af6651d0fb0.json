{"ast":null,"code":"'use strict';\n\nvar shorthandSetter = require('../parsers').shorthandSetter;\n\nvar shorthandGetter = require('../parsers').shorthandGetter;\n\nvar shorthand_for = {\n  'border-width': require('./borderWidth'),\n  'border-style': require('./borderStyle'),\n  'border-color': require('./borderColor')\n};\nvar myShorthandSetter = shorthandSetter('border', shorthand_for);\nvar myShorthandGetter = shorthandGetter('border', shorthand_for);\nmodule.exports.definition = {\n  set: function (v) {\n    if (v.toString().toLowerCase() === 'none') {\n      v = '';\n    }\n\n    myShorthandSetter.call(this, v);\n    this.removeProperty('border-top');\n    this.removeProperty('border-left');\n    this.removeProperty('border-right');\n    this.removeProperty('border-bottom');\n    this._values['border-top'] = this._values.border;\n    this._values['border-left'] = this._values.border;\n    this._values['border-right'] = this._values.border;\n    this._values['border-bottom'] = this._values.border;\n  },\n  get: myShorthandGetter,\n  enumerable: true,\n  configurable: true\n};","map":{"version":3,"names":["shorthandSetter","require","shorthandGetter","shorthand_for","myShorthandSetter","myShorthandGetter","module","exports","definition","set","v","toString","toLowerCase","call","removeProperty","_values","border","get","enumerable","configurable"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/cssstyle/lib/properties/border.js"],"sourcesContent":["'use strict';\n\nvar shorthandSetter = require('../parsers').shorthandSetter;\nvar shorthandGetter = require('../parsers').shorthandGetter;\n\nvar shorthand_for = {\n  'border-width': require('./borderWidth'),\n  'border-style': require('./borderStyle'),\n  'border-color': require('./borderColor'),\n};\n\nvar myShorthandSetter = shorthandSetter('border', shorthand_for);\nvar myShorthandGetter = shorthandGetter('border', shorthand_for);\n\nmodule.exports.definition = {\n  set: function(v) {\n    if (v.toString().toLowerCase() === 'none') {\n      v = '';\n    }\n    myShorthandSetter.call(this, v);\n    this.removeProperty('border-top');\n    this.removeProperty('border-left');\n    this.removeProperty('border-right');\n    this.removeProperty('border-bottom');\n    this._values['border-top'] = this._values.border;\n    this._values['border-left'] = this._values.border;\n    this._values['border-right'] = this._values.border;\n    this._values['border-bottom'] = this._values.border;\n  },\n  get: myShorthandGetter,\n  enumerable: true,\n  configurable: true,\n};\n"],"mappings":"AAAA;;AAEA,IAAIA,eAAe,GAAGC,OAAO,CAAC,YAAD,CAAP,CAAsBD,eAA5C;;AACA,IAAIE,eAAe,GAAGD,OAAO,CAAC,YAAD,CAAP,CAAsBC,eAA5C;;AAEA,IAAIC,aAAa,GAAG;EAClB,gBAAgBF,OAAO,CAAC,eAAD,CADL;EAElB,gBAAgBA,OAAO,CAAC,eAAD,CAFL;EAGlB,gBAAgBA,OAAO,CAAC,eAAD;AAHL,CAApB;AAMA,IAAIG,iBAAiB,GAAGJ,eAAe,CAAC,QAAD,EAAWG,aAAX,CAAvC;AACA,IAAIE,iBAAiB,GAAGH,eAAe,CAAC,QAAD,EAAWC,aAAX,CAAvC;AAEAG,MAAM,CAACC,OAAP,CAAeC,UAAf,GAA4B;EAC1BC,GAAG,EAAE,UAASC,CAAT,EAAY;IACf,IAAIA,CAAC,CAACC,QAAF,GAAaC,WAAb,OAA+B,MAAnC,EAA2C;MACzCF,CAAC,GAAG,EAAJ;IACD;;IACDN,iBAAiB,CAACS,IAAlB,CAAuB,IAAvB,EAA6BH,CAA7B;IACA,KAAKI,cAAL,CAAoB,YAApB;IACA,KAAKA,cAAL,CAAoB,aAApB;IACA,KAAKA,cAAL,CAAoB,cAApB;IACA,KAAKA,cAAL,CAAoB,eAApB;IACA,KAAKC,OAAL,CAAa,YAAb,IAA6B,KAAKA,OAAL,CAAaC,MAA1C;IACA,KAAKD,OAAL,CAAa,aAAb,IAA8B,KAAKA,OAAL,CAAaC,MAA3C;IACA,KAAKD,OAAL,CAAa,cAAb,IAA+B,KAAKA,OAAL,CAAaC,MAA5C;IACA,KAAKD,OAAL,CAAa,eAAb,IAAgC,KAAKA,OAAL,CAAaC,MAA7C;EACD,CAdyB;EAe1BC,GAAG,EAAEZ,iBAfqB;EAgB1Ba,UAAU,EAAE,IAhBc;EAiB1BC,YAAY,EAAE;AAjBY,CAA5B"},"metadata":{},"sourceType":"script"}