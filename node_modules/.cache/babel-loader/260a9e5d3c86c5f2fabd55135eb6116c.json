{"ast":null,"code":"import stripAnsi from 'strip-ansi';\nimport charRegex from 'char-regex';\nexport default function stringLength(string) {\n  let {\n    countAnsiEscapeCodes = false\n  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (string === '') {\n    return 0;\n  }\n\n  if (!countAnsiEscapeCodes) {\n    string = stripAnsi(string);\n  }\n\n  if (string === '') {\n    return 0;\n  }\n\n  return string.match(charRegex()).length;\n}","map":{"version":3,"names":["stripAnsi","charRegex","stringLength","string","countAnsiEscapeCodes","match","length"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/jest-watch-typeahead/node_modules/string-length/index.js"],"sourcesContent":["import stripAnsi from 'strip-ansi';\nimport charRegex from 'char-regex';\n\nexport default function stringLength(string, {countAnsiEscapeCodes = false} = {}) {\n\tif (string === '') {\n\t\treturn 0;\n\t}\n\n\tif (!countAnsiEscapeCodes) {\n\t\tstring = stripAnsi(string);\n\t}\n\n\tif (string === '') {\n\t\treturn 0;\n\t}\n\n\treturn string.match(charRegex()).length;\n}\n"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,eAAe,SAASC,YAAT,CAAsBC,MAAtB,EAAmE;EAAA,IAArC;IAACC,oBAAoB,GAAG;EAAxB,CAAqC,uEAAJ,EAAI;;EACjF,IAAID,MAAM,KAAK,EAAf,EAAmB;IAClB,OAAO,CAAP;EACA;;EAED,IAAI,CAACC,oBAAL,EAA2B;IAC1BD,MAAM,GAAGH,SAAS,CAACG,MAAD,CAAlB;EACA;;EAED,IAAIA,MAAM,KAAK,EAAf,EAAmB;IAClB,OAAO,CAAP;EACA;;EAED,OAAOA,MAAM,CAACE,KAAP,CAAaJ,SAAS,EAAtB,EAA0BK,MAAjC;AACA"},"metadata":{},"sourceType":"module"}