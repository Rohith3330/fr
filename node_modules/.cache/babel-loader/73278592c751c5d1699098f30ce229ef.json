{"ast":null,"code":"/* global __react_refresh_error_overlay__, __react_refresh_socket__, __resourceQuery */\nconst events = require('./utils/errorEventHandlers.js');\n\nconst formatWebpackErrors = require('./utils/formatWebpackErrors.js');\n\nconst runWithPatchedUrl = require('./utils/patchUrl.js');\n\nconst runWithRetry = require('./utils/retry.js'); // Setup error states\n\n\nlet isHotReload = false;\nlet hasRuntimeErrors = false;\n/**\n * Try dismissing the compile error overlay.\n * This will also reset runtime error records (if any),\n * because we have new source to evaluate.\n * @returns {void}\n */\n\nfunction tryDismissErrorOverlay() {\n  __react_refresh_error_overlay__.clearCompileError();\n\n  __react_refresh_error_overlay__.clearRuntimeErrors(!hasRuntimeErrors);\n\n  hasRuntimeErrors = false;\n}\n/**\n * A function called after a compile success signal is received from Webpack.\n * @returns {void}\n */\n\n\nfunction handleCompileSuccess() {\n  isHotReload = true;\n\n  if (isHotReload) {\n    tryDismissErrorOverlay();\n  }\n}\n/**\n * A function called after a compile errored signal is received from Webpack.\n * @param {string[]} errors\n * @returns {void}\n */\n\n\nfunction handleCompileErrors(errors) {\n  isHotReload = true;\n  const formattedErrors = formatWebpackErrors(errors); // Only show the first error\n\n  __react_refresh_error_overlay__.showCompileError(formattedErrors[0]);\n}\n/**\n * Handles compilation messages from Webpack.\n * Integrates with a compile error overlay.\n * @param {*} message A Webpack HMR message sent via WebSockets.\n * @returns {void}\n */\n\n\nfunction compileMessageHandler(message) {\n  switch (message.type) {\n    case 'ok':\n    case 'still-ok':\n    case 'warnings':\n      {\n        // TODO: Implement handling for warnings\n        handleCompileSuccess();\n        break;\n      }\n\n    case 'errors':\n      {\n        handleCompileErrors(message.data);\n        break;\n      }\n\n    default:\n      {// Do nothing.\n      }\n  }\n}\n\nif (process.env.NODE_ENV !== 'production') {\n  if (typeof window !== 'undefined') {\n    runWithPatchedUrl(function setupOverlay() {\n      // Only register if no other overlay have been registered\n      if (!window.__reactRefreshOverlayInjected && __react_refresh_socket__) {\n        // Registers handlers for compile errors with retry -\n        // This is to prevent mismatching injection order causing errors to be thrown\n        runWithRetry(function initSocket() {\n          __react_refresh_socket__.init(compileMessageHandler, __resourceQuery);\n        }, 3); // Registers handlers for runtime errors\n\n        events.handleError(function handleError(error) {\n          hasRuntimeErrors = true;\n\n          __react_refresh_error_overlay__.handleRuntimeError(error);\n        });\n        events.handleUnhandledRejection(function handleUnhandledPromiseRejection(error) {\n          hasRuntimeErrors = true;\n\n          __react_refresh_error_overlay__.handleRuntimeError(error);\n        }); // Mark overlay as injected to prevent double-injection\n\n        window.__reactRefreshOverlayInjected = true;\n      }\n    });\n  }\n}","map":{"version":3,"names":["events","require","formatWebpackErrors","runWithPatchedUrl","runWithRetry","isHotReload","hasRuntimeErrors","tryDismissErrorOverlay","__react_refresh_error_overlay__","clearCompileError","clearRuntimeErrors","handleCompileSuccess","handleCompileErrors","errors","formattedErrors","showCompileError","compileMessageHandler","message","type","data","process","env","NODE_ENV","window","setupOverlay","__reactRefreshOverlayInjected","__react_refresh_socket__","initSocket","init","__resourceQuery","handleError","error","handleRuntimeError","handleUnhandledRejection","handleUnhandledPromiseRejection"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/@pmmmwh/react-refresh-webpack-plugin/client/ErrorOverlayEntry.js"],"sourcesContent":["/* global __react_refresh_error_overlay__, __react_refresh_socket__, __resourceQuery */\n\nconst events = require('./utils/errorEventHandlers.js');\nconst formatWebpackErrors = require('./utils/formatWebpackErrors.js');\nconst runWithPatchedUrl = require('./utils/patchUrl.js');\nconst runWithRetry = require('./utils/retry.js');\n\n// Setup error states\nlet isHotReload = false;\nlet hasRuntimeErrors = false;\n\n/**\n * Try dismissing the compile error overlay.\n * This will also reset runtime error records (if any),\n * because we have new source to evaluate.\n * @returns {void}\n */\nfunction tryDismissErrorOverlay() {\n  __react_refresh_error_overlay__.clearCompileError();\n  __react_refresh_error_overlay__.clearRuntimeErrors(!hasRuntimeErrors);\n  hasRuntimeErrors = false;\n}\n\n/**\n * A function called after a compile success signal is received from Webpack.\n * @returns {void}\n */\nfunction handleCompileSuccess() {\n  isHotReload = true;\n\n  if (isHotReload) {\n    tryDismissErrorOverlay();\n  }\n}\n\n/**\n * A function called after a compile errored signal is received from Webpack.\n * @param {string[]} errors\n * @returns {void}\n */\nfunction handleCompileErrors(errors) {\n  isHotReload = true;\n\n  const formattedErrors = formatWebpackErrors(errors);\n\n  // Only show the first error\n  __react_refresh_error_overlay__.showCompileError(formattedErrors[0]);\n}\n\n/**\n * Handles compilation messages from Webpack.\n * Integrates with a compile error overlay.\n * @param {*} message A Webpack HMR message sent via WebSockets.\n * @returns {void}\n */\nfunction compileMessageHandler(message) {\n  switch (message.type) {\n    case 'ok':\n    case 'still-ok':\n    case 'warnings': {\n      // TODO: Implement handling for warnings\n      handleCompileSuccess();\n      break;\n    }\n    case 'errors': {\n      handleCompileErrors(message.data);\n      break;\n    }\n    default: {\n      // Do nothing.\n    }\n  }\n}\n\nif (process.env.NODE_ENV !== 'production') {\n  if (typeof window !== 'undefined') {\n    runWithPatchedUrl(function setupOverlay() {\n      // Only register if no other overlay have been registered\n      if (!window.__reactRefreshOverlayInjected && __react_refresh_socket__) {\n        // Registers handlers for compile errors with retry -\n        // This is to prevent mismatching injection order causing errors to be thrown\n        runWithRetry(function initSocket() {\n          __react_refresh_socket__.init(compileMessageHandler, __resourceQuery);\n        }, 3);\n        // Registers handlers for runtime errors\n        events.handleError(function handleError(error) {\n          hasRuntimeErrors = true;\n          __react_refresh_error_overlay__.handleRuntimeError(error);\n        });\n        events.handleUnhandledRejection(function handleUnhandledPromiseRejection(error) {\n          hasRuntimeErrors = true;\n          __react_refresh_error_overlay__.handleRuntimeError(error);\n        });\n\n        // Mark overlay as injected to prevent double-injection\n        window.__reactRefreshOverlayInjected = true;\n      }\n    });\n  }\n}\n"],"mappings":"AAAA;AAEA,MAAMA,MAAM,GAAGC,OAAO,CAAC,+BAAD,CAAtB;;AACA,MAAMC,mBAAmB,GAAGD,OAAO,CAAC,gCAAD,CAAnC;;AACA,MAAME,iBAAiB,GAAGF,OAAO,CAAC,qBAAD,CAAjC;;AACA,MAAMG,YAAY,GAAGH,OAAO,CAAC,kBAAD,CAA5B,C,CAEA;;;AACA,IAAII,WAAW,GAAG,KAAlB;AACA,IAAIC,gBAAgB,GAAG,KAAvB;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,sBAAT,GAAkC;EAChCC,+BAA+B,CAACC,iBAAhC;;EACAD,+BAA+B,CAACE,kBAAhC,CAAmD,CAACJ,gBAApD;;EACAA,gBAAgB,GAAG,KAAnB;AACD;AAED;AACA;AACA;AACA;;;AACA,SAASK,oBAAT,GAAgC;EAC9BN,WAAW,GAAG,IAAd;;EAEA,IAAIA,WAAJ,EAAiB;IACfE,sBAAsB;EACvB;AACF;AAED;AACA;AACA;AACA;AACA;;;AACA,SAASK,mBAAT,CAA6BC,MAA7B,EAAqC;EACnCR,WAAW,GAAG,IAAd;EAEA,MAAMS,eAAe,GAAGZ,mBAAmB,CAACW,MAAD,CAA3C,CAHmC,CAKnC;;EACAL,+BAA+B,CAACO,gBAAhC,CAAiDD,eAAe,CAAC,CAAD,CAAhE;AACD;AAED;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASE,qBAAT,CAA+BC,OAA/B,EAAwC;EACtC,QAAQA,OAAO,CAACC,IAAhB;IACE,KAAK,IAAL;IACA,KAAK,UAAL;IACA,KAAK,UAAL;MAAiB;QACf;QACAP,oBAAoB;QACpB;MACD;;IACD,KAAK,QAAL;MAAe;QACbC,mBAAmB,CAACK,OAAO,CAACE,IAAT,CAAnB;QACA;MACD;;IACD;MAAS,CACP;MACD;EAdH;AAgBD;;AAED,IAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;EACzC,IAAI,OAAOC,MAAP,KAAkB,WAAtB,EAAmC;IACjCpB,iBAAiB,CAAC,SAASqB,YAAT,GAAwB;MACxC;MACA,IAAI,CAACD,MAAM,CAACE,6BAAR,IAAyCC,wBAA7C,EAAuE;QACrE;QACA;QACAtB,YAAY,CAAC,SAASuB,UAAT,GAAsB;UACjCD,wBAAwB,CAACE,IAAzB,CAA8BZ,qBAA9B,EAAqDa,eAArD;QACD,CAFW,EAET,CAFS,CAAZ,CAHqE,CAMrE;;QACA7B,MAAM,CAAC8B,WAAP,CAAmB,SAASA,WAAT,CAAqBC,KAArB,EAA4B;UAC7CzB,gBAAgB,GAAG,IAAnB;;UACAE,+BAA+B,CAACwB,kBAAhC,CAAmDD,KAAnD;QACD,CAHD;QAIA/B,MAAM,CAACiC,wBAAP,CAAgC,SAASC,+BAAT,CAAyCH,KAAzC,EAAgD;UAC9EzB,gBAAgB,GAAG,IAAnB;;UACAE,+BAA+B,CAACwB,kBAAhC,CAAmDD,KAAnD;QACD,CAHD,EAXqE,CAgBrE;;QACAR,MAAM,CAACE,6BAAP,GAAuC,IAAvC;MACD;IACF,CArBgB,CAAjB;EAsBD;AACF"},"metadata":{},"sourceType":"script"}