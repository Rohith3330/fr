{"ast":null,"code":"/**\n * @fileoverview Enforce ES5 or ES6 class for returning value in render function.\n * @author Mark Orel\n */\n'use strict';\n\nconst Components = require('../util/Components');\n\nconst astUtil = require('../util/ast');\n\nconst componentUtil = require('../util/componentUtil');\n\nconst docsUrl = require('../util/docsUrl');\n\nconst report = require('../util/report'); // ------------------------------------------------------------------------------\n// Rule Definition\n// ------------------------------------------------------------------------------\n\n\nconst messages = {\n  noRenderReturn: 'Your render method should have a return statement'\n};\nmodule.exports = {\n  meta: {\n    docs: {\n      description: 'Enforce ES5 or ES6 class for returning value in render function',\n      category: 'Possible Errors',\n      recommended: true,\n      url: docsUrl('require-render-return')\n    },\n    messages,\n    schema: []\n  },\n  create: Components.detect((context, components) => {\n    /**\n     * Mark a return statement as present\n     * @param {ASTNode} node The AST node being checked.\n     */\n    function markReturnStatementPresent(node) {\n      components.set(node, {\n        hasReturnStatement: true\n      });\n    }\n    /**\n     * Find render method in a given AST node\n     * @param {ASTNode} node The component to find render method.\n     * @returns {ASTNode} Method node if found, undefined if not.\n     */\n\n\n    function findRenderMethod(node) {\n      const properties = astUtil.getComponentProperties(node);\n      return properties.filter(property => astUtil.getPropertyName(property) === 'render' && property.value).find(property => astUtil.isFunctionLikeExpression(property.value));\n    }\n\n    return {\n      ReturnStatement(node) {\n        const ancestors = context.getAncestors(node).reverse();\n        let depth = 0;\n        ancestors.forEach(ancestor => {\n          if (/Function(Expression|Declaration)$/.test(ancestor.type)) {\n            depth += 1;\n          }\n\n          if (/(MethodDefinition|Property|ClassProperty|PropertyDefinition)$/.test(ancestor.type) && astUtil.getPropertyName(ancestor) === 'render' && depth <= 1) {\n            markReturnStatementPresent(node);\n          }\n        });\n      },\n\n      ArrowFunctionExpression(node) {\n        if (node.expression === false || astUtil.getPropertyName(node.parent) !== 'render') {\n          return;\n        }\n\n        markReturnStatementPresent(node);\n      },\n\n      'Program:exit'() {\n        const list = components.list();\n        Object.keys(list).forEach(component => {\n          if (!findRenderMethod(list[component].node) || list[component].hasReturnStatement || !componentUtil.isES5Component(list[component].node, context) && !componentUtil.isES6Component(list[component].node, context)) {\n            return;\n          }\n\n          report(context, messages.noRenderReturn, 'noRenderReturn', {\n            node: findRenderMethod(list[component].node)\n          });\n        });\n      }\n\n    };\n  })\n};","map":{"version":3,"names":["Components","require","astUtil","componentUtil","docsUrl","report","messages","noRenderReturn","module","exports","meta","docs","description","category","recommended","url","schema","create","detect","context","components","markReturnStatementPresent","node","set","hasReturnStatement","findRenderMethod","properties","getComponentProperties","filter","property","getPropertyName","value","find","isFunctionLikeExpression","ReturnStatement","ancestors","getAncestors","reverse","depth","forEach","ancestor","test","type","ArrowFunctionExpression","expression","parent","list","Object","keys","component","isES5Component","isES6Component"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/eslint-plugin-react/lib/rules/require-render-return.js"],"sourcesContent":["/**\n * @fileoverview Enforce ES5 or ES6 class for returning value in render function.\n * @author Mark Orel\n */\n\n'use strict';\n\nconst Components = require('../util/Components');\nconst astUtil = require('../util/ast');\nconst componentUtil = require('../util/componentUtil');\nconst docsUrl = require('../util/docsUrl');\nconst report = require('../util/report');\n\n// ------------------------------------------------------------------------------\n// Rule Definition\n// ------------------------------------------------------------------------------\n\nconst messages = {\n  noRenderReturn: 'Your render method should have a return statement',\n};\n\nmodule.exports = {\n  meta: {\n    docs: {\n      description: 'Enforce ES5 or ES6 class for returning value in render function',\n      category: 'Possible Errors',\n      recommended: true,\n      url: docsUrl('require-render-return'),\n    },\n\n    messages,\n\n    schema: [],\n  },\n\n  create: Components.detect((context, components) => {\n    /**\n     * Mark a return statement as present\n     * @param {ASTNode} node The AST node being checked.\n     */\n    function markReturnStatementPresent(node) {\n      components.set(node, {\n        hasReturnStatement: true,\n      });\n    }\n\n    /**\n     * Find render method in a given AST node\n     * @param {ASTNode} node The component to find render method.\n     * @returns {ASTNode} Method node if found, undefined if not.\n     */\n    function findRenderMethod(node) {\n      const properties = astUtil.getComponentProperties(node);\n      return properties\n        .filter((property) => astUtil.getPropertyName(property) === 'render' && property.value)\n        .find((property) => astUtil.isFunctionLikeExpression(property.value));\n    }\n\n    return {\n      ReturnStatement(node) {\n        const ancestors = context.getAncestors(node).reverse();\n        let depth = 0;\n        ancestors.forEach((ancestor) => {\n          if (/Function(Expression|Declaration)$/.test(ancestor.type)) {\n            depth += 1;\n          }\n          if (\n            /(MethodDefinition|Property|ClassProperty|PropertyDefinition)$/.test(ancestor.type)\n            && astUtil.getPropertyName(ancestor) === 'render'\n            && depth <= 1\n          ) {\n            markReturnStatementPresent(node);\n          }\n        });\n      },\n\n      ArrowFunctionExpression(node) {\n        if (node.expression === false || astUtil.getPropertyName(node.parent) !== 'render') {\n          return;\n        }\n        markReturnStatementPresent(node);\n      },\n\n      'Program:exit'() {\n        const list = components.list();\n        Object.keys(list).forEach((component) => {\n          if (\n            !findRenderMethod(list[component].node)\n            || list[component].hasReturnStatement\n            || (\n              !componentUtil.isES5Component(list[component].node, context)\n              && !componentUtil.isES6Component(list[component].node, context)\n            )\n          ) {\n            return;\n          }\n          report(context, messages.noRenderReturn, 'noRenderReturn', {\n            node: findRenderMethod(list[component].node),\n          });\n        });\n      },\n    };\n  }),\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}