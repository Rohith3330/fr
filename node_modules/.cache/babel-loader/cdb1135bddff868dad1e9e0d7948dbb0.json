{"ast":null,"code":"// @remove-on-eject-begin\n\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n// @remove-on-eject-end\n'use strict';\n\nconst fs = require('fs');\n\nconst path = require('path');\n\nconst webpack = require('webpack');\n\nconst resolve = require('resolve');\n\nconst HtmlWebpackPlugin = require('html-webpack-plugin');\n\nconst CaseSensitivePathsPlugin = require('case-sensitive-paths-webpack-plugin');\n\nconst InlineChunkHtmlPlugin = require('react-dev-utils/InlineChunkHtmlPlugin');\n\nconst TerserPlugin = require('terser-webpack-plugin');\n\nconst MiniCssExtractPlugin = require('mini-css-extract-plugin');\n\nconst CssMinimizerPlugin = require('css-minimizer-webpack-plugin');\n\nconst {\n  WebpackManifestPlugin\n} = require('webpack-manifest-plugin');\n\nconst InterpolateHtmlPlugin = require('react-dev-utils/InterpolateHtmlPlugin');\n\nconst WorkboxWebpackPlugin = require('workbox-webpack-plugin');\n\nconst ModuleScopePlugin = require('react-dev-utils/ModuleScopePlugin');\n\nconst getCSSModuleLocalIdent = require('react-dev-utils/getCSSModuleLocalIdent');\n\nconst ESLintPlugin = require('eslint-webpack-plugin');\n\nconst paths = require('./paths');\n\nconst modules = require('./modules');\n\nconst getClientEnvironment = require('./env');\n\nconst ModuleNotFoundPlugin = require('react-dev-utils/ModuleNotFoundPlugin');\n\nconst ForkTsCheckerWebpackPlugin = process.env.TSC_COMPILE_ON_ERROR === 'true' ? require('react-dev-utils/ForkTsCheckerWarningWebpackPlugin') : require('react-dev-utils/ForkTsCheckerWebpackPlugin');\n\nconst ReactRefreshWebpackPlugin = require('@pmmmwh/react-refresh-webpack-plugin'); // @remove-on-eject-begin\n\n\nconst getCacheIdentifier = require('react-dev-utils/getCacheIdentifier'); // @remove-on-eject-end\n\n\nconst createEnvironmentHash = require('./webpack/persistentCache/createEnvironmentHash'); // Source maps are resource heavy and can cause out of memory issue for large source files.\n\n\nconst shouldUseSourceMap = process.env.GENERATE_SOURCEMAP !== 'false';\n\nconst reactRefreshRuntimeEntry = require.resolve('react-refresh/runtime');\n\nconst reactRefreshWebpackPluginRuntimeEntry = require.resolve('@pmmmwh/react-refresh-webpack-plugin');\n\nconst babelRuntimeEntry = require.resolve('babel-preset-react-app');\n\nconst babelRuntimeEntryHelpers = require.resolve('@babel/runtime/helpers/esm/assertThisInitialized', {\n  paths: [babelRuntimeEntry]\n});\n\nconst babelRuntimeRegenerator = require.resolve('@babel/runtime/regenerator', {\n  paths: [babelRuntimeEntry]\n}); // Some apps do not need the benefits of saving a web request, so not inlining the chunk\n// makes for a smoother build process.\n\n\nconst shouldInlineRuntimeChunk = process.env.INLINE_RUNTIME_CHUNK !== 'false';\nconst emitErrorsAsWarnings = process.env.ESLINT_NO_DEV_ERRORS === 'true';\nconst disableESLintPlugin = process.env.DISABLE_ESLINT_PLUGIN === 'true';\nconst imageInlineSizeLimit = parseInt(process.env.IMAGE_INLINE_SIZE_LIMIT || '10000'); // Check if TypeScript is setup\n\nconst useTypeScript = fs.existsSync(paths.appTsConfig); // Check if Tailwind config exists\n\nconst useTailwind = fs.existsSync(path.join(paths.appPath, 'tailwind.config.js')); // Get the path to the uncompiled service worker (if it exists).\n\nconst swSrc = paths.swSrc; // style files regexes\n\nconst cssRegex = /\\.css$/;\nconst cssModuleRegex = /\\.module\\.css$/;\nconst sassRegex = /\\.(scss|sass)$/;\nconst sassModuleRegex = /\\.module\\.(scss|sass)$/;\n\nconst hasJsxRuntime = (() => {\n  if (process.env.DISABLE_NEW_JSX_TRANSFORM === 'true') {\n    return false;\n  }\n\n  try {\n    require.resolve('react/jsx-runtime');\n\n    return true;\n  } catch (e) {\n    return false;\n  }\n})(); // This is the production and development configuration.\n// It is focused on developer experience, fast rebuilds, and a minimal bundle.\n\n\nmodule.exports = function (webpackEnv) {\n  const isEnvDevelopment = webpackEnv === 'development';\n  const isEnvProduction = webpackEnv === 'production'; // Variable used for enabling profiling in Production\n  // passed into alias object. Uses a flag if passed into the build command\n\n  const isEnvProductionProfile = isEnvProduction && process.argv.includes('--profile'); // We will provide `paths.publicUrlOrPath` to our app\n  // as %PUBLIC_URL% in `index.html` and `process.env.PUBLIC_URL` in JavaScript.\n  // Omit trailing slash as %PUBLIC_URL%/xyz looks better than %PUBLIC_URL%xyz.\n  // Get environment variables to inject into our app.\n\n  const env = getClientEnvironment(paths.publicUrlOrPath.slice(0, -1));\n  const shouldUseReactRefresh = env.raw.FAST_REFRESH; // common function to get style loaders\n\n  const getStyleLoaders = (cssOptions, preProcessor) => {\n    const loaders = [isEnvDevelopment && require.resolve('style-loader'), isEnvProduction && {\n      loader: MiniCssExtractPlugin.loader,\n      // css is located in `static/css`, use '../../' to locate index.html folder\n      // in production `paths.publicUrlOrPath` can be a relative path\n      options: paths.publicUrlOrPath.startsWith('.') ? {\n        publicPath: '../../'\n      } : {}\n    }, {\n      loader: require.resolve('css-loader'),\n      options: cssOptions\n    }, {\n      // Options for PostCSS as we reference these options twice\n      // Adds vendor prefixing based on your specified browser support in\n      // package.json\n      loader: require.resolve('postcss-loader'),\n      options: {\n        postcssOptions: {\n          // Necessary for external CSS imports to work\n          // https://github.com/facebook/create-react-app/issues/2677\n          ident: 'postcss',\n          config: false,\n          plugins: !useTailwind ? ['postcss-flexbugs-fixes', ['postcss-preset-env', {\n            autoprefixer: {\n              flexbox: 'no-2009'\n            },\n            stage: 3\n          }], // Adds PostCSS Normalize as the reset css with default options,\n          // so that it honors browserslist config in package.json\n          // which in turn let's users customize the target behavior as per their needs.\n          'postcss-normalize'] : ['tailwindcss', 'postcss-flexbugs-fixes', ['postcss-preset-env', {\n            autoprefixer: {\n              flexbox: 'no-2009'\n            },\n            stage: 3\n          }]]\n        },\n        sourceMap: isEnvProduction ? shouldUseSourceMap : isEnvDevelopment\n      }\n    }].filter(Boolean);\n\n    if (preProcessor) {\n      loaders.push({\n        loader: require.resolve('resolve-url-loader'),\n        options: {\n          sourceMap: isEnvProduction ? shouldUseSourceMap : isEnvDevelopment,\n          root: paths.appSrc\n        }\n      }, {\n        loader: require.resolve(preProcessor),\n        options: {\n          sourceMap: true\n        }\n      });\n    }\n\n    return loaders;\n  };\n\n  return {\n    target: ['browserslist'],\n    // Webpack noise constrained to errors and warnings\n    stats: 'errors-warnings',\n    mode: isEnvProduction ? 'production' : isEnvDevelopment && 'development',\n    // Stop compilation early in production\n    bail: isEnvProduction,\n    devtool: isEnvProduction ? shouldUseSourceMap ? 'source-map' : false : isEnvDevelopment && 'cheap-module-source-map',\n    // These are the \"entry points\" to our application.\n    // This means they will be the \"root\" imports that are included in JS bundle.\n    entry: paths.appIndexJs,\n    output: {\n      // The build folder.\n      path: paths.appBuild,\n      // Add /* filename */ comments to generated require()s in the output.\n      pathinfo: isEnvDevelopment,\n      // There will be one main bundle, and one file per asynchronous chunk.\n      // In development, it does not produce real files.\n      filename: isEnvProduction ? 'static/js/[name].[contenthash:8].js' : isEnvDevelopment && 'static/js/bundle.js',\n      // There are also additional JS chunk files if you use code splitting.\n      chunkFilename: isEnvProduction ? 'static/js/[name].[contenthash:8].chunk.js' : isEnvDevelopment && 'static/js/[name].chunk.js',\n      assetModuleFilename: 'static/media/[name].[hash][ext]',\n      // webpack uses `publicPath` to determine where the app is being served from.\n      // It requires a trailing slash, or the file assets will get an incorrect path.\n      // We inferred the \"public path\" (such as / or /my-project) from homepage.\n      publicPath: paths.publicUrlOrPath,\n      // Point sourcemap entries to original disk location (format as URL on Windows)\n      devtoolModuleFilenameTemplate: isEnvProduction ? info => path.relative(paths.appSrc, info.absoluteResourcePath).replace(/\\\\/g, '/') : isEnvDevelopment && (info => path.resolve(info.absoluteResourcePath).replace(/\\\\/g, '/'))\n    },\n    cache: {\n      type: 'filesystem',\n      version: createEnvironmentHash(env.raw),\n      cacheDirectory: paths.appWebpackCache,\n      store: 'pack',\n      buildDependencies: {\n        defaultWebpack: ['webpack/lib/'],\n        config: [__filename],\n        tsconfig: [paths.appTsConfig, paths.appJsConfig].filter(f => fs.existsSync(f))\n      }\n    },\n    infrastructureLogging: {\n      level: 'none'\n    },\n    optimization: {\n      minimize: isEnvProduction,\n      minimizer: [// This is only used in production mode\n      new TerserPlugin({\n        terserOptions: {\n          parse: {\n            // We want terser to parse ecma 8 code. However, we don't want it\n            // to apply any minification steps that turns valid ecma 5 code\n            // into invalid ecma 5 code. This is why the 'compress' and 'output'\n            // sections only apply transformations that are ecma 5 safe\n            // https://github.com/facebook/create-react-app/pull/4234\n            ecma: 8\n          },\n          compress: {\n            ecma: 5,\n            warnings: false,\n            // Disabled because of an issue with Uglify breaking seemingly valid code:\n            // https://github.com/facebook/create-react-app/issues/2376\n            // Pending further investigation:\n            // https://github.com/mishoo/UglifyJS2/issues/2011\n            comparisons: false,\n            // Disabled because of an issue with Terser breaking valid code:\n            // https://github.com/facebook/create-react-app/issues/5250\n            // Pending further investigation:\n            // https://github.com/terser-js/terser/issues/120\n            inline: 2\n          },\n          mangle: {\n            safari10: true\n          },\n          // Added for profiling in devtools\n          keep_classnames: isEnvProductionProfile,\n          keep_fnames: isEnvProductionProfile,\n          output: {\n            ecma: 5,\n            comments: false,\n            // Turned on because emoji and regex is not minified properly using default\n            // https://github.com/facebook/create-react-app/issues/2488\n            ascii_only: true\n          }\n        }\n      }), // This is only used in production mode\n      new CssMinimizerPlugin()]\n    },\n    resolve: {\n      // This allows you to set a fallback for where webpack should look for modules.\n      // We placed these paths second because we want `node_modules` to \"win\"\n      // if there are any conflicts. This matches Node resolution mechanism.\n      // https://github.com/facebook/create-react-app/issues/253\n      modules: ['node_modules', paths.appNodeModules].concat(modules.additionalModulePaths || []),\n      // These are the reasonable defaults supported by the Node ecosystem.\n      // We also include JSX as a common component filename extension to support\n      // some tools, although we do not recommend using it, see:\n      // https://github.com/facebook/create-react-app/issues/290\n      // `web` extension prefixes have been added for better support\n      // for React Native Web.\n      extensions: paths.moduleFileExtensions.map(ext => `.${ext}`).filter(ext => useTypeScript || !ext.includes('ts')),\n      alias: {\n        // Support React Native Web\n        // https://www.smashingmagazine.com/2016/08/a-glimpse-into-the-future-with-react-native-for-web/\n        'react-native': 'react-native-web',\n        // Allows for better profiling with ReactDevTools\n        ...(isEnvProductionProfile && {\n          'react-dom$': 'react-dom/profiling',\n          'scheduler/tracing': 'scheduler/tracing-profiling'\n        }),\n        ...(modules.webpackAliases || {})\n      },\n      plugins: [// Prevents users from importing files from outside of src/ (or node_modules/).\n      // This often causes confusion because we only process files within src/ with babel.\n      // To fix this, we prevent you from importing files out of src/ -- if you'd like to,\n      // please link the files into your node_modules/ and let module-resolution kick in.\n      // Make sure your source files are compiled, as they will not be processed in any way.\n      new ModuleScopePlugin(paths.appSrc, [paths.appPackageJson, reactRefreshRuntimeEntry, reactRefreshWebpackPluginRuntimeEntry, babelRuntimeEntry, babelRuntimeEntryHelpers, babelRuntimeRegenerator])]\n    },\n    module: {\n      strictExportPresence: true,\n      rules: [// Handle node_modules packages that contain sourcemaps\n      shouldUseSourceMap && {\n        enforce: 'pre',\n        exclude: /@babel(?:\\/|\\\\{1,2})runtime/,\n        test: /\\.(js|mjs|jsx|ts|tsx|css)$/,\n        loader: require.resolve('source-map-loader')\n      }, {\n        // \"oneOf\" will traverse all following loaders until one will\n        // match the requirements. When no loader matches it will fall\n        // back to the \"file\" loader at the end of the loader list.\n        oneOf: [// TODO: Merge this config once `image/avif` is in the mime-db\n        // https://github.com/jshttp/mime-db\n        {\n          test: [/\\.avif$/],\n          type: 'asset',\n          mimetype: 'image/avif',\n          parser: {\n            dataUrlCondition: {\n              maxSize: imageInlineSizeLimit\n            }\n          }\n        }, // \"url\" loader works like \"file\" loader except that it embeds assets\n        // smaller than specified limit in bytes as data URLs to avoid requests.\n        // A missing `test` is equivalent to a match.\n        {\n          test: [/\\.bmp$/, /\\.gif$/, /\\.jpe?g$/, /\\.png$/],\n          type: 'asset',\n          parser: {\n            dataUrlCondition: {\n              maxSize: imageInlineSizeLimit\n            }\n          }\n        }, {\n          test: /\\.svg$/,\n          use: [{\n            loader: require.resolve('@svgr/webpack'),\n            options: {\n              prettier: false,\n              svgo: false,\n              svgoConfig: {\n                plugins: [{\n                  removeViewBox: false\n                }]\n              },\n              titleProp: true,\n              ref: true\n            }\n          }, {\n            loader: require.resolve('file-loader'),\n            options: {\n              name: 'static/media/[name].[hash].[ext]'\n            }\n          }],\n          issuer: {\n            and: [/\\.(ts|tsx|js|jsx|md|mdx)$/]\n          }\n        }, // Process application JS with Babel.\n        // The preset includes JSX, Flow, TypeScript, and some ESnext features.\n        {\n          test: /\\.(js|mjs|jsx|ts|tsx)$/,\n          include: paths.appSrc,\n          loader: require.resolve('babel-loader'),\n          options: {\n            customize: require.resolve('babel-preset-react-app/webpack-overrides'),\n            presets: [[require.resolve('babel-preset-react-app'), {\n              runtime: hasJsxRuntime ? 'automatic' : 'classic'\n            }]],\n            // @remove-on-eject-begin\n            babelrc: false,\n            configFile: false,\n            // Make sure we have a unique cache identifier, erring on the\n            // side of caution.\n            // We remove this when the user ejects because the default\n            // is sane and uses Babel options. Instead of options, we use\n            // the react-scripts and babel-preset-react-app versions.\n            cacheIdentifier: getCacheIdentifier(isEnvProduction ? 'production' : isEnvDevelopment && 'development', ['babel-plugin-named-asset-import', 'babel-preset-react-app', 'react-dev-utils', 'react-scripts']),\n            // @remove-on-eject-end\n            plugins: [isEnvDevelopment && shouldUseReactRefresh && require.resolve('react-refresh/babel')].filter(Boolean),\n            // This is a feature of `babel-loader` for webpack (not Babel itself).\n            // It enables caching results in ./node_modules/.cache/babel-loader/\n            // directory for faster rebuilds.\n            cacheDirectory: true,\n            // See #6846 for context on why cacheCompression is disabled\n            cacheCompression: false,\n            compact: isEnvProduction\n          }\n        }, // Process any JS outside of the app with Babel.\n        // Unlike the application JS, we only compile the standard ES features.\n        {\n          test: /\\.(js|mjs)$/,\n          exclude: /@babel(?:\\/|\\\\{1,2})runtime/,\n          loader: require.resolve('babel-loader'),\n          options: {\n            babelrc: false,\n            configFile: false,\n            compact: false,\n            presets: [[require.resolve('babel-preset-react-app/dependencies'), {\n              helpers: true\n            }]],\n            cacheDirectory: true,\n            // See #6846 for context on why cacheCompression is disabled\n            cacheCompression: false,\n            // @remove-on-eject-begin\n            cacheIdentifier: getCacheIdentifier(isEnvProduction ? 'production' : isEnvDevelopment && 'development', ['babel-plugin-named-asset-import', 'babel-preset-react-app', 'react-dev-utils', 'react-scripts']),\n            // @remove-on-eject-end\n            // Babel sourcemaps are needed for debugging into node_modules\n            // code.  Without the options below, debuggers like VSCode\n            // show incorrect code and set breakpoints on the wrong lines.\n            sourceMaps: shouldUseSourceMap,\n            inputSourceMap: shouldUseSourceMap\n          }\n        }, // \"postcss\" loader applies autoprefixer to our CSS.\n        // \"css\" loader resolves paths in CSS and adds assets as dependencies.\n        // \"style\" loader turns CSS into JS modules that inject <style> tags.\n        // In production, we use MiniCSSExtractPlugin to extract that CSS\n        // to a file, but in development \"style\" loader enables hot editing\n        // of CSS.\n        // By default we support CSS Modules with the extension .module.css\n        {\n          test: cssRegex,\n          exclude: cssModuleRegex,\n          use: getStyleLoaders({\n            importLoaders: 1,\n            sourceMap: isEnvProduction ? shouldUseSourceMap : isEnvDevelopment,\n            modules: {\n              mode: 'icss'\n            }\n          }),\n          // Don't consider CSS imports dead code even if the\n          // containing package claims to have no side effects.\n          // Remove this when webpack adds a warning or an error for this.\n          // See https://github.com/webpack/webpack/issues/6571\n          sideEffects: true\n        }, // Adds support for CSS Modules (https://github.com/css-modules/css-modules)\n        // using the extension .module.css\n        {\n          test: cssModuleRegex,\n          use: getStyleLoaders({\n            importLoaders: 1,\n            sourceMap: isEnvProduction ? shouldUseSourceMap : isEnvDevelopment,\n            modules: {\n              mode: 'local',\n              getLocalIdent: getCSSModuleLocalIdent\n            }\n          })\n        }, // Opt-in support for SASS (using .scss or .sass extensions).\n        // By default we support SASS Modules with the\n        // extensions .module.scss or .module.sass\n        {\n          test: sassRegex,\n          exclude: sassModuleRegex,\n          use: getStyleLoaders({\n            importLoaders: 3,\n            sourceMap: isEnvProduction ? shouldUseSourceMap : isEnvDevelopment,\n            modules: {\n              mode: 'icss'\n            }\n          }, 'sass-loader'),\n          // Don't consider CSS imports dead code even if the\n          // containing package claims to have no side effects.\n          // Remove this when webpack adds a warning or an error for this.\n          // See https://github.com/webpack/webpack/issues/6571\n          sideEffects: true\n        }, // Adds support for CSS Modules, but using SASS\n        // using the extension .module.scss or .module.sass\n        {\n          test: sassModuleRegex,\n          use: getStyleLoaders({\n            importLoaders: 3,\n            sourceMap: isEnvProduction ? shouldUseSourceMap : isEnvDevelopment,\n            modules: {\n              mode: 'local',\n              getLocalIdent: getCSSModuleLocalIdent\n            }\n          }, 'sass-loader')\n        }, // \"file\" loader makes sure those assets get served by WebpackDevServer.\n        // When you `import` an asset, you get its (virtual) filename.\n        // In production, they would get copied to the `build` folder.\n        // This loader doesn't use a \"test\" so it will catch all modules\n        // that fall through the other loaders.\n        {\n          // Exclude `js` files to keep \"css\" loader working as it injects\n          // its runtime that would otherwise be processed through \"file\" loader.\n          // Also exclude `html` and `json` extensions so they get processed\n          // by webpacks internal loaders.\n          exclude: [/^$/, /\\.(js|mjs|jsx|ts|tsx)$/, /\\.html$/, /\\.json$/],\n          type: 'asset/resource'\n        } // ** STOP ** Are you adding a new loader?\n        // Make sure to add the new loader(s) before the \"file\" loader.\n        ]\n      }].filter(Boolean)\n    },\n    plugins: [// Generates an `index.html` file with the <script> injected.\n    new HtmlWebpackPlugin(Object.assign({}, {\n      inject: true,\n      template: paths.appHtml\n    }, isEnvProduction ? {\n      minify: {\n        removeComments: true,\n        collapseWhitespace: true,\n        removeRedundantAttributes: true,\n        useShortDoctype: true,\n        removeEmptyAttributes: true,\n        removeStyleLinkTypeAttributes: true,\n        keepClosingSlash: true,\n        minifyJS: true,\n        minifyCSS: true,\n        minifyURLs: true\n      }\n    } : undefined)), // Inlines the webpack runtime script. This script is too small to warrant\n    // a network request.\n    // https://github.com/facebook/create-react-app/issues/5358\n    isEnvProduction && shouldInlineRuntimeChunk && new InlineChunkHtmlPlugin(HtmlWebpackPlugin, [/runtime-.+[.]js/]), // Makes some environment variables available in index.html.\n    // The public URL is available as %PUBLIC_URL% in index.html, e.g.:\n    // <link rel=\"icon\" href=\"%PUBLIC_URL%/favicon.ico\">\n    // It will be an empty string unless you specify \"homepage\"\n    // in `package.json`, in which case it will be the pathname of that URL.\n    new InterpolateHtmlPlugin(HtmlWebpackPlugin, env.raw), // This gives some necessary context to module not found errors, such as\n    // the requesting resource.\n    new ModuleNotFoundPlugin(paths.appPath), // Makes some environment variables available to the JS code, for example:\n    // if (process.env.NODE_ENV === 'production') { ... }. See `./env.js`.\n    // It is absolutely essential that NODE_ENV is set to production\n    // during a production build.\n    // Otherwise React will be compiled in the very slow development mode.\n    new webpack.DefinePlugin(env.stringified), // Experimental hot reloading for React .\n    // https://github.com/facebook/react/tree/main/packages/react-refresh\n    isEnvDevelopment && shouldUseReactRefresh && new ReactRefreshWebpackPlugin({\n      overlay: false\n    }), // Watcher doesn't work well if you mistype casing in a path so we use\n    // a plugin that prints an error when you attempt to do this.\n    // See https://github.com/facebook/create-react-app/issues/240\n    isEnvDevelopment && new CaseSensitivePathsPlugin(), isEnvProduction && new MiniCssExtractPlugin({\n      // Options similar to the same options in webpackOptions.output\n      // both options are optional\n      filename: 'static/css/[name].[contenthash:8].css',\n      chunkFilename: 'static/css/[name].[contenthash:8].chunk.css'\n    }), // Generate an asset manifest file with the following content:\n    // - \"files\" key: Mapping of all asset filenames to their corresponding\n    //   output file so that tools can pick it up without having to parse\n    //   `index.html`\n    // - \"entrypoints\" key: Array of files which are included in `index.html`,\n    //   can be used to reconstruct the HTML if necessary\n    new WebpackManifestPlugin({\n      fileName: 'asset-manifest.json',\n      publicPath: paths.publicUrlOrPath,\n      generate: (seed, files, entrypoints) => {\n        const manifestFiles = files.reduce((manifest, file) => {\n          manifest[file.name] = file.path;\n          return manifest;\n        }, seed);\n        const entrypointFiles = entrypoints.main.filter(fileName => !fileName.endsWith('.map'));\n        return {\n          files: manifestFiles,\n          entrypoints: entrypointFiles\n        };\n      }\n    }), // Moment.js is an extremely popular library that bundles large locale files\n    // by default due to how webpack interprets its code. This is a practical\n    // solution that requires the user to opt into importing specific locales.\n    // https://github.com/jmblog/how-to-optimize-momentjs-with-webpack\n    // You can remove this if you don't use Moment.js:\n    new webpack.IgnorePlugin({\n      resourceRegExp: /^\\.\\/locale$/,\n      contextRegExp: /moment$/\n    }), // Generate a service worker script that will precache, and keep up to date,\n    // the HTML & assets that are part of the webpack build.\n    isEnvProduction && fs.existsSync(swSrc) && new WorkboxWebpackPlugin.InjectManifest({\n      swSrc,\n      dontCacheBustURLsMatching: /\\.[0-9a-f]{8}\\./,\n      exclude: [/\\.map$/, /asset-manifest\\.json$/, /LICENSE/],\n      // Bump up the default maximum size (2mb) that's precached,\n      // to make lazy-loading failure scenarios less likely.\n      // See https://github.com/cra-template/pwa/issues/13#issuecomment-722667270\n      maximumFileSizeToCacheInBytes: 5 * 1024 * 1024\n    }), // TypeScript type checking\n    useTypeScript && new ForkTsCheckerWebpackPlugin({\n      async: isEnvDevelopment,\n      typescript: {\n        typescriptPath: resolve.sync('typescript', {\n          basedir: paths.appNodeModules\n        }),\n        configOverwrite: {\n          compilerOptions: {\n            sourceMap: isEnvProduction ? shouldUseSourceMap : isEnvDevelopment,\n            skipLibCheck: true,\n            inlineSourceMap: false,\n            declarationMap: false,\n            noEmit: true,\n            incremental: true,\n            tsBuildInfoFile: paths.appTsBuildInfoFile\n          }\n        },\n        context: paths.appPath,\n        diagnosticOptions: {\n          syntactic: true\n        },\n        mode: 'write-references' // profile: true,\n\n      },\n      issue: {\n        // This one is specifically to match during CI tests,\n        // as micromatch doesn't match\n        // '../cra-template-typescript/template/src/App.tsx'\n        // otherwise.\n        include: [{\n          file: '../**/src/**/*.{ts,tsx}'\n        }, {\n          file: '**/src/**/*.{ts,tsx}'\n        }],\n        exclude: [{\n          file: '**/src/**/__tests__/**'\n        }, {\n          file: '**/src/**/?(*.){spec|test}.*'\n        }, {\n          file: '**/src/setupProxy.*'\n        }, {\n          file: '**/src/setupTests.*'\n        }]\n      },\n      logger: {\n        infrastructure: 'silent'\n      }\n    }), !disableESLintPlugin && new ESLintPlugin({\n      // Plugin options\n      extensions: ['js', 'mjs', 'jsx', 'ts', 'tsx'],\n      formatter: require.resolve('react-dev-utils/eslintFormatter'),\n      eslintPath: require.resolve('eslint'),\n      failOnError: !(isEnvDevelopment && emitErrorsAsWarnings),\n      context: paths.appSrc,\n      cache: true,\n      cacheLocation: path.resolve(paths.appNodeModules, '.cache/.eslintcache'),\n      // ESLint class options\n      cwd: paths.appPath,\n      resolvePluginsRelativeTo: __dirname,\n      baseConfig: {\n        extends: [require.resolve('eslint-config-react-app/base')],\n        rules: { ...(!hasJsxRuntime && {\n            'react/react-in-jsx-scope': 'error'\n          })\n        }\n      }\n    })].filter(Boolean),\n    // Turn off performance processing because we utilize\n    // our own hints via the FileSizeReporter\n    performance: false\n  };\n};","map":{"version":3,"names":["fs","require","path","webpack","resolve","HtmlWebpackPlugin","CaseSensitivePathsPlugin","InlineChunkHtmlPlugin","TerserPlugin","MiniCssExtractPlugin","CssMinimizerPlugin","WebpackManifestPlugin","InterpolateHtmlPlugin","WorkboxWebpackPlugin","ModuleScopePlugin","getCSSModuleLocalIdent","ESLintPlugin","paths","modules","getClientEnvironment","ModuleNotFoundPlugin","ForkTsCheckerWebpackPlugin","process","env","TSC_COMPILE_ON_ERROR","ReactRefreshWebpackPlugin","getCacheIdentifier","createEnvironmentHash","shouldUseSourceMap","GENERATE_SOURCEMAP","reactRefreshRuntimeEntry","reactRefreshWebpackPluginRuntimeEntry","babelRuntimeEntry","babelRuntimeEntryHelpers","babelRuntimeRegenerator","shouldInlineRuntimeChunk","INLINE_RUNTIME_CHUNK","emitErrorsAsWarnings","ESLINT_NO_DEV_ERRORS","disableESLintPlugin","DISABLE_ESLINT_PLUGIN","imageInlineSizeLimit","parseInt","IMAGE_INLINE_SIZE_LIMIT","useTypeScript","existsSync","appTsConfig","useTailwind","join","appPath","swSrc","cssRegex","cssModuleRegex","sassRegex","sassModuleRegex","hasJsxRuntime","DISABLE_NEW_JSX_TRANSFORM","e","module","exports","webpackEnv","isEnvDevelopment","isEnvProduction","isEnvProductionProfile","argv","includes","publicUrlOrPath","slice","shouldUseReactRefresh","raw","FAST_REFRESH","getStyleLoaders","cssOptions","preProcessor","loaders","loader","options","startsWith","publicPath","postcssOptions","ident","config","plugins","autoprefixer","flexbox","stage","sourceMap","filter","Boolean","push","root","appSrc","target","stats","mode","bail","devtool","entry","appIndexJs","output","appBuild","pathinfo","filename","chunkFilename","assetModuleFilename","devtoolModuleFilenameTemplate","info","relative","absoluteResourcePath","replace","cache","type","version","cacheDirectory","appWebpackCache","store","buildDependencies","defaultWebpack","__filename","tsconfig","appJsConfig","f","infrastructureLogging","level","optimization","minimize","minimizer","terserOptions","parse","ecma","compress","warnings","comparisons","inline","mangle","safari10","keep_classnames","keep_fnames","comments","ascii_only","appNodeModules","concat","additionalModulePaths","extensions","moduleFileExtensions","map","ext","alias","webpackAliases","appPackageJson","strictExportPresence","rules","enforce","exclude","test","oneOf","mimetype","parser","dataUrlCondition","maxSize","use","prettier","svgo","svgoConfig","removeViewBox","titleProp","ref","name","issuer","and","include","customize","presets","runtime","babelrc","configFile","cacheIdentifier","cacheCompression","compact","helpers","sourceMaps","inputSourceMap","importLoaders","sideEffects","getLocalIdent","Object","assign","inject","template","appHtml","minify","removeComments","collapseWhitespace","removeRedundantAttributes","useShortDoctype","removeEmptyAttributes","removeStyleLinkTypeAttributes","keepClosingSlash","minifyJS","minifyCSS","minifyURLs","undefined","DefinePlugin","stringified","overlay","fileName","generate","seed","files","entrypoints","manifestFiles","reduce","manifest","file","entrypointFiles","main","endsWith","IgnorePlugin","resourceRegExp","contextRegExp","InjectManifest","dontCacheBustURLsMatching","maximumFileSizeToCacheInBytes","async","typescript","typescriptPath","sync","basedir","configOverwrite","compilerOptions","skipLibCheck","inlineSourceMap","declarationMap","noEmit","incremental","tsBuildInfoFile","appTsBuildInfoFile","context","diagnosticOptions","syntactic","issue","logger","infrastructure","formatter","eslintPath","failOnError","cacheLocation","cwd","resolvePluginsRelativeTo","__dirname","baseConfig","extends","performance"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/react-scripts/config/webpack.config.js"],"sourcesContent":["// @remove-on-eject-begin\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n// @remove-on-eject-end\n'use strict';\n\nconst fs = require('fs');\nconst path = require('path');\nconst webpack = require('webpack');\nconst resolve = require('resolve');\nconst HtmlWebpackPlugin = require('html-webpack-plugin');\nconst CaseSensitivePathsPlugin = require('case-sensitive-paths-webpack-plugin');\nconst InlineChunkHtmlPlugin = require('react-dev-utils/InlineChunkHtmlPlugin');\nconst TerserPlugin = require('terser-webpack-plugin');\nconst MiniCssExtractPlugin = require('mini-css-extract-plugin');\nconst CssMinimizerPlugin = require('css-minimizer-webpack-plugin');\nconst { WebpackManifestPlugin } = require('webpack-manifest-plugin');\nconst InterpolateHtmlPlugin = require('react-dev-utils/InterpolateHtmlPlugin');\nconst WorkboxWebpackPlugin = require('workbox-webpack-plugin');\nconst ModuleScopePlugin = require('react-dev-utils/ModuleScopePlugin');\nconst getCSSModuleLocalIdent = require('react-dev-utils/getCSSModuleLocalIdent');\nconst ESLintPlugin = require('eslint-webpack-plugin');\nconst paths = require('./paths');\nconst modules = require('./modules');\nconst getClientEnvironment = require('./env');\nconst ModuleNotFoundPlugin = require('react-dev-utils/ModuleNotFoundPlugin');\nconst ForkTsCheckerWebpackPlugin =\n  process.env.TSC_COMPILE_ON_ERROR === 'true'\n    ? require('react-dev-utils/ForkTsCheckerWarningWebpackPlugin')\n    : require('react-dev-utils/ForkTsCheckerWebpackPlugin');\nconst ReactRefreshWebpackPlugin = require('@pmmmwh/react-refresh-webpack-plugin');\n// @remove-on-eject-begin\nconst getCacheIdentifier = require('react-dev-utils/getCacheIdentifier');\n// @remove-on-eject-end\nconst createEnvironmentHash = require('./webpack/persistentCache/createEnvironmentHash');\n\n// Source maps are resource heavy and can cause out of memory issue for large source files.\nconst shouldUseSourceMap = process.env.GENERATE_SOURCEMAP !== 'false';\n\nconst reactRefreshRuntimeEntry = require.resolve('react-refresh/runtime');\nconst reactRefreshWebpackPluginRuntimeEntry = require.resolve(\n  '@pmmmwh/react-refresh-webpack-plugin'\n);\nconst babelRuntimeEntry = require.resolve('babel-preset-react-app');\nconst babelRuntimeEntryHelpers = require.resolve(\n  '@babel/runtime/helpers/esm/assertThisInitialized',\n  { paths: [babelRuntimeEntry] }\n);\nconst babelRuntimeRegenerator = require.resolve('@babel/runtime/regenerator', {\n  paths: [babelRuntimeEntry],\n});\n\n// Some apps do not need the benefits of saving a web request, so not inlining the chunk\n// makes for a smoother build process.\nconst shouldInlineRuntimeChunk = process.env.INLINE_RUNTIME_CHUNK !== 'false';\n\nconst emitErrorsAsWarnings = process.env.ESLINT_NO_DEV_ERRORS === 'true';\nconst disableESLintPlugin = process.env.DISABLE_ESLINT_PLUGIN === 'true';\n\nconst imageInlineSizeLimit = parseInt(\n  process.env.IMAGE_INLINE_SIZE_LIMIT || '10000'\n);\n\n// Check if TypeScript is setup\nconst useTypeScript = fs.existsSync(paths.appTsConfig);\n\n// Check if Tailwind config exists\nconst useTailwind = fs.existsSync(\n  path.join(paths.appPath, 'tailwind.config.js')\n);\n\n// Get the path to the uncompiled service worker (if it exists).\nconst swSrc = paths.swSrc;\n\n// style files regexes\nconst cssRegex = /\\.css$/;\nconst cssModuleRegex = /\\.module\\.css$/;\nconst sassRegex = /\\.(scss|sass)$/;\nconst sassModuleRegex = /\\.module\\.(scss|sass)$/;\n\nconst hasJsxRuntime = (() => {\n  if (process.env.DISABLE_NEW_JSX_TRANSFORM === 'true') {\n    return false;\n  }\n\n  try {\n    require.resolve('react/jsx-runtime');\n    return true;\n  } catch (e) {\n    return false;\n  }\n})();\n\n// This is the production and development configuration.\n// It is focused on developer experience, fast rebuilds, and a minimal bundle.\nmodule.exports = function (webpackEnv) {\n  const isEnvDevelopment = webpackEnv === 'development';\n  const isEnvProduction = webpackEnv === 'production';\n\n  // Variable used for enabling profiling in Production\n  // passed into alias object. Uses a flag if passed into the build command\n  const isEnvProductionProfile =\n    isEnvProduction && process.argv.includes('--profile');\n\n  // We will provide `paths.publicUrlOrPath` to our app\n  // as %PUBLIC_URL% in `index.html` and `process.env.PUBLIC_URL` in JavaScript.\n  // Omit trailing slash as %PUBLIC_URL%/xyz looks better than %PUBLIC_URL%xyz.\n  // Get environment variables to inject into our app.\n  const env = getClientEnvironment(paths.publicUrlOrPath.slice(0, -1));\n\n  const shouldUseReactRefresh = env.raw.FAST_REFRESH;\n\n  // common function to get style loaders\n  const getStyleLoaders = (cssOptions, preProcessor) => {\n    const loaders = [\n      isEnvDevelopment && require.resolve('style-loader'),\n      isEnvProduction && {\n        loader: MiniCssExtractPlugin.loader,\n        // css is located in `static/css`, use '../../' to locate index.html folder\n        // in production `paths.publicUrlOrPath` can be a relative path\n        options: paths.publicUrlOrPath.startsWith('.')\n          ? { publicPath: '../../' }\n          : {},\n      },\n      {\n        loader: require.resolve('css-loader'),\n        options: cssOptions,\n      },\n      {\n        // Options for PostCSS as we reference these options twice\n        // Adds vendor prefixing based on your specified browser support in\n        // package.json\n        loader: require.resolve('postcss-loader'),\n        options: {\n          postcssOptions: {\n            // Necessary for external CSS imports to work\n            // https://github.com/facebook/create-react-app/issues/2677\n            ident: 'postcss',\n            config: false,\n            plugins: !useTailwind\n              ? [\n                  'postcss-flexbugs-fixes',\n                  [\n                    'postcss-preset-env',\n                    {\n                      autoprefixer: {\n                        flexbox: 'no-2009',\n                      },\n                      stage: 3,\n                    },\n                  ],\n                  // Adds PostCSS Normalize as the reset css with default options,\n                  // so that it honors browserslist config in package.json\n                  // which in turn let's users customize the target behavior as per their needs.\n                  'postcss-normalize',\n                ]\n              : [\n                  'tailwindcss',\n                  'postcss-flexbugs-fixes',\n                  [\n                    'postcss-preset-env',\n                    {\n                      autoprefixer: {\n                        flexbox: 'no-2009',\n                      },\n                      stage: 3,\n                    },\n                  ],\n                ],\n          },\n          sourceMap: isEnvProduction ? shouldUseSourceMap : isEnvDevelopment,\n        },\n      },\n    ].filter(Boolean);\n    if (preProcessor) {\n      loaders.push(\n        {\n          loader: require.resolve('resolve-url-loader'),\n          options: {\n            sourceMap: isEnvProduction ? shouldUseSourceMap : isEnvDevelopment,\n            root: paths.appSrc,\n          },\n        },\n        {\n          loader: require.resolve(preProcessor),\n          options: {\n            sourceMap: true,\n          },\n        }\n      );\n    }\n    return loaders;\n  };\n\n  return {\n    target: ['browserslist'],\n    // Webpack noise constrained to errors and warnings\n    stats: 'errors-warnings',\n    mode: isEnvProduction ? 'production' : isEnvDevelopment && 'development',\n    // Stop compilation early in production\n    bail: isEnvProduction,\n    devtool: isEnvProduction\n      ? shouldUseSourceMap\n        ? 'source-map'\n        : false\n      : isEnvDevelopment && 'cheap-module-source-map',\n    // These are the \"entry points\" to our application.\n    // This means they will be the \"root\" imports that are included in JS bundle.\n    entry: paths.appIndexJs,\n    output: {\n      // The build folder.\n      path: paths.appBuild,\n      // Add /* filename */ comments to generated require()s in the output.\n      pathinfo: isEnvDevelopment,\n      // There will be one main bundle, and one file per asynchronous chunk.\n      // In development, it does not produce real files.\n      filename: isEnvProduction\n        ? 'static/js/[name].[contenthash:8].js'\n        : isEnvDevelopment && 'static/js/bundle.js',\n      // There are also additional JS chunk files if you use code splitting.\n      chunkFilename: isEnvProduction\n        ? 'static/js/[name].[contenthash:8].chunk.js'\n        : isEnvDevelopment && 'static/js/[name].chunk.js',\n      assetModuleFilename: 'static/media/[name].[hash][ext]',\n      // webpack uses `publicPath` to determine where the app is being served from.\n      // It requires a trailing slash, or the file assets will get an incorrect path.\n      // We inferred the \"public path\" (such as / or /my-project) from homepage.\n      publicPath: paths.publicUrlOrPath,\n      // Point sourcemap entries to original disk location (format as URL on Windows)\n      devtoolModuleFilenameTemplate: isEnvProduction\n        ? info =>\n            path\n              .relative(paths.appSrc, info.absoluteResourcePath)\n              .replace(/\\\\/g, '/')\n        : isEnvDevelopment &&\n          (info => path.resolve(info.absoluteResourcePath).replace(/\\\\/g, '/')),\n    },\n    cache: {\n      type: 'filesystem',\n      version: createEnvironmentHash(env.raw),\n      cacheDirectory: paths.appWebpackCache,\n      store: 'pack',\n      buildDependencies: {\n        defaultWebpack: ['webpack/lib/'],\n        config: [__filename],\n        tsconfig: [paths.appTsConfig, paths.appJsConfig].filter(f =>\n          fs.existsSync(f)\n        ),\n      },\n    },\n    infrastructureLogging: {\n      level: 'none',\n    },\n    optimization: {\n      minimize: isEnvProduction,\n      minimizer: [\n        // This is only used in production mode\n        new TerserPlugin({\n          terserOptions: {\n            parse: {\n              // We want terser to parse ecma 8 code. However, we don't want it\n              // to apply any minification steps that turns valid ecma 5 code\n              // into invalid ecma 5 code. This is why the 'compress' and 'output'\n              // sections only apply transformations that are ecma 5 safe\n              // https://github.com/facebook/create-react-app/pull/4234\n              ecma: 8,\n            },\n            compress: {\n              ecma: 5,\n              warnings: false,\n              // Disabled because of an issue with Uglify breaking seemingly valid code:\n              // https://github.com/facebook/create-react-app/issues/2376\n              // Pending further investigation:\n              // https://github.com/mishoo/UglifyJS2/issues/2011\n              comparisons: false,\n              // Disabled because of an issue with Terser breaking valid code:\n              // https://github.com/facebook/create-react-app/issues/5250\n              // Pending further investigation:\n              // https://github.com/terser-js/terser/issues/120\n              inline: 2,\n            },\n            mangle: {\n              safari10: true,\n            },\n            // Added for profiling in devtools\n            keep_classnames: isEnvProductionProfile,\n            keep_fnames: isEnvProductionProfile,\n            output: {\n              ecma: 5,\n              comments: false,\n              // Turned on because emoji and regex is not minified properly using default\n              // https://github.com/facebook/create-react-app/issues/2488\n              ascii_only: true,\n            },\n          },\n        }),\n        // This is only used in production mode\n        new CssMinimizerPlugin(),\n      ],\n    },\n    resolve: {\n      // This allows you to set a fallback for where webpack should look for modules.\n      // We placed these paths second because we want `node_modules` to \"win\"\n      // if there are any conflicts. This matches Node resolution mechanism.\n      // https://github.com/facebook/create-react-app/issues/253\n      modules: ['node_modules', paths.appNodeModules].concat(\n        modules.additionalModulePaths || []\n      ),\n      // These are the reasonable defaults supported by the Node ecosystem.\n      // We also include JSX as a common component filename extension to support\n      // some tools, although we do not recommend using it, see:\n      // https://github.com/facebook/create-react-app/issues/290\n      // `web` extension prefixes have been added for better support\n      // for React Native Web.\n      extensions: paths.moduleFileExtensions\n        .map(ext => `.${ext}`)\n        .filter(ext => useTypeScript || !ext.includes('ts')),\n      alias: {\n        // Support React Native Web\n        // https://www.smashingmagazine.com/2016/08/a-glimpse-into-the-future-with-react-native-for-web/\n        'react-native': 'react-native-web',\n        // Allows for better profiling with ReactDevTools\n        ...(isEnvProductionProfile && {\n          'react-dom$': 'react-dom/profiling',\n          'scheduler/tracing': 'scheduler/tracing-profiling',\n        }),\n        ...(modules.webpackAliases || {}),\n      },\n      plugins: [\n        // Prevents users from importing files from outside of src/ (or node_modules/).\n        // This often causes confusion because we only process files within src/ with babel.\n        // To fix this, we prevent you from importing files out of src/ -- if you'd like to,\n        // please link the files into your node_modules/ and let module-resolution kick in.\n        // Make sure your source files are compiled, as they will not be processed in any way.\n        new ModuleScopePlugin(paths.appSrc, [\n          paths.appPackageJson,\n          reactRefreshRuntimeEntry,\n          reactRefreshWebpackPluginRuntimeEntry,\n          babelRuntimeEntry,\n          babelRuntimeEntryHelpers,\n          babelRuntimeRegenerator,\n        ]),\n      ],\n    },\n    module: {\n      strictExportPresence: true,\n      rules: [\n        // Handle node_modules packages that contain sourcemaps\n        shouldUseSourceMap && {\n          enforce: 'pre',\n          exclude: /@babel(?:\\/|\\\\{1,2})runtime/,\n          test: /\\.(js|mjs|jsx|ts|tsx|css)$/,\n          loader: require.resolve('source-map-loader'),\n        },\n        {\n          // \"oneOf\" will traverse all following loaders until one will\n          // match the requirements. When no loader matches it will fall\n          // back to the \"file\" loader at the end of the loader list.\n          oneOf: [\n            // TODO: Merge this config once `image/avif` is in the mime-db\n            // https://github.com/jshttp/mime-db\n            {\n              test: [/\\.avif$/],\n              type: 'asset',\n              mimetype: 'image/avif',\n              parser: {\n                dataUrlCondition: {\n                  maxSize: imageInlineSizeLimit,\n                },\n              },\n            },\n            // \"url\" loader works like \"file\" loader except that it embeds assets\n            // smaller than specified limit in bytes as data URLs to avoid requests.\n            // A missing `test` is equivalent to a match.\n            {\n              test: [/\\.bmp$/, /\\.gif$/, /\\.jpe?g$/, /\\.png$/],\n              type: 'asset',\n              parser: {\n                dataUrlCondition: {\n                  maxSize: imageInlineSizeLimit,\n                },\n              },\n            },\n            {\n              test: /\\.svg$/,\n              use: [\n                {\n                  loader: require.resolve('@svgr/webpack'),\n                  options: {\n                    prettier: false,\n                    svgo: false,\n                    svgoConfig: {\n                      plugins: [{ removeViewBox: false }],\n                    },\n                    titleProp: true,\n                    ref: true,\n                  },\n                },\n                {\n                  loader: require.resolve('file-loader'),\n                  options: {\n                    name: 'static/media/[name].[hash].[ext]',\n                  },\n                },\n              ],\n              issuer: {\n                and: [/\\.(ts|tsx|js|jsx|md|mdx)$/],\n              },\n            },\n            // Process application JS with Babel.\n            // The preset includes JSX, Flow, TypeScript, and some ESnext features.\n            {\n              test: /\\.(js|mjs|jsx|ts|tsx)$/,\n              include: paths.appSrc,\n              loader: require.resolve('babel-loader'),\n              options: {\n                customize: require.resolve(\n                  'babel-preset-react-app/webpack-overrides'\n                ),\n                presets: [\n                  [\n                    require.resolve('babel-preset-react-app'),\n                    {\n                      runtime: hasJsxRuntime ? 'automatic' : 'classic',\n                    },\n                  ],\n                ],\n                // @remove-on-eject-begin\n                babelrc: false,\n                configFile: false,\n                // Make sure we have a unique cache identifier, erring on the\n                // side of caution.\n                // We remove this when the user ejects because the default\n                // is sane and uses Babel options. Instead of options, we use\n                // the react-scripts and babel-preset-react-app versions.\n                cacheIdentifier: getCacheIdentifier(\n                  isEnvProduction\n                    ? 'production'\n                    : isEnvDevelopment && 'development',\n                  [\n                    'babel-plugin-named-asset-import',\n                    'babel-preset-react-app',\n                    'react-dev-utils',\n                    'react-scripts',\n                  ]\n                ),\n                // @remove-on-eject-end\n                plugins: [\n                  isEnvDevelopment &&\n                    shouldUseReactRefresh &&\n                    require.resolve('react-refresh/babel'),\n                ].filter(Boolean),\n                // This is a feature of `babel-loader` for webpack (not Babel itself).\n                // It enables caching results in ./node_modules/.cache/babel-loader/\n                // directory for faster rebuilds.\n                cacheDirectory: true,\n                // See #6846 for context on why cacheCompression is disabled\n                cacheCompression: false,\n                compact: isEnvProduction,\n              },\n            },\n            // Process any JS outside of the app with Babel.\n            // Unlike the application JS, we only compile the standard ES features.\n            {\n              test: /\\.(js|mjs)$/,\n              exclude: /@babel(?:\\/|\\\\{1,2})runtime/,\n              loader: require.resolve('babel-loader'),\n              options: {\n                babelrc: false,\n                configFile: false,\n                compact: false,\n                presets: [\n                  [\n                    require.resolve('babel-preset-react-app/dependencies'),\n                    { helpers: true },\n                  ],\n                ],\n                cacheDirectory: true,\n                // See #6846 for context on why cacheCompression is disabled\n                cacheCompression: false,\n                // @remove-on-eject-begin\n                cacheIdentifier: getCacheIdentifier(\n                  isEnvProduction\n                    ? 'production'\n                    : isEnvDevelopment && 'development',\n                  [\n                    'babel-plugin-named-asset-import',\n                    'babel-preset-react-app',\n                    'react-dev-utils',\n                    'react-scripts',\n                  ]\n                ),\n                // @remove-on-eject-end\n                // Babel sourcemaps are needed for debugging into node_modules\n                // code.  Without the options below, debuggers like VSCode\n                // show incorrect code and set breakpoints on the wrong lines.\n                sourceMaps: shouldUseSourceMap,\n                inputSourceMap: shouldUseSourceMap,\n              },\n            },\n            // \"postcss\" loader applies autoprefixer to our CSS.\n            // \"css\" loader resolves paths in CSS and adds assets as dependencies.\n            // \"style\" loader turns CSS into JS modules that inject <style> tags.\n            // In production, we use MiniCSSExtractPlugin to extract that CSS\n            // to a file, but in development \"style\" loader enables hot editing\n            // of CSS.\n            // By default we support CSS Modules with the extension .module.css\n            {\n              test: cssRegex,\n              exclude: cssModuleRegex,\n              use: getStyleLoaders({\n                importLoaders: 1,\n                sourceMap: isEnvProduction\n                  ? shouldUseSourceMap\n                  : isEnvDevelopment,\n                modules: {\n                  mode: 'icss',\n                },\n              }),\n              // Don't consider CSS imports dead code even if the\n              // containing package claims to have no side effects.\n              // Remove this when webpack adds a warning or an error for this.\n              // See https://github.com/webpack/webpack/issues/6571\n              sideEffects: true,\n            },\n            // Adds support for CSS Modules (https://github.com/css-modules/css-modules)\n            // using the extension .module.css\n            {\n              test: cssModuleRegex,\n              use: getStyleLoaders({\n                importLoaders: 1,\n                sourceMap: isEnvProduction\n                  ? shouldUseSourceMap\n                  : isEnvDevelopment,\n                modules: {\n                  mode: 'local',\n                  getLocalIdent: getCSSModuleLocalIdent,\n                },\n              }),\n            },\n            // Opt-in support for SASS (using .scss or .sass extensions).\n            // By default we support SASS Modules with the\n            // extensions .module.scss or .module.sass\n            {\n              test: sassRegex,\n              exclude: sassModuleRegex,\n              use: getStyleLoaders(\n                {\n                  importLoaders: 3,\n                  sourceMap: isEnvProduction\n                    ? shouldUseSourceMap\n                    : isEnvDevelopment,\n                  modules: {\n                    mode: 'icss',\n                  },\n                },\n                'sass-loader'\n              ),\n              // Don't consider CSS imports dead code even if the\n              // containing package claims to have no side effects.\n              // Remove this when webpack adds a warning or an error for this.\n              // See https://github.com/webpack/webpack/issues/6571\n              sideEffects: true,\n            },\n            // Adds support for CSS Modules, but using SASS\n            // using the extension .module.scss or .module.sass\n            {\n              test: sassModuleRegex,\n              use: getStyleLoaders(\n                {\n                  importLoaders: 3,\n                  sourceMap: isEnvProduction\n                    ? shouldUseSourceMap\n                    : isEnvDevelopment,\n                  modules: {\n                    mode: 'local',\n                    getLocalIdent: getCSSModuleLocalIdent,\n                  },\n                },\n                'sass-loader'\n              ),\n            },\n            // \"file\" loader makes sure those assets get served by WebpackDevServer.\n            // When you `import` an asset, you get its (virtual) filename.\n            // In production, they would get copied to the `build` folder.\n            // This loader doesn't use a \"test\" so it will catch all modules\n            // that fall through the other loaders.\n            {\n              // Exclude `js` files to keep \"css\" loader working as it injects\n              // its runtime that would otherwise be processed through \"file\" loader.\n              // Also exclude `html` and `json` extensions so they get processed\n              // by webpacks internal loaders.\n              exclude: [/^$/, /\\.(js|mjs|jsx|ts|tsx)$/, /\\.html$/, /\\.json$/],\n              type: 'asset/resource',\n            },\n            // ** STOP ** Are you adding a new loader?\n            // Make sure to add the new loader(s) before the \"file\" loader.\n          ],\n        },\n      ].filter(Boolean),\n    },\n    plugins: [\n      // Generates an `index.html` file with the <script> injected.\n      new HtmlWebpackPlugin(\n        Object.assign(\n          {},\n          {\n            inject: true,\n            template: paths.appHtml,\n          },\n          isEnvProduction\n            ? {\n                minify: {\n                  removeComments: true,\n                  collapseWhitespace: true,\n                  removeRedundantAttributes: true,\n                  useShortDoctype: true,\n                  removeEmptyAttributes: true,\n                  removeStyleLinkTypeAttributes: true,\n                  keepClosingSlash: true,\n                  minifyJS: true,\n                  minifyCSS: true,\n                  minifyURLs: true,\n                },\n              }\n            : undefined\n        )\n      ),\n      // Inlines the webpack runtime script. This script is too small to warrant\n      // a network request.\n      // https://github.com/facebook/create-react-app/issues/5358\n      isEnvProduction &&\n        shouldInlineRuntimeChunk &&\n        new InlineChunkHtmlPlugin(HtmlWebpackPlugin, [/runtime-.+[.]js/]),\n      // Makes some environment variables available in index.html.\n      // The public URL is available as %PUBLIC_URL% in index.html, e.g.:\n      // <link rel=\"icon\" href=\"%PUBLIC_URL%/favicon.ico\">\n      // It will be an empty string unless you specify \"homepage\"\n      // in `package.json`, in which case it will be the pathname of that URL.\n      new InterpolateHtmlPlugin(HtmlWebpackPlugin, env.raw),\n      // This gives some necessary context to module not found errors, such as\n      // the requesting resource.\n      new ModuleNotFoundPlugin(paths.appPath),\n      // Makes some environment variables available to the JS code, for example:\n      // if (process.env.NODE_ENV === 'production') { ... }. See `./env.js`.\n      // It is absolutely essential that NODE_ENV is set to production\n      // during a production build.\n      // Otherwise React will be compiled in the very slow development mode.\n      new webpack.DefinePlugin(env.stringified),\n      // Experimental hot reloading for React .\n      // https://github.com/facebook/react/tree/main/packages/react-refresh\n      isEnvDevelopment &&\n        shouldUseReactRefresh &&\n        new ReactRefreshWebpackPlugin({\n          overlay: false,\n        }),\n      // Watcher doesn't work well if you mistype casing in a path so we use\n      // a plugin that prints an error when you attempt to do this.\n      // See https://github.com/facebook/create-react-app/issues/240\n      isEnvDevelopment && new CaseSensitivePathsPlugin(),\n      isEnvProduction &&\n        new MiniCssExtractPlugin({\n          // Options similar to the same options in webpackOptions.output\n          // both options are optional\n          filename: 'static/css/[name].[contenthash:8].css',\n          chunkFilename: 'static/css/[name].[contenthash:8].chunk.css',\n        }),\n      // Generate an asset manifest file with the following content:\n      // - \"files\" key: Mapping of all asset filenames to their corresponding\n      //   output file so that tools can pick it up without having to parse\n      //   `index.html`\n      // - \"entrypoints\" key: Array of files which are included in `index.html`,\n      //   can be used to reconstruct the HTML if necessary\n      new WebpackManifestPlugin({\n        fileName: 'asset-manifest.json',\n        publicPath: paths.publicUrlOrPath,\n        generate: (seed, files, entrypoints) => {\n          const manifestFiles = files.reduce((manifest, file) => {\n            manifest[file.name] = file.path;\n            return manifest;\n          }, seed);\n          const entrypointFiles = entrypoints.main.filter(\n            fileName => !fileName.endsWith('.map')\n          );\n\n          return {\n            files: manifestFiles,\n            entrypoints: entrypointFiles,\n          };\n        },\n      }),\n      // Moment.js is an extremely popular library that bundles large locale files\n      // by default due to how webpack interprets its code. This is a practical\n      // solution that requires the user to opt into importing specific locales.\n      // https://github.com/jmblog/how-to-optimize-momentjs-with-webpack\n      // You can remove this if you don't use Moment.js:\n      new webpack.IgnorePlugin({\n        resourceRegExp: /^\\.\\/locale$/,\n        contextRegExp: /moment$/,\n      }),\n      // Generate a service worker script that will precache, and keep up to date,\n      // the HTML & assets that are part of the webpack build.\n      isEnvProduction &&\n        fs.existsSync(swSrc) &&\n        new WorkboxWebpackPlugin.InjectManifest({\n          swSrc,\n          dontCacheBustURLsMatching: /\\.[0-9a-f]{8}\\./,\n          exclude: [/\\.map$/, /asset-manifest\\.json$/, /LICENSE/],\n          // Bump up the default maximum size (2mb) that's precached,\n          // to make lazy-loading failure scenarios less likely.\n          // See https://github.com/cra-template/pwa/issues/13#issuecomment-722667270\n          maximumFileSizeToCacheInBytes: 5 * 1024 * 1024,\n        }),\n      // TypeScript type checking\n      useTypeScript &&\n        new ForkTsCheckerWebpackPlugin({\n          async: isEnvDevelopment,\n          typescript: {\n            typescriptPath: resolve.sync('typescript', {\n              basedir: paths.appNodeModules,\n            }),\n            configOverwrite: {\n              compilerOptions: {\n                sourceMap: isEnvProduction\n                  ? shouldUseSourceMap\n                  : isEnvDevelopment,\n                skipLibCheck: true,\n                inlineSourceMap: false,\n                declarationMap: false,\n                noEmit: true,\n                incremental: true,\n                tsBuildInfoFile: paths.appTsBuildInfoFile,\n              },\n            },\n            context: paths.appPath,\n            diagnosticOptions: {\n              syntactic: true,\n            },\n            mode: 'write-references',\n            // profile: true,\n          },\n          issue: {\n            // This one is specifically to match during CI tests,\n            // as micromatch doesn't match\n            // '../cra-template-typescript/template/src/App.tsx'\n            // otherwise.\n            include: [\n              { file: '../**/src/**/*.{ts,tsx}' },\n              { file: '**/src/**/*.{ts,tsx}' },\n            ],\n            exclude: [\n              { file: '**/src/**/__tests__/**' },\n              { file: '**/src/**/?(*.){spec|test}.*' },\n              { file: '**/src/setupProxy.*' },\n              { file: '**/src/setupTests.*' },\n            ],\n          },\n          logger: {\n            infrastructure: 'silent',\n          },\n        }),\n      !disableESLintPlugin &&\n        new ESLintPlugin({\n          // Plugin options\n          extensions: ['js', 'mjs', 'jsx', 'ts', 'tsx'],\n          formatter: require.resolve('react-dev-utils/eslintFormatter'),\n          eslintPath: require.resolve('eslint'),\n          failOnError: !(isEnvDevelopment && emitErrorsAsWarnings),\n          context: paths.appSrc,\n          cache: true,\n          cacheLocation: path.resolve(\n            paths.appNodeModules,\n            '.cache/.eslintcache'\n          ),\n          // ESLint class options\n          cwd: paths.appPath,\n          resolvePluginsRelativeTo: __dirname,\n          baseConfig: {\n            extends: [require.resolve('eslint-config-react-app/base')],\n            rules: {\n              ...(!hasJsxRuntime && {\n                'react/react-in-jsx-scope': 'error',\n              }),\n            },\n          },\n        }),\n    ].filter(Boolean),\n    // Turn off performance processing because we utilize\n    // our own hints via the FileSizeReporter\n    performance: false,\n  };\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}