{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"C:/Users/Rohith/mern/frontend/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\n\nvar _createForOfIteratorHelper = require(\"C:/Users/Rohith/mern/frontend/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\n\nvar _toConsumableArray = require(\"C:/Users/Rohith/mern/frontend/node_modules/@babel/runtime/helpers/toConsumableArray.js\").default;\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime().mark(loadPluginDescriptor),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime().mark(loadPresetDescriptor);\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nfunction _gensync() {\n  var data = require(\"gensync\");\n\n  _gensync = function _gensync() {\n    return data;\n  };\n\n  return data;\n}\n\nvar _async = require(\"../gensync-utils/async\");\n\nvar _util = require(\"./util\");\n\nvar context = require(\"../index\");\n\nvar _plugin = require(\"./plugin\");\n\nvar _item = require(\"./item\");\n\nvar _configChain = require(\"./config-chain\");\n\nvar _deepArray = require(\"./helpers/deep-array\");\n\nfunction _traverse() {\n  var data = require(\"@babel/traverse\");\n\n  _traverse = function _traverse() {\n    return data;\n  };\n\n  return data;\n}\n\nvar _caching = require(\"./caching\");\n\nvar _options = require(\"./validation/options\");\n\nvar _plugins = require(\"./validation/plugins\");\n\nvar _configApi = require(\"./helpers/config-api\");\n\nvar _partial = require(\"./partial\");\n\nvar _configError = require(\"../errors/config-error\");\n\nvar _default = _gensync()( /*#__PURE__*/_regeneratorRuntime().mark(function loadFullConfig(inputOpts) {\n  var _opts$assumptions, result, options, context, fileHandling, optionDefaults, plugins, presets, presetContext, toDescriptor, presetsDescriptors, initialPluginsDescriptors, pluginDescriptorsByPass, passes, externalDependencies, ignored, opts, pluginContext;\n\n  return _regeneratorRuntime().wrap(function loadFullConfig$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          return _context3.delegateYield((0, _partial.default)(inputOpts), \"t0\", 1);\n\n        case 1:\n          result = _context3.t0;\n\n          if (result) {\n            _context3.next = 4;\n            break;\n          }\n\n          return _context3.abrupt(\"return\", null);\n\n        case 4:\n          options = result.options, context = result.context, fileHandling = result.fileHandling;\n\n          if (!(fileHandling === \"ignored\")) {\n            _context3.next = 7;\n            break;\n          }\n\n          return _context3.abrupt(\"return\", null);\n\n        case 7:\n          optionDefaults = {};\n          plugins = options.plugins, presets = options.presets;\n\n          if (!(!plugins || !presets)) {\n            _context3.next = 11;\n            break;\n          }\n\n          throw new Error(\"Assertion failure - plugins and presets exist\");\n\n        case 11:\n          presetContext = Object.assign({}, context, {\n            targets: options.targets\n          });\n\n          toDescriptor = function toDescriptor(item) {\n            var desc = (0, _item.getItemDescriptor)(item);\n\n            if (!desc) {\n              throw new Error(\"Assertion failure - must be config item\");\n            }\n\n            return desc;\n          };\n\n          presetsDescriptors = presets.map(toDescriptor);\n          initialPluginsDescriptors = plugins.map(toDescriptor);\n          pluginDescriptorsByPass = [[]];\n          passes = [];\n          externalDependencies = [];\n          return _context3.delegateYield(enhanceError(context, /*#__PURE__*/_regeneratorRuntime().mark(function recursePresetDescriptors(rawPresets, pluginDescriptorsPass) {\n            var presets, i, descriptor, preset, _iterator, _step, _step$value, _preset, pass, _ignored;\n\n            return _regeneratorRuntime().wrap(function recursePresetDescriptors$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    presets = [];\n                    i = 0;\n\n                  case 2:\n                    if (!(i < rawPresets.length)) {\n                      _context.next = 19;\n                      break;\n                    }\n\n                    descriptor = rawPresets[i];\n\n                    if (!(descriptor.options !== false)) {\n                      _context.next = 16;\n                      break;\n                    }\n\n                    _context.prev = 5;\n                    return _context.delegateYield(loadPresetDescriptor(descriptor, presetContext), \"t0\", 7);\n\n                  case 7:\n                    preset = _context.t0;\n                    _context.next = 14;\n                    break;\n\n                  case 10:\n                    _context.prev = 10;\n                    _context.t1 = _context[\"catch\"](5);\n\n                    if (_context.t1.code === \"BABEL_UNKNOWN_OPTION\") {\n                      (0, _options.checkNoUnwrappedItemOptionPairs)(rawPresets, i, \"preset\", _context.t1);\n                    }\n\n                    throw _context.t1;\n\n                  case 14:\n                    externalDependencies.push(preset.externalDependencies);\n\n                    if (descriptor.ownPass) {\n                      presets.push({\n                        preset: preset.chain,\n                        pass: []\n                      });\n                    } else {\n                      presets.unshift({\n                        preset: preset.chain,\n                        pass: pluginDescriptorsPass\n                      });\n                    }\n\n                  case 16:\n                    i++;\n                    _context.next = 2;\n                    break;\n\n                  case 19:\n                    if (!(presets.length > 0)) {\n                      _context.next = 44;\n                      break;\n                    }\n\n                    pluginDescriptorsByPass.splice.apply(pluginDescriptorsByPass, [1, 0].concat(_toConsumableArray(presets.map(function (o) {\n                      return o.pass;\n                    }).filter(function (p) {\n                      return p !== pluginDescriptorsPass;\n                    }))));\n                    _iterator = _createForOfIteratorHelper(presets);\n                    _context.prev = 22;\n\n                    _iterator.s();\n\n                  case 24:\n                    if ((_step = _iterator.n()).done) {\n                      _context.next = 36;\n                      break;\n                    }\n\n                    _step$value = _step.value, _preset = _step$value.preset, pass = _step$value.pass;\n\n                    if (_preset) {\n                      _context.next = 28;\n                      break;\n                    }\n\n                    return _context.abrupt(\"return\", true);\n\n                  case 28:\n                    pass.push.apply(pass, _toConsumableArray(_preset.plugins));\n                    return _context.delegateYield(recursePresetDescriptors(_preset.presets, pass), \"t2\", 30);\n\n                  case 30:\n                    _ignored = _context.t2;\n\n                    if (!_ignored) {\n                      _context.next = 33;\n                      break;\n                    }\n\n                    return _context.abrupt(\"return\", true);\n\n                  case 33:\n                    _preset.options.forEach(function (opts) {\n                      (0, _util.mergeOptions)(optionDefaults, opts);\n                    });\n\n                  case 34:\n                    _context.next = 24;\n                    break;\n\n                  case 36:\n                    _context.next = 41;\n                    break;\n\n                  case 38:\n                    _context.prev = 38;\n                    _context.t3 = _context[\"catch\"](22);\n\n                    _iterator.e(_context.t3);\n\n                  case 41:\n                    _context.prev = 41;\n\n                    _iterator.f();\n\n                    return _context.finish(41);\n\n                  case 44:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, recursePresetDescriptors, null, [[5, 10], [22, 38, 41, 44]]);\n          }))(presetsDescriptors, pluginDescriptorsByPass[0]), \"t1\", 19);\n\n        case 19:\n          ignored = _context3.t1;\n\n          if (!ignored) {\n            _context3.next = 22;\n            break;\n          }\n\n          return _context3.abrupt(\"return\", null);\n\n        case 22:\n          opts = optionDefaults;\n          (0, _util.mergeOptions)(opts, options);\n          pluginContext = Object.assign({}, presetContext, {\n            assumptions: (_opts$assumptions = opts.assumptions) != null ? _opts$assumptions : {}\n          });\n          return _context3.delegateYield(enhanceError(context, /*#__PURE__*/_regeneratorRuntime().mark(function loadPluginDescriptors() {\n            var _pluginDescriptorsByP;\n\n            var _iterator2, _step2, descs, pass, i, descriptor, plugin;\n\n            return _regeneratorRuntime().wrap(function loadPluginDescriptors$(_context2) {\n              while (1) {\n                switch (_context2.prev = _context2.next) {\n                  case 0:\n                    (_pluginDescriptorsByP = pluginDescriptorsByPass[0]).unshift.apply(_pluginDescriptorsByP, _toConsumableArray(initialPluginsDescriptors));\n\n                    _iterator2 = _createForOfIteratorHelper(pluginDescriptorsByPass);\n                    _context2.prev = 2;\n\n                    _iterator2.s();\n\n                  case 4:\n                    if ((_step2 = _iterator2.n()).done) {\n                      _context2.next = 28;\n                      break;\n                    }\n\n                    descs = _step2.value;\n                    pass = [];\n                    passes.push(pass);\n                    i = 0;\n\n                  case 9:\n                    if (!(i < descs.length)) {\n                      _context2.next = 26;\n                      break;\n                    }\n\n                    descriptor = descs[i];\n\n                    if (!(descriptor.options !== false)) {\n                      _context2.next = 23;\n                      break;\n                    }\n\n                    _context2.prev = 12;\n                    return _context2.delegateYield(loadPluginDescriptor(descriptor, pluginContext), \"t0\", 14);\n\n                  case 14:\n                    plugin = _context2.t0;\n                    _context2.next = 21;\n                    break;\n\n                  case 17:\n                    _context2.prev = 17;\n                    _context2.t1 = _context2[\"catch\"](12);\n\n                    if (_context2.t1.code === \"BABEL_UNKNOWN_PLUGIN_PROPERTY\") {\n                      (0, _options.checkNoUnwrappedItemOptionPairs)(descs, i, \"plugin\", _context2.t1);\n                    }\n\n                    throw _context2.t1;\n\n                  case 21:\n                    pass.push(plugin);\n                    externalDependencies.push(plugin.externalDependencies);\n\n                  case 23:\n                    i++;\n                    _context2.next = 9;\n                    break;\n\n                  case 26:\n                    _context2.next = 4;\n                    break;\n\n                  case 28:\n                    _context2.next = 33;\n                    break;\n\n                  case 30:\n                    _context2.prev = 30;\n                    _context2.t2 = _context2[\"catch\"](2);\n\n                    _iterator2.e(_context2.t2);\n\n                  case 33:\n                    _context2.prev = 33;\n\n                    _iterator2.f();\n\n                    return _context2.finish(33);\n\n                  case 36:\n                  case \"end\":\n                    return _context2.stop();\n                }\n              }\n            }, loadPluginDescriptors, null, [[2, 30, 33, 36], [12, 17]]);\n          }))(), \"t2\", 26);\n\n        case 26:\n          opts.plugins = passes[0];\n          opts.presets = passes.slice(1).filter(function (plugins) {\n            return plugins.length > 0;\n          }).map(function (plugins) {\n            return {\n              plugins: plugins\n            };\n          });\n          opts.passPerPreset = opts.presets.length > 0;\n          return _context3.abrupt(\"return\", {\n            options: opts,\n            passes: passes,\n            externalDependencies: (0, _deepArray.finalize)(externalDependencies)\n          });\n\n        case 30:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, loadFullConfig);\n}));\n\nexports.default = _default;\n\nfunction enhanceError(context, fn) {\n  return /*#__PURE__*/_regeneratorRuntime().mark(function _callee(arg1, arg2) {\n    var _context$filename;\n\n    return _regeneratorRuntime().wrap(function _callee$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.prev = 0;\n            return _context4.delegateYield(fn(arg1, arg2), \"t0\", 2);\n\n          case 2:\n            return _context4.abrupt(\"return\", _context4.t0);\n\n          case 5:\n            _context4.prev = 5;\n            _context4.t1 = _context4[\"catch\"](0);\n\n            if (!/^\\[BABEL\\]/.test(_context4.t1.message)) {\n              _context4.t1.message = \"[BABEL] \".concat((_context$filename = context.filename) != null ? _context$filename : \"unknown file\", \": \").concat(_context4.t1.message);\n            }\n\n            throw _context4.t1;\n\n          case 9:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee, null, [[0, 5]]);\n  });\n}\n\nvar makeDescriptorLoader = function makeDescriptorLoader(apiFactory) {\n  return (0, _caching.makeWeakCache)( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(_ref, cache) {\n    var value, options, dirname, alias, externalDependencies, item, factory, api, error;\n    return _regeneratorRuntime().wrap(function _callee2$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            value = _ref.value, options = _ref.options, dirname = _ref.dirname, alias = _ref.alias;\n\n            if (!(options === false)) {\n              _context5.next = 3;\n              break;\n            }\n\n            throw new Error(\"Assertion failure\");\n\n          case 3:\n            options = options || {};\n            externalDependencies = [];\n            item = value;\n\n            if (!(typeof value === \"function\")) {\n              _context5.next = 18;\n              break;\n            }\n\n            factory = (0, _async.maybeAsync)(value, \"You appear to be using an async plugin/preset, but Babel has been called synchronously\");\n            api = Object.assign({}, context, apiFactory(cache, externalDependencies));\n            _context5.prev = 9;\n            return _context5.delegateYield(factory(api, options, dirname), \"t0\", 11);\n\n          case 11:\n            item = _context5.t0;\n            _context5.next = 18;\n            break;\n\n          case 14:\n            _context5.prev = 14;\n            _context5.t1 = _context5[\"catch\"](9);\n\n            if (alias) {\n              _context5.t1.message += \" (While processing: \".concat(JSON.stringify(alias), \")\");\n            }\n\n            throw _context5.t1;\n\n          case 18:\n            if (!(!item || typeof item !== \"object\")) {\n              _context5.next = 20;\n              break;\n            }\n\n            throw new Error(\"Plugin/Preset did not return an object.\");\n\n          case 20:\n            if (!(0, _async.isThenable)(item)) {\n              _context5.next = 23;\n              break;\n            }\n\n            return _context5.delegateYield([], \"t2\", 22);\n\n          case 22:\n            throw new Error(\"You appear to be using a promise as a plugin, \" + \"which your current version of Babel does not support. \" + \"If you're using a published plugin, \" + \"you may need to upgrade your @babel/core version. \" + \"As an alternative, you can prefix the promise with \\\"await\\\". \" + \"(While processing: \".concat(JSON.stringify(alias), \")\"));\n\n          case 23:\n            if (!(externalDependencies.length > 0 && (!cache.configured() || cache.mode() === \"forever\"))) {\n              _context5.next = 28;\n              break;\n            }\n\n            error = \"A plugin/preset has external untracked dependencies \" + \"(\".concat(externalDependencies[0], \"), but the cache \");\n\n            if (!cache.configured()) {\n              error += \"has not been configured to be invalidated when the external dependencies change. \";\n            } else {\n              error += \" has been configured to never be invalidated. \";\n            }\n\n            error += \"Plugins/presets should configure their cache to be invalidated when the external \" + \"dependencies change, for example using `api.cache.invalidate(() => \" + \"statSync(filepath).mtimeMs)` or `api.cache.never()`\\n\" + \"(While processing: \".concat(JSON.stringify(alias), \")\");\n            throw new Error(error);\n\n          case 28:\n            return _context5.abrupt(\"return\", {\n              value: item,\n              options: options,\n              dirname: dirname,\n              alias: alias,\n              externalDependencies: (0, _deepArray.finalize)(externalDependencies)\n            });\n\n          case 29:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee2, null, [[9, 14]]);\n  }));\n};\n\nvar pluginDescriptorLoader = makeDescriptorLoader(_configApi.makePluginAPI);\nvar presetDescriptorLoader = makeDescriptorLoader(_configApi.makePresetAPI);\n\nfunction loadPluginDescriptor(descriptor, context) {\n  return _regeneratorRuntime().wrap(function loadPluginDescriptor$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          if (!(descriptor.value instanceof _plugin.default)) {\n            _context6.next = 4;\n            break;\n          }\n\n          if (!descriptor.options) {\n            _context6.next = 3;\n            break;\n          }\n\n          throw new Error(\"Passed options to an existing Plugin instance will not work.\");\n\n        case 3:\n          return _context6.abrupt(\"return\", descriptor.value);\n\n        case 4:\n          _context6.t0 = instantiatePlugin;\n          return _context6.delegateYield(pluginDescriptorLoader(descriptor, context), \"t1\", 6);\n\n        case 6:\n          _context6.t2 = _context6.t1;\n          _context6.t3 = context;\n          return _context6.delegateYield((0, _context6.t0)(_context6.t2, _context6.t3), \"t4\", 9);\n\n        case 9:\n          return _context6.abrupt(\"return\", _context6.t4);\n\n        case 10:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked);\n}\n\nvar instantiatePlugin = (0, _caching.makeWeakCache)( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(_ref2, cache) {\n  var value, options, dirname, alias, externalDependencies, pluginObj, plugin, inheritsDescriptor, inherits;\n  return _regeneratorRuntime().wrap(function _callee3$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          value = _ref2.value, options = _ref2.options, dirname = _ref2.dirname, alias = _ref2.alias, externalDependencies = _ref2.externalDependencies;\n          pluginObj = (0, _plugins.validatePluginObject)(value);\n          plugin = Object.assign({}, pluginObj);\n\n          if (plugin.visitor) {\n            plugin.visitor = _traverse().default.explode(Object.assign({}, plugin.visitor));\n          }\n\n          if (!plugin.inherits) {\n            _context7.next = 13;\n            break;\n          }\n\n          inheritsDescriptor = {\n            name: undefined,\n            alias: \"\".concat(alias, \"$inherits\"),\n            value: plugin.inherits,\n            options: options,\n            dirname: dirname\n          };\n          return _context7.delegateYield((0, _async.forwardAsync)(loadPluginDescriptor, function (run) {\n            return cache.invalidate(function (data) {\n              return run(inheritsDescriptor, data);\n            });\n          }), \"t0\", 7);\n\n        case 7:\n          inherits = _context7.t0;\n          plugin.pre = chain(inherits.pre, plugin.pre);\n          plugin.post = chain(inherits.post, plugin.post);\n          plugin.manipulateOptions = chain(inherits.manipulateOptions, plugin.manipulateOptions);\n          plugin.visitor = _traverse().default.visitors.merge([inherits.visitor || {}, plugin.visitor || {}]);\n\n          if (inherits.externalDependencies.length > 0) {\n            if (externalDependencies.length === 0) {\n              externalDependencies = inherits.externalDependencies;\n            } else {\n              externalDependencies = (0, _deepArray.finalize)([externalDependencies, inherits.externalDependencies]);\n            }\n          }\n\n        case 13:\n          return _context7.abrupt(\"return\", new _plugin.default(plugin, options, alias, externalDependencies));\n\n        case 14:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _callee3);\n}));\n\nvar validateIfOptionNeedsFilename = function validateIfOptionNeedsFilename(options, descriptor) {\n  if (options.test || options.include || options.exclude) {\n    var formattedPresetName = descriptor.name ? \"\\\"\".concat(descriptor.name, \"\\\"\") : \"/* your preset */\";\n    throw new _configError.default([\"Preset \".concat(formattedPresetName, \" requires a filename to be set when babel is called directly,\"), \"```\", \"babel.transformSync(code, { filename: 'file.ts', presets: [\".concat(formattedPresetName, \"] });\"), \"```\", \"See https://babeljs.io/docs/en/options#filename for more information.\"].join(\"\\n\"));\n  }\n};\n\nvar validatePreset = function validatePreset(preset, context, descriptor) {\n  if (!context.filename) {\n    var options = preset.options;\n    validateIfOptionNeedsFilename(options, descriptor);\n\n    if (options.overrides) {\n      options.overrides.forEach(function (overrideOptions) {\n        return validateIfOptionNeedsFilename(overrideOptions, descriptor);\n      });\n    }\n  }\n};\n\nfunction loadPresetDescriptor(descriptor, context) {\n  var preset;\n  return _regeneratorRuntime().wrap(function loadPresetDescriptor$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.t0 = instantiatePreset;\n          return _context8.delegateYield(presetDescriptorLoader(descriptor, context), \"t1\", 2);\n\n        case 2:\n          _context8.t2 = _context8.t1;\n          preset = (0, _context8.t0)(_context8.t2);\n          validatePreset(preset, context, descriptor);\n          return _context8.delegateYield((0, _configChain.buildPresetChain)(preset, context), \"t3\", 6);\n\n        case 6:\n          _context8.t4 = _context8.t3;\n          _context8.t5 = preset.externalDependencies;\n          return _context8.abrupt(\"return\", {\n            chain: _context8.t4,\n            externalDependencies: _context8.t5\n          });\n\n        case 9:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, _marked2);\n}\n\nvar instantiatePreset = (0, _caching.makeWeakCacheSync)(function (_ref3) {\n  var value = _ref3.value,\n      dirname = _ref3.dirname,\n      alias = _ref3.alias,\n      externalDependencies = _ref3.externalDependencies;\n  return {\n    options: (0, _options.validate)(\"preset\", value),\n    alias: alias,\n    dirname: dirname,\n    externalDependencies: externalDependencies\n  };\n});\n\nfunction chain(a, b) {\n  var fns = [a, b].filter(Boolean);\n  if (fns.length <= 1) return fns[0];\n  return function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var _iterator3 = _createForOfIteratorHelper(fns),\n        _step3;\n\n    try {\n      for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n        var fn = _step3.value;\n        fn.apply(this, args);\n      }\n    } catch (err) {\n      _iterator3.e(err);\n    } finally {\n      _iterator3.f();\n    }\n  };\n}\n\n0 && 0;","map":{"version":3,"mappings":"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","names":["loadPluginDescriptor","loadPresetDescriptor","_gensync","_traverse","gensync","loadFullConfig","inputOpts","result","options","context","fileHandling","optionDefaults","plugins","presets","Error","presetContext","Object","targets","toDescriptor","item","desc","presetsDescriptors","map","initialPluginsDescriptors","pluginDescriptorsByPass","passes","externalDependencies","enhanceError","recursePresetDescriptors","rawPresets","pluginDescriptorsPass","i","length","descriptor","preset","e","code","push","ownPass","chain","pass","unshift","splice","o","filter","p","ignored","forEach","opts","pluginContext","assumptions","loadPluginDescriptors","descs","plugin","slice","passPerPreset","fn","arg1","arg2","test","message","filename","makeDescriptorLoader","apiFactory","cache","value","dirname","alias","factory","api","JSON","stringify","configured","mode","error","pluginDescriptorLoader","makePluginAPI","presetDescriptorLoader","makePresetAPI","Plugin","instantiatePlugin","pluginObj","visitor","traverse","explode","inherits","inheritsDescriptor","name","undefined","run","invalidate","data","pre","post","manipulateOptions","visitors","merge","validateIfOptionNeedsFilename","include","exclude","formattedPresetName","ConfigError","join","validatePreset","overrides","overrideOptions","instantiatePreset","a","b","fns","Boolean","args","apply"],"sources":["C:\\Users\\Rohith\\mern\\frontend\\node_modules\\@babel\\core\\src\\config\\full.ts"],"sourcesContent":["import gensync, { type Handler } from \"gensync\";\nimport { forwardAsync, maybeAsync, isThenable } from \"../gensync-utils/async\";\n\nimport { mergeOptions } from \"./util\";\nimport * as context from \"../index\";\nimport Plugin from \"./plugin\";\nimport { getItemDescriptor } from \"./item\";\nimport { buildPresetChain } from \"./config-chain\";\nimport { finalize as freezeDeepArray } from \"./helpers/deep-array\";\nimport type { DeepArray, ReadonlyDeepArray } from \"./helpers/deep-array\";\nimport type {\n  ConfigContext,\n  ConfigChain,\n  PresetInstance,\n} from \"./config-chain\";\nimport type { UnloadedDescriptor } from \"./config-descriptors\";\nimport traverse from \"@babel/traverse\";\nimport { makeWeakCache, makeWeakCacheSync } from \"./caching\";\nimport type { CacheConfigurator } from \"./caching\";\nimport {\n  validate,\n  checkNoUnwrappedItemOptionPairs,\n} from \"./validation/options\";\nimport type { PluginItem } from \"./validation/options\";\nimport { validatePluginObject } from \"./validation/plugins\";\nimport { makePluginAPI, makePresetAPI } from \"./helpers/config-api\";\nimport type { PluginAPI, PresetAPI } from \"./helpers/config-api\";\n\nimport loadPrivatePartialConfig from \"./partial\";\nimport type { ValidatedOptions } from \"./validation/options\";\n\nimport type * as Context from \"./cache-contexts\";\nimport ConfigError from \"../errors/config-error\";\n\ntype LoadedDescriptor = {\n  value: {};\n  options: {};\n  dirname: string;\n  alias: string;\n  externalDependencies: ReadonlyDeepArray<string>;\n};\n\nexport type { InputOptions } from \"./validation/options\";\n\nexport type ResolvedConfig = {\n  options: any;\n  passes: PluginPasses;\n  externalDependencies: ReadonlyDeepArray<string>;\n};\n\nexport type { Plugin };\nexport type PluginPassList = Array<Plugin>;\nexport type PluginPasses = Array<PluginPassList>;\n\nexport default gensync(function* loadFullConfig(\n  inputOpts: unknown,\n): Handler<ResolvedConfig | null> {\n  const result = yield* loadPrivatePartialConfig(inputOpts);\n  if (!result) {\n    return null;\n  }\n  const { options, context, fileHandling } = result;\n\n  if (fileHandling === \"ignored\") {\n    return null;\n  }\n\n  const optionDefaults = {};\n\n  const { plugins, presets } = options;\n\n  if (!plugins || !presets) {\n    throw new Error(\"Assertion failure - plugins and presets exist\");\n  }\n\n  const presetContext: Context.FullPreset = {\n    ...context,\n    targets: options.targets,\n  };\n\n  const toDescriptor = (item: PluginItem) => {\n    const desc = getItemDescriptor(item);\n    if (!desc) {\n      throw new Error(\"Assertion failure - must be config item\");\n    }\n\n    return desc;\n  };\n\n  const presetsDescriptors = presets.map(toDescriptor);\n  const initialPluginsDescriptors = plugins.map(toDescriptor);\n  const pluginDescriptorsByPass: Array<Array<UnloadedDescriptor>> = [[]];\n  const passes: Array<Array<Plugin>> = [];\n\n  const externalDependencies: DeepArray<string> = [];\n\n  const ignored = yield* enhanceError(\n    context,\n    function* recursePresetDescriptors(\n      rawPresets: Array<UnloadedDescriptor>,\n      pluginDescriptorsPass: Array<UnloadedDescriptor>,\n    ): Handler<true | void> {\n      const presets: Array<{\n        preset: ConfigChain | null;\n        pass: Array<UnloadedDescriptor>;\n      }> = [];\n\n      for (let i = 0; i < rawPresets.length; i++) {\n        const descriptor = rawPresets[i];\n        if (descriptor.options !== false) {\n          try {\n            // eslint-disable-next-line no-var\n            var preset = yield* loadPresetDescriptor(descriptor, presetContext);\n          } catch (e) {\n            if (e.code === \"BABEL_UNKNOWN_OPTION\") {\n              checkNoUnwrappedItemOptionPairs(rawPresets, i, \"preset\", e);\n            }\n            throw e;\n          }\n\n          externalDependencies.push(preset.externalDependencies);\n\n          // Presets normally run in reverse order, but if they\n          // have their own pass they run after the presets\n          // in the previous pass.\n          if (descriptor.ownPass) {\n            presets.push({ preset: preset.chain, pass: [] });\n          } else {\n            presets.unshift({\n              preset: preset.chain,\n              pass: pluginDescriptorsPass,\n            });\n          }\n        }\n      }\n\n      // resolve presets\n      if (presets.length > 0) {\n        // The passes are created in the same order as the preset list, but are inserted before any\n        // existing additional passes.\n        pluginDescriptorsByPass.splice(\n          1,\n          0,\n          ...presets.map(o => o.pass).filter(p => p !== pluginDescriptorsPass),\n        );\n\n        for (const { preset, pass } of presets) {\n          if (!preset) return true;\n\n          pass.push(...preset.plugins);\n\n          const ignored = yield* recursePresetDescriptors(preset.presets, pass);\n          if (ignored) return true;\n\n          preset.options.forEach(opts => {\n            mergeOptions(optionDefaults, opts);\n          });\n        }\n      }\n    },\n  )(presetsDescriptors, pluginDescriptorsByPass[0]);\n\n  if (ignored) return null;\n\n  const opts: any = optionDefaults;\n  mergeOptions(opts, options);\n\n  const pluginContext: Context.FullPlugin = {\n    ...presetContext,\n    assumptions: opts.assumptions ?? {},\n  };\n\n  yield* enhanceError(context, function* loadPluginDescriptors() {\n    pluginDescriptorsByPass[0].unshift(...initialPluginsDescriptors);\n\n    for (const descs of pluginDescriptorsByPass) {\n      const pass: Plugin[] = [];\n      passes.push(pass);\n\n      for (let i = 0; i < descs.length; i++) {\n        const descriptor: UnloadedDescriptor = descs[i];\n        if (descriptor.options !== false) {\n          try {\n            // eslint-disable-next-line no-var\n            var plugin = yield* loadPluginDescriptor(descriptor, pluginContext);\n          } catch (e) {\n            if (e.code === \"BABEL_UNKNOWN_PLUGIN_PROPERTY\") {\n              // print special message for `plugins: [\"@babel/foo\", { foo: \"option\" }]`\n              checkNoUnwrappedItemOptionPairs(descs, i, \"plugin\", e);\n            }\n            throw e;\n          }\n          pass.push(plugin);\n\n          externalDependencies.push(plugin.externalDependencies);\n        }\n      }\n    }\n  })();\n\n  opts.plugins = passes[0];\n  opts.presets = passes\n    .slice(1)\n    .filter(plugins => plugins.length > 0)\n    .map(plugins => ({ plugins }));\n  opts.passPerPreset = opts.presets.length > 0;\n\n  return {\n    options: opts,\n    passes: passes,\n    externalDependencies: freezeDeepArray(externalDependencies),\n  };\n});\n\nfunction enhanceError<T extends Function>(context: ConfigContext, fn: T): T {\n  return function* (arg1: unknown, arg2: unknown) {\n    try {\n      return yield* fn(arg1, arg2);\n    } catch (e) {\n      // There are a few case where thrown errors will try to annotate themselves multiple times, so\n      // to keep things simple we just bail out if re-wrapping the message.\n      if (!/^\\[BABEL\\]/.test(e.message)) {\n        e.message = `[BABEL] ${context.filename ?? \"unknown file\"}: ${\n          e.message\n        }`;\n      }\n\n      throw e;\n    }\n  } as any;\n}\n\n/**\n * Load a generic plugin/preset from the given descriptor loaded from the config object.\n */\nconst makeDescriptorLoader = <Context, API>(\n  apiFactory: (\n    cache: CacheConfigurator<Context>,\n    externalDependencies: Array<string>,\n  ) => API,\n) =>\n  makeWeakCache(function* (\n    { value, options, dirname, alias }: UnloadedDescriptor,\n    cache: CacheConfigurator<Context>,\n  ): Handler<LoadedDescriptor> {\n    // Disabled presets should already have been filtered out\n    if (options === false) throw new Error(\"Assertion failure\");\n\n    options = options || {};\n\n    const externalDependencies: Array<string> = [];\n\n    let item = value;\n    if (typeof value === \"function\") {\n      const factory = maybeAsync(\n        value,\n        `You appear to be using an async plugin/preset, but Babel has been called synchronously`,\n      );\n\n      const api = {\n        ...context,\n        ...apiFactory(cache, externalDependencies),\n      };\n      try {\n        item = yield* factory(api, options, dirname);\n      } catch (e) {\n        if (alias) {\n          e.message += ` (While processing: ${JSON.stringify(alias)})`;\n        }\n        throw e;\n      }\n    }\n\n    if (!item || typeof item !== \"object\") {\n      throw new Error(\"Plugin/Preset did not return an object.\");\n    }\n\n    if (isThenable(item)) {\n      // @ts-expect-error - if we want to support async plugins\n      yield* [];\n\n      throw new Error(\n        `You appear to be using a promise as a plugin, ` +\n          `which your current version of Babel does not support. ` +\n          `If you're using a published plugin, ` +\n          `you may need to upgrade your @babel/core version. ` +\n          `As an alternative, you can prefix the promise with \"await\". ` +\n          `(While processing: ${JSON.stringify(alias)})`,\n      );\n    }\n\n    if (\n      externalDependencies.length > 0 &&\n      (!cache.configured() || cache.mode() === \"forever\")\n    ) {\n      let error =\n        `A plugin/preset has external untracked dependencies ` +\n        `(${externalDependencies[0]}), but the cache `;\n      if (!cache.configured()) {\n        error += `has not been configured to be invalidated when the external dependencies change. `;\n      } else {\n        error += ` has been configured to never be invalidated. `;\n      }\n      error +=\n        `Plugins/presets should configure their cache to be invalidated when the external ` +\n        `dependencies change, for example using \\`api.cache.invalidate(() => ` +\n        `statSync(filepath).mtimeMs)\\` or \\`api.cache.never()\\`\\n` +\n        `(While processing: ${JSON.stringify(alias)})`;\n\n      throw new Error(error);\n    }\n\n    return {\n      value: item,\n      options,\n      dirname,\n      alias,\n      externalDependencies: freezeDeepArray(externalDependencies),\n    };\n  });\n\nconst pluginDescriptorLoader = makeDescriptorLoader<\n  Context.SimplePlugin,\n  PluginAPI\n>(makePluginAPI);\nconst presetDescriptorLoader = makeDescriptorLoader<\n  Context.SimplePreset,\n  PresetAPI\n>(makePresetAPI);\n\n/**\n * Instantiate a plugin for the given descriptor, returning the plugin/options pair.\n */\nfunction* loadPluginDescriptor(\n  descriptor: UnloadedDescriptor,\n  context: Context.SimplePlugin,\n): Handler<Plugin> {\n  if (descriptor.value instanceof Plugin) {\n    if (descriptor.options) {\n      throw new Error(\n        \"Passed options to an existing Plugin instance will not work.\",\n      );\n    }\n\n    return descriptor.value;\n  }\n\n  return yield* instantiatePlugin(\n    yield* pluginDescriptorLoader(descriptor, context),\n    context,\n  );\n}\n\nconst instantiatePlugin = makeWeakCache(function* (\n  { value, options, dirname, alias, externalDependencies }: LoadedDescriptor,\n  cache: CacheConfigurator<Context.SimplePlugin>,\n): Handler<Plugin> {\n  const pluginObj = validatePluginObject(value);\n\n  const plugin = {\n    ...pluginObj,\n  };\n  if (plugin.visitor) {\n    plugin.visitor = traverse.explode({\n      ...plugin.visitor,\n    });\n  }\n\n  if (plugin.inherits) {\n    const inheritsDescriptor: UnloadedDescriptor = {\n      name: undefined,\n      alias: `${alias}$inherits`,\n      value: plugin.inherits,\n      options,\n      dirname,\n    };\n\n    const inherits = yield* forwardAsync(loadPluginDescriptor, run => {\n      // If the inherited plugin changes, reinstantiate this plugin.\n      return cache.invalidate(data => run(inheritsDescriptor, data));\n    });\n\n    plugin.pre = chain(inherits.pre, plugin.pre);\n    plugin.post = chain(inherits.post, plugin.post);\n    plugin.manipulateOptions = chain(\n      inherits.manipulateOptions,\n      plugin.manipulateOptions,\n    );\n    plugin.visitor = traverse.visitors.merge([\n      inherits.visitor || {},\n      plugin.visitor || {},\n    ]);\n\n    if (inherits.externalDependencies.length > 0) {\n      if (externalDependencies.length === 0) {\n        externalDependencies = inherits.externalDependencies;\n      } else {\n        externalDependencies = freezeDeepArray([\n          externalDependencies,\n          inherits.externalDependencies,\n        ]);\n      }\n    }\n  }\n\n  return new Plugin(plugin, options, alias, externalDependencies);\n});\n\nconst validateIfOptionNeedsFilename = (\n  options: ValidatedOptions,\n  descriptor: UnloadedDescriptor,\n): void => {\n  if (options.test || options.include || options.exclude) {\n    const formattedPresetName = descriptor.name\n      ? `\"${descriptor.name}\"`\n      : \"/* your preset */\";\n    throw new ConfigError(\n      [\n        `Preset ${formattedPresetName} requires a filename to be set when babel is called directly,`,\n        `\\`\\`\\``,\n        `babel.transformSync(code, { filename: 'file.ts', presets: [${formattedPresetName}] });`,\n        `\\`\\`\\``,\n        `See https://babeljs.io/docs/en/options#filename for more information.`,\n      ].join(\"\\n\"),\n    );\n  }\n};\n\nconst validatePreset = (\n  preset: PresetInstance,\n  context: ConfigContext,\n  descriptor: UnloadedDescriptor,\n): void => {\n  if (!context.filename) {\n    const { options } = preset;\n    validateIfOptionNeedsFilename(options, descriptor);\n    if (options.overrides) {\n      options.overrides.forEach(overrideOptions =>\n        validateIfOptionNeedsFilename(overrideOptions, descriptor),\n      );\n    }\n  }\n};\n\n/**\n * Generate a config object that will act as the root of a new nested config.\n */\nfunction* loadPresetDescriptor(\n  descriptor: UnloadedDescriptor,\n  context: Context.FullPreset,\n): Handler<{\n  chain: ConfigChain | null;\n  externalDependencies: ReadonlyDeepArray<string>;\n}> {\n  const preset = instantiatePreset(\n    yield* presetDescriptorLoader(descriptor, context),\n  );\n  validatePreset(preset, context, descriptor);\n  return {\n    chain: yield* buildPresetChain(preset, context),\n    externalDependencies: preset.externalDependencies,\n  };\n}\n\nconst instantiatePreset = makeWeakCacheSync(\n  ({\n    value,\n    dirname,\n    alias,\n    externalDependencies,\n  }: LoadedDescriptor): PresetInstance => {\n    return {\n      options: validate(\"preset\", value),\n      alias,\n      dirname,\n      externalDependencies,\n    };\n  },\n);\n\nfunction chain<Args extends any[]>(\n  a: undefined | ((...args: Args) => void),\n  b: undefined | ((...args: Args) => void),\n) {\n  const fns = [a, b].filter(Boolean);\n  if (fns.length <= 1) return fns[0];\n\n  return function (this: unknown, ...args: unknown[]) {\n    for (const fn of fns) {\n      fn.apply(this, args);\n    }\n  };\n}\n"]},"metadata":{},"sourceType":"script"}