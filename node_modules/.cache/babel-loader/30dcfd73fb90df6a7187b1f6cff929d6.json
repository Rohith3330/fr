{"ast":null,"code":"'use strict';\n\nvar test = require('tape');\n\nvar qs = require('../');\n\nvar utils = require('../lib/utils');\n\nvar iconv = require('iconv-lite');\n\nvar SaferBuffer = require('safer-buffer').Buffer;\n\nvar hasSymbols = require('has-symbols');\n\nvar hasBigInt = typeof BigInt === 'function';\ntest('stringify()', function (t) {\n  t.test('stringifies a querystring object', function (st) {\n    st.equal(qs.stringify({\n      a: 'b'\n    }), 'a=b');\n    st.equal(qs.stringify({\n      a: 1\n    }), 'a=1');\n    st.equal(qs.stringify({\n      a: 1,\n      b: 2\n    }), 'a=1&b=2');\n    st.equal(qs.stringify({\n      a: 'A_Z'\n    }), 'a=A_Z');\n    st.equal(qs.stringify({\n      a: '€'\n    }), 'a=%E2%82%AC');\n    st.equal(qs.stringify({\n      a: ''\n    }), 'a=%EE%80%80');\n    st.equal(qs.stringify({\n      a: 'א'\n    }), 'a=%D7%90');\n    st.equal(qs.stringify({\n      a: '𐐷'\n    }), 'a=%F0%90%90%B7');\n    st.end();\n  });\n  t.test('stringifies falsy values', function (st) {\n    st.equal(qs.stringify(undefined), '');\n    st.equal(qs.stringify(null), '');\n    st.equal(qs.stringify(null, {\n      strictNullHandling: true\n    }), '');\n    st.equal(qs.stringify(false), '');\n    st.equal(qs.stringify(0), '');\n    st.end();\n  });\n  t.test('stringifies symbols', {\n    skip: !hasSymbols()\n  }, function (st) {\n    st.equal(qs.stringify(Symbol.iterator), '');\n    st.equal(qs.stringify([Symbol.iterator]), '0=Symbol%28Symbol.iterator%29');\n    st.equal(qs.stringify({\n      a: Symbol.iterator\n    }), 'a=Symbol%28Symbol.iterator%29');\n    st.equal(qs.stringify({\n      a: [Symbol.iterator]\n    }, {\n      encodeValuesOnly: true,\n      arrayFormat: 'brackets'\n    }), 'a[]=Symbol%28Symbol.iterator%29');\n    st.end();\n  });\n  t.test('stringifies bigints', {\n    skip: !hasBigInt\n  }, function (st) {\n    var three = BigInt(3);\n\n    var encodeWithN = function (value, defaultEncoder, charset) {\n      var result = defaultEncoder(value, defaultEncoder, charset);\n      return typeof value === 'bigint' ? result + 'n' : result;\n    };\n\n    st.equal(qs.stringify(three), '');\n    st.equal(qs.stringify([three]), '0=3');\n    st.equal(qs.stringify([three], {\n      encoder: encodeWithN\n    }), '0=3n');\n    st.equal(qs.stringify({\n      a: three\n    }), 'a=3');\n    st.equal(qs.stringify({\n      a: three\n    }, {\n      encoder: encodeWithN\n    }), 'a=3n');\n    st.equal(qs.stringify({\n      a: [three]\n    }, {\n      encodeValuesOnly: true,\n      arrayFormat: 'brackets'\n    }), 'a[]=3');\n    st.equal(qs.stringify({\n      a: [three]\n    }, {\n      encodeValuesOnly: true,\n      encoder: encodeWithN,\n      arrayFormat: 'brackets'\n    }), 'a[]=3n');\n    st.end();\n  });\n  t.test('adds query prefix', function (st) {\n    st.equal(qs.stringify({\n      a: 'b'\n    }, {\n      addQueryPrefix: true\n    }), '?a=b');\n    st.end();\n  });\n  t.test('with query prefix, outputs blank string given an empty object', function (st) {\n    st.equal(qs.stringify({}, {\n      addQueryPrefix: true\n    }), '');\n    st.end();\n  });\n  t.test('stringifies nested falsy values', function (st) {\n    st.equal(qs.stringify({\n      a: {\n        b: {\n          c: null\n        }\n      }\n    }), 'a%5Bb%5D%5Bc%5D=');\n    st.equal(qs.stringify({\n      a: {\n        b: {\n          c: null\n        }\n      }\n    }, {\n      strictNullHandling: true\n    }), 'a%5Bb%5D%5Bc%5D');\n    st.equal(qs.stringify({\n      a: {\n        b: {\n          c: false\n        }\n      }\n    }), 'a%5Bb%5D%5Bc%5D=false');\n    st.end();\n  });\n  t.test('stringifies a nested object', function (st) {\n    st.equal(qs.stringify({\n      a: {\n        b: 'c'\n      }\n    }), 'a%5Bb%5D=c');\n    st.equal(qs.stringify({\n      a: {\n        b: {\n          c: {\n            d: 'e'\n          }\n        }\n      }\n    }), 'a%5Bb%5D%5Bc%5D%5Bd%5D=e');\n    st.end();\n  });\n  t.test('stringifies a nested object with dots notation', function (st) {\n    st.equal(qs.stringify({\n      a: {\n        b: 'c'\n      }\n    }, {\n      allowDots: true\n    }), 'a.b=c');\n    st.equal(qs.stringify({\n      a: {\n        b: {\n          c: {\n            d: 'e'\n          }\n        }\n      }\n    }, {\n      allowDots: true\n    }), 'a.b.c.d=e');\n    st.end();\n  });\n  t.test('stringifies an array value', function (st) {\n    st.equal(qs.stringify({\n      a: ['b', 'c', 'd']\n    }, {\n      arrayFormat: 'indices'\n    }), 'a%5B0%5D=b&a%5B1%5D=c&a%5B2%5D=d', 'indices => indices');\n    st.equal(qs.stringify({\n      a: ['b', 'c', 'd']\n    }, {\n      arrayFormat: 'brackets'\n    }), 'a%5B%5D=b&a%5B%5D=c&a%5B%5D=d', 'brackets => brackets');\n    st.equal(qs.stringify({\n      a: ['b', 'c', 'd']\n    }, {\n      arrayFormat: 'comma'\n    }), 'a=b%2Cc%2Cd', 'comma => comma');\n    st.equal(qs.stringify({\n      a: ['b', 'c', 'd']\n    }), 'a%5B0%5D=b&a%5B1%5D=c&a%5B2%5D=d', 'default => indices');\n    st.end();\n  });\n  t.test('omits nulls when asked', function (st) {\n    st.equal(qs.stringify({\n      a: 'b',\n      c: null\n    }, {\n      skipNulls: true\n    }), 'a=b');\n    st.end();\n  });\n  t.test('omits nested nulls when asked', function (st) {\n    st.equal(qs.stringify({\n      a: {\n        b: 'c',\n        d: null\n      }\n    }, {\n      skipNulls: true\n    }), 'a%5Bb%5D=c');\n    st.end();\n  });\n  t.test('omits array indices when asked', function (st) {\n    st.equal(qs.stringify({\n      a: ['b', 'c', 'd']\n    }, {\n      indices: false\n    }), 'a=b&a=c&a=d');\n    st.end();\n  });\n  t.test('stringifies a nested array value', function (st) {\n    st.equal(qs.stringify({\n      a: {\n        b: ['c', 'd']\n      }\n    }, {\n      encodeValuesOnly: true,\n      arrayFormat: 'indices'\n    }), 'a[b][0]=c&a[b][1]=d');\n    st.equal(qs.stringify({\n      a: {\n        b: ['c', 'd']\n      }\n    }, {\n      encodeValuesOnly: true,\n      arrayFormat: 'brackets'\n    }), 'a[b][]=c&a[b][]=d');\n    st.equal(qs.stringify({\n      a: {\n        b: ['c', 'd']\n      }\n    }, {\n      encodeValuesOnly: true,\n      arrayFormat: 'comma'\n    }), 'a[b]=c,d');\n    st.equal(qs.stringify({\n      a: {\n        b: ['c', 'd']\n      }\n    }, {\n      encodeValuesOnly: true\n    }), 'a[b][0]=c&a[b][1]=d');\n    st.end();\n  });\n  t.test('stringifies a nested array value with dots notation', function (st) {\n    st.equal(qs.stringify({\n      a: {\n        b: ['c', 'd']\n      }\n    }, {\n      allowDots: true,\n      encodeValuesOnly: true,\n      arrayFormat: 'indices'\n    }), 'a.b[0]=c&a.b[1]=d', 'indices: stringifies with dots + indices');\n    st.equal(qs.stringify({\n      a: {\n        b: ['c', 'd']\n      }\n    }, {\n      allowDots: true,\n      encodeValuesOnly: true,\n      arrayFormat: 'brackets'\n    }), 'a.b[]=c&a.b[]=d', 'brackets: stringifies with dots + brackets');\n    st.equal(qs.stringify({\n      a: {\n        b: ['c', 'd']\n      }\n    }, {\n      allowDots: true,\n      encodeValuesOnly: true,\n      arrayFormat: 'comma'\n    }), 'a.b=c,d', 'comma: stringifies with dots + comma');\n    st.equal(qs.stringify({\n      a: {\n        b: ['c', 'd']\n      }\n    }, {\n      allowDots: true,\n      encodeValuesOnly: true\n    }), 'a.b[0]=c&a.b[1]=d', 'default: stringifies with dots + indices');\n    st.end();\n  });\n  t.test('stringifies an object inside an array', function (st) {\n    st.equal(qs.stringify({\n      a: [{\n        b: 'c'\n      }]\n    }, {\n      arrayFormat: 'indices'\n    }), 'a%5B0%5D%5Bb%5D=c', // a[0][b]=c\n    'indices => brackets');\n    st.equal(qs.stringify({\n      a: [{\n        b: 'c'\n      }]\n    }, {\n      arrayFormat: 'brackets'\n    }), 'a%5B%5D%5Bb%5D=c', // a[][b]=c\n    'brackets => brackets');\n    st.equal(qs.stringify({\n      a: [{\n        b: 'c'\n      }]\n    }), 'a%5B0%5D%5Bb%5D=c', 'default => indices');\n    st.equal(qs.stringify({\n      a: [{\n        b: {\n          c: [1]\n        }\n      }]\n    }, {\n      arrayFormat: 'indices'\n    }), 'a%5B0%5D%5Bb%5D%5Bc%5D%5B0%5D=1', 'indices => indices');\n    st.equal(qs.stringify({\n      a: [{\n        b: {\n          c: [1]\n        }\n      }]\n    }, {\n      arrayFormat: 'brackets'\n    }), 'a%5B%5D%5Bb%5D%5Bc%5D%5B%5D=1', 'brackets => brackets');\n    st.equal(qs.stringify({\n      a: [{\n        b: {\n          c: [1]\n        }\n      }]\n    }), 'a%5B0%5D%5Bb%5D%5Bc%5D%5B0%5D=1', 'default => indices');\n    st.end();\n  });\n  t.test('stringifies an array with mixed objects and primitives', function (st) {\n    st.equal(qs.stringify({\n      a: [{\n        b: 1\n      }, 2, 3]\n    }, {\n      encodeValuesOnly: true,\n      arrayFormat: 'indices'\n    }), 'a[0][b]=1&a[1]=2&a[2]=3', 'indices => indices');\n    st.equal(qs.stringify({\n      a: [{\n        b: 1\n      }, 2, 3]\n    }, {\n      encodeValuesOnly: true,\n      arrayFormat: 'brackets'\n    }), 'a[][b]=1&a[]=2&a[]=3', 'brackets => brackets');\n    st.equal(qs.stringify({\n      a: [{\n        b: 1\n      }, 2, 3]\n    }, {\n      encodeValuesOnly: true,\n      arrayFormat: 'comma'\n    }), '???', 'brackets => brackets', {\n      skip: 'TODO: figure out what this should do'\n    });\n    st.equal(qs.stringify({\n      a: [{\n        b: 1\n      }, 2, 3]\n    }, {\n      encodeValuesOnly: true\n    }), 'a[0][b]=1&a[1]=2&a[2]=3', 'default => indices');\n    st.end();\n  });\n  t.test('stringifies an object inside an array with dots notation', function (st) {\n    st.equal(qs.stringify({\n      a: [{\n        b: 'c'\n      }]\n    }, {\n      allowDots: true,\n      encode: false,\n      arrayFormat: 'indices'\n    }), 'a[0].b=c', 'indices => indices');\n    st.equal(qs.stringify({\n      a: [{\n        b: 'c'\n      }]\n    }, {\n      allowDots: true,\n      encode: false,\n      arrayFormat: 'brackets'\n    }), 'a[].b=c', 'brackets => brackets');\n    st.equal(qs.stringify({\n      a: [{\n        b: 'c'\n      }]\n    }, {\n      allowDots: true,\n      encode: false\n    }), 'a[0].b=c', 'default => indices');\n    st.equal(qs.stringify({\n      a: [{\n        b: {\n          c: [1]\n        }\n      }]\n    }, {\n      allowDots: true,\n      encode: false,\n      arrayFormat: 'indices'\n    }), 'a[0].b.c[0]=1', 'indices => indices');\n    st.equal(qs.stringify({\n      a: [{\n        b: {\n          c: [1]\n        }\n      }]\n    }, {\n      allowDots: true,\n      encode: false,\n      arrayFormat: 'brackets'\n    }), 'a[].b.c[]=1', 'brackets => brackets');\n    st.equal(qs.stringify({\n      a: [{\n        b: {\n          c: [1]\n        }\n      }]\n    }, {\n      allowDots: true,\n      encode: false\n    }), 'a[0].b.c[0]=1', 'default => indices');\n    st.end();\n  });\n  t.test('does not omit object keys when indices = false', function (st) {\n    st.equal(qs.stringify({\n      a: [{\n        b: 'c'\n      }]\n    }, {\n      indices: false\n    }), 'a%5Bb%5D=c');\n    st.end();\n  });\n  t.test('uses indices notation for arrays when indices=true', function (st) {\n    st.equal(qs.stringify({\n      a: ['b', 'c']\n    }, {\n      indices: true\n    }), 'a%5B0%5D=b&a%5B1%5D=c');\n    st.end();\n  });\n  t.test('uses indices notation for arrays when no arrayFormat is specified', function (st) {\n    st.equal(qs.stringify({\n      a: ['b', 'c']\n    }), 'a%5B0%5D=b&a%5B1%5D=c');\n    st.end();\n  });\n  t.test('uses indices notation for arrays when no arrayFormat=indices', function (st) {\n    st.equal(qs.stringify({\n      a: ['b', 'c']\n    }, {\n      arrayFormat: 'indices'\n    }), 'a%5B0%5D=b&a%5B1%5D=c');\n    st.end();\n  });\n  t.test('uses repeat notation for arrays when no arrayFormat=repeat', function (st) {\n    st.equal(qs.stringify({\n      a: ['b', 'c']\n    }, {\n      arrayFormat: 'repeat'\n    }), 'a=b&a=c');\n    st.end();\n  });\n  t.test('uses brackets notation for arrays when no arrayFormat=brackets', function (st) {\n    st.equal(qs.stringify({\n      a: ['b', 'c']\n    }, {\n      arrayFormat: 'brackets'\n    }), 'a%5B%5D=b&a%5B%5D=c');\n    st.end();\n  });\n  t.test('stringifies a complicated object', function (st) {\n    st.equal(qs.stringify({\n      a: {\n        b: 'c',\n        d: 'e'\n      }\n    }), 'a%5Bb%5D=c&a%5Bd%5D=e');\n    st.end();\n  });\n  t.test('stringifies an empty value', function (st) {\n    st.equal(qs.stringify({\n      a: ''\n    }), 'a=');\n    st.equal(qs.stringify({\n      a: null\n    }, {\n      strictNullHandling: true\n    }), 'a');\n    st.equal(qs.stringify({\n      a: '',\n      b: ''\n    }), 'a=&b=');\n    st.equal(qs.stringify({\n      a: null,\n      b: ''\n    }, {\n      strictNullHandling: true\n    }), 'a&b=');\n    st.equal(qs.stringify({\n      a: {\n        b: ''\n      }\n    }), 'a%5Bb%5D=');\n    st.equal(qs.stringify({\n      a: {\n        b: null\n      }\n    }, {\n      strictNullHandling: true\n    }), 'a%5Bb%5D');\n    st.equal(qs.stringify({\n      a: {\n        b: null\n      }\n    }, {\n      strictNullHandling: false\n    }), 'a%5Bb%5D=');\n    st.end();\n  });\n  t.test('stringifies an empty array in different arrayFormat', function (st) {\n    st.equal(qs.stringify({\n      a: [],\n      b: [null],\n      c: 'c'\n    }, {\n      encode: false\n    }), 'b[0]=&c=c'); // arrayFormat default\n\n    st.equal(qs.stringify({\n      a: [],\n      b: [null],\n      c: 'c'\n    }, {\n      encode: false,\n      arrayFormat: 'indices'\n    }), 'b[0]=&c=c');\n    st.equal(qs.stringify({\n      a: [],\n      b: [null],\n      c: 'c'\n    }, {\n      encode: false,\n      arrayFormat: 'brackets'\n    }), 'b[]=&c=c');\n    st.equal(qs.stringify({\n      a: [],\n      b: [null],\n      c: 'c'\n    }, {\n      encode: false,\n      arrayFormat: 'repeat'\n    }), 'b=&c=c');\n    st.equal(qs.stringify({\n      a: [],\n      b: [null],\n      c: 'c'\n    }, {\n      encode: false,\n      arrayFormat: 'comma'\n    }), 'b=&c=c'); // with strictNullHandling\n\n    st.equal(qs.stringify({\n      a: [],\n      b: [null],\n      c: 'c'\n    }, {\n      encode: false,\n      arrayFormat: 'indices',\n      strictNullHandling: true\n    }), 'b[0]&c=c');\n    st.equal(qs.stringify({\n      a: [],\n      b: [null],\n      c: 'c'\n    }, {\n      encode: false,\n      arrayFormat: 'brackets',\n      strictNullHandling: true\n    }), 'b[]&c=c');\n    st.equal(qs.stringify({\n      a: [],\n      b: [null],\n      c: 'c'\n    }, {\n      encode: false,\n      arrayFormat: 'repeat',\n      strictNullHandling: true\n    }), 'b&c=c');\n    st.equal(qs.stringify({\n      a: [],\n      b: [null],\n      c: 'c'\n    }, {\n      encode: false,\n      arrayFormat: 'comma',\n      strictNullHandling: true\n    }), 'b&c=c'); // with skipNulls\n\n    st.equal(qs.stringify({\n      a: [],\n      b: [null],\n      c: 'c'\n    }, {\n      encode: false,\n      arrayFormat: 'indices',\n      skipNulls: true\n    }), 'c=c');\n    st.equal(qs.stringify({\n      a: [],\n      b: [null],\n      c: 'c'\n    }, {\n      encode: false,\n      arrayFormat: 'brackets',\n      skipNulls: true\n    }), 'c=c');\n    st.equal(qs.stringify({\n      a: [],\n      b: [null],\n      c: 'c'\n    }, {\n      encode: false,\n      arrayFormat: 'repeat',\n      skipNulls: true\n    }), 'c=c');\n    st.equal(qs.stringify({\n      a: [],\n      b: [null],\n      c: 'c'\n    }, {\n      encode: false,\n      arrayFormat: 'comma',\n      skipNulls: true\n    }), 'c=c');\n    st.end();\n  });\n  t.test('stringifies a null object', {\n    skip: !Object.create\n  }, function (st) {\n    var obj = Object.create(null);\n    obj.a = 'b';\n    st.equal(qs.stringify(obj), 'a=b');\n    st.end();\n  });\n  t.test('returns an empty string for invalid input', function (st) {\n    st.equal(qs.stringify(undefined), '');\n    st.equal(qs.stringify(false), '');\n    st.equal(qs.stringify(null), '');\n    st.equal(qs.stringify(''), '');\n    st.end();\n  });\n  t.test('stringifies an object with a null object as a child', {\n    skip: !Object.create\n  }, function (st) {\n    var obj = {\n      a: Object.create(null)\n    };\n    obj.a.b = 'c';\n    st.equal(qs.stringify(obj), 'a%5Bb%5D=c');\n    st.end();\n  });\n  t.test('drops keys with a value of undefined', function (st) {\n    st.equal(qs.stringify({\n      a: undefined\n    }), '');\n    st.equal(qs.stringify({\n      a: {\n        b: undefined,\n        c: null\n      }\n    }, {\n      strictNullHandling: true\n    }), 'a%5Bc%5D');\n    st.equal(qs.stringify({\n      a: {\n        b: undefined,\n        c: null\n      }\n    }, {\n      strictNullHandling: false\n    }), 'a%5Bc%5D=');\n    st.equal(qs.stringify({\n      a: {\n        b: undefined,\n        c: ''\n      }\n    }), 'a%5Bc%5D=');\n    st.end();\n  });\n  t.test('url encodes values', function (st) {\n    st.equal(qs.stringify({\n      a: 'b c'\n    }), 'a=b%20c');\n    st.end();\n  });\n  t.test('stringifies a date', function (st) {\n    var now = new Date();\n    var str = 'a=' + encodeURIComponent(now.toISOString());\n    st.equal(qs.stringify({\n      a: now\n    }), str);\n    st.end();\n  });\n  t.test('stringifies the weird object from qs', function (st) {\n    st.equal(qs.stringify({\n      'my weird field': '~q1!2\"\\'w$5&7/z8)?'\n    }), 'my%20weird%20field=~q1%212%22%27w%245%267%2Fz8%29%3F');\n    st.end();\n  });\n  t.test('skips properties that are part of the object prototype', function (st) {\n    Object.prototype.crash = 'test';\n    st.equal(qs.stringify({\n      a: 'b'\n    }), 'a=b');\n    st.equal(qs.stringify({\n      a: {\n        b: 'c'\n      }\n    }), 'a%5Bb%5D=c');\n    delete Object.prototype.crash;\n    st.end();\n  });\n  t.test('stringifies boolean values', function (st) {\n    st.equal(qs.stringify({\n      a: true\n    }), 'a=true');\n    st.equal(qs.stringify({\n      a: {\n        b: true\n      }\n    }), 'a%5Bb%5D=true');\n    st.equal(qs.stringify({\n      b: false\n    }), 'b=false');\n    st.equal(qs.stringify({\n      b: {\n        c: false\n      }\n    }), 'b%5Bc%5D=false');\n    st.end();\n  });\n  t.test('stringifies buffer values', function (st) {\n    st.equal(qs.stringify({\n      a: SaferBuffer.from('test')\n    }), 'a=test');\n    st.equal(qs.stringify({\n      a: {\n        b: SaferBuffer.from('test')\n      }\n    }), 'a%5Bb%5D=test');\n    st.end();\n  });\n  t.test('stringifies an object using an alternative delimiter', function (st) {\n    st.equal(qs.stringify({\n      a: 'b',\n      c: 'd'\n    }, {\n      delimiter: ';'\n    }), 'a=b;c=d');\n    st.end();\n  });\n  t.test('does not blow up when Buffer global is missing', function (st) {\n    var tempBuffer = global.Buffer;\n    delete global.Buffer;\n    var result = qs.stringify({\n      a: 'b',\n      c: 'd'\n    });\n    global.Buffer = tempBuffer;\n    st.equal(result, 'a=b&c=d');\n    st.end();\n  });\n  t.test('does not crash when parsing circular references', function (st) {\n    var a = {};\n    a.b = a;\n    st['throws'](function () {\n      qs.stringify({\n        'foo[bar]': 'baz',\n        'foo[baz]': a\n      });\n    }, /RangeError: Cyclic object value/, 'cyclic values throw');\n    var circular = {\n      a: 'value'\n    };\n    circular.a = circular;\n    st['throws'](function () {\n      qs.stringify(circular);\n    }, /RangeError: Cyclic object value/, 'cyclic values throw');\n    var arr = ['a'];\n    st.doesNotThrow(function () {\n      qs.stringify({\n        x: arr,\n        y: arr\n      });\n    }, 'non-cyclic values do not throw');\n    st.end();\n  });\n  t.test('non-circular duplicated references can still work', function (st) {\n    var hourOfDay = {\n      'function': 'hour_of_day'\n    };\n    var p1 = {\n      'function': 'gte',\n      arguments: [hourOfDay, 0]\n    };\n    var p2 = {\n      'function': 'lte',\n      arguments: [hourOfDay, 23]\n    };\n    st.equal(qs.stringify({\n      filters: {\n        $and: [p1, p2]\n      }\n    }, {\n      encodeValuesOnly: true\n    }), 'filters[$and][0][function]=gte&filters[$and][0][arguments][0][function]=hour_of_day&filters[$and][0][arguments][1]=0&filters[$and][1][function]=lte&filters[$and][1][arguments][0][function]=hour_of_day&filters[$and][1][arguments][1]=23');\n    st.end();\n  });\n  t.test('selects properties when filter=array', function (st) {\n    st.equal(qs.stringify({\n      a: 'b'\n    }, {\n      filter: ['a']\n    }), 'a=b');\n    st.equal(qs.stringify({\n      a: 1\n    }, {\n      filter: []\n    }), '');\n    st.equal(qs.stringify({\n      a: {\n        b: [1, 2, 3, 4],\n        c: 'd'\n      },\n      c: 'f'\n    }, {\n      filter: ['a', 'b', 0, 2],\n      arrayFormat: 'indices'\n    }), 'a%5Bb%5D%5B0%5D=1&a%5Bb%5D%5B2%5D=3', 'indices => indices');\n    st.equal(qs.stringify({\n      a: {\n        b: [1, 2, 3, 4],\n        c: 'd'\n      },\n      c: 'f'\n    }, {\n      filter: ['a', 'b', 0, 2],\n      arrayFormat: 'brackets'\n    }), 'a%5Bb%5D%5B%5D=1&a%5Bb%5D%5B%5D=3', 'brackets => brackets');\n    st.equal(qs.stringify({\n      a: {\n        b: [1, 2, 3, 4],\n        c: 'd'\n      },\n      c: 'f'\n    }, {\n      filter: ['a', 'b', 0, 2]\n    }), 'a%5Bb%5D%5B0%5D=1&a%5Bb%5D%5B2%5D=3', 'default => indices');\n    st.end();\n  });\n  t.test('supports custom representations when filter=function', function (st) {\n    var calls = 0;\n    var obj = {\n      a: 'b',\n      c: 'd',\n      e: {\n        f: new Date(1257894000000)\n      }\n    };\n\n    var filterFunc = function (prefix, value) {\n      calls += 1;\n\n      if (calls === 1) {\n        st.equal(prefix, '', 'prefix is empty');\n        st.equal(value, obj);\n      } else if (prefix === 'c') {\n        return void 0;\n      } else if (value instanceof Date) {\n        st.equal(prefix, 'e[f]');\n        return value.getTime();\n      }\n\n      return value;\n    };\n\n    st.equal(qs.stringify(obj, {\n      filter: filterFunc\n    }), 'a=b&e%5Bf%5D=1257894000000');\n    st.equal(calls, 5);\n    st.end();\n  });\n  t.test('can disable uri encoding', function (st) {\n    st.equal(qs.stringify({\n      a: 'b'\n    }, {\n      encode: false\n    }), 'a=b');\n    st.equal(qs.stringify({\n      a: {\n        b: 'c'\n      }\n    }, {\n      encode: false\n    }), 'a[b]=c');\n    st.equal(qs.stringify({\n      a: 'b',\n      c: null\n    }, {\n      strictNullHandling: true,\n      encode: false\n    }), 'a=b&c');\n    st.end();\n  });\n  t.test('can sort the keys', function (st) {\n    var sort = function (a, b) {\n      return a.localeCompare(b);\n    };\n\n    st.equal(qs.stringify({\n      a: 'c',\n      z: 'y',\n      b: 'f'\n    }, {\n      sort: sort\n    }), 'a=c&b=f&z=y');\n    st.equal(qs.stringify({\n      a: 'c',\n      z: {\n        j: 'a',\n        i: 'b'\n      },\n      b: 'f'\n    }, {\n      sort: sort\n    }), 'a=c&b=f&z%5Bi%5D=b&z%5Bj%5D=a');\n    st.end();\n  });\n  t.test('can sort the keys at depth 3 or more too', function (st) {\n    var sort = function (a, b) {\n      return a.localeCompare(b);\n    };\n\n    st.equal(qs.stringify({\n      a: 'a',\n      z: {\n        zj: {\n          zjb: 'zjb',\n          zja: 'zja'\n        },\n        zi: {\n          zib: 'zib',\n          zia: 'zia'\n        }\n      },\n      b: 'b'\n    }, {\n      sort: sort,\n      encode: false\n    }), 'a=a&b=b&z[zi][zia]=zia&z[zi][zib]=zib&z[zj][zja]=zja&z[zj][zjb]=zjb');\n    st.equal(qs.stringify({\n      a: 'a',\n      z: {\n        zj: {\n          zjb: 'zjb',\n          zja: 'zja'\n        },\n        zi: {\n          zib: 'zib',\n          zia: 'zia'\n        }\n      },\n      b: 'b'\n    }, {\n      sort: null,\n      encode: false\n    }), 'a=a&z[zj][zjb]=zjb&z[zj][zja]=zja&z[zi][zib]=zib&z[zi][zia]=zia&b=b');\n    st.end();\n  });\n  t.test('can stringify with custom encoding', function (st) {\n    st.equal(qs.stringify({\n      県: '大阪府',\n      '': ''\n    }, {\n      encoder: function (str) {\n        if (str.length === 0) {\n          return '';\n        }\n\n        var buf = iconv.encode(str, 'shiftjis');\n        var result = [];\n\n        for (var i = 0; i < buf.length; ++i) {\n          result.push(buf.readUInt8(i).toString(16));\n        }\n\n        return '%' + result.join('%');\n      }\n    }), '%8c%a7=%91%e5%8d%e3%95%7b&=');\n    st.end();\n  });\n  t.test('receives the default encoder as a second argument', function (st) {\n    st.plan(2);\n    qs.stringify({\n      a: 1\n    }, {\n      encoder: function (str, defaultEncoder) {\n        st.equal(defaultEncoder, utils.encode);\n      }\n    });\n    st.end();\n  });\n  t.test('throws error with wrong encoder', function (st) {\n    st['throws'](function () {\n      qs.stringify({}, {\n        encoder: 'string'\n      });\n    }, new TypeError('Encoder has to be a function.'));\n    st.end();\n  });\n  t.test('can use custom encoder for a buffer object', {\n    skip: typeof Buffer === 'undefined'\n  }, function (st) {\n    st.equal(qs.stringify({\n      a: SaferBuffer.from([1])\n    }, {\n      encoder: function (buffer) {\n        if (typeof buffer === 'string') {\n          return buffer;\n        }\n\n        return String.fromCharCode(buffer.readUInt8(0) + 97);\n      }\n    }), 'a=b');\n    st.equal(qs.stringify({\n      a: SaferBuffer.from('a b')\n    }, {\n      encoder: function (buffer) {\n        return buffer;\n      }\n    }), 'a=a b');\n    st.end();\n  });\n  t.test('serializeDate option', function (st) {\n    var date = new Date();\n    st.equal(qs.stringify({\n      a: date\n    }), 'a=' + date.toISOString().replace(/:/g, '%3A'), 'default is toISOString');\n    var mutatedDate = new Date();\n\n    mutatedDate.toISOString = function () {\n      throw new SyntaxError();\n    };\n\n    st['throws'](function () {\n      mutatedDate.toISOString();\n    }, SyntaxError);\n    st.equal(qs.stringify({\n      a: mutatedDate\n    }), 'a=' + Date.prototype.toISOString.call(mutatedDate).replace(/:/g, '%3A'), 'toISOString works even when method is not locally present');\n    var specificDate = new Date(6);\n    st.equal(qs.stringify({\n      a: specificDate\n    }, {\n      serializeDate: function (d) {\n        return d.getTime() * 7;\n      }\n    }), 'a=42', 'custom serializeDate function called');\n    st.equal(qs.stringify({\n      a: [date]\n    }, {\n      serializeDate: function (d) {\n        return d.getTime();\n      },\n      arrayFormat: 'comma'\n    }), 'a=' + date.getTime(), 'works with arrayFormat comma');\n    st.end();\n  });\n  t.test('RFC 1738 serialization', function (st) {\n    st.equal(qs.stringify({\n      a: 'b c'\n    }, {\n      format: qs.formats.RFC1738\n    }), 'a=b+c');\n    st.equal(qs.stringify({\n      'a b': 'c d'\n    }, {\n      format: qs.formats.RFC1738\n    }), 'a+b=c+d');\n    st.equal(qs.stringify({\n      'a b': SaferBuffer.from('a b')\n    }, {\n      format: qs.formats.RFC1738\n    }), 'a+b=a+b');\n    st.equal(qs.stringify({\n      'foo(ref)': 'bar'\n    }, {\n      format: qs.formats.RFC1738\n    }), 'foo(ref)=bar');\n    st.end();\n  });\n  t.test('RFC 3986 spaces serialization', function (st) {\n    st.equal(qs.stringify({\n      a: 'b c'\n    }, {\n      format: qs.formats.RFC3986\n    }), 'a=b%20c');\n    st.equal(qs.stringify({\n      'a b': 'c d'\n    }, {\n      format: qs.formats.RFC3986\n    }), 'a%20b=c%20d');\n    st.equal(qs.stringify({\n      'a b': SaferBuffer.from('a b')\n    }, {\n      format: qs.formats.RFC3986\n    }), 'a%20b=a%20b');\n    st.end();\n  });\n  t.test('Backward compatibility to RFC 3986', function (st) {\n    st.equal(qs.stringify({\n      a: 'b c'\n    }), 'a=b%20c');\n    st.equal(qs.stringify({\n      'a b': SaferBuffer.from('a b')\n    }), 'a%20b=a%20b');\n    st.end();\n  });\n  t.test('Edge cases and unknown formats', function (st) {\n    ['UFO1234', false, 1234, null, {}, []].forEach(function (format) {\n      st['throws'](function () {\n        qs.stringify({\n          a: 'b c'\n        }, {\n          format: format\n        });\n      }, new TypeError('Unknown format option provided.'));\n    });\n    st.end();\n  });\n  t.test('encodeValuesOnly', function (st) {\n    st.equal(qs.stringify({\n      a: 'b',\n      c: ['d', 'e=f'],\n      f: [['g'], ['h']]\n    }, {\n      encodeValuesOnly: true\n    }), 'a=b&c[0]=d&c[1]=e%3Df&f[0][0]=g&f[1][0]=h');\n    st.equal(qs.stringify({\n      a: 'b',\n      c: ['d', 'e'],\n      f: [['g'], ['h']]\n    }), 'a=b&c%5B0%5D=d&c%5B1%5D=e&f%5B0%5D%5B0%5D=g&f%5B1%5D%5B0%5D=h');\n    st.end();\n  });\n  t.test('encodeValuesOnly - strictNullHandling', function (st) {\n    st.equal(qs.stringify({\n      a: {\n        b: null\n      }\n    }, {\n      encodeValuesOnly: true,\n      strictNullHandling: true\n    }), 'a[b]');\n    st.end();\n  });\n  t.test('throws if an invalid charset is specified', function (st) {\n    st['throws'](function () {\n      qs.stringify({\n        a: 'b'\n      }, {\n        charset: 'foobar'\n      });\n    }, new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined'));\n    st.end();\n  });\n  t.test('respects a charset of iso-8859-1', function (st) {\n    st.equal(qs.stringify({\n      æ: 'æ'\n    }, {\n      charset: 'iso-8859-1'\n    }), '%E6=%E6');\n    st.end();\n  });\n  t.test('encodes unrepresentable chars as numeric entities in iso-8859-1 mode', function (st) {\n    st.equal(qs.stringify({\n      a: '☺'\n    }, {\n      charset: 'iso-8859-1'\n    }), 'a=%26%239786%3B');\n    st.end();\n  });\n  t.test('respects an explicit charset of utf-8 (the default)', function (st) {\n    st.equal(qs.stringify({\n      a: 'æ'\n    }, {\n      charset: 'utf-8'\n    }), 'a=%C3%A6');\n    st.end();\n  });\n  t.test('adds the right sentinel when instructed to and the charset is utf-8', function (st) {\n    st.equal(qs.stringify({\n      a: 'æ'\n    }, {\n      charsetSentinel: true,\n      charset: 'utf-8'\n    }), 'utf8=%E2%9C%93&a=%C3%A6');\n    st.end();\n  });\n  t.test('adds the right sentinel when instructed to and the charset is iso-8859-1', function (st) {\n    st.equal(qs.stringify({\n      a: 'æ'\n    }, {\n      charsetSentinel: true,\n      charset: 'iso-8859-1'\n    }), 'utf8=%26%2310003%3B&a=%E6');\n    st.end();\n  });\n  t.test('does not mutate the options argument', function (st) {\n    var options = {};\n    qs.stringify({}, options);\n    st.deepEqual(options, {});\n    st.end();\n  });\n  t.test('strictNullHandling works with custom filter', function (st) {\n    var filter = function (prefix, value) {\n      return value;\n    };\n\n    var options = {\n      strictNullHandling: true,\n      filter: filter\n    };\n    st.equal(qs.stringify({\n      key: null\n    }, options), 'key');\n    st.end();\n  });\n  t.test('strictNullHandling works with null serializeDate', function (st) {\n    var serializeDate = function () {\n      return null;\n    };\n\n    var options = {\n      strictNullHandling: true,\n      serializeDate: serializeDate\n    };\n    var date = new Date();\n    st.equal(qs.stringify({\n      key: date\n    }, options), 'key');\n    st.end();\n  });\n  t.test('allows for encoding keys and values differently', function (st) {\n    var encoder = function (str, defaultEncoder, charset, type) {\n      if (type === 'key') {\n        return defaultEncoder(str, defaultEncoder, charset, type).toLowerCase();\n      }\n\n      if (type === 'value') {\n        return defaultEncoder(str, defaultEncoder, charset, type).toUpperCase();\n      }\n\n      throw 'this should never happen! type: ' + type;\n    };\n\n    st.deepEqual(qs.stringify({\n      KeY: 'vAlUe'\n    }, {\n      encoder: encoder\n    }), 'key=VALUE');\n    st.end();\n  });\n  t.test('objects inside arrays', function (st) {\n    var obj = {\n      a: {\n        b: {\n          c: 'd',\n          e: 'f'\n        }\n      }\n    };\n    var withArray = {\n      a: {\n        b: [{\n          c: 'd',\n          e: 'f'\n        }]\n      }\n    };\n    st.equal(qs.stringify(obj, {\n      encode: false\n    }), 'a[b][c]=d&a[b][e]=f', 'no array, no arrayFormat');\n    st.equal(qs.stringify(obj, {\n      encode: false,\n      arrayFormat: 'bracket'\n    }), 'a[b][c]=d&a[b][e]=f', 'no array, bracket');\n    st.equal(qs.stringify(obj, {\n      encode: false,\n      arrayFormat: 'indices'\n    }), 'a[b][c]=d&a[b][e]=f', 'no array, indices');\n    st.equal(qs.stringify(obj, {\n      encode: false,\n      arrayFormat: 'comma'\n    }), 'a[b][c]=d&a[b][e]=f', 'no array, comma');\n    st.equal(qs.stringify(withArray, {\n      encode: false\n    }), 'a[b][0][c]=d&a[b][0][e]=f', 'array, no arrayFormat');\n    st.equal(qs.stringify(withArray, {\n      encode: false,\n      arrayFormat: 'bracket'\n    }), 'a[b][0][c]=d&a[b][0][e]=f', 'array, bracket');\n    st.equal(qs.stringify(withArray, {\n      encode: false,\n      arrayFormat: 'indices'\n    }), 'a[b][0][c]=d&a[b][0][e]=f', 'array, indices');\n    st.equal(qs.stringify(withArray, {\n      encode: false,\n      arrayFormat: 'comma'\n    }), '???', 'array, comma', {\n      skip: 'TODO: figure out what this should do'\n    });\n    st.end();\n  });\n  t.test('stringifies sparse arrays', function (st) {\n    /* eslint no-sparse-arrays: 0 */\n    st.equal(qs.stringify({\n      a: [, '2',,, '1']\n    }, {\n      encodeValuesOnly: true\n    }), 'a[1]=2&a[4]=1');\n    st.equal(qs.stringify({\n      a: [, {\n        b: [,, {\n          c: '1'\n        }]\n      }]\n    }, {\n      encodeValuesOnly: true\n    }), 'a[1][b][2][c]=1');\n    st.equal(qs.stringify({\n      a: [, [,, [,,, {\n        c: '1'\n      }]]]\n    }, {\n      encodeValuesOnly: true\n    }), 'a[1][2][3][c]=1');\n    st.equal(qs.stringify({\n      a: [, [,, [,,, {\n        c: [, '1']\n      }]]]\n    }, {\n      encodeValuesOnly: true\n    }), 'a[1][2][3][c][1]=1');\n    st.end();\n  });\n  t.end();\n});","map":{"version":3,"names":["test","require","qs","utils","iconv","SaferBuffer","Buffer","hasSymbols","hasBigInt","BigInt","t","st","equal","stringify","a","b","end","undefined","strictNullHandling","skip","Symbol","iterator","encodeValuesOnly","arrayFormat","three","encodeWithN","value","defaultEncoder","charset","result","encoder","addQueryPrefix","c","d","allowDots","skipNulls","indices","encode","Object","create","obj","now","Date","str","encodeURIComponent","toISOString","prototype","crash","from","delimiter","tempBuffer","global","circular","arr","doesNotThrow","x","y","hourOfDay","p1","arguments","p2","filters","$and","filter","calls","e","f","filterFunc","prefix","getTime","sort","localeCompare","z","j","i","zj","zjb","zja","zi","zib","zia","県","length","buf","push","readUInt8","toString","join","plan","TypeError","buffer","String","fromCharCode","date","replace","mutatedDate","SyntaxError","call","specificDate","serializeDate","format","formats","RFC1738","RFC3986","forEach","æ","charsetSentinel","options","deepEqual","key","type","toLowerCase","toUpperCase","KeY","withArray"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/qs/test/stringify.js"],"sourcesContent":["'use strict';\n\nvar test = require('tape');\nvar qs = require('../');\nvar utils = require('../lib/utils');\nvar iconv = require('iconv-lite');\nvar SaferBuffer = require('safer-buffer').Buffer;\nvar hasSymbols = require('has-symbols');\nvar hasBigInt = typeof BigInt === 'function';\n\ntest('stringify()', function (t) {\n    t.test('stringifies a querystring object', function (st) {\n        st.equal(qs.stringify({ a: 'b' }), 'a=b');\n        st.equal(qs.stringify({ a: 1 }), 'a=1');\n        st.equal(qs.stringify({ a: 1, b: 2 }), 'a=1&b=2');\n        st.equal(qs.stringify({ a: 'A_Z' }), 'a=A_Z');\n        st.equal(qs.stringify({ a: '€' }), 'a=%E2%82%AC');\n        st.equal(qs.stringify({ a: '' }), 'a=%EE%80%80');\n        st.equal(qs.stringify({ a: 'א' }), 'a=%D7%90');\n        st.equal(qs.stringify({ a: '𐐷' }), 'a=%F0%90%90%B7');\n        st.end();\n    });\n\n    t.test('stringifies falsy values', function (st) {\n        st.equal(qs.stringify(undefined), '');\n        st.equal(qs.stringify(null), '');\n        st.equal(qs.stringify(null, { strictNullHandling: true }), '');\n        st.equal(qs.stringify(false), '');\n        st.equal(qs.stringify(0), '');\n        st.end();\n    });\n\n    t.test('stringifies symbols', { skip: !hasSymbols() }, function (st) {\n        st.equal(qs.stringify(Symbol.iterator), '');\n        st.equal(qs.stringify([Symbol.iterator]), '0=Symbol%28Symbol.iterator%29');\n        st.equal(qs.stringify({ a: Symbol.iterator }), 'a=Symbol%28Symbol.iterator%29');\n        st.equal(\n            qs.stringify({ a: [Symbol.iterator] }, { encodeValuesOnly: true, arrayFormat: 'brackets' }),\n            'a[]=Symbol%28Symbol.iterator%29'\n        );\n        st.end();\n    });\n\n    t.test('stringifies bigints', { skip: !hasBigInt }, function (st) {\n        var three = BigInt(3);\n        var encodeWithN = function (value, defaultEncoder, charset) {\n            var result = defaultEncoder(value, defaultEncoder, charset);\n            return typeof value === 'bigint' ? result + 'n' : result;\n        };\n        st.equal(qs.stringify(three), '');\n        st.equal(qs.stringify([three]), '0=3');\n        st.equal(qs.stringify([three], { encoder: encodeWithN }), '0=3n');\n        st.equal(qs.stringify({ a: three }), 'a=3');\n        st.equal(qs.stringify({ a: three }, { encoder: encodeWithN }), 'a=3n');\n        st.equal(\n            qs.stringify({ a: [three] }, { encodeValuesOnly: true, arrayFormat: 'brackets' }),\n            'a[]=3'\n        );\n        st.equal(\n            qs.stringify({ a: [three] }, { encodeValuesOnly: true, encoder: encodeWithN, arrayFormat: 'brackets' }),\n            'a[]=3n'\n        );\n        st.end();\n    });\n\n    t.test('adds query prefix', function (st) {\n        st.equal(qs.stringify({ a: 'b' }, { addQueryPrefix: true }), '?a=b');\n        st.end();\n    });\n\n    t.test('with query prefix, outputs blank string given an empty object', function (st) {\n        st.equal(qs.stringify({}, { addQueryPrefix: true }), '');\n        st.end();\n    });\n\n    t.test('stringifies nested falsy values', function (st) {\n        st.equal(qs.stringify({ a: { b: { c: null } } }), 'a%5Bb%5D%5Bc%5D=');\n        st.equal(qs.stringify({ a: { b: { c: null } } }, { strictNullHandling: true }), 'a%5Bb%5D%5Bc%5D');\n        st.equal(qs.stringify({ a: { b: { c: false } } }), 'a%5Bb%5D%5Bc%5D=false');\n        st.end();\n    });\n\n    t.test('stringifies a nested object', function (st) {\n        st.equal(qs.stringify({ a: { b: 'c' } }), 'a%5Bb%5D=c');\n        st.equal(qs.stringify({ a: { b: { c: { d: 'e' } } } }), 'a%5Bb%5D%5Bc%5D%5Bd%5D=e');\n        st.end();\n    });\n\n    t.test('stringifies a nested object with dots notation', function (st) {\n        st.equal(qs.stringify({ a: { b: 'c' } }, { allowDots: true }), 'a.b=c');\n        st.equal(qs.stringify({ a: { b: { c: { d: 'e' } } } }, { allowDots: true }), 'a.b.c.d=e');\n        st.end();\n    });\n\n    t.test('stringifies an array value', function (st) {\n        st.equal(\n            qs.stringify({ a: ['b', 'c', 'd'] }, { arrayFormat: 'indices' }),\n            'a%5B0%5D=b&a%5B1%5D=c&a%5B2%5D=d',\n            'indices => indices'\n        );\n        st.equal(\n            qs.stringify({ a: ['b', 'c', 'd'] }, { arrayFormat: 'brackets' }),\n            'a%5B%5D=b&a%5B%5D=c&a%5B%5D=d',\n            'brackets => brackets'\n        );\n        st.equal(\n            qs.stringify({ a: ['b', 'c', 'd'] }, { arrayFormat: 'comma' }),\n            'a=b%2Cc%2Cd',\n            'comma => comma'\n        );\n        st.equal(\n            qs.stringify({ a: ['b', 'c', 'd'] }),\n            'a%5B0%5D=b&a%5B1%5D=c&a%5B2%5D=d',\n            'default => indices'\n        );\n        st.end();\n    });\n\n    t.test('omits nulls when asked', function (st) {\n        st.equal(qs.stringify({ a: 'b', c: null }, { skipNulls: true }), 'a=b');\n        st.end();\n    });\n\n    t.test('omits nested nulls when asked', function (st) {\n        st.equal(qs.stringify({ a: { b: 'c', d: null } }, { skipNulls: true }), 'a%5Bb%5D=c');\n        st.end();\n    });\n\n    t.test('omits array indices when asked', function (st) {\n        st.equal(qs.stringify({ a: ['b', 'c', 'd'] }, { indices: false }), 'a=b&a=c&a=d');\n        st.end();\n    });\n\n    t.test('stringifies a nested array value', function (st) {\n        st.equal(qs.stringify({ a: { b: ['c', 'd'] } }, { encodeValuesOnly: true, arrayFormat: 'indices' }), 'a[b][0]=c&a[b][1]=d');\n        st.equal(qs.stringify({ a: { b: ['c', 'd'] } }, { encodeValuesOnly: true, arrayFormat: 'brackets' }), 'a[b][]=c&a[b][]=d');\n        st.equal(qs.stringify({ a: { b: ['c', 'd'] } }, { encodeValuesOnly: true, arrayFormat: 'comma' }), 'a[b]=c,d');\n        st.equal(qs.stringify({ a: { b: ['c', 'd'] } }, { encodeValuesOnly: true }), 'a[b][0]=c&a[b][1]=d');\n        st.end();\n    });\n\n    t.test('stringifies a nested array value with dots notation', function (st) {\n        st.equal(\n            qs.stringify(\n                { a: { b: ['c', 'd'] } },\n                { allowDots: true, encodeValuesOnly: true, arrayFormat: 'indices' }\n            ),\n            'a.b[0]=c&a.b[1]=d',\n            'indices: stringifies with dots + indices'\n        );\n        st.equal(\n            qs.stringify(\n                { a: { b: ['c', 'd'] } },\n                { allowDots: true, encodeValuesOnly: true, arrayFormat: 'brackets' }\n            ),\n            'a.b[]=c&a.b[]=d',\n            'brackets: stringifies with dots + brackets'\n        );\n        st.equal(\n            qs.stringify(\n                { a: { b: ['c', 'd'] } },\n                { allowDots: true, encodeValuesOnly: true, arrayFormat: 'comma' }\n            ),\n            'a.b=c,d',\n            'comma: stringifies with dots + comma'\n        );\n        st.equal(\n            qs.stringify(\n                { a: { b: ['c', 'd'] } },\n                { allowDots: true, encodeValuesOnly: true }\n            ),\n            'a.b[0]=c&a.b[1]=d',\n            'default: stringifies with dots + indices'\n        );\n        st.end();\n    });\n\n    t.test('stringifies an object inside an array', function (st) {\n        st.equal(\n            qs.stringify({ a: [{ b: 'c' }] }, { arrayFormat: 'indices' }),\n            'a%5B0%5D%5Bb%5D=c', // a[0][b]=c\n            'indices => brackets'\n        );\n        st.equal(\n            qs.stringify({ a: [{ b: 'c' }] }, { arrayFormat: 'brackets' }),\n            'a%5B%5D%5Bb%5D=c', // a[][b]=c\n            'brackets => brackets'\n        );\n        st.equal(\n            qs.stringify({ a: [{ b: 'c' }] }),\n            'a%5B0%5D%5Bb%5D=c',\n            'default => indices'\n        );\n\n        st.equal(\n            qs.stringify({ a: [{ b: { c: [1] } }] }, { arrayFormat: 'indices' }),\n            'a%5B0%5D%5Bb%5D%5Bc%5D%5B0%5D=1',\n            'indices => indices'\n        );\n\n        st.equal(\n            qs.stringify({ a: [{ b: { c: [1] } }] }, { arrayFormat: 'brackets' }),\n            'a%5B%5D%5Bb%5D%5Bc%5D%5B%5D=1',\n            'brackets => brackets'\n        );\n\n        st.equal(\n            qs.stringify({ a: [{ b: { c: [1] } }] }),\n            'a%5B0%5D%5Bb%5D%5Bc%5D%5B0%5D=1',\n            'default => indices'\n        );\n\n        st.end();\n    });\n\n    t.test('stringifies an array with mixed objects and primitives', function (st) {\n        st.equal(\n            qs.stringify({ a: [{ b: 1 }, 2, 3] }, { encodeValuesOnly: true, arrayFormat: 'indices' }),\n            'a[0][b]=1&a[1]=2&a[2]=3',\n            'indices => indices'\n        );\n        st.equal(\n            qs.stringify({ a: [{ b: 1 }, 2, 3] }, { encodeValuesOnly: true, arrayFormat: 'brackets' }),\n            'a[][b]=1&a[]=2&a[]=3',\n            'brackets => brackets'\n        );\n        st.equal(\n            qs.stringify({ a: [{ b: 1 }, 2, 3] }, { encodeValuesOnly: true, arrayFormat: 'comma' }),\n            '???',\n            'brackets => brackets',\n            { skip: 'TODO: figure out what this should do' }\n        );\n        st.equal(\n            qs.stringify({ a: [{ b: 1 }, 2, 3] }, { encodeValuesOnly: true }),\n            'a[0][b]=1&a[1]=2&a[2]=3',\n            'default => indices'\n        );\n\n        st.end();\n    });\n\n    t.test('stringifies an object inside an array with dots notation', function (st) {\n        st.equal(\n            qs.stringify(\n                { a: [{ b: 'c' }] },\n                { allowDots: true, encode: false, arrayFormat: 'indices' }\n            ),\n            'a[0].b=c',\n            'indices => indices'\n        );\n        st.equal(\n            qs.stringify(\n                { a: [{ b: 'c' }] },\n                { allowDots: true, encode: false, arrayFormat: 'brackets' }\n            ),\n            'a[].b=c',\n            'brackets => brackets'\n        );\n        st.equal(\n            qs.stringify(\n                { a: [{ b: 'c' }] },\n                { allowDots: true, encode: false }\n            ),\n            'a[0].b=c',\n            'default => indices'\n        );\n\n        st.equal(\n            qs.stringify(\n                { a: [{ b: { c: [1] } }] },\n                { allowDots: true, encode: false, arrayFormat: 'indices' }\n            ),\n            'a[0].b.c[0]=1',\n            'indices => indices'\n        );\n        st.equal(\n            qs.stringify(\n                { a: [{ b: { c: [1] } }] },\n                { allowDots: true, encode: false, arrayFormat: 'brackets' }\n            ),\n            'a[].b.c[]=1',\n            'brackets => brackets'\n        );\n        st.equal(\n            qs.stringify(\n                { a: [{ b: { c: [1] } }] },\n                { allowDots: true, encode: false }\n            ),\n            'a[0].b.c[0]=1',\n            'default => indices'\n        );\n\n        st.end();\n    });\n\n    t.test('does not omit object keys when indices = false', function (st) {\n        st.equal(qs.stringify({ a: [{ b: 'c' }] }, { indices: false }), 'a%5Bb%5D=c');\n        st.end();\n    });\n\n    t.test('uses indices notation for arrays when indices=true', function (st) {\n        st.equal(qs.stringify({ a: ['b', 'c'] }, { indices: true }), 'a%5B0%5D=b&a%5B1%5D=c');\n        st.end();\n    });\n\n    t.test('uses indices notation for arrays when no arrayFormat is specified', function (st) {\n        st.equal(qs.stringify({ a: ['b', 'c'] }), 'a%5B0%5D=b&a%5B1%5D=c');\n        st.end();\n    });\n\n    t.test('uses indices notation for arrays when no arrayFormat=indices', function (st) {\n        st.equal(qs.stringify({ a: ['b', 'c'] }, { arrayFormat: 'indices' }), 'a%5B0%5D=b&a%5B1%5D=c');\n        st.end();\n    });\n\n    t.test('uses repeat notation for arrays when no arrayFormat=repeat', function (st) {\n        st.equal(qs.stringify({ a: ['b', 'c'] }, { arrayFormat: 'repeat' }), 'a=b&a=c');\n        st.end();\n    });\n\n    t.test('uses brackets notation for arrays when no arrayFormat=brackets', function (st) {\n        st.equal(qs.stringify({ a: ['b', 'c'] }, { arrayFormat: 'brackets' }), 'a%5B%5D=b&a%5B%5D=c');\n        st.end();\n    });\n\n    t.test('stringifies a complicated object', function (st) {\n        st.equal(qs.stringify({ a: { b: 'c', d: 'e' } }), 'a%5Bb%5D=c&a%5Bd%5D=e');\n        st.end();\n    });\n\n    t.test('stringifies an empty value', function (st) {\n        st.equal(qs.stringify({ a: '' }), 'a=');\n        st.equal(qs.stringify({ a: null }, { strictNullHandling: true }), 'a');\n\n        st.equal(qs.stringify({ a: '', b: '' }), 'a=&b=');\n        st.equal(qs.stringify({ a: null, b: '' }, { strictNullHandling: true }), 'a&b=');\n\n        st.equal(qs.stringify({ a: { b: '' } }), 'a%5Bb%5D=');\n        st.equal(qs.stringify({ a: { b: null } }, { strictNullHandling: true }), 'a%5Bb%5D');\n        st.equal(qs.stringify({ a: { b: null } }, { strictNullHandling: false }), 'a%5Bb%5D=');\n\n        st.end();\n    });\n\n    t.test('stringifies an empty array in different arrayFormat', function (st) {\n        st.equal(qs.stringify({ a: [], b: [null], c: 'c' }, { encode: false }), 'b[0]=&c=c');\n        // arrayFormat default\n        st.equal(qs.stringify({ a: [], b: [null], c: 'c' }, { encode: false, arrayFormat: 'indices' }), 'b[0]=&c=c');\n        st.equal(qs.stringify({ a: [], b: [null], c: 'c' }, { encode: false, arrayFormat: 'brackets' }), 'b[]=&c=c');\n        st.equal(qs.stringify({ a: [], b: [null], c: 'c' }, { encode: false, arrayFormat: 'repeat' }), 'b=&c=c');\n        st.equal(qs.stringify({ a: [], b: [null], c: 'c' }, { encode: false, arrayFormat: 'comma' }), 'b=&c=c');\n        // with strictNullHandling\n        st.equal(qs.stringify({ a: [], b: [null], c: 'c' }, { encode: false, arrayFormat: 'indices', strictNullHandling: true }), 'b[0]&c=c');\n        st.equal(qs.stringify({ a: [], b: [null], c: 'c' }, { encode: false, arrayFormat: 'brackets', strictNullHandling: true }), 'b[]&c=c');\n        st.equal(qs.stringify({ a: [], b: [null], c: 'c' }, { encode: false, arrayFormat: 'repeat', strictNullHandling: true }), 'b&c=c');\n        st.equal(qs.stringify({ a: [], b: [null], c: 'c' }, { encode: false, arrayFormat: 'comma', strictNullHandling: true }), 'b&c=c');\n        // with skipNulls\n        st.equal(qs.stringify({ a: [], b: [null], c: 'c' }, { encode: false, arrayFormat: 'indices', skipNulls: true }), 'c=c');\n        st.equal(qs.stringify({ a: [], b: [null], c: 'c' }, { encode: false, arrayFormat: 'brackets', skipNulls: true }), 'c=c');\n        st.equal(qs.stringify({ a: [], b: [null], c: 'c' }, { encode: false, arrayFormat: 'repeat', skipNulls: true }), 'c=c');\n        st.equal(qs.stringify({ a: [], b: [null], c: 'c' }, { encode: false, arrayFormat: 'comma', skipNulls: true }), 'c=c');\n\n        st.end();\n    });\n\n    t.test('stringifies a null object', { skip: !Object.create }, function (st) {\n        var obj = Object.create(null);\n        obj.a = 'b';\n        st.equal(qs.stringify(obj), 'a=b');\n        st.end();\n    });\n\n    t.test('returns an empty string for invalid input', function (st) {\n        st.equal(qs.stringify(undefined), '');\n        st.equal(qs.stringify(false), '');\n        st.equal(qs.stringify(null), '');\n        st.equal(qs.stringify(''), '');\n        st.end();\n    });\n\n    t.test('stringifies an object with a null object as a child', { skip: !Object.create }, function (st) {\n        var obj = { a: Object.create(null) };\n\n        obj.a.b = 'c';\n        st.equal(qs.stringify(obj), 'a%5Bb%5D=c');\n        st.end();\n    });\n\n    t.test('drops keys with a value of undefined', function (st) {\n        st.equal(qs.stringify({ a: undefined }), '');\n\n        st.equal(qs.stringify({ a: { b: undefined, c: null } }, { strictNullHandling: true }), 'a%5Bc%5D');\n        st.equal(qs.stringify({ a: { b: undefined, c: null } }, { strictNullHandling: false }), 'a%5Bc%5D=');\n        st.equal(qs.stringify({ a: { b: undefined, c: '' } }), 'a%5Bc%5D=');\n        st.end();\n    });\n\n    t.test('url encodes values', function (st) {\n        st.equal(qs.stringify({ a: 'b c' }), 'a=b%20c');\n        st.end();\n    });\n\n    t.test('stringifies a date', function (st) {\n        var now = new Date();\n        var str = 'a=' + encodeURIComponent(now.toISOString());\n        st.equal(qs.stringify({ a: now }), str);\n        st.end();\n    });\n\n    t.test('stringifies the weird object from qs', function (st) {\n        st.equal(qs.stringify({ 'my weird field': '~q1!2\"\\'w$5&7/z8)?' }), 'my%20weird%20field=~q1%212%22%27w%245%267%2Fz8%29%3F');\n        st.end();\n    });\n\n    t.test('skips properties that are part of the object prototype', function (st) {\n        Object.prototype.crash = 'test';\n        st.equal(qs.stringify({ a: 'b' }), 'a=b');\n        st.equal(qs.stringify({ a: { b: 'c' } }), 'a%5Bb%5D=c');\n        delete Object.prototype.crash;\n        st.end();\n    });\n\n    t.test('stringifies boolean values', function (st) {\n        st.equal(qs.stringify({ a: true }), 'a=true');\n        st.equal(qs.stringify({ a: { b: true } }), 'a%5Bb%5D=true');\n        st.equal(qs.stringify({ b: false }), 'b=false');\n        st.equal(qs.stringify({ b: { c: false } }), 'b%5Bc%5D=false');\n        st.end();\n    });\n\n    t.test('stringifies buffer values', function (st) {\n        st.equal(qs.stringify({ a: SaferBuffer.from('test') }), 'a=test');\n        st.equal(qs.stringify({ a: { b: SaferBuffer.from('test') } }), 'a%5Bb%5D=test');\n        st.end();\n    });\n\n    t.test('stringifies an object using an alternative delimiter', function (st) {\n        st.equal(qs.stringify({ a: 'b', c: 'd' }, { delimiter: ';' }), 'a=b;c=d');\n        st.end();\n    });\n\n    t.test('does not blow up when Buffer global is missing', function (st) {\n        var tempBuffer = global.Buffer;\n        delete global.Buffer;\n        var result = qs.stringify({ a: 'b', c: 'd' });\n        global.Buffer = tempBuffer;\n        st.equal(result, 'a=b&c=d');\n        st.end();\n    });\n\n    t.test('does not crash when parsing circular references', function (st) {\n        var a = {};\n        a.b = a;\n\n        st['throws'](\n            function () { qs.stringify({ 'foo[bar]': 'baz', 'foo[baz]': a }); },\n            /RangeError: Cyclic object value/,\n            'cyclic values throw'\n        );\n\n        var circular = {\n            a: 'value'\n        };\n        circular.a = circular;\n        st['throws'](\n            function () { qs.stringify(circular); },\n            /RangeError: Cyclic object value/,\n            'cyclic values throw'\n        );\n\n        var arr = ['a'];\n        st.doesNotThrow(\n            function () { qs.stringify({ x: arr, y: arr }); },\n            'non-cyclic values do not throw'\n        );\n\n        st.end();\n    });\n\n    t.test('non-circular duplicated references can still work', function (st) {\n        var hourOfDay = {\n            'function': 'hour_of_day'\n        };\n\n        var p1 = {\n            'function': 'gte',\n            arguments: [hourOfDay, 0]\n        };\n        var p2 = {\n            'function': 'lte',\n            arguments: [hourOfDay, 23]\n        };\n\n        st.equal(\n            qs.stringify({ filters: { $and: [p1, p2] } }, { encodeValuesOnly: true }),\n            'filters[$and][0][function]=gte&filters[$and][0][arguments][0][function]=hour_of_day&filters[$and][0][arguments][1]=0&filters[$and][1][function]=lte&filters[$and][1][arguments][0][function]=hour_of_day&filters[$and][1][arguments][1]=23'\n        );\n\n        st.end();\n    });\n\n    t.test('selects properties when filter=array', function (st) {\n        st.equal(qs.stringify({ a: 'b' }, { filter: ['a'] }), 'a=b');\n        st.equal(qs.stringify({ a: 1 }, { filter: [] }), '');\n\n        st.equal(\n            qs.stringify(\n                { a: { b: [1, 2, 3, 4], c: 'd' }, c: 'f' },\n                { filter: ['a', 'b', 0, 2], arrayFormat: 'indices' }\n            ),\n            'a%5Bb%5D%5B0%5D=1&a%5Bb%5D%5B2%5D=3',\n            'indices => indices'\n        );\n        st.equal(\n            qs.stringify(\n                { a: { b: [1, 2, 3, 4], c: 'd' }, c: 'f' },\n                { filter: ['a', 'b', 0, 2], arrayFormat: 'brackets' }\n            ),\n            'a%5Bb%5D%5B%5D=1&a%5Bb%5D%5B%5D=3',\n            'brackets => brackets'\n        );\n        st.equal(\n            qs.stringify(\n                { a: { b: [1, 2, 3, 4], c: 'd' }, c: 'f' },\n                { filter: ['a', 'b', 0, 2] }\n            ),\n            'a%5Bb%5D%5B0%5D=1&a%5Bb%5D%5B2%5D=3',\n            'default => indices'\n        );\n\n        st.end();\n    });\n\n    t.test('supports custom representations when filter=function', function (st) {\n        var calls = 0;\n        var obj = { a: 'b', c: 'd', e: { f: new Date(1257894000000) } };\n        var filterFunc = function (prefix, value) {\n            calls += 1;\n            if (calls === 1) {\n                st.equal(prefix, '', 'prefix is empty');\n                st.equal(value, obj);\n            } else if (prefix === 'c') {\n                return void 0;\n            } else if (value instanceof Date) {\n                st.equal(prefix, 'e[f]');\n                return value.getTime();\n            }\n            return value;\n        };\n\n        st.equal(qs.stringify(obj, { filter: filterFunc }), 'a=b&e%5Bf%5D=1257894000000');\n        st.equal(calls, 5);\n        st.end();\n    });\n\n    t.test('can disable uri encoding', function (st) {\n        st.equal(qs.stringify({ a: 'b' }, { encode: false }), 'a=b');\n        st.equal(qs.stringify({ a: { b: 'c' } }, { encode: false }), 'a[b]=c');\n        st.equal(qs.stringify({ a: 'b', c: null }, { strictNullHandling: true, encode: false }), 'a=b&c');\n        st.end();\n    });\n\n    t.test('can sort the keys', function (st) {\n        var sort = function (a, b) {\n            return a.localeCompare(b);\n        };\n        st.equal(qs.stringify({ a: 'c', z: 'y', b: 'f' }, { sort: sort }), 'a=c&b=f&z=y');\n        st.equal(qs.stringify({ a: 'c', z: { j: 'a', i: 'b' }, b: 'f' }, { sort: sort }), 'a=c&b=f&z%5Bi%5D=b&z%5Bj%5D=a');\n        st.end();\n    });\n\n    t.test('can sort the keys at depth 3 or more too', function (st) {\n        var sort = function (a, b) {\n            return a.localeCompare(b);\n        };\n        st.equal(\n            qs.stringify(\n                { a: 'a', z: { zj: { zjb: 'zjb', zja: 'zja' }, zi: { zib: 'zib', zia: 'zia' } }, b: 'b' },\n                { sort: sort, encode: false }\n            ),\n            'a=a&b=b&z[zi][zia]=zia&z[zi][zib]=zib&z[zj][zja]=zja&z[zj][zjb]=zjb'\n        );\n        st.equal(\n            qs.stringify(\n                { a: 'a', z: { zj: { zjb: 'zjb', zja: 'zja' }, zi: { zib: 'zib', zia: 'zia' } }, b: 'b' },\n                { sort: null, encode: false }\n            ),\n            'a=a&z[zj][zjb]=zjb&z[zj][zja]=zja&z[zi][zib]=zib&z[zi][zia]=zia&b=b'\n        );\n        st.end();\n    });\n\n    t.test('can stringify with custom encoding', function (st) {\n        st.equal(qs.stringify({ 県: '大阪府', '': '' }, {\n            encoder: function (str) {\n                if (str.length === 0) {\n                    return '';\n                }\n                var buf = iconv.encode(str, 'shiftjis');\n                var result = [];\n                for (var i = 0; i < buf.length; ++i) {\n                    result.push(buf.readUInt8(i).toString(16));\n                }\n                return '%' + result.join('%');\n            }\n        }), '%8c%a7=%91%e5%8d%e3%95%7b&=');\n        st.end();\n    });\n\n    t.test('receives the default encoder as a second argument', function (st) {\n        st.plan(2);\n        qs.stringify({ a: 1 }, {\n            encoder: function (str, defaultEncoder) {\n                st.equal(defaultEncoder, utils.encode);\n            }\n        });\n        st.end();\n    });\n\n    t.test('throws error with wrong encoder', function (st) {\n        st['throws'](function () {\n            qs.stringify({}, { encoder: 'string' });\n        }, new TypeError('Encoder has to be a function.'));\n        st.end();\n    });\n\n    t.test('can use custom encoder for a buffer object', { skip: typeof Buffer === 'undefined' }, function (st) {\n        st.equal(qs.stringify({ a: SaferBuffer.from([1]) }, {\n            encoder: function (buffer) {\n                if (typeof buffer === 'string') {\n                    return buffer;\n                }\n                return String.fromCharCode(buffer.readUInt8(0) + 97);\n            }\n        }), 'a=b');\n\n        st.equal(qs.stringify({ a: SaferBuffer.from('a b') }, {\n            encoder: function (buffer) {\n                return buffer;\n            }\n        }), 'a=a b');\n        st.end();\n    });\n\n    t.test('serializeDate option', function (st) {\n        var date = new Date();\n        st.equal(\n            qs.stringify({ a: date }),\n            'a=' + date.toISOString().replace(/:/g, '%3A'),\n            'default is toISOString'\n        );\n\n        var mutatedDate = new Date();\n        mutatedDate.toISOString = function () {\n            throw new SyntaxError();\n        };\n        st['throws'](function () {\n            mutatedDate.toISOString();\n        }, SyntaxError);\n        st.equal(\n            qs.stringify({ a: mutatedDate }),\n            'a=' + Date.prototype.toISOString.call(mutatedDate).replace(/:/g, '%3A'),\n            'toISOString works even when method is not locally present'\n        );\n\n        var specificDate = new Date(6);\n        st.equal(\n            qs.stringify(\n                { a: specificDate },\n                { serializeDate: function (d) { return d.getTime() * 7; } }\n            ),\n            'a=42',\n            'custom serializeDate function called'\n        );\n\n        st.equal(\n            qs.stringify(\n                { a: [date] },\n                {\n                    serializeDate: function (d) { return d.getTime(); },\n                    arrayFormat: 'comma'\n                }\n            ),\n            'a=' + date.getTime(),\n            'works with arrayFormat comma'\n        );\n\n        st.end();\n    });\n\n    t.test('RFC 1738 serialization', function (st) {\n        st.equal(qs.stringify({ a: 'b c' }, { format: qs.formats.RFC1738 }), 'a=b+c');\n        st.equal(qs.stringify({ 'a b': 'c d' }, { format: qs.formats.RFC1738 }), 'a+b=c+d');\n        st.equal(qs.stringify({ 'a b': SaferBuffer.from('a b') }, { format: qs.formats.RFC1738 }), 'a+b=a+b');\n\n        st.equal(qs.stringify({ 'foo(ref)': 'bar' }, { format: qs.formats.RFC1738 }), 'foo(ref)=bar');\n\n        st.end();\n    });\n\n    t.test('RFC 3986 spaces serialization', function (st) {\n        st.equal(qs.stringify({ a: 'b c' }, { format: qs.formats.RFC3986 }), 'a=b%20c');\n        st.equal(qs.stringify({ 'a b': 'c d' }, { format: qs.formats.RFC3986 }), 'a%20b=c%20d');\n        st.equal(qs.stringify({ 'a b': SaferBuffer.from('a b') }, { format: qs.formats.RFC3986 }), 'a%20b=a%20b');\n\n        st.end();\n    });\n\n    t.test('Backward compatibility to RFC 3986', function (st) {\n        st.equal(qs.stringify({ a: 'b c' }), 'a=b%20c');\n        st.equal(qs.stringify({ 'a b': SaferBuffer.from('a b') }), 'a%20b=a%20b');\n\n        st.end();\n    });\n\n    t.test('Edge cases and unknown formats', function (st) {\n        ['UFO1234', false, 1234, null, {}, []].forEach(\n            function (format) {\n                st['throws'](\n                    function () {\n                        qs.stringify({ a: 'b c' }, { format: format });\n                    },\n                    new TypeError('Unknown format option provided.')\n                );\n            }\n        );\n        st.end();\n    });\n\n    t.test('encodeValuesOnly', function (st) {\n        st.equal(\n            qs.stringify(\n                { a: 'b', c: ['d', 'e=f'], f: [['g'], ['h']] },\n                { encodeValuesOnly: true }\n            ),\n            'a=b&c[0]=d&c[1]=e%3Df&f[0][0]=g&f[1][0]=h'\n        );\n        st.equal(\n            qs.stringify(\n                { a: 'b', c: ['d', 'e'], f: [['g'], ['h']] }\n            ),\n            'a=b&c%5B0%5D=d&c%5B1%5D=e&f%5B0%5D%5B0%5D=g&f%5B1%5D%5B0%5D=h'\n        );\n        st.end();\n    });\n\n    t.test('encodeValuesOnly - strictNullHandling', function (st) {\n        st.equal(\n            qs.stringify(\n                { a: { b: null } },\n                { encodeValuesOnly: true, strictNullHandling: true }\n            ),\n            'a[b]'\n        );\n        st.end();\n    });\n\n    t.test('throws if an invalid charset is specified', function (st) {\n        st['throws'](function () {\n            qs.stringify({ a: 'b' }, { charset: 'foobar' });\n        }, new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined'));\n        st.end();\n    });\n\n    t.test('respects a charset of iso-8859-1', function (st) {\n        st.equal(qs.stringify({ æ: 'æ' }, { charset: 'iso-8859-1' }), '%E6=%E6');\n        st.end();\n    });\n\n    t.test('encodes unrepresentable chars as numeric entities in iso-8859-1 mode', function (st) {\n        st.equal(qs.stringify({ a: '☺' }, { charset: 'iso-8859-1' }), 'a=%26%239786%3B');\n        st.end();\n    });\n\n    t.test('respects an explicit charset of utf-8 (the default)', function (st) {\n        st.equal(qs.stringify({ a: 'æ' }, { charset: 'utf-8' }), 'a=%C3%A6');\n        st.end();\n    });\n\n    t.test('adds the right sentinel when instructed to and the charset is utf-8', function (st) {\n        st.equal(qs.stringify({ a: 'æ' }, { charsetSentinel: true, charset: 'utf-8' }), 'utf8=%E2%9C%93&a=%C3%A6');\n        st.end();\n    });\n\n    t.test('adds the right sentinel when instructed to and the charset is iso-8859-1', function (st) {\n        st.equal(qs.stringify({ a: 'æ' }, { charsetSentinel: true, charset: 'iso-8859-1' }), 'utf8=%26%2310003%3B&a=%E6');\n        st.end();\n    });\n\n    t.test('does not mutate the options argument', function (st) {\n        var options = {};\n        qs.stringify({}, options);\n        st.deepEqual(options, {});\n        st.end();\n    });\n\n    t.test('strictNullHandling works with custom filter', function (st) {\n        var filter = function (prefix, value) {\n            return value;\n        };\n\n        var options = { strictNullHandling: true, filter: filter };\n        st.equal(qs.stringify({ key: null }, options), 'key');\n        st.end();\n    });\n\n    t.test('strictNullHandling works with null serializeDate', function (st) {\n        var serializeDate = function () {\n            return null;\n        };\n        var options = { strictNullHandling: true, serializeDate: serializeDate };\n        var date = new Date();\n        st.equal(qs.stringify({ key: date }, options), 'key');\n        st.end();\n    });\n\n    t.test('allows for encoding keys and values differently', function (st) {\n        var encoder = function (str, defaultEncoder, charset, type) {\n            if (type === 'key') {\n                return defaultEncoder(str, defaultEncoder, charset, type).toLowerCase();\n            }\n            if (type === 'value') {\n                return defaultEncoder(str, defaultEncoder, charset, type).toUpperCase();\n            }\n            throw 'this should never happen! type: ' + type;\n        };\n\n        st.deepEqual(qs.stringify({ KeY: 'vAlUe' }, { encoder: encoder }), 'key=VALUE');\n        st.end();\n    });\n\n    t.test('objects inside arrays', function (st) {\n        var obj = { a: { b: { c: 'd', e: 'f' } } };\n        var withArray = { a: { b: [{ c: 'd', e: 'f' }] } };\n\n        st.equal(qs.stringify(obj, { encode: false }), 'a[b][c]=d&a[b][e]=f', 'no array, no arrayFormat');\n        st.equal(qs.stringify(obj, { encode: false, arrayFormat: 'bracket' }), 'a[b][c]=d&a[b][e]=f', 'no array, bracket');\n        st.equal(qs.stringify(obj, { encode: false, arrayFormat: 'indices' }), 'a[b][c]=d&a[b][e]=f', 'no array, indices');\n        st.equal(qs.stringify(obj, { encode: false, arrayFormat: 'comma' }), 'a[b][c]=d&a[b][e]=f', 'no array, comma');\n\n        st.equal(qs.stringify(withArray, { encode: false }), 'a[b][0][c]=d&a[b][0][e]=f', 'array, no arrayFormat');\n        st.equal(qs.stringify(withArray, { encode: false, arrayFormat: 'bracket' }), 'a[b][0][c]=d&a[b][0][e]=f', 'array, bracket');\n        st.equal(qs.stringify(withArray, { encode: false, arrayFormat: 'indices' }), 'a[b][0][c]=d&a[b][0][e]=f', 'array, indices');\n        st.equal(\n            qs.stringify(withArray, { encode: false, arrayFormat: 'comma' }),\n            '???',\n            'array, comma',\n            { skip: 'TODO: figure out what this should do' }\n        );\n\n        st.end();\n    });\n\n    t.test('stringifies sparse arrays', function (st) {\n        /* eslint no-sparse-arrays: 0 */\n        st.equal(qs.stringify({ a: [, '2', , , '1'] }, { encodeValuesOnly: true }), 'a[1]=2&a[4]=1');\n        st.equal(qs.stringify({ a: [, { b: [, , { c: '1' }] }] }, { encodeValuesOnly: true }), 'a[1][b][2][c]=1');\n        st.equal(qs.stringify({ a: [, [, , [, , , { c: '1' }]]] }, { encodeValuesOnly: true }), 'a[1][2][3][c]=1');\n        st.equal(qs.stringify({ a: [, [, , [, , , { c: [, '1'] }]]] }, { encodeValuesOnly: true }), 'a[1][2][3][c][1]=1');\n\n        st.end();\n    });\n\n    t.end();\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}