{"ast":null,"code":"/*:nodoc:*\n * class ActionAppend\n *\n * This action stores a list, and appends each argument value to the list.\n * This is useful to allow an option to be specified multiple times.\n * This class inherided from [[Action]]\n *\n **/\n'use strict';\n\nvar util = require('util');\n\nvar Action = require('../action'); // Constants\n\n\nvar c = require('../const');\n/*:nodoc:*\n * new ActionAppend(options)\n * - options (object): options hash see [[Action.new]]\n *\n * Note: options.nargs should be optional for constants\n * and more then zero for other\n **/\n\n\nvar ActionAppend = module.exports = function ActionAppend(options) {\n  options = options || {};\n\n  if (this.nargs <= 0) {\n    throw new Error('nargs for append actions must be > 0; if arg ' + 'strings are not supplying the value to append, ' + 'the append const action may be more appropriate');\n  }\n\n  if (!!this.constant && this.nargs !== c.OPTIONAL) {\n    throw new Error('nargs must be OPTIONAL to supply const');\n  }\n\n  Action.call(this, options);\n};\n\nutil.inherits(ActionAppend, Action);\n/*:nodoc:*\n * ActionAppend#call(parser, namespace, values, optionString) -> Void\n * - parser (ArgumentParser): current parser\n * - namespace (Namespace): namespace for output data\n * - values (Array): parsed values\n * - optionString (Array): input option string(not parsed)\n *\n * Call the action. Save result in namespace object\n **/\n\nActionAppend.prototype.call = function (parser, namespace, values) {\n  var items = (namespace[this.dest] || []).slice();\n  items.push(values);\n  namespace.set(this.dest, items);\n};","map":{"version":3,"names":["util","require","Action","c","ActionAppend","module","exports","options","nargs","Error","constant","OPTIONAL","call","inherits","prototype","parser","namespace","values","items","dest","slice","push","set"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/argparse/lib/action/append.js"],"sourcesContent":["/*:nodoc:*\n * class ActionAppend\n *\n * This action stores a list, and appends each argument value to the list.\n * This is useful to allow an option to be specified multiple times.\n * This class inherided from [[Action]]\n *\n **/\n\n'use strict';\n\nvar util = require('util');\n\nvar Action = require('../action');\n\n// Constants\nvar c = require('../const');\n\n/*:nodoc:*\n * new ActionAppend(options)\n * - options (object): options hash see [[Action.new]]\n *\n * Note: options.nargs should be optional for constants\n * and more then zero for other\n **/\nvar ActionAppend = module.exports = function ActionAppend(options) {\n  options = options || {};\n  if (this.nargs <= 0) {\n    throw new Error('nargs for append actions must be > 0; if arg ' +\n        'strings are not supplying the value to append, ' +\n        'the append const action may be more appropriate');\n  }\n  if (!!this.constant && this.nargs !== c.OPTIONAL) {\n    throw new Error('nargs must be OPTIONAL to supply const');\n  }\n  Action.call(this, options);\n};\nutil.inherits(ActionAppend, Action);\n\n/*:nodoc:*\n * ActionAppend#call(parser, namespace, values, optionString) -> Void\n * - parser (ArgumentParser): current parser\n * - namespace (Namespace): namespace for output data\n * - values (Array): parsed values\n * - optionString (Array): input option string(not parsed)\n *\n * Call the action. Save result in namespace object\n **/\nActionAppend.prototype.call = function (parser, namespace, values) {\n  var items = (namespace[this.dest] || []).slice();\n  items.push(values);\n  namespace.set(this.dest, items);\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,IAAIA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAAlB;;AAEA,IAAIC,MAAM,GAAGD,OAAO,CAAC,WAAD,CAApB,C,CAEA;;;AACA,IAAIE,CAAC,GAAGF,OAAO,CAAC,UAAD,CAAf;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIG,YAAY,GAAGC,MAAM,CAACC,OAAP,GAAiB,SAASF,YAAT,CAAsBG,OAAtB,EAA+B;EACjEA,OAAO,GAAGA,OAAO,IAAI,EAArB;;EACA,IAAI,KAAKC,KAAL,IAAc,CAAlB,EAAqB;IACnB,MAAM,IAAIC,KAAJ,CAAU,kDACZ,iDADY,GAEZ,iDAFE,CAAN;EAGD;;EACD,IAAI,CAAC,CAAC,KAAKC,QAAP,IAAmB,KAAKF,KAAL,KAAeL,CAAC,CAACQ,QAAxC,EAAkD;IAChD,MAAM,IAAIF,KAAJ,CAAU,wCAAV,CAAN;EACD;;EACDP,MAAM,CAACU,IAAP,CAAY,IAAZ,EAAkBL,OAAlB;AACD,CAXD;;AAYAP,IAAI,CAACa,QAAL,CAAcT,YAAd,EAA4BF,MAA5B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAE,YAAY,CAACU,SAAb,CAAuBF,IAAvB,GAA8B,UAAUG,MAAV,EAAkBC,SAAlB,EAA6BC,MAA7B,EAAqC;EACjE,IAAIC,KAAK,GAAG,CAACF,SAAS,CAAC,KAAKG,IAAN,CAAT,IAAwB,EAAzB,EAA6BC,KAA7B,EAAZ;EACAF,KAAK,CAACG,IAAN,CAAWJ,MAAX;EACAD,SAAS,CAACM,GAAV,CAAc,KAAKH,IAAnB,EAAyBD,KAAzB;AACD,CAJD"},"metadata":{},"sourceType":"script"}