{"ast":null,"code":"'use strict';\n\nvar whichBoxedPrimitive = require('which-boxed-primitive');\n\nvar callBound = require('call-bind/callBound');\n\nvar hasSymbols = require('has-symbols')();\n\nvar hasBigInts = require('has-bigints')();\n\nvar stringToString = callBound('String.prototype.toString');\nvar numberValueOf = callBound('Number.prototype.valueOf');\nvar booleanValueOf = callBound('Boolean.prototype.valueOf');\nvar symbolValueOf = hasSymbols && callBound('Symbol.prototype.valueOf');\nvar bigIntValueOf = hasBigInts && callBound('BigInt.prototype.valueOf');\n\nmodule.exports = function unboxPrimitive(value) {\n  var which = whichBoxedPrimitive(value);\n\n  if (typeof which !== 'string') {\n    throw new TypeError(which === null ? 'value is an unboxed primitive' : 'value is a non-boxed-primitive object');\n  }\n\n  if (which === 'String') {\n    return stringToString(value);\n  }\n\n  if (which === 'Number') {\n    return numberValueOf(value);\n  }\n\n  if (which === 'Boolean') {\n    return booleanValueOf(value);\n  }\n\n  if (which === 'Symbol') {\n    if (!hasSymbols) {\n      throw new EvalError('somehow this environment does not have Symbols, but you have a boxed Symbol value. Please report this!');\n    }\n\n    return symbolValueOf(value);\n  }\n\n  if (which === 'BigInt') {\n    return bigIntValueOf(value);\n  }\n\n  throw new RangeError('unknown boxed primitive found: ' + which);\n};","map":{"version":3,"names":["whichBoxedPrimitive","require","callBound","hasSymbols","hasBigInts","stringToString","numberValueOf","booleanValueOf","symbolValueOf","bigIntValueOf","module","exports","unboxPrimitive","value","which","TypeError","EvalError","RangeError"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/unbox-primitive/index.js"],"sourcesContent":["'use strict';\n\nvar whichBoxedPrimitive = require('which-boxed-primitive');\nvar callBound = require('call-bind/callBound');\nvar hasSymbols = require('has-symbols')();\nvar hasBigInts = require('has-bigints')();\n\nvar stringToString = callBound('String.prototype.toString');\nvar numberValueOf = callBound('Number.prototype.valueOf');\nvar booleanValueOf = callBound('Boolean.prototype.valueOf');\nvar symbolValueOf = hasSymbols && callBound('Symbol.prototype.valueOf');\nvar bigIntValueOf = hasBigInts && callBound('BigInt.prototype.valueOf');\n\nmodule.exports = function unboxPrimitive(value) {\n\tvar which = whichBoxedPrimitive(value);\n\tif (typeof which !== 'string') {\n\t\tthrow new TypeError(which === null ? 'value is an unboxed primitive' : 'value is a non-boxed-primitive object');\n\t}\n\n\tif (which === 'String') {\n\t\treturn stringToString(value);\n\t}\n\tif (which === 'Number') {\n\t\treturn numberValueOf(value);\n\t}\n\tif (which === 'Boolean') {\n\t\treturn booleanValueOf(value);\n\t}\n\tif (which === 'Symbol') {\n\t\tif (!hasSymbols) {\n\t\t\tthrow new EvalError('somehow this environment does not have Symbols, but you have a boxed Symbol value. Please report this!');\n\t\t}\n\t\treturn symbolValueOf(value);\n\t}\n\tif (which === 'BigInt') {\n\t\treturn bigIntValueOf(value);\n\t}\n\tthrow new RangeError('unknown boxed primitive found: ' + which);\n};\n"],"mappings":"AAAA;;AAEA,IAAIA,mBAAmB,GAAGC,OAAO,CAAC,uBAAD,CAAjC;;AACA,IAAIC,SAAS,GAAGD,OAAO,CAAC,qBAAD,CAAvB;;AACA,IAAIE,UAAU,GAAGF,OAAO,CAAC,aAAD,CAAP,EAAjB;;AACA,IAAIG,UAAU,GAAGH,OAAO,CAAC,aAAD,CAAP,EAAjB;;AAEA,IAAII,cAAc,GAAGH,SAAS,CAAC,2BAAD,CAA9B;AACA,IAAII,aAAa,GAAGJ,SAAS,CAAC,0BAAD,CAA7B;AACA,IAAIK,cAAc,GAAGL,SAAS,CAAC,2BAAD,CAA9B;AACA,IAAIM,aAAa,GAAGL,UAAU,IAAID,SAAS,CAAC,0BAAD,CAA3C;AACA,IAAIO,aAAa,GAAGL,UAAU,IAAIF,SAAS,CAAC,0BAAD,CAA3C;;AAEAQ,MAAM,CAACC,OAAP,GAAiB,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;EAC/C,IAAIC,KAAK,GAAGd,mBAAmB,CAACa,KAAD,CAA/B;;EACA,IAAI,OAAOC,KAAP,KAAiB,QAArB,EAA+B;IAC9B,MAAM,IAAIC,SAAJ,CAAcD,KAAK,KAAK,IAAV,GAAiB,+BAAjB,GAAmD,uCAAjE,CAAN;EACA;;EAED,IAAIA,KAAK,KAAK,QAAd,EAAwB;IACvB,OAAOT,cAAc,CAACQ,KAAD,CAArB;EACA;;EACD,IAAIC,KAAK,KAAK,QAAd,EAAwB;IACvB,OAAOR,aAAa,CAACO,KAAD,CAApB;EACA;;EACD,IAAIC,KAAK,KAAK,SAAd,EAAyB;IACxB,OAAOP,cAAc,CAACM,KAAD,CAArB;EACA;;EACD,IAAIC,KAAK,KAAK,QAAd,EAAwB;IACvB,IAAI,CAACX,UAAL,EAAiB;MAChB,MAAM,IAAIa,SAAJ,CAAc,wGAAd,CAAN;IACA;;IACD,OAAOR,aAAa,CAACK,KAAD,CAApB;EACA;;EACD,IAAIC,KAAK,KAAK,QAAd,EAAwB;IACvB,OAAOL,aAAa,CAACI,KAAD,CAApB;EACA;;EACD,MAAM,IAAII,UAAJ,CAAe,oCAAoCH,KAAnD,CAAN;AACA,CAzBD"},"metadata":{},"sourceType":"script"}