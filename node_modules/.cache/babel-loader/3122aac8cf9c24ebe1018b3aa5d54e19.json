{"ast":null,"code":"'use strict'; // TODO implement as separate plugin\n\nconst {\n  transformsMultiply,\n  transform2js,\n  transformArc\n} = require('./_transforms.js');\n\nconst {\n  removeLeadingZero\n} = require('../lib/svgo/tools.js');\n\nconst {\n  referencesProps,\n  attrsGroupsDefaults\n} = require('./_collections.js');\n\nconst regNumericValues = /[-+]?(\\d*\\.\\d+|\\d+\\.?)(?:[eE][-+]?\\d+)?/g;\nconst defaultStrokeWidth = attrsGroupsDefaults.presentation['stroke-width'];\n/**\n * Apply transformation(s) to the Path data.\n *\n * @param {Object} elem current element\n * @param {Array} path input path data\n * @param {Object} params whether to apply transforms to stroked lines and transform precision (used for stroke width)\n * @return {Array} output path data\n */\n\nconst applyTransforms = (elem, pathData, params) => {\n  // if there are no 'stroke' attr and references to other objects such as\n  // gradiends or clip-path which are also subjects to transform.\n  if (elem.attributes.transform == null || elem.attributes.transform === '' || // styles are not considered when applying transform\n  // can be fixed properly with new style engine\n  elem.attributes.style != null || Object.entries(elem.attributes).some(_ref => {\n    let [name, value] = _ref;\n    return referencesProps.includes(name) && value.includes('url(');\n  })) {\n    return;\n  }\n\n  const matrix = transformsMultiply(transform2js(elem.attributes.transform));\n  const stroke = elem.computedAttr('stroke');\n  const id = elem.computedAttr('id');\n  const transformPrecision = params.transformPrecision;\n\n  if (stroke && stroke != 'none') {\n    if (!params.applyTransformsStroked || (matrix.data[0] != matrix.data[3] || matrix.data[1] != -matrix.data[2]) && (matrix.data[0] != -matrix.data[3] || matrix.data[1] != matrix.data[2])) return; // \"stroke-width\" should be inside the part with ID, otherwise it can be overrided in <use>\n\n    if (id) {\n      let idElem = elem;\n      let hasStrokeWidth = false;\n\n      do {\n        if (idElem.attributes['stroke-width']) {\n          hasStrokeWidth = true;\n        }\n      } while (idElem.attributes.id !== id && !hasStrokeWidth && (idElem = idElem.parentNode));\n\n      if (!hasStrokeWidth) return;\n    }\n\n    const scale = +Math.sqrt(matrix.data[0] * matrix.data[0] + matrix.data[1] * matrix.data[1]).toFixed(transformPrecision);\n\n    if (scale !== 1) {\n      const strokeWidth = elem.computedAttr('stroke-width') || defaultStrokeWidth;\n\n      if (elem.attributes['vector-effect'] == null || elem.attributes['vector-effect'] !== 'non-scaling-stroke') {\n        if (elem.attributes['stroke-width'] != null) {\n          elem.attributes['stroke-width'] = elem.attributes['stroke-width'].trim().replace(regNumericValues, num => removeLeadingZero(num * scale));\n        } else {\n          elem.attributes['stroke-width'] = strokeWidth.replace(regNumericValues, num => removeLeadingZero(num * scale));\n        }\n\n        if (elem.attributes['stroke-dashoffset'] != null) {\n          elem.attributes['stroke-dashoffset'] = elem.attributes['stroke-dashoffset'].trim().replace(regNumericValues, num => removeLeadingZero(num * scale));\n        }\n\n        if (elem.attributes['stroke-dasharray'] != null) {\n          elem.attributes['stroke-dasharray'] = elem.attributes['stroke-dasharray'].trim().replace(regNumericValues, num => removeLeadingZero(num * scale));\n        }\n      }\n    }\n  } else if (id) {\n    // Stroke and stroke-width can be redefined with <use>\n    return;\n  }\n\n  applyMatrixToPathData(pathData, matrix.data); // remove transform attr\n\n  delete elem.attributes.transform;\n  return;\n};\n\nexports.applyTransforms = applyTransforms;\n\nconst transformAbsolutePoint = (matrix, x, y) => {\n  const newX = matrix[0] * x + matrix[2] * y + matrix[4];\n  const newY = matrix[1] * x + matrix[3] * y + matrix[5];\n  return [newX, newY];\n};\n\nconst transformRelativePoint = (matrix, x, y) => {\n  const newX = matrix[0] * x + matrix[2] * y;\n  const newY = matrix[1] * x + matrix[3] * y;\n  return [newX, newY];\n};\n\nconst applyMatrixToPathData = (pathData, matrix) => {\n  const start = [0, 0];\n  const cursor = [0, 0];\n\n  for (const pathItem of pathData) {\n    let {\n      command,\n      args\n    } = pathItem; // moveto (x y)\n\n    if (command === 'M') {\n      cursor[0] = args[0];\n      cursor[1] = args[1];\n      start[0] = cursor[0];\n      start[1] = cursor[1];\n      const [x, y] = transformAbsolutePoint(matrix, args[0], args[1]);\n      args[0] = x;\n      args[1] = y;\n    }\n\n    if (command === 'm') {\n      cursor[0] += args[0];\n      cursor[1] += args[1];\n      start[0] = cursor[0];\n      start[1] = cursor[1];\n      const [x, y] = transformRelativePoint(matrix, args[0], args[1]);\n      args[0] = x;\n      args[1] = y;\n    } // horizontal lineto (x)\n    // convert to lineto to handle two-dimentional transforms\n\n\n    if (command === 'H') {\n      command = 'L';\n      args = [args[0], cursor[1]];\n    }\n\n    if (command === 'h') {\n      command = 'l';\n      args = [args[0], 0];\n    } // vertical lineto (y)\n    // convert to lineto to handle two-dimentional transforms\n\n\n    if (command === 'V') {\n      command = 'L';\n      args = [cursor[0], args[0]];\n    }\n\n    if (command === 'v') {\n      command = 'l';\n      args = [0, args[0]];\n    } // lineto (x y)\n\n\n    if (command === 'L') {\n      cursor[0] = args[0];\n      cursor[1] = args[1];\n      const [x, y] = transformAbsolutePoint(matrix, args[0], args[1]);\n      args[0] = x;\n      args[1] = y;\n    }\n\n    if (command === 'l') {\n      cursor[0] += args[0];\n      cursor[1] += args[1];\n      const [x, y] = transformRelativePoint(matrix, args[0], args[1]);\n      args[0] = x;\n      args[1] = y;\n    } // curveto (x1 y1 x2 y2 x y)\n\n\n    if (command === 'C') {\n      cursor[0] = args[4];\n      cursor[1] = args[5];\n      const [x1, y1] = transformAbsolutePoint(matrix, args[0], args[1]);\n      const [x2, y2] = transformAbsolutePoint(matrix, args[2], args[3]);\n      const [x, y] = transformAbsolutePoint(matrix, args[4], args[5]);\n      args[0] = x1;\n      args[1] = y1;\n      args[2] = x2;\n      args[3] = y2;\n      args[4] = x;\n      args[5] = y;\n    }\n\n    if (command === 'c') {\n      cursor[0] += args[4];\n      cursor[1] += args[5];\n      const [x1, y1] = transformRelativePoint(matrix, args[0], args[1]);\n      const [x2, y2] = transformRelativePoint(matrix, args[2], args[3]);\n      const [x, y] = transformRelativePoint(matrix, args[4], args[5]);\n      args[0] = x1;\n      args[1] = y1;\n      args[2] = x2;\n      args[3] = y2;\n      args[4] = x;\n      args[5] = y;\n    } // smooth curveto (x2 y2 x y)\n\n\n    if (command === 'S') {\n      cursor[0] = args[2];\n      cursor[1] = args[3];\n      const [x2, y2] = transformAbsolutePoint(matrix, args[0], args[1]);\n      const [x, y] = transformAbsolutePoint(matrix, args[2], args[3]);\n      args[0] = x2;\n      args[1] = y2;\n      args[2] = x;\n      args[3] = y;\n    }\n\n    if (command === 's') {\n      cursor[0] += args[2];\n      cursor[1] += args[3];\n      const [x2, y2] = transformRelativePoint(matrix, args[0], args[1]);\n      const [x, y] = transformRelativePoint(matrix, args[2], args[3]);\n      args[0] = x2;\n      args[1] = y2;\n      args[2] = x;\n      args[3] = y;\n    } // quadratic Bézier curveto (x1 y1 x y)\n\n\n    if (command === 'Q') {\n      cursor[0] = args[2];\n      cursor[1] = args[3];\n      const [x1, y1] = transformAbsolutePoint(matrix, args[0], args[1]);\n      const [x, y] = transformAbsolutePoint(matrix, args[2], args[3]);\n      args[0] = x1;\n      args[1] = y1;\n      args[2] = x;\n      args[3] = y;\n    }\n\n    if (command === 'q') {\n      cursor[0] += args[2];\n      cursor[1] += args[3];\n      const [x1, y1] = transformRelativePoint(matrix, args[0], args[1]);\n      const [x, y] = transformRelativePoint(matrix, args[2], args[3]);\n      args[0] = x1;\n      args[1] = y1;\n      args[2] = x;\n      args[3] = y;\n    } // smooth quadratic Bézier curveto (x y)\n\n\n    if (command === 'T') {\n      cursor[0] = args[0];\n      cursor[1] = args[1];\n      const [x, y] = transformAbsolutePoint(matrix, args[0], args[1]);\n      args[0] = x;\n      args[1] = y;\n    }\n\n    if (command === 't') {\n      cursor[0] += args[0];\n      cursor[1] += args[1];\n      const [x, y] = transformRelativePoint(matrix, args[0], args[1]);\n      args[0] = x;\n      args[1] = y;\n    } // elliptical arc (rx ry x-axis-rotation large-arc-flag sweep-flag x y)\n\n\n    if (command === 'A') {\n      transformArc(cursor, args, matrix);\n      cursor[0] = args[5];\n      cursor[1] = args[6]; // reduce number of digits in rotation angle\n\n      if (Math.abs(args[2]) > 80) {\n        const a = args[0];\n        const rotation = args[2];\n        args[0] = args[1];\n        args[1] = a;\n        args[2] = rotation + (rotation > 0 ? -90 : 90);\n      }\n\n      const [x, y] = transformAbsolutePoint(matrix, args[5], args[6]);\n      args[5] = x;\n      args[6] = y;\n    }\n\n    if (command === 'a') {\n      transformArc([0, 0], args, matrix);\n      cursor[0] += args[5];\n      cursor[1] += args[6]; // reduce number of digits in rotation angle\n\n      if (Math.abs(args[2]) > 80) {\n        const a = args[0];\n        const rotation = args[2];\n        args[0] = args[1];\n        args[1] = a;\n        args[2] = rotation + (rotation > 0 ? -90 : 90);\n      }\n\n      const [x, y] = transformRelativePoint(matrix, args[5], args[6]);\n      args[5] = x;\n      args[6] = y;\n    } // closepath\n\n\n    if (command === 'z' || command === 'Z') {\n      cursor[0] = start[0];\n      cursor[1] = start[1];\n    }\n\n    pathItem.command = command;\n    pathItem.args = args;\n  }\n};","map":{"version":3,"names":["transformsMultiply","transform2js","transformArc","require","removeLeadingZero","referencesProps","attrsGroupsDefaults","regNumericValues","defaultStrokeWidth","presentation","applyTransforms","elem","pathData","params","attributes","transform","style","Object","entries","some","name","value","includes","matrix","stroke","computedAttr","id","transformPrecision","applyTransformsStroked","data","idElem","hasStrokeWidth","parentNode","scale","Math","sqrt","toFixed","strokeWidth","trim","replace","num","applyMatrixToPathData","exports","transformAbsolutePoint","x","y","newX","newY","transformRelativePoint","start","cursor","pathItem","command","args","x1","y1","x2","y2","abs","a","rotation"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/postcss-svgo/node_modules/svgo/plugins/_applyTransforms.js"],"sourcesContent":["'use strict';\n\n// TODO implement as separate plugin\n\nconst {\n  transformsMultiply,\n  transform2js,\n  transformArc,\n} = require('./_transforms.js');\nconst { removeLeadingZero } = require('../lib/svgo/tools.js');\nconst { referencesProps, attrsGroupsDefaults } = require('./_collections.js');\n\nconst regNumericValues = /[-+]?(\\d*\\.\\d+|\\d+\\.?)(?:[eE][-+]?\\d+)?/g;\nconst defaultStrokeWidth = attrsGroupsDefaults.presentation['stroke-width'];\n\n/**\n * Apply transformation(s) to the Path data.\n *\n * @param {Object} elem current element\n * @param {Array} path input path data\n * @param {Object} params whether to apply transforms to stroked lines and transform precision (used for stroke width)\n * @return {Array} output path data\n */\nconst applyTransforms = (elem, pathData, params) => {\n  // if there are no 'stroke' attr and references to other objects such as\n  // gradiends or clip-path which are also subjects to transform.\n  if (\n    elem.attributes.transform == null ||\n    elem.attributes.transform === '' ||\n    // styles are not considered when applying transform\n    // can be fixed properly with new style engine\n    elem.attributes.style != null ||\n    Object.entries(elem.attributes).some(\n      ([name, value]) =>\n        referencesProps.includes(name) && value.includes('url(')\n    )\n  ) {\n    return;\n  }\n\n  const matrix = transformsMultiply(transform2js(elem.attributes.transform));\n  const stroke = elem.computedAttr('stroke');\n  const id = elem.computedAttr('id');\n  const transformPrecision = params.transformPrecision;\n\n  if (stroke && stroke != 'none') {\n    if (\n      !params.applyTransformsStroked ||\n      ((matrix.data[0] != matrix.data[3] ||\n        matrix.data[1] != -matrix.data[2]) &&\n        (matrix.data[0] != -matrix.data[3] || matrix.data[1] != matrix.data[2]))\n    )\n      return;\n\n    // \"stroke-width\" should be inside the part with ID, otherwise it can be overrided in <use>\n    if (id) {\n      let idElem = elem;\n      let hasStrokeWidth = false;\n\n      do {\n        if (idElem.attributes['stroke-width']) {\n          hasStrokeWidth = true;\n        }\n      } while (\n        idElem.attributes.id !== id &&\n        !hasStrokeWidth &&\n        (idElem = idElem.parentNode)\n      );\n\n      if (!hasStrokeWidth) return;\n    }\n\n    const scale = +Math.sqrt(\n      matrix.data[0] * matrix.data[0] + matrix.data[1] * matrix.data[1]\n    ).toFixed(transformPrecision);\n\n    if (scale !== 1) {\n      const strokeWidth =\n        elem.computedAttr('stroke-width') || defaultStrokeWidth;\n\n      if (\n        elem.attributes['vector-effect'] == null ||\n        elem.attributes['vector-effect'] !== 'non-scaling-stroke'\n      ) {\n        if (elem.attributes['stroke-width'] != null) {\n          elem.attributes['stroke-width'] = elem.attributes['stroke-width']\n            .trim()\n            .replace(regNumericValues, (num) => removeLeadingZero(num * scale));\n        } else {\n          elem.attributes['stroke-width'] = strokeWidth.replace(\n            regNumericValues,\n            (num) => removeLeadingZero(num * scale)\n          );\n        }\n\n        if (elem.attributes['stroke-dashoffset'] != null) {\n          elem.attributes['stroke-dashoffset'] = elem.attributes[\n            'stroke-dashoffset'\n          ]\n            .trim()\n            .replace(regNumericValues, (num) => removeLeadingZero(num * scale));\n        }\n\n        if (elem.attributes['stroke-dasharray'] != null) {\n          elem.attributes['stroke-dasharray'] = elem.attributes[\n            'stroke-dasharray'\n          ]\n            .trim()\n            .replace(regNumericValues, (num) => removeLeadingZero(num * scale));\n        }\n      }\n    }\n  } else if (id) {\n    // Stroke and stroke-width can be redefined with <use>\n    return;\n  }\n\n  applyMatrixToPathData(pathData, matrix.data);\n\n  // remove transform attr\n  delete elem.attributes.transform;\n\n  return;\n};\nexports.applyTransforms = applyTransforms;\n\nconst transformAbsolutePoint = (matrix, x, y) => {\n  const newX = matrix[0] * x + matrix[2] * y + matrix[4];\n  const newY = matrix[1] * x + matrix[3] * y + matrix[5];\n  return [newX, newY];\n};\n\nconst transformRelativePoint = (matrix, x, y) => {\n  const newX = matrix[0] * x + matrix[2] * y;\n  const newY = matrix[1] * x + matrix[3] * y;\n  return [newX, newY];\n};\n\nconst applyMatrixToPathData = (pathData, matrix) => {\n  const start = [0, 0];\n  const cursor = [0, 0];\n\n  for (const pathItem of pathData) {\n    let { command, args } = pathItem;\n\n    // moveto (x y)\n    if (command === 'M') {\n      cursor[0] = args[0];\n      cursor[1] = args[1];\n      start[0] = cursor[0];\n      start[1] = cursor[1];\n      const [x, y] = transformAbsolutePoint(matrix, args[0], args[1]);\n      args[0] = x;\n      args[1] = y;\n    }\n    if (command === 'm') {\n      cursor[0] += args[0];\n      cursor[1] += args[1];\n      start[0] = cursor[0];\n      start[1] = cursor[1];\n      const [x, y] = transformRelativePoint(matrix, args[0], args[1]);\n      args[0] = x;\n      args[1] = y;\n    }\n\n    // horizontal lineto (x)\n    // convert to lineto to handle two-dimentional transforms\n    if (command === 'H') {\n      command = 'L';\n      args = [args[0], cursor[1]];\n    }\n    if (command === 'h') {\n      command = 'l';\n      args = [args[0], 0];\n    }\n\n    // vertical lineto (y)\n    // convert to lineto to handle two-dimentional transforms\n    if (command === 'V') {\n      command = 'L';\n      args = [cursor[0], args[0]];\n    }\n    if (command === 'v') {\n      command = 'l';\n      args = [0, args[0]];\n    }\n\n    // lineto (x y)\n    if (command === 'L') {\n      cursor[0] = args[0];\n      cursor[1] = args[1];\n      const [x, y] = transformAbsolutePoint(matrix, args[0], args[1]);\n      args[0] = x;\n      args[1] = y;\n    }\n    if (command === 'l') {\n      cursor[0] += args[0];\n      cursor[1] += args[1];\n      const [x, y] = transformRelativePoint(matrix, args[0], args[1]);\n      args[0] = x;\n      args[1] = y;\n    }\n\n    // curveto (x1 y1 x2 y2 x y)\n    if (command === 'C') {\n      cursor[0] = args[4];\n      cursor[1] = args[5];\n      const [x1, y1] = transformAbsolutePoint(matrix, args[0], args[1]);\n      const [x2, y2] = transformAbsolutePoint(matrix, args[2], args[3]);\n      const [x, y] = transformAbsolutePoint(matrix, args[4], args[5]);\n      args[0] = x1;\n      args[1] = y1;\n      args[2] = x2;\n      args[3] = y2;\n      args[4] = x;\n      args[5] = y;\n    }\n    if (command === 'c') {\n      cursor[0] += args[4];\n      cursor[1] += args[5];\n      const [x1, y1] = transformRelativePoint(matrix, args[0], args[1]);\n      const [x2, y2] = transformRelativePoint(matrix, args[2], args[3]);\n      const [x, y] = transformRelativePoint(matrix, args[4], args[5]);\n      args[0] = x1;\n      args[1] = y1;\n      args[2] = x2;\n      args[3] = y2;\n      args[4] = x;\n      args[5] = y;\n    }\n\n    // smooth curveto (x2 y2 x y)\n    if (command === 'S') {\n      cursor[0] = args[2];\n      cursor[1] = args[3];\n      const [x2, y2] = transformAbsolutePoint(matrix, args[0], args[1]);\n      const [x, y] = transformAbsolutePoint(matrix, args[2], args[3]);\n      args[0] = x2;\n      args[1] = y2;\n      args[2] = x;\n      args[3] = y;\n    }\n    if (command === 's') {\n      cursor[0] += args[2];\n      cursor[1] += args[3];\n      const [x2, y2] = transformRelativePoint(matrix, args[0], args[1]);\n      const [x, y] = transformRelativePoint(matrix, args[2], args[3]);\n      args[0] = x2;\n      args[1] = y2;\n      args[2] = x;\n      args[3] = y;\n    }\n\n    // quadratic Bézier curveto (x1 y1 x y)\n    if (command === 'Q') {\n      cursor[0] = args[2];\n      cursor[1] = args[3];\n      const [x1, y1] = transformAbsolutePoint(matrix, args[0], args[1]);\n      const [x, y] = transformAbsolutePoint(matrix, args[2], args[3]);\n      args[0] = x1;\n      args[1] = y1;\n      args[2] = x;\n      args[3] = y;\n    }\n    if (command === 'q') {\n      cursor[0] += args[2];\n      cursor[1] += args[3];\n      const [x1, y1] = transformRelativePoint(matrix, args[0], args[1]);\n      const [x, y] = transformRelativePoint(matrix, args[2], args[3]);\n      args[0] = x1;\n      args[1] = y1;\n      args[2] = x;\n      args[3] = y;\n    }\n\n    // smooth quadratic Bézier curveto (x y)\n    if (command === 'T') {\n      cursor[0] = args[0];\n      cursor[1] = args[1];\n      const [x, y] = transformAbsolutePoint(matrix, args[0], args[1]);\n      args[0] = x;\n      args[1] = y;\n    }\n    if (command === 't') {\n      cursor[0] += args[0];\n      cursor[1] += args[1];\n      const [x, y] = transformRelativePoint(matrix, args[0], args[1]);\n      args[0] = x;\n      args[1] = y;\n    }\n\n    // elliptical arc (rx ry x-axis-rotation large-arc-flag sweep-flag x y)\n    if (command === 'A') {\n      transformArc(cursor, args, matrix);\n      cursor[0] = args[5];\n      cursor[1] = args[6];\n      // reduce number of digits in rotation angle\n      if (Math.abs(args[2]) > 80) {\n        const a = args[0];\n        const rotation = args[2];\n        args[0] = args[1];\n        args[1] = a;\n        args[2] = rotation + (rotation > 0 ? -90 : 90);\n      }\n      const [x, y] = transformAbsolutePoint(matrix, args[5], args[6]);\n      args[5] = x;\n      args[6] = y;\n    }\n    if (command === 'a') {\n      transformArc([0, 0], args, matrix);\n      cursor[0] += args[5];\n      cursor[1] += args[6];\n      // reduce number of digits in rotation angle\n      if (Math.abs(args[2]) > 80) {\n        const a = args[0];\n        const rotation = args[2];\n        args[0] = args[1];\n        args[1] = a;\n        args[2] = rotation + (rotation > 0 ? -90 : 90);\n      }\n      const [x, y] = transformRelativePoint(matrix, args[5], args[6]);\n      args[5] = x;\n      args[6] = y;\n    }\n\n    // closepath\n    if (command === 'z' || command === 'Z') {\n      cursor[0] = start[0];\n      cursor[1] = start[1];\n    }\n\n    pathItem.command = command;\n    pathItem.args = args;\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}