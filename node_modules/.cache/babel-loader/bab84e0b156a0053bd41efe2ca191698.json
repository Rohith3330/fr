{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.usePattern = exports.metaSchemaRef = void 0;\n\nconst codegen_1 = require(\"ajv/dist/compile/codegen\");\n\nconst META_SCHEMA_ID = \"http://json-schema.org/schema\";\n\nfunction metaSchemaRef() {\n  let {\n    defaultMeta\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return defaultMeta === false ? {} : {\n    $ref: defaultMeta || META_SCHEMA_ID\n  };\n}\n\nexports.metaSchemaRef = metaSchemaRef;\n\nfunction usePattern(_ref, pattern) {\n  let {\n    gen,\n    it: {\n      opts\n    }\n  } = _ref;\n  let flags = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : opts.unicodeRegExp ? \"u\" : \"\";\n  const rx = new RegExp(pattern, flags);\n  return gen.scopeValue(\"pattern\", {\n    key: rx.toString(),\n    ref: rx,\n    code: (0, codegen_1._)`new RegExp(${pattern}, ${flags})`\n  });\n}\n\nexports.usePattern = usePattern;","map":{"version":3,"mappings":";;;;;;;AAEA;;AAEA,MAAMA,cAAc,GAAG,+BAAvB;;AAEA,SAAgBC,aAAhB,GAAmE;EAAA,IAArC;IAACC;EAAD,CAAqC,uEAAF,EAAE;EACjE,OAAOA,WAAW,KAAK,KAAhB,GAAwB,EAAxB,GAA6B;IAACC,IAAI,EAAED,WAAW,IAAIF;EAAtB,CAApC;AACD;;AAFDI;;AAIA,SAAgBC,UAAhB,OAEEC,OAFF,EAGuC;EAAA,IAFrC;IAACC,GAAD;IAAMC,EAAE,EAAE;MAACC;IAAD;EAAV,CAEqC;EAAA,IAArCC,KAAqC,uEAA7BD,IAAI,CAACE,aAAL,GAAqB,GAArB,GAA2B,EAAE;EAErC,MAAMC,EAAE,GAAG,IAAIC,MAAJ,CAAWP,OAAX,EAAoBI,KAApB,CAAX;EACA,OAAOH,GAAG,CAACO,UAAJ,CAAe,SAAf,EAA0B;IAC/BC,GAAG,EAAEH,EAAE,CAACI,QAAH,EAD0B;IAE/BC,GAAG,EAAEL,EAF0B;IAG/BM,IAAI,EAAE,gBAAC,cAAcZ,OAAO,KAAKI,KAAK;EAHP,CAA1B,CAAP;AAKD;;AAXDN","names":["META_SCHEMA_ID","metaSchemaRef","defaultMeta","$ref","exports","usePattern","pattern","gen","it","opts","flags","unicodeRegExp","rx","RegExp","scopeValue","key","toString","ref","code"],"sources":["C:\\Users\\Rohith\\mern\\frontend\\node_modules\\css-minimizer-webpack-plugin\\node_modules\\ajv-keywords\\src\\definitions\\_util.ts"],"sourcesContent":["import type {DefinitionOptions} from \"./_types\"\nimport type {SchemaObject, KeywordCxt, Name} from \"ajv\"\nimport {_} from \"ajv/dist/compile/codegen\"\n\nconst META_SCHEMA_ID = \"http://json-schema.org/schema\"\n\nexport function metaSchemaRef({defaultMeta}: DefinitionOptions = {}): SchemaObject {\n  return defaultMeta === false ? {} : {$ref: defaultMeta || META_SCHEMA_ID}\n}\n\nexport function usePattern(\n  {gen, it: {opts}}: KeywordCxt,\n  pattern: string,\n  flags = opts.unicodeRegExp ? \"u\" : \"\"\n): Name {\n  const rx = new RegExp(pattern, flags)\n  return gen.scopeValue(\"pattern\", {\n    key: rx.toString(),\n    ref: rx,\n    code: _`new RegExp(${pattern}, ${flags})`,\n  })\n}\n"]},"metadata":{},"sourceType":"script"}