{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.resolveBrowserslistConfigFile = resolveBrowserslistConfigFile;\nexports.resolveTargets = resolveTargets;\n\nfunction _helperCompilationTargets() {\n  const data = require(\"@babel/helper-compilation-targets\");\n\n  _helperCompilationTargets = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction resolveBrowserslistConfigFile(browserslistConfigFile, configFilePath) {\n  return undefined;\n}\n\nfunction resolveTargets(options, root) {\n  const optTargets = options.targets;\n  let targets;\n\n  if (typeof optTargets === \"string\" || Array.isArray(optTargets)) {\n    targets = {\n      browsers: optTargets\n    };\n  } else if (optTargets) {\n    if (\"esmodules\" in optTargets) {\n      targets = Object.assign({}, optTargets, {\n        esmodules: \"intersect\"\n      });\n    } else {\n      targets = optTargets;\n    }\n  }\n\n  return (0, _helperCompilationTargets().default)(targets, {\n    ignoreBrowserslistConfig: true,\n    browserslistEnv: options.browserslistEnv\n  });\n}\n\n0 && 0;","map":{"version":3,"mappings":";;;;;;;;AACA;EAAA;;EAAAA;IAAA;EAAA;;EAAA;AAAA;;AAMO,SAASC,6BAAT,CAELC,sBAFK,EAILC,cAJK,EAKU;EACf,OAAOC,SAAP;AACD;;AAEM,SAASC,cAAT,CACLC,OADK,EAGLC,IAHK,EAII;EACT,MAAMC,UAAU,GAAGF,OAAO,CAACG,OAA3B;EACA,IAAIA,OAAJ;;EAEA,IAAI,OAAOD,UAAP,KAAsB,QAAtB,IAAkCE,KAAK,CAACC,OAAND,CAAcF,UAAdE,CAAtC,EAAiE;IAC/DD,OAAO,GAAG;MAAEG,QAAQ,EAAEJ;IAAZ,CAAVC;EADF,OAEO,IAAID,UAAJ,EAAgB;IACrB,IAAI,eAAeA,UAAnB,EAA+B;MAC7BC,OAAO,qBAAQD,UAAR;QAAoBK,SAAS,EAAE;MAA/B,EAAPJ;IADF,OAEO;MAELA,OAAO,GAAGD,UAAVC;IACD;EACF;;EAED,OAAO,yCAAWA,OAAX,EAAoB;IACzBK,wBAAwB,EAAE,IADD;IAEzBC,eAAe,EAAET,OAAO,CAACS;EAFA,CAApB,CAAP;AAID","names":["_helperCompilationTargets","resolveBrowserslistConfigFile","browserslistConfigFile","configFilePath","undefined","resolveTargets","options","root","optTargets","targets","Array","isArray","browsers","esmodules","ignoreBrowserslistConfig","browserslistEnv"],"sources":["C:\\Users\\Rohith\\mern\\frontend\\node_modules\\@babel\\core\\src\\config\\resolve-targets-browser.ts"],"sourcesContent":["import type { ValidatedOptions } from \"./validation/options\";\nimport getTargets, {\n  type InputTargets,\n} from \"@babel/helper-compilation-targets\";\n\nimport type { Targets } from \"@babel/helper-compilation-targets\";\n\nexport function resolveBrowserslistConfigFile(\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  browserslistConfigFile: string,\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  configFilePath: string,\n): string | void {\n  return undefined;\n}\n\nexport function resolveTargets(\n  options: ValidatedOptions,\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  root: string,\n): Targets {\n  const optTargets = options.targets;\n  let targets: InputTargets;\n\n  if (typeof optTargets === \"string\" || Array.isArray(optTargets)) {\n    targets = { browsers: optTargets };\n  } else if (optTargets) {\n    if (\"esmodules\" in optTargets) {\n      targets = { ...optTargets, esmodules: \"intersect\" };\n    } else {\n      // https://github.com/microsoft/TypeScript/issues/17002\n      targets = optTargets as InputTargets;\n    }\n  }\n\n  return getTargets(targets, {\n    ignoreBrowserslistConfig: true,\n    browserslistEnv: options.browserslistEnv,\n  });\n}\n"]},"metadata":{},"sourceType":"script"}