{"ast":null,"code":"var test = require('tape');\n\nvar toBuffer = require('../');\n\ntest('convert to buffer from Uint8Array', function (t) {\n  if (typeof Uint8Array !== 'undefined') {\n    var arr = new Uint8Array([1, 2, 3]);\n    arr = toBuffer(arr);\n    t.deepEqual(arr, Buffer.from([1, 2, 3]), 'contents equal');\n    t.ok(Buffer.isBuffer(arr), 'is buffer');\n    t.equal(arr.readUInt8(0), 1);\n    t.equal(arr.readUInt8(1), 2);\n    t.equal(arr.readUInt8(2), 3);\n  } else {\n    t.pass('browser lacks Uint8Array support, skip test');\n  }\n\n  t.end();\n});\ntest('convert to buffer from another arrayview type (Uint32Array)', function (t) {\n  if (typeof Uint32Array !== 'undefined' && Buffer.TYPED_ARRAY_SUPPORT !== false) {\n    var arr = new Uint32Array([1, 2, 3]);\n    arr = toBuffer(arr);\n    t.deepEqual(arr, Buffer.from([1, 0, 0, 0, 2, 0, 0, 0, 3, 0, 0, 0]), 'contents equal');\n    t.ok(Buffer.isBuffer(arr), 'is buffer');\n    t.equal(arr.readUInt32LE(0), 1);\n    t.equal(arr.readUInt32LE(4), 2);\n    t.equal(arr.readUInt32LE(8), 3);\n    t.equal(arr instanceof Uint8Array, true);\n  } else {\n    t.pass('browser lacks Uint32Array support, skip test');\n  }\n\n  t.end();\n});\ntest('convert to buffer from ArrayBuffer', function (t) {\n  if (typeof Uint32Array !== 'undefined' && Buffer.TYPED_ARRAY_SUPPORT !== false) {\n    var arr = new Uint32Array([1, 2, 3]).subarray(1, 2);\n    arr = toBuffer(arr);\n    t.deepEqual(arr, Buffer.from([2, 0, 0, 0]), 'contents equal');\n    t.ok(Buffer.isBuffer(arr), 'is buffer');\n    t.equal(arr.readUInt32LE(0), 2);\n    t.equal(arr instanceof Uint8Array, true);\n  } else {\n    t.pass('browser lacks ArrayBuffer support, skip test');\n  }\n\n  t.end();\n});","map":{"version":3,"names":["test","require","toBuffer","t","Uint8Array","arr","deepEqual","Buffer","from","ok","isBuffer","equal","readUInt8","pass","end","Uint32Array","TYPED_ARRAY_SUPPORT","readUInt32LE","subarray"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/typedarray-to-buffer/test/basic.js"],"sourcesContent":["var test = require('tape')\nvar toBuffer = require('../')\n\ntest('convert to buffer from Uint8Array', function (t) {\n  if (typeof Uint8Array !== 'undefined') {\n    var arr = new Uint8Array([1, 2, 3])\n    arr = toBuffer(arr)\n\n    t.deepEqual(arr, Buffer.from([1, 2, 3]), 'contents equal')\n    t.ok(Buffer.isBuffer(arr), 'is buffer')\n    t.equal(arr.readUInt8(0), 1)\n    t.equal(arr.readUInt8(1), 2)\n    t.equal(arr.readUInt8(2), 3)\n  } else {\n    t.pass('browser lacks Uint8Array support, skip test')\n  }\n  t.end()\n})\n\ntest('convert to buffer from another arrayview type (Uint32Array)', function (t) {\n  if (typeof Uint32Array !== 'undefined' && Buffer.TYPED_ARRAY_SUPPORT !== false) {\n    var arr = new Uint32Array([1, 2, 3])\n    arr = toBuffer(arr)\n\n    t.deepEqual(arr, Buffer.from([1, 0, 0, 0, 2, 0, 0, 0, 3, 0, 0, 0]), 'contents equal')\n    t.ok(Buffer.isBuffer(arr), 'is buffer')\n    t.equal(arr.readUInt32LE(0), 1)\n    t.equal(arr.readUInt32LE(4), 2)\n    t.equal(arr.readUInt32LE(8), 3)\n    t.equal(arr instanceof Uint8Array, true)\n  } else {\n    t.pass('browser lacks Uint32Array support, skip test')\n  }\n  t.end()\n})\n\ntest('convert to buffer from ArrayBuffer', function (t) {\n  if (typeof Uint32Array !== 'undefined' && Buffer.TYPED_ARRAY_SUPPORT !== false) {\n    var arr = new Uint32Array([1, 2, 3]).subarray(1, 2)\n    arr = toBuffer(arr)\n\n    t.deepEqual(arr, Buffer.from([2, 0, 0, 0]), 'contents equal')\n    t.ok(Buffer.isBuffer(arr), 'is buffer')\n    t.equal(arr.readUInt32LE(0), 2)\n    t.equal(arr instanceof Uint8Array, true)\n  } else {\n    t.pass('browser lacks ArrayBuffer support, skip test')\n  }\n  t.end()\n})\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}