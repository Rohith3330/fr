{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst fsWalk = require(\"@nodelib/fs.walk\");\n\nconst reader_1 = require(\"./reader\");\n\nconst stream_1 = require(\"./stream\");\n\nclass ReaderAsync extends reader_1.default {\n  constructor() {\n    super(...arguments);\n    this._walkAsync = fsWalk.walk;\n    this._readerStream = new stream_1.default(this._settings);\n  }\n\n  dynamic(root, options) {\n    return new Promise((resolve, reject) => {\n      this._walkAsync(root, options, (error, entries) => {\n        if (error === null) {\n          resolve(entries);\n        } else {\n          reject(error);\n        }\n      });\n    });\n  }\n\n  async static(patterns, options) {\n    const entries = [];\n\n    const stream = this._readerStream.static(patterns, options); // After #235, replace it with an asynchronous iterator.\n\n\n    return new Promise((resolve, reject) => {\n      stream.once('error', reject);\n      stream.on('data', entry => entries.push(entry));\n      stream.once('end', () => resolve(entries));\n    });\n  }\n\n}\n\nexports.default = ReaderAsync;","map":{"version":3,"names":["Object","defineProperty","exports","value","fsWalk","require","reader_1","stream_1","ReaderAsync","default","constructor","arguments","_walkAsync","walk","_readerStream","_settings","dynamic","root","options","Promise","resolve","reject","error","entries","static","patterns","stream","once","on","entry","push"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/fast-glob/out/readers/async.js"],"sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst fsWalk = require(\"@nodelib/fs.walk\");\r\nconst reader_1 = require(\"./reader\");\r\nconst stream_1 = require(\"./stream\");\r\nclass ReaderAsync extends reader_1.default {\r\n    constructor() {\r\n        super(...arguments);\r\n        this._walkAsync = fsWalk.walk;\r\n        this._readerStream = new stream_1.default(this._settings);\r\n    }\r\n    dynamic(root, options) {\r\n        return new Promise((resolve, reject) => {\r\n            this._walkAsync(root, options, (error, entries) => {\r\n                if (error === null) {\r\n                    resolve(entries);\r\n                }\r\n                else {\r\n                    reject(error);\r\n                }\r\n            });\r\n        });\r\n    }\r\n    async static(patterns, options) {\r\n        const entries = [];\r\n        const stream = this._readerStream.static(patterns, options);\r\n        // After #235, replace it with an asynchronous iterator.\r\n        return new Promise((resolve, reject) => {\r\n            stream.once('error', reject);\r\n            stream.on('data', (entry) => entries.push(entry));\r\n            stream.once('end', () => resolve(entries));\r\n        });\r\n    }\r\n}\r\nexports.default = ReaderAsync;\r\n"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;;AACA,MAAMC,MAAM,GAAGC,OAAO,CAAC,kBAAD,CAAtB;;AACA,MAAMC,QAAQ,GAAGD,OAAO,CAAC,UAAD,CAAxB;;AACA,MAAME,QAAQ,GAAGF,OAAO,CAAC,UAAD,CAAxB;;AACA,MAAMG,WAAN,SAA0BF,QAAQ,CAACG,OAAnC,CAA2C;EACvCC,WAAW,GAAG;IACV,MAAM,GAAGC,SAAT;IACA,KAAKC,UAAL,GAAkBR,MAAM,CAACS,IAAzB;IACA,KAAKC,aAAL,GAAqB,IAAIP,QAAQ,CAACE,OAAb,CAAqB,KAAKM,SAA1B,CAArB;EACH;;EACDC,OAAO,CAACC,IAAD,EAAOC,OAAP,EAAgB;IACnB,OAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;MACpC,KAAKT,UAAL,CAAgBK,IAAhB,EAAsBC,OAAtB,EAA+B,CAACI,KAAD,EAAQC,OAAR,KAAoB;QAC/C,IAAID,KAAK,KAAK,IAAd,EAAoB;UAChBF,OAAO,CAACG,OAAD,CAAP;QACH,CAFD,MAGK;UACDF,MAAM,CAACC,KAAD,CAAN;QACH;MACJ,CAPD;IAQH,CATM,CAAP;EAUH;;EACW,MAANE,MAAM,CAACC,QAAD,EAAWP,OAAX,EAAoB;IAC5B,MAAMK,OAAO,GAAG,EAAhB;;IACA,MAAMG,MAAM,GAAG,KAAKZ,aAAL,CAAmBU,MAAnB,CAA0BC,QAA1B,EAAoCP,OAApC,CAAf,CAF4B,CAG5B;;;IACA,OAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;MACpCK,MAAM,CAACC,IAAP,CAAY,OAAZ,EAAqBN,MAArB;MACAK,MAAM,CAACE,EAAP,CAAU,MAAV,EAAmBC,KAAD,IAAWN,OAAO,CAACO,IAAR,CAAaD,KAAb,CAA7B;MACAH,MAAM,CAACC,IAAP,CAAY,KAAZ,EAAmB,MAAMP,OAAO,CAACG,OAAD,CAAhC;IACH,CAJM,CAAP;EAKH;;AA3BsC;;AA6B3CrB,OAAO,CAACO,OAAR,GAAkBD,WAAlB"},"metadata":{},"sourceType":"script"}