{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\n/**\n * Returns an object of node visitors that will call\n * 'visitor' with every discovered module path.\n *\n * todo: correct function prototype for visitor\n * @param  {Function(String)} visitor [description]\n * @param  {[type]} options [description]\n * @return {object}\n */\n\nexports.default = function visitModules(visitor, options) {\n  // if esmodule is not explicitly disabled, it is assumed to be enabled\n  options = Object.assign({\n    esmodule: true\n  }, options);\n  let ignoreRegExps = [];\n\n  if (options.ignore != null) {\n    ignoreRegExps = options.ignore.map(p => new RegExp(p));\n  }\n\n  function checkSourceValue(source, importer) {\n    if (source == null) return; //?\n    // handle ignore\n\n    if (ignoreRegExps.some(re => re.test(source.value))) return; // fire visitor\n\n    visitor(source, importer);\n  } // for import-y declarations\n\n\n  function checkSource(node) {\n    checkSourceValue(node.source, node);\n  } // for esmodule dynamic `import()` calls\n\n\n  function checkImportCall(node) {\n    let modulePath; // refs https://github.com/estree/estree/blob/HEAD/es2020.md#importexpression\n\n    if (node.type === 'ImportExpression') {\n      modulePath = node.source;\n    } else if (node.type === 'CallExpression') {\n      if (node.callee.type !== 'Import') return;\n      if (node.arguments.length !== 1) return;\n      modulePath = node.arguments[0];\n    }\n\n    if (modulePath.type !== 'Literal') return;\n    if (typeof modulePath.value !== 'string') return;\n    checkSourceValue(modulePath, node);\n  } // for CommonJS `require` calls\n  // adapted from @mctep: https://git.io/v4rAu\n\n\n  function checkCommon(call) {\n    if (call.callee.type !== 'Identifier') return;\n    if (call.callee.name !== 'require') return;\n    if (call.arguments.length !== 1) return;\n    const modulePath = call.arguments[0];\n    if (modulePath.type !== 'Literal') return;\n    if (typeof modulePath.value !== 'string') return;\n    checkSourceValue(modulePath, call);\n  }\n\n  function checkAMD(call) {\n    if (call.callee.type !== 'Identifier') return;\n    if (call.callee.name !== 'require' && call.callee.name !== 'define') return;\n    if (call.arguments.length !== 2) return;\n    const modules = call.arguments[0];\n    if (modules.type !== 'ArrayExpression') return;\n\n    for (const element of modules.elements) {\n      if (element.type !== 'Literal') continue;\n      if (typeof element.value !== 'string') continue;\n      if (element.value === 'require' || element.value === 'exports') continue; // magic modules: https://github.com/requirejs/requirejs/wiki/Differences-between-the-simplified-CommonJS-wrapper-and-standard-AMD-define#magic-modules\n\n      checkSourceValue(element, element);\n    }\n  }\n\n  const visitors = {};\n\n  if (options.esmodule) {\n    Object.assign(visitors, {\n      'ImportDeclaration': checkSource,\n      'ExportNamedDeclaration': checkSource,\n      'ExportAllDeclaration': checkSource,\n      'CallExpression': checkImportCall,\n      'ImportExpression': checkImportCall\n    });\n  }\n\n  if (options.commonjs || options.amd) {\n    const currentCallExpression = visitors['CallExpression'];\n\n    visitors['CallExpression'] = function (call) {\n      if (currentCallExpression) currentCallExpression(call);\n      if (options.commonjs) checkCommon(call);\n      if (options.amd) checkAMD(call);\n    };\n  }\n\n  return visitors;\n};\n/**\n * make an options schema for the module visitor, optionally\n * adding extra fields.\n */\n\n\nfunction makeOptionsSchema(additionalProperties) {\n  const base = {\n    'type': 'object',\n    'properties': {\n      'commonjs': {\n        'type': 'boolean'\n      },\n      'amd': {\n        'type': 'boolean'\n      },\n      'esmodule': {\n        'type': 'boolean'\n      },\n      'ignore': {\n        'type': 'array',\n        'minItems': 1,\n        'items': {\n          'type': 'string'\n        },\n        'uniqueItems': true\n      }\n    },\n    'additionalProperties': false\n  };\n\n  if (additionalProperties) {\n    for (const key in additionalProperties) {\n      base.properties[key] = additionalProperties[key];\n    }\n  }\n\n  return base;\n}\n\nexports.makeOptionsSchema = makeOptionsSchema;\n/**\n * json schema object for options parameter. can be used to build\n * rule options schema object.\n * @type {Object}\n */\n\nexports.optionsSchema = makeOptionsSchema();","map":{"version":3,"names":["exports","__esModule","default","visitModules","visitor","options","Object","assign","esmodule","ignoreRegExps","ignore","map","p","RegExp","checkSourceValue","source","importer","some","re","test","value","checkSource","node","checkImportCall","modulePath","type","callee","arguments","length","checkCommon","call","name","checkAMD","modules","element","elements","visitors","commonjs","amd","currentCallExpression","makeOptionsSchema","additionalProperties","base","key","properties","optionsSchema"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/eslint-module-utils/moduleVisitor.js"],"sourcesContent":["'use strict';\nexports.__esModule = true;\n\n/**\n * Returns an object of node visitors that will call\n * 'visitor' with every discovered module path.\n *\n * todo: correct function prototype for visitor\n * @param  {Function(String)} visitor [description]\n * @param  {[type]} options [description]\n * @return {object}\n */\nexports.default = function visitModules(visitor, options) {\n  // if esmodule is not explicitly disabled, it is assumed to be enabled\n  options = Object.assign({ esmodule: true }, options);\n\n  let ignoreRegExps = [];\n  if (options.ignore != null) {\n    ignoreRegExps = options.ignore.map(p => new RegExp(p));\n  }\n\n  function checkSourceValue(source, importer) {\n    if (source == null) return; //?\n\n    // handle ignore\n    if (ignoreRegExps.some(re => re.test(source.value))) return;\n\n    // fire visitor\n    visitor(source, importer);\n  }\n\n  // for import-y declarations\n  function checkSource(node) {\n    checkSourceValue(node.source, node);\n  }\n\n  // for esmodule dynamic `import()` calls\n  function checkImportCall(node) {\n    let modulePath;\n    // refs https://github.com/estree/estree/blob/HEAD/es2020.md#importexpression\n    if (node.type === 'ImportExpression') {\n      modulePath = node.source;\n    } else if (node.type === 'CallExpression') {\n      if (node.callee.type !== 'Import') return;\n      if (node.arguments.length !== 1) return;\n\n      modulePath = node.arguments[0];\n    }\n\n    if (modulePath.type !== 'Literal') return;\n    if (typeof modulePath.value !== 'string') return;\n\n    checkSourceValue(modulePath, node);\n  }\n\n  // for CommonJS `require` calls\n  // adapted from @mctep: https://git.io/v4rAu\n  function checkCommon(call) {\n    if (call.callee.type !== 'Identifier') return;\n    if (call.callee.name !== 'require') return;\n    if (call.arguments.length !== 1) return;\n\n    const modulePath = call.arguments[0];\n    if (modulePath.type !== 'Literal') return;\n    if (typeof modulePath.value !== 'string') return;\n\n    checkSourceValue(modulePath, call);\n  }\n\n  function checkAMD(call) {\n    if (call.callee.type !== 'Identifier') return;\n    if (call.callee.name !== 'require' &&\n        call.callee.name !== 'define') return;\n    if (call.arguments.length !== 2) return;\n\n    const modules = call.arguments[0];\n    if (modules.type !== 'ArrayExpression') return;\n\n    for (const element of modules.elements) {\n      if (element.type !== 'Literal') continue;\n      if (typeof element.value !== 'string') continue;\n\n      if (element.value === 'require' ||\n          element.value === 'exports') continue; // magic modules: https://github.com/requirejs/requirejs/wiki/Differences-between-the-simplified-CommonJS-wrapper-and-standard-AMD-define#magic-modules\n\n      checkSourceValue(element, element);\n    }\n  }\n\n  const visitors = {};\n  if (options.esmodule) {\n    Object.assign(visitors, {\n      'ImportDeclaration': checkSource,\n      'ExportNamedDeclaration': checkSource,\n      'ExportAllDeclaration': checkSource,\n      'CallExpression': checkImportCall,\n      'ImportExpression': checkImportCall,\n    });\n  }\n\n  if (options.commonjs || options.amd) {\n    const currentCallExpression = visitors['CallExpression'];\n    visitors['CallExpression'] = function (call) {\n      if (currentCallExpression) currentCallExpression(call);\n      if (options.commonjs) checkCommon(call);\n      if (options.amd) checkAMD(call);\n    };\n  }\n\n  return visitors;\n};\n\n/**\n * make an options schema for the module visitor, optionally\n * adding extra fields.\n */\nfunction makeOptionsSchema(additionalProperties) {\n  const base =  {\n    'type': 'object',\n    'properties': {\n      'commonjs': { 'type': 'boolean' },\n      'amd': { 'type': 'boolean' },\n      'esmodule': { 'type': 'boolean' },\n      'ignore': {\n        'type': 'array',\n        'minItems': 1,\n        'items': { 'type': 'string' },\n        'uniqueItems': true,\n      },\n    },\n    'additionalProperties': false,\n  };\n\n  if (additionalProperties) {\n    for (const key in additionalProperties) {\n      base.properties[key] = additionalProperties[key];\n    }\n  }\n\n  return base;\n}\nexports.makeOptionsSchema = makeOptionsSchema;\n\n/**\n * json schema object for options parameter. can be used to build\n * rule options schema object.\n * @type {Object}\n */\nexports.optionsSchema = makeOptionsSchema();\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}