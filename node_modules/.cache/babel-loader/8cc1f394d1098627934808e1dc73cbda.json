{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.queryByRole = exports.queryAllByRole = exports.getByRole = exports.getAllByRole = exports.findByRole = exports.findAllByRole = void 0;\n\nvar _domAccessibilityApi = require(\"dom-accessibility-api\");\n\nvar _ariaQuery = require(\"aria-query\");\n\nvar _roleHelpers = require(\"../role-helpers\");\n\nvar _queryHelpers = require(\"../query-helpers\");\n\nvar _helpers = require(\"../helpers\");\n\nvar _allUtils = require(\"./all-utils\");\n\nfunction queryAllByRole(container, role) {\n  let {\n    exact = true,\n    collapseWhitespace,\n    hidden = (0, _allUtils.getConfig)().defaultHidden,\n    name,\n    description,\n    trim,\n    normalizer,\n    queryFallbacks = false,\n    selected,\n    checked,\n    pressed,\n    current,\n    level,\n    expanded\n  } = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  (0, _helpers.checkContainerType)(container);\n  const matcher = exact ? _allUtils.matches : _allUtils.fuzzyMatches;\n  const matchNormalizer = (0, _allUtils.makeNormalizer)({\n    collapseWhitespace,\n    trim,\n    normalizer\n  });\n\n  if (selected !== undefined) {\n    var _allRoles$get; // guard against unknown roles\n\n\n    if (((_allRoles$get = _ariaQuery.roles.get(role)) == null ? void 0 : _allRoles$get.props['aria-selected']) === undefined) {\n      throw new Error(`\"aria-selected\" is not supported on role \"${role}\".`);\n    }\n  }\n\n  if (checked !== undefined) {\n    var _allRoles$get2; // guard against unknown roles\n\n\n    if (((_allRoles$get2 = _ariaQuery.roles.get(role)) == null ? void 0 : _allRoles$get2.props['aria-checked']) === undefined) {\n      throw new Error(`\"aria-checked\" is not supported on role \"${role}\".`);\n    }\n  }\n\n  if (pressed !== undefined) {\n    var _allRoles$get3; // guard against unknown roles\n\n\n    if (((_allRoles$get3 = _ariaQuery.roles.get(role)) == null ? void 0 : _allRoles$get3.props['aria-pressed']) === undefined) {\n      throw new Error(`\"aria-pressed\" is not supported on role \"${role}\".`);\n    }\n  }\n\n  if (current !== undefined) {\n    var _allRoles$get4;\n    /* istanbul ignore next */\n    // guard against unknown roles\n    // All currently released ARIA versions support `aria-current` on all roles.\n    // Leaving this for symetry and forward compatibility\n\n\n    if (((_allRoles$get4 = _ariaQuery.roles.get(role)) == null ? void 0 : _allRoles$get4.props['aria-current']) === undefined) {\n      throw new Error(`\"aria-current\" is not supported on role \"${role}\".`);\n    }\n  }\n\n  if (level !== undefined) {\n    // guard against using `level` option with any role other than `heading`\n    if (role !== 'heading') {\n      throw new Error(`Role \"${role}\" cannot have \"level\" property.`);\n    }\n  }\n\n  if (expanded !== undefined) {\n    var _allRoles$get5; // guard against unknown roles\n\n\n    if (((_allRoles$get5 = _ariaQuery.roles.get(role)) == null ? void 0 : _allRoles$get5.props['aria-expanded']) === undefined) {\n      throw new Error(`\"aria-expanded\" is not supported on role \"${role}\".`);\n    }\n  }\n\n  const subtreeIsInaccessibleCache = new WeakMap();\n\n  function cachedIsSubtreeInaccessible(element) {\n    if (!subtreeIsInaccessibleCache.has(element)) {\n      subtreeIsInaccessibleCache.set(element, (0, _roleHelpers.isSubtreeInaccessible)(element));\n    }\n\n    return subtreeIsInaccessibleCache.get(element);\n  }\n\n  return Array.from(container.querySelectorAll( // Only query elements that can be matched by the following filters\n  makeRoleSelector(role, exact, normalizer ? matchNormalizer : undefined))).filter(node => {\n    const isRoleSpecifiedExplicitly = node.hasAttribute('role');\n\n    if (isRoleSpecifiedExplicitly) {\n      const roleValue = node.getAttribute('role');\n\n      if (queryFallbacks) {\n        return roleValue.split(' ').filter(Boolean).some(text => matcher(text, node, role, matchNormalizer));\n      } // if a custom normalizer is passed then let normalizer handle the role value\n\n\n      if (normalizer) {\n        return matcher(roleValue, node, role, matchNormalizer);\n      } // other wise only send the first word to match\n\n\n      const [firstWord] = roleValue.split(' ');\n      return matcher(firstWord, node, role, matchNormalizer);\n    }\n\n    const implicitRoles = (0, _roleHelpers.getImplicitAriaRoles)(node);\n    return implicitRoles.some(implicitRole => matcher(implicitRole, node, role, matchNormalizer));\n  }).filter(element => {\n    if (selected !== undefined) {\n      return selected === (0, _roleHelpers.computeAriaSelected)(element);\n    }\n\n    if (checked !== undefined) {\n      return checked === (0, _roleHelpers.computeAriaChecked)(element);\n    }\n\n    if (pressed !== undefined) {\n      return pressed === (0, _roleHelpers.computeAriaPressed)(element);\n    }\n\n    if (current !== undefined) {\n      return current === (0, _roleHelpers.computeAriaCurrent)(element);\n    }\n\n    if (expanded !== undefined) {\n      return expanded === (0, _roleHelpers.computeAriaExpanded)(element);\n    }\n\n    if (level !== undefined) {\n      return level === (0, _roleHelpers.computeHeadingLevel)(element);\n    } // don't care if aria attributes are unspecified\n\n\n    return true;\n  }).filter(element => {\n    if (name === undefined) {\n      // Don't care\n      return true;\n    }\n\n    return (0, _allUtils.matches)((0, _domAccessibilityApi.computeAccessibleName)(element, {\n      computedStyleSupportsPseudoElements: (0, _allUtils.getConfig)().computedStyleSupportsPseudoElements\n    }), element, name, text => text);\n  }).filter(element => {\n    if (description === undefined) {\n      // Don't care\n      return true;\n    }\n\n    return (0, _allUtils.matches)((0, _domAccessibilityApi.computeAccessibleDescription)(element, {\n      computedStyleSupportsPseudoElements: (0, _allUtils.getConfig)().computedStyleSupportsPseudoElements\n    }), element, description, text => text);\n  }).filter(element => {\n    return hidden === false ? (0, _roleHelpers.isInaccessible)(element, {\n      isSubtreeInaccessible: cachedIsSubtreeInaccessible\n    }) === false : true;\n  });\n}\n\nfunction makeRoleSelector(role, exact, customNormalizer) {\n  var _roleElements$get;\n\n  if (typeof role !== 'string') {\n    // For non-string role parameters we can not determine the implicitRoleSelectors.\n    return '*';\n  }\n\n  const explicitRoleSelector = exact && !customNormalizer ? `*[role~=\"${role}\"]` : '*[role]';\n  const roleRelations = (_roleElements$get = _ariaQuery.roleElements.get(role)) != null ? _roleElements$get : new Set();\n  const implicitRoleSelectors = new Set(Array.from(roleRelations).map(_ref => {\n    let {\n      name\n    } = _ref;\n    return name;\n  })); // Current transpilation config sometimes assumes `...` is always applied to arrays.\n  // `...` is equivalent to `Array.prototype.concat` for arrays.\n  // If you replace this code with `[explicitRoleSelector, ...implicitRoleSelectors]`, make sure every transpilation target retains the `...` in favor of `Array.prototype.concat`.\n\n  return [explicitRoleSelector].concat(Array.from(implicitRoleSelectors)).join(',');\n}\n\nconst getNameHint = name => {\n  let nameHint = '';\n\n  if (name === undefined) {\n    nameHint = '';\n  } else if (typeof name === 'string') {\n    nameHint = ` and name \"${name}\"`;\n  } else {\n    nameHint = ` and name \\`${name}\\``;\n  }\n\n  return nameHint;\n};\n\nconst getMultipleError = function (c, role) {\n  let {\n    name\n  } = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  return `Found multiple elements with the role \"${role}\"${getNameHint(name)}`;\n};\n\nconst getMissingError = function (container, role) {\n  let {\n    hidden = (0, _allUtils.getConfig)().defaultHidden,\n    name,\n    description\n  } = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  if ((0, _allUtils.getConfig)()._disableExpensiveErrorDiagnostics) {\n    return `Unable to find role=\"${role}\"${getNameHint(name)}`;\n  }\n\n  let roles = '';\n  Array.from(container.children).forEach(childElement => {\n    roles += (0, _roleHelpers.prettyRoles)(childElement, {\n      hidden,\n      includeDescription: description !== undefined\n    });\n  });\n  let roleMessage;\n\n  if (roles.length === 0) {\n    if (hidden === false) {\n      roleMessage = 'There are no accessible roles. But there might be some inaccessible roles. ' + 'If you wish to access them, then set the `hidden` option to `true`. ' + 'Learn more about this here: https://testing-library.com/docs/dom-testing-library/api-queries#byrole';\n    } else {\n      roleMessage = 'There are no available roles.';\n    }\n  } else {\n    roleMessage = `\nHere are the ${hidden === false ? 'accessible' : 'available'} roles:\n\n  ${roles.replace(/\\n/g, '\\n  ').replace(/\\n\\s\\s\\n/g, '\\n\\n')}\n`.trim();\n  }\n\n  let nameHint = '';\n\n  if (name === undefined) {\n    nameHint = '';\n  } else if (typeof name === 'string') {\n    nameHint = ` and name \"${name}\"`;\n  } else {\n    nameHint = ` and name \\`${name}\\``;\n  }\n\n  let descriptionHint = '';\n\n  if (description === undefined) {\n    descriptionHint = '';\n  } else if (typeof description === 'string') {\n    descriptionHint = ` and description \"${description}\"`;\n  } else {\n    descriptionHint = ` and description \\`${description}\\``;\n  }\n\n  return `\nUnable to find an ${hidden === false ? 'accessible ' : ''}element with the role \"${role}\"${nameHint}${descriptionHint}\n\n${roleMessage}`.trim();\n};\n\nconst queryAllByRoleWithSuggestions = (0, _queryHelpers.wrapAllByQueryWithSuggestion)(queryAllByRole, queryAllByRole.name, 'queryAll');\nexports.queryAllByRole = queryAllByRoleWithSuggestions;\nconst [queryByRole, getAllByRole, getByRole, findAllByRole, findByRole] = (0, _allUtils.buildQueries)(queryAllByRole, getMultipleError, getMissingError);\nexports.findByRole = findByRole;\nexports.findAllByRole = findAllByRole;\nexports.getByRole = getByRole;\nexports.getAllByRole = getAllByRole;\nexports.queryByRole = queryByRole;","map":{"version":3,"names":["Object","defineProperty","exports","value","queryByRole","queryAllByRole","getByRole","getAllByRole","findByRole","findAllByRole","_domAccessibilityApi","require","_ariaQuery","_roleHelpers","_queryHelpers","_helpers","_allUtils","container","role","exact","collapseWhitespace","hidden","getConfig","defaultHidden","name","description","trim","normalizer","queryFallbacks","selected","checked","pressed","current","level","expanded","checkContainerType","matcher","matches","fuzzyMatches","matchNormalizer","makeNormalizer","undefined","_allRoles$get","roles","get","props","Error","_allRoles$get2","_allRoles$get3","_allRoles$get4","_allRoles$get5","subtreeIsInaccessibleCache","WeakMap","cachedIsSubtreeInaccessible","element","has","set","isSubtreeInaccessible","Array","from","querySelectorAll","makeRoleSelector","filter","node","isRoleSpecifiedExplicitly","hasAttribute","roleValue","getAttribute","split","Boolean","some","text","firstWord","implicitRoles","getImplicitAriaRoles","implicitRole","computeAriaSelected","computeAriaChecked","computeAriaPressed","computeAriaCurrent","computeAriaExpanded","computeHeadingLevel","computeAccessibleName","computedStyleSupportsPseudoElements","computeAccessibleDescription","isInaccessible","customNormalizer","_roleElements$get","explicitRoleSelector","roleRelations","roleElements","Set","implicitRoleSelectors","map","concat","join","getNameHint","nameHint","getMultipleError","c","getMissingError","_disableExpensiveErrorDiagnostics","children","forEach","childElement","prettyRoles","includeDescription","roleMessage","length","replace","descriptionHint","queryAllByRoleWithSuggestions","wrapAllByQueryWithSuggestion","buildQueries"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/@testing-library/dom/dist/queries/role.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.queryByRole = exports.queryAllByRole = exports.getByRole = exports.getAllByRole = exports.findByRole = exports.findAllByRole = void 0;\n\nvar _domAccessibilityApi = require(\"dom-accessibility-api\");\n\nvar _ariaQuery = require(\"aria-query\");\n\nvar _roleHelpers = require(\"../role-helpers\");\n\nvar _queryHelpers = require(\"../query-helpers\");\n\nvar _helpers = require(\"../helpers\");\n\nvar _allUtils = require(\"./all-utils\");\n\nfunction queryAllByRole(container, role, {\n  exact = true,\n  collapseWhitespace,\n  hidden = (0, _allUtils.getConfig)().defaultHidden,\n  name,\n  description,\n  trim,\n  normalizer,\n  queryFallbacks = false,\n  selected,\n  checked,\n  pressed,\n  current,\n  level,\n  expanded\n} = {}) {\n  (0, _helpers.checkContainerType)(container);\n  const matcher = exact ? _allUtils.matches : _allUtils.fuzzyMatches;\n  const matchNormalizer = (0, _allUtils.makeNormalizer)({\n    collapseWhitespace,\n    trim,\n    normalizer\n  });\n\n  if (selected !== undefined) {\n    var _allRoles$get;\n\n    // guard against unknown roles\n    if (((_allRoles$get = _ariaQuery.roles.get(role)) == null ? void 0 : _allRoles$get.props['aria-selected']) === undefined) {\n      throw new Error(`\"aria-selected\" is not supported on role \"${role}\".`);\n    }\n  }\n\n  if (checked !== undefined) {\n    var _allRoles$get2;\n\n    // guard against unknown roles\n    if (((_allRoles$get2 = _ariaQuery.roles.get(role)) == null ? void 0 : _allRoles$get2.props['aria-checked']) === undefined) {\n      throw new Error(`\"aria-checked\" is not supported on role \"${role}\".`);\n    }\n  }\n\n  if (pressed !== undefined) {\n    var _allRoles$get3;\n\n    // guard against unknown roles\n    if (((_allRoles$get3 = _ariaQuery.roles.get(role)) == null ? void 0 : _allRoles$get3.props['aria-pressed']) === undefined) {\n      throw new Error(`\"aria-pressed\" is not supported on role \"${role}\".`);\n    }\n  }\n\n  if (current !== undefined) {\n    var _allRoles$get4;\n\n    /* istanbul ignore next */\n    // guard against unknown roles\n    // All currently released ARIA versions support `aria-current` on all roles.\n    // Leaving this for symetry and forward compatibility\n    if (((_allRoles$get4 = _ariaQuery.roles.get(role)) == null ? void 0 : _allRoles$get4.props['aria-current']) === undefined) {\n      throw new Error(`\"aria-current\" is not supported on role \"${role}\".`);\n    }\n  }\n\n  if (level !== undefined) {\n    // guard against using `level` option with any role other than `heading`\n    if (role !== 'heading') {\n      throw new Error(`Role \"${role}\" cannot have \"level\" property.`);\n    }\n  }\n\n  if (expanded !== undefined) {\n    var _allRoles$get5;\n\n    // guard against unknown roles\n    if (((_allRoles$get5 = _ariaQuery.roles.get(role)) == null ? void 0 : _allRoles$get5.props['aria-expanded']) === undefined) {\n      throw new Error(`\"aria-expanded\" is not supported on role \"${role}\".`);\n    }\n  }\n\n  const subtreeIsInaccessibleCache = new WeakMap();\n\n  function cachedIsSubtreeInaccessible(element) {\n    if (!subtreeIsInaccessibleCache.has(element)) {\n      subtreeIsInaccessibleCache.set(element, (0, _roleHelpers.isSubtreeInaccessible)(element));\n    }\n\n    return subtreeIsInaccessibleCache.get(element);\n  }\n\n  return Array.from(container.querySelectorAll( // Only query elements that can be matched by the following filters\n  makeRoleSelector(role, exact, normalizer ? matchNormalizer : undefined))).filter(node => {\n    const isRoleSpecifiedExplicitly = node.hasAttribute('role');\n\n    if (isRoleSpecifiedExplicitly) {\n      const roleValue = node.getAttribute('role');\n\n      if (queryFallbacks) {\n        return roleValue.split(' ').filter(Boolean).some(text => matcher(text, node, role, matchNormalizer));\n      } // if a custom normalizer is passed then let normalizer handle the role value\n\n\n      if (normalizer) {\n        return matcher(roleValue, node, role, matchNormalizer);\n      } // other wise only send the first word to match\n\n\n      const [firstWord] = roleValue.split(' ');\n      return matcher(firstWord, node, role, matchNormalizer);\n    }\n\n    const implicitRoles = (0, _roleHelpers.getImplicitAriaRoles)(node);\n    return implicitRoles.some(implicitRole => matcher(implicitRole, node, role, matchNormalizer));\n  }).filter(element => {\n    if (selected !== undefined) {\n      return selected === (0, _roleHelpers.computeAriaSelected)(element);\n    }\n\n    if (checked !== undefined) {\n      return checked === (0, _roleHelpers.computeAriaChecked)(element);\n    }\n\n    if (pressed !== undefined) {\n      return pressed === (0, _roleHelpers.computeAriaPressed)(element);\n    }\n\n    if (current !== undefined) {\n      return current === (0, _roleHelpers.computeAriaCurrent)(element);\n    }\n\n    if (expanded !== undefined) {\n      return expanded === (0, _roleHelpers.computeAriaExpanded)(element);\n    }\n\n    if (level !== undefined) {\n      return level === (0, _roleHelpers.computeHeadingLevel)(element);\n    } // don't care if aria attributes are unspecified\n\n\n    return true;\n  }).filter(element => {\n    if (name === undefined) {\n      // Don't care\n      return true;\n    }\n\n    return (0, _allUtils.matches)((0, _domAccessibilityApi.computeAccessibleName)(element, {\n      computedStyleSupportsPseudoElements: (0, _allUtils.getConfig)().computedStyleSupportsPseudoElements\n    }), element, name, text => text);\n  }).filter(element => {\n    if (description === undefined) {\n      // Don't care\n      return true;\n    }\n\n    return (0, _allUtils.matches)((0, _domAccessibilityApi.computeAccessibleDescription)(element, {\n      computedStyleSupportsPseudoElements: (0, _allUtils.getConfig)().computedStyleSupportsPseudoElements\n    }), element, description, text => text);\n  }).filter(element => {\n    return hidden === false ? (0, _roleHelpers.isInaccessible)(element, {\n      isSubtreeInaccessible: cachedIsSubtreeInaccessible\n    }) === false : true;\n  });\n}\n\nfunction makeRoleSelector(role, exact, customNormalizer) {\n  var _roleElements$get;\n\n  if (typeof role !== 'string') {\n    // For non-string role parameters we can not determine the implicitRoleSelectors.\n    return '*';\n  }\n\n  const explicitRoleSelector = exact && !customNormalizer ? `*[role~=\"${role}\"]` : '*[role]';\n  const roleRelations = (_roleElements$get = _ariaQuery.roleElements.get(role)) != null ? _roleElements$get : new Set();\n  const implicitRoleSelectors = new Set(Array.from(roleRelations).map(({\n    name\n  }) => name)); // Current transpilation config sometimes assumes `...` is always applied to arrays.\n  // `...` is equivalent to `Array.prototype.concat` for arrays.\n  // If you replace this code with `[explicitRoleSelector, ...implicitRoleSelectors]`, make sure every transpilation target retains the `...` in favor of `Array.prototype.concat`.\n\n  return [explicitRoleSelector].concat(Array.from(implicitRoleSelectors)).join(',');\n}\n\nconst getNameHint = name => {\n  let nameHint = '';\n\n  if (name === undefined) {\n    nameHint = '';\n  } else if (typeof name === 'string') {\n    nameHint = ` and name \"${name}\"`;\n  } else {\n    nameHint = ` and name \\`${name}\\``;\n  }\n\n  return nameHint;\n};\n\nconst getMultipleError = (c, role, {\n  name\n} = {}) => {\n  return `Found multiple elements with the role \"${role}\"${getNameHint(name)}`;\n};\n\nconst getMissingError = (container, role, {\n  hidden = (0, _allUtils.getConfig)().defaultHidden,\n  name,\n  description\n} = {}) => {\n  if ((0, _allUtils.getConfig)()._disableExpensiveErrorDiagnostics) {\n    return `Unable to find role=\"${role}\"${getNameHint(name)}`;\n  }\n\n  let roles = '';\n  Array.from(container.children).forEach(childElement => {\n    roles += (0, _roleHelpers.prettyRoles)(childElement, {\n      hidden,\n      includeDescription: description !== undefined\n    });\n  });\n  let roleMessage;\n\n  if (roles.length === 0) {\n    if (hidden === false) {\n      roleMessage = 'There are no accessible roles. But there might be some inaccessible roles. ' + 'If you wish to access them, then set the `hidden` option to `true`. ' + 'Learn more about this here: https://testing-library.com/docs/dom-testing-library/api-queries#byrole';\n    } else {\n      roleMessage = 'There are no available roles.';\n    }\n  } else {\n    roleMessage = `\nHere are the ${hidden === false ? 'accessible' : 'available'} roles:\n\n  ${roles.replace(/\\n/g, '\\n  ').replace(/\\n\\s\\s\\n/g, '\\n\\n')}\n`.trim();\n  }\n\n  let nameHint = '';\n\n  if (name === undefined) {\n    nameHint = '';\n  } else if (typeof name === 'string') {\n    nameHint = ` and name \"${name}\"`;\n  } else {\n    nameHint = ` and name \\`${name}\\``;\n  }\n\n  let descriptionHint = '';\n\n  if (description === undefined) {\n    descriptionHint = '';\n  } else if (typeof description === 'string') {\n    descriptionHint = ` and description \"${description}\"`;\n  } else {\n    descriptionHint = ` and description \\`${description}\\``;\n  }\n\n  return `\nUnable to find an ${hidden === false ? 'accessible ' : ''}element with the role \"${role}\"${nameHint}${descriptionHint}\n\n${roleMessage}`.trim();\n};\n\nconst queryAllByRoleWithSuggestions = (0, _queryHelpers.wrapAllByQueryWithSuggestion)(queryAllByRole, queryAllByRole.name, 'queryAll');\nexports.queryAllByRole = queryAllByRoleWithSuggestions;\nconst [queryByRole, getAllByRole, getByRole, findAllByRole, findByRole] = (0, _allUtils.buildQueries)(queryAllByRole, getMultipleError, getMissingError);\nexports.findByRole = findByRole;\nexports.findAllByRole = findAllByRole;\nexports.getByRole = getByRole;\nexports.getAllByRole = getAllByRole;\nexports.queryByRole = queryByRole;"],"mappings":"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"},"metadata":{},"sourceType":"script"}