{"ast":null,"code":"const {\n  codeFrameColumns\n} = require(\"@babel/code-frame\");\n\nconst Worker = require(\"jest-worker\").default;\n\nconst serialize = require(\"serialize-javascript\");\n\nfunction terser() {\n  let userOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  if (userOptions.sourceMap != null) {\n    throw Error(\"sourceMap option is removed. Now it is inferred from rollup options.\");\n  }\n\n  if (userOptions.sourcemap != null) {\n    throw Error(\"sourcemap option is removed. Now it is inferred from rollup options.\");\n  }\n\n  return {\n    name: \"terser\",\n\n    async renderChunk(code, chunk, outputOptions) {\n      if (!this.worker) {\n        this.worker = new Worker(require.resolve(\"./transform.js\"), {\n          numWorkers: userOptions.numWorkers\n        });\n        this.numOfBundles = 0;\n      }\n\n      this.numOfBundles++;\n      const defaultOptions = {\n        sourceMap: outputOptions.sourcemap === true || typeof outputOptions.sourcemap === \"string\"\n      };\n\n      if (outputOptions.format === \"es\" || outputOptions.format === \"esm\") {\n        defaultOptions.module = true;\n      }\n\n      if (outputOptions.format === \"cjs\") {\n        defaultOptions.toplevel = true;\n      }\n\n      const normalizedOptions = { ...defaultOptions,\n        ...userOptions\n      }; // remove plugin specific options\n\n      for (let key of [\"numWorkers\"]) {\n        if (normalizedOptions.hasOwnProperty(key)) {\n          delete normalizedOptions[key];\n        }\n      }\n\n      const serializedOptions = serialize(normalizedOptions);\n\n      try {\n        const result = await this.worker.transform(code, serializedOptions);\n\n        if (result.nameCache) {\n          let {\n            vars,\n            props\n          } = userOptions.nameCache; // only assign nameCache.vars if it was provided, and if terser produced values:\n\n          if (vars) {\n            const newVars = result.nameCache.vars && result.nameCache.vars.props;\n\n            if (newVars) {\n              vars.props = vars.props || {};\n              Object.assign(vars.props, newVars);\n            }\n          } // support populating an empty nameCache object:\n\n\n          if (!props) {\n            props = userOptions.nameCache.props = {};\n          } // merge updated props into original nameCache object:\n\n\n          const newProps = result.nameCache.props && result.nameCache.props.props;\n\n          if (newProps) {\n            props.props = props.props || {};\n            Object.assign(props.props, newProps);\n          }\n        }\n\n        return result.result;\n      } catch (error) {\n        const {\n          message,\n          line,\n          col: column\n        } = error;\n        console.error(codeFrameColumns(code, {\n          start: {\n            line,\n            column\n          }\n        }, {\n          message\n        }));\n        throw error;\n      } finally {\n        this.numOfBundles--;\n\n        if (this.numOfBundles === 0) {\n          this.worker.end();\n          this.worker = 0;\n        }\n      }\n    }\n\n  };\n}\n\nexports.terser = terser;","map":{"version":3,"names":["codeFrameColumns","require","Worker","default","serialize","terser","userOptions","sourceMap","Error","sourcemap","name","renderChunk","code","chunk","outputOptions","worker","resolve","numWorkers","numOfBundles","defaultOptions","format","module","toplevel","normalizedOptions","key","hasOwnProperty","serializedOptions","result","transform","nameCache","vars","props","newVars","Object","assign","newProps","error","message","line","col","column","console","start","end","exports"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/rollup-plugin-terser/rollup-plugin-terser.js"],"sourcesContent":["const { codeFrameColumns } = require(\"@babel/code-frame\");\nconst Worker = require(\"jest-worker\").default;\nconst serialize = require(\"serialize-javascript\");\n\nfunction terser(userOptions = {}) {\n  if (userOptions.sourceMap != null) {\n    throw Error(\n      \"sourceMap option is removed. Now it is inferred from rollup options.\"\n    );\n  }\n  if (userOptions.sourcemap != null) {\n    throw Error(\n      \"sourcemap option is removed. Now it is inferred from rollup options.\"\n    );\n  }\n\n  return {\n    name: \"terser\",\n\n    async renderChunk(code, chunk, outputOptions) {\n      if (!this.worker) {\n        this.worker = new Worker(require.resolve(\"./transform.js\"), {\n          numWorkers: userOptions.numWorkers,\n        });\n        this.numOfBundles = 0;\n      }\n\n      this.numOfBundles++;\n\n      const defaultOptions = {\n        sourceMap:\n          outputOptions.sourcemap === true ||\n          typeof outputOptions.sourcemap === \"string\",\n      };\n      if (outputOptions.format === \"es\" || outputOptions.format === \"esm\") {\n        defaultOptions.module = true;\n      }\n      if (outputOptions.format === \"cjs\") {\n        defaultOptions.toplevel = true;\n      }\n\n      const normalizedOptions = { ...defaultOptions, ...userOptions };\n\n      // remove plugin specific options\n      for (let key of [\"numWorkers\"]) {\n        if (normalizedOptions.hasOwnProperty(key)) {\n          delete normalizedOptions[key];\n        }\n      }\n\n      const serializedOptions = serialize(normalizedOptions);\n\n      try {\n        const result = await this.worker.transform(code, serializedOptions);\n\n        if (result.nameCache) {\n          let { vars, props } = userOptions.nameCache;\n\n          // only assign nameCache.vars if it was provided, and if terser produced values:\n          if (vars) {\n            const newVars =\n              result.nameCache.vars && result.nameCache.vars.props;\n            if (newVars) {\n              vars.props = vars.props || {};\n              Object.assign(vars.props, newVars);\n            }\n          }\n\n          // support populating an empty nameCache object:\n          if (!props) {\n            props = userOptions.nameCache.props = {};\n          }\n\n          // merge updated props into original nameCache object:\n          const newProps =\n            result.nameCache.props && result.nameCache.props.props;\n          if (newProps) {\n            props.props = props.props || {};\n            Object.assign(props.props, newProps);\n          }\n        }\n\n        return result.result;\n      } catch (error) {\n        const { message, line, col: column } = error;\n        console.error(\n          codeFrameColumns(code, { start: { line, column } }, { message })\n        );\n        throw error;\n      } finally {\n        this.numOfBundles--;\n\n        if (this.numOfBundles === 0) {\n          this.worker.end();\n          this.worker = 0;\n        }\n      }\n    },\n  };\n}\n\nexports.terser = terser;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}