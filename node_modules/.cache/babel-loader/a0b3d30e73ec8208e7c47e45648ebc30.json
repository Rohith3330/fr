{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getTypeOfPropertyOfType = exports.getTypeOfPropertyOfName = void 0;\n\nfunction getTypeOfPropertyOfName(checker, type, name, escapedName) {\n  // Most names are directly usable in the checker and aren't different from escaped names\n  if (!escapedName || !isSymbol(escapedName)) {\n    return checker.getTypeOfPropertyOfType(type, name);\n  } // Symbolic names may differ in their escaped name compared to their human-readable name\n  // https://github.com/typescript-eslint/typescript-eslint/issues/2143\n\n\n  const escapedProperty = type.getProperties().find(property => property.escapedName === escapedName);\n  return escapedProperty ? checker.getDeclaredTypeOfSymbol(escapedProperty) : undefined;\n}\n\nexports.getTypeOfPropertyOfName = getTypeOfPropertyOfName;\n\nfunction getTypeOfPropertyOfType(checker, type, property) {\n  return getTypeOfPropertyOfName(checker, type, property.getName(), property.getEscapedName());\n}\n\nexports.getTypeOfPropertyOfType = getTypeOfPropertyOfType; // Symbolic names need to be specially handled because TS api is not sufficient for these cases.\n// Source based on:\n// https://github.com/microsoft/TypeScript/blob/0043abe982aae0d35f8df59f9715be6ada758ff7/src/compiler/utilities.ts#L3388-L3402\n\nfunction isSymbol(escapedName) {\n  return isKnownSymbol(escapedName) || isPrivateIdentifierSymbol(escapedName);\n} // case for escapedName: \"__@foo@10\", name: \"__@foo@10\"\n\n\nfunction isKnownSymbol(escapedName) {\n  return escapedName.startsWith('__@');\n} // case for escapedName: \"__#1@#foo\", name: \"#foo\"\n\n\nfunction isPrivateIdentifierSymbol(escapedName) {\n  return escapedName.startsWith('__#');\n}","map":{"version":3,"mappings":";;;;;;;AAEA,SAAgBA,uBAAhB,CACEC,OADF,EAEEC,IAFF,EAGEC,IAHF,EAIEC,WAJF,EAI2B;EAEzB;EACA,IAAI,CAACA,WAAD,IAAgB,CAACC,QAAQ,CAACD,WAAD,CAA7B,EAA4C;IAC1C,OAAOH,OAAO,CAACK,uBAAR,CAAgCJ,IAAhC,EAAsCC,IAAtC,CAAP;EACD,CALwB,CAOzB;EACA;;;EACA,MAAMI,eAAe,GAAGL,IAAI,CACzBM,aADqB,GAErBC,IAFqB,CAEhBC,QAAQ,IAAIA,QAAQ,CAACN,WAAT,KAAyBA,WAFrB,CAAxB;EAIA,OAAOG,eAAe,GAClBN,OAAO,CAACU,uBAAR,CAAgCJ,eAAhC,CADkB,GAElBK,SAFJ;AAGD;;AApBDC;;AAsBA,SAAgBP,uBAAhB,CACEL,OADF,EAEEC,IAFF,EAGEQ,QAHF,EAGqB;EAEnB,OAAOV,uBAAuB,CAC5BC,OAD4B,EAE5BC,IAF4B,EAG5BQ,QAAQ,CAACI,OAAT,EAH4B,EAI5BJ,QAAQ,CAACK,cAAT,EAJ4B,CAA9B;AAMD;;AAXDF,0D,CAaA;AACA;AACA;;AACA,SAASR,QAAT,CAAkBD,WAAlB,EAAqC;EACnC,OAAOY,aAAa,CAACZ,WAAD,CAAb,IAA8Ba,yBAAyB,CAACb,WAAD,CAA9D;AACD,C,CAED;;;AACA,SAASY,aAAT,CAAuBZ,WAAvB,EAA0C;EACxC,OAAOA,WAAW,CAACc,UAAZ,CAAuB,KAAvB,CAAP;AACD,C,CAED;;;AACA,SAASD,yBAAT,CAAmCb,WAAnC,EAAsD;EACpD,OAAOA,WAAW,CAACc,UAAZ,CAAuB,KAAvB,CAAP;AACD","names":["getTypeOfPropertyOfName","checker","type","name","escapedName","isSymbol","getTypeOfPropertyOfType","escapedProperty","getProperties","find","property","getDeclaredTypeOfSymbol","undefined","exports","getName","getEscapedName","isKnownSymbol","isPrivateIdentifierSymbol","startsWith"],"sources":["../src/propertyTypes.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}