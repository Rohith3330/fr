{"ast":null,"code":"var Buffer = require('buffer').Buffer;\n\nfunction OffsetBuffer() {\n  this.offset = 0;\n  this.size = 0;\n  this.buffers = [];\n}\n\nmodule.exports = OffsetBuffer;\n\nOffsetBuffer.prototype.isEmpty = function isEmpty() {\n  return this.size === 0;\n};\n\nOffsetBuffer.prototype.clone = function clone(size) {\n  var r = new OffsetBuffer();\n  r.offset = this.offset;\n  r.size = size;\n  r.buffers = this.buffers.slice();\n  return r;\n};\n\nOffsetBuffer.prototype.toChunks = function toChunks() {\n  if (this.size === 0) return []; // We are going to slice it anyway\n\n  if (this.offset !== 0) {\n    this.buffers[0] = this.buffers[0].slice(this.offset);\n    this.offset = 0;\n  }\n\n  var chunks = [];\n  var off = 0;\n\n  for (var i = 0; off <= this.size && i < this.buffers.length; i++) {\n    var buf = this.buffers[i];\n    off += buf.length; // Slice off last buffer\n\n    if (off > this.size) {\n      buf = buf.slice(0, buf.length - (off - this.size));\n      this.buffers[i] = buf;\n    }\n\n    chunks.push(buf);\n  } // If some buffers were skipped - trim length\n\n\n  if (i < this.buffers.length) this.buffers.length = i;\n  return chunks;\n};\n\nOffsetBuffer.prototype.toString = function toString(enc) {\n  return this.toChunks().map(function (c) {\n    return c.toString(enc);\n  }).join('');\n};\n\nOffsetBuffer.prototype.use = function use(buf, off, n) {\n  this.buffers = [buf];\n  this.offset = off;\n  this.size = n;\n};\n\nOffsetBuffer.prototype.push = function push(data) {\n  // Ignore empty writes\n  if (data.length === 0) return;\n  this.size += data.length;\n  this.buffers.push(data);\n};\n\nOffsetBuffer.prototype.has = function has(n) {\n  return this.size >= n;\n};\n\nOffsetBuffer.prototype.skip = function skip(n) {\n  if (this.size === 0) return;\n  this.size -= n; // Fast case, skip bytes in a first buffer\n\n  if (this.offset + n < this.buffers[0].length) {\n    this.offset += n;\n    return;\n  }\n\n  var left = n - (this.buffers[0].length - this.offset);\n  this.offset = 0;\n\n  for (var shift = 1; left > 0 && shift < this.buffers.length; shift++) {\n    var buf = this.buffers[shift];\n\n    if (buf.length > left) {\n      this.offset = left;\n      break;\n    }\n\n    left -= buf.length;\n  }\n\n  this.buffers = this.buffers.slice(shift);\n};\n\nOffsetBuffer.prototype.copy = function copy(target, targetOff, off, n) {\n  if (this.size === 0) return;\n  if (off !== 0) throw new Error('Unsupported offset in .copy()');\n  var toff = targetOff;\n  var first = this.buffers[0];\n  var toCopy = Math.min(n, first.length - this.offset);\n  first.copy(target, toff, this.offset, this.offset + toCopy);\n  toff += toCopy;\n  var left = n - toCopy;\n\n  for (var i = 1; left > 0 && i < this.buffers.length; i++) {\n    var buf = this.buffers[i];\n    var toCopy = Math.min(left, buf.length);\n    buf.copy(target, toff, 0, toCopy);\n    toff += toCopy;\n    left -= toCopy;\n  }\n};\n\nOffsetBuffer.prototype.take = function take(n) {\n  if (n === 0) return new Buffer(0);\n  this.size -= n; // Fast cases\n\n  var first = this.buffers[0].length - this.offset;\n\n  if (first === n) {\n    var r = this.buffers.shift();\n\n    if (this.offset !== 0) {\n      r = r.slice(this.offset);\n      this.offset = 0;\n    }\n\n    return r;\n  } else if (first > n) {\n    var r = this.buffers[0].slice(this.offset, this.offset + n);\n    this.offset += n;\n    return r;\n  } // Allocate and fill buffer\n\n\n  var out = new Buffer(n);\n  var toOff = 0;\n  var startOff = this.offset;\n\n  for (var i = 0; toOff !== n && i < this.buffers.length; i++) {\n    var buf = this.buffers[i];\n    var toCopy = Math.min(buf.length - startOff, n - toOff);\n    buf.copy(out, toOff, startOff, startOff + toCopy);\n\n    if (startOff + toCopy < buf.length) {\n      this.offset = startOff + toCopy;\n      break;\n    } else {\n      toOff += toCopy;\n      startOff = 0;\n    }\n  }\n\n  this.buffers = this.buffers.slice(i);\n  if (this.buffers.length === 0) this.offset = 0;\n  return out;\n};\n\nOffsetBuffer.prototype.peekUInt8 = function peekUInt8() {\n  return this.buffers[0][this.offset];\n};\n\nOffsetBuffer.prototype.readUInt8 = function readUInt8() {\n  this.size -= 1;\n  var first = this.buffers[0];\n  var r = first[this.offset];\n\n  if (++this.offset === first.length) {\n    this.offset = 0;\n    this.buffers.shift();\n  }\n\n  return r;\n};\n\nOffsetBuffer.prototype.readUInt16LE = function readUInt16LE() {\n  var first = this.buffers[0];\n  this.size -= 2;\n  var r;\n  var shift; // Fast case - first buffer has all bytes\n\n  if (first.length - this.offset >= 2) {\n    r = first.readUInt16LE(this.offset);\n    shift = 0;\n    this.offset += 2; // One byte here - one byte there\n  } else {\n    r = first[this.offset] | this.buffers[1][0] << 8;\n    shift = 1;\n    this.offset = 1;\n  }\n\n  if (this.offset === this.buffers[shift].length) {\n    this.offset = 0;\n    shift++;\n  }\n\n  if (shift !== 0) this.buffers = this.buffers.slice(shift);\n  return r;\n};\n\nOffsetBuffer.prototype.readUInt24LE = function readUInt24LE() {\n  var first = this.buffers[0];\n  var r;\n  var shift;\n  var firstHas = first.length - this.offset; // Fast case - first buffer has all bytes\n\n  if (firstHas >= 3) {\n    r = first.readUInt16LE(this.offset) | first[this.offset + 2] << 16;\n    shift = 0;\n    this.offset += 3; // First buffer has 2 of 3 bytes\n  } else if (firstHas >= 2) {\n    r = first.readUInt16LE(this.offset) | this.buffers[1][0] << 16;\n    shift = 1;\n    this.offset = 1; // Slow case: First buffer has 1 of 3 bytes\n  } else {\n    r = first[this.offset];\n    this.offset = 0;\n    this.buffers.shift();\n    this.size -= 1;\n    r |= this.readUInt16LE() << 8;\n    return r;\n  }\n\n  this.size -= 3;\n\n  if (this.offset === this.buffers[shift].length) {\n    this.offset = 0;\n    shift++;\n  }\n\n  if (shift !== 0) this.buffers = this.buffers.slice(shift);\n  return r;\n};\n\nOffsetBuffer.prototype.readUInt32LE = function readUInt32LE() {\n  var first = this.buffers[0];\n  var r;\n  var shift;\n  var firstHas = first.length - this.offset; // Fast case - first buffer has all bytes\n\n  if (firstHas >= 4) {\n    r = first.readUInt32LE(this.offset);\n    shift = 0;\n    this.offset += 4; // First buffer has 3 of 4 bytes\n  } else if (firstHas >= 3) {\n    r = (first.readUInt16LE(this.offset) | first[this.offset + 2] << 16) + this.buffers[1][0] * 0x1000000;\n    shift = 1;\n    this.offset = 1; // Slow case: First buffer has 2 of 4 bytes\n  } else if (firstHas >= 2) {\n    r = first.readUInt16LE(this.offset);\n    this.offset = 0;\n    this.buffers.shift();\n    this.size -= 2;\n    r += this.readUInt16LE() * 0x10000;\n    return r; // Slow case: First buffer has 1 of 4 bytes\n  } else {\n    r = first[this.offset];\n    this.offset = 0;\n    this.buffers.shift();\n    this.size -= 1;\n    r += this.readUInt24LE() * 0x100;\n    return r;\n  }\n\n  this.size -= 4;\n\n  if (this.offset === this.buffers[shift].length) {\n    this.offset = 0;\n    shift++;\n  }\n\n  if (shift !== 0) this.buffers = this.buffers.slice(shift);\n  return r;\n};\n\nOffsetBuffer.prototype.readUInt16BE = function readUInt16BE() {\n  var r = this.readUInt16LE();\n  return (r & 0xff) << 8 | r >> 8;\n};\n\nOffsetBuffer.prototype.readUInt24BE = function readUInt24BE() {\n  var r = this.readUInt24LE();\n  return (r & 0xff) << 16 | (r >> 8 & 0xff) << 8 | r >> 16;\n};\n\nOffsetBuffer.prototype.readUInt32BE = function readUInt32BE() {\n  var r = this.readUInt32LE();\n  return ((r & 0xff) << 24 | (r >>> 8 & 0xff) << 16 | (r >>> 16 & 0xff) << 8 | r >>> 24) >>> 0;\n}; // Signed number APIs\n\n\nfunction signedInt8(num) {\n  if (num >= 0x80) return -(0xff ^ num) - 1;else return num;\n}\n\nOffsetBuffer.prototype.peekInt8 = function peekInt8() {\n  return signedInt8(this.peekUInt8());\n};\n\nOffsetBuffer.prototype.readInt8 = function readInt8() {\n  return signedInt8(this.readUInt8());\n};\n\nfunction signedInt16(num) {\n  if (num >= 0x8000) return -(0xffff ^ num) - 1;else return num;\n}\n\nOffsetBuffer.prototype.readInt16BE = function readInt16BE() {\n  return signedInt16(this.readUInt16BE());\n};\n\nOffsetBuffer.prototype.readInt16LE = function readInt16LE() {\n  return signedInt16(this.readUInt16LE());\n};\n\nfunction signedInt24(num) {\n  if (num >= 0x800000) return -(0xffffff ^ num) - 1;else return num;\n}\n\nOffsetBuffer.prototype.readInt24BE = function readInt24BE() {\n  return signedInt24(this.readUInt24BE());\n};\n\nOffsetBuffer.prototype.readInt24LE = function readInt24LE() {\n  return signedInt24(this.readUInt24LE());\n};\n\nfunction signedInt32(num) {\n  if (num >= 0x80000000) return -(0xffffffff ^ num) - 1;else return num;\n}\n\nOffsetBuffer.prototype.readInt32BE = function readInt32BE() {\n  return signedInt32(this.readUInt32BE());\n};\n\nOffsetBuffer.prototype.readInt32LE = function readInt32LE() {\n  return signedInt32(this.readUInt32LE());\n};","map":{"version":3,"names":["Buffer","require","OffsetBuffer","offset","size","buffers","module","exports","prototype","isEmpty","clone","r","slice","toChunks","chunks","off","i","length","buf","push","toString","enc","map","c","join","use","n","data","has","skip","left","shift","copy","target","targetOff","Error","toff","first","toCopy","Math","min","take","out","toOff","startOff","peekUInt8","readUInt8","readUInt16LE","readUInt24LE","firstHas","readUInt32LE","readUInt16BE","readUInt24BE","readUInt32BE","signedInt8","num","peekInt8","readInt8","signedInt16","readInt16BE","readInt16LE","signedInt24","readInt24BE","readInt24LE","signedInt32","readInt32BE","readInt32LE"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/obuf/index.js"],"sourcesContent":["var Buffer = require('buffer').Buffer;\n\nfunction OffsetBuffer() {\n  this.offset = 0;\n  this.size = 0;\n  this.buffers = [];\n}\nmodule.exports = OffsetBuffer;\n\nOffsetBuffer.prototype.isEmpty = function isEmpty() {\n  return this.size === 0;\n};\n\nOffsetBuffer.prototype.clone = function clone(size) {\n  var r = new OffsetBuffer();\n  r.offset = this.offset;\n  r.size = size;\n  r.buffers = this.buffers.slice();\n  return r;\n};\n\nOffsetBuffer.prototype.toChunks = function toChunks() {\n  if (this.size === 0)\n    return [];\n\n  // We are going to slice it anyway\n  if (this.offset !== 0) {\n    this.buffers[0] = this.buffers[0].slice(this.offset);\n    this.offset = 0;\n  }\n\n  var chunks = [ ];\n  var off = 0;\n  for (var i = 0; off <= this.size && i < this.buffers.length; i++) {\n    var buf = this.buffers[i];\n    off += buf.length;\n\n    // Slice off last buffer\n    if (off > this.size) {\n      buf = buf.slice(0, buf.length - (off - this.size));\n      this.buffers[i] = buf;\n    }\n\n    chunks.push(buf);\n  }\n\n  // If some buffers were skipped - trim length\n  if (i < this.buffers.length)\n    this.buffers.length = i;\n\n  return chunks;\n};\n\nOffsetBuffer.prototype.toString = function toString(enc) {\n  return this.toChunks().map(function(c) {\n    return c.toString(enc);\n  }).join('');\n};\n\nOffsetBuffer.prototype.use = function use(buf, off, n) {\n  this.buffers = [ buf ];\n  this.offset = off;\n  this.size = n;\n};\n\nOffsetBuffer.prototype.push = function push(data) {\n  // Ignore empty writes\n  if (data.length === 0)\n    return;\n\n  this.size += data.length;\n  this.buffers.push(data);\n};\n\nOffsetBuffer.prototype.has = function has(n) {\n  return this.size >= n;\n};\n\nOffsetBuffer.prototype.skip = function skip(n) {\n  if (this.size === 0)\n    return;\n\n  this.size -= n;\n\n  // Fast case, skip bytes in a first buffer\n  if (this.offset + n < this.buffers[0].length) {\n    this.offset += n;\n    return;\n  }\n\n  var left = n - (this.buffers[0].length - this.offset);\n  this.offset = 0;\n\n  for (var shift = 1; left > 0 && shift < this.buffers.length; shift++) {\n    var buf = this.buffers[shift];\n    if (buf.length > left) {\n      this.offset = left;\n      break;\n    }\n    left -= buf.length;\n  }\n  this.buffers = this.buffers.slice(shift);\n};\n\nOffsetBuffer.prototype.copy = function copy(target, targetOff, off, n) {\n  if (this.size === 0)\n    return;\n  if (off !== 0)\n    throw new Error('Unsupported offset in .copy()');\n\n  var toff = targetOff;\n  var first = this.buffers[0];\n  var toCopy = Math.min(n, first.length - this.offset);\n  first.copy(target, toff, this.offset, this.offset + toCopy);\n\n  toff += toCopy;\n  var left = n - toCopy;\n  for (var i = 1; left > 0 && i < this.buffers.length; i++) {\n    var buf = this.buffers[i];\n    var toCopy = Math.min(left, buf.length);\n\n    buf.copy(target, toff, 0, toCopy);\n\n    toff += toCopy;\n    left -= toCopy;\n  }\n};\n\nOffsetBuffer.prototype.take = function take(n) {\n  if (n === 0)\n    return new Buffer(0);\n\n  this.size -= n;\n\n  // Fast cases\n  var first = this.buffers[0].length - this.offset;\n  if (first === n) {\n    var r = this.buffers.shift();\n    if (this.offset !== 0) {\n      r = r.slice(this.offset);\n      this.offset = 0;\n    }\n    return r;\n  } else if (first > n) {\n    var r = this.buffers[0].slice(this.offset, this.offset + n);\n    this.offset += n;\n    return r;\n  }\n\n  // Allocate and fill buffer\n  var out = new Buffer(n);\n  var toOff = 0;\n  var startOff = this.offset;\n  for (var i = 0; toOff !== n && i < this.buffers.length; i++) {\n    var buf = this.buffers[i];\n    var toCopy = Math.min(buf.length - startOff, n - toOff);\n\n    buf.copy(out, toOff, startOff, startOff + toCopy);\n    if (startOff + toCopy < buf.length) {\n      this.offset = startOff + toCopy;\n      break;\n    } else {\n      toOff += toCopy;\n      startOff = 0;\n    }\n  }\n\n  this.buffers = this.buffers.slice(i);\n  if (this.buffers.length === 0)\n    this.offset = 0;\n\n  return out;\n};\n\nOffsetBuffer.prototype.peekUInt8 = function peekUInt8() {\n  return this.buffers[0][this.offset];\n};\n\nOffsetBuffer.prototype.readUInt8 = function readUInt8() {\n  this.size -= 1;\n  var first = this.buffers[0];\n  var r = first[this.offset];\n  if (++this.offset === first.length) {\n    this.offset = 0;\n    this.buffers.shift();\n  }\n\n  return r;\n};\n\nOffsetBuffer.prototype.readUInt16LE = function readUInt16LE() {\n  var first = this.buffers[0];\n  this.size -= 2;\n\n  var r;\n  var shift;\n\n  // Fast case - first buffer has all bytes\n  if (first.length - this.offset >= 2) {\n    r = first.readUInt16LE(this.offset);\n    shift = 0;\n    this.offset += 2;\n\n  // One byte here - one byte there\n  } else {\n    r = first[this.offset] | (this.buffers[1][0] << 8);\n    shift = 1;\n    this.offset = 1;\n  }\n\n  if (this.offset === this.buffers[shift].length) {\n    this.offset = 0;\n    shift++;\n  }\n  if (shift !== 0)\n    this.buffers = this.buffers.slice(shift);\n\n  return r;\n};\n\nOffsetBuffer.prototype.readUInt24LE = function readUInt24LE() {\n  var first = this.buffers[0];\n\n  var r;\n  var shift;\n  var firstHas = first.length - this.offset;\n\n  // Fast case - first buffer has all bytes\n  if (firstHas >= 3) {\n    r = first.readUInt16LE(this.offset) | (first[this.offset + 2] << 16);\n    shift = 0;\n    this.offset += 3;\n\n  // First buffer has 2 of 3 bytes\n  } else if (firstHas >= 2) {\n    r = first.readUInt16LE(this.offset) | (this.buffers[1][0] << 16);\n    shift = 1;\n    this.offset = 1;\n\n  // Slow case: First buffer has 1 of 3 bytes\n  } else {\n    r = first[this.offset];\n    this.offset = 0;\n    this.buffers.shift();\n    this.size -= 1;\n\n    r |= this.readUInt16LE() << 8;\n    return r;\n  }\n\n  this.size -= 3;\n  if (this.offset === this.buffers[shift].length) {\n    this.offset = 0;\n    shift++;\n  }\n  if (shift !== 0)\n    this.buffers = this.buffers.slice(shift);\n\n  return r;\n};\n\nOffsetBuffer.prototype.readUInt32LE = function readUInt32LE() {\n  var first = this.buffers[0];\n\n  var r;\n  var shift;\n  var firstHas = first.length - this.offset;\n\n  // Fast case - first buffer has all bytes\n  if (firstHas >= 4) {\n    r = first.readUInt32LE(this.offset);\n    shift = 0;\n    this.offset += 4;\n\n  // First buffer has 3 of 4 bytes\n  } else if (firstHas >= 3) {\n    r = (first.readUInt16LE(this.offset) |\n         (first[this.offset + 2] << 16)) +\n        (this.buffers[1][0] * 0x1000000);\n    shift = 1;\n    this.offset = 1;\n\n  // Slow case: First buffer has 2 of 4 bytes\n  } else if (firstHas >= 2) {\n    r = first.readUInt16LE(this.offset);\n    this.offset = 0;\n    this.buffers.shift();\n    this.size -= 2;\n\n    r += this.readUInt16LE() * 0x10000;\n    return r;\n\n  // Slow case: First buffer has 1 of 4 bytes\n  } else {\n    r = first[this.offset];\n    this.offset = 0;\n    this.buffers.shift();\n    this.size -= 1;\n\n    r += this.readUInt24LE() * 0x100;\n    return r;\n  }\n\n  this.size -= 4;\n  if (this.offset === this.buffers[shift].length) {\n    this.offset = 0;\n    shift++;\n  }\n  if (shift !== 0)\n    this.buffers = this.buffers.slice(shift);\n\n  return r;\n};\n\nOffsetBuffer.prototype.readUInt16BE = function readUInt16BE() {\n  var r = this.readUInt16LE();\n\n  return ((r & 0xff) << 8) | (r >> 8);\n};\n\nOffsetBuffer.prototype.readUInt24BE = function readUInt24BE() {\n  var r = this.readUInt24LE();\n\n  return ((r & 0xff) << 16) | (((r >> 8) & 0xff) << 8) | (r >> 16);\n};\n\nOffsetBuffer.prototype.readUInt32BE = function readUInt32BE() {\n  var r = this.readUInt32LE();\n\n  return (((r & 0xff) << 24) |\n          (((r >>> 8) & 0xff) << 16) |\n          (((r >>> 16) & 0xff) << 8) |\n          (r >>> 24)) >>> 0;\n};\n\n// Signed number APIs\n\nfunction signedInt8(num) {\n  if (num >= 0x80)\n    return -(0xff ^ num) - 1;\n  else\n    return num;\n}\n\nOffsetBuffer.prototype.peekInt8 = function peekInt8() {\n  return signedInt8(this.peekUInt8());\n};\n\nOffsetBuffer.prototype.readInt8 = function readInt8() {\n  return signedInt8(this.readUInt8());\n};\n\nfunction signedInt16(num) {\n  if (num >= 0x8000)\n    return -(0xffff ^ num) - 1;\n  else\n    return num;\n}\n\nOffsetBuffer.prototype.readInt16BE = function readInt16BE() {\n  return signedInt16(this.readUInt16BE());\n};\n\nOffsetBuffer.prototype.readInt16LE = function readInt16LE() {\n  return signedInt16(this.readUInt16LE());\n};\n\nfunction signedInt24(num) {\n  if (num >= 0x800000)\n    return -(0xffffff ^ num) - 1;\n  else\n    return num;\n}\n\nOffsetBuffer.prototype.readInt24BE = function readInt24BE() {\n  return signedInt24(this.readUInt24BE());\n};\n\nOffsetBuffer.prototype.readInt24LE = function readInt24LE() {\n  return signedInt24(this.readUInt24LE());\n};\n\nfunction signedInt32(num) {\n  if (num >= 0x80000000)\n    return -(0xffffffff ^ num) - 1;\n  else\n    return num;\n}\n\nOffsetBuffer.prototype.readInt32BE = function readInt32BE() {\n  return signedInt32(this.readUInt32BE());\n};\n\nOffsetBuffer.prototype.readInt32LE = function readInt32LE() {\n  return signedInt32(this.readUInt32LE());\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}