{"ast":null,"code":"import { parseColor, formatColor } from './color';\nexport function withAlphaValue(color, alphaValue, defaultValue) {\n  if (typeof color === 'function') {\n    return color({\n      opacityValue: alphaValue\n    });\n  }\n\n  let parsed = parseColor(color, {\n    loose: true\n  });\n\n  if (parsed === null) {\n    return defaultValue;\n  }\n\n  return formatColor({ ...parsed,\n    alpha: alphaValue\n  });\n}\nexport default function withAlphaVariable(_ref) {\n  let {\n    color,\n    property,\n    variable\n  } = _ref;\n  let properties = [].concat(property);\n\n  if (typeof color === 'function') {\n    return {\n      [variable]: '1',\n      ...Object.fromEntries(properties.map(p => {\n        return [p, color({\n          opacityVariable: variable,\n          opacityValue: `var(${variable})`\n        })];\n      }))\n    };\n  }\n\n  const parsed = parseColor(color);\n\n  if (parsed === null) {\n    return Object.fromEntries(properties.map(p => [p, color]));\n  }\n\n  if (parsed.alpha !== undefined) {\n    // Has an alpha value, return color as-is\n    return Object.fromEntries(properties.map(p => [p, color]));\n  }\n\n  return {\n    [variable]: '1',\n    ...Object.fromEntries(properties.map(p => {\n      return [p, formatColor({ ...parsed,\n        alpha: `var(${variable})`\n      })];\n    }))\n  };\n}","map":{"version":3,"names":["parseColor","formatColor","withAlphaValue","color","alphaValue","defaultValue","opacityValue","parsed","loose","alpha","withAlphaVariable","property","variable","properties","concat","Object","fromEntries","map","p","opacityVariable","undefined"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/tailwindcss/src/util/withAlphaVariable.js"],"sourcesContent":["import { parseColor, formatColor } from './color'\n\nexport function withAlphaValue(color, alphaValue, defaultValue) {\n  if (typeof color === 'function') {\n    return color({ opacityValue: alphaValue })\n  }\n\n  let parsed = parseColor(color, { loose: true })\n\n  if (parsed === null) {\n    return defaultValue\n  }\n\n  return formatColor({ ...parsed, alpha: alphaValue })\n}\n\nexport default function withAlphaVariable({ color, property, variable }) {\n  let properties = [].concat(property)\n  if (typeof color === 'function') {\n    return {\n      [variable]: '1',\n      ...Object.fromEntries(\n        properties.map((p) => {\n          return [p, color({ opacityVariable: variable, opacityValue: `var(${variable})` })]\n        })\n      ),\n    }\n  }\n\n  const parsed = parseColor(color)\n\n  if (parsed === null) {\n    return Object.fromEntries(properties.map((p) => [p, color]))\n  }\n\n  if (parsed.alpha !== undefined) {\n    // Has an alpha value, return color as-is\n    return Object.fromEntries(properties.map((p) => [p, color]))\n  }\n\n  return {\n    [variable]: '1',\n    ...Object.fromEntries(\n      properties.map((p) => {\n        return [p, formatColor({ ...parsed, alpha: `var(${variable})` })]\n      })\n    ),\n  }\n}\n"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,WAArB,QAAwC,SAAxC;AAEA,OAAO,SAASC,cAAT,CAAwBC,KAAxB,EAA+BC,UAA/B,EAA2CC,YAA3C,EAAyD;EAC9D,IAAI,OAAOF,KAAP,KAAiB,UAArB,EAAiC;IAC/B,OAAOA,KAAK,CAAC;MAAEG,YAAY,EAAEF;IAAhB,CAAD,CAAZ;EACD;;EAED,IAAIG,MAAM,GAAGP,UAAU,CAACG,KAAD,EAAQ;IAAEK,KAAK,EAAE;EAAT,CAAR,CAAvB;;EAEA,IAAID,MAAM,KAAK,IAAf,EAAqB;IACnB,OAAOF,YAAP;EACD;;EAED,OAAOJ,WAAW,CAAC,EAAE,GAAGM,MAAL;IAAaE,KAAK,EAAEL;EAApB,CAAD,CAAlB;AACD;AAED,eAAe,SAASM,iBAAT,OAA0D;EAAA,IAA/B;IAAEP,KAAF;IAASQ,QAAT;IAAmBC;EAAnB,CAA+B;EACvE,IAAIC,UAAU,GAAG,GAAGC,MAAH,CAAUH,QAAV,CAAjB;;EACA,IAAI,OAAOR,KAAP,KAAiB,UAArB,EAAiC;IAC/B,OAAO;MACL,CAACS,QAAD,GAAY,GADP;MAEL,GAAGG,MAAM,CAACC,WAAP,CACDH,UAAU,CAACI,GAAX,CAAgBC,CAAD,IAAO;QACpB,OAAO,CAACA,CAAD,EAAIf,KAAK,CAAC;UAAEgB,eAAe,EAAEP,QAAnB;UAA6BN,YAAY,EAAG,OAAMM,QAAS;QAA3D,CAAD,CAAT,CAAP;MACD,CAFD,CADC;IAFE,CAAP;EAQD;;EAED,MAAML,MAAM,GAAGP,UAAU,CAACG,KAAD,CAAzB;;EAEA,IAAII,MAAM,KAAK,IAAf,EAAqB;IACnB,OAAOQ,MAAM,CAACC,WAAP,CAAmBH,UAAU,CAACI,GAAX,CAAgBC,CAAD,IAAO,CAACA,CAAD,EAAIf,KAAJ,CAAtB,CAAnB,CAAP;EACD;;EAED,IAAII,MAAM,CAACE,KAAP,KAAiBW,SAArB,EAAgC;IAC9B;IACA,OAAOL,MAAM,CAACC,WAAP,CAAmBH,UAAU,CAACI,GAAX,CAAgBC,CAAD,IAAO,CAACA,CAAD,EAAIf,KAAJ,CAAtB,CAAnB,CAAP;EACD;;EAED,OAAO;IACL,CAACS,QAAD,GAAY,GADP;IAEL,GAAGG,MAAM,CAACC,WAAP,CACDH,UAAU,CAACI,GAAX,CAAgBC,CAAD,IAAO;MACpB,OAAO,CAACA,CAAD,EAAIjB,WAAW,CAAC,EAAE,GAAGM,MAAL;QAAaE,KAAK,EAAG,OAAMG,QAAS;MAApC,CAAD,CAAf,CAAP;IACD,CAFD,CADC;EAFE,CAAP;AAQD"},"metadata":{},"sourceType":"module"}