{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _ariaQuery = require(\"aria-query\");\n\nvar _jsxAstUtils = require(\"jsx-ast-utils\");\n\nvar _schemas = require(\"../util/schemas\");\n\nvar _getElementType = _interopRequireDefault(require(\"../util/getElementType\"));\n/**\n * @fileoverview Enforce scope prop is only used on <th> elements.\n * @author Ethan Cohen\n */\n// ----------------------------------------------------------------------------\n// Rule Definition\n// ----------------------------------------------------------------------------\n\n\nvar errorMessage = 'The scope prop can only be used on <th> elements.';\nvar schema = (0, _schemas.generateObjSchema)();\nvar _default = {\n  meta: {\n    docs: {\n      url: 'https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/tree/HEAD/docs/rules/scope.md',\n      description: 'Enforce `scope` prop is only used on `<th>` elements.',\n      errorOptions: true\n    },\n    schema: [schema]\n  },\n  create: function create(context) {\n    var elementType = (0, _getElementType[\"default\"])(context);\n    return {\n      JSXAttribute: function JSXAttribute(node) {\n        var name = (0, _jsxAstUtils.propName)(node);\n\n        if (name && name.toUpperCase() !== 'SCOPE') {\n          return;\n        }\n\n        var parent = node.parent;\n        var tagName = elementType(parent); // Do not test higher level JSX components, as we do not know what\n        // low-level DOM element this maps to.\n\n        if (!_ariaQuery.dom.has(tagName)) {\n          return;\n        }\n\n        if (tagName && tagName.toUpperCase() === 'TH') {\n          return;\n        }\n\n        context.report({\n          node,\n          message: errorMessage\n        });\n      }\n    };\n  }\n};\nexports[\"default\"] = _default;\nmodule.exports = exports.default;","map":{"version":3,"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","_ariaQuery","_jsxAstUtils","_schemas","_getElementType","errorMessage","schema","generateObjSchema","_default","meta","docs","url","description","errorOptions","create","context","elementType","JSXAttribute","node","name","propName","toUpperCase","parent","tagName","dom","has","report","message","module","default"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/eslint-plugin-jsx-a11y/lib/rules/scope.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _ariaQuery = require(\"aria-query\");\n\nvar _jsxAstUtils = require(\"jsx-ast-utils\");\n\nvar _schemas = require(\"../util/schemas\");\n\nvar _getElementType = _interopRequireDefault(require(\"../util/getElementType\"));\n\n/**\n * @fileoverview Enforce scope prop is only used on <th> elements.\n * @author Ethan Cohen\n */\n// ----------------------------------------------------------------------------\n// Rule Definition\n// ----------------------------------------------------------------------------\nvar errorMessage = 'The scope prop can only be used on <th> elements.';\nvar schema = (0, _schemas.generateObjSchema)();\nvar _default = {\n  meta: {\n    docs: {\n      url: 'https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/tree/HEAD/docs/rules/scope.md',\n      description: 'Enforce `scope` prop is only used on `<th>` elements.',\n      errorOptions: true\n    },\n    schema: [schema]\n  },\n  create: function create(context) {\n    var elementType = (0, _getElementType[\"default\"])(context);\n    return {\n      JSXAttribute: function JSXAttribute(node) {\n        var name = (0, _jsxAstUtils.propName)(node);\n\n        if (name && name.toUpperCase() !== 'SCOPE') {\n          return;\n        }\n\n        var parent = node.parent;\n        var tagName = elementType(parent); // Do not test higher level JSX components, as we do not know what\n        // low-level DOM element this maps to.\n\n        if (!_ariaQuery.dom.has(tagName)) {\n          return;\n        }\n\n        if (tagName && tagName.toUpperCase() === 'TH') {\n          return;\n        }\n\n        context.report({\n          node,\n          message: errorMessage\n        });\n      }\n    };\n  }\n};\nexports[\"default\"] = _default;\nmodule.exports = exports.default;"],"mappings":"AAAA;;AAEA,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAAD,CAApC;;AAEAC,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAC3CC,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAAC,SAAD,CAAP,GAAqB,KAAK,CAA1B;;AAEA,IAAIE,UAAU,GAAGL,OAAO,CAAC,YAAD,CAAxB;;AAEA,IAAIM,YAAY,GAAGN,OAAO,CAAC,eAAD,CAA1B;;AAEA,IAAIO,QAAQ,GAAGP,OAAO,CAAC,iBAAD,CAAtB;;AAEA,IAAIQ,eAAe,GAAGT,sBAAsB,CAACC,OAAO,CAAC,wBAAD,CAAR,CAA5C;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIS,YAAY,GAAG,mDAAnB;AACA,IAAIC,MAAM,GAAG,CAAC,GAAGH,QAAQ,CAACI,iBAAb,GAAb;AACA,IAAIC,QAAQ,GAAG;EACbC,IAAI,EAAE;IACJC,IAAI,EAAE;MACJC,GAAG,EAAE,oFADD;MAEJC,WAAW,EAAE,uDAFT;MAGJC,YAAY,EAAE;IAHV,CADF;IAMJP,MAAM,EAAE,CAACA,MAAD;EANJ,CADO;EASbQ,MAAM,EAAE,SAASA,MAAT,CAAgBC,OAAhB,EAAyB;IAC/B,IAAIC,WAAW,GAAG,CAAC,GAAGZ,eAAe,CAAC,SAAD,CAAnB,EAAgCW,OAAhC,CAAlB;IACA,OAAO;MACLE,YAAY,EAAE,SAASA,YAAT,CAAsBC,IAAtB,EAA4B;QACxC,IAAIC,IAAI,GAAG,CAAC,GAAGjB,YAAY,CAACkB,QAAjB,EAA2BF,IAA3B,CAAX;;QAEA,IAAIC,IAAI,IAAIA,IAAI,CAACE,WAAL,OAAuB,OAAnC,EAA4C;UAC1C;QACD;;QAED,IAAIC,MAAM,GAAGJ,IAAI,CAACI,MAAlB;QACA,IAAIC,OAAO,GAAGP,WAAW,CAACM,MAAD,CAAzB,CARwC,CAQL;QACnC;;QAEA,IAAI,CAACrB,UAAU,CAACuB,GAAX,CAAeC,GAAf,CAAmBF,OAAnB,CAAL,EAAkC;UAChC;QACD;;QAED,IAAIA,OAAO,IAAIA,OAAO,CAACF,WAAR,OAA0B,IAAzC,EAA+C;UAC7C;QACD;;QAEDN,OAAO,CAACW,MAAR,CAAe;UACbR,IADa;UAEbS,OAAO,EAAEtB;QAFI,CAAf;MAID;IAxBI,CAAP;EA0BD;AArCY,CAAf;AAuCAN,OAAO,CAAC,SAAD,CAAP,GAAqBS,QAArB;AACAoB,MAAM,CAAC7B,OAAP,GAAiBA,OAAO,CAAC8B,OAAzB"},"metadata":{},"sourceType":"script"}