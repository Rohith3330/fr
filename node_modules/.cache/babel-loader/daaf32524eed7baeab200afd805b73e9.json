{"ast":null,"code":"/**\n * @fileoverview Rule to check use of chained assignment expressions\n * @author Stewart Rand\n */\n\"use strict\"; //------------------------------------------------------------------------------\n// Rule Definition\n//------------------------------------------------------------------------------\n\n/** @type {import('../shared/types').Rule} */\n\nmodule.exports = {\n  meta: {\n    type: \"suggestion\",\n    docs: {\n      description: \"Disallow use of chained assignment expressions\",\n      recommended: false,\n      url: \"https://eslint.org/docs/rules/no-multi-assign\"\n    },\n    schema: [{\n      type: \"object\",\n      properties: {\n        ignoreNonDeclaration: {\n          type: \"boolean\",\n          default: false\n        }\n      },\n      additionalProperties: false\n    }],\n    messages: {\n      unexpectedChain: \"Unexpected chained assignment.\"\n    }\n  },\n\n  create(context) {\n    //--------------------------------------------------------------------------\n    // Public\n    //--------------------------------------------------------------------------\n    const options = context.options[0] || {\n      ignoreNonDeclaration: false\n    };\n    const selectors = [\"VariableDeclarator > AssignmentExpression.init\", \"PropertyDefinition > AssignmentExpression.value\"];\n\n    if (!options.ignoreNonDeclaration) {\n      selectors.push(\"AssignmentExpression > AssignmentExpression.right\");\n    }\n\n    return {\n      [selectors](node) {\n        context.report({\n          node,\n          messageId: \"unexpectedChain\"\n        });\n      }\n\n    };\n  }\n\n};","map":{"version":3,"names":["module","exports","meta","type","docs","description","recommended","url","schema","properties","ignoreNonDeclaration","default","additionalProperties","messages","unexpectedChain","create","context","options","selectors","push","node","report","messageId"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/eslint/lib/rules/no-multi-assign.js"],"sourcesContent":["/**\n * @fileoverview Rule to check use of chained assignment expressions\n * @author Stewart Rand\n */\n\n\"use strict\";\n\n\n//------------------------------------------------------------------------------\n// Rule Definition\n//------------------------------------------------------------------------------\n\n/** @type {import('../shared/types').Rule} */\nmodule.exports = {\n    meta: {\n        type: \"suggestion\",\n\n        docs: {\n            description: \"Disallow use of chained assignment expressions\",\n            recommended: false,\n            url: \"https://eslint.org/docs/rules/no-multi-assign\"\n        },\n\n        schema: [{\n            type: \"object\",\n            properties: {\n                ignoreNonDeclaration: {\n                    type: \"boolean\",\n                    default: false\n                }\n            },\n            additionalProperties: false\n        }],\n\n        messages: {\n            unexpectedChain: \"Unexpected chained assignment.\"\n        }\n    },\n\n    create(context) {\n\n        //--------------------------------------------------------------------------\n        // Public\n        //--------------------------------------------------------------------------\n        const options = context.options[0] || {\n            ignoreNonDeclaration: false\n        };\n        const selectors = [\n            \"VariableDeclarator > AssignmentExpression.init\",\n            \"PropertyDefinition > AssignmentExpression.value\"\n        ];\n\n        if (!options.ignoreNonDeclaration) {\n            selectors.push(\"AssignmentExpression > AssignmentExpression.right\");\n        }\n\n        return {\n            [selectors](node) {\n                context.report({\n                    node,\n                    messageId: \"unexpectedChain\"\n                });\n            }\n        };\n\n    }\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AAEA,a,CAGA;AACA;AACA;;AAEA;;AACAA,MAAM,CAACC,OAAP,GAAiB;EACbC,IAAI,EAAE;IACFC,IAAI,EAAE,YADJ;IAGFC,IAAI,EAAE;MACFC,WAAW,EAAE,gDADX;MAEFC,WAAW,EAAE,KAFX;MAGFC,GAAG,EAAE;IAHH,CAHJ;IASFC,MAAM,EAAE,CAAC;MACLL,IAAI,EAAE,QADD;MAELM,UAAU,EAAE;QACRC,oBAAoB,EAAE;UAClBP,IAAI,EAAE,SADY;UAElBQ,OAAO,EAAE;QAFS;MADd,CAFP;MAQLC,oBAAoB,EAAE;IARjB,CAAD,CATN;IAoBFC,QAAQ,EAAE;MACNC,eAAe,EAAE;IADX;EApBR,CADO;;EA0BbC,MAAM,CAACC,OAAD,EAAU;IAEZ;IACA;IACA;IACA,MAAMC,OAAO,GAAGD,OAAO,CAACC,OAAR,CAAgB,CAAhB,KAAsB;MAClCP,oBAAoB,EAAE;IADY,CAAtC;IAGA,MAAMQ,SAAS,GAAG,CACd,gDADc,EAEd,iDAFc,CAAlB;;IAKA,IAAI,CAACD,OAAO,CAACP,oBAAb,EAAmC;MAC/BQ,SAAS,CAACC,IAAV,CAAe,mDAAf;IACH;;IAED,OAAO;MACH,CAACD,SAAD,EAAYE,IAAZ,EAAkB;QACdJ,OAAO,CAACK,MAAR,CAAe;UACXD,IADW;UAEXE,SAAS,EAAE;QAFA,CAAf;MAIH;;IANE,CAAP;EASH;;AApDY,CAAjB"},"metadata":{},"sourceType":"script"}