{"ast":null,"code":"'use strict';\n\nconst {\n  colord,\n  extend\n} = require('colord');\n\nconst namesPlugin = require('colord/plugins/names');\n\nconst minifierPlugin = require('colord/plugins/minify');\n\nextend(\n/** @type {any[]} */\n[namesPlugin, minifierPlugin]);\n/**\n * Performs color value minification\n *\n * @param {string} input - CSS value\n * @param {Record<string, boolean>} options  object with colord.minify() options\n * @return {string}\n */\n\nmodule.exports = function minifyColor(input) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const instance = colord(input);\n\n  if (instance.isValid()) {\n    // Try to shorten the string if it is a valid CSS color value\n    const minified = instance.minify(options); // Fall back to the original input if it's smaller or has equal length\n\n    return minified.length < input.length ? minified : input.toLowerCase();\n  } else {\n    // Possibly malformed, so pass through\n    return input;\n  }\n};","map":{"version":3,"names":["colord","extend","require","namesPlugin","minifierPlugin","module","exports","minifyColor","input","options","instance","isValid","minified","minify","length","toLowerCase"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/postcss-colormin/src/minifyColor.js"],"sourcesContent":["'use strict';\nconst { colord, extend } = require('colord');\nconst namesPlugin = require('colord/plugins/names');\nconst minifierPlugin = require('colord/plugins/minify');\n\nextend(/** @type {any[]} */ ([namesPlugin, minifierPlugin]));\n\n/**\n * Performs color value minification\n *\n * @param {string} input - CSS value\n * @param {Record<string, boolean>} options  object with colord.minify() options\n * @return {string}\n */\nmodule.exports = function minifyColor(input, options = {}) {\n  const instance = colord(input);\n\n  if (instance.isValid()) {\n    // Try to shorten the string if it is a valid CSS color value\n    const minified = instance.minify(options);\n\n    // Fall back to the original input if it's smaller or has equal length\n    return minified.length < input.length ? minified : input.toLowerCase();\n  } else {\n    // Possibly malformed, so pass through\n    return input;\n  }\n};\n"],"mappings":"AAAA;;AACA,MAAM;EAAEA,MAAF;EAAUC;AAAV,IAAqBC,OAAO,CAAC,QAAD,CAAlC;;AACA,MAAMC,WAAW,GAAGD,OAAO,CAAC,sBAAD,CAA3B;;AACA,MAAME,cAAc,GAAGF,OAAO,CAAC,uBAAD,CAA9B;;AAEAD,MAAM;AAAC;AAAsB,CAACE,WAAD,EAAcC,cAAd,CAAvB,CAAN;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAC,MAAM,CAACC,OAAP,GAAiB,SAASC,WAAT,CAAqBC,KAArB,EAA0C;EAAA,IAAdC,OAAc,uEAAJ,EAAI;EACzD,MAAMC,QAAQ,GAAGV,MAAM,CAACQ,KAAD,CAAvB;;EAEA,IAAIE,QAAQ,CAACC,OAAT,EAAJ,EAAwB;IACtB;IACA,MAAMC,QAAQ,GAAGF,QAAQ,CAACG,MAAT,CAAgBJ,OAAhB,CAAjB,CAFsB,CAItB;;IACA,OAAOG,QAAQ,CAACE,MAAT,GAAkBN,KAAK,CAACM,MAAxB,GAAiCF,QAAjC,GAA4CJ,KAAK,CAACO,WAAN,EAAnD;EACD,CAND,MAMO;IACL;IACA,OAAOP,KAAP;EACD;AACF,CAbD"},"metadata":{},"sourceType":"script"}