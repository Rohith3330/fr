{"ast":null,"code":"\"use strict\";\n\nconst NativeModule = require(\"module\");\n\nconst path = require(\"path\");\n/** @typedef {import(\"webpack\").Compilation} Compilation */\n\n/** @typedef {import(\"webpack\").Module} Module */\n\n/** @typedef {import(\"webpack\").LoaderContext<any>} LoaderContext */\n\n/**\n * @returns {boolean}\n */\n\n\nfunction trueFn() {\n  return true;\n}\n/**\n * @param {Compilation} compilation\n * @param {string | number} id\n * @returns {null | Module}\n */\n\n\nfunction findModuleById(compilation, id) {\n  const {\n    modules,\n    chunkGraph\n  } = compilation;\n\n  for (const module of modules) {\n    const moduleId = typeof chunkGraph !== \"undefined\" ? chunkGraph.getModuleId(module) : module.id;\n\n    if (moduleId === id) {\n      return module;\n    }\n  }\n\n  return null;\n}\n/**\n * @param {LoaderContext} loaderContext\n * @param {string | Buffer} code\n * @param {string} filename\n * @returns {object}\n */\n\n\nfunction evalModuleCode(loaderContext, code, filename) {\n  // @ts-ignore\n  const module = new NativeModule(filename, loaderContext); // @ts-ignore\n\n  module.paths = NativeModule._nodeModulePaths(loaderContext.context); // eslint-disable-line no-underscore-dangle\n\n  module.filename = filename; // @ts-ignore\n\n  module._compile(code, filename); // eslint-disable-line no-underscore-dangle\n\n\n  return module.exports;\n}\n/**\n * @param {string} a\n * @param {string} b\n * @returns {0 | 1 | -1}\n */\n\n\nfunction compareIds(a, b) {\n  if (typeof a !== typeof b) {\n    return typeof a < typeof b ? -1 : 1;\n  }\n\n  if (a < b) {\n    return -1;\n  }\n\n  if (a > b) {\n    return 1;\n  }\n\n  return 0;\n}\n/**\n * @param {Module} a\n * @param {Module} b\n * @returns {0 | 1 | -1}\n */\n\n\nfunction compareModulesByIdentifier(a, b) {\n  return compareIds(a.identifier(), b.identifier());\n}\n\nconst MODULE_TYPE = \"css/mini-extract\";\nconst AUTO_PUBLIC_PATH = \"__mini_css_extract_plugin_public_path_auto__\";\nconst ABSOLUTE_PUBLIC_PATH = \"webpack:///mini-css-extract-plugin/\";\nconst BASE_URI = \"webpack://\";\nconst SINGLE_DOT_PATH_SEGMENT = \"__mini_css_extract_plugin_single_dot_path_segment__\";\n/**\n * @param {string} str\n * @returns {boolean}\n */\n\nfunction isAbsolutePath(str) {\n  return path.posix.isAbsolute(str) || path.win32.isAbsolute(str);\n}\n\nconst RELATIVE_PATH_REGEXP = /^\\.\\.?[/\\\\]/;\n/**\n * @param {string} str\n * @returns {boolean}\n */\n\nfunction isRelativePath(str) {\n  return RELATIVE_PATH_REGEXP.test(str);\n} // TODO simplify for the next major release\n\n/**\n * @param {LoaderContext} loaderContext\n * @param {string} request\n * @returns {string}\n */\n\n\nfunction stringifyRequest(loaderContext, request) {\n  if (typeof loaderContext.utils !== \"undefined\" && typeof loaderContext.utils.contextify === \"function\") {\n    return JSON.stringify(loaderContext.utils.contextify(loaderContext.context || loaderContext.rootContext, request));\n  }\n\n  const splitted = request.split(\"!\");\n  const {\n    context\n  } = loaderContext;\n  return JSON.stringify(splitted.map(part => {\n    // First, separate singlePath from query, because the query might contain paths again\n    const splittedPart = part.match(/^(.*?)(\\?.*)/);\n    const query = splittedPart ? splittedPart[2] : \"\";\n    let singlePath = splittedPart ? splittedPart[1] : part;\n\n    if (isAbsolutePath(singlePath) && context) {\n      singlePath = path.relative(context, singlePath);\n\n      if (isAbsolutePath(singlePath)) {\n        // If singlePath still matches an absolute path, singlePath was on a different drive than context.\n        // In this case, we leave the path platform-specific without replacing any separators.\n        // @see https://github.com/webpack/loader-utils/pull/14\n        return singlePath + query;\n      }\n\n      if (isRelativePath(singlePath) === false) {\n        // Ensure that the relative path starts at least with ./ otherwise it would be a request into the modules directory (like node_modules).\n        singlePath = `./${singlePath}`;\n      }\n    }\n\n    return singlePath.replace(/\\\\/g, \"/\") + query;\n  }).join(\"!\"));\n}\n/**\n * @param {string} filename\n * @param {string} outputPath\n * @param {boolean} enforceRelative\n * @returns {string}\n */\n\n\nfunction getUndoPath(filename, outputPath, enforceRelative) {\n  let depth = -1;\n  let append = \"\"; // eslint-disable-next-line no-param-reassign\n\n  outputPath = outputPath.replace(/[\\\\/]$/, \"\");\n\n  for (const part of filename.split(/[/\\\\]+/)) {\n    if (part === \"..\") {\n      if (depth > -1) {\n        // eslint-disable-next-line no-plusplus\n        depth--;\n      } else {\n        const i = outputPath.lastIndexOf(\"/\");\n        const j = outputPath.lastIndexOf(\"\\\\\");\n        const pos = i < 0 ? j : j < 0 ? i : Math.max(i, j);\n\n        if (pos < 0) {\n          return `${outputPath}/`;\n        }\n\n        append = `${outputPath.slice(pos + 1)}/${append}`; // eslint-disable-next-line no-param-reassign\n\n        outputPath = outputPath.slice(0, pos);\n      }\n    } else if (part !== \".\") {\n      // eslint-disable-next-line no-plusplus\n      depth++;\n    }\n  }\n\n  return depth > 0 ? `${\"../\".repeat(depth)}${append}` : enforceRelative ? `./${append}` : append;\n}\n\nmodule.exports = {\n  trueFn,\n  findModuleById,\n  evalModuleCode,\n  compareModulesByIdentifier,\n  MODULE_TYPE,\n  AUTO_PUBLIC_PATH,\n  ABSOLUTE_PUBLIC_PATH,\n  BASE_URI,\n  SINGLE_DOT_PATH_SEGMENT,\n  stringifyRequest,\n  getUndoPath\n};","map":{"version":3,"names":["NativeModule","require","path","trueFn","findModuleById","compilation","id","modules","chunkGraph","module","moduleId","getModuleId","evalModuleCode","loaderContext","code","filename","paths","_nodeModulePaths","context","_compile","exports","compareIds","a","b","compareModulesByIdentifier","identifier","MODULE_TYPE","AUTO_PUBLIC_PATH","ABSOLUTE_PUBLIC_PATH","BASE_URI","SINGLE_DOT_PATH_SEGMENT","isAbsolutePath","str","posix","isAbsolute","win32","RELATIVE_PATH_REGEXP","isRelativePath","test","stringifyRequest","request","utils","contextify","JSON","stringify","rootContext","splitted","split","map","part","splittedPart","match","query","singlePath","relative","replace","join","getUndoPath","outputPath","enforceRelative","depth","append","i","lastIndexOf","j","pos","Math","max","slice","repeat"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/mini-css-extract-plugin/dist/utils.js"],"sourcesContent":["\"use strict\";\n\nconst NativeModule = require(\"module\");\n\nconst path = require(\"path\");\n/** @typedef {import(\"webpack\").Compilation} Compilation */\n\n/** @typedef {import(\"webpack\").Module} Module */\n\n/** @typedef {import(\"webpack\").LoaderContext<any>} LoaderContext */\n\n/**\n * @returns {boolean}\n */\n\n\nfunction trueFn() {\n  return true;\n}\n/**\n * @param {Compilation} compilation\n * @param {string | number} id\n * @returns {null | Module}\n */\n\n\nfunction findModuleById(compilation, id) {\n  const {\n    modules,\n    chunkGraph\n  } = compilation;\n\n  for (const module of modules) {\n    const moduleId = typeof chunkGraph !== \"undefined\" ? chunkGraph.getModuleId(module) : module.id;\n\n    if (moduleId === id) {\n      return module;\n    }\n  }\n\n  return null;\n}\n/**\n * @param {LoaderContext} loaderContext\n * @param {string | Buffer} code\n * @param {string} filename\n * @returns {object}\n */\n\n\nfunction evalModuleCode(loaderContext, code, filename) {\n  // @ts-ignore\n  const module = new NativeModule(filename, loaderContext); // @ts-ignore\n\n  module.paths = NativeModule._nodeModulePaths(loaderContext.context); // eslint-disable-line no-underscore-dangle\n\n  module.filename = filename; // @ts-ignore\n\n  module._compile(code, filename); // eslint-disable-line no-underscore-dangle\n\n\n  return module.exports;\n}\n/**\n * @param {string} a\n * @param {string} b\n * @returns {0 | 1 | -1}\n */\n\n\nfunction compareIds(a, b) {\n  if (typeof a !== typeof b) {\n    return typeof a < typeof b ? -1 : 1;\n  }\n\n  if (a < b) {\n    return -1;\n  }\n\n  if (a > b) {\n    return 1;\n  }\n\n  return 0;\n}\n/**\n * @param {Module} a\n * @param {Module} b\n * @returns {0 | 1 | -1}\n */\n\n\nfunction compareModulesByIdentifier(a, b) {\n  return compareIds(a.identifier(), b.identifier());\n}\n\nconst MODULE_TYPE = \"css/mini-extract\";\nconst AUTO_PUBLIC_PATH = \"__mini_css_extract_plugin_public_path_auto__\";\nconst ABSOLUTE_PUBLIC_PATH = \"webpack:///mini-css-extract-plugin/\";\nconst BASE_URI = \"webpack://\";\nconst SINGLE_DOT_PATH_SEGMENT = \"__mini_css_extract_plugin_single_dot_path_segment__\";\n/**\n * @param {string} str\n * @returns {boolean}\n */\n\nfunction isAbsolutePath(str) {\n  return path.posix.isAbsolute(str) || path.win32.isAbsolute(str);\n}\n\nconst RELATIVE_PATH_REGEXP = /^\\.\\.?[/\\\\]/;\n/**\n * @param {string} str\n * @returns {boolean}\n */\n\nfunction isRelativePath(str) {\n  return RELATIVE_PATH_REGEXP.test(str);\n} // TODO simplify for the next major release\n\n/**\n * @param {LoaderContext} loaderContext\n * @param {string} request\n * @returns {string}\n */\n\n\nfunction stringifyRequest(loaderContext, request) {\n  if (typeof loaderContext.utils !== \"undefined\" && typeof loaderContext.utils.contextify === \"function\") {\n    return JSON.stringify(loaderContext.utils.contextify(loaderContext.context || loaderContext.rootContext, request));\n  }\n\n  const splitted = request.split(\"!\");\n  const {\n    context\n  } = loaderContext;\n  return JSON.stringify(splitted.map(part => {\n    // First, separate singlePath from query, because the query might contain paths again\n    const splittedPart = part.match(/^(.*?)(\\?.*)/);\n    const query = splittedPart ? splittedPart[2] : \"\";\n    let singlePath = splittedPart ? splittedPart[1] : part;\n\n    if (isAbsolutePath(singlePath) && context) {\n      singlePath = path.relative(context, singlePath);\n\n      if (isAbsolutePath(singlePath)) {\n        // If singlePath still matches an absolute path, singlePath was on a different drive than context.\n        // In this case, we leave the path platform-specific without replacing any separators.\n        // @see https://github.com/webpack/loader-utils/pull/14\n        return singlePath + query;\n      }\n\n      if (isRelativePath(singlePath) === false) {\n        // Ensure that the relative path starts at least with ./ otherwise it would be a request into the modules directory (like node_modules).\n        singlePath = `./${singlePath}`;\n      }\n    }\n\n    return singlePath.replace(/\\\\/g, \"/\") + query;\n  }).join(\"!\"));\n}\n/**\n * @param {string} filename\n * @param {string} outputPath\n * @param {boolean} enforceRelative\n * @returns {string}\n */\n\n\nfunction getUndoPath(filename, outputPath, enforceRelative) {\n  let depth = -1;\n  let append = \"\"; // eslint-disable-next-line no-param-reassign\n\n  outputPath = outputPath.replace(/[\\\\/]$/, \"\");\n\n  for (const part of filename.split(/[/\\\\]+/)) {\n    if (part === \"..\") {\n      if (depth > -1) {\n        // eslint-disable-next-line no-plusplus\n        depth--;\n      } else {\n        const i = outputPath.lastIndexOf(\"/\");\n        const j = outputPath.lastIndexOf(\"\\\\\");\n        const pos = i < 0 ? j : j < 0 ? i : Math.max(i, j);\n\n        if (pos < 0) {\n          return `${outputPath}/`;\n        }\n\n        append = `${outputPath.slice(pos + 1)}/${append}`; // eslint-disable-next-line no-param-reassign\n\n        outputPath = outputPath.slice(0, pos);\n      }\n    } else if (part !== \".\") {\n      // eslint-disable-next-line no-plusplus\n      depth++;\n    }\n  }\n\n  return depth > 0 ? `${\"../\".repeat(depth)}${append}` : enforceRelative ? `./${append}` : append;\n}\n\nmodule.exports = {\n  trueFn,\n  findModuleById,\n  evalModuleCode,\n  compareModulesByIdentifier,\n  MODULE_TYPE,\n  AUTO_PUBLIC_PATH,\n  ABSOLUTE_PUBLIC_PATH,\n  BASE_URI,\n  SINGLE_DOT_PATH_SEGMENT,\n  stringifyRequest,\n  getUndoPath\n};"],"mappings":"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"},"metadata":{},"sourceType":"script"}