{"ast":null,"code":"/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict'; // Fix eslint shareable config (https://github.com/eslint/eslint/issues/3458)\n\nrequire('@rushstack/eslint-patch/modern-module-resolution'); // We use eslint-loader so even warnings are very visible.\n// This is why we prefer to use \"WARNING\" level for potential errors,\n// and we try not to use \"ERROR\" level at all.\n\n\nmodule.exports = {\n  plugins: ['jest', 'testing-library'],\n  overrides: [{\n    files: ['**/__tests__/**/*', '**/*.{spec,test}.*'],\n    env: {\n      'jest/globals': true\n    },\n    // A subset of the recommended rules:\n    rules: {\n      // https://github.com/jest-community/eslint-plugin-jest\n      'jest/no-conditional-expect': 'error',\n      'jest/no-identical-title': 'error',\n      'jest/no-interpolation-in-snapshots': 'error',\n      'jest/no-jasmine-globals': 'error',\n      'jest/no-jest-import': 'error',\n      'jest/no-mocks-import': 'error',\n      'jest/valid-describe-callback': 'error',\n      'jest/valid-expect': 'error',\n      'jest/valid-expect-in-promise': 'error',\n      'jest/valid-title': 'warn',\n      // https://github.com/testing-library/eslint-plugin-testing-library\n      'testing-library/await-async-query': 'error',\n      'testing-library/await-async-utils': 'error',\n      'testing-library/no-await-sync-query': 'error',\n      'testing-library/no-container': 'error',\n      'testing-library/no-debugging-utils': 'error',\n      'testing-library/no-dom-import': ['error', 'react'],\n      'testing-library/no-node-access': 'error',\n      'testing-library/no-promise-in-fire-event': 'error',\n      'testing-library/no-render-in-setup': 'error',\n      'testing-library/no-unnecessary-act': 'error',\n      'testing-library/no-wait-for-empty-callback': 'error',\n      'testing-library/no-wait-for-multiple-assertions': 'error',\n      'testing-library/no-wait-for-side-effects': 'error',\n      'testing-library/no-wait-for-snapshot': 'error',\n      'testing-library/prefer-find-by': 'error',\n      'testing-library/prefer-presence-queries': 'error',\n      'testing-library/prefer-query-by-disappearance': 'error',\n      'testing-library/prefer-screen-queries': 'error',\n      'testing-library/render-result-naming-convention': 'error'\n    }\n  }]\n};","map":{"version":3,"names":["require","module","exports","plugins","overrides","files","env","rules"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/eslint-config-react-app/jest.js"],"sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n// Fix eslint shareable config (https://github.com/eslint/eslint/issues/3458)\nrequire('@rushstack/eslint-patch/modern-module-resolution');\n\n// We use eslint-loader so even warnings are very visible.\n// This is why we prefer to use \"WARNING\" level for potential errors,\n// and we try not to use \"ERROR\" level at all.\n\nmodule.exports = {\n  plugins: ['jest', 'testing-library'],\n  overrides: [\n    {\n      files: ['**/__tests__/**/*', '**/*.{spec,test}.*'],\n      env: {\n        'jest/globals': true,\n      },\n      // A subset of the recommended rules:\n      rules: {\n        // https://github.com/jest-community/eslint-plugin-jest\n        'jest/no-conditional-expect': 'error',\n        'jest/no-identical-title': 'error',\n        'jest/no-interpolation-in-snapshots': 'error',\n        'jest/no-jasmine-globals': 'error',\n        'jest/no-jest-import': 'error',\n        'jest/no-mocks-import': 'error',\n        'jest/valid-describe-callback': 'error',\n        'jest/valid-expect': 'error',\n        'jest/valid-expect-in-promise': 'error',\n        'jest/valid-title': 'warn',\n\n        // https://github.com/testing-library/eslint-plugin-testing-library\n        'testing-library/await-async-query': 'error',\n        'testing-library/await-async-utils': 'error',\n        'testing-library/no-await-sync-query': 'error',\n        'testing-library/no-container': 'error',\n        'testing-library/no-debugging-utils': 'error',\n        'testing-library/no-dom-import': ['error', 'react'],\n        'testing-library/no-node-access': 'error',\n        'testing-library/no-promise-in-fire-event': 'error',\n        'testing-library/no-render-in-setup': 'error',\n        'testing-library/no-unnecessary-act': 'error',\n        'testing-library/no-wait-for-empty-callback': 'error',\n        'testing-library/no-wait-for-multiple-assertions': 'error',\n        'testing-library/no-wait-for-side-effects': 'error',\n        'testing-library/no-wait-for-snapshot': 'error',\n        'testing-library/prefer-find-by': 'error',\n        'testing-library/prefer-presence-queries': 'error',\n        'testing-library/prefer-query-by-disappearance': 'error',\n        'testing-library/prefer-screen-queries': 'error',\n        'testing-library/render-result-naming-convention': 'error',\n      },\n    },\n  ],\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AAEA,a,CAEA;;AACAA,OAAO,CAAC,kDAAD,CAAP,C,CAEA;AACA;AACA;;;AAEAC,MAAM,CAACC,OAAP,GAAiB;EACfC,OAAO,EAAE,CAAC,MAAD,EAAS,iBAAT,CADM;EAEfC,SAAS,EAAE,CACT;IACEC,KAAK,EAAE,CAAC,mBAAD,EAAsB,oBAAtB,CADT;IAEEC,GAAG,EAAE;MACH,gBAAgB;IADb,CAFP;IAKE;IACAC,KAAK,EAAE;MACL;MACA,8BAA8B,OAFzB;MAGL,2BAA2B,OAHtB;MAIL,sCAAsC,OAJjC;MAKL,2BAA2B,OALtB;MAML,uBAAuB,OANlB;MAOL,wBAAwB,OAPnB;MAQL,gCAAgC,OAR3B;MASL,qBAAqB,OAThB;MAUL,gCAAgC,OAV3B;MAWL,oBAAoB,MAXf;MAaL;MACA,qCAAqC,OAdhC;MAeL,qCAAqC,OAfhC;MAgBL,uCAAuC,OAhBlC;MAiBL,gCAAgC,OAjB3B;MAkBL,sCAAsC,OAlBjC;MAmBL,iCAAiC,CAAC,OAAD,EAAU,OAAV,CAnB5B;MAoBL,kCAAkC,OApB7B;MAqBL,4CAA4C,OArBvC;MAsBL,sCAAsC,OAtBjC;MAuBL,sCAAsC,OAvBjC;MAwBL,8CAA8C,OAxBzC;MAyBL,mDAAmD,OAzB9C;MA0BL,4CAA4C,OA1BvC;MA2BL,wCAAwC,OA3BnC;MA4BL,kCAAkC,OA5B7B;MA6BL,2CAA2C,OA7BtC;MA8BL,iDAAiD,OA9B5C;MA+BL,yCAAyC,OA/BpC;MAgCL,mDAAmD;IAhC9C;EANT,CADS;AAFI,CAAjB"},"metadata":{},"sourceType":"script"}