{"ast":null,"code":"'use strict';\n\nconst parser = require('postcss-selector-parser');\n\nconst canUnquote = require('./lib/canUnquote.js');\n\nconst pseudoElements = new Set(['::before', '::after', '::first-letter', '::first-line']);\n/**\n * @param {parser.Attribute} selector\n * @return {void}\n */\n\nfunction attribute(selector) {\n  if (selector.value) {\n    if (selector.raws.value) {\n      // Join selectors that are split over new lines\n      selector.raws.value = selector.raws.value.replace(/\\\\\\n/g, '').trim();\n    }\n\n    if (canUnquote(selector.value)) {\n      selector.quoteMark = null;\n    }\n\n    if (selector.operator) {\n      selector.operator =\n      /** @type {parser.AttributeOperator} */\n      selector.operator.trim();\n    }\n  }\n\n  selector.rawSpaceBefore = '';\n  selector.rawSpaceAfter = '';\n  selector.spaces.attribute = {\n    before: '',\n    after: ''\n  };\n  selector.spaces.operator = {\n    before: '',\n    after: ''\n  };\n  selector.spaces.value = {\n    before: '',\n    after: selector.insensitive ? ' ' : ''\n  };\n\n  if (selector.raws.spaces) {\n    selector.raws.spaces.attribute = {\n      before: '',\n      after: ''\n    };\n    selector.raws.spaces.operator = {\n      before: '',\n      after: ''\n    };\n    selector.raws.spaces.value = {\n      before: '',\n      after: selector.insensitive ? ' ' : ''\n    };\n\n    if (selector.insensitive) {\n      selector.raws.spaces.insensitive = {\n        before: '',\n        after: ''\n      };\n    }\n  }\n\n  selector.attribute = selector.attribute.trim();\n}\n/**\n * @param {parser.Combinator} selector\n * @return {void}\n */\n\n\nfunction combinator(selector) {\n  const value = selector.value.trim();\n  selector.spaces.before = '';\n  selector.spaces.after = '';\n  selector.rawSpaceBefore = '';\n  selector.rawSpaceAfter = '';\n  selector.value = value.length ? value : ' ';\n}\n\nconst pseudoReplacements = new Map([[':nth-child', ':first-child'], [':nth-of-type', ':first-of-type'], [':nth-last-child', ':last-child'], [':nth-last-of-type', ':last-of-type']]);\n/**\n * @param {parser.Pseudo} selector\n * @return {void}\n */\n\nfunction pseudo(selector) {\n  const value = selector.value.toLowerCase();\n\n  if (selector.nodes.length === 1 && pseudoReplacements.has(value)) {\n    const first = selector.at(0);\n    const one = first.at(0);\n\n    if (first.length === 1) {\n      if (one.value === '1') {\n        selector.replaceWith(parser.pseudo({\n          value:\n          /** @type {string} */\n          pseudoReplacements.get(value)\n        }));\n      }\n\n      if (one.value && one.value.toLowerCase() === 'even') {\n        one.value = '2n';\n      }\n    }\n\n    if (first.length === 3) {\n      const two = first.at(1);\n      const three = first.at(2);\n\n      if (one.value && one.value.toLowerCase() === '2n' && two.value === '+' && three.value === '1') {\n        one.value = 'odd';\n        two.remove();\n        three.remove();\n      }\n    }\n\n    return;\n  }\n\n  selector.walk(child => {\n    if (child.type === 'selector' && child.parent) {\n      const uniques = new Set();\n      child.parent.each(sibling => {\n        const siblingStr = String(sibling);\n\n        if (!uniques.has(siblingStr)) {\n          uniques.add(siblingStr);\n        } else {\n          sibling.remove();\n        }\n      });\n    }\n  });\n\n  if (pseudoElements.has(value)) {\n    selector.value = selector.value.slice(1);\n  }\n}\n\nconst tagReplacements = new Map([['from', '0%'], ['100%', 'to']]);\n/**\n * @param {parser.Tag} selector\n * @return {void}\n */\n\nfunction tag(selector) {\n  const value = selector.value.toLowerCase();\n\n  if (tagReplacements.has(value)) {\n    selector.value =\n    /** @type {string} */\n    tagReplacements.get(value);\n  }\n}\n/**\n * @param {parser.Universal} selector\n * @return {void}\n */\n\n\nfunction universal(selector) {\n  const next = selector.next();\n\n  if (next && next.type !== 'combinator') {\n    selector.remove();\n  }\n}\n\nconst reducers = new Map(\n/** @type {[string, ((selector: parser.Node) => void)][]}*/\n[['attribute', attribute], ['combinator', combinator], ['pseudo', pseudo], ['tag', tag], ['universal', universal]]);\n/**\n * @type {import('postcss').PluginCreator<void>}\n * @return {import('postcss').Plugin}\n */\n\nfunction pluginCreator() {\n  return {\n    postcssPlugin: 'postcss-minify-selectors',\n\n    OnceExit(css) {\n      const cache = new Map();\n      const processor = parser(selectors => {\n        const uniqueSelectors = new Set();\n        selectors.walk(sel => {\n          // Trim whitespace around the value\n          sel.spaces.before = sel.spaces.after = '';\n          const reducer = reducers.get(sel.type);\n\n          if (reducer !== undefined) {\n            reducer(sel);\n            return;\n          }\n\n          const toString = String(sel);\n\n          if (sel.type === 'selector' && sel.parent && sel.parent.type !== 'pseudo') {\n            if (!uniqueSelectors.has(toString)) {\n              uniqueSelectors.add(toString);\n            } else {\n              sel.remove();\n            }\n          }\n        });\n        selectors.nodes.sort();\n      });\n      css.walkRules(rule => {\n        const selector = rule.raws.selector && rule.raws.selector.value === rule.selector ? rule.raws.selector.raw : rule.selector; // If the selector ends with a ':' it is likely a part of a custom mixin,\n        // so just pass through.\n\n        if (selector[selector.length - 1] === ':') {\n          return;\n        }\n\n        if (cache.has(selector)) {\n          rule.selector = cache.get(selector);\n          return;\n        }\n\n        const optimizedSelector = processor.processSync(selector);\n        rule.selector = optimizedSelector;\n        cache.set(selector, optimizedSelector);\n      });\n    }\n\n  };\n}\n\npluginCreator.postcss = true;\nmodule.exports = pluginCreator;","map":{"version":3,"names":["parser","require","canUnquote","pseudoElements","Set","attribute","selector","value","raws","replace","trim","quoteMark","operator","rawSpaceBefore","rawSpaceAfter","spaces","before","after","insensitive","combinator","length","pseudoReplacements","Map","pseudo","toLowerCase","nodes","has","first","at","one","replaceWith","get","two","three","remove","walk","child","type","parent","uniques","each","sibling","siblingStr","String","add","slice","tagReplacements","tag","universal","next","reducers","pluginCreator","postcssPlugin","OnceExit","css","cache","processor","selectors","uniqueSelectors","sel","reducer","undefined","toString","sort","walkRules","rule","raw","optimizedSelector","processSync","set","postcss","module","exports"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/postcss-minify-selectors/src/index.js"],"sourcesContent":["'use strict';\nconst parser = require('postcss-selector-parser');\nconst canUnquote = require('./lib/canUnquote.js');\n\nconst pseudoElements = new Set([\n  '::before',\n  '::after',\n  '::first-letter',\n  '::first-line',\n]);\n\n/**\n * @param {parser.Attribute} selector\n * @return {void}\n */\nfunction attribute(selector) {\n  if (selector.value) {\n    if (selector.raws.value) {\n      // Join selectors that are split over new lines\n      selector.raws.value = selector.raws.value.replace(/\\\\\\n/g, '').trim();\n    }\n    if (canUnquote(selector.value)) {\n      selector.quoteMark = null;\n    }\n\n    if (selector.operator) {\n      selector.operator = /** @type {parser.AttributeOperator} */ (\n        selector.operator.trim()\n      );\n    }\n  }\n\n  selector.rawSpaceBefore = '';\n  selector.rawSpaceAfter = '';\n  selector.spaces.attribute = { before: '', after: '' };\n  selector.spaces.operator = { before: '', after: '' };\n  selector.spaces.value = {\n    before: '',\n    after: selector.insensitive ? ' ' : '',\n  };\n\n  if (selector.raws.spaces) {\n    selector.raws.spaces.attribute = {\n      before: '',\n      after: '',\n    };\n\n    selector.raws.spaces.operator = {\n      before: '',\n      after: '',\n    };\n\n    selector.raws.spaces.value = {\n      before: '',\n      after: selector.insensitive ? ' ' : '',\n    };\n\n    if (selector.insensitive) {\n      selector.raws.spaces.insensitive = {\n        before: '',\n        after: '',\n      };\n    }\n  }\n\n  selector.attribute = selector.attribute.trim();\n}\n\n/**\n * @param {parser.Combinator} selector\n * @return {void}\n */\nfunction combinator(selector) {\n  const value = selector.value.trim();\n  selector.spaces.before = '';\n  selector.spaces.after = '';\n  selector.rawSpaceBefore = '';\n  selector.rawSpaceAfter = '';\n  selector.value = value.length ? value : ' ';\n}\n\nconst pseudoReplacements = new Map([\n  [':nth-child', ':first-child'],\n  [':nth-of-type', ':first-of-type'],\n  [':nth-last-child', ':last-child'],\n  [':nth-last-of-type', ':last-of-type'],\n]);\n\n/**\n * @param {parser.Pseudo} selector\n * @return {void}\n */\nfunction pseudo(selector) {\n  const value = selector.value.toLowerCase();\n\n  if (selector.nodes.length === 1 && pseudoReplacements.has(value)) {\n    const first = selector.at(0);\n    const one = first.at(0);\n\n    if (first.length === 1) {\n      if (one.value === '1') {\n        selector.replaceWith(\n          parser.pseudo({\n            value: /** @type {string} */ (pseudoReplacements.get(value)),\n          })\n        );\n      }\n\n      if (one.value && one.value.toLowerCase() === 'even') {\n        one.value = '2n';\n      }\n    }\n\n    if (first.length === 3) {\n      const two = first.at(1);\n      const three = first.at(2);\n\n      if (\n        one.value &&\n        one.value.toLowerCase() === '2n' &&\n        two.value === '+' &&\n        three.value === '1'\n      ) {\n        one.value = 'odd';\n\n        two.remove();\n        three.remove();\n      }\n    }\n\n    return;\n  }\n\n  selector.walk((child) => {\n    if (child.type === 'selector' && child.parent) {\n      const uniques = new Set();\n      child.parent.each((sibling) => {\n        const siblingStr = String(sibling);\n\n        if (!uniques.has(siblingStr)) {\n          uniques.add(siblingStr);\n        } else {\n          sibling.remove();\n        }\n      });\n    }\n  });\n\n  if (pseudoElements.has(value)) {\n    selector.value = selector.value.slice(1);\n  }\n}\n\nconst tagReplacements = new Map([\n  ['from', '0%'],\n  ['100%', 'to'],\n]);\n\n/**\n * @param {parser.Tag} selector\n * @return {void}\n */\nfunction tag(selector) {\n  const value = selector.value.toLowerCase();\n\n  if (tagReplacements.has(value)) {\n    selector.value = /** @type {string} */ (tagReplacements.get(value));\n  }\n}\n\n/**\n * @param {parser.Universal} selector\n * @return {void}\n */\nfunction universal(selector) {\n  const next = selector.next();\n\n  if (next && next.type !== 'combinator') {\n    selector.remove();\n  }\n}\n\nconst reducers = new Map(\n  /** @type {[string, ((selector: parser.Node) => void)][]}*/ ([\n    ['attribute', attribute],\n    ['combinator', combinator],\n    ['pseudo', pseudo],\n    ['tag', tag],\n    ['universal', universal],\n  ])\n);\n\n/**\n * @type {import('postcss').PluginCreator<void>}\n * @return {import('postcss').Plugin}\n */\nfunction pluginCreator() {\n  return {\n    postcssPlugin: 'postcss-minify-selectors',\n\n    OnceExit(css) {\n      const cache = new Map();\n      const processor = parser((selectors) => {\n        const uniqueSelectors = new Set();\n\n        selectors.walk((sel) => {\n          // Trim whitespace around the value\n          sel.spaces.before = sel.spaces.after = '';\n          const reducer = reducers.get(sel.type);\n          if (reducer !== undefined) {\n            reducer(sel);\n            return;\n          }\n\n          const toString = String(sel);\n\n          if (\n            sel.type === 'selector' &&\n            sel.parent &&\n            sel.parent.type !== 'pseudo'\n          ) {\n            if (!uniqueSelectors.has(toString)) {\n              uniqueSelectors.add(toString);\n            } else {\n              sel.remove();\n            }\n          }\n        });\n        selectors.nodes.sort();\n      });\n\n      css.walkRules((rule) => {\n        const selector =\n          rule.raws.selector && rule.raws.selector.value === rule.selector\n            ? rule.raws.selector.raw\n            : rule.selector;\n\n        // If the selector ends with a ':' it is likely a part of a custom mixin,\n        // so just pass through.\n        if (selector[selector.length - 1] === ':') {\n          return;\n        }\n\n        if (cache.has(selector)) {\n          rule.selector = cache.get(selector);\n\n          return;\n        }\n\n        const optimizedSelector = processor.processSync(selector);\n\n        rule.selector = optimizedSelector;\n        cache.set(selector, optimizedSelector);\n      });\n    },\n  };\n}\n\npluginCreator.postcss = true;\nmodule.exports = pluginCreator;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}