{"ast":null,"code":"'use strict';\n\nvar $ = require('../internals/export');\n\nvar uncurryThis = require('../internals/function-uncurry-this');\n\nvar toString = require('../internals/to-string');\n\nvar charAt = uncurryThis(''.charAt);\nvar charCodeAt = uncurryThis(''.charCodeAt);\nvar exec = uncurryThis(/./.exec);\nvar numberToString = uncurryThis(1.0.toString);\nvar toUpperCase = uncurryThis(''.toUpperCase);\nvar raw = /[\\w*+\\-./@]/;\n\nvar hex = function (code, length) {\n  var result = numberToString(code, 16);\n\n  while (result.length < length) result = '0' + result;\n\n  return result;\n}; // `escape` method\n// https://tc39.es/ecma262/#sec-escape-string\n\n\n$({\n  global: true\n}, {\n  escape: function escape(string) {\n    var str = toString(string);\n    var result = '';\n    var length = str.length;\n    var index = 0;\n    var chr, code;\n\n    while (index < length) {\n      chr = charAt(str, index++);\n\n      if (exec(raw, chr)) {\n        result += chr;\n      } else {\n        code = charCodeAt(chr, 0);\n\n        if (code < 256) {\n          result += '%' + hex(code, 2);\n        } else {\n          result += '%u' + toUpperCase(hex(code, 4));\n        }\n      }\n    }\n\n    return result;\n  }\n});","map":{"version":3,"names":["$","require","uncurryThis","toString","charAt","charCodeAt","exec","numberToString","toUpperCase","raw","hex","code","length","result","global","escape","string","str","index","chr"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/core-js-pure/modules/es.escape.js"],"sourcesContent":["'use strict';\nvar $ = require('../internals/export');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar toString = require('../internals/to-string');\n\nvar charAt = uncurryThis(''.charAt);\nvar charCodeAt = uncurryThis(''.charCodeAt);\nvar exec = uncurryThis(/./.exec);\nvar numberToString = uncurryThis(1.0.toString);\nvar toUpperCase = uncurryThis(''.toUpperCase);\n\nvar raw = /[\\w*+\\-./@]/;\n\nvar hex = function (code, length) {\n  var result = numberToString(code, 16);\n  while (result.length < length) result = '0' + result;\n  return result;\n};\n\n// `escape` method\n// https://tc39.es/ecma262/#sec-escape-string\n$({ global: true }, {\n  escape: function escape(string) {\n    var str = toString(string);\n    var result = '';\n    var length = str.length;\n    var index = 0;\n    var chr, code;\n    while (index < length) {\n      chr = charAt(str, index++);\n      if (exec(raw, chr)) {\n        result += chr;\n      } else {\n        code = charCodeAt(chr, 0);\n        if (code < 256) {\n          result += '%' + hex(code, 2);\n        } else {\n          result += '%u' + toUpperCase(hex(code, 4));\n        }\n      }\n    } return result;\n  }\n});\n"],"mappings":"AAAA;;AACA,IAAIA,CAAC,GAAGC,OAAO,CAAC,qBAAD,CAAf;;AACA,IAAIC,WAAW,GAAGD,OAAO,CAAC,oCAAD,CAAzB;;AACA,IAAIE,QAAQ,GAAGF,OAAO,CAAC,wBAAD,CAAtB;;AAEA,IAAIG,MAAM,GAAGF,WAAW,CAAC,GAAGE,MAAJ,CAAxB;AACA,IAAIC,UAAU,GAAGH,WAAW,CAAC,GAAGG,UAAJ,CAA5B;AACA,IAAIC,IAAI,GAAGJ,WAAW,CAAC,IAAII,IAAL,CAAtB;AACA,IAAIC,cAAc,GAAGL,WAAW,CAAC,IAAIC,QAAL,CAAhC;AACA,IAAIK,WAAW,GAAGN,WAAW,CAAC,GAAGM,WAAJ,CAA7B;AAEA,IAAIC,GAAG,GAAG,aAAV;;AAEA,IAAIC,GAAG,GAAG,UAAUC,IAAV,EAAgBC,MAAhB,EAAwB;EAChC,IAAIC,MAAM,GAAGN,cAAc,CAACI,IAAD,EAAO,EAAP,CAA3B;;EACA,OAAOE,MAAM,CAACD,MAAP,GAAgBA,MAAvB,EAA+BC,MAAM,GAAG,MAAMA,MAAf;;EAC/B,OAAOA,MAAP;AACD,CAJD,C,CAMA;AACA;;;AACAb,CAAC,CAAC;EAAEc,MAAM,EAAE;AAAV,CAAD,EAAmB;EAClBC,MAAM,EAAE,SAASA,MAAT,CAAgBC,MAAhB,EAAwB;IAC9B,IAAIC,GAAG,GAAGd,QAAQ,CAACa,MAAD,CAAlB;IACA,IAAIH,MAAM,GAAG,EAAb;IACA,IAAID,MAAM,GAAGK,GAAG,CAACL,MAAjB;IACA,IAAIM,KAAK,GAAG,CAAZ;IACA,IAAIC,GAAJ,EAASR,IAAT;;IACA,OAAOO,KAAK,GAAGN,MAAf,EAAuB;MACrBO,GAAG,GAAGf,MAAM,CAACa,GAAD,EAAMC,KAAK,EAAX,CAAZ;;MACA,IAAIZ,IAAI,CAACG,GAAD,EAAMU,GAAN,CAAR,EAAoB;QAClBN,MAAM,IAAIM,GAAV;MACD,CAFD,MAEO;QACLR,IAAI,GAAGN,UAAU,CAACc,GAAD,EAAM,CAAN,CAAjB;;QACA,IAAIR,IAAI,GAAG,GAAX,EAAgB;UACdE,MAAM,IAAI,MAAMH,GAAG,CAACC,IAAD,EAAO,CAAP,CAAnB;QACD,CAFD,MAEO;UACLE,MAAM,IAAI,OAAOL,WAAW,CAACE,GAAG,CAACC,IAAD,EAAO,CAAP,CAAJ,CAA5B;QACD;MACF;IACF;;IAAC,OAAOE,MAAP;EACH;AApBiB,CAAnB,CAAD"},"metadata":{},"sourceType":"script"}