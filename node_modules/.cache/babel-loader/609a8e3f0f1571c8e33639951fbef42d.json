{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst limitNumber_1 = require(\"./limitNumber\");\n\nconst multipleOf_1 = require(\"./multipleOf\");\n\nconst limitLength_1 = require(\"./limitLength\");\n\nconst pattern_1 = require(\"./pattern\");\n\nconst limitProperties_1 = require(\"./limitProperties\");\n\nconst required_1 = require(\"./required\");\n\nconst limitItems_1 = require(\"./limitItems\");\n\nconst uniqueItems_1 = require(\"./uniqueItems\");\n\nconst const_1 = require(\"./const\");\n\nconst enum_1 = require(\"./enum\");\n\nconst validation = [// number\nlimitNumber_1.default, multipleOf_1.default, // string\nlimitLength_1.default, pattern_1.default, // object\nlimitProperties_1.default, required_1.default, // array\nlimitItems_1.default, uniqueItems_1.default, // any\n{\n  keyword: \"type\",\n  schemaType: [\"string\", \"array\"]\n}, {\n  keyword: \"nullable\",\n  schemaType: \"boolean\"\n}, const_1.default, enum_1.default];\nexports.default = validation;","map":{"version":3,"mappings":";;;;;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA,MAAMA,UAAU,GAAe,CAC7B;AACAC,qBAF6B,EAG7BC,oBAH6B,EAI7B;AACAC,qBAL6B,EAM7BC,iBAN6B,EAO7B;AACAC,yBAR6B,EAS7BC,kBAT6B,EAU7B;AACAC,oBAX6B,EAY7BC,qBAZ6B,EAa7B;AACA;EAACC,OAAO,EAAE,MAAV;EAAkBC,UAAU,EAAE,CAAC,QAAD,EAAW,OAAX;AAA9B,CAd6B,EAe7B;EAACD,OAAO,EAAE,UAAV;EAAsBC,UAAU,EAAE;AAAlC,CAf6B,EAgB7BC,eAhB6B,EAiB7BC,cAjB6B,CAA/B;AAoBAC,kBAAeb,UAAf","names":["validation","limitNumber_1","multipleOf_1","limitLength_1","pattern_1","limitProperties_1","required_1","limitItems_1","uniqueItems_1","keyword","schemaType","const_1","enum_1","exports"],"sources":["C:\\Users\\Rohith\\mern\\frontend\\node_modules\\eslint-webpack-plugin\\node_modules\\ajv\\lib\\vocabularies\\validation\\index.ts"],"sourcesContent":["import type {ErrorObject, Vocabulary} from \"../../types\"\nimport limitNumber, {LimitNumberError} from \"./limitNumber\"\nimport multipleOf, {MultipleOfError} from \"./multipleOf\"\nimport limitLength from \"./limitLength\"\nimport pattern, {PatternError} from \"./pattern\"\nimport limitProperties from \"./limitProperties\"\nimport required, {RequiredError} from \"./required\"\nimport limitItems from \"./limitItems\"\nimport uniqueItems, {UniqueItemsError} from \"./uniqueItems\"\nimport constKeyword, {ConstError} from \"./const\"\nimport enumKeyword, {EnumError} from \"./enum\"\n\nconst validation: Vocabulary = [\n  // number\n  limitNumber,\n  multipleOf,\n  // string\n  limitLength,\n  pattern,\n  // object\n  limitProperties,\n  required,\n  // array\n  limitItems,\n  uniqueItems,\n  // any\n  {keyword: \"type\", schemaType: [\"string\", \"array\"]},\n  {keyword: \"nullable\", schemaType: \"boolean\"},\n  constKeyword,\n  enumKeyword,\n]\n\nexport default validation\n\ntype LimitError = ErrorObject<\n  \"maxItems\" | \"minItems\" | \"minProperties\" | \"maxProperties\" | \"minLength\" | \"maxLength\",\n  {limit: number},\n  number | {$data: string}\n>\n\nexport type ValidationKeywordError =\n  | LimitError\n  | LimitNumberError\n  | MultipleOfError\n  | PatternError\n  | RequiredError\n  | UniqueItemsError\n  | ConstError\n  | EnumError\n"]},"metadata":{},"sourceType":"script"}