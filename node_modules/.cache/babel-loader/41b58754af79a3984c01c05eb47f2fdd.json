{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getLanguageVariant = exports.getScriptKind = void 0;\n\nconst path_1 = __importDefault(require(\"path\"));\n\nconst ts = __importStar(require(\"typescript\"));\n\nfunction getScriptKind(filePath, jsx) {\n  const extension = path_1.default.extname(filePath).toLowerCase(); // note - we only respect the user's jsx setting for unknown extensions\n  // this is so that we always match TS's internal script kind logic, preventing\n  // weird errors due to a mismatch.\n  // https://github.com/microsoft/TypeScript/blob/da00ba67ed1182ad334f7c713b8254fba174aeba/src/compiler/utilities.ts#L6948-L6968\n\n  switch (extension) {\n    case ts.Extension.Js:\n    case ts.Extension.Cjs:\n    case ts.Extension.Mjs:\n      return ts.ScriptKind.JS;\n\n    case ts.Extension.Jsx:\n      return ts.ScriptKind.JSX;\n\n    case ts.Extension.Ts:\n    case ts.Extension.Cts:\n    case ts.Extension.Mts:\n      return ts.ScriptKind.TS;\n\n    case ts.Extension.Tsx:\n      return ts.ScriptKind.TSX;\n\n    case ts.Extension.Json:\n      return ts.ScriptKind.JSON;\n\n    default:\n      // unknown extension, force typescript to ignore the file extension, and respect the user's setting\n      return jsx ? ts.ScriptKind.TSX : ts.ScriptKind.TS;\n  }\n}\n\nexports.getScriptKind = getScriptKind;\n\nfunction getLanguageVariant(scriptKind) {\n  // https://github.com/microsoft/TypeScript/blob/d6e483b8dabd8fd37c00954c3f2184bb7f1eb90c/src/compiler/utilities.ts#L6281-L6285\n  switch (scriptKind) {\n    case ts.ScriptKind.TSX:\n    case ts.ScriptKind.JSX:\n    case ts.ScriptKind.JS:\n    case ts.ScriptKind.JSON:\n      return ts.LanguageVariant.JSX;\n\n    default:\n      return ts.LanguageVariant.Standard;\n  }\n}\n\nexports.getLanguageVariant = getLanguageVariant;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AAEA,SAASA,aAAT,CAAuBC,QAAvB,EAAyCC,GAAzC,EAAqD;EACnD,MAAMC,SAAS,GAAGC,eAAKC,OAAL,CAAaJ,QAAb,EAAuBK,WAAvB,EAAlB,CADmD,CAEnD;EACA;EACA;EACA;;EACA,QAAQH,SAAR;IACE,KAAKI,EAAE,CAACC,SAAH,CAAaC,EAAlB;IACA,KAAKF,EAAE,CAACC,SAAH,CAAaE,GAAlB;IACA,KAAKH,EAAE,CAACC,SAAH,CAAaG,GAAlB;MACE,OAAOJ,EAAE,CAACK,UAAH,CAAcC,EAArB;;IAEF,KAAKN,EAAE,CAACC,SAAH,CAAaM,GAAlB;MACE,OAAOP,EAAE,CAACK,UAAH,CAAcG,GAArB;;IAEF,KAAKR,EAAE,CAACC,SAAH,CAAaQ,EAAlB;IACA,KAAKT,EAAE,CAACC,SAAH,CAAaS,GAAlB;IACA,KAAKV,EAAE,CAACC,SAAH,CAAaU,GAAlB;MACE,OAAOX,EAAE,CAACK,UAAH,CAAcO,EAArB;;IAEF,KAAKZ,EAAE,CAACC,SAAH,CAAaY,GAAlB;MACE,OAAOb,EAAE,CAACK,UAAH,CAAcS,GAArB;;IAEF,KAAKd,EAAE,CAACC,SAAH,CAAac,IAAlB;MACE,OAAOf,EAAE,CAACK,UAAH,CAAcW,IAArB;;IAEF;MACE;MACA,OAAOrB,GAAG,GAAGK,EAAE,CAACK,UAAH,CAAcS,GAAjB,GAAuBd,EAAE,CAACK,UAAH,CAAcO,EAA/C;EAtBJ;AAwBD;;AAgBQK;;AAdT,SAASC,kBAAT,CAA4BC,UAA5B,EAAqD;EACnD;EACA,QAAQA,UAAR;IACE,KAAKnB,EAAE,CAACK,UAAH,CAAcS,GAAnB;IACA,KAAKd,EAAE,CAACK,UAAH,CAAcG,GAAnB;IACA,KAAKR,EAAE,CAACK,UAAH,CAAcC,EAAnB;IACA,KAAKN,EAAE,CAACK,UAAH,CAAcW,IAAnB;MACE,OAAOhB,EAAE,CAACoB,eAAH,CAAmBZ,GAA1B;;IAEF;MACE,OAAOR,EAAE,CAACoB,eAAH,CAAmBC,QAA1B;EARJ;AAUD;;AAEuBJ","names":["getScriptKind","filePath","jsx","extension","path_1","extname","toLowerCase","ts","Extension","Js","Cjs","Mjs","ScriptKind","JS","Jsx","JSX","Ts","Cts","Mts","TS","Tsx","TSX","Json","JSON","exports","getLanguageVariant","scriptKind","LanguageVariant","Standard"],"sources":["../../src/create-program/getScriptKind.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}