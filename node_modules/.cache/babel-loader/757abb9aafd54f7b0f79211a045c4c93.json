{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.default = text;\nvar regExpNbspEntity = /&nbsp;/gi;\nvar regExpNbspHex = /\\xA0/g;\nvar regExpSpaces = /\\s+([^\\s])/gm;\n/**\n * Collects the text content of a given element.\n * \n * @param node the element\n * @param trim whether to remove trailing whitespace chars\n * @param singleSpaces whether to convert multiple whitespace chars into a single space character\n */\n\nfunction text(node, trim, singleSpaces) {\n  if (trim === void 0) {\n    trim = true;\n  }\n\n  if (singleSpaces === void 0) {\n    singleSpaces = true;\n  }\n\n  var elementText = '';\n\n  if (node) {\n    elementText = (node.textContent || '').replace(regExpNbspEntity, ' ').replace(regExpNbspHex, ' ');\n\n    if (trim) {\n      elementText = elementText.trim();\n    }\n\n    if (singleSpaces) {\n      elementText = elementText.replace(regExpSpaces, ' $1');\n    }\n  }\n\n  return elementText;\n}\n\nmodule.exports = exports[\"default\"];","map":{"version":3,"names":["exports","__esModule","default","text","regExpNbspEntity","regExpNbspHex","regExpSpaces","node","trim","singleSpaces","elementText","textContent","replace","module"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/dom-helpers/cjs/text.js"],"sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.default = text;\nvar regExpNbspEntity = /&nbsp;/gi;\nvar regExpNbspHex = /\\xA0/g;\nvar regExpSpaces = /\\s+([^\\s])/gm;\n/**\n * Collects the text content of a given element.\n * \n * @param node the element\n * @param trim whether to remove trailing whitespace chars\n * @param singleSpaces whether to convert multiple whitespace chars into a single space character\n */\n\nfunction text(node, trim, singleSpaces) {\n  if (trim === void 0) {\n    trim = true;\n  }\n\n  if (singleSpaces === void 0) {\n    singleSpaces = true;\n  }\n\n  var elementText = '';\n\n  if (node) {\n    elementText = (node.textContent || '').replace(regExpNbspEntity, ' ').replace(regExpNbspHex, ' ');\n\n    if (trim) {\n      elementText = elementText.trim();\n    }\n\n    if (singleSpaces) {\n      elementText = elementText.replace(regExpSpaces, ' $1');\n    }\n  }\n\n  return elementText;\n}\n\nmodule.exports = exports[\"default\"];"],"mappings":"AAAA;;AAEAA,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAACE,OAAR,GAAkBC,IAAlB;AACA,IAAIC,gBAAgB,GAAG,UAAvB;AACA,IAAIC,aAAa,GAAG,OAApB;AACA,IAAIC,YAAY,GAAG,cAAnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASH,IAAT,CAAcI,IAAd,EAAoBC,IAApB,EAA0BC,YAA1B,EAAwC;EACtC,IAAID,IAAI,KAAK,KAAK,CAAlB,EAAqB;IACnBA,IAAI,GAAG,IAAP;EACD;;EAED,IAAIC,YAAY,KAAK,KAAK,CAA1B,EAA6B;IAC3BA,YAAY,GAAG,IAAf;EACD;;EAED,IAAIC,WAAW,GAAG,EAAlB;;EAEA,IAAIH,IAAJ,EAAU;IACRG,WAAW,GAAG,CAACH,IAAI,CAACI,WAAL,IAAoB,EAArB,EAAyBC,OAAzB,CAAiCR,gBAAjC,EAAmD,GAAnD,EAAwDQ,OAAxD,CAAgEP,aAAhE,EAA+E,GAA/E,CAAd;;IAEA,IAAIG,IAAJ,EAAU;MACRE,WAAW,GAAGA,WAAW,CAACF,IAAZ,EAAd;IACD;;IAED,IAAIC,YAAJ,EAAkB;MAChBC,WAAW,GAAGA,WAAW,CAACE,OAAZ,CAAoBN,YAApB,EAAkC,KAAlC,CAAd;IACD;EACF;;EAED,OAAOI,WAAP;AACD;;AAEDG,MAAM,CAACb,OAAP,GAAiBA,OAAO,CAAC,SAAD,CAAxB"},"metadata":{},"sourceType":"script"}