{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _utils = require(\"../utils\");\n\nvar _default = callProvider => {\n  function property(object, key, placement, path) {\n    return callProvider({\n      kind: \"property\",\n      object,\n      key,\n      placement\n    }, path);\n  }\n\n  return {\n    // Symbol(), new Promise\n    ReferencedIdentifier(path) {\n      const {\n        node: {\n          name\n        },\n        scope\n      } = path;\n      if (scope.getBindingIdentifier(name)) return;\n      callProvider({\n        kind: \"global\",\n        name\n      }, path);\n    },\n\n    MemberExpression(path) {\n      const key = (0, _utils.resolveKey)(path.get(\"property\"), path.node.computed);\n      if (!key || key === \"prototype\") return;\n      const object = path.get(\"object\");\n\n      if (object.isIdentifier()) {\n        const binding = object.scope.getBinding(object.node.name);\n        if (binding && binding.path.isImportNamespaceSpecifier()) return;\n      }\n\n      const source = (0, _utils.resolveSource)(object);\n      return property(source.id, key, source.placement, path);\n    },\n\n    ObjectPattern(path) {\n      const {\n        parentPath,\n        parent\n      } = path;\n      let obj; // const { keys, values } = Object\n\n      if (parentPath.isVariableDeclarator()) {\n        obj = parentPath.get(\"init\"); // ({ keys, values } = Object)\n      } else if (parentPath.isAssignmentExpression()) {\n        obj = parentPath.get(\"right\"); // !function ({ keys, values }) {...} (Object)\n        // resolution does not work after properties transform :-(\n      } else if (parentPath.isFunction()) {\n        const grand = parentPath.parentPath;\n\n        if (grand.isCallExpression() || grand.isNewExpression()) {\n          if (grand.node.callee === parent) {\n            obj = grand.get(\"arguments\")[path.key];\n          }\n        }\n      }\n\n      let id = null;\n      let placement = null;\n      if (obj) ({\n        id,\n        placement\n      } = (0, _utils.resolveSource)(obj));\n\n      for (const prop of path.get(\"properties\")) {\n        if (prop.isObjectProperty()) {\n          const key = (0, _utils.resolveKey)(prop.get(\"key\"));\n          if (key) property(id, key, placement, prop);\n        }\n      }\n    },\n\n    BinaryExpression(path) {\n      if (path.node.operator !== \"in\") return;\n      const source = (0, _utils.resolveSource)(path.get(\"right\"));\n      const key = (0, _utils.resolveKey)(path.get(\"left\"), true);\n      if (!key) return;\n      callProvider({\n        kind: \"in\",\n        object: source.id,\n        key,\n        placement: source.placement\n      }, path);\n    }\n\n  };\n};\n\nexports.default = _default;","map":{"version":3,"names":["exports","__esModule","default","_utils","require","_default","callProvider","property","object","key","placement","path","kind","ReferencedIdentifier","node","name","scope","getBindingIdentifier","MemberExpression","resolveKey","get","computed","isIdentifier","binding","getBinding","isImportNamespaceSpecifier","source","resolveSource","id","ObjectPattern","parentPath","parent","obj","isVariableDeclarator","isAssignmentExpression","isFunction","grand","isCallExpression","isNewExpression","callee","prop","isObjectProperty","BinaryExpression","operator"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/@babel/helper-define-polyfill-provider/lib/visitors/usage.js"],"sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _utils = require(\"../utils\");\n\nvar _default = callProvider => {\n  function property(object, key, placement, path) {\n    return callProvider({\n      kind: \"property\",\n      object,\n      key,\n      placement\n    }, path);\n  }\n\n  return {\n    // Symbol(), new Promise\n    ReferencedIdentifier(path) {\n      const {\n        node: {\n          name\n        },\n        scope\n      } = path;\n      if (scope.getBindingIdentifier(name)) return;\n      callProvider({\n        kind: \"global\",\n        name\n      }, path);\n    },\n\n    MemberExpression(path) {\n      const key = (0, _utils.resolveKey)(path.get(\"property\"), path.node.computed);\n      if (!key || key === \"prototype\") return;\n      const object = path.get(\"object\");\n\n      if (object.isIdentifier()) {\n        const binding = object.scope.getBinding(object.node.name);\n        if (binding && binding.path.isImportNamespaceSpecifier()) return;\n      }\n\n      const source = (0, _utils.resolveSource)(object);\n      return property(source.id, key, source.placement, path);\n    },\n\n    ObjectPattern(path) {\n      const {\n        parentPath,\n        parent\n      } = path;\n      let obj; // const { keys, values } = Object\n\n      if (parentPath.isVariableDeclarator()) {\n        obj = parentPath.get(\"init\"); // ({ keys, values } = Object)\n      } else if (parentPath.isAssignmentExpression()) {\n        obj = parentPath.get(\"right\"); // !function ({ keys, values }) {...} (Object)\n        // resolution does not work after properties transform :-(\n      } else if (parentPath.isFunction()) {\n        const grand = parentPath.parentPath;\n\n        if (grand.isCallExpression() || grand.isNewExpression()) {\n          if (grand.node.callee === parent) {\n            obj = grand.get(\"arguments\")[path.key];\n          }\n        }\n      }\n\n      let id = null;\n      let placement = null;\n      if (obj) ({\n        id,\n        placement\n      } = (0, _utils.resolveSource)(obj));\n\n      for (const prop of path.get(\"properties\")) {\n        if (prop.isObjectProperty()) {\n          const key = (0, _utils.resolveKey)(prop.get(\"key\"));\n          if (key) property(id, key, placement, prop);\n        }\n      }\n    },\n\n    BinaryExpression(path) {\n      if (path.node.operator !== \"in\") return;\n      const source = (0, _utils.resolveSource)(path.get(\"right\"));\n      const key = (0, _utils.resolveKey)(path.get(\"left\"), true);\n      if (!key) return;\n      callProvider({\n        kind: \"in\",\n        object: source.id,\n        key,\n        placement: source.placement\n      }, path);\n    }\n\n  };\n};\n\nexports.default = _default;"],"mappings":"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"},"metadata":{},"sourceType":"script"}