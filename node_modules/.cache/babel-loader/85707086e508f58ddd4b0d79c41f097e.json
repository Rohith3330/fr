{"ast":null,"code":"/*\n * MIT License http://opensource.org/licenses/MIT\n * Author: Ben Holloway @bholloway\n */\n'use strict';\n/**\n * Given a sourcemap position create a new maybeObject with only line and column properties.\n *\n * @param {*|{line: number, column: number}} maybeObj Possible location hash\n * @returns {{line: number, column: number}} Location hash with possible NaN values\n */\n\nfunction sanitise(maybeObj) {\n  var obj = !!maybeObj && typeof maybeObj === 'object' && maybeObj || {};\n  return {\n    line: isNaN(obj.line) ? NaN : obj.line,\n    column: isNaN(obj.column) ? NaN : obj.column\n  };\n}\n\nexports.sanitise = sanitise;\n/**\n * Infer a line and position delta based on the linebreaks in the given string.\n *\n * @param candidate {string} A string with possible linebreaks\n * @returns {{line: number, column: number}} A position object where line and column are deltas\n */\n\nfunction strToOffset(candidate) {\n  var split = candidate.split(/\\r\\n|\\n/g);\n  var last = split[split.length - 1];\n  return {\n    line: split.length - 1,\n    column: last.length\n  };\n}\n\nexports.strToOffset = strToOffset;\n/**\n * Add together a list of position elements.\n *\n * Lines are added. If the new line is zero the column is added otherwise it is overwritten.\n *\n * @param {{line: number, column: number}[]} list One or more sourcemap position elements to add\n * @returns {{line: number, column: number}} Resultant position element\n */\n\nfunction add(list) {\n  return list.slice(1).reduce(function (accumulator, element) {\n    return {\n      line: accumulator.line + element.line,\n      column: element.line > 0 ? element.column : accumulator.column + element.column\n    };\n  }, list[0]);\n}\n\nexports.add = add;","map":{"version":3,"names":["sanitise","maybeObj","obj","line","isNaN","NaN","column","exports","strToOffset","candidate","split","last","length","add","list","slice","reduce","accumulator","element"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/resolve-url-loader/lib/position-algerbra.js"],"sourcesContent":["/*\n * MIT License http://opensource.org/licenses/MIT\n * Author: Ben Holloway @bholloway\n */\n'use strict';\n\n/**\n * Given a sourcemap position create a new maybeObject with only line and column properties.\n *\n * @param {*|{line: number, column: number}} maybeObj Possible location hash\n * @returns {{line: number, column: number}} Location hash with possible NaN values\n */\nfunction sanitise(maybeObj) {\n  var obj = !!maybeObj && typeof maybeObj === 'object' && maybeObj || {};\n  return {\n    line: isNaN(obj.line) ? NaN : obj.line,\n    column: isNaN(obj.column) ? NaN : obj.column\n  };\n}\n\nexports.sanitise = sanitise;\n\n/**\n * Infer a line and position delta based on the linebreaks in the given string.\n *\n * @param candidate {string} A string with possible linebreaks\n * @returns {{line: number, column: number}} A position object where line and column are deltas\n */\nfunction strToOffset(candidate) {\n  var split = candidate.split(/\\r\\n|\\n/g);\n  var last  = split[split.length - 1];\n  return {\n    line: split.length - 1,\n    column: last.length\n  };\n}\n\nexports.strToOffset = strToOffset;\n\n/**\n * Add together a list of position elements.\n *\n * Lines are added. If the new line is zero the column is added otherwise it is overwritten.\n *\n * @param {{line: number, column: number}[]} list One or more sourcemap position elements to add\n * @returns {{line: number, column: number}} Resultant position element\n */\nfunction add(list) {\n  return list\n    .slice(1)\n    .reduce(\n      function (accumulator, element) {\n        return {\n          line: accumulator.line + element.line,\n          column: element.line > 0 ? element.column : accumulator.column + element.column,\n        };\n      },\n      list[0]\n    );\n}\n\nexports.add = add;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASA,QAAT,CAAkBC,QAAlB,EAA4B;EAC1B,IAAIC,GAAG,GAAG,CAAC,CAACD,QAAF,IAAc,OAAOA,QAAP,KAAoB,QAAlC,IAA8CA,QAA9C,IAA0D,EAApE;EACA,OAAO;IACLE,IAAI,EAAEC,KAAK,CAACF,GAAG,CAACC,IAAL,CAAL,GAAkBE,GAAlB,GAAwBH,GAAG,CAACC,IAD7B;IAELG,MAAM,EAAEF,KAAK,CAACF,GAAG,CAACI,MAAL,CAAL,GAAoBD,GAApB,GAA0BH,GAAG,CAACI;EAFjC,CAAP;AAID;;AAEDC,OAAO,CAACP,QAAR,GAAmBA,QAAnB;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASQ,WAAT,CAAqBC,SAArB,EAAgC;EAC9B,IAAIC,KAAK,GAAGD,SAAS,CAACC,KAAV,CAAgB,UAAhB,CAAZ;EACA,IAAIC,IAAI,GAAID,KAAK,CAACA,KAAK,CAACE,MAAN,GAAe,CAAhB,CAAjB;EACA,OAAO;IACLT,IAAI,EAAEO,KAAK,CAACE,MAAN,GAAe,CADhB;IAELN,MAAM,EAAEK,IAAI,CAACC;EAFR,CAAP;AAID;;AAEDL,OAAO,CAACC,WAAR,GAAsBA,WAAtB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASK,GAAT,CAAaC,IAAb,EAAmB;EACjB,OAAOA,IAAI,CACRC,KADI,CACE,CADF,EAEJC,MAFI,CAGH,UAAUC,WAAV,EAAuBC,OAAvB,EAAgC;IAC9B,OAAO;MACLf,IAAI,EAAEc,WAAW,CAACd,IAAZ,GAAmBe,OAAO,CAACf,IAD5B;MAELG,MAAM,EAAEY,OAAO,CAACf,IAAR,GAAe,CAAf,GAAmBe,OAAO,CAACZ,MAA3B,GAAoCW,WAAW,CAACX,MAAZ,GAAqBY,OAAO,CAACZ;IAFpE,CAAP;EAID,CARE,EASHQ,IAAI,CAAC,CAAD,CATD,CAAP;AAWD;;AAEDP,OAAO,CAACM,GAAR,GAAcA,GAAd"},"metadata":{},"sourceType":"script"}