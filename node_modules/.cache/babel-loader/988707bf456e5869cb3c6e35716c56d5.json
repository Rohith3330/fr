{"ast":null,"code":"/** internal\n * class ActionContainer\n *\n * Action container. Parent for [[ArgumentParser]] and [[ArgumentGroup]]\n **/\n'use strict';\n\nvar format = require('util').format; // Constants\n\n\nvar c = require('./const');\n\nvar $$ = require('./utils'); //Actions\n\n\nvar ActionHelp = require('./action/help');\n\nvar ActionAppend = require('./action/append');\n\nvar ActionAppendConstant = require('./action/append/constant');\n\nvar ActionCount = require('./action/count');\n\nvar ActionStore = require('./action/store');\n\nvar ActionStoreConstant = require('./action/store/constant');\n\nvar ActionStoreTrue = require('./action/store/true');\n\nvar ActionStoreFalse = require('./action/store/false');\n\nvar ActionVersion = require('./action/version');\n\nvar ActionSubparsers = require('./action/subparsers'); // Errors\n\n\nvar argumentErrorHelper = require('./argument/error');\n/**\n * new ActionContainer(options)\n *\n * Action container. Parent for [[ArgumentParser]] and [[ArgumentGroup]]\n *\n * ##### Options:\n *\n * - `description` -- A description of what the program does\n * - `prefixChars`  -- Characters that prefix optional arguments\n * - `argumentDefault`  -- The default value for all arguments\n * - `conflictHandler` -- The conflict handler to use for duplicate arguments\n **/\n\n\nvar ActionContainer = module.exports = function ActionContainer(options) {\n  options = options || {};\n  this.description = options.description;\n  this.argumentDefault = options.argumentDefault;\n  this.prefixChars = options.prefixChars || '';\n  this.conflictHandler = options.conflictHandler; // set up registries\n\n  this._registries = {}; // register actions\n\n  this.register('action', null, ActionStore);\n  this.register('action', 'store', ActionStore);\n  this.register('action', 'storeConst', ActionStoreConstant);\n  this.register('action', 'storeTrue', ActionStoreTrue);\n  this.register('action', 'storeFalse', ActionStoreFalse);\n  this.register('action', 'append', ActionAppend);\n  this.register('action', 'appendConst', ActionAppendConstant);\n  this.register('action', 'count', ActionCount);\n  this.register('action', 'help', ActionHelp);\n  this.register('action', 'version', ActionVersion);\n  this.register('action', 'parsers', ActionSubparsers); // raise an exception if the conflict handler is invalid\n\n  this._getHandler(); // action storage\n\n\n  this._actions = [];\n  this._optionStringActions = {}; // groups\n\n  this._actionGroups = [];\n  this._mutuallyExclusiveGroups = []; // defaults storage\n\n  this._defaults = {}; // determines whether an \"option\" looks like a negative number\n  // -1, -1.5 -5e+4\n\n  this._regexpNegativeNumber = new RegExp('^[-]?[0-9]*\\\\.?[0-9]+([eE][-+]?[0-9]+)?$'); // whether or not there are any optionals that look like negative\n  // numbers -- uses a list so it can be shared and edited\n\n  this._hasNegativeNumberOptionals = [];\n}; // Groups must be required, then ActionContainer already defined\n\n\nvar ArgumentGroup = require('./argument/group');\n\nvar MutuallyExclusiveGroup = require('./argument/exclusive'); //\n// Registration methods\n//\n\n/**\n * ActionContainer#register(registryName, value, object) -> Void\n * - registryName (String) : object type action|type\n * - value (string) : keyword\n * - object (Object|Function) : handler\n *\n *  Register handlers\n **/\n\n\nActionContainer.prototype.register = function (registryName, value, object) {\n  this._registries[registryName] = this._registries[registryName] || {};\n  this._registries[registryName][value] = object;\n};\n\nActionContainer.prototype._registryGet = function (registryName, value, defaultValue) {\n  if (arguments.length < 3) {\n    defaultValue = null;\n  }\n\n  return this._registries[registryName][value] || defaultValue;\n}; //\n// Namespace default accessor methods\n//\n\n/**\n * ActionContainer#setDefaults(options) -> Void\n * - options (object):hash of options see [[Action.new]]\n *\n * Set defaults\n **/\n\n\nActionContainer.prototype.setDefaults = function (options) {\n  options = options || {};\n\n  for (var property in options) {\n    if ($$.has(options, property)) {\n      this._defaults[property] = options[property];\n    }\n  } // if these defaults match any existing arguments, replace the previous\n  // default on the object with the new one\n\n\n  this._actions.forEach(function (action) {\n    if ($$.has(options, action.dest)) {\n      action.defaultValue = options[action.dest];\n    }\n  });\n};\n/**\n * ActionContainer#getDefault(dest) -> Mixed\n * - dest (string): action destination\n *\n * Return action default value\n **/\n\n\nActionContainer.prototype.getDefault = function (dest) {\n  var result = $$.has(this._defaults, dest) ? this._defaults[dest] : null;\n\n  this._actions.forEach(function (action) {\n    if (action.dest === dest && $$.has(action, 'defaultValue')) {\n      result = action.defaultValue;\n    }\n  });\n\n  return result;\n}; //\n// Adding argument actions\n//\n\n/**\n * ActionContainer#addArgument(args, options) -> Object\n * - args (String|Array): argument key, or array of argument keys\n * - options (Object): action objects see [[Action.new]]\n *\n * #### Examples\n * - addArgument([ '-f', '--foo' ], { action: 'store', defaultValue: 1, ... })\n * - addArgument([ 'bar' ], { action: 'store', nargs: 1, ... })\n * - addArgument('--baz', { action: 'store', nargs: 1, ... })\n **/\n\n\nActionContainer.prototype.addArgument = function (args, options) {\n  args = args;\n  options = options || {};\n\n  if (typeof args === 'string') {\n    args = [args];\n  }\n\n  if (!Array.isArray(args)) {\n    throw new TypeError('addArgument first argument should be a string or an array');\n  }\n\n  if (typeof options !== 'object' || Array.isArray(options)) {\n    throw new TypeError('addArgument second argument should be a hash');\n  } // if no positional args are supplied or only one is supplied and\n  // it doesn't look like an option string, parse a positional argument\n\n\n  if (!args || args.length === 1 && this.prefixChars.indexOf(args[0][0]) < 0) {\n    if (args && !!options.dest) {\n      throw new Error('dest supplied twice for positional argument');\n    }\n\n    options = this._getPositional(args, options); // otherwise, we're adding an optional argument\n  } else {\n    options = this._getOptional(args, options);\n  } // if no default was supplied, use the parser-level default\n\n\n  if (typeof options.defaultValue === 'undefined') {\n    var dest = options.dest;\n\n    if ($$.has(this._defaults, dest)) {\n      options.defaultValue = this._defaults[dest];\n    } else if (typeof this.argumentDefault !== 'undefined') {\n      options.defaultValue = this.argumentDefault;\n    }\n  } // create the action object, and add it to the parser\n\n\n  var ActionClass = this._popActionClass(options);\n\n  if (typeof ActionClass !== 'function') {\n    throw new Error(format('Unknown action \"%s\".', ActionClass));\n  }\n\n  var action = new ActionClass(options); // throw an error if the action type is not callable\n\n  var typeFunction = this._registryGet('type', action.type, action.type);\n\n  if (typeof typeFunction !== 'function') {\n    throw new Error(format('\"%s\" is not callable', typeFunction));\n  }\n\n  return this._addAction(action);\n};\n/**\n * ActionContainer#addArgumentGroup(options) -> ArgumentGroup\n * - options (Object): hash of options see [[ArgumentGroup.new]]\n *\n * Create new arguments groups\n **/\n\n\nActionContainer.prototype.addArgumentGroup = function (options) {\n  var group = new ArgumentGroup(this, options);\n\n  this._actionGroups.push(group);\n\n  return group;\n};\n/**\n * ActionContainer#addMutuallyExclusiveGroup(options) -> ArgumentGroup\n * - options (Object): {required: false}\n *\n * Create new mutual exclusive groups\n **/\n\n\nActionContainer.prototype.addMutuallyExclusiveGroup = function (options) {\n  var group = new MutuallyExclusiveGroup(this, options);\n\n  this._mutuallyExclusiveGroups.push(group);\n\n  return group;\n};\n\nActionContainer.prototype._addAction = function (action) {\n  var self = this; // resolve any conflicts\n\n  this._checkConflict(action); // add to actions list\n\n\n  this._actions.push(action);\n\n  action.container = this; // index the action by any option strings it has\n\n  action.optionStrings.forEach(function (optionString) {\n    self._optionStringActions[optionString] = action;\n  }); // set the flag if any option strings look like negative numbers\n\n  action.optionStrings.forEach(function (optionString) {\n    if (optionString.match(self._regexpNegativeNumber)) {\n      if (!self._hasNegativeNumberOptionals.some(Boolean)) {\n        self._hasNegativeNumberOptionals.push(true);\n      }\n    }\n  }); // return the created action\n\n  return action;\n};\n\nActionContainer.prototype._removeAction = function (action) {\n  var actionIndex = this._actions.indexOf(action);\n\n  if (actionIndex >= 0) {\n    this._actions.splice(actionIndex, 1);\n  }\n};\n\nActionContainer.prototype._addContainerActions = function (container) {\n  // collect groups by titles\n  var titleGroupMap = {};\n\n  this._actionGroups.forEach(function (group) {\n    if (titleGroupMap[group.title]) {\n      throw new Error(format('Cannot merge actions - two groups are named \"%s\".', group.title));\n    }\n\n    titleGroupMap[group.title] = group;\n  }); // map each action to its group\n\n\n  var groupMap = {};\n\n  function actionHash(action) {\n    // unique (hopefully?) string suitable as dictionary key\n    return action.getName();\n  }\n\n  container._actionGroups.forEach(function (group) {\n    // if a group with the title exists, use that, otherwise\n    // create a new group matching the container's group\n    if (!titleGroupMap[group.title]) {\n      titleGroupMap[group.title] = this.addArgumentGroup({\n        title: group.title,\n        description: group.description\n      });\n    } // map the actions to their new group\n\n\n    group._groupActions.forEach(function (action) {\n      groupMap[actionHash(action)] = titleGroupMap[group.title];\n    });\n  }, this); // add container's mutually exclusive groups\n  // NOTE: if add_mutually_exclusive_group ever gains title= and\n  // description= then this code will need to be expanded as above\n\n\n  var mutexGroup;\n\n  container._mutuallyExclusiveGroups.forEach(function (group) {\n    mutexGroup = this.addMutuallyExclusiveGroup({\n      required: group.required\n    }); // map the actions to their new mutex group\n\n    group._groupActions.forEach(function (action) {\n      groupMap[actionHash(action)] = mutexGroup;\n    });\n  }, this); // forEach takes a 'this' argument\n  // add all actions to this container or their group\n\n\n  container._actions.forEach(function (action) {\n    var key = actionHash(action);\n\n    if (groupMap[key]) {\n      groupMap[key]._addAction(action);\n    } else {\n      this._addAction(action);\n    }\n  });\n};\n\nActionContainer.prototype._getPositional = function (dest, options) {\n  if (Array.isArray(dest)) {\n    dest = dest[0];\n  } // make sure required is not specified\n\n\n  if (options.required) {\n    throw new Error('\"required\" is an invalid argument for positionals.');\n  } // mark positional arguments as required if at least one is\n  // always required\n\n\n  if (options.nargs !== c.OPTIONAL && options.nargs !== c.ZERO_OR_MORE) {\n    options.required = true;\n  }\n\n  if (options.nargs === c.ZERO_OR_MORE && typeof options.defaultValue === 'undefined') {\n    options.required = true;\n  } // return the keyword arguments with no option strings\n\n\n  options.dest = dest;\n  options.optionStrings = [];\n  return options;\n};\n\nActionContainer.prototype._getOptional = function (args, options) {\n  var prefixChars = this.prefixChars;\n  var optionStrings = [];\n  var optionStringsLong = []; // determine short and long option strings\n\n  args.forEach(function (optionString) {\n    // error on strings that don't start with an appropriate prefix\n    if (prefixChars.indexOf(optionString[0]) < 0) {\n      throw new Error(format('Invalid option string \"%s\": must start with a \"%s\".', optionString, prefixChars));\n    } // strings starting with two prefix characters are long options\n\n\n    optionStrings.push(optionString);\n\n    if (optionString.length > 1 && prefixChars.indexOf(optionString[1]) >= 0) {\n      optionStringsLong.push(optionString);\n    }\n  }); // infer dest, '--foo-bar' -> 'foo_bar' and '-x' -> 'x'\n\n  var dest = options.dest || null;\n  delete options.dest;\n\n  if (!dest) {\n    var optionStringDest = optionStringsLong.length ? optionStringsLong[0] : optionStrings[0];\n    dest = $$.trimChars(optionStringDest, this.prefixChars);\n\n    if (dest.length === 0) {\n      throw new Error(format('dest= is required for options like \"%s\"', optionStrings.join(', ')));\n    }\n\n    dest = dest.replace(/-/g, '_');\n  } // return the updated keyword arguments\n\n\n  options.dest = dest;\n  options.optionStrings = optionStrings;\n  return options;\n};\n\nActionContainer.prototype._popActionClass = function (options, defaultValue) {\n  defaultValue = defaultValue || null;\n  var action = options.action || defaultValue;\n  delete options.action;\n\n  var actionClass = this._registryGet('action', action, action);\n\n  return actionClass;\n};\n\nActionContainer.prototype._getHandler = function () {\n  var handlerString = this.conflictHandler;\n  var handlerFuncName = '_handleConflict' + $$.capitalize(handlerString);\n  var func = this[handlerFuncName];\n\n  if (typeof func === 'undefined') {\n    var msg = 'invalid conflict resolution value: ' + handlerString;\n    throw new Error(msg);\n  } else {\n    return func;\n  }\n};\n\nActionContainer.prototype._checkConflict = function (action) {\n  var optionStringActions = this._optionStringActions;\n  var conflictOptionals = []; // find all options that conflict with this option\n  // collect pairs, the string, and an existing action that it conflicts with\n\n  action.optionStrings.forEach(function (optionString) {\n    var conflOptional = optionStringActions[optionString];\n\n    if (typeof conflOptional !== 'undefined') {\n      conflictOptionals.push([optionString, conflOptional]);\n    }\n  });\n\n  if (conflictOptionals.length > 0) {\n    var conflictHandler = this._getHandler();\n\n    conflictHandler.call(this, action, conflictOptionals);\n  }\n};\n\nActionContainer.prototype._handleConflictError = function (action, conflOptionals) {\n  var conflicts = conflOptionals.map(function (pair) {\n    return pair[0];\n  });\n  conflicts = conflicts.join(', ');\n  throw argumentErrorHelper(action, format('Conflicting option string(s): %s', conflicts));\n};\n\nActionContainer.prototype._handleConflictResolve = function (action, conflOptionals) {\n  // remove all conflicting options\n  var self = this;\n  conflOptionals.forEach(function (pair) {\n    var optionString = pair[0];\n    var conflictingAction = pair[1]; // remove the conflicting option string\n\n    var i = conflictingAction.optionStrings.indexOf(optionString);\n\n    if (i >= 0) {\n      conflictingAction.optionStrings.splice(i, 1);\n    }\n\n    delete self._optionStringActions[optionString]; // if the option now has no option string, remove it from the\n    // container holding it\n\n    if (conflictingAction.optionStrings.length === 0) {\n      conflictingAction.container._removeAction(conflictingAction);\n    }\n  });\n};","map":{"version":3,"names":["format","require","c","$$","ActionHelp","ActionAppend","ActionAppendConstant","ActionCount","ActionStore","ActionStoreConstant","ActionStoreTrue","ActionStoreFalse","ActionVersion","ActionSubparsers","argumentErrorHelper","ActionContainer","module","exports","options","description","argumentDefault","prefixChars","conflictHandler","_registries","register","_getHandler","_actions","_optionStringActions","_actionGroups","_mutuallyExclusiveGroups","_defaults","_regexpNegativeNumber","RegExp","_hasNegativeNumberOptionals","ArgumentGroup","MutuallyExclusiveGroup","prototype","registryName","value","object","_registryGet","defaultValue","arguments","length","setDefaults","property","has","forEach","action","dest","getDefault","result","addArgument","args","Array","isArray","TypeError","indexOf","Error","_getPositional","_getOptional","ActionClass","_popActionClass","typeFunction","type","_addAction","addArgumentGroup","group","push","addMutuallyExclusiveGroup","self","_checkConflict","container","optionStrings","optionString","match","some","Boolean","_removeAction","actionIndex","splice","_addContainerActions","titleGroupMap","title","groupMap","actionHash","getName","_groupActions","mutexGroup","required","key","nargs","OPTIONAL","ZERO_OR_MORE","optionStringsLong","optionStringDest","trimChars","join","replace","actionClass","handlerString","handlerFuncName","capitalize","func","msg","optionStringActions","conflictOptionals","conflOptional","call","_handleConflictError","conflOptionals","conflicts","map","pair","_handleConflictResolve","conflictingAction","i"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/argparse/lib/action_container.js"],"sourcesContent":["/** internal\n * class ActionContainer\n *\n * Action container. Parent for [[ArgumentParser]] and [[ArgumentGroup]]\n **/\n\n'use strict';\n\nvar format = require('util').format;\n\n// Constants\nvar c = require('./const');\n\nvar $$ = require('./utils');\n\n//Actions\nvar ActionHelp = require('./action/help');\nvar ActionAppend = require('./action/append');\nvar ActionAppendConstant = require('./action/append/constant');\nvar ActionCount = require('./action/count');\nvar ActionStore = require('./action/store');\nvar ActionStoreConstant = require('./action/store/constant');\nvar ActionStoreTrue = require('./action/store/true');\nvar ActionStoreFalse = require('./action/store/false');\nvar ActionVersion = require('./action/version');\nvar ActionSubparsers = require('./action/subparsers');\n\n// Errors\nvar argumentErrorHelper = require('./argument/error');\n\n/**\n * new ActionContainer(options)\n *\n * Action container. Parent for [[ArgumentParser]] and [[ArgumentGroup]]\n *\n * ##### Options:\n *\n * - `description` -- A description of what the program does\n * - `prefixChars`  -- Characters that prefix optional arguments\n * - `argumentDefault`  -- The default value for all arguments\n * - `conflictHandler` -- The conflict handler to use for duplicate arguments\n **/\nvar ActionContainer = module.exports = function ActionContainer(options) {\n  options = options || {};\n\n  this.description = options.description;\n  this.argumentDefault = options.argumentDefault;\n  this.prefixChars = options.prefixChars || '';\n  this.conflictHandler = options.conflictHandler;\n\n  // set up registries\n  this._registries = {};\n\n  // register actions\n  this.register('action', null, ActionStore);\n  this.register('action', 'store', ActionStore);\n  this.register('action', 'storeConst', ActionStoreConstant);\n  this.register('action', 'storeTrue', ActionStoreTrue);\n  this.register('action', 'storeFalse', ActionStoreFalse);\n  this.register('action', 'append', ActionAppend);\n  this.register('action', 'appendConst', ActionAppendConstant);\n  this.register('action', 'count', ActionCount);\n  this.register('action', 'help', ActionHelp);\n  this.register('action', 'version', ActionVersion);\n  this.register('action', 'parsers', ActionSubparsers);\n\n  // raise an exception if the conflict handler is invalid\n  this._getHandler();\n\n  // action storage\n  this._actions = [];\n  this._optionStringActions = {};\n\n  // groups\n  this._actionGroups = [];\n  this._mutuallyExclusiveGroups = [];\n\n  // defaults storage\n  this._defaults = {};\n\n  // determines whether an \"option\" looks like a negative number\n  // -1, -1.5 -5e+4\n  this._regexpNegativeNumber = new RegExp('^[-]?[0-9]*\\\\.?[0-9]+([eE][-+]?[0-9]+)?$');\n\n  // whether or not there are any optionals that look like negative\n  // numbers -- uses a list so it can be shared and edited\n  this._hasNegativeNumberOptionals = [];\n};\n\n// Groups must be required, then ActionContainer already defined\nvar ArgumentGroup = require('./argument/group');\nvar MutuallyExclusiveGroup = require('./argument/exclusive');\n\n//\n// Registration methods\n//\n\n/**\n * ActionContainer#register(registryName, value, object) -> Void\n * - registryName (String) : object type action|type\n * - value (string) : keyword\n * - object (Object|Function) : handler\n *\n *  Register handlers\n **/\nActionContainer.prototype.register = function (registryName, value, object) {\n  this._registries[registryName] = this._registries[registryName] || {};\n  this._registries[registryName][value] = object;\n};\n\nActionContainer.prototype._registryGet = function (registryName, value, defaultValue) {\n  if (arguments.length < 3) {\n    defaultValue = null;\n  }\n  return this._registries[registryName][value] || defaultValue;\n};\n\n//\n// Namespace default accessor methods\n//\n\n/**\n * ActionContainer#setDefaults(options) -> Void\n * - options (object):hash of options see [[Action.new]]\n *\n * Set defaults\n **/\nActionContainer.prototype.setDefaults = function (options) {\n  options = options || {};\n  for (var property in options) {\n    if ($$.has(options, property)) {\n      this._defaults[property] = options[property];\n    }\n  }\n\n  // if these defaults match any existing arguments, replace the previous\n  // default on the object with the new one\n  this._actions.forEach(function (action) {\n    if ($$.has(options, action.dest)) {\n      action.defaultValue = options[action.dest];\n    }\n  });\n};\n\n/**\n * ActionContainer#getDefault(dest) -> Mixed\n * - dest (string): action destination\n *\n * Return action default value\n **/\nActionContainer.prototype.getDefault = function (dest) {\n  var result = $$.has(this._defaults, dest) ? this._defaults[dest] : null;\n\n  this._actions.forEach(function (action) {\n    if (action.dest === dest && $$.has(action, 'defaultValue')) {\n      result = action.defaultValue;\n    }\n  });\n\n  return result;\n};\n//\n// Adding argument actions\n//\n\n/**\n * ActionContainer#addArgument(args, options) -> Object\n * - args (String|Array): argument key, or array of argument keys\n * - options (Object): action objects see [[Action.new]]\n *\n * #### Examples\n * - addArgument([ '-f', '--foo' ], { action: 'store', defaultValue: 1, ... })\n * - addArgument([ 'bar' ], { action: 'store', nargs: 1, ... })\n * - addArgument('--baz', { action: 'store', nargs: 1, ... })\n **/\nActionContainer.prototype.addArgument = function (args, options) {\n  args = args;\n  options = options || {};\n\n  if (typeof args === 'string') {\n    args = [ args ];\n  }\n  if (!Array.isArray(args)) {\n    throw new TypeError('addArgument first argument should be a string or an array');\n  }\n  if (typeof options !== 'object' || Array.isArray(options)) {\n    throw new TypeError('addArgument second argument should be a hash');\n  }\n\n  // if no positional args are supplied or only one is supplied and\n  // it doesn't look like an option string, parse a positional argument\n  if (!args || args.length === 1 && this.prefixChars.indexOf(args[0][0]) < 0) {\n    if (args && !!options.dest) {\n      throw new Error('dest supplied twice for positional argument');\n    }\n    options = this._getPositional(args, options);\n\n    // otherwise, we're adding an optional argument\n  } else {\n    options = this._getOptional(args, options);\n  }\n\n  // if no default was supplied, use the parser-level default\n  if (typeof options.defaultValue === 'undefined') {\n    var dest = options.dest;\n    if ($$.has(this._defaults, dest)) {\n      options.defaultValue = this._defaults[dest];\n    } else if (typeof this.argumentDefault !== 'undefined') {\n      options.defaultValue = this.argumentDefault;\n    }\n  }\n\n  // create the action object, and add it to the parser\n  var ActionClass = this._popActionClass(options);\n  if (typeof ActionClass !== 'function') {\n    throw new Error(format('Unknown action \"%s\".', ActionClass));\n  }\n  var action = new ActionClass(options);\n\n  // throw an error if the action type is not callable\n  var typeFunction = this._registryGet('type', action.type, action.type);\n  if (typeof typeFunction !== 'function') {\n    throw new Error(format('\"%s\" is not callable', typeFunction));\n  }\n\n  return this._addAction(action);\n};\n\n/**\n * ActionContainer#addArgumentGroup(options) -> ArgumentGroup\n * - options (Object): hash of options see [[ArgumentGroup.new]]\n *\n * Create new arguments groups\n **/\nActionContainer.prototype.addArgumentGroup = function (options) {\n  var group = new ArgumentGroup(this, options);\n  this._actionGroups.push(group);\n  return group;\n};\n\n/**\n * ActionContainer#addMutuallyExclusiveGroup(options) -> ArgumentGroup\n * - options (Object): {required: false}\n *\n * Create new mutual exclusive groups\n **/\nActionContainer.prototype.addMutuallyExclusiveGroup = function (options) {\n  var group = new MutuallyExclusiveGroup(this, options);\n  this._mutuallyExclusiveGroups.push(group);\n  return group;\n};\n\nActionContainer.prototype._addAction = function (action) {\n  var self = this;\n\n  // resolve any conflicts\n  this._checkConflict(action);\n\n  // add to actions list\n  this._actions.push(action);\n  action.container = this;\n\n  // index the action by any option strings it has\n  action.optionStrings.forEach(function (optionString) {\n    self._optionStringActions[optionString] = action;\n  });\n\n  // set the flag if any option strings look like negative numbers\n  action.optionStrings.forEach(function (optionString) {\n    if (optionString.match(self._regexpNegativeNumber)) {\n      if (!self._hasNegativeNumberOptionals.some(Boolean)) {\n        self._hasNegativeNumberOptionals.push(true);\n      }\n    }\n  });\n\n  // return the created action\n  return action;\n};\n\nActionContainer.prototype._removeAction = function (action) {\n  var actionIndex = this._actions.indexOf(action);\n  if (actionIndex >= 0) {\n    this._actions.splice(actionIndex, 1);\n  }\n};\n\nActionContainer.prototype._addContainerActions = function (container) {\n  // collect groups by titles\n  var titleGroupMap = {};\n  this._actionGroups.forEach(function (group) {\n    if (titleGroupMap[group.title]) {\n      throw new Error(format('Cannot merge actions - two groups are named \"%s\".', group.title));\n    }\n    titleGroupMap[group.title] = group;\n  });\n\n  // map each action to its group\n  var groupMap = {};\n  function actionHash(action) {\n    // unique (hopefully?) string suitable as dictionary key\n    return action.getName();\n  }\n  container._actionGroups.forEach(function (group) {\n    // if a group with the title exists, use that, otherwise\n    // create a new group matching the container's group\n    if (!titleGroupMap[group.title]) {\n      titleGroupMap[group.title] = this.addArgumentGroup({\n        title: group.title,\n        description: group.description\n      });\n    }\n\n    // map the actions to their new group\n    group._groupActions.forEach(function (action) {\n      groupMap[actionHash(action)] = titleGroupMap[group.title];\n    });\n  }, this);\n\n  // add container's mutually exclusive groups\n  // NOTE: if add_mutually_exclusive_group ever gains title= and\n  // description= then this code will need to be expanded as above\n  var mutexGroup;\n  container._mutuallyExclusiveGroups.forEach(function (group) {\n    mutexGroup = this.addMutuallyExclusiveGroup({\n      required: group.required\n    });\n    // map the actions to their new mutex group\n    group._groupActions.forEach(function (action) {\n      groupMap[actionHash(action)] = mutexGroup;\n    });\n  }, this);  // forEach takes a 'this' argument\n\n  // add all actions to this container or their group\n  container._actions.forEach(function (action) {\n    var key = actionHash(action);\n    if (groupMap[key]) {\n      groupMap[key]._addAction(action);\n    } else {\n      this._addAction(action);\n    }\n  });\n};\n\nActionContainer.prototype._getPositional = function (dest, options) {\n  if (Array.isArray(dest)) {\n    dest = dest[0];\n  }\n  // make sure required is not specified\n  if (options.required) {\n    throw new Error('\"required\" is an invalid argument for positionals.');\n  }\n\n  // mark positional arguments as required if at least one is\n  // always required\n  if (options.nargs !== c.OPTIONAL && options.nargs !== c.ZERO_OR_MORE) {\n    options.required = true;\n  }\n  if (options.nargs === c.ZERO_OR_MORE && typeof options.defaultValue === 'undefined') {\n    options.required = true;\n  }\n\n  // return the keyword arguments with no option strings\n  options.dest = dest;\n  options.optionStrings = [];\n  return options;\n};\n\nActionContainer.prototype._getOptional = function (args, options) {\n  var prefixChars = this.prefixChars;\n  var optionStrings = [];\n  var optionStringsLong = [];\n\n  // determine short and long option strings\n  args.forEach(function (optionString) {\n    // error on strings that don't start with an appropriate prefix\n    if (prefixChars.indexOf(optionString[0]) < 0) {\n      throw new Error(format('Invalid option string \"%s\": must start with a \"%s\".',\n        optionString,\n        prefixChars\n      ));\n    }\n\n    // strings starting with two prefix characters are long options\n    optionStrings.push(optionString);\n    if (optionString.length > 1 && prefixChars.indexOf(optionString[1]) >= 0) {\n      optionStringsLong.push(optionString);\n    }\n  });\n\n  // infer dest, '--foo-bar' -> 'foo_bar' and '-x' -> 'x'\n  var dest = options.dest || null;\n  delete options.dest;\n\n  if (!dest) {\n    var optionStringDest = optionStringsLong.length ? optionStringsLong[0] : optionStrings[0];\n    dest = $$.trimChars(optionStringDest, this.prefixChars);\n\n    if (dest.length === 0) {\n      throw new Error(\n        format('dest= is required for options like \"%s\"', optionStrings.join(', '))\n      );\n    }\n    dest = dest.replace(/-/g, '_');\n  }\n\n  // return the updated keyword arguments\n  options.dest = dest;\n  options.optionStrings = optionStrings;\n\n  return options;\n};\n\nActionContainer.prototype._popActionClass = function (options, defaultValue) {\n  defaultValue = defaultValue || null;\n\n  var action = (options.action || defaultValue);\n  delete options.action;\n\n  var actionClass = this._registryGet('action', action, action);\n  return actionClass;\n};\n\nActionContainer.prototype._getHandler = function () {\n  var handlerString = this.conflictHandler;\n  var handlerFuncName = '_handleConflict' + $$.capitalize(handlerString);\n  var func = this[handlerFuncName];\n  if (typeof func === 'undefined') {\n    var msg = 'invalid conflict resolution value: ' + handlerString;\n    throw new Error(msg);\n  } else {\n    return func;\n  }\n};\n\nActionContainer.prototype._checkConflict = function (action) {\n  var optionStringActions = this._optionStringActions;\n  var conflictOptionals = [];\n\n  // find all options that conflict with this option\n  // collect pairs, the string, and an existing action that it conflicts with\n  action.optionStrings.forEach(function (optionString) {\n    var conflOptional = optionStringActions[optionString];\n    if (typeof conflOptional !== 'undefined') {\n      conflictOptionals.push([ optionString, conflOptional ]);\n    }\n  });\n\n  if (conflictOptionals.length > 0) {\n    var conflictHandler = this._getHandler();\n    conflictHandler.call(this, action, conflictOptionals);\n  }\n};\n\nActionContainer.prototype._handleConflictError = function (action, conflOptionals) {\n  var conflicts = conflOptionals.map(function (pair) { return pair[0]; });\n  conflicts = conflicts.join(', ');\n  throw argumentErrorHelper(\n    action,\n    format('Conflicting option string(s): %s', conflicts)\n  );\n};\n\nActionContainer.prototype._handleConflictResolve = function (action, conflOptionals) {\n  // remove all conflicting options\n  var self = this;\n  conflOptionals.forEach(function (pair) {\n    var optionString = pair[0];\n    var conflictingAction = pair[1];\n    // remove the conflicting option string\n    var i = conflictingAction.optionStrings.indexOf(optionString);\n    if (i >= 0) {\n      conflictingAction.optionStrings.splice(i, 1);\n    }\n    delete self._optionStringActions[optionString];\n    // if the option now has no option string, remove it from the\n    // container holding it\n    if (conflictingAction.optionStrings.length === 0) {\n      conflictingAction.container._removeAction(conflictingAction);\n    }\n  });\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}