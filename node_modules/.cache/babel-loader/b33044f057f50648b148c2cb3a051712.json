{"ast":null,"code":"var configuration = require('../../configuration');\n\nvar InvalidPropertyError = require('../../invalid-property-error');\n\nfunction populateComponents(properties, validator, warnings) {\n  var component;\n  var j, m;\n\n  for (var i = properties.length - 1; i >= 0; i--) {\n    var property = properties[i];\n    var descriptor = configuration[property.name];\n\n    if (!property.dynamic && descriptor && descriptor.shorthand) {\n      if (onlyValueIsVariable(property, validator) || moreThanOneValueIsVariable(property, validator)) {\n        property.optimizable = false;\n        continue;\n      }\n\n      property.shorthand = true;\n      property.dirty = true;\n\n      try {\n        property.components = descriptor.breakUp(property, configuration, validator);\n\n        if (descriptor.shorthandComponents) {\n          for (j = 0, m = property.components.length; j < m; j++) {\n            component = property.components[j];\n            component.components = configuration[component.name].breakUp(component, configuration, validator);\n          }\n        }\n      } catch (e) {\n        if (e instanceof InvalidPropertyError) {\n          property.components = []; // this will set property.unused to true below\n\n          warnings.push(e.message);\n        } else {\n          throw e;\n        }\n      }\n\n      if (property.components.length > 0) {\n        property.multiplex = property.components[0].multiplex;\n      } else {\n        property.unused = true;\n      }\n    }\n  }\n}\n\nfunction onlyValueIsVariable(property, validator) {\n  return property.value.length == 1 && validator.isVariable(property.value[0][1]);\n}\n\nfunction moreThanOneValueIsVariable(property, validator) {\n  return property.value.length > 1 && property.value.filter(function (value) {\n    return validator.isVariable(value[1]);\n  }).length > 1;\n}\n\nmodule.exports = populateComponents;","map":{"version":3,"names":["configuration","require","InvalidPropertyError","populateComponents","properties","validator","warnings","component","j","m","i","length","property","descriptor","name","dynamic","shorthand","onlyValueIsVariable","moreThanOneValueIsVariable","optimizable","dirty","components","breakUp","shorthandComponents","e","push","message","multiplex","unused","value","isVariable","filter","module","exports"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/clean-css/lib/optimizer/level-2/properties/populate-components.js"],"sourcesContent":["var configuration = require('../../configuration');\nvar InvalidPropertyError = require('../../invalid-property-error');\n\nfunction populateComponents(properties, validator, warnings) {\n  var component;\n  var j, m;\n\n  for (var i = properties.length - 1; i >= 0; i--) {\n    var property = properties[i];\n    var descriptor = configuration[property.name];\n\n    if (!property.dynamic && descriptor && descriptor.shorthand) {\n      if (onlyValueIsVariable(property, validator) || moreThanOneValueIsVariable(property, validator)) {\n        property.optimizable = false;\n        continue;\n      }\n\n      property.shorthand = true;\n      property.dirty = true;\n\n      try {\n        property.components = descriptor.breakUp(property, configuration, validator);\n\n        if (descriptor.shorthandComponents) {\n          for (j = 0, m = property.components.length; j < m; j++) {\n            component = property.components[j];\n            component.components = configuration[component.name].breakUp(component, configuration, validator);\n          }\n        }\n      } catch (e) {\n        if (e instanceof InvalidPropertyError) {\n          property.components = []; // this will set property.unused to true below\n          warnings.push(e.message);\n        } else {\n          throw e;\n        }\n      }\n\n      if (property.components.length > 0) {\n        property.multiplex = property.components[0].multiplex;\n      } else {\n        property.unused = true;\n      }\n    }\n  }\n}\n\nfunction onlyValueIsVariable(property, validator) {\n  return property.value.length == 1 && validator.isVariable(property.value[0][1]);\n}\n\nfunction moreThanOneValueIsVariable(property, validator) {\n  return property.value.length > 1\n    && property.value.filter(\n      function(value) {\n        return validator.isVariable(value[1]);\n      }\n    ).length > 1;\n}\n\nmodule.exports = populateComponents;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}