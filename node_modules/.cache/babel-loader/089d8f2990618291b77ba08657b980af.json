{"ast":null,"code":"/**\n * React Router DOM v6.4.0\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport * as e from \"react\";\nimport { UNSAFE_enhanceManualRouteObjects as t, Router as r, useHref as n, createPath as a, useResolvedPath as o, useMatch as i, UNSAFE_DataRouterStateContext as u, useNavigate as s, useLocation as l, UNSAFE_DataRouterContext as c, UNSAFE_RouteContext as f, useMatches as m, useNavigation as d } from \"react-router\";\nexport { AbortedDeferredError, Await, MemoryRouter, Navigate, NavigationType, Outlet, Route, Router, RouterProvider, Routes, UNSAFE_DataRouterContext, UNSAFE_DataRouterStateContext, UNSAFE_DataStaticRouterContext, UNSAFE_LocationContext, UNSAFE_NavigationContext, UNSAFE_RouteContext, UNSAFE_enhanceManualRouteObjects, createMemoryRouter, createPath, createRoutesFromChildren, createRoutesFromElements, defer, generatePath, isRouteErrorResponse, json, matchPath, matchRoutes, parsePath, redirect, renderMatches, resolvePath, useActionData, useAsyncError, useAsyncValue, useHref, useInRouterContext, useLoaderData, useLocation, useMatch, useMatches, useNavigate, useNavigation, useNavigationType, useOutlet, useOutletContext, useParams, useResolvedPath, useRevalidator, useRouteError, useRouteLoaderData, useRoutes } from \"react-router\";\nimport { createRouter as h, createBrowserHistory as p, createHashHistory as g, matchPath as y, invariant as w } from \"@remix-run/router\";\nconst v = \"application/x-www-form-urlencoded\";\n\nfunction b(e) {\n  return null != e && \"string\" == typeof e.tagName;\n}\n\nfunction R() {\n  let e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  return new URLSearchParams(\"string\" == typeof e || Array.isArray(e) || e instanceof URLSearchParams ? e : Object.keys(e).reduce((t, r) => {\n    let n = e[r];\n    return t.concat(Array.isArray(n) ? n.map(e => [r, e]) : [[r, n]]);\n  }, []));\n}\n\nfunction E(e, t, r) {\n  let n, a, o, i;\n\n  if (b(u = e) && \"form\" === u.tagName.toLowerCase()) {\n    let u = r.submissionTrigger;\n    n = r.method || e.getAttribute(\"method\") || \"get\", a = r.action || e.getAttribute(\"action\") || t, o = r.encType || e.getAttribute(\"enctype\") || v, i = new FormData(e), u && u.name && i.append(u.name, u.value);\n  } else if (function (e) {\n    return b(e) && \"button\" === e.tagName.toLowerCase();\n  }(e) || function (e) {\n    return b(e) && \"input\" === e.tagName.toLowerCase();\n  }(e) && (\"submit\" === e.type || \"image\" === e.type)) {\n    let u = e.form;\n    if (null == u) throw new Error('Cannot submit a <button> or <input type=\"submit\"> without a <form>');\n    n = r.method || e.getAttribute(\"formmethod\") || u.getAttribute(\"method\") || \"get\", a = r.action || e.getAttribute(\"formaction\") || u.getAttribute(\"action\") || t, o = r.encType || e.getAttribute(\"formenctype\") || u.getAttribute(\"enctype\") || v, i = new FormData(u), e.name && i.append(e.name, e.value);\n  } else {\n    if (b(e)) throw new Error('Cannot submit element that is not <form>, <button>, or <input type=\"submit|image\">');\n    if (n = r.method || \"get\", a = r.action || t, o = r.encType || v, e instanceof FormData) i = e;else if (i = new FormData(), e instanceof URLSearchParams) for (let [t, r] of e) i.append(t, r);else if (null != e) for (let t of Object.keys(e)) i.append(t, e[t]);\n  }\n\n  var u;\n  let {\n    protocol: s,\n    host: l\n  } = window.location;\n  return {\n    url: new URL(a, `${s}//${l}`),\n    method: n,\n    encType: o,\n    formData: i\n  };\n}\n\nfunction S(e, r) {\n  return h({\n    basename: r?.basename,\n    history: p({\n      window: r?.window\n    }),\n    hydrationData: r?.hydrationData || window?.__staticRouterHydrationData,\n    routes: t(e)\n  }).initialize();\n}\n\nfunction C(e, r) {\n  return h({\n    basename: r?.basename,\n    history: g({\n      window: r?.window\n    }),\n    hydrationData: r?.hydrationData || window?.__staticRouterHydrationData,\n    routes: t(e)\n  }).initialize();\n}\n\nfunction A(_ref) {\n  let {\n    basename: t,\n    children: n,\n    window: a\n  } = _ref;\n  let o = e.useRef();\n  null == o.current && (o.current = p({\n    window: a,\n    v5Compat: !0\n  }));\n  let i = o.current,\n      [u, s] = e.useState({\n    action: i.action,\n    location: i.location\n  });\n  return e.useLayoutEffect(() => i.listen(s), [i]), e.createElement(r, {\n    basename: t,\n    children: n,\n    location: u.location,\n    navigationType: u.action,\n    navigator: i\n  });\n}\n\nfunction x(_ref2) {\n  let {\n    basename: t,\n    children: n,\n    window: a\n  } = _ref2;\n  let o = e.useRef();\n  null == o.current && (o.current = g({\n    window: a,\n    v5Compat: !0\n  }));\n  let i = o.current,\n      [u, s] = e.useState({\n    action: i.action,\n    location: i.location\n  });\n  return e.useLayoutEffect(() => i.listen(s), [i]), e.createElement(r, {\n    basename: t,\n    children: n,\n    location: u.location,\n    navigationType: u.action,\n    navigator: i\n  });\n}\n\nfunction D(_ref3) {\n  let {\n    basename: t,\n    children: n,\n    history: a\n  } = _ref3;\n  const [o, i] = e.useState({\n    action: a.action,\n    location: a.location\n  });\n  return e.useLayoutEffect(() => a.listen(i), [a]), e.createElement(r, {\n    basename: t,\n    children: n,\n    location: o.location,\n    navigationType: o.action,\n    navigator: a\n  });\n}\n\nconst N = e.forwardRef(function (_ref4, f) {\n  let {\n    onClick: t,\n    relative: r,\n    reloadDocument: a,\n    replace: o,\n    state: i,\n    target: u,\n    to: s,\n    preventScrollReset: l,\n    ...c\n  } = _ref4;\n  let m = n(s, {\n    relative: r\n  }),\n      d = O(s, {\n    replace: o,\n    state: i,\n    target: u,\n    preventScrollReset: l,\n    relative: r\n  });\n  return e.createElement(\"a\", Object.assign({}, c, {\n    href: m,\n    onClick: a ? t : function (e) {\n      t && t(e), e.defaultPrevented || d(e);\n    },\n    ref: f,\n    target: u\n  }));\n}),\n      L = e.forwardRef(function (_ref5, m) {\n  let {\n    \"aria-current\": t = \"page\",\n    caseSensitive: r = !1,\n    className: n = \"\",\n    end: a = !1,\n    style: s,\n    to: l,\n    children: c,\n    ...f\n  } = _ref5;\n  let d,\n      h = o(l),\n      p = i({\n    path: h.pathname,\n    end: a,\n    caseSensitive: r\n  }),\n      g = e.useContext(u)?.navigation.location,\n      w = o(g || \"\"),\n      v = null != e.useMemo(() => g ? y({\n    path: h.pathname,\n    end: a,\n    caseSensitive: r\n  }, w.pathname) : null, [g, h.pathname, r, a, w.pathname]),\n      b = null != p,\n      R = b ? t : void 0;\n  d = \"function\" == typeof n ? n({\n    isActive: b,\n    isPending: v\n  }) : [n, b ? \"active\" : null, v ? \"pending\" : null].filter(Boolean).join(\" \");\n  let E = \"function\" == typeof s ? s({\n    isActive: b,\n    isPending: v\n  }) : s;\n  return e.createElement(N, Object.assign({}, f, {\n    \"aria-current\": R,\n    className: d,\n    ref: m,\n    style: E,\n    to: l\n  }), \"function\" == typeof c ? c({\n    isActive: b,\n    isPending: v\n  }) : c);\n}),\n      P = e.forwardRef((t, r) => e.createElement(F, Object.assign({}, t, {\n  ref: r\n}))),\n      F = e.forwardRef((_ref6, c) => {\n  let {\n    reloadDocument: t,\n    replace: r,\n    method: n = \"get\",\n    action: a,\n    onSubmit: o,\n    fetcherKey: i,\n    routeId: u,\n    relative: s,\n    ...l\n  } = _ref6;\n  let f = U(i, u),\n      m = \"get\" === n.toLowerCase() ? \"get\" : \"post\",\n      d = k(a, {\n    relative: s\n  });\n  return e.createElement(\"form\", Object.assign({\n    ref: c,\n    method: m,\n    action: d,\n    onSubmit: t ? o : e => {\n      if (o && o(e), e.defaultPrevented) return;\n      e.preventDefault();\n      let t = e.nativeEvent.submitter;\n      f(t || e.currentTarget, {\n        method: n,\n        replace: r,\n        relative: s\n      });\n    }\n  }, l));\n});\n\nfunction T(_ref7) {\n  let {\n    getKey: t,\n    storageKey: r\n  } = _ref7;\n  return function () {\n    let {\n      getKey: t,\n      storageKey: r\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let n = l(),\n        a = m(),\n        o = d(),\n        i = e.useContext(c);\n    i || w(!1);\n    let {\n      router: s\n    } = i,\n        f = e.useContext(u);\n    (null == s || null == f) && w(!1);\n    let {\n      restoreScrollPosition: h,\n      preventScrollReset: p\n    } = f;\n    e.useEffect(() => (window.history.scrollRestoration = \"manual\", () => {\n      window.history.scrollRestoration = \"auto\";\n    }), []), g = e.useCallback(() => {\n      if (\"idle\" === o.state) {\n        let e = (t ? t(n, a) : null) || n.key;\n        H[e] = window.scrollY;\n      }\n\n      sessionStorage.setItem(r || \"react-router-scroll-positions\", JSON.stringify(H)), window.history.scrollRestoration = \"auto\";\n    }, [r, t, o.state, n, a]), e.useEffect(() => (window.addEventListener(\"beforeunload\", g), () => {\n      window.removeEventListener(\"beforeunload\", g);\n    }), [g]), e.useLayoutEffect(() => {\n      try {\n        let e = sessionStorage.getItem(r || \"react-router-scroll-positions\");\n        e && (H = JSON.parse(e));\n      } catch (e) {}\n    }, [r]), e.useLayoutEffect(() => {\n      let e = s?.enableScrollRestoration(H, () => window.scrollY, t);\n      return () => e && e();\n    }, [s, t]), e.useLayoutEffect(() => {\n      if (!1 !== h) if (\"number\" != typeof h) {\n        if (n.hash) {\n          let e = document.getElementById(n.hash.slice(1));\n          if (e) return void e.scrollIntoView();\n        }\n\n        !0 !== p && window.scrollTo(0, 0);\n      } else window.scrollTo(0, h);\n    }, [n, h, p]);\n    var g;\n  }({\n    getKey: t,\n    storageKey: r\n  }), null;\n}\n\nfunction O(t) {\n  let {\n    target: r,\n    replace: n,\n    state: i,\n    preventScrollReset: u,\n    relative: c\n  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  let f = s(),\n      m = l(),\n      d = o(t, {\n    relative: c\n  });\n  return e.useCallback(e => {\n    if (function (e, t) {\n      return !(0 !== e.button || t && \"_self\" !== t || function (e) {\n        return !!(e.metaKey || e.altKey || e.ctrlKey || e.shiftKey);\n      }(e));\n    }(e, r)) {\n      e.preventDefault();\n      let r = void 0 !== n ? n : a(m) === a(d);\n      f(t, {\n        replace: r,\n        state: i,\n        preventScrollReset: u,\n        relative: c\n      });\n    }\n  }, [m, f, d, n, i, r, t, u, c]);\n}\n\nfunction _(t) {\n  let r = e.useRef(R(t)),\n      n = l(),\n      a = e.useMemo(() => function (e, t) {\n    let r = R(e);\n\n    for (let n of t.keys()) r.has(n) || t.getAll(n).forEach(e => {\n      r.append(n, e);\n    });\n\n    return r;\n  }(n.search, r.current), [n.search]),\n      o = s(),\n      i = e.useCallback((e, t) => {\n    const r = R(\"function\" == typeof e ? e(a) : e);\n    o(\"?\" + r, t);\n  }, [o, a]);\n  return [a, i];\n}\n\nfunction K() {\n  return U();\n}\n\nfunction U(t, r) {\n  let n = e.useContext(c);\n  n || w(!1);\n  let {\n    router: a\n  } = n,\n      o = k();\n  return e.useCallback(function (e) {\n    let n = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    if (\"undefined\" == typeof document) throw new Error(\"You are calling submit during the server render. Try calling submit within a `useEffect` or callback instead.\");\n    let {\n      method: i,\n      encType: u,\n      formData: s,\n      url: l\n    } = E(e, o, n),\n        c = l.pathname + l.search,\n        f = {\n      replace: n.replace,\n      formData: s,\n      formMethod: i,\n      formEncType: u\n    };\n    t ? (null == r && w(!1), a.fetch(t, r, c, f)) : a.navigate(c, f);\n  }, [o, a, t, r]);\n}\n\nfunction k(t) {\n  let {\n    relative: r\n  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  let n = e.useContext(f);\n  n || w(!1);\n  let [i] = n.matches.slice(-1),\n      u = o(t ?? \".\", {\n    relative: r\n  }),\n      s = l();\n\n  if (null == t && (u.search = s.search, u.hash = s.hash, i.route.index)) {\n    let e = new URLSearchParams(u.search);\n    e.delete(\"index\"), u.search = e.toString() ? `?${e.toString()}` : \"\";\n  }\n\n  return t && \".\" !== t || !i.route.index || (u.search = u.search ? u.search.replace(/^\\?/, \"?index&\") : \"?index\"), a(u);\n}\n\nlet j = 0;\n\nfunction M() {\n  let t = e.useContext(c);\n  t || w(!1);\n  let {\n    router: r\n  } = t,\n      n = e.useContext(f);\n  n || w(!1);\n  let a = n.matches[n.matches.length - 1]?.route.id;\n  null == a && w(!1);\n  let [o] = e.useState(() => String(++j)),\n      [i] = e.useState(() => (a || w(!1), function (t, r) {\n    return e.forwardRef((n, a) => e.createElement(F, Object.assign({}, n, {\n      ref: a,\n      fetcherKey: t,\n      routeId: r\n    })));\n  }(o, a))),\n      [u] = e.useState(() => e => {\n    r || w(!1), a || w(!1), r.fetch(o, a, e);\n  }),\n      s = U(o, a),\n      l = r.getFetcher(o),\n      m = e.useMemo(() => ({\n    Form: i,\n    submit: s,\n    load: u,\n    ...l\n  }), [l, i, s, u]);\n  return e.useEffect(() => () => {\n    r ? r.deleteFetcher(o) : console.warn(\"No fetcher available to clean up from useFetcher()\");\n  }, [r, o]), m;\n}\n\nfunction I() {\n  let t = e.useContext(u);\n  return t || w(!1), [...t.fetchers.values()];\n}\n\nlet H = {};\nexport { A as BrowserRouter, P as Form, x as HashRouter, N as Link, L as NavLink, T as ScrollRestoration, S as createBrowserRouter, C as createHashRouter, R as createSearchParams, D as unstable_HistoryRouter, M as useFetcher, I as useFetchers, k as useFormAction, O as useLinkClickHandler, _ as useSearchParams, K as useSubmit };","map":{"version":3,"mappings":"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","names":["defaultEncType","isHtmlElement","object","tagName","createSearchParams","init","URLSearchParams","Array","isArray","Object","keys","reduce","memo","key","value","concat","map","v","getFormSubmissionInfo","target","defaultAction","options","method","action","encType","formData","toLowerCase","submissionTrigger","getAttribute","FormData","name","append","isButtonElement","isInputElement","type","form","Error","protocol","host","window","location","url","URL","createBrowserRouter","routes","opts","createRouter","basename","history","createBrowserHistory","hydrationData","__staticRouterHydrationData","enhanceManualRouteObjects","initialize","createHashRouter","createHashHistory","BrowserRouter","children","historyRef","React","useRef","current","v5Compat","state","setState","useState","useLayoutEffect","listen","Router","navigationType","navigator","HashRouter","HistoryRouter","Link","forwardRef","ref","onClick","relative","reloadDocument","replace","to","preventScrollReset","rest","href","useHref","internalOnClick","useLinkClickHandler","event","defaultPrevented","NavLink","ariaCurrentProp","caseSensitive","className","classNameProp","end","style","styleProp","path","useResolvedPath","match","useMatch","pathname","nextLocation","useContext","DataRouterStateContext","navigation","nextPath","isPending","useMemo","matchPath","isActive","ariaCurrent","undefined","filter","Boolean","join","Form","props","FormImpl","forwardedRef","onSubmit","fetcherKey","routeId","submit","useSubmitImpl","formMethod","formAction","useFormAction","preventDefault","submitter","nativeEvent","currentTarget","ScrollRestoration","storageKey","getKey","useLocation","matches","useMatches","useNavigation","dataRouterContext","DataRouterContext","invariant","router","restoreScrollPosition","useEffect","scrollRestoration","callback","useCallback","savedScrollPositions","scrollY","sessionStorage","setItem","JSON","stringify","addEventListener","removeEventListener","sessionPositions","getItem","parse","e","disableScrollRestoration","enableScrollRestoration","hash","el","document","getElementById","slice","scrollIntoView","scrollTo","useScrollRestoration","replaceProp","navigate","useNavigate","button","metaKey","altKey","ctrlKey","shiftKey","isModifiedEvent","shouldProcessLinkClick","createPath","useSearchParams","defaultInit","defaultSearchParamsRef","searchParams","locationSearch","defaultSearchParams","has","getAll","forEach","getSearchParamsForLocation","search","setSearchParams","nextInit","navigateOptions","newSearchParams","useSubmit","formEncType","fetch","routeContext","RouteContext","route","index","params","delete","toString","fetcherId","useFetcher","length","id","String","createFetcherForm","load","fetcher","getFetcher","fetcherWithComponents","deleteFetcher","console","warn","useFetchers","fetchers","values"],"sources":["C:\\Users\\Rohith\\mern\\frontend\\node_modules\\react-router-dom\\dom.ts","C:\\Users\\Rohith\\mern\\frontend\\node_modules\\react-router-dom\\index.tsx"],"sourcesContent":["import type { FormEncType, FormMethod } from \"@remix-run/router\";\nimport type { RelativeRoutingType } from \"react-router\";\n\nexport const defaultMethod = \"get\";\nconst defaultEncType = \"application/x-www-form-urlencoded\";\n\nexport function isHtmlElement(object: any): object is HTMLElement {\n  return object != null && typeof object.tagName === \"string\";\n}\n\nexport function isButtonElement(object: any): object is HTMLButtonElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"button\";\n}\n\nexport function isFormElement(object: any): object is HTMLFormElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"form\";\n}\n\nexport function isInputElement(object: any): object is HTMLInputElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"input\";\n}\n\ntype LimitedMouseEvent = Pick<\n  MouseEvent,\n  \"button\" | \"metaKey\" | \"altKey\" | \"ctrlKey\" | \"shiftKey\"\n>;\n\nfunction isModifiedEvent(event: LimitedMouseEvent) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n\nexport function shouldProcessLinkClick(\n  event: LimitedMouseEvent,\n  target?: string\n) {\n  return (\n    event.button === 0 && // Ignore everything but left clicks\n    (!target || target === \"_self\") && // Let browser handle \"target=_blank\" etc.\n    !isModifiedEvent(event) // Ignore clicks with modifier keys\n  );\n}\n\nexport type ParamKeyValuePair = [string, string];\n\nexport type URLSearchParamsInit =\n  | string\n  | ParamKeyValuePair[]\n  | Record<string, string | string[]>\n  | URLSearchParams;\n\n/**\n * Creates a URLSearchParams object using the given initializer.\n *\n * This is identical to `new URLSearchParams(init)` except it also\n * supports arrays as values in the object form of the initializer\n * instead of just strings. This is convenient when you need multiple\n * values for a given key, but don't want to use an array initializer.\n *\n * For example, instead of:\n *\n *   let searchParams = new URLSearchParams([\n *     ['sort', 'name'],\n *     ['sort', 'price']\n *   ]);\n *\n * you can do:\n *\n *   let searchParams = createSearchParams({\n *     sort: ['name', 'price']\n *   });\n */\nexport function createSearchParams(\n  init: URLSearchParamsInit = \"\"\n): URLSearchParams {\n  return new URLSearchParams(\n    typeof init === \"string\" ||\n    Array.isArray(init) ||\n    init instanceof URLSearchParams\n      ? init\n      : Object.keys(init).reduce((memo, key) => {\n          let value = init[key];\n          return memo.concat(\n            Array.isArray(value) ? value.map((v) => [key, v]) : [[key, value]]\n          );\n        }, [] as ParamKeyValuePair[])\n  );\n}\n\nexport function getSearchParamsForLocation(\n  locationSearch: string,\n  defaultSearchParams: URLSearchParams\n) {\n  let searchParams = createSearchParams(locationSearch);\n\n  for (let key of defaultSearchParams.keys()) {\n    if (!searchParams.has(key)) {\n      defaultSearchParams.getAll(key).forEach((value) => {\n        searchParams.append(key, value);\n      });\n    }\n  }\n\n  return searchParams;\n}\n\nexport interface SubmitOptions {\n  /**\n   * The HTTP method used to submit the form. Overrides `<form method>`.\n   * Defaults to \"GET\".\n   */\n  method?: FormMethod;\n\n  /**\n   * The action URL path used to submit the form. Overrides `<form action>`.\n   * Defaults to the path of the current route.\n   *\n   * Note: It is assumed the path is already resolved. If you need to resolve a\n   * relative path, use `useFormAction`.\n   */\n  action?: string;\n\n  /**\n   * The action URL used to submit the form. Overrides `<form encType>`.\n   * Defaults to \"application/x-www-form-urlencoded\".\n   */\n  encType?: FormEncType;\n\n  /**\n   * Set `true` to replace the current entry in the browser's history stack\n   * instead of creating a new one (i.e. stay on \"the same page\"). Defaults\n   * to `false`.\n   */\n  replace?: boolean;\n\n  /**\n   * Determines whether the form action is relative to the route hierarchy or\n   * the pathname.  Use this if you want to opt out of navigating the route\n   * hierarchy and want to instead route based on /-delimited URL segments\n   */\n  relative?: RelativeRoutingType;\n}\n\nexport function getFormSubmissionInfo(\n  target:\n    | HTMLFormElement\n    | HTMLButtonElement\n    | HTMLInputElement\n    | FormData\n    | URLSearchParams\n    | { [name: string]: string }\n    | null,\n  defaultAction: string,\n  options: SubmitOptions\n): {\n  url: URL;\n  method: string;\n  encType: string;\n  formData: FormData;\n} {\n  let method: string;\n  let action: string;\n  let encType: string;\n  let formData: FormData;\n\n  if (isFormElement(target)) {\n    let submissionTrigger: HTMLButtonElement | HTMLInputElement = (\n      options as any\n    ).submissionTrigger;\n\n    method = options.method || target.getAttribute(\"method\") || defaultMethod;\n    action = options.action || target.getAttribute(\"action\") || defaultAction;\n    encType =\n      options.encType || target.getAttribute(\"enctype\") || defaultEncType;\n\n    formData = new FormData(target);\n\n    if (submissionTrigger && submissionTrigger.name) {\n      formData.append(submissionTrigger.name, submissionTrigger.value);\n    }\n  } else if (\n    isButtonElement(target) ||\n    (isInputElement(target) &&\n      (target.type === \"submit\" || target.type === \"image\"))\n  ) {\n    let form = target.form;\n\n    if (form == null) {\n      throw new Error(\n        `Cannot submit a <button> or <input type=\"submit\"> without a <form>`\n      );\n    }\n\n    // <button>/<input type=\"submit\"> may override attributes of <form>\n\n    method =\n      options.method ||\n      target.getAttribute(\"formmethod\") ||\n      form.getAttribute(\"method\") ||\n      defaultMethod;\n    action =\n      options.action ||\n      target.getAttribute(\"formaction\") ||\n      form.getAttribute(\"action\") ||\n      defaultAction;\n    encType =\n      options.encType ||\n      target.getAttribute(\"formenctype\") ||\n      form.getAttribute(\"enctype\") ||\n      defaultEncType;\n\n    formData = new FormData(form);\n\n    // Include name + value from a <button>, appending in case the button name\n    // matches an existing input name\n    if (target.name) {\n      formData.append(target.name, target.value);\n    }\n  } else if (isHtmlElement(target)) {\n    throw new Error(\n      `Cannot submit element that is not <form>, <button>, or ` +\n        `<input type=\"submit|image\">`\n    );\n  } else {\n    method = options.method || defaultMethod;\n    action = options.action || defaultAction;\n    encType = options.encType || defaultEncType;\n\n    if (target instanceof FormData) {\n      formData = target;\n    } else {\n      formData = new FormData();\n\n      if (target instanceof URLSearchParams) {\n        for (let [name, value] of target) {\n          formData.append(name, value);\n        }\n      } else if (target != null) {\n        for (let name of Object.keys(target)) {\n          formData.append(name, target[name]);\n        }\n      }\n    }\n  }\n\n  let { protocol, host } = window.location;\n  let url = new URL(action, `${protocol}//${host}`);\n\n  return { url, method, encType, formData };\n}\n","/**\n * NOTE: If you refactor this to split up the modules into separate files,\n * you'll need to update the rollup config for react-router-dom-v5-compat.\n */\nimport * as React from \"react\";\nimport type {\n  NavigateOptions,\n  RelativeRoutingType,\n  RouteObject,\n  To,\n} from \"react-router\";\nimport {\n  Router,\n  createPath,\n  useHref,\n  useLocation,\n  useMatch,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useResolvedPath,\n  UNSAFE_DataRouterContext as DataRouterContext,\n  UNSAFE_DataRouterStateContext as DataRouterStateContext,\n  UNSAFE_RouteContext as RouteContext,\n  UNSAFE_enhanceManualRouteObjects as enhanceManualRouteObjects,\n} from \"react-router\";\nimport type {\n  BrowserHistory,\n  Fetcher,\n  FormEncType,\n  FormMethod,\n  GetScrollRestorationKeyFunction,\n  HashHistory,\n  History,\n  HydrationState,\n  Router as RemixRouter,\n} from \"@remix-run/router\";\nimport {\n  createRouter,\n  createBrowserHistory,\n  createHashHistory,\n  invariant,\n  matchPath,\n} from \"@remix-run/router\";\n\nimport type {\n  SubmitOptions,\n  ParamKeyValuePair,\n  URLSearchParamsInit,\n} from \"./dom\";\nimport {\n  createSearchParams,\n  defaultMethod,\n  getFormSubmissionInfo,\n  getSearchParamsForLocation,\n  shouldProcessLinkClick,\n} from \"./dom\";\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Re-exports\n////////////////////////////////////////////////////////////////////////////////\n\nexport type {\n  FormEncType,\n  FormMethod,\n  ParamKeyValuePair,\n  SubmitOptions,\n  URLSearchParamsInit,\n};\nexport { createSearchParams };\n\n// Note: Keep in sync with react-router exports!\nexport type {\n  ActionFunction,\n  ActionFunctionArgs,\n  AwaitProps,\n  DataMemoryRouterProps,\n  DataRouteMatch,\n  DataRouteObject,\n  Fetcher,\n  Hash,\n  IndexRouteProps,\n  JsonFunction,\n  LayoutRouteProps,\n  LoaderFunction,\n  LoaderFunctionArgs,\n  Location,\n  MemoryRouterProps,\n  NavigateFunction,\n  NavigateOptions,\n  NavigateProps,\n  Navigation,\n  Navigator,\n  OutletProps,\n  Params,\n  ParamParseKey,\n  Path,\n  PathMatch,\n  Pathname,\n  PathPattern,\n  PathRouteProps,\n  RedirectFunction,\n  RelativeRoutingType,\n  RouteMatch,\n  RouteObject,\n  RouteProps,\n  RouterProps,\n  RouterProviderProps,\n  RoutesProps,\n  Search,\n  ShouldRevalidateFunction,\n  To,\n} from \"react-router\";\nexport {\n  AbortedDeferredError,\n  Await,\n  MemoryRouter,\n  Navigate,\n  NavigationType,\n  Outlet,\n  Route,\n  Router,\n  RouterProvider,\n  Routes,\n  createMemoryRouter,\n  createPath,\n  createRoutesFromChildren,\n  createRoutesFromElements,\n  defer,\n  isRouteErrorResponse,\n  generatePath,\n  json,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  redirect,\n  renderMatches,\n  resolvePath,\n  useActionData,\n  useAsyncError,\n  useAsyncValue,\n  useHref,\n  useInRouterContext,\n  useLoaderData,\n  useLocation,\n  useMatch,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useNavigationType,\n  useOutlet,\n  useOutletContext,\n  useParams,\n  useResolvedPath,\n  useRevalidator,\n  useRouteError,\n  useRouteLoaderData,\n  useRoutes,\n} from \"react-router\";\n\n///////////////////////////////////////////////////////////////////////////////\n// DANGER! PLEASE READ ME!\n// We provide these exports as an escape hatch in the event that you need any\n// routing data that we don't provide an explicit API for. With that said, we\n// want to cover your use case if we can, so if you feel the need to use these\n// we want to hear from you. Let us know what you're building and we'll do our\n// best to make sure we can support you!\n//\n// We consider these exports an implementation detail and do not guarantee\n// against any breaking changes, regardless of the semver release. Use with\n// extreme caution and only if you understand the consequences. Godspeed.\n///////////////////////////////////////////////////////////////////////////////\n\n/** @internal */\nexport {\n  UNSAFE_DataRouterContext,\n  UNSAFE_DataRouterStateContext,\n  UNSAFE_DataStaticRouterContext,\n  UNSAFE_NavigationContext,\n  UNSAFE_LocationContext,\n  UNSAFE_RouteContext,\n  UNSAFE_enhanceManualRouteObjects,\n} from \"react-router\";\n//#endregion\n\ndeclare global {\n  var __staticRouterHydrationData: HydrationState | undefined;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Routers\n////////////////////////////////////////////////////////////////////////////////\n\nexport function createBrowserRouter(\n  routes: RouteObject[],\n  opts?: {\n    basename?: string;\n    hydrationData?: HydrationState;\n    window?: Window;\n  }\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    history: createBrowserHistory({ window: opts?.window }),\n    hydrationData: opts?.hydrationData || window?.__staticRouterHydrationData,\n    routes: enhanceManualRouteObjects(routes),\n  }).initialize();\n}\n\nexport function createHashRouter(\n  routes: RouteObject[],\n  opts?: {\n    basename?: string;\n    hydrationData?: HydrationState;\n    window?: Window;\n  }\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    history: createHashHistory({ window: opts?.window }),\n    hydrationData: opts?.hydrationData || window?.__staticRouterHydrationData,\n    routes: enhanceManualRouteObjects(routes),\n  }).initialize();\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Components\n////////////////////////////////////////////////////////////////////////////////\n\nexport interface BrowserRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Provides the cleanest URLs.\n */\nexport function BrowserRouter({\n  basename,\n  children,\n  window,\n}: BrowserRouterProps) {\n  let historyRef = React.useRef<BrowserHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createBrowserHistory({ window, v5Compat: true });\n  }\n\n  let history = historyRef.current;\n  let [state, setState] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface HashRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Stores the location in the hash\n * portion of the URL so it is not sent to the server.\n */\nexport function HashRouter({ basename, children, window }: HashRouterProps) {\n  let historyRef = React.useRef<HashHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createHashHistory({ window, v5Compat: true });\n  }\n\n  let history = historyRef.current;\n  let [state, setState] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface HistoryRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  history: History;\n}\n\n/**\n * A `<Router>` that accepts a pre-instantiated history object. It's important\n * to note that using your own history object is highly discouraged and may add\n * two versions of the history library to your bundles unless you use the same\n * version of the history library that React Router uses internally.\n */\nfunction HistoryRouter({ basename, children, history }: HistoryRouterProps) {\n  const [state, setState] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nif (__DEV__) {\n  HistoryRouter.displayName = \"unstable_HistoryRouter\";\n}\n\nexport { HistoryRouter as unstable_HistoryRouter };\n\nexport interface LinkProps\n  extends Omit<React.AnchorHTMLAttributes<HTMLAnchorElement>, \"href\"> {\n  reloadDocument?: boolean;\n  replace?: boolean;\n  state?: any;\n  preventScrollReset?: boolean;\n  relative?: RelativeRoutingType;\n  to: To;\n}\n\n/**\n * The public API for rendering a history-aware <a>.\n */\nexport const Link = React.forwardRef<HTMLAnchorElement, LinkProps>(\n  function LinkWithRef(\n    {\n      onClick,\n      relative,\n      reloadDocument,\n      replace,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      ...rest\n    },\n    ref\n  ) {\n    let href = useHref(to, { relative });\n    let internalOnClick = useLinkClickHandler(to, {\n      replace,\n      state,\n      target,\n      preventScrollReset,\n      relative,\n    });\n    function handleClick(\n      event: React.MouseEvent<HTMLAnchorElement, MouseEvent>\n    ) {\n      if (onClick) onClick(event);\n      if (!event.defaultPrevented) {\n        internalOnClick(event);\n      }\n    }\n\n    return (\n      // eslint-disable-next-line jsx-a11y/anchor-has-content\n      <a\n        {...rest}\n        href={href}\n        onClick={reloadDocument ? onClick : handleClick}\n        ref={ref}\n        target={target}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  Link.displayName = \"Link\";\n}\n\nexport interface NavLinkProps\n  extends Omit<LinkProps, \"className\" | \"style\" | \"children\"> {\n  children?:\n    | React.ReactNode\n    | ((props: { isActive: boolean; isPending: boolean }) => React.ReactNode);\n  caseSensitive?: boolean;\n  className?:\n    | string\n    | ((props: {\n        isActive: boolean;\n        isPending: boolean;\n      }) => string | undefined);\n  end?: boolean;\n  style?:\n    | React.CSSProperties\n    | ((props: {\n        isActive: boolean;\n        isPending: boolean;\n      }) => React.CSSProperties | undefined);\n}\n\n/**\n * A <Link> wrapper that knows if it's \"active\" or not.\n */\nexport const NavLink = React.forwardRef<HTMLAnchorElement, NavLinkProps>(\n  function NavLinkWithRef(\n    {\n      \"aria-current\": ariaCurrentProp = \"page\",\n      caseSensitive = false,\n      className: classNameProp = \"\",\n      end = false,\n      style: styleProp,\n      to,\n      children,\n      ...rest\n    },\n    ref\n  ) {\n    let path = useResolvedPath(to);\n    let match = useMatch({ path: path.pathname, end, caseSensitive });\n\n    let routerState = React.useContext(DataRouterStateContext);\n    let nextLocation = routerState?.navigation.location;\n    let nextPath = useResolvedPath(nextLocation || \"\");\n    let nextMatch = React.useMemo(\n      () =>\n        nextLocation\n          ? matchPath(\n              { path: path.pathname, end, caseSensitive },\n              nextPath.pathname\n            )\n          : null,\n      [nextLocation, path.pathname, caseSensitive, end, nextPath.pathname]\n    );\n\n    let isPending = nextMatch != null;\n    let isActive = match != null;\n\n    let ariaCurrent = isActive ? ariaCurrentProp : undefined;\n\n    let className: string | undefined;\n    if (typeof classNameProp === \"function\") {\n      className = classNameProp({ isActive, isPending });\n    } else {\n      // If the className prop is not a function, we use a default `active`\n      // class for <NavLink />s that are active. In v5 `active` was the default\n      // value for `activeClassName`, but we are removing that API and can still\n      // use the old default behavior for a cleaner upgrade path and keep the\n      // simple styling rules working as they currently do.\n      className = [\n        classNameProp,\n        isActive ? \"active\" : null,\n        isPending ? \"pending\" : null,\n      ]\n        .filter(Boolean)\n        .join(\" \");\n    }\n\n    let style =\n      typeof styleProp === \"function\"\n        ? styleProp({ isActive, isPending })\n        : styleProp;\n\n    return (\n      <Link\n        {...rest}\n        aria-current={ariaCurrent}\n        className={className}\n        ref={ref}\n        style={style}\n        to={to}\n      >\n        {typeof children === \"function\"\n          ? children({ isActive, isPending })\n          : children}\n      </Link>\n    );\n  }\n);\n\nif (__DEV__) {\n  NavLink.displayName = \"NavLink\";\n}\n\nexport interface FormProps extends React.FormHTMLAttributes<HTMLFormElement> {\n  /**\n   * The HTTP verb to use when the form is submit. Supports \"get\", \"post\",\n   * \"put\", \"delete\", \"patch\".\n   */\n  method?: FormMethod;\n\n  /**\n   * Normal `<form action>` but supports React Router's relative paths.\n   */\n  action?: string;\n\n  /**\n   * Forces a full document navigation instead of a fetch.\n   */\n  reloadDocument?: boolean;\n\n  /**\n   * Replaces the current entry in the browser history stack when the form\n   * navigates. Use this if you don't want the user to be able to click \"back\"\n   * to the page with the form on it.\n   */\n  replace?: boolean;\n\n  /**\n   * Determines whether the form action is relative to the route hierarchy or\n   * the pathname.  Use this if you want to opt out of navigating the route\n   * hierarchy and want to instead route based on /-delimited URL segments\n   */\n  relative?: RelativeRoutingType;\n\n  /**\n   * A function to call when the form is submitted. If you call\n   * `event.preventDefault()` then this form will not do anything.\n   */\n  onSubmit?: React.FormEventHandler<HTMLFormElement>;\n}\n\n/**\n * A `@remix-run/router`-aware `<form>`. It behaves like a normal form except\n * that the interaction with the server is with `fetch` instead of new document\n * requests, allowing components to add nicer UX to the page as the form is\n * submitted and returns with data.\n */\nexport const Form = React.forwardRef<HTMLFormElement, FormProps>(\n  (props, ref) => {\n    return <FormImpl {...props} ref={ref} />;\n  }\n);\n\nif (__DEV__) {\n  Form.displayName = \"Form\";\n}\n\ntype HTMLSubmitEvent = React.BaseSyntheticEvent<\n  SubmitEvent,\n  Event,\n  HTMLFormElement\n>;\n\ntype HTMLFormSubmitter = HTMLButtonElement | HTMLInputElement;\n\ninterface FormImplProps extends FormProps {\n  fetcherKey?: string;\n  routeId?: string;\n}\n\nconst FormImpl = React.forwardRef<HTMLFormElement, FormImplProps>(\n  (\n    {\n      reloadDocument,\n      replace,\n      method = defaultMethod,\n      action,\n      onSubmit,\n      fetcherKey,\n      routeId,\n      relative,\n      ...props\n    },\n    forwardedRef\n  ) => {\n    let submit = useSubmitImpl(fetcherKey, routeId);\n    let formMethod: FormMethod =\n      method.toLowerCase() === \"get\" ? \"get\" : \"post\";\n    let formAction = useFormAction(action, { relative });\n    let submitHandler: React.FormEventHandler<HTMLFormElement> = (event) => {\n      onSubmit && onSubmit(event);\n      if (event.defaultPrevented) return;\n      event.preventDefault();\n\n      let submitter = (event as unknown as HTMLSubmitEvent).nativeEvent\n        .submitter as HTMLFormSubmitter | null;\n\n      submit(submitter || event.currentTarget, { method, replace, relative });\n    };\n\n    return (\n      <form\n        ref={forwardedRef}\n        method={formMethod}\n        action={formAction}\n        onSubmit={reloadDocument ? onSubmit : submitHandler}\n        {...props}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  Form.displayName = \"Form\";\n}\n\ninterface ScrollRestorationProps {\n  getKey?: GetScrollRestorationKeyFunction;\n  storageKey?: string;\n}\n\n/**\n * This component will emulate the browser's scroll restoration on location\n * changes.\n */\nexport function ScrollRestoration({\n  getKey,\n  storageKey,\n}: ScrollRestorationProps) {\n  useScrollRestoration({ getKey, storageKey });\n  return null;\n}\n\nif (__DEV__) {\n  ScrollRestoration.displayName = \"ScrollRestoration\";\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Hooks\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Handles the click behavior for router `<Link>` components. This is useful if\n * you need to create custom `<Link>` components with the same click behavior we\n * use in our exported `<Link>`.\n */\nexport function useLinkClickHandler<E extends Element = HTMLAnchorElement>(\n  to: To,\n  {\n    target,\n    replace: replaceProp,\n    state,\n    preventScrollReset,\n    relative,\n  }: {\n    target?: React.HTMLAttributeAnchorTarget;\n    replace?: boolean;\n    state?: any;\n    preventScrollReset?: boolean;\n    relative?: RelativeRoutingType;\n  } = {}\n): (event: React.MouseEvent<E, MouseEvent>) => void {\n  let navigate = useNavigate();\n  let location = useLocation();\n  let path = useResolvedPath(to, { relative });\n\n  return React.useCallback(\n    (event: React.MouseEvent<E, MouseEvent>) => {\n      if (shouldProcessLinkClick(event, target)) {\n        event.preventDefault();\n\n        // If the URL hasn't changed, a regular <a> will do a replace instead of\n        // a push, so do the same here unless the replace prop is explicitly set\n        let replace =\n          replaceProp !== undefined\n            ? replaceProp\n            : createPath(location) === createPath(path);\n\n        navigate(to, { replace, state, preventScrollReset, relative });\n      }\n    },\n    [\n      location,\n      navigate,\n      path,\n      replaceProp,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      relative,\n    ]\n  );\n}\n\n/**\n * A convenient wrapper for reading and writing search parameters via the\n * URLSearchParams interface.\n */\nexport function useSearchParams(\n  defaultInit?: URLSearchParamsInit\n): [URLSearchParams, SetURLSearchParams] {\n  warning(\n    typeof URLSearchParams !== \"undefined\",\n    `You cannot use the \\`useSearchParams\\` hook in a browser that does not ` +\n      `support the URLSearchParams API. If you need to support Internet ` +\n      `Explorer 11, we recommend you load a polyfill such as ` +\n      `https://github.com/ungap/url-search-params\\n\\n` +\n      `If you're unsure how to load polyfills, we recommend you check out ` +\n      `https://polyfill.io/v3/ which provides some recommendations about how ` +\n      `to load polyfills only for users that need them, instead of for every ` +\n      `user.`\n  );\n\n  let defaultSearchParamsRef = React.useRef(createSearchParams(defaultInit));\n\n  let location = useLocation();\n  let searchParams = React.useMemo(\n    () =>\n      getSearchParamsForLocation(\n        location.search,\n        defaultSearchParamsRef.current\n      ),\n    [location.search]\n  );\n\n  let navigate = useNavigate();\n  let setSearchParams = React.useCallback<SetURLSearchParams>(\n    (nextInit, navigateOptions) => {\n      const newSearchParams = createSearchParams(\n        typeof nextInit === \"function\" ? nextInit(searchParams) : nextInit\n      );\n      navigate(\"?\" + newSearchParams, navigateOptions);\n    },\n    [navigate, searchParams]\n  );\n\n  return [searchParams, setSearchParams];\n}\n\ntype SetURLSearchParams = (\n  nextInit?:\n    | URLSearchParamsInit\n    | ((prev: URLSearchParams) => URLSearchParamsInit),\n  navigateOpts?: NavigateOptions\n) => void;\n\ntype SubmitTarget =\n  | HTMLFormElement\n  | HTMLButtonElement\n  | HTMLInputElement\n  | FormData\n  | URLSearchParams\n  | { [name: string]: string }\n  | null;\n\n/**\n * Submits a HTML `<form>` to the server without reloading the page.\n */\nexport interface SubmitFunction {\n  (\n    /**\n     * Specifies the `<form>` to be submitted to the server, a specific\n     * `<button>` or `<input type=\"submit\">` to use to submit the form, or some\n     * arbitrary data to submit.\n     *\n     * Note: When using a `<button>` its `name` and `value` will also be\n     * included in the form data that is submitted.\n     */\n    target: SubmitTarget,\n\n    /**\n     * Options that override the `<form>`'s own attributes. Required when\n     * submitting arbitrary data without a backing `<form>`.\n     */\n    options?: SubmitOptions\n  ): void;\n}\n\n/**\n * Returns a function that may be used to programmatically submit a form (or\n * some arbitrary data) to the server.\n */\nexport function useSubmit(): SubmitFunction {\n  return useSubmitImpl();\n}\n\nfunction useSubmitImpl(fetcherKey?: string, routeId?: string): SubmitFunction {\n  let dataRouterContext = React.useContext(DataRouterContext);\n  invariant(\n    dataRouterContext,\n    \"useSubmitImpl must be used within a Data Router\"\n  );\n  let { router } = dataRouterContext;\n  let defaultAction = useFormAction();\n\n  return React.useCallback(\n    (target, options = {}) => {\n      if (typeof document === \"undefined\") {\n        throw new Error(\n          \"You are calling submit during the server render. \" +\n            \"Try calling submit within a `useEffect` or callback instead.\"\n        );\n      }\n\n      let { method, encType, formData, url } = getFormSubmissionInfo(\n        target,\n        defaultAction,\n        options\n      );\n\n      let href = url.pathname + url.search;\n      let opts = {\n        replace: options.replace,\n        formData,\n        formMethod: method as FormMethod,\n        formEncType: encType as FormEncType,\n      };\n      if (fetcherKey) {\n        invariant(routeId != null, \"No routeId available for useFetcher()\");\n        router.fetch(fetcherKey, routeId, href, opts);\n      } else {\n        router.navigate(href, opts);\n      }\n    },\n    [defaultAction, router, fetcherKey, routeId]\n  );\n}\n\nexport function useFormAction(\n  action?: string,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): string {\n  let routeContext = React.useContext(RouteContext);\n  invariant(routeContext, \"useFormAction must be used inside a RouteContext\");\n\n  let [match] = routeContext.matches.slice(-1);\n  let resolvedAction = action ?? \".\";\n  let path = useResolvedPath(resolvedAction, { relative });\n\n  // Previously we set the default action to \".\". The problem with this is that\n  // `useResolvedPath(\".\")` excludes search params and the hash of the resolved\n  // URL. This is the intended behavior of when \".\" is specifically provided as\n  // the form action, but inconsistent w/ browsers when the action is omitted.\n  // https://github.com/remix-run/remix/issues/927\n  let location = useLocation();\n  if (action == null) {\n    // Safe to write to these directly here since if action was undefined, we\n    // would have called useResolvedPath(\".\") which will never include a search\n    // or hash\n    path.search = location.search;\n    path.hash = location.hash;\n\n    // When grabbing search params from the URL, remove the automatically\n    // inserted ?index param so we match the useResolvedPath search behavior\n    // which would not include ?index\n    if (match.route.index) {\n      let params = new URLSearchParams(path.search);\n      params.delete(\"index\");\n      path.search = params.toString() ? `?${params.toString()}` : \"\";\n    }\n  }\n\n  if ((!action || action === \".\") && match.route.index) {\n    path.search = path.search\n      ? path.search.replace(/^\\?/, \"?index&\")\n      : \"?index\";\n  }\n\n  return createPath(path);\n}\n\nfunction createFetcherForm(fetcherKey: string, routeId: string) {\n  let FetcherForm = React.forwardRef<HTMLFormElement, FormProps>(\n    (props, ref) => {\n      return (\n        <FormImpl\n          {...props}\n          ref={ref}\n          fetcherKey={fetcherKey}\n          routeId={routeId}\n        />\n      );\n    }\n  );\n  if (__DEV__) {\n    FetcherForm.displayName = \"fetcher.Form\";\n  }\n  return FetcherForm;\n}\n\nlet fetcherId = 0;\n\nexport type FetcherWithComponents<TData> = Fetcher<TData> & {\n  Form: ReturnType<typeof createFetcherForm>;\n  submit: (\n    target: SubmitTarget,\n    // Fetchers cannot replace because they are not navigation events\n    options?: Omit<SubmitOptions, \"replace\">\n  ) => void;\n  load: (href: string) => void;\n};\n\n/**\n * Interacts with route loaders and actions without causing a navigation. Great\n * for any interaction that stays on the same page.\n */\nexport function useFetcher<TData = any>(): FetcherWithComponents<TData> {\n  let dataRouterContext = React.useContext(DataRouterContext);\n  invariant(dataRouterContext, `useFetcher must be used within a Data Router`);\n  let { router } = dataRouterContext;\n\n  let route = React.useContext(RouteContext);\n  invariant(route, `useFetcher must be used inside a RouteContext`);\n\n  let routeId = route.matches[route.matches.length - 1]?.route.id;\n  invariant(\n    routeId != null,\n    `useFetcher can only be used on routes that contain a unique \"id\"`\n  );\n\n  let [fetcherKey] = React.useState(() => String(++fetcherId));\n  let [Form] = React.useState(() => {\n    invariant(routeId, `No routeId available for fetcher.Form()`);\n    return createFetcherForm(fetcherKey, routeId);\n  });\n  let [load] = React.useState(() => (href: string) => {\n    invariant(router, \"No router available for fetcher.load()\");\n    invariant(routeId, \"No routeId available for fetcher.load()\");\n    router.fetch(fetcherKey, routeId, href);\n  });\n  let submit = useSubmitImpl(fetcherKey, routeId);\n\n  let fetcher = router.getFetcher<TData>(fetcherKey);\n\n  let fetcherWithComponents = React.useMemo(\n    () => ({\n      Form,\n      submit,\n      load,\n      ...fetcher,\n    }),\n    [fetcher, Form, submit, load]\n  );\n\n  React.useEffect(() => {\n    // Is this busted when the React team gets real weird and calls effects\n    // twice on mount?  We really just need to garbage collect here when this\n    // fetcher is no longer around.\n    return () => {\n      if (!router) {\n        console.warn(`No fetcher available to clean up from useFetcher()`);\n        return;\n      }\n      router.deleteFetcher(fetcherKey);\n    };\n  }, [router, fetcherKey]);\n\n  return fetcherWithComponents;\n}\n\n/**\n * Provides all fetchers currently on the page. Useful for layouts and parent\n * routes that need to provide pending/optimistic UI regarding the fetch.\n */\nexport function useFetchers(): Fetcher[] {\n  let state = React.useContext(DataRouterStateContext);\n  invariant(state, `useFetchers must be used within a DataRouterStateContext`);\n  return [...state.fetchers.values()];\n}\n\nconst SCROLL_RESTORATION_STORAGE_KEY = \"react-router-scroll-positions\";\nlet savedScrollPositions: Record<string, number> = {};\n\n/**\n * When rendered inside a RouterProvider, will restore scroll positions on navigations\n */\nfunction useScrollRestoration({\n  getKey,\n  storageKey,\n}: {\n  getKey?: GetScrollRestorationKeyFunction;\n  storageKey?: string;\n} = {}) {\n  let location = useLocation();\n  let matches = useMatches();\n  let navigation = useNavigation();\n  let dataRouterContext = React.useContext(DataRouterContext);\n  invariant(\n    dataRouterContext,\n    \"useScrollRestoration must be used within a DataRouterContext\"\n  );\n  let { router } = dataRouterContext;\n  let state = React.useContext(DataRouterStateContext);\n\n  invariant(\n    router != null && state != null,\n    \"useScrollRestoration must be used within a DataRouterStateContext\"\n  );\n  let { restoreScrollPosition, preventScrollReset } = state;\n\n  // Trigger manual scroll restoration while we're active\n  React.useEffect(() => {\n    window.history.scrollRestoration = \"manual\";\n    return () => {\n      window.history.scrollRestoration = \"auto\";\n    };\n  }, []);\n\n  // Save positions on unload\n  useBeforeUnload(\n    React.useCallback(() => {\n      if (navigation.state === \"idle\") {\n        let key = (getKey ? getKey(location, matches) : null) || location.key;\n        savedScrollPositions[key] = window.scrollY;\n      }\n      sessionStorage.setItem(\n        storageKey || SCROLL_RESTORATION_STORAGE_KEY,\n        JSON.stringify(savedScrollPositions)\n      );\n      window.history.scrollRestoration = \"auto\";\n    }, [storageKey, getKey, navigation.state, location, matches])\n  );\n\n  // Read in any saved scroll locations\n  React.useLayoutEffect(() => {\n    try {\n      let sessionPositions = sessionStorage.getItem(\n        storageKey || SCROLL_RESTORATION_STORAGE_KEY\n      );\n      if (sessionPositions) {\n        savedScrollPositions = JSON.parse(sessionPositions);\n      }\n    } catch (e) {\n      // no-op, use default empty object\n    }\n  }, [storageKey]);\n\n  // Enable scroll restoration in the router\n  React.useLayoutEffect(() => {\n    let disableScrollRestoration = router?.enableScrollRestoration(\n      savedScrollPositions,\n      () => window.scrollY,\n      getKey\n    );\n    return () => disableScrollRestoration && disableScrollRestoration();\n  }, [router, getKey]);\n\n  // Restore scrolling when state.restoreScrollPosition changes\n  React.useLayoutEffect(() => {\n    // Explicit false means don't do anything (used for submissions)\n    if (restoreScrollPosition === false) {\n      return;\n    }\n\n    // been here before, scroll to it\n    if (typeof restoreScrollPosition === \"number\") {\n      window.scrollTo(0, restoreScrollPosition);\n      return;\n    }\n\n    // try to scroll to the hash\n    if (location.hash) {\n      let el = document.getElementById(location.hash.slice(1));\n      if (el) {\n        el.scrollIntoView();\n        return;\n      }\n    }\n\n    // Opt out of scroll reset if this link requested it\n    if (preventScrollReset === true) {\n      return;\n    }\n\n    // otherwise go to the top on new locations\n    window.scrollTo(0, 0);\n  }, [location, restoreScrollPosition, preventScrollReset]);\n}\n\nfunction useBeforeUnload(callback: () => any): void {\n  React.useEffect(() => {\n    window.addEventListener(\"beforeunload\", callback);\n    return () => {\n      window.removeEventListener(\"beforeunload\", callback);\n    };\n  }, [callback]);\n}\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Utils\n////////////////////////////////////////////////////////////////////////////////\n\nfunction warning(cond: boolean, message: string): void {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n\n    try {\n      // Welcome to debugging React Router!\n      //\n      // This error is thrown as a convenience so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message);\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\n//#endregion\n"]},"metadata":{},"sourceType":"module"}