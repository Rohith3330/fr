{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = extractValueFromConditionalExpression;\n/**\n * Extractor function for a ConditionalExpression type value node.\n *\n * @param - value - AST Value object with type `ConditionalExpression`\n * @returns - The extracted value converted to correct type.\n */\n\nfunction extractValueFromConditionalExpression(value) {\n  // eslint-disable-next-line global-require\n  var getValue = require('.').default;\n\n  var test = value.test,\n      alternate = value.alternate,\n      consequent = value.consequent;\n  return getValue(test) ? getValue(consequent) : getValue(alternate);\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","default","extractValueFromConditionalExpression","getValue","require","test","alternate","consequent"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/jsx-ast-utils/lib/values/expressions/ConditionalExpression.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = extractValueFromConditionalExpression;\n/**\n * Extractor function for a ConditionalExpression type value node.\n *\n * @param - value - AST Value object with type `ConditionalExpression`\n * @returns - The extracted value converted to correct type.\n */\nfunction extractValueFromConditionalExpression(value) {\n  // eslint-disable-next-line global-require\n  var getValue = require('.').default;\n  var test = value.test,\n      alternate = value.alternate,\n      consequent = value.consequent;\n\n\n  return getValue(test) ? getValue(consequent) : getValue(alternate);\n}"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAC3CC,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,qCAAlB;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASA,qCAAT,CAA+CF,KAA/C,EAAsD;EACpD;EACA,IAAIG,QAAQ,GAAGC,OAAO,CAAC,GAAD,CAAP,CAAaH,OAA5B;;EACA,IAAII,IAAI,GAAGL,KAAK,CAACK,IAAjB;EAAA,IACIC,SAAS,GAAGN,KAAK,CAACM,SADtB;EAAA,IAEIC,UAAU,GAAGP,KAAK,CAACO,UAFvB;EAKA,OAAOJ,QAAQ,CAACE,IAAD,CAAR,GAAiBF,QAAQ,CAACI,UAAD,CAAzB,GAAwCJ,QAAQ,CAACG,SAAD,CAAvD;AACD"},"metadata":{},"sourceType":"script"}