{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = retryable;\n\nvar _retry = require('./retry.js');\n\nvar _retry2 = _interopRequireDefault(_retry);\n\nvar _initialParams = require('./internal/initialParams.js');\n\nvar _initialParams2 = _interopRequireDefault(_initialParams);\n\nvar _wrapAsync = require('./internal/wrapAsync.js');\n\nvar _wrapAsync2 = _interopRequireDefault(_wrapAsync);\n\nvar _promiseCallback = require('./internal/promiseCallback.js');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * A close relative of [`retry`]{@link module:ControlFlow.retry}.  This method\n * wraps a task and makes it retryable, rather than immediately calling it\n * with retries.\n *\n * @name retryable\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.retry]{@link module:ControlFlow.retry}\n * @category Control Flow\n * @param {Object|number} [opts = {times: 5, interval: 0}| 5] - optional\n * options, exactly the same as from `retry`, except for a `opts.arity` that\n * is the arity of the `task` function, defaulting to `task.length`\n * @param {AsyncFunction} task - the asynchronous function to wrap.\n * This function will be passed any arguments passed to the returned wrapper.\n * Invoked with (...args, callback).\n * @returns {AsyncFunction} The wrapped function, which when invoked, will\n * retry on an error, based on the parameters specified in `opts`.\n * This function will accept the same parameters as `task`.\n * @example\n *\n * async.auto({\n *     dep1: async.retryable(3, getFromFlakyService),\n *     process: [\"dep1\", async.retryable(3, function (results, cb) {\n *         maybeProcessData(results.dep1, cb);\n *     })]\n * }, callback);\n */\n\n\nfunction retryable(opts, task) {\n  if (!task) {\n    task = opts;\n    opts = null;\n  }\n\n  let arity = opts && opts.arity || task.length;\n\n  if ((0, _wrapAsync.isAsync)(task)) {\n    arity += 1;\n  }\n\n  var _task = (0, _wrapAsync2.default)(task);\n\n  return (0, _initialParams2.default)((args, callback) => {\n    if (args.length < arity - 1 || callback == null) {\n      args.push(callback);\n      callback = (0, _promiseCallback.promiseCallback)();\n    }\n\n    function taskFn(cb) {\n      _task(...args, cb);\n    }\n\n    if (opts) (0, _retry2.default)(opts, taskFn, callback);else (0, _retry2.default)(taskFn, callback);\n    return callback[_promiseCallback.PROMISE_SYMBOL];\n  });\n}\n\nmodule.exports = exports['default'];","map":{"version":3,"names":["Object","defineProperty","exports","value","default","retryable","_retry","require","_retry2","_interopRequireDefault","_initialParams","_initialParams2","_wrapAsync","_wrapAsync2","_promiseCallback","obj","__esModule","opts","task","arity","length","isAsync","_task","args","callback","push","promiseCallback","taskFn","cb","PROMISE_SYMBOL","module"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/async/retryable.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = retryable;\n\nvar _retry = require('./retry.js');\n\nvar _retry2 = _interopRequireDefault(_retry);\n\nvar _initialParams = require('./internal/initialParams.js');\n\nvar _initialParams2 = _interopRequireDefault(_initialParams);\n\nvar _wrapAsync = require('./internal/wrapAsync.js');\n\nvar _wrapAsync2 = _interopRequireDefault(_wrapAsync);\n\nvar _promiseCallback = require('./internal/promiseCallback.js');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * A close relative of [`retry`]{@link module:ControlFlow.retry}.  This method\n * wraps a task and makes it retryable, rather than immediately calling it\n * with retries.\n *\n * @name retryable\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.retry]{@link module:ControlFlow.retry}\n * @category Control Flow\n * @param {Object|number} [opts = {times: 5, interval: 0}| 5] - optional\n * options, exactly the same as from `retry`, except for a `opts.arity` that\n * is the arity of the `task` function, defaulting to `task.length`\n * @param {AsyncFunction} task - the asynchronous function to wrap.\n * This function will be passed any arguments passed to the returned wrapper.\n * Invoked with (...args, callback).\n * @returns {AsyncFunction} The wrapped function, which when invoked, will\n * retry on an error, based on the parameters specified in `opts`.\n * This function will accept the same parameters as `task`.\n * @example\n *\n * async.auto({\n *     dep1: async.retryable(3, getFromFlakyService),\n *     process: [\"dep1\", async.retryable(3, function (results, cb) {\n *         maybeProcessData(results.dep1, cb);\n *     })]\n * }, callback);\n */\nfunction retryable(opts, task) {\n    if (!task) {\n        task = opts;\n        opts = null;\n    }\n    let arity = opts && opts.arity || task.length;\n    if ((0, _wrapAsync.isAsync)(task)) {\n        arity += 1;\n    }\n    var _task = (0, _wrapAsync2.default)(task);\n    return (0, _initialParams2.default)((args, callback) => {\n        if (args.length < arity - 1 || callback == null) {\n            args.push(callback);\n            callback = (0, _promiseCallback.promiseCallback)();\n        }\n        function taskFn(cb) {\n            _task(...args, cb);\n        }\n\n        if (opts) (0, _retry2.default)(opts, taskFn, callback);else (0, _retry2.default)(taskFn, callback);\n\n        return callback[_promiseCallback.PROMISE_SYMBOL];\n    });\n}\nmodule.exports = exports['default'];"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EACzCC,KAAK,EAAE;AADkC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,SAAlB;;AAEA,IAAIC,MAAM,GAAGC,OAAO,CAAC,YAAD,CAApB;;AAEA,IAAIC,OAAO,GAAGC,sBAAsB,CAACH,MAAD,CAApC;;AAEA,IAAII,cAAc,GAAGH,OAAO,CAAC,6BAAD,CAA5B;;AAEA,IAAII,eAAe,GAAGF,sBAAsB,CAACC,cAAD,CAA5C;;AAEA,IAAIE,UAAU,GAAGL,OAAO,CAAC,yBAAD,CAAxB;;AAEA,IAAIM,WAAW,GAAGJ,sBAAsB,CAACG,UAAD,CAAxC;;AAEA,IAAIE,gBAAgB,GAAGP,OAAO,CAAC,+BAAD,CAA9B;;AAEA,SAASE,sBAAT,CAAgCM,GAAhC,EAAqC;EAAE,OAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;IAAEX,OAAO,EAAEW;EAAX,CAArC;AAAwD;AAE/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASV,SAAT,CAAmBY,IAAnB,EAAyBC,IAAzB,EAA+B;EAC3B,IAAI,CAACA,IAAL,EAAW;IACPA,IAAI,GAAGD,IAAP;IACAA,IAAI,GAAG,IAAP;EACH;;EACD,IAAIE,KAAK,GAAGF,IAAI,IAAIA,IAAI,CAACE,KAAb,IAAsBD,IAAI,CAACE,MAAvC;;EACA,IAAI,CAAC,GAAGR,UAAU,CAACS,OAAf,EAAwBH,IAAxB,CAAJ,EAAmC;IAC/BC,KAAK,IAAI,CAAT;EACH;;EACD,IAAIG,KAAK,GAAG,CAAC,GAAGT,WAAW,CAACT,OAAhB,EAAyBc,IAAzB,CAAZ;;EACA,OAAO,CAAC,GAAGP,eAAe,CAACP,OAApB,EAA6B,CAACmB,IAAD,EAAOC,QAAP,KAAoB;IACpD,IAAID,IAAI,CAACH,MAAL,GAAcD,KAAK,GAAG,CAAtB,IAA2BK,QAAQ,IAAI,IAA3C,EAAiD;MAC7CD,IAAI,CAACE,IAAL,CAAUD,QAAV;MACAA,QAAQ,GAAG,CAAC,GAAGV,gBAAgB,CAACY,eAArB,GAAX;IACH;;IACD,SAASC,MAAT,CAAgBC,EAAhB,EAAoB;MAChBN,KAAK,CAAC,GAAGC,IAAJ,EAAUK,EAAV,CAAL;IACH;;IAED,IAAIX,IAAJ,EAAU,CAAC,GAAGT,OAAO,CAACJ,OAAZ,EAAqBa,IAArB,EAA2BU,MAA3B,EAAmCH,QAAnC,EAAV,KAA4D,CAAC,GAAGhB,OAAO,CAACJ,OAAZ,EAAqBuB,MAArB,EAA6BH,QAA7B;IAE5D,OAAOA,QAAQ,CAACV,gBAAgB,CAACe,cAAlB,CAAf;EACH,CAZM,CAAP;AAaH;;AACDC,MAAM,CAAC5B,OAAP,GAAiBA,OAAO,CAAC,SAAD,CAAxB"},"metadata":{},"sourceType":"script"}