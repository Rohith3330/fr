{"ast":null,"code":"'use strict';\n\nmodule.exports = function (includes, t) {\n  var sparseish = {\n    length: 5,\n    0: 'a',\n    1: 'b'\n  };\n  var overfullarrayish = {\n    length: 2,\n    0: 'a',\n    1: 'b',\n    2: 'c'\n  };\n  var thrower = {\n    valueOf: function () {\n      throw new RangeError('whoa');\n    }\n  };\n  var numberish = {\n    valueOf: function () {\n      return 2;\n    }\n  };\n  t.test('simple examples', function (st) {\n    st.equal(true, includes([1, 2, 3], 1), '[1, 2, 3] includes 1');\n    st.equal(false, includes([1, 2, 3], 4), '[1, 2, 3] does not include 4');\n    st.equal(true, includes([NaN], NaN), '[NaN] includes NaN');\n    st.end();\n  });\n  t.test('does not skip holes', function (st) {\n    st.equal(true, includes(Array(1)), 'Array(1) includes undefined');\n    st.end();\n  });\n  t.test('exceptions', function (et) {\n    et.test('fromIndex conversion', function (st) {\n      st['throws'](function () {\n        includes([0], 0, thrower);\n      }, RangeError, 'fromIndex conversion throws');\n      st.end();\n    });\n    et.test('ToLength', function (st) {\n      st['throws'](function () {\n        includes({\n          length: thrower,\n          0: true\n        }, true);\n      }, RangeError, 'ToLength conversion throws');\n      st.end();\n    });\n    et.end();\n  });\n  t.test('arraylike', function (st) {\n    st.equal(true, includes(sparseish, 'a'), 'sparse array-like object includes \"a\"');\n    st.equal(false, includes(sparseish, 'c'), 'sparse array-like object does not include \"c\"');\n    st.equal(true, includes(overfullarrayish, 'b'), 'sparse array-like object includes \"b\"');\n    st.equal(false, includes(overfullarrayish, 'c'), 'sparse array-like object does not include \"c\"');\n    st.end();\n  });\n  t.test('fromIndex', function (ft) {\n    ft.equal(true, includes([1], 1, NaN), 'NaN fromIndex -> 0 fromIndex');\n    ft.equal(true, includes([0, 1, 2], 1, 0), 'starting from 0 finds index 1');\n    ft.equal(true, includes([0, 1, 2], 1, 1), 'starting from 1 finds index 1');\n    ft.equal(false, includes([0, 1, 2], 1, 2), 'starting from 2 does not find index 1');\n    ft.test('number coercion', function (st) {\n      st.equal(false, includes(['a', 'b', 'c'], 'a', numberish), 'does not find \"a\" with object fromIndex coercing to 2');\n      st.equal(false, includes(['a', 'b', 'c'], 'a', '2'), 'does not find \"a\" with string fromIndex coercing to 2');\n      st.equal(true, includes(['a', 'b', 'c'], 'c', numberish), 'finds \"c\" with object fromIndex coercing to 2');\n      st.equal(true, includes(['a', 'b', 'c'], 'c', '2'), 'finds \"c\" with string fromIndex coercing to 2');\n      st.end();\n    });\n    ft.test('fromIndex greater than length', function (st) {\n      st.equal(false, includes([1], 1, 2), 'array of length 1 is not searched if fromIndex is > 1');\n      st.equal(false, includes([1], 1, 1), 'array of length 1 is not searched if fromIndex is >= 1');\n      st.equal(false, includes([1], 1, 1.1), 'array of length 1 is not searched if fromIndex is 1.1');\n      st.equal(false, includes([1], 1, Infinity), 'array of length 1 is not searched if fromIndex is Infinity');\n      st.end();\n    });\n    ft.test('negative fromIndex', function (st) {\n      st.equal(true, includes([1, 3], 1, -4), 'computed length would be negative; fromIndex is thus 0');\n      st.equal(true, includes([1, 3], 3, -4), 'computed length would be negative; fromIndex is thus 0');\n      st.equal(true, includes([1, 3], 1, -Infinity), 'computed length would be negative; fromIndex is thus 0');\n      st.equal(true, includes([12, 13], 13, -1), 'finds -1st item with -1 fromIndex');\n      st.equal(false, includes([12, 13], 12, -1), 'does not find -2nd item with -1 fromIndex');\n      st.equal(true, includes([12, 13], 13, -2), 'finds -2nd item with -2 fromIndex');\n      st.equal(true, includes(sparseish, 'b', -4), 'finds -4th item with -4 fromIndex');\n      st.equal(false, includes(sparseish, 'a', -4), 'does not find -5th item with -4 fromIndex');\n      st.equal(true, includes(sparseish, 'a', -5), 'finds -5th item with -5 fromIndex');\n      st.end();\n    });\n    ft.end();\n  });\n  t.test('strings', function (st) {\n    st.equal(true, includes('abc', 'c'), 'string includes one of its chars');\n    st.equal(false, includes('abc', 'd'), 'string does not include a char it should not');\n    st.equal(true, includes(Object('abc'), 'c'), 'boxed string includes one of its chars');\n    st.equal(false, includes(Object('abc'), 'd'), 'boxed string does not include a char it should not');\n    st.end();\n  });\n};","map":{"version":3,"names":["module","exports","includes","t","sparseish","length","overfullarrayish","thrower","valueOf","RangeError","numberish","test","st","equal","NaN","end","Array","et","ft","Infinity","Object"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/array-includes/test/tests.js"],"sourcesContent":["'use strict';\n\nmodule.exports = function (includes, t) {\n\tvar sparseish = { length: 5, 0: 'a', 1: 'b' };\n\tvar overfullarrayish = { length: 2, 0: 'a', 1: 'b', 2: 'c' };\n\tvar thrower = { valueOf: function () { throw new RangeError('whoa'); } };\n\tvar numberish = { valueOf: function () { return 2; } };\n\n\tt.test('simple examples', function (st) {\n\t\tst.equal(true, includes([1, 2, 3], 1), '[1, 2, 3] includes 1');\n\t\tst.equal(false, includes([1, 2, 3], 4), '[1, 2, 3] does not include 4');\n\t\tst.equal(true, includes([NaN], NaN), '[NaN] includes NaN');\n\t\tst.end();\n\t});\n\n\tt.test('does not skip holes', function (st) {\n\t\tst.equal(true, includes(Array(1)), 'Array(1) includes undefined');\n\t\tst.end();\n\t});\n\n\tt.test('exceptions', function (et) {\n\t\tet.test('fromIndex conversion', function (st) {\n\t\t\tst['throws'](function () { includes([0], 0, thrower); }, RangeError, 'fromIndex conversion throws');\n\t\t\tst.end();\n\t\t});\n\n\t\tet.test('ToLength', function (st) {\n\t\t\tst['throws'](function () { includes({ length: thrower, 0: true }, true); }, RangeError, 'ToLength conversion throws');\n\t\t\tst.end();\n\t\t});\n\n\t\tet.end();\n\t});\n\n\tt.test('arraylike', function (st) {\n\t\tst.equal(true, includes(sparseish, 'a'), 'sparse array-like object includes \"a\"');\n\t\tst.equal(false, includes(sparseish, 'c'), 'sparse array-like object does not include \"c\"');\n\n\t\tst.equal(true, includes(overfullarrayish, 'b'), 'sparse array-like object includes \"b\"');\n\t\tst.equal(false, includes(overfullarrayish, 'c'), 'sparse array-like object does not include \"c\"');\n\t\tst.end();\n\t});\n\n\tt.test('fromIndex', function (ft) {\n\t\tft.equal(true, includes([1], 1, NaN), 'NaN fromIndex -> 0 fromIndex');\n\n\t\tft.equal(true, includes([0, 1, 2], 1, 0), 'starting from 0 finds index 1');\n\t\tft.equal(true, includes([0, 1, 2], 1, 1), 'starting from 1 finds index 1');\n\t\tft.equal(false, includes([0, 1, 2], 1, 2), 'starting from 2 does not find index 1');\n\n\t\tft.test('number coercion', function (st) {\n\t\t\tst.equal(false, includes(['a', 'b', 'c'], 'a', numberish), 'does not find \"a\" with object fromIndex coercing to 2');\n\t\t\tst.equal(false, includes(['a', 'b', 'c'], 'a', '2'), 'does not find \"a\" with string fromIndex coercing to 2');\n\t\t\tst.equal(true, includes(['a', 'b', 'c'], 'c', numberish), 'finds \"c\" with object fromIndex coercing to 2');\n\t\t\tst.equal(true, includes(['a', 'b', 'c'], 'c', '2'), 'finds \"c\" with string fromIndex coercing to 2');\n\t\t\tst.end();\n\t\t});\n\n\t\tft.test('fromIndex greater than length', function (st) {\n\t\t\tst.equal(false, includes([1], 1, 2), 'array of length 1 is not searched if fromIndex is > 1');\n\t\t\tst.equal(false, includes([1], 1, 1), 'array of length 1 is not searched if fromIndex is >= 1');\n\t\t\tst.equal(false, includes([1], 1, 1.1), 'array of length 1 is not searched if fromIndex is 1.1');\n\t\t\tst.equal(false, includes([1], 1, Infinity), 'array of length 1 is not searched if fromIndex is Infinity');\n\t\t\tst.end();\n\t\t});\n\n\t\tft.test('negative fromIndex', function (st) {\n\t\t\tst.equal(true, includes([1, 3], 1, -4), 'computed length would be negative; fromIndex is thus 0');\n\t\t\tst.equal(true, includes([1, 3], 3, -4), 'computed length would be negative; fromIndex is thus 0');\n\t\t\tst.equal(true, includes([1, 3], 1, -Infinity), 'computed length would be negative; fromIndex is thus 0');\n\n\t\t\tst.equal(true, includes([12, 13], 13, -1), 'finds -1st item with -1 fromIndex');\n\t\t\tst.equal(false, includes([12, 13], 12, -1), 'does not find -2nd item with -1 fromIndex');\n\t\t\tst.equal(true, includes([12, 13], 13, -2), 'finds -2nd item with -2 fromIndex');\n\n\t\t\tst.equal(true, includes(sparseish, 'b', -4), 'finds -4th item with -4 fromIndex');\n\t\t\tst.equal(false, includes(sparseish, 'a', -4), 'does not find -5th item with -4 fromIndex');\n\t\t\tst.equal(true, includes(sparseish, 'a', -5), 'finds -5th item with -5 fromIndex');\n\t\t\tst.end();\n\t\t});\n\n\t\tft.end();\n\t});\n\n\tt.test('strings', function (st) {\n\t\tst.equal(true, includes('abc', 'c'), 'string includes one of its chars');\n\t\tst.equal(false, includes('abc', 'd'), 'string does not include a char it should not');\n\n\t\tst.equal(true, includes(Object('abc'), 'c'), 'boxed string includes one of its chars');\n\t\tst.equal(false, includes(Object('abc'), 'd'), 'boxed string does not include a char it should not');\n\n\t\tst.end();\n\t});\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}