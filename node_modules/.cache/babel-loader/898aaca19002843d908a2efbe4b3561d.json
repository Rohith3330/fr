{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"default\", {\n  enumerable: true,\n  get: () => expandApplyAtRules\n});\n\nfunction partitionRules(root) {\n  if (!root.walkAtRules) return;\n  let applyParents = new Set();\n  root.walkAtRules(\"apply\", rule => {\n    applyParents.add(rule.parent);\n  });\n\n  if (applyParents.size === 0) {\n    return;\n  }\n\n  for (let rule of applyParents) {\n    let nodeGroups = [];\n    let lastGroup = [];\n\n    for (let node of rule.nodes) {\n      if (node.type === \"atrule\" && node.name === \"apply\") {\n        if (lastGroup.length > 0) {\n          nodeGroups.push(lastGroup);\n          lastGroup = [];\n        }\n\n        nodeGroups.push([node]);\n      } else {\n        lastGroup.push(node);\n      }\n    }\n\n    if (lastGroup.length > 0) {\n      nodeGroups.push(lastGroup);\n    }\n\n    if (nodeGroups.length === 1) {\n      continue;\n    }\n\n    for (let group of [...nodeGroups].reverse()) {\n      let clone = rule.clone({\n        nodes: []\n      });\n      clone.append(group);\n      rule.after(clone);\n    }\n\n    rule.remove();\n  }\n}\n\nfunction expandApplyAtRules() {\n  return root => {\n    partitionRules(root);\n  };\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","enumerable","get","expandApplyAtRules","partitionRules","root","walkAtRules","applyParents","Set","rule","add","parent","size","nodeGroups","lastGroup","node","nodes","type","name","length","push","group","reverse","clone","append","after","remove"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/tailwindcss/lib/lib/partitionApplyAtRules.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: ()=>expandApplyAtRules\n});\nfunction partitionRules(root) {\n    if (!root.walkAtRules) return;\n    let applyParents = new Set();\n    root.walkAtRules(\"apply\", (rule)=>{\n        applyParents.add(rule.parent);\n    });\n    if (applyParents.size === 0) {\n        return;\n    }\n    for (let rule of applyParents){\n        let nodeGroups = [];\n        let lastGroup = [];\n        for (let node of rule.nodes){\n            if (node.type === \"atrule\" && node.name === \"apply\") {\n                if (lastGroup.length > 0) {\n                    nodeGroups.push(lastGroup);\n                    lastGroup = [];\n                }\n                nodeGroups.push([\n                    node\n                ]);\n            } else {\n                lastGroup.push(node);\n            }\n        }\n        if (lastGroup.length > 0) {\n            nodeGroups.push(lastGroup);\n        }\n        if (nodeGroups.length === 1) {\n            continue;\n        }\n        for (let group of [\n            ...nodeGroups\n        ].reverse()){\n            let clone = rule.clone({\n                nodes: []\n            });\n            clone.append(group);\n            rule.after(clone);\n        }\n        rule.remove();\n    }\n}\nfunction expandApplyAtRules() {\n    return (root)=>{\n        partitionRules(root);\n    };\n}\n"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EACzCC,KAAK,EAAE;AADkC,CAA7C;AAGAH,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,SAA/B,EAA0C;EACtCE,UAAU,EAAE,IAD0B;EAEtCC,GAAG,EAAE,MAAIC;AAF6B,CAA1C;;AAIA,SAASC,cAAT,CAAwBC,IAAxB,EAA8B;EAC1B,IAAI,CAACA,IAAI,CAACC,WAAV,EAAuB;EACvB,IAAIC,YAAY,GAAG,IAAIC,GAAJ,EAAnB;EACAH,IAAI,CAACC,WAAL,CAAiB,OAAjB,EAA2BG,IAAD,IAAQ;IAC9BF,YAAY,CAACG,GAAb,CAAiBD,IAAI,CAACE,MAAtB;EACH,CAFD;;EAGA,IAAIJ,YAAY,CAACK,IAAb,KAAsB,CAA1B,EAA6B;IACzB;EACH;;EACD,KAAK,IAAIH,IAAT,IAAiBF,YAAjB,EAA8B;IAC1B,IAAIM,UAAU,GAAG,EAAjB;IACA,IAAIC,SAAS,GAAG,EAAhB;;IACA,KAAK,IAAIC,IAAT,IAAiBN,IAAI,CAACO,KAAtB,EAA4B;MACxB,IAAID,IAAI,CAACE,IAAL,KAAc,QAAd,IAA0BF,IAAI,CAACG,IAAL,KAAc,OAA5C,EAAqD;QACjD,IAAIJ,SAAS,CAACK,MAAV,GAAmB,CAAvB,EAA0B;UACtBN,UAAU,CAACO,IAAX,CAAgBN,SAAhB;UACAA,SAAS,GAAG,EAAZ;QACH;;QACDD,UAAU,CAACO,IAAX,CAAgB,CACZL,IADY,CAAhB;MAGH,CARD,MAQO;QACHD,SAAS,CAACM,IAAV,CAAeL,IAAf;MACH;IACJ;;IACD,IAAID,SAAS,CAACK,MAAV,GAAmB,CAAvB,EAA0B;MACtBN,UAAU,CAACO,IAAX,CAAgBN,SAAhB;IACH;;IACD,IAAID,UAAU,CAACM,MAAX,KAAsB,CAA1B,EAA6B;MACzB;IACH;;IACD,KAAK,IAAIE,KAAT,IAAkB,CACd,GAAGR,UADW,EAEhBS,OAFgB,EAAlB,EAEY;MACR,IAAIC,KAAK,GAAGd,IAAI,CAACc,KAAL,CAAW;QACnBP,KAAK,EAAE;MADY,CAAX,CAAZ;MAGAO,KAAK,CAACC,MAAN,CAAaH,KAAb;MACAZ,IAAI,CAACgB,KAAL,CAAWF,KAAX;IACH;;IACDd,IAAI,CAACiB,MAAL;EACH;AACJ;;AACD,SAASvB,kBAAT,GAA8B;EAC1B,OAAQE,IAAD,IAAQ;IACXD,cAAc,CAACC,IAAD,CAAd;EACH,CAFD;AAGH"},"metadata":{},"sourceType":"script"}