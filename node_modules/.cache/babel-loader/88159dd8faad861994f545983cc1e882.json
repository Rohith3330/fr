{"ast":null,"code":"'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $TypeError = GetIntrinsic('%TypeError%');\n\nvar $setProto = require('../helpers/setProto');\n\nvar OrdinaryGetPrototypeOf = require('./OrdinaryGetPrototypeOf');\n\nvar Type = require('./Type'); // https://262.ecma-international.org/7.0/#sec-ordinarysetprototypeof\n\n\nmodule.exports = function OrdinarySetPrototypeOf(O, V) {\n  if (Type(V) !== 'Object' && Type(V) !== 'Null') {\n    throw new $TypeError('Assertion failed: V must be Object or Null');\n  }\n  /*\n  var extensible = IsExtensible(O);\n  var current = OrdinaryGetPrototypeOf(O);\n  if (SameValue(V, current)) {\n  \treturn true;\n  }\n  if (!extensible) {\n  \treturn false;\n  }\n  */\n\n\n  try {\n    $setProto(O, V);\n  } catch (e) {\n    return false;\n  }\n\n  return OrdinaryGetPrototypeOf(O) === V;\n  /*\n  var p = V;\n  var done = false;\n  while (!done) {\n  \tif (p === null) {\n  \t\tdone = true;\n  \t} else if (SameValue(p, O)) {\n  \t\treturn false;\n  \t} else {\n  \t\tif (wat) {\n  \t\t\tdone = true;\n  \t\t} else {\n  \t\t\tp = p.[[Prototype]];\n  \t\t}\n  \t}\n  }\n  O.[[Prototype]] = V;\n  return true;\n  */\n};","map":{"version":3,"names":["GetIntrinsic","require","$TypeError","$setProto","OrdinaryGetPrototypeOf","Type","module","exports","OrdinarySetPrototypeOf","O","V","e"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/es-abstract/2020/OrdinarySetPrototypeOf.js"],"sourcesContent":["'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $TypeError = GetIntrinsic('%TypeError%');\n\nvar $setProto = require('../helpers/setProto');\n\nvar OrdinaryGetPrototypeOf = require('./OrdinaryGetPrototypeOf');\nvar Type = require('./Type');\n\n// https://262.ecma-international.org/7.0/#sec-ordinarysetprototypeof\n\nmodule.exports = function OrdinarySetPrototypeOf(O, V) {\n\tif (Type(V) !== 'Object' && Type(V) !== 'Null') {\n\t\tthrow new $TypeError('Assertion failed: V must be Object or Null');\n\t}\n\t/*\n\tvar extensible = IsExtensible(O);\n\tvar current = OrdinaryGetPrototypeOf(O);\n\tif (SameValue(V, current)) {\n\t\treturn true;\n\t}\n\tif (!extensible) {\n\t\treturn false;\n\t}\n\t*/\n\ttry {\n\t\t$setProto(O, V);\n\t} catch (e) {\n\t\treturn false;\n\t}\n\treturn OrdinaryGetPrototypeOf(O) === V;\n\t/*\n\tvar p = V;\n\tvar done = false;\n\twhile (!done) {\n\t\tif (p === null) {\n\t\t\tdone = true;\n\t\t} else if (SameValue(p, O)) {\n\t\t\treturn false;\n\t\t} else {\n\t\t\tif (wat) {\n\t\t\t\tdone = true;\n\t\t\t} else {\n\t\t\t\tp = p.[[Prototype]];\n\t\t\t}\n\t\t}\n\t}\n\tO.[[Prototype]] = V;\n\treturn true;\n\t*/\n};\n"],"mappings":"AAAA;;AAEA,IAAIA,YAAY,GAAGC,OAAO,CAAC,eAAD,CAA1B;;AAEA,IAAIC,UAAU,GAAGF,YAAY,CAAC,aAAD,CAA7B;;AAEA,IAAIG,SAAS,GAAGF,OAAO,CAAC,qBAAD,CAAvB;;AAEA,IAAIG,sBAAsB,GAAGH,OAAO,CAAC,0BAAD,CAApC;;AACA,IAAII,IAAI,GAAGJ,OAAO,CAAC,QAAD,CAAlB,C,CAEA;;;AAEAK,MAAM,CAACC,OAAP,GAAiB,SAASC,sBAAT,CAAgCC,CAAhC,EAAmCC,CAAnC,EAAsC;EACtD,IAAIL,IAAI,CAACK,CAAD,CAAJ,KAAY,QAAZ,IAAwBL,IAAI,CAACK,CAAD,CAAJ,KAAY,MAAxC,EAAgD;IAC/C,MAAM,IAAIR,UAAJ,CAAe,4CAAf,CAAN;EACA;EACD;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACC,IAAI;IACHC,SAAS,CAACM,CAAD,EAAIC,CAAJ,CAAT;EACA,CAFD,CAEE,OAAOC,CAAP,EAAU;IACX,OAAO,KAAP;EACA;;EACD,OAAOP,sBAAsB,CAACK,CAAD,CAAtB,KAA8BC,CAArC;EACA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACC,CAvCD"},"metadata":{},"sourceType":"script"}