{"ast":null,"code":"export const parser = 'flow';\nexport default function transformer(file, api, options) {\n  const j = api.jscodeshift;\n  const s = j(file.source);\n  const {\n    ruleName,\n    rulePath\n  } = options || {};\n\n  const nameSort = (a, b) => {\n    const aName = a.key.type === 'Literal' ? a.key.value : a.key.name;\n    const bName = b.key.type === 'Literal' ? b.key.value : b.key.name;\n\n    if (aName < bName) {\n      return -1;\n    }\n\n    if (bName < aName) {\n      return 1;\n    }\n\n    return 0;\n  };\n\n  let changesMade = 0;\n  const rulePathInSrc = `./${rulePath.match(/src\\/(.*)\\.js/)[1]}`;\n  changesMade += s.find(j.Identifier, {\n    name: 'rules'\n  }).forEach((path, index) => {\n    // Add rule path.\n    if (index === 0) {\n      path.parentPath.value.value.properties.unshift(j.property('init', j.literal(ruleName), j.callExpression(j.identifier('require'), [j.literal(rulePathInSrc)])));\n      path.parentPath.value.value.properties.sort(nameSort);\n    } // Set default reporting to error.\n\n\n    if (index === 1) {\n      path.parentPath.value.value.properties.unshift(j.property('init', j.literal(`jsx-a11y/${ruleName}`), j.literal('error')));\n      path.parentPath.value.value.properties.sort(nameSort);\n    }\n  }).length;\n\n  if (changesMade === 0) {\n    return null;\n  }\n\n  return s.toSource({\n    quote: 'single',\n    trailingComma: true\n  });\n}","map":{"version":3,"names":["parser","transformer","file","api","options","j","jscodeshift","s","source","ruleName","rulePath","nameSort","a","b","aName","key","type","value","name","bName","changesMade","rulePathInSrc","match","find","Identifier","forEach","path","index","parentPath","properties","unshift","property","literal","callExpression","identifier","sort","length","toSource","quote","trailingComma"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/eslint-plugin-jsx-a11y/scripts/addRuleToIndex.js"],"sourcesContent":["export const parser = 'flow';\n\nexport default function transformer(file, api, options) {\n  const j = api.jscodeshift;\n  const s = j(file.source);\n  const { ruleName, rulePath } = options || {};\n\n  const nameSort = (a, b) => {\n    const aName = a.key.type === 'Literal' ? a.key.value : a.key.name;\n    const bName = b.key.type === 'Literal' ? b.key.value : b.key.name;\n    if (aName < bName) {\n      return -1;\n    }\n    if (bName < aName) {\n      return 1;\n    }\n    return 0;\n  };\n\n  let changesMade = 0;\n\n  const rulePathInSrc = `./${rulePath.match(/src\\/(.*)\\.js/)[1]}`;\n\n  changesMade += s\n    .find(j.Identifier, {\n      name: 'rules',\n    })\n    .forEach((path, index) => {\n      // Add rule path.\n      if (index === 0) {\n        path.parentPath.value.value.properties.unshift(j.property(\n          'init',\n          j.literal(ruleName),\n          j.callExpression(j.identifier('require'), [j.literal(rulePathInSrc)]),\n        ));\n        path.parentPath.value.value.properties.sort(nameSort);\n      }\n      // Set default reporting to error.\n      if (index === 1) {\n        path.parentPath.value.value.properties.unshift(j.property('init', j.literal(`jsx-a11y/${ruleName}`), j.literal('error')));\n        path.parentPath.value.value.properties.sort(nameSort);\n      }\n    }).length;\n\n  if (changesMade === 0) {\n    return null;\n  }\n\n  return s.toSource({\n    quote: 'single',\n    trailingComma: true,\n  });\n}\n"],"mappings":"AAAA,OAAO,MAAMA,MAAM,GAAG,MAAf;AAEP,eAAe,SAASC,WAAT,CAAqBC,IAArB,EAA2BC,GAA3B,EAAgCC,OAAhC,EAAyC;EACtD,MAAMC,CAAC,GAAGF,GAAG,CAACG,WAAd;EACA,MAAMC,CAAC,GAAGF,CAAC,CAACH,IAAI,CAACM,MAAN,CAAX;EACA,MAAM;IAAEC,QAAF;IAAYC;EAAZ,IAAyBN,OAAO,IAAI,EAA1C;;EAEA,MAAMO,QAAQ,GAAG,CAACC,CAAD,EAAIC,CAAJ,KAAU;IACzB,MAAMC,KAAK,GAAGF,CAAC,CAACG,GAAF,CAAMC,IAAN,KAAe,SAAf,GAA2BJ,CAAC,CAACG,GAAF,CAAME,KAAjC,GAAyCL,CAAC,CAACG,GAAF,CAAMG,IAA7D;IACA,MAAMC,KAAK,GAAGN,CAAC,CAACE,GAAF,CAAMC,IAAN,KAAe,SAAf,GAA2BH,CAAC,CAACE,GAAF,CAAME,KAAjC,GAAyCJ,CAAC,CAACE,GAAF,CAAMG,IAA7D;;IACA,IAAIJ,KAAK,GAAGK,KAAZ,EAAmB;MACjB,OAAO,CAAC,CAAR;IACD;;IACD,IAAIA,KAAK,GAAGL,KAAZ,EAAmB;MACjB,OAAO,CAAP;IACD;;IACD,OAAO,CAAP;EACD,CAVD;;EAYA,IAAIM,WAAW,GAAG,CAAlB;EAEA,MAAMC,aAAa,GAAI,KAAIX,QAAQ,CAACY,KAAT,CAAe,eAAf,EAAgC,CAAhC,CAAmC,EAA9D;EAEAF,WAAW,IAAIb,CAAC,CACbgB,IADY,CACPlB,CAAC,CAACmB,UADK,EACO;IAClBN,IAAI,EAAE;EADY,CADP,EAIZO,OAJY,CAIJ,CAACC,IAAD,EAAOC,KAAP,KAAiB;IACxB;IACA,IAAIA,KAAK,KAAK,CAAd,EAAiB;MACfD,IAAI,CAACE,UAAL,CAAgBX,KAAhB,CAAsBA,KAAtB,CAA4BY,UAA5B,CAAuCC,OAAvC,CAA+CzB,CAAC,CAAC0B,QAAF,CAC7C,MAD6C,EAE7C1B,CAAC,CAAC2B,OAAF,CAAUvB,QAAV,CAF6C,EAG7CJ,CAAC,CAAC4B,cAAF,CAAiB5B,CAAC,CAAC6B,UAAF,CAAa,SAAb,CAAjB,EAA0C,CAAC7B,CAAC,CAAC2B,OAAF,CAAUX,aAAV,CAAD,CAA1C,CAH6C,CAA/C;MAKAK,IAAI,CAACE,UAAL,CAAgBX,KAAhB,CAAsBA,KAAtB,CAA4BY,UAA5B,CAAuCM,IAAvC,CAA4CxB,QAA5C;IACD,CATuB,CAUxB;;;IACA,IAAIgB,KAAK,KAAK,CAAd,EAAiB;MACfD,IAAI,CAACE,UAAL,CAAgBX,KAAhB,CAAsBA,KAAtB,CAA4BY,UAA5B,CAAuCC,OAAvC,CAA+CzB,CAAC,CAAC0B,QAAF,CAAW,MAAX,EAAmB1B,CAAC,CAAC2B,OAAF,CAAW,YAAWvB,QAAS,EAA/B,CAAnB,EAAsDJ,CAAC,CAAC2B,OAAF,CAAU,OAAV,CAAtD,CAA/C;MACAN,IAAI,CAACE,UAAL,CAAgBX,KAAhB,CAAsBA,KAAtB,CAA4BY,UAA5B,CAAuCM,IAAvC,CAA4CxB,QAA5C;IACD;EACF,CAnBY,EAmBVyB,MAnBL;;EAqBA,IAAIhB,WAAW,KAAK,CAApB,EAAuB;IACrB,OAAO,IAAP;EACD;;EAED,OAAOb,CAAC,CAAC8B,QAAF,CAAW;IAChBC,KAAK,EAAE,QADS;IAEhBC,aAAa,EAAE;EAFC,CAAX,CAAP;AAID"},"metadata":{},"sourceType":"module"}