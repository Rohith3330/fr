{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _helperPluginUtils = require(\"@babel/helper-plugin-utils\");\n\nvar _core = require(\"@babel/core\");\n\nvar _default = (0, _helperPluginUtils.declare)(api => {\n  api.assertVersion(7);\n  return {\n    name: \"transform-new-target\",\n    visitor: {\n      MetaProperty(path) {\n        const meta = path.get(\"meta\");\n        const property = path.get(\"property\");\n        const {\n          scope\n        } = path;\n\n        if (meta.isIdentifier({\n          name: \"new\"\n        }) && property.isIdentifier({\n          name: \"target\"\n        })) {\n          const func = path.findParent(path => {\n            if (path.isClass()) return true;\n\n            if (path.isFunction() && !path.isArrowFunctionExpression()) {\n              if (path.isClassMethod({\n                kind: \"constructor\"\n              })) {\n                return false;\n              }\n\n              return true;\n            }\n\n            return false;\n          });\n\n          if (!func) {\n            throw path.buildCodeFrameError(\"new.target must be under a (non-arrow) function or a class.\");\n          }\n\n          const {\n            node\n          } = func;\n\n          if (_core.types.isMethod(node)) {\n            path.replaceWith(scope.buildUndefinedNode());\n            return;\n          }\n\n          const constructor = _core.types.memberExpression(_core.types.thisExpression(), _core.types.identifier(\"constructor\"));\n\n          if (func.isClass()) {\n            path.replaceWith(constructor);\n            return;\n          }\n\n          if (!node.id) {\n            node.id = scope.generateUidIdentifier(\"target\");\n          } else {\n            let scope = path.scope;\n            const name = node.id.name;\n\n            while (scope !== func.parentPath.scope) {\n              if (scope.hasOwnBinding(name) && !scope.bindingIdentifierEquals(name, node.id)) {\n                scope.rename(name);\n              }\n\n              scope = scope.parent;\n            }\n          }\n\n          path.replaceWith(_core.types.conditionalExpression(_core.types.binaryExpression(\"instanceof\", _core.types.thisExpression(), _core.types.cloneNode(node.id)), constructor, scope.buildUndefinedNode()));\n        }\n      }\n\n    }\n  };\n});\n\nexports.default = _default;","map":{"version":3,"names":["Object","defineProperty","exports","value","default","_helperPluginUtils","require","_core","_default","declare","api","assertVersion","name","visitor","MetaProperty","path","meta","get","property","scope","isIdentifier","func","findParent","isClass","isFunction","isArrowFunctionExpression","isClassMethod","kind","buildCodeFrameError","node","types","isMethod","replaceWith","buildUndefinedNode","constructor","memberExpression","thisExpression","identifier","id","generateUidIdentifier","parentPath","hasOwnBinding","bindingIdentifierEquals","rename","parent","conditionalExpression","binaryExpression","cloneNode"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/@babel/plugin-transform-new-target/lib/index.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _helperPluginUtils = require(\"@babel/helper-plugin-utils\");\n\nvar _core = require(\"@babel/core\");\n\nvar _default = (0, _helperPluginUtils.declare)(api => {\n  api.assertVersion(7);\n  return {\n    name: \"transform-new-target\",\n    visitor: {\n      MetaProperty(path) {\n        const meta = path.get(\"meta\");\n        const property = path.get(\"property\");\n        const {\n          scope\n        } = path;\n\n        if (meta.isIdentifier({\n          name: \"new\"\n        }) && property.isIdentifier({\n          name: \"target\"\n        })) {\n          const func = path.findParent(path => {\n            if (path.isClass()) return true;\n\n            if (path.isFunction() && !path.isArrowFunctionExpression()) {\n              if (path.isClassMethod({\n                kind: \"constructor\"\n              })) {\n                return false;\n              }\n\n              return true;\n            }\n\n            return false;\n          });\n\n          if (!func) {\n            throw path.buildCodeFrameError(\"new.target must be under a (non-arrow) function or a class.\");\n          }\n\n          const {\n            node\n          } = func;\n\n          if (_core.types.isMethod(node)) {\n            path.replaceWith(scope.buildUndefinedNode());\n            return;\n          }\n\n          const constructor = _core.types.memberExpression(_core.types.thisExpression(), _core.types.identifier(\"constructor\"));\n\n          if (func.isClass()) {\n            path.replaceWith(constructor);\n            return;\n          }\n\n          if (!node.id) {\n            node.id = scope.generateUidIdentifier(\"target\");\n          } else {\n            let scope = path.scope;\n            const name = node.id.name;\n\n            while (scope !== func.parentPath.scope) {\n              if (scope.hasOwnBinding(name) && !scope.bindingIdentifierEquals(name, node.id)) {\n                scope.rename(name);\n              }\n\n              scope = scope.parent;\n            }\n          }\n\n          path.replaceWith(_core.types.conditionalExpression(_core.types.binaryExpression(\"instanceof\", _core.types.thisExpression(), _core.types.cloneNode(node.id)), constructor, scope.buildUndefinedNode()));\n        }\n      }\n\n    }\n  };\n});\n\nexports.default = _default;"],"mappings":"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"},"metadata":{},"sourceType":"script"}