{"ast":null,"code":"'use strict';\n\nconst compile = function (cst) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const keepProtected = options.safe === true || options.keepProtected === true;\n  let firstSeen = false;\n\n  const walk = (node, parent) => {\n    let output = '';\n    let inner;\n    let lines;\n\n    for (const child of node.nodes) {\n      switch (child.type) {\n        case 'block':\n          if (options.first && firstSeen === true) {\n            output += walk(child, node);\n            break;\n          }\n\n          if (options.preserveNewlines === true) {\n            inner = walk(child, node);\n            lines = inner.split('\\n');\n            output += '\\n'.repeat(lines.length - 1);\n            break;\n          }\n\n          if (keepProtected === true && child.protected === true) {\n            output += walk(child, node);\n            break;\n          }\n\n          firstSeen = true;\n          break;\n\n        case 'line':\n          if (options.first && firstSeen === true) {\n            output += child.value;\n            break;\n          }\n\n          if (keepProtected === true && child.protected === true) {\n            output += child.value;\n          }\n\n          firstSeen = true;\n          break;\n\n        case 'open':\n        case 'close':\n        case 'text':\n        case 'newline':\n        default:\n          {\n            output += child.value || '';\n            break;\n          }\n      }\n    }\n\n    return output;\n  };\n\n  return walk(cst);\n};\n\nmodule.exports = compile;","map":{"version":3,"names":["compile","cst","options","keepProtected","safe","firstSeen","walk","node","parent","output","inner","lines","child","nodes","type","first","preserveNewlines","split","repeat","length","protected","value","module","exports"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/strip-comments/lib/compile.js"],"sourcesContent":["'use strict';\n\nconst compile = (cst, options = {}) => {\n  const keepProtected = options.safe === true || options.keepProtected === true;\n  let firstSeen = false;\n\n  const walk = (node, parent) => {\n    let output = '';\n    let inner;\n    let lines;\n\n    for (const child of node.nodes) {\n      switch (child.type) {\n        case 'block':\n          if (options.first && firstSeen === true) {\n            output += walk(child, node);\n            break;\n          }\n\n          if (options.preserveNewlines === true) {\n            inner = walk(child, node);\n            lines = inner.split('\\n');\n            output += '\\n'.repeat(lines.length - 1);\n            break;\n          }\n\n          if (keepProtected === true && child.protected === true) {\n            output += walk(child, node);\n            break;\n          }\n\n          firstSeen = true;\n          break;\n        case 'line':\n          if (options.first && firstSeen === true) {\n            output += child.value;\n            break;\n          }\n\n          if (keepProtected === true && child.protected === true) {\n            output += child.value;\n          }\n\n          firstSeen = true;\n          break;\n        case 'open':\n        case 'close':\n        case 'text':\n        case 'newline':\n        default: {\n          output += child.value || '';\n          break;\n        }\n      }\n    }\n\n    return output;\n  };\n\n  return walk(cst);\n};\n\nmodule.exports = compile;\n"],"mappings":"AAAA;;AAEA,MAAMA,OAAO,GAAG,UAACC,GAAD,EAAuB;EAAA,IAAjBC,OAAiB,uEAAP,EAAO;EACrC,MAAMC,aAAa,GAAGD,OAAO,CAACE,IAAR,KAAiB,IAAjB,IAAyBF,OAAO,CAACC,aAAR,KAA0B,IAAzE;EACA,IAAIE,SAAS,GAAG,KAAhB;;EAEA,MAAMC,IAAI,GAAG,CAACC,IAAD,EAAOC,MAAP,KAAkB;IAC7B,IAAIC,MAAM,GAAG,EAAb;IACA,IAAIC,KAAJ;IACA,IAAIC,KAAJ;;IAEA,KAAK,MAAMC,KAAX,IAAoBL,IAAI,CAACM,KAAzB,EAAgC;MAC9B,QAAQD,KAAK,CAACE,IAAd;QACE,KAAK,OAAL;UACE,IAAIZ,OAAO,CAACa,KAAR,IAAiBV,SAAS,KAAK,IAAnC,EAAyC;YACvCI,MAAM,IAAIH,IAAI,CAACM,KAAD,EAAQL,IAAR,CAAd;YACA;UACD;;UAED,IAAIL,OAAO,CAACc,gBAAR,KAA6B,IAAjC,EAAuC;YACrCN,KAAK,GAAGJ,IAAI,CAACM,KAAD,EAAQL,IAAR,CAAZ;YACAI,KAAK,GAAGD,KAAK,CAACO,KAAN,CAAY,IAAZ,CAAR;YACAR,MAAM,IAAI,KAAKS,MAAL,CAAYP,KAAK,CAACQ,MAAN,GAAe,CAA3B,CAAV;YACA;UACD;;UAED,IAAIhB,aAAa,KAAK,IAAlB,IAA0BS,KAAK,CAACQ,SAAN,KAAoB,IAAlD,EAAwD;YACtDX,MAAM,IAAIH,IAAI,CAACM,KAAD,EAAQL,IAAR,CAAd;YACA;UACD;;UAEDF,SAAS,GAAG,IAAZ;UACA;;QACF,KAAK,MAAL;UACE,IAAIH,OAAO,CAACa,KAAR,IAAiBV,SAAS,KAAK,IAAnC,EAAyC;YACvCI,MAAM,IAAIG,KAAK,CAACS,KAAhB;YACA;UACD;;UAED,IAAIlB,aAAa,KAAK,IAAlB,IAA0BS,KAAK,CAACQ,SAAN,KAAoB,IAAlD,EAAwD;YACtDX,MAAM,IAAIG,KAAK,CAACS,KAAhB;UACD;;UAEDhB,SAAS,GAAG,IAAZ;UACA;;QACF,KAAK,MAAL;QACA,KAAK,OAAL;QACA,KAAK,MAAL;QACA,KAAK,SAAL;QACA;UAAS;YACPI,MAAM,IAAIG,KAAK,CAACS,KAAN,IAAe,EAAzB;YACA;UACD;MAxCH;IA0CD;;IAED,OAAOZ,MAAP;EACD,CAnDD;;EAqDA,OAAOH,IAAI,CAACL,GAAD,CAAX;AACD,CA1DD;;AA4DAqB,MAAM,CAACC,OAAP,GAAiBvB,OAAjB"},"metadata":{},"sourceType":"script"}