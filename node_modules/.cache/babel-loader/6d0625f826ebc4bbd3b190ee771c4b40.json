{"ast":null,"code":"var acorn = require('acorn');\n\nvar xtend = require('xtend');\n\nvar CJSParser = acorn.Parser.extend(require('./lib/bigint')).extend(require('./lib/class-fields')).extend(require('./lib/static-class-features')).extend(require('./lib/numeric-separator')).extend(require('./lib/dynamic-import').default);\nvar ESModulesParser = CJSParser.extend(require('./lib/export-ns-from')).extend(require('./lib/import-meta'));\n\nfunction mapOptions(opts) {\n  if (!opts) opts = {};\n  return xtend({\n    ecmaVersion: 2020,\n    allowHashBang: true,\n    allowReturnOutsideFunction: true\n  }, opts);\n}\n\nfunction getParser(opts) {\n  if (!opts) opts = {};\n  return opts.sourceType === 'module' ? ESModulesParser : CJSParser;\n}\n\nmodule.exports = exports = xtend(acorn, {\n  parse: function parse(src, opts) {\n    return getParser(opts).parse(src, mapOptions(opts));\n  },\n  parseExpressionAt: function parseExpressionAt(src, offset, opts) {\n    return getParser(opts).parseExpressionAt(src, offset, mapOptions(opts));\n  },\n  tokenizer: function tokenizer(src, opts) {\n    return getParser(opts).tokenizer(src, mapOptions(opts));\n  }\n});","map":{"version":3,"names":["acorn","require","xtend","CJSParser","Parser","extend","default","ESModulesParser","mapOptions","opts","ecmaVersion","allowHashBang","allowReturnOutsideFunction","getParser","sourceType","module","exports","parse","src","parseExpressionAt","offset","tokenizer"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/acorn-node/index.js"],"sourcesContent":["var acorn = require('acorn')\nvar xtend = require('xtend')\n\nvar CJSParser = acorn.Parser\n  .extend(require('./lib/bigint'))\n  .extend(require('./lib/class-fields'))\n  .extend(require('./lib/static-class-features'))\n  .extend(require('./lib/numeric-separator'))\n  .extend(require('./lib/dynamic-import').default)\nvar ESModulesParser = CJSParser\n  .extend(require('./lib/export-ns-from'))\n  .extend(require('./lib/import-meta'))\n\nfunction mapOptions (opts) {\n  if (!opts) opts = {}\n  return xtend({\n    ecmaVersion: 2020,\n    allowHashBang: true,\n    allowReturnOutsideFunction: true\n  }, opts)\n}\n\nfunction getParser (opts) {\n  if (!opts) opts = {}\n  return opts.sourceType === 'module' ? ESModulesParser : CJSParser\n}\n\nmodule.exports = exports = xtend(acorn, {\n  parse: function parse (src, opts) {\n    return getParser(opts).parse(src, mapOptions(opts))\n  },\n  parseExpressionAt: function parseExpressionAt (src, offset, opts) {\n    return getParser(opts).parseExpressionAt(src, offset, mapOptions(opts))\n  },\n  tokenizer: function tokenizer (src, opts) {\n    return getParser(opts).tokenizer(src, mapOptions(opts))\n  }\n})\n"],"mappings":"AAAA,IAAIA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAAnB;;AACA,IAAIC,KAAK,GAAGD,OAAO,CAAC,OAAD,CAAnB;;AAEA,IAAIE,SAAS,GAAGH,KAAK,CAACI,MAAN,CACbC,MADa,CACNJ,OAAO,CAAC,cAAD,CADD,EAEbI,MAFa,CAENJ,OAAO,CAAC,oBAAD,CAFD,EAGbI,MAHa,CAGNJ,OAAO,CAAC,6BAAD,CAHD,EAIbI,MAJa,CAINJ,OAAO,CAAC,yBAAD,CAJD,EAKbI,MALa,CAKNJ,OAAO,CAAC,sBAAD,CAAP,CAAgCK,OAL1B,CAAhB;AAMA,IAAIC,eAAe,GAAGJ,SAAS,CAC5BE,MADmB,CACZJ,OAAO,CAAC,sBAAD,CADK,EAEnBI,MAFmB,CAEZJ,OAAO,CAAC,mBAAD,CAFK,CAAtB;;AAIA,SAASO,UAAT,CAAqBC,IAArB,EAA2B;EACzB,IAAI,CAACA,IAAL,EAAWA,IAAI,GAAG,EAAP;EACX,OAAOP,KAAK,CAAC;IACXQ,WAAW,EAAE,IADF;IAEXC,aAAa,EAAE,IAFJ;IAGXC,0BAA0B,EAAE;EAHjB,CAAD,EAITH,IAJS,CAAZ;AAKD;;AAED,SAASI,SAAT,CAAoBJ,IAApB,EAA0B;EACxB,IAAI,CAACA,IAAL,EAAWA,IAAI,GAAG,EAAP;EACX,OAAOA,IAAI,CAACK,UAAL,KAAoB,QAApB,GAA+BP,eAA/B,GAAiDJ,SAAxD;AACD;;AAEDY,MAAM,CAACC,OAAP,GAAiBA,OAAO,GAAGd,KAAK,CAACF,KAAD,EAAQ;EACtCiB,KAAK,EAAE,SAASA,KAAT,CAAgBC,GAAhB,EAAqBT,IAArB,EAA2B;IAChC,OAAOI,SAAS,CAACJ,IAAD,CAAT,CAAgBQ,KAAhB,CAAsBC,GAAtB,EAA2BV,UAAU,CAACC,IAAD,CAArC,CAAP;EACD,CAHqC;EAItCU,iBAAiB,EAAE,SAASA,iBAAT,CAA4BD,GAA5B,EAAiCE,MAAjC,EAAyCX,IAAzC,EAA+C;IAChE,OAAOI,SAAS,CAACJ,IAAD,CAAT,CAAgBU,iBAAhB,CAAkCD,GAAlC,EAAuCE,MAAvC,EAA+CZ,UAAU,CAACC,IAAD,CAAzD,CAAP;EACD,CANqC;EAOtCY,SAAS,EAAE,SAASA,SAAT,CAAoBH,GAApB,EAAyBT,IAAzB,EAA+B;IACxC,OAAOI,SAAS,CAACJ,IAAD,CAAT,CAAgBY,SAAhB,CAA0BH,GAA1B,EAA+BV,UAAU,CAACC,IAAD,CAAzC,CAAP;EACD;AATqC,CAAR,CAAhC"},"metadata":{},"sourceType":"script"}