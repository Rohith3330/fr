{"ast":null,"code":"'use strict';\n\nvar parsers = require('../parsers.js');\n\nvar TYPES = parsers.TYPES;\n\nvar isValid = function (v) {\n  var type = parsers.valueType(v);\n  return type === TYPES.LENGTH || type === TYPES.PERCENT || type === TYPES.INTEGER && (v === '0' || v === 0);\n};\n\nvar parser = function (v) {\n  return parsers.parseMeasurement(v);\n};\n\nvar mySetter = parsers.implicitSetter('padding', '', isValid, parser);\nvar myGlobal = parsers.implicitSetter('padding', '', function () {\n  return true;\n}, function (v) {\n  return v;\n});\nmodule.exports.definition = {\n  set: function (v) {\n    if (typeof v === 'number') {\n      v = String(v);\n    }\n\n    if (typeof v !== 'string') {\n      return;\n    }\n\n    var V = v.toLowerCase();\n\n    switch (V) {\n      case 'inherit':\n      case 'initial':\n      case 'unset':\n      case '':\n        myGlobal.call(this, V);\n        break;\n\n      default:\n        mySetter.call(this, v);\n        break;\n    }\n  },\n  get: function () {\n    return this.getPropertyValue('padding');\n  },\n  enumerable: true,\n  configurable: true\n};\nmodule.exports.isValid = isValid;\nmodule.exports.parser = parser;","map":{"version":3,"names":["parsers","require","TYPES","isValid","v","type","valueType","LENGTH","PERCENT","INTEGER","parser","parseMeasurement","mySetter","implicitSetter","myGlobal","module","exports","definition","set","String","V","toLowerCase","call","get","getPropertyValue","enumerable","configurable"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/cssstyle/lib/properties/padding.js"],"sourcesContent":["'use strict';\n\nvar parsers = require('../parsers.js');\nvar TYPES = parsers.TYPES;\n\nvar isValid = function(v) {\n  var type = parsers.valueType(v);\n  return (\n    type === TYPES.LENGTH ||\n    type === TYPES.PERCENT ||\n    (type === TYPES.INTEGER && (v === '0' || v === 0))\n  );\n};\n\nvar parser = function(v) {\n  return parsers.parseMeasurement(v);\n};\n\nvar mySetter = parsers.implicitSetter('padding', '', isValid, parser);\nvar myGlobal = parsers.implicitSetter(\n  'padding',\n  '',\n  function() {\n    return true;\n  },\n  function(v) {\n    return v;\n  }\n);\n\nmodule.exports.definition = {\n  set: function(v) {\n    if (typeof v === 'number') {\n      v = String(v);\n    }\n    if (typeof v !== 'string') {\n      return;\n    }\n    var V = v.toLowerCase();\n    switch (V) {\n      case 'inherit':\n      case 'initial':\n      case 'unset':\n      case '':\n        myGlobal.call(this, V);\n        break;\n\n      default:\n        mySetter.call(this, v);\n        break;\n    }\n  },\n  get: function() {\n    return this.getPropertyValue('padding');\n  },\n  enumerable: true,\n  configurable: true,\n};\n\nmodule.exports.isValid = isValid;\nmodule.exports.parser = parser;\n"],"mappings":"AAAA;;AAEA,IAAIA,OAAO,GAAGC,OAAO,CAAC,eAAD,CAArB;;AACA,IAAIC,KAAK,GAAGF,OAAO,CAACE,KAApB;;AAEA,IAAIC,OAAO,GAAG,UAASC,CAAT,EAAY;EACxB,IAAIC,IAAI,GAAGL,OAAO,CAACM,SAAR,CAAkBF,CAAlB,CAAX;EACA,OACEC,IAAI,KAAKH,KAAK,CAACK,MAAf,IACAF,IAAI,KAAKH,KAAK,CAACM,OADf,IAECH,IAAI,KAAKH,KAAK,CAACO,OAAf,KAA2BL,CAAC,KAAK,GAAN,IAAaA,CAAC,KAAK,CAA9C,CAHH;AAKD,CAPD;;AASA,IAAIM,MAAM,GAAG,UAASN,CAAT,EAAY;EACvB,OAAOJ,OAAO,CAACW,gBAAR,CAAyBP,CAAzB,CAAP;AACD,CAFD;;AAIA,IAAIQ,QAAQ,GAAGZ,OAAO,CAACa,cAAR,CAAuB,SAAvB,EAAkC,EAAlC,EAAsCV,OAAtC,EAA+CO,MAA/C,CAAf;AACA,IAAII,QAAQ,GAAGd,OAAO,CAACa,cAAR,CACb,SADa,EAEb,EAFa,EAGb,YAAW;EACT,OAAO,IAAP;AACD,CALY,EAMb,UAAST,CAAT,EAAY;EACV,OAAOA,CAAP;AACD,CARY,CAAf;AAWAW,MAAM,CAACC,OAAP,CAAeC,UAAf,GAA4B;EAC1BC,GAAG,EAAE,UAASd,CAAT,EAAY;IACf,IAAI,OAAOA,CAAP,KAAa,QAAjB,EAA2B;MACzBA,CAAC,GAAGe,MAAM,CAACf,CAAD,CAAV;IACD;;IACD,IAAI,OAAOA,CAAP,KAAa,QAAjB,EAA2B;MACzB;IACD;;IACD,IAAIgB,CAAC,GAAGhB,CAAC,CAACiB,WAAF,EAAR;;IACA,QAAQD,CAAR;MACE,KAAK,SAAL;MACA,KAAK,SAAL;MACA,KAAK,OAAL;MACA,KAAK,EAAL;QACEN,QAAQ,CAACQ,IAAT,CAAc,IAAd,EAAoBF,CAApB;QACA;;MAEF;QACER,QAAQ,CAACU,IAAT,CAAc,IAAd,EAAoBlB,CAApB;QACA;IAVJ;EAYD,CArByB;EAsB1BmB,GAAG,EAAE,YAAW;IACd,OAAO,KAAKC,gBAAL,CAAsB,SAAtB,CAAP;EACD,CAxByB;EAyB1BC,UAAU,EAAE,IAzBc;EA0B1BC,YAAY,EAAE;AA1BY,CAA5B;AA6BAX,MAAM,CAACC,OAAP,CAAeb,OAAf,GAAyBA,OAAzB;AACAY,MAAM,CAACC,OAAP,CAAeN,MAAf,GAAwBA,MAAxB"},"metadata":{},"sourceType":"script"}