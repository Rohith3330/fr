{"ast":null,"code":"var cmpChar = require('../../tokenizer').cmpChar;\n\nvar cmpStr = require('../../tokenizer').cmpStr;\n\nvar TYPE = require('../../tokenizer').TYPE;\n\nvar IDENT = TYPE.Ident;\nvar STRING = TYPE.String;\nvar NUMBER = TYPE.Number;\nvar FUNCTION = TYPE.Function;\nvar URL = TYPE.Url;\nvar HASH = TYPE.Hash;\nvar DIMENSION = TYPE.Dimension;\nvar PERCENTAGE = TYPE.Percentage;\nvar LEFTPARENTHESIS = TYPE.LeftParenthesis;\nvar LEFTSQUAREBRACKET = TYPE.LeftSquareBracket;\nvar COMMA = TYPE.Comma;\nvar DELIM = TYPE.Delim;\nvar NUMBERSIGN = 0x0023; // U+0023 NUMBER SIGN (#)\n\nvar ASTERISK = 0x002A; // U+002A ASTERISK (*)\n\nvar PLUSSIGN = 0x002B; // U+002B PLUS SIGN (+)\n\nvar HYPHENMINUS = 0x002D; // U+002D HYPHEN-MINUS (-)\n\nvar SOLIDUS = 0x002F; // U+002F SOLIDUS (/)\n\nvar U = 0x0075; // U+0075 LATIN SMALL LETTER U (u)\n\nmodule.exports = function defaultRecognizer(context) {\n  switch (this.scanner.tokenType) {\n    case HASH:\n      return this.Hash();\n\n    case COMMA:\n      context.space = null;\n      context.ignoreWSAfter = true;\n      return this.Operator();\n\n    case LEFTPARENTHESIS:\n      return this.Parentheses(this.readSequence, context.recognizer);\n\n    case LEFTSQUAREBRACKET:\n      return this.Brackets(this.readSequence, context.recognizer);\n\n    case STRING:\n      return this.String();\n\n    case DIMENSION:\n      return this.Dimension();\n\n    case PERCENTAGE:\n      return this.Percentage();\n\n    case NUMBER:\n      return this.Number();\n\n    case FUNCTION:\n      return cmpStr(this.scanner.source, this.scanner.tokenStart, this.scanner.tokenEnd, 'url(') ? this.Url() : this.Function(this.readSequence, context.recognizer);\n\n    case URL:\n      return this.Url();\n\n    case IDENT:\n      // check for unicode range, it should start with u+ or U+\n      if (cmpChar(this.scanner.source, this.scanner.tokenStart, U) && cmpChar(this.scanner.source, this.scanner.tokenStart + 1, PLUSSIGN)) {\n        return this.UnicodeRange();\n      } else {\n        return this.Identifier();\n      }\n\n    case DELIM:\n      var code = this.scanner.source.charCodeAt(this.scanner.tokenStart);\n\n      if (code === SOLIDUS || code === ASTERISK || code === PLUSSIGN || code === HYPHENMINUS) {\n        return this.Operator(); // TODO: replace with Delim\n      } // TODO: produce a node with Delim node type\n\n\n      if (code === NUMBERSIGN) {\n        this.error('Hex or identifier is expected', this.scanner.tokenStart + 1);\n      }\n\n      break;\n  }\n};","map":{"version":3,"names":["cmpChar","require","cmpStr","TYPE","IDENT","Ident","STRING","String","NUMBER","Number","FUNCTION","Function","URL","Url","HASH","Hash","DIMENSION","Dimension","PERCENTAGE","Percentage","LEFTPARENTHESIS","LeftParenthesis","LEFTSQUAREBRACKET","LeftSquareBracket","COMMA","Comma","DELIM","Delim","NUMBERSIGN","ASTERISK","PLUSSIGN","HYPHENMINUS","SOLIDUS","U","module","exports","defaultRecognizer","context","scanner","tokenType","space","ignoreWSAfter","Operator","Parentheses","readSequence","recognizer","Brackets","source","tokenStart","tokenEnd","UnicodeRange","Identifier","code","charCodeAt","error"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/postcss-svgo/node_modules/css-tree/lib/syntax/scope/default.js"],"sourcesContent":["var cmpChar = require('../../tokenizer').cmpChar;\nvar cmpStr = require('../../tokenizer').cmpStr;\nvar TYPE = require('../../tokenizer').TYPE;\n\nvar IDENT = TYPE.Ident;\nvar STRING = TYPE.String;\nvar NUMBER = TYPE.Number;\nvar FUNCTION = TYPE.Function;\nvar URL = TYPE.Url;\nvar HASH = TYPE.Hash;\nvar DIMENSION = TYPE.Dimension;\nvar PERCENTAGE = TYPE.Percentage;\nvar LEFTPARENTHESIS = TYPE.LeftParenthesis;\nvar LEFTSQUAREBRACKET = TYPE.LeftSquareBracket;\nvar COMMA = TYPE.Comma;\nvar DELIM = TYPE.Delim;\nvar NUMBERSIGN = 0x0023;  // U+0023 NUMBER SIGN (#)\nvar ASTERISK = 0x002A;    // U+002A ASTERISK (*)\nvar PLUSSIGN = 0x002B;    // U+002B PLUS SIGN (+)\nvar HYPHENMINUS = 0x002D; // U+002D HYPHEN-MINUS (-)\nvar SOLIDUS = 0x002F;     // U+002F SOLIDUS (/)\nvar U = 0x0075;           // U+0075 LATIN SMALL LETTER U (u)\n\nmodule.exports = function defaultRecognizer(context) {\n    switch (this.scanner.tokenType) {\n        case HASH:\n            return this.Hash();\n\n        case COMMA:\n            context.space = null;\n            context.ignoreWSAfter = true;\n            return this.Operator();\n\n        case LEFTPARENTHESIS:\n            return this.Parentheses(this.readSequence, context.recognizer);\n\n        case LEFTSQUAREBRACKET:\n            return this.Brackets(this.readSequence, context.recognizer);\n\n        case STRING:\n            return this.String();\n\n        case DIMENSION:\n            return this.Dimension();\n\n        case PERCENTAGE:\n            return this.Percentage();\n\n        case NUMBER:\n            return this.Number();\n\n        case FUNCTION:\n            return cmpStr(this.scanner.source, this.scanner.tokenStart, this.scanner.tokenEnd, 'url(')\n                ? this.Url()\n                : this.Function(this.readSequence, context.recognizer);\n\n        case URL:\n            return this.Url();\n\n        case IDENT:\n            // check for unicode range, it should start with u+ or U+\n            if (cmpChar(this.scanner.source, this.scanner.tokenStart, U) &&\n                cmpChar(this.scanner.source, this.scanner.tokenStart + 1, PLUSSIGN)) {\n                return this.UnicodeRange();\n            } else {\n                return this.Identifier();\n            }\n\n        case DELIM:\n            var code = this.scanner.source.charCodeAt(this.scanner.tokenStart);\n\n            if (code === SOLIDUS ||\n                code === ASTERISK ||\n                code === PLUSSIGN ||\n                code === HYPHENMINUS) {\n                return this.Operator(); // TODO: replace with Delim\n            }\n\n            // TODO: produce a node with Delim node type\n\n            if (code === NUMBERSIGN) {\n                this.error('Hex or identifier is expected', this.scanner.tokenStart + 1);\n            }\n\n            break;\n    }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}