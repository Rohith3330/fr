{"ast":null,"code":"'use strict';\n\nvar $ = require('../internals/export');\n\nvar $group = require('../internals/array-group');\n\nvar addToUnscopables = require('../internals/add-to-unscopables'); // `Array.prototype.group` method\n// https://github.com/tc39/proposal-array-grouping\n\n\n$({\n  target: 'Array',\n  proto: true\n}, {\n  group: function group(callbackfn\n  /* , thisArg */\n  ) {\n    var thisArg = arguments.length > 1 ? arguments[1] : undefined;\n    return $group(this, callbackfn, thisArg);\n  }\n});\naddToUnscopables('group');","map":{"version":3,"names":["$","require","$group","addToUnscopables","target","proto","group","callbackfn","thisArg","arguments","length","undefined"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/core-js/modules/esnext.array.group.js"],"sourcesContent":["'use strict';\nvar $ = require('../internals/export');\nvar $group = require('../internals/array-group');\nvar addToUnscopables = require('../internals/add-to-unscopables');\n\n// `Array.prototype.group` method\n// https://github.com/tc39/proposal-array-grouping\n$({ target: 'Array', proto: true }, {\n  group: function group(callbackfn /* , thisArg */) {\n    var thisArg = arguments.length > 1 ? arguments[1] : undefined;\n    return $group(this, callbackfn, thisArg);\n  }\n});\n\naddToUnscopables('group');\n"],"mappings":"AAAA;;AACA,IAAIA,CAAC,GAAGC,OAAO,CAAC,qBAAD,CAAf;;AACA,IAAIC,MAAM,GAAGD,OAAO,CAAC,0BAAD,CAApB;;AACA,IAAIE,gBAAgB,GAAGF,OAAO,CAAC,iCAAD,CAA9B,C,CAEA;AACA;;;AACAD,CAAC,CAAC;EAAEI,MAAM,EAAE,OAAV;EAAmBC,KAAK,EAAE;AAA1B,CAAD,EAAmC;EAClCC,KAAK,EAAE,SAASA,KAAT,CAAeC;EAAW;EAA1B,EAA2C;IAChD,IAAIC,OAAO,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,GAAuBD,SAAS,CAAC,CAAD,CAAhC,GAAsCE,SAApD;IACA,OAAOT,MAAM,CAAC,IAAD,EAAOK,UAAP,EAAmBC,OAAnB,CAAb;EACD;AAJiC,CAAnC,CAAD;AAOAL,gBAAgB,CAAC,OAAD,CAAhB"},"metadata":{},"sourceType":"script"}