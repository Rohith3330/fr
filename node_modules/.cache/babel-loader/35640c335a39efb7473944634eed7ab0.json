{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.checkNullableObject = exports.checkNullable = void 0;\n\nconst codegen_1 = require(\"../../compile/codegen\");\n\nfunction checkNullable(_ref) {\n  let {\n    gen,\n    data,\n    parentSchema\n  } = _ref;\n  let cond = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : codegen_1.nil;\n  const valid = gen.name(\"valid\");\n\n  if (parentSchema.nullable) {\n    gen.let(valid, (0, codegen_1._)`${data} === null`);\n    cond = (0, codegen_1.not)(valid);\n  } else {\n    gen.let(valid, false);\n  }\n\n  return [valid, cond];\n}\n\nexports.checkNullable = checkNullable;\n\nfunction checkNullableObject(cxt, cond) {\n  const [valid, cond_] = checkNullable(cxt, cond);\n  return [valid, (0, codegen_1._)`${cond_} && typeof ${cxt.data} == \"object\" && !Array.isArray(${cxt.data})`];\n}\n\nexports.checkNullableObject = checkNullableObject;","map":{"version":3,"mappings":";;;;;;;AACA;;AAEA,SAAgBA,aAAhB,OAEkB;EAAA,IADhB;IAACC,GAAD;IAAMC,IAAN;IAAYC;EAAZ,CACgB;EAAA,IAAhBC,IAAgB,uEAAHC,aAAG;EAEhB,MAAMC,KAAK,GAAGL,GAAG,CAACM,IAAJ,CAAS,OAAT,CAAd;;EACA,IAAIJ,YAAY,CAACK,QAAjB,EAA2B;IACzBP,GAAG,CAACQ,GAAJ,CAAQH,KAAR,EAAe,gBAAC,GAAGJ,IAAI,WAAvB;IACAE,IAAI,GAAG,mBAAIE,KAAJ,CAAP;EACD,CAHD,MAGO;IACLL,GAAG,CAACQ,GAAJ,CAAQH,KAAR,EAAe,KAAf;EACD;;EACD,OAAO,CAACA,KAAD,EAAQF,IAAR,CAAP;AACD;;AAZDM;;AAcA,SAAgBC,mBAAhB,CAAoCC,GAApC,EAAqDR,IAArD,EAA+D;EAC7D,MAAM,CAACE,KAAD,EAAQO,KAAR,IAAiBb,aAAa,CAACY,GAAD,EAAMR,IAAN,CAApC;EACA,OAAO,CAACE,KAAD,EAAQ,gBAAC,GAAGO,KAAK,cAAcD,GAAG,CAACV,IAAI,kCAAkCU,GAAG,CAACV,IAAI,GAAjF,CAAP;AACD;;AAHDQ","names":["checkNullable","gen","data","parentSchema","cond","codegen_1","valid","name","nullable","let","exports","checkNullableObject","cxt","cond_"],"sources":["C:\\Users\\Rohith\\mern\\frontend\\node_modules\\css-minimizer-webpack-plugin\\node_modules\\ajv\\lib\\vocabularies\\jtd\\nullable.ts"],"sourcesContent":["import type {KeywordCxt} from \"../../compile/validate\"\nimport {_, not, nil, Code, Name} from \"../../compile/codegen\"\n\nexport function checkNullable(\n  {gen, data, parentSchema}: KeywordCxt,\n  cond: Code = nil\n): [Name, Code] {\n  const valid = gen.name(\"valid\")\n  if (parentSchema.nullable) {\n    gen.let(valid, _`${data} === null`)\n    cond = not(valid)\n  } else {\n    gen.let(valid, false)\n  }\n  return [valid, cond]\n}\n\nexport function checkNullableObject(cxt: KeywordCxt, cond: Code): [Name, Code] {\n  const [valid, cond_] = checkNullable(cxt, cond)\n  return [valid, _`${cond_} && typeof ${cxt.data} == \"object\" && !Array.isArray(${cxt.data})`]\n}\n"]},"metadata":{},"sourceType":"script"}