{"ast":null,"code":"/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\"use strict\";\n\nvar fs = require(\"fs\");\n\nfunction pipeExists(name) {\n  return fs.existsSync(name);\n}\n\nfunction createCancellationToken(args) {\n  var cancellationPipeName;\n\n  for (var i = 0; i < args.length - 1; i++) {\n    if (args[i] === \"--cancellationPipeName\") {\n      cancellationPipeName = args[i + 1];\n      break;\n    }\n  }\n\n  if (!cancellationPipeName) {\n    return {\n      isCancellationRequested: function () {\n        return false;\n      },\n      setRequest: function (_requestId) {\n        return void 0;\n      },\n      resetRequest: function (_requestId) {\n        return void 0;\n      }\n    };\n  }\n\n  if (cancellationPipeName.charAt(cancellationPipeName.length - 1) === \"*\") {\n    var namePrefix_1 = cancellationPipeName.slice(0, -1);\n\n    if (namePrefix_1.length === 0 || namePrefix_1.indexOf(\"*\") >= 0) {\n      throw new Error(\"Invalid name for template cancellation pipe: it should have length greater than 2 characters and contain only one '*'.\");\n    }\n\n    var perRequestPipeName_1;\n    var currentRequestId_1;\n    return {\n      isCancellationRequested: function () {\n        return perRequestPipeName_1 !== undefined && pipeExists(perRequestPipeName_1);\n      },\n      setRequest: function (requestId) {\n        currentRequestId_1 = requestId;\n        perRequestPipeName_1 = namePrefix_1 + requestId;\n      },\n      resetRequest: function (requestId) {\n        if (currentRequestId_1 !== requestId) {\n          throw new Error(\"Mismatched request id, expected \".concat(currentRequestId_1, \", actual \").concat(requestId));\n        }\n\n        perRequestPipeName_1 = undefined;\n      }\n    };\n  } else {\n    return {\n      isCancellationRequested: function () {\n        return pipeExists(cancellationPipeName);\n      },\n      setRequest: function (_requestId) {\n        return void 0;\n      },\n      resetRequest: function (_requestId) {\n        return void 0;\n      }\n    };\n  }\n}\n\nmodule.exports = createCancellationToken;","map":{"version":3,"names":["fs","require","pipeExists","name","existsSync","createCancellationToken","args","cancellationPipeName","i","length","isCancellationRequested","setRequest","_requestId","resetRequest","charAt","namePrefix_1","slice","indexOf","Error","perRequestPipeName_1","currentRequestId_1","undefined","requestId","concat","module","exports"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/typescript/lib/cancellationToken.js"],"sourcesContent":["/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n\"use strict\";\nvar fs = require(\"fs\");\nfunction pipeExists(name) {\n    return fs.existsSync(name);\n}\nfunction createCancellationToken(args) {\n    var cancellationPipeName;\n    for (var i = 0; i < args.length - 1; i++) {\n        if (args[i] === \"--cancellationPipeName\") {\n            cancellationPipeName = args[i + 1];\n            break;\n        }\n    }\n    if (!cancellationPipeName) {\n        return {\n            isCancellationRequested: function () { return false; },\n            setRequest: function (_requestId) { return void 0; },\n            resetRequest: function (_requestId) { return void 0; }\n        };\n    }\n    if (cancellationPipeName.charAt(cancellationPipeName.length - 1) === \"*\") {\n        var namePrefix_1 = cancellationPipeName.slice(0, -1);\n        if (namePrefix_1.length === 0 || namePrefix_1.indexOf(\"*\") >= 0) {\n            throw new Error(\"Invalid name for template cancellation pipe: it should have length greater than 2 characters and contain only one '*'.\");\n        }\n        var perRequestPipeName_1;\n        var currentRequestId_1;\n        return {\n            isCancellationRequested: function () { return perRequestPipeName_1 !== undefined && pipeExists(perRequestPipeName_1); },\n            setRequest: function (requestId) {\n                currentRequestId_1 = requestId;\n                perRequestPipeName_1 = namePrefix_1 + requestId;\n            },\n            resetRequest: function (requestId) {\n                if (currentRequestId_1 !== requestId) {\n                    throw new Error(\"Mismatched request id, expected \".concat(currentRequestId_1, \", actual \").concat(requestId));\n                }\n                perRequestPipeName_1 = undefined;\n            }\n        };\n    }\n    else {\n        return {\n            isCancellationRequested: function () { return pipeExists(cancellationPipeName); },\n            setRequest: function (_requestId) { return void 0; },\n            resetRequest: function (_requestId) { return void 0; }\n        };\n    }\n}\nmodule.exports = createCancellationToken;\n//# sourceMappingURL=cancellationToken.js.map"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;;AACA,IAAIA,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAhB;;AACA,SAASC,UAAT,CAAoBC,IAApB,EAA0B;EACtB,OAAOH,EAAE,CAACI,UAAH,CAAcD,IAAd,CAAP;AACH;;AACD,SAASE,uBAAT,CAAiCC,IAAjC,EAAuC;EACnC,IAAIC,oBAAJ;;EACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,IAAI,CAACG,MAAL,GAAc,CAAlC,EAAqCD,CAAC,EAAtC,EAA0C;IACtC,IAAIF,IAAI,CAACE,CAAD,CAAJ,KAAY,wBAAhB,EAA0C;MACtCD,oBAAoB,GAAGD,IAAI,CAACE,CAAC,GAAG,CAAL,CAA3B;MACA;IACH;EACJ;;EACD,IAAI,CAACD,oBAAL,EAA2B;IACvB,OAAO;MACHG,uBAAuB,EAAE,YAAY;QAAE,OAAO,KAAP;MAAe,CADnD;MAEHC,UAAU,EAAE,UAAUC,UAAV,EAAsB;QAAE,OAAO,KAAK,CAAZ;MAAgB,CAFjD;MAGHC,YAAY,EAAE,UAAUD,UAAV,EAAsB;QAAE,OAAO,KAAK,CAAZ;MAAgB;IAHnD,CAAP;EAKH;;EACD,IAAIL,oBAAoB,CAACO,MAArB,CAA4BP,oBAAoB,CAACE,MAArB,GAA8B,CAA1D,MAAiE,GAArE,EAA0E;IACtE,IAAIM,YAAY,GAAGR,oBAAoB,CAACS,KAArB,CAA2B,CAA3B,EAA8B,CAAC,CAA/B,CAAnB;;IACA,IAAID,YAAY,CAACN,MAAb,KAAwB,CAAxB,IAA6BM,YAAY,CAACE,OAAb,CAAqB,GAArB,KAA6B,CAA9D,EAAiE;MAC7D,MAAM,IAAIC,KAAJ,CAAU,wHAAV,CAAN;IACH;;IACD,IAAIC,oBAAJ;IACA,IAAIC,kBAAJ;IACA,OAAO;MACHV,uBAAuB,EAAE,YAAY;QAAE,OAAOS,oBAAoB,KAAKE,SAAzB,IAAsCnB,UAAU,CAACiB,oBAAD,CAAvD;MAAgF,CADpH;MAEHR,UAAU,EAAE,UAAUW,SAAV,EAAqB;QAC7BF,kBAAkB,GAAGE,SAArB;QACAH,oBAAoB,GAAGJ,YAAY,GAAGO,SAAtC;MACH,CALE;MAMHT,YAAY,EAAE,UAAUS,SAAV,EAAqB;QAC/B,IAAIF,kBAAkB,KAAKE,SAA3B,EAAsC;UAClC,MAAM,IAAIJ,KAAJ,CAAU,mCAAmCK,MAAnC,CAA0CH,kBAA1C,EAA8D,WAA9D,EAA2EG,MAA3E,CAAkFD,SAAlF,CAAV,CAAN;QACH;;QACDH,oBAAoB,GAAGE,SAAvB;MACH;IAXE,CAAP;EAaH,CApBD,MAqBK;IACD,OAAO;MACHX,uBAAuB,EAAE,YAAY;QAAE,OAAOR,UAAU,CAACK,oBAAD,CAAjB;MAA0C,CAD9E;MAEHI,UAAU,EAAE,UAAUC,UAAV,EAAsB;QAAE,OAAO,KAAK,CAAZ;MAAgB,CAFjD;MAGHC,YAAY,EAAE,UAAUD,UAAV,EAAsB;QAAE,OAAO,KAAK,CAAZ;MAAgB;IAHnD,CAAP;EAKH;AACJ;;AACDY,MAAM,CAACC,OAAP,GAAiBpB,uBAAjB"},"metadata":{},"sourceType":"script"}