{"ast":null,"code":"#!/usr/bin/env node\n\n/**\n * html-minifier-terser CLI tool\n *\n * The MIT License (MIT)\n *\n *  Copyright (c) 2014-2016 Zoltan Frombach\n *\n *  Permission is hereby granted, free of charge, to any person obtaining a copy of\n *  this software and associated documentation files (the \"Software\"), to deal in\n *  the Software without restriction, including without limitation the rights to\n *  use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n *  the Software, and to permit persons to whom the Software is furnished to do so,\n *  subject to the following conditions:\n *\n *  The above copyright notice and this permission notice shall be included in all\n *  copies or substantial portions of the Software.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n *  FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n *  COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n *  IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n *  CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n *\n */\n'use strict';\n\nvar camelCase = require('camel-case').camelCase;\n\nvar fs = require('fs');\n\nvar info = require('./package.json');\n\nvar minify = require('./' + info.main).minify;\n\nvar paramCase = require('param-case').paramCase;\n\nvar path = require('path');\n\nvar {\n  Command\n} = require('commander');\n\nconst program = new Command();\nprogram.name(info.name);\nprogram.version(info.version);\n\nfunction fatal(message) {\n  console.error(message);\n  process.exit(1);\n}\n/**\n * JSON does not support regexes, so, e.g., JSON.parse() will not create\n * a RegExp from the JSON value `[ \"/matchString/\" ]`, which is\n * technically just an array containing a string that begins and end with\n * a forward slash. To get a RegExp from a JSON string, it must be\n * constructed explicitly in JavaScript.\n *\n * The likelihood of actually wanting to match text that is enclosed in\n * forward slashes is probably quite rare, so if forward slashes were\n * included in an argument that requires a regex, the user most likely\n * thought they were part of the syntax for specifying a regex.\n *\n * In the unlikely case that forward slashes are indeed desired in the\n * search string, the user would need to enclose the expression in a\n * second set of slashes:\n *\n *    --customAttrSrround \"[\\\"//matchString//\\\"]\"\n */\n\n\nfunction parseRegExp(value) {\n  if (value) {\n    return new RegExp(value.replace(/^\\/(.*)\\/$/, '$1'));\n  }\n}\n\nfunction parseJSON(value) {\n  if (value) {\n    try {\n      return JSON.parse(value);\n    } catch (e) {\n      if (/^{/.test(value)) {\n        fatal('Could not parse JSON value \\'' + value + '\\'');\n      }\n\n      return value;\n    }\n  }\n}\n\nfunction parseJSONArray(value) {\n  if (value) {\n    value = parseJSON(value);\n    return Array.isArray(value) ? value : [value];\n  }\n}\n\nfunction parseJSONRegExpArray(value) {\n  value = parseJSONArray(value);\n  return value && value.map(parseRegExp);\n}\n\nfunction parseString(value) {\n  return value;\n}\n\nvar mainOptions = {\n  caseSensitive: 'Treat attributes in case sensitive manner (useful for SVG; e.g. viewBox)',\n  collapseBooleanAttributes: 'Omit attribute values from boolean attributes',\n  collapseInlineTagWhitespace: 'Collapse white space around inline tag',\n  collapseWhitespace: 'Collapse white space that contributes to text nodes in a document tree.',\n  conservativeCollapse: 'Always collapse to 1 space (never remove it entirely)',\n  continueOnParseError: 'Handle parse errors instead of aborting',\n  customAttrAssign: ['Arrays of regex\\'es that allow to support custom attribute assign expressions (e.g. \\'<div flex?=\"{{mode != cover}}\"></div>\\')', parseJSONRegExpArray],\n  customAttrCollapse: ['Regex that specifies custom attribute to strip newlines from (e.g. /ng-class/)', parseRegExp],\n  customAttrSurround: ['Arrays of regex\\'es that allow to support custom attribute surround expressions (e.g. <input {{#if value}}checked=\"checked\"{{/if}}>)', parseJSONRegExpArray],\n  customEventAttributes: ['Arrays of regex\\'es that allow to support custom event attributes for minifyJS (e.g. ng-click)', parseJSONRegExpArray],\n  decodeEntities: 'Use direct Unicode characters whenever possible',\n  html5: 'Parse input according to HTML5 specifications',\n  ignoreCustomComments: ['Array of regex\\'es that allow to ignore certain comments, when matched', parseJSONRegExpArray],\n  ignoreCustomFragments: ['Array of regex\\'es that allow to ignore certain fragments, when matched (e.g. <?php ... ?>, {{ ... }})', parseJSONRegExpArray],\n  includeAutoGeneratedTags: 'Insert tags generated by HTML parser',\n  keepClosingSlash: 'Keep the trailing slash on singleton elements',\n  maxLineLength: ['Max line length', parseInt],\n  minifyCSS: ['Minify CSS in style elements and style attributes (uses clean-css)', parseJSON],\n  minifyJS: ['Minify Javascript in script elements and on* attributes (uses terser)', parseJSON],\n  minifyURLs: ['Minify URLs in various attributes (uses relateurl)', parseJSON],\n  noNewlinesBeforeTagClose: 'Never add a newline before a tag that closes an element',\n  preserveLineBreaks: 'Always collapse to 1 line break (never remove it entirely) when whitespace between tags include a line break.',\n  preventAttributesEscaping: 'Prevents the escaping of the values of attributes.',\n  processConditionalComments: 'Process contents of conditional comments through minifier',\n  processScripts: ['Array of strings corresponding to types of script elements to process through minifier (e.g. \"text/ng-template\", \"text/x-handlebars-template\", etc.)', parseJSONArray],\n  quoteCharacter: ['Type of quote to use for attribute values (\\' or \")', parseString],\n  removeAttributeQuotes: 'Remove quotes around attributes when possible.',\n  removeComments: 'Strip HTML comments',\n  removeEmptyAttributes: 'Remove all attributes with whitespace-only values',\n  removeEmptyElements: 'Remove all elements with empty contents',\n  removeOptionalTags: 'Remove unrequired tags',\n  removeRedundantAttributes: 'Remove attributes when value matches default.',\n  removeScriptTypeAttributes: 'Removes the following attributes from script tags: text/javascript, text/ecmascript, text/jscript, application/javascript, application/x-javascript, application/ecmascript. Other type attribute values are left intact',\n  removeStyleLinkTypeAttributes: 'Remove type=\"text/css\" from style and link tags. Other type attribute values are left intact.',\n  removeTagWhitespace: 'Remove space between attributes whenever possible',\n  sortAttributes: 'Sort attributes by frequency',\n  sortClassName: 'Sort style classes by frequency',\n  trimCustomFragments: 'Trim white space around ignoreCustomFragments.',\n  useShortDoctype: 'Replaces the doctype with the short (HTML5) doctype'\n};\nvar mainOptionKeys = Object.keys(mainOptions);\nmainOptionKeys.forEach(function (key) {\n  var option = mainOptions[key];\n\n  if (Array.isArray(option)) {\n    key = key === 'minifyURLs' ? '--minify-urls' : '--' + paramCase(key);\n    key += option[1] === parseJSON ? ' [value]' : ' <value>';\n    program.option(key, option[0], option[1]);\n  } else if (~['html5', 'includeAutoGeneratedTags'].indexOf(key)) {\n    program.option('--no-' + paramCase(key), option);\n  } else {\n    program.option('--' + paramCase(key), option);\n  }\n});\nprogram.option('-o --output <file>', 'Specify output file (if not specified STDOUT will be used for output)');\n\nfunction readFile(file) {\n  try {\n    return fs.readFileSync(file, {\n      encoding: 'utf8'\n    });\n  } catch (e) {\n    fatal('Cannot read ' + file + '\\n' + e.message);\n  }\n}\n\nvar config = {};\nprogram.option('-c --config-file <file>', 'Use config file', function (configPath) {\n  var data = readFile(configPath);\n\n  try {\n    config = JSON.parse(data);\n  } catch (je) {\n    try {\n      config = require(path.resolve(configPath));\n    } catch (ne) {\n      fatal('Cannot read the specified config file.\\nAs JSON: ' + je.message + '\\nAs module: ' + ne.message);\n    }\n  }\n\n  mainOptionKeys.forEach(function (key) {\n    if (key in config) {\n      var option = mainOptions[key];\n\n      if (Array.isArray(option)) {\n        var value = config[key];\n        config[key] = option[1](typeof value === 'string' ? value : JSON.stringify(value));\n      }\n    }\n  });\n});\nprogram.option('--input-dir <dir>', 'Specify an input directory');\nprogram.option('--output-dir <dir>', 'Specify an output directory');\nprogram.option('--file-ext <text>', 'Specify an extension to be read, ex: html');\nvar content;\nprogram.arguments('[files...]').action(function (files) {\n  content = files.map(readFile).join('');\n}).parse(process.argv);\nconst programOptions = program.opts();\n\nfunction createOptions() {\n  var options = {};\n  mainOptionKeys.forEach(function (key) {\n    var param = programOptions[key === 'minifyURLs' ? 'minifyUrls' : camelCase(key)];\n\n    if (typeof param !== 'undefined') {\n      options[key] = param;\n    } else if (key in config) {\n      options[key] = config[key];\n    }\n  });\n  return options;\n}\n\nfunction mkdir(outputDir, callback) {\n  fs.mkdir(outputDir, function (err) {\n    if (err) {\n      switch (err.code) {\n        case 'ENOENT':\n          return mkdir(path.join(outputDir, '..'), function () {\n            mkdir(outputDir, callback);\n          });\n\n        case 'EEXIST':\n          break;\n\n        default:\n          fatal('Cannot create directory ' + outputDir + '\\n' + err.message);\n      }\n    }\n\n    callback();\n  });\n}\n\nfunction processFile(inputFile, outputFile) {\n  fs.readFile(inputFile, {\n    encoding: 'utf8'\n  }, async function (err, data) {\n    if (err) {\n      fatal('Cannot read ' + inputFile + '\\n' + err.message);\n    }\n\n    var minified;\n\n    try {\n      minified = await minify(data, createOptions());\n    } catch (e) {\n      fatal('Minification error on ' + inputFile + '\\n' + e.message);\n    }\n\n    fs.writeFile(outputFile, minified, {\n      encoding: 'utf8'\n    }, function (err) {\n      if (err) {\n        fatal('Cannot write ' + outputFile + '\\n' + err.message);\n      }\n    });\n  });\n}\n\nfunction processDirectory(inputDir, outputDir, fileExt) {\n  fs.readdir(inputDir, function (err, files) {\n    if (err) {\n      fatal('Cannot read directory ' + inputDir + '\\n' + err.message);\n    }\n\n    files.forEach(function (file) {\n      var inputFile = path.join(inputDir, file);\n      var outputFile = path.join(outputDir, file);\n      fs.stat(inputFile, function (err, stat) {\n        if (err) {\n          fatal('Cannot read ' + inputFile + '\\n' + err.message);\n        } else if (stat.isDirectory()) {\n          processDirectory(inputFile, outputFile, fileExt);\n        } else if (!fileExt || path.extname(file) === '.' + fileExt) {\n          mkdir(outputDir, function () {\n            processFile(inputFile, outputFile);\n          });\n        }\n      });\n    });\n  });\n}\n\nasync function writeMinify() {\n  var minified;\n\n  try {\n    minified = await minify(content, createOptions());\n  } catch (e) {\n    fatal('Minification error:\\n' + e.message);\n  }\n\n  (programOptions.output ? fs.createWriteStream(programOptions.output).on('error', function (e) {\n    fatal('Cannot write ' + programOptions.output + '\\n' + e.message);\n  }) : process.stdout).write(minified);\n}\n\nvar inputDir = programOptions.inputDir;\nvar outputDir = programOptions.outputDir;\nvar fileExt = programOptions.fileExt;\n\nif (inputDir || outputDir) {\n  if (!inputDir) {\n    fatal('The option output-dir needs to be used with the option input-dir. If you are working with a single file, use -o.');\n  } else if (!outputDir) {\n    fatal('You need to specify where to write the output files with the option --output-dir');\n  }\n\n  processDirectory(inputDir, outputDir, fileExt);\n} // Minifying one or more files specified on the CMD line\nelse if (content) {\n  writeMinify();\n} // Minifying input coming from STDIN\nelse {\n  content = '';\n  process.stdin.setEncoding('utf8');\n  process.stdin.on('data', function (data) {\n    content += data;\n  }).on('end', writeMinify);\n}","map":{"version":3,"names":["camelCase","require","fs","info","minify","main","paramCase","path","Command","program","name","version","fatal","message","console","error","process","exit","parseRegExp","value","RegExp","replace","parseJSON","JSON","parse","e","test","parseJSONArray","Array","isArray","parseJSONRegExpArray","map","parseString","mainOptions","caseSensitive","collapseBooleanAttributes","collapseInlineTagWhitespace","collapseWhitespace","conservativeCollapse","continueOnParseError","customAttrAssign","customAttrCollapse","customAttrSurround","customEventAttributes","decodeEntities","html5","ignoreCustomComments","ignoreCustomFragments","includeAutoGeneratedTags","keepClosingSlash","maxLineLength","parseInt","minifyCSS","minifyJS","minifyURLs","noNewlinesBeforeTagClose","preserveLineBreaks","preventAttributesEscaping","processConditionalComments","processScripts","quoteCharacter","removeAttributeQuotes","removeComments","removeEmptyAttributes","removeEmptyElements","removeOptionalTags","removeRedundantAttributes","removeScriptTypeAttributes","removeStyleLinkTypeAttributes","removeTagWhitespace","sortAttributes","sortClassName","trimCustomFragments","useShortDoctype","mainOptionKeys","Object","keys","forEach","key","option","indexOf","readFile","file","readFileSync","encoding","config","configPath","data","je","resolve","ne","stringify","content","arguments","action","files","join","argv","programOptions","opts","createOptions","options","param","mkdir","outputDir","callback","err","code","processFile","inputFile","outputFile","minified","writeFile","processDirectory","inputDir","fileExt","readdir","stat","isDirectory","extname","writeMinify","output","createWriteStream","on","stdout","write","stdin","setEncoding"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/html-minifier-terser/cli.js"],"sourcesContent":["#!/usr/bin/env node\n/**\n * html-minifier-terser CLI tool\n *\n * The MIT License (MIT)\n *\n *  Copyright (c) 2014-2016 Zoltan Frombach\n *\n *  Permission is hereby granted, free of charge, to any person obtaining a copy of\n *  this software and associated documentation files (the \"Software\"), to deal in\n *  the Software without restriction, including without limitation the rights to\n *  use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n *  the Software, and to permit persons to whom the Software is furnished to do so,\n *  subject to the following conditions:\n *\n *  The above copyright notice and this permission notice shall be included in all\n *  copies or substantial portions of the Software.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n *  FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n *  COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n *  IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n *  CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n *\n */\n\n'use strict';\n\nvar camelCase = require('camel-case').camelCase;\nvar fs = require('fs');\nvar info = require('./package.json');\nvar minify = require('./' + info.main).minify;\nvar paramCase = require('param-case').paramCase;\nvar path = require('path');\nvar { Command } = require('commander');\n\nconst program = new Command();\nprogram.name(info.name);\nprogram.version(info.version);\n\nfunction fatal(message) {\n  console.error(message);\n  process.exit(1);\n}\n\n/**\n * JSON does not support regexes, so, e.g., JSON.parse() will not create\n * a RegExp from the JSON value `[ \"/matchString/\" ]`, which is\n * technically just an array containing a string that begins and end with\n * a forward slash. To get a RegExp from a JSON string, it must be\n * constructed explicitly in JavaScript.\n *\n * The likelihood of actually wanting to match text that is enclosed in\n * forward slashes is probably quite rare, so if forward slashes were\n * included in an argument that requires a regex, the user most likely\n * thought they were part of the syntax for specifying a regex.\n *\n * In the unlikely case that forward slashes are indeed desired in the\n * search string, the user would need to enclose the expression in a\n * second set of slashes:\n *\n *    --customAttrSrround \"[\\\"//matchString//\\\"]\"\n */\nfunction parseRegExp(value) {\n  if (value) {\n    return new RegExp(value.replace(/^\\/(.*)\\/$/, '$1'));\n  }\n}\n\nfunction parseJSON(value) {\n  if (value) {\n    try {\n      return JSON.parse(value);\n    }\n    catch (e) {\n      if (/^{/.test(value)) {\n        fatal('Could not parse JSON value \\'' + value + '\\'');\n      }\n      return value;\n    }\n  }\n}\n\nfunction parseJSONArray(value) {\n  if (value) {\n    value = parseJSON(value);\n    return Array.isArray(value) ? value : [value];\n  }\n}\n\nfunction parseJSONRegExpArray(value) {\n  value = parseJSONArray(value);\n  return value && value.map(parseRegExp);\n}\n\nfunction parseString(value) {\n  return value;\n}\n\nvar mainOptions = {\n  caseSensitive: 'Treat attributes in case sensitive manner (useful for SVG; e.g. viewBox)',\n  collapseBooleanAttributes: 'Omit attribute values from boolean attributes',\n  collapseInlineTagWhitespace: 'Collapse white space around inline tag',\n  collapseWhitespace: 'Collapse white space that contributes to text nodes in a document tree.',\n  conservativeCollapse: 'Always collapse to 1 space (never remove it entirely)',\n  continueOnParseError: 'Handle parse errors instead of aborting',\n  customAttrAssign: ['Arrays of regex\\'es that allow to support custom attribute assign expressions (e.g. \\'<div flex?=\"{{mode != cover}}\"></div>\\')', parseJSONRegExpArray],\n  customAttrCollapse: ['Regex that specifies custom attribute to strip newlines from (e.g. /ng-class/)', parseRegExp],\n  customAttrSurround: ['Arrays of regex\\'es that allow to support custom attribute surround expressions (e.g. <input {{#if value}}checked=\"checked\"{{/if}}>)', parseJSONRegExpArray],\n  customEventAttributes: ['Arrays of regex\\'es that allow to support custom event attributes for minifyJS (e.g. ng-click)', parseJSONRegExpArray],\n  decodeEntities: 'Use direct Unicode characters whenever possible',\n  html5: 'Parse input according to HTML5 specifications',\n  ignoreCustomComments: ['Array of regex\\'es that allow to ignore certain comments, when matched', parseJSONRegExpArray],\n  ignoreCustomFragments: ['Array of regex\\'es that allow to ignore certain fragments, when matched (e.g. <?php ... ?>, {{ ... }})', parseJSONRegExpArray],\n  includeAutoGeneratedTags: 'Insert tags generated by HTML parser',\n  keepClosingSlash: 'Keep the trailing slash on singleton elements',\n  maxLineLength: ['Max line length', parseInt],\n  minifyCSS: ['Minify CSS in style elements and style attributes (uses clean-css)', parseJSON],\n  minifyJS: ['Minify Javascript in script elements and on* attributes (uses terser)', parseJSON],\n  minifyURLs: ['Minify URLs in various attributes (uses relateurl)', parseJSON],\n  noNewlinesBeforeTagClose: 'Never add a newline before a tag that closes an element',\n  preserveLineBreaks: 'Always collapse to 1 line break (never remove it entirely) when whitespace between tags include a line break.',\n  preventAttributesEscaping: 'Prevents the escaping of the values of attributes.',\n  processConditionalComments: 'Process contents of conditional comments through minifier',\n  processScripts: ['Array of strings corresponding to types of script elements to process through minifier (e.g. \"text/ng-template\", \"text/x-handlebars-template\", etc.)', parseJSONArray],\n  quoteCharacter: ['Type of quote to use for attribute values (\\' or \")', parseString],\n  removeAttributeQuotes: 'Remove quotes around attributes when possible.',\n  removeComments: 'Strip HTML comments',\n  removeEmptyAttributes: 'Remove all attributes with whitespace-only values',\n  removeEmptyElements: 'Remove all elements with empty contents',\n  removeOptionalTags: 'Remove unrequired tags',\n  removeRedundantAttributes: 'Remove attributes when value matches default.',\n  removeScriptTypeAttributes: 'Removes the following attributes from script tags: text/javascript, text/ecmascript, text/jscript, application/javascript, application/x-javascript, application/ecmascript. Other type attribute values are left intact',\n  removeStyleLinkTypeAttributes: 'Remove type=\"text/css\" from style and link tags. Other type attribute values are left intact.',\n  removeTagWhitespace: 'Remove space between attributes whenever possible',\n  sortAttributes: 'Sort attributes by frequency',\n  sortClassName: 'Sort style classes by frequency',\n  trimCustomFragments: 'Trim white space around ignoreCustomFragments.',\n  useShortDoctype: 'Replaces the doctype with the short (HTML5) doctype'\n};\nvar mainOptionKeys = Object.keys(mainOptions);\nmainOptionKeys.forEach(function(key) {\n  var option = mainOptions[key];\n  if (Array.isArray(option)) {\n    key = key === 'minifyURLs' ? '--minify-urls' : '--' + paramCase(key);\n    key += option[1] === parseJSON ? ' [value]' : ' <value>';\n    program.option(key, option[0], option[1]);\n  }\n  else if (~['html5', 'includeAutoGeneratedTags'].indexOf(key)) {\n    program.option('--no-' + paramCase(key), option);\n  }\n  else {\n    program.option('--' + paramCase(key), option);\n  }\n});\nprogram.option('-o --output <file>', 'Specify output file (if not specified STDOUT will be used for output)');\n\nfunction readFile(file) {\n  try {\n    return fs.readFileSync(file, { encoding: 'utf8' });\n  }\n  catch (e) {\n    fatal('Cannot read ' + file + '\\n' + e.message);\n  }\n}\n\nvar config = {};\nprogram.option('-c --config-file <file>', 'Use config file', function(configPath) {\n  var data = readFile(configPath);\n  try {\n    config = JSON.parse(data);\n  }\n  catch (je) {\n    try {\n      config = require(path.resolve(configPath));\n    }\n    catch (ne) {\n      fatal('Cannot read the specified config file.\\nAs JSON: ' + je.message + '\\nAs module: ' + ne.message);\n    }\n  }\n  mainOptionKeys.forEach(function(key) {\n    if (key in config) {\n      var option = mainOptions[key];\n      if (Array.isArray(option)) {\n        var value = config[key];\n        config[key] = option[1](typeof value === 'string' ? value : JSON.stringify(value));\n      }\n    }\n  });\n});\nprogram.option('--input-dir <dir>', 'Specify an input directory');\nprogram.option('--output-dir <dir>', 'Specify an output directory');\nprogram.option('--file-ext <text>', 'Specify an extension to be read, ex: html');\nvar content;\nprogram.arguments('[files...]').action(function(files) {\n  content = files.map(readFile).join('');\n}).parse(process.argv);\n\nconst programOptions = program.opts();\n\nfunction createOptions() {\n  var options = {};\n  mainOptionKeys.forEach(function(key) {\n    var param = programOptions[key === 'minifyURLs' ? 'minifyUrls' : camelCase(key)];\n    if (typeof param !== 'undefined') {\n      options[key] = param;\n    }\n    else if (key in config) {\n      options[key] = config[key];\n    }\n  });\n  return options;\n}\n\nfunction mkdir(outputDir, callback) {\n  fs.mkdir(outputDir, function(err) {\n    if (err) {\n      switch (err.code) {\n        case 'ENOENT':\n          return mkdir(path.join(outputDir, '..'), function() {\n            mkdir(outputDir, callback);\n          });\n        case 'EEXIST':\n          break;\n        default:\n          fatal('Cannot create directory ' + outputDir + '\\n' + err.message);\n      }\n    }\n    callback();\n  });\n}\n\nfunction processFile(inputFile, outputFile) {\n  fs.readFile(inputFile, { encoding: 'utf8' }, async function(err, data) {\n    if (err) {\n      fatal('Cannot read ' + inputFile + '\\n' + err.message);\n    }\n    var minified;\n    try {\n      minified = await minify(data, createOptions());\n    }\n    catch (e) {\n      fatal('Minification error on ' + inputFile + '\\n' + e.message);\n    }\n    fs.writeFile(outputFile, minified, { encoding: 'utf8' }, function(err) {\n      if (err) {\n        fatal('Cannot write ' + outputFile + '\\n' + err.message);\n      }\n    });\n  });\n}\n\nfunction processDirectory(inputDir, outputDir, fileExt) {\n  fs.readdir(inputDir, function(err, files) {\n    if (err) {\n      fatal('Cannot read directory ' + inputDir + '\\n' + err.message);\n    }\n    files.forEach(function(file) {\n      var inputFile = path.join(inputDir, file);\n      var outputFile = path.join(outputDir, file);\n      fs.stat(inputFile, function(err, stat) {\n        if (err) {\n          fatal('Cannot read ' + inputFile + '\\n' + err.message);\n        }\n        else if (stat.isDirectory()) {\n          processDirectory(inputFile, outputFile, fileExt);\n        }\n        else if (!fileExt || path.extname(file) === '.' + fileExt) {\n          mkdir(outputDir, function() {\n            processFile(inputFile, outputFile);\n          });\n        }\n      });\n    });\n  });\n}\n\nasync function writeMinify() {\n  var minified;\n  try {\n    minified = await minify(content, createOptions());\n  }\n  catch (e) {\n    fatal('Minification error:\\n' + e.message);\n  }\n  (programOptions.output ? fs.createWriteStream(programOptions.output).on('error', function(e) {\n    fatal('Cannot write ' + programOptions.output + '\\n' + e.message);\n  }) : process.stdout).write(minified);\n}\n\nvar inputDir = programOptions.inputDir;\nvar outputDir = programOptions.outputDir;\nvar fileExt = programOptions.fileExt;\nif (inputDir || outputDir) {\n  if (!inputDir) {\n    fatal('The option output-dir needs to be used with the option input-dir. If you are working with a single file, use -o.');\n  }\n  else if (!outputDir) {\n    fatal('You need to specify where to write the output files with the option --output-dir');\n  }\n  processDirectory(inputDir, outputDir, fileExt);\n}\n// Minifying one or more files specified on the CMD line\nelse if (content) {\n  writeMinify();\n}\n// Minifying input coming from STDIN\nelse {\n  content = '';\n  process.stdin.setEncoding('utf8');\n  process.stdin.on('data', function(data) {\n    content += data;\n  }).on('end', writeMinify);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}