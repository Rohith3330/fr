{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _experimentalUtils = require(\"@typescript-eslint/experimental-utils\");\n\nvar _utils = require(\"./utils\");\n\nvar _default = (0, _utils.createRule)({\n  name: __filename,\n  meta: {\n    docs: {\n      category: 'Best Practices',\n      description: 'Prefer `await expect(...).resolves` over `expect(await ...)` syntax',\n      recommended: false\n    },\n    fixable: 'code',\n    messages: {\n      expectResolves: 'Use `await expect(...).resolves instead.'\n    },\n    schema: [],\n    type: 'suggestion'\n  },\n  defaultOptions: [],\n  create: context => ({\n    CallExpression(node) {\n      const [awaitNode] = node.arguments;\n\n      if ((0, _utils.isExpectCall)(node) && (awaitNode === null || awaitNode === void 0 ? void 0 : awaitNode.type) === _experimentalUtils.AST_NODE_TYPES.AwaitExpression) {\n        context.report({\n          node: node.arguments[0],\n          messageId: 'expectResolves',\n\n          fix(fixer) {\n            return [fixer.insertTextBefore(node, 'await '), fixer.removeRange([awaitNode.range[0], awaitNode.argument.range[0]]), fixer.insertTextAfter(node, '.resolves')];\n          }\n\n        });\n      }\n    }\n\n  })\n});\n\nexports.default = _default;","map":{"version":3,"names":["Object","defineProperty","exports","value","default","_experimentalUtils","require","_utils","_default","createRule","name","__filename","meta","docs","category","description","recommended","fixable","messages","expectResolves","schema","type","defaultOptions","create","context","CallExpression","node","awaitNode","arguments","isExpectCall","AST_NODE_TYPES","AwaitExpression","report","messageId","fix","fixer","insertTextBefore","removeRange","range","argument","insertTextAfter"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/eslint-plugin-jest/lib/rules/prefer-expect-resolves.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _experimentalUtils = require(\"@typescript-eslint/experimental-utils\");\n\nvar _utils = require(\"./utils\");\n\nvar _default = (0, _utils.createRule)({\n  name: __filename,\n  meta: {\n    docs: {\n      category: 'Best Practices',\n      description: 'Prefer `await expect(...).resolves` over `expect(await ...)` syntax',\n      recommended: false\n    },\n    fixable: 'code',\n    messages: {\n      expectResolves: 'Use `await expect(...).resolves instead.'\n    },\n    schema: [],\n    type: 'suggestion'\n  },\n  defaultOptions: [],\n  create: context => ({\n    CallExpression(node) {\n      const [awaitNode] = node.arguments;\n\n      if ((0, _utils.isExpectCall)(node) && (awaitNode === null || awaitNode === void 0 ? void 0 : awaitNode.type) === _experimentalUtils.AST_NODE_TYPES.AwaitExpression) {\n        context.report({\n          node: node.arguments[0],\n          messageId: 'expectResolves',\n\n          fix(fixer) {\n            return [fixer.insertTextBefore(node, 'await '), fixer.removeRange([awaitNode.range[0], awaitNode.argument.range[0]]), fixer.insertTextAfter(node, '.resolves')];\n          }\n\n        });\n      }\n    }\n\n  })\n});\n\nexports.default = _default;"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAC3CC,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAIC,kBAAkB,GAAGC,OAAO,CAAC,uCAAD,CAAhC;;AAEA,IAAIC,MAAM,GAAGD,OAAO,CAAC,SAAD,CAApB;;AAEA,IAAIE,QAAQ,GAAG,CAAC,GAAGD,MAAM,CAACE,UAAX,EAAuB;EACpCC,IAAI,EAAEC,UAD8B;EAEpCC,IAAI,EAAE;IACJC,IAAI,EAAE;MACJC,QAAQ,EAAE,gBADN;MAEJC,WAAW,EAAE,qEAFT;MAGJC,WAAW,EAAE;IAHT,CADF;IAMJC,OAAO,EAAE,MANL;IAOJC,QAAQ,EAAE;MACRC,cAAc,EAAE;IADR,CAPN;IAUJC,MAAM,EAAE,EAVJ;IAWJC,IAAI,EAAE;EAXF,CAF8B;EAepCC,cAAc,EAAE,EAfoB;EAgBpCC,MAAM,EAAEC,OAAO,KAAK;IAClBC,cAAc,CAACC,IAAD,EAAO;MACnB,MAAM,CAACC,SAAD,IAAcD,IAAI,CAACE,SAAzB;;MAEA,IAAI,CAAC,GAAGrB,MAAM,CAACsB,YAAX,EAAyBH,IAAzB,KAAkC,CAACC,SAAS,KAAK,IAAd,IAAsBA,SAAS,KAAK,KAAK,CAAzC,GAA6C,KAAK,CAAlD,GAAsDA,SAAS,CAACN,IAAjE,MAA2EhB,kBAAkB,CAACyB,cAAnB,CAAkCC,eAAnJ,EAAoK;QAClKP,OAAO,CAACQ,MAAR,CAAe;UACbN,IAAI,EAAEA,IAAI,CAACE,SAAL,CAAe,CAAf,CADO;UAEbK,SAAS,EAAE,gBAFE;;UAIbC,GAAG,CAACC,KAAD,EAAQ;YACT,OAAO,CAACA,KAAK,CAACC,gBAAN,CAAuBV,IAAvB,EAA6B,QAA7B,CAAD,EAAyCS,KAAK,CAACE,WAAN,CAAkB,CAACV,SAAS,CAACW,KAAV,CAAgB,CAAhB,CAAD,EAAqBX,SAAS,CAACY,QAAV,CAAmBD,KAAnB,CAAyB,CAAzB,CAArB,CAAlB,CAAzC,EAA+GH,KAAK,CAACK,eAAN,CAAsBd,IAAtB,EAA4B,WAA5B,CAA/G,CAAP;UACD;;QANY,CAAf;MASD;IACF;;EAfiB,CAAL;AAhBqB,CAAvB,CAAf;;AAoCAxB,OAAO,CAACE,OAAR,GAAkBI,QAAlB"},"metadata":{},"sourceType":"script"}