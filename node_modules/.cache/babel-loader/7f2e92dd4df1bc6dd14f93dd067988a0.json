{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getPolyfillPlugins = exports.getModulesPluginNames = exports.default = void 0;\nexports.isPluginRequired = isPluginRequired;\nexports.transformIncludesAndExcludes = void 0;\n\nvar _semver = require(\"semver\");\n\nvar _debug = require(\"./debug\");\n\nvar _getOptionSpecificExcludes = require(\"./get-option-specific-excludes\");\n\nvar _filterItems = require(\"./filter-items\");\n\nvar _moduleTransformations = require(\"./module-transformations\");\n\nvar _normalizeOptions = require(\"./normalize-options\");\n\nvar _shippedProposals = require(\"./shipped-proposals\");\n\nvar _pluginsCompatData = require(\"./plugins-compat-data\");\n\nvar _overlappingPlugins = require(\"@babel/compat-data/overlapping-plugins\");\n\nvar _regenerator = require(\"./polyfills/regenerator\");\n\nvar _babelPolyfill = require(\"./polyfills/babel-polyfill\");\n\nvar _babelPluginPolyfillCorejs = require(\"babel-plugin-polyfill-corejs2\");\n\nvar _babelPluginPolyfillCorejs2 = require(\"babel-plugin-polyfill-corejs3\");\n\nvar _babelPluginPolyfillRegenerator = require(\"babel-plugin-polyfill-regenerator\");\n\nvar _helperCompilationTargets = require(\"@babel/helper-compilation-targets\");\n\nvar _availablePlugins = require(\"./available-plugins\");\n\nvar _helperPluginUtils = require(\"@babel/helper-plugin-utils\");\n\nconst pluginCoreJS2 = _babelPluginPolyfillCorejs.default || _babelPluginPolyfillCorejs;\nconst pluginCoreJS3 = _babelPluginPolyfillCorejs2.default || _babelPluginPolyfillCorejs2;\nconst pluginRegenerator = _babelPluginPolyfillRegenerator.default || _babelPluginPolyfillRegenerator;\n\nfunction isPluginRequired(targets, support) {\n  return (0, _helperCompilationTargets.isRequired)(\"fake-name\", targets, {\n    compatData: {\n      \"fake-name\": support\n    }\n  });\n}\n\nfunction filterStageFromList(list, stageList) {\n  return Object.keys(list).reduce((result, item) => {\n    if (!stageList.has(item)) {\n      result[item] = list[item];\n    }\n\n    return result;\n  }, {});\n}\n\nconst pluginLists = {\n  withProposals: {\n    withoutBugfixes: _pluginsCompatData.plugins,\n    withBugfixes: Object.assign({}, _pluginsCompatData.plugins, _pluginsCompatData.pluginsBugfixes)\n  },\n  withoutProposals: {\n    withoutBugfixes: filterStageFromList(_pluginsCompatData.plugins, _shippedProposals.proposalPlugins),\n    withBugfixes: filterStageFromList(Object.assign({}, _pluginsCompatData.plugins, _pluginsCompatData.pluginsBugfixes), _shippedProposals.proposalPlugins)\n  }\n};\n\nfunction getPluginList(proposals, bugfixes) {\n  if (proposals) {\n    if (bugfixes) return pluginLists.withProposals.withBugfixes;else return pluginLists.withProposals.withoutBugfixes;\n  } else {\n    if (bugfixes) return pluginLists.withoutProposals.withBugfixes;else return pluginLists.withoutProposals.withoutBugfixes;\n  }\n}\n\nconst getPlugin = pluginName => {\n  const plugin = _availablePlugins.default[pluginName]();\n\n  if (!plugin) {\n    throw new Error(`Could not find plugin \"${pluginName}\". Ensure there is an entry in ./available-plugins.js for it.`);\n  }\n\n  return plugin;\n};\n\nconst transformIncludesAndExcludes = opts => {\n  return opts.reduce((result, opt) => {\n    const target = opt.match(/^(es|es6|es7|esnext|web)\\./) ? \"builtIns\" : \"plugins\";\n    result[target].add(opt);\n    return result;\n  }, {\n    all: opts,\n    plugins: new Set(),\n    builtIns: new Set()\n  });\n};\n\nexports.transformIncludesAndExcludes = transformIncludesAndExcludes;\n\nconst getModulesPluginNames = _ref => {\n  let {\n    modules,\n    transformations,\n    shouldTransformESM,\n    shouldTransformDynamicImport,\n    shouldTransformExportNamespaceFrom,\n    shouldParseTopLevelAwait\n  } = _ref;\n  const modulesPluginNames = [];\n\n  if (modules !== false && transformations[modules]) {\n    if (shouldTransformESM) {\n      modulesPluginNames.push(transformations[modules]);\n    }\n\n    if (shouldTransformDynamicImport && shouldTransformESM && modules !== \"umd\") {\n      modulesPluginNames.push(\"proposal-dynamic-import\");\n    } else {\n      if (shouldTransformDynamicImport) {\n        console.warn(\"Dynamic import can only be supported when transforming ES modules\" + \" to AMD, CommonJS or SystemJS. Only the parser plugin will be enabled.\");\n      }\n\n      modulesPluginNames.push(\"syntax-dynamic-import\");\n    }\n  } else {\n    modulesPluginNames.push(\"syntax-dynamic-import\");\n  }\n\n  if (shouldTransformExportNamespaceFrom) {\n    modulesPluginNames.push(\"proposal-export-namespace-from\");\n  } else {\n    modulesPluginNames.push(\"syntax-export-namespace-from\");\n  }\n\n  if (shouldParseTopLevelAwait) {\n    modulesPluginNames.push(\"syntax-top-level-await\");\n  }\n\n  return modulesPluginNames;\n};\n\nexports.getModulesPluginNames = getModulesPluginNames;\n\nconst getPolyfillPlugins = _ref2 => {\n  let {\n    useBuiltIns,\n    corejs,\n    polyfillTargets,\n    include,\n    exclude,\n    proposals,\n    shippedProposals,\n    regenerator,\n    debug\n  } = _ref2;\n  const polyfillPlugins = [];\n\n  if (useBuiltIns === \"usage\" || useBuiltIns === \"entry\") {\n    const pluginOptions = {\n      method: `${useBuiltIns}-global`,\n      version: corejs ? corejs.toString() : undefined,\n      targets: polyfillTargets,\n      include,\n      exclude,\n      proposals,\n      shippedProposals,\n      debug\n    };\n\n    if (corejs) {\n      if (useBuiltIns === \"usage\") {\n        if (corejs.major === 2) {\n          polyfillPlugins.push([pluginCoreJS2, pluginOptions], [_babelPolyfill.default, {\n            usage: true\n          }]);\n        } else {\n          polyfillPlugins.push([pluginCoreJS3, pluginOptions], [_babelPolyfill.default, {\n            usage: true,\n            deprecated: true\n          }]);\n        }\n\n        if (regenerator) {\n          polyfillPlugins.push([pluginRegenerator, {\n            method: \"usage-global\",\n            debug\n          }]);\n        }\n      } else {\n        if (corejs.major === 2) {\n          polyfillPlugins.push([_babelPolyfill.default, {\n            regenerator\n          }], [pluginCoreJS2, pluginOptions]);\n        } else {\n          polyfillPlugins.push([pluginCoreJS3, pluginOptions], [_babelPolyfill.default, {\n            deprecated: true\n          }]);\n\n          if (!regenerator) {\n            polyfillPlugins.push([_regenerator.default, pluginOptions]);\n          }\n        }\n      }\n    }\n  }\n\n  return polyfillPlugins;\n};\n\nexports.getPolyfillPlugins = getPolyfillPlugins;\n\nfunction getLocalTargets(optionsTargets, ignoreBrowserslistConfig, configPath, browserslistEnv) {\n  if (optionsTargets != null && optionsTargets.esmodules && optionsTargets.browsers) {\n    console.warn(`\n@babel/preset-env: esmodules and browsers targets have been specified together.\n\\`browsers\\` target, \\`${optionsTargets.browsers.toString()}\\` will be ignored.\n`);\n  }\n\n  return (0, _helperCompilationTargets.default)(optionsTargets, {\n    ignoreBrowserslistConfig,\n    configPath,\n    browserslistEnv\n  });\n}\n\nfunction supportsStaticESM(caller) {\n  return !!(caller != null && caller.supportsStaticESM);\n}\n\nfunction supportsDynamicImport(caller) {\n  return !!(caller != null && caller.supportsDynamicImport);\n}\n\nfunction supportsExportNamespaceFrom(caller) {\n  return !!(caller != null && caller.supportsExportNamespaceFrom);\n}\n\nfunction supportsTopLevelAwait(caller) {\n  return !!(caller != null && caller.supportsTopLevelAwait);\n}\n\nvar _default = (0, _helperPluginUtils.declarePreset)((api, opts) => {\n  api.assertVersion(7);\n  const babelTargets = api.targets();\n  const {\n    bugfixes,\n    configPath,\n    debug,\n    exclude: optionsExclude,\n    forceAllTransforms,\n    ignoreBrowserslistConfig,\n    include: optionsInclude,\n    loose,\n    modules,\n    shippedProposals,\n    spec,\n    targets: optionsTargets,\n    useBuiltIns,\n    corejs: {\n      version: corejs,\n      proposals\n    },\n    browserslistEnv\n  } = (0, _normalizeOptions.default)(opts);\n  let targets = babelTargets;\n\n  if (_semver.lt(api.version, \"7.13.0\") || opts.targets || opts.configPath || opts.browserslistEnv || opts.ignoreBrowserslistConfig) {\n    {\n      var hasUglifyTarget = false;\n\n      if (optionsTargets != null && optionsTargets.uglify) {\n        hasUglifyTarget = true;\n        delete optionsTargets.uglify;\n        console.warn(`\nThe uglify target has been deprecated. Set the top level\noption \\`forceAllTransforms: true\\` instead.\n`);\n      }\n    }\n    targets = getLocalTargets(optionsTargets, ignoreBrowserslistConfig, configPath, browserslistEnv);\n  }\n\n  const transformTargets = forceAllTransforms || hasUglifyTarget ? {} : targets;\n  const include = transformIncludesAndExcludes(optionsInclude);\n  const exclude = transformIncludesAndExcludes(optionsExclude);\n  const compatData = getPluginList(shippedProposals, bugfixes);\n  const shouldSkipExportNamespaceFrom = modules === \"auto\" && (api.caller == null ? void 0 : api.caller(supportsExportNamespaceFrom)) || modules === false && !(0, _helperCompilationTargets.isRequired)(\"proposal-export-namespace-from\", transformTargets, {\n    compatData,\n    includes: include.plugins,\n    excludes: exclude.plugins\n  });\n  const modulesPluginNames = getModulesPluginNames({\n    modules,\n    transformations: _moduleTransformations.default,\n    shouldTransformESM: modules !== \"auto\" || !(api.caller != null && api.caller(supportsStaticESM)),\n    shouldTransformDynamicImport: modules !== \"auto\" || !(api.caller != null && api.caller(supportsDynamicImport)),\n    shouldTransformExportNamespaceFrom: !shouldSkipExportNamespaceFrom,\n    shouldParseTopLevelAwait: !api.caller || api.caller(supportsTopLevelAwait)\n  });\n  const pluginNames = (0, _helperCompilationTargets.filterItems)(compatData, include.plugins, exclude.plugins, transformTargets, modulesPluginNames, (0, _getOptionSpecificExcludes.default)({\n    loose\n  }), _shippedProposals.pluginSyntaxMap);\n  (0, _filterItems.removeUnnecessaryItems)(pluginNames, _overlappingPlugins);\n  (0, _filterItems.removeUnsupportedItems)(pluginNames, api.version);\n\n  if (shippedProposals) {\n    (0, _filterItems.addProposalSyntaxPlugins)(pluginNames, _shippedProposals.proposalSyntaxPlugins);\n  }\n\n  const polyfillPlugins = getPolyfillPlugins({\n    useBuiltIns,\n    corejs,\n    polyfillTargets: targets,\n    include: include.builtIns,\n    exclude: exclude.builtIns,\n    proposals,\n    shippedProposals,\n    regenerator: pluginNames.has(\"transform-regenerator\"),\n    debug\n  });\n  const pluginUseBuiltIns = useBuiltIns !== false;\n  const plugins = Array.from(pluginNames).map(pluginName => {\n    if (pluginName === \"proposal-class-properties\" || pluginName === \"proposal-private-methods\" || pluginName === \"proposal-private-property-in-object\") {\n      return [getPlugin(pluginName), {\n        loose: loose ? \"#__internal__@babel/preset-env__prefer-true-but-false-is-ok-if-it-prevents-an-error\" : \"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"\n      }];\n    }\n\n    return [getPlugin(pluginName), {\n      spec,\n      loose,\n      useBuiltIns: pluginUseBuiltIns\n    }];\n  }).concat(polyfillPlugins);\n\n  if (debug) {\n    console.log(\"@babel/preset-env: `DEBUG` option\");\n    console.log(\"\\nUsing targets:\");\n    console.log(JSON.stringify((0, _helperCompilationTargets.prettifyTargets)(targets), null, 2));\n    console.log(`\\nUsing modules transform: ${modules.toString()}`);\n    console.log(\"\\nUsing plugins:\");\n    pluginNames.forEach(pluginName => {\n      (0, _debug.logPlugin)(pluginName, targets, compatData);\n    });\n\n    if (!useBuiltIns) {\n      console.log(\"\\nUsing polyfills: No polyfills were added, since the `useBuiltIns` option was not set.\");\n    }\n  }\n\n  return {\n    plugins\n  };\n});\n\nexports.default = _default;","map":{"version":3,"mappings":"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","names":["pluginCoreJS2","_pluginCoreJS2","default","pluginCoreJS3","_pluginCoreJS3","pluginRegenerator","_pluginRegenerator","isPluginRequired","targets","support","compatData","filterStageFromList","list","stageList","Object","keys","reduce","result","item","has","pluginLists","withProposals","withoutBugfixes","pluginsList","withBugfixes","assign","pluginsBugfixesList","withoutProposals","proposalPlugins","getPluginList","proposals","bugfixes","getPlugin","pluginName","plugin","availablePlugins","Error","transformIncludesAndExcludes","opts","opt","target","match","add","all","plugins","Set","builtIns","getModulesPluginNames","modules","transformations","shouldTransformESM","shouldTransformDynamicImport","shouldTransformExportNamespaceFrom","shouldParseTopLevelAwait","modulesPluginNames","push","console","warn","getPolyfillPlugins","useBuiltIns","corejs","polyfillTargets","include","exclude","shippedProposals","regenerator","debug","polyfillPlugins","pluginOptions","method","version","toString","undefined","major","legacyBabelPolyfillPlugin","usage","deprecated","removeRegeneratorEntryPlugin","getLocalTargets","optionsTargets","ignoreBrowserslistConfig","configPath","browserslistEnv","esmodules","browsers","supportsStaticESM","caller","supportsDynamicImport","supportsExportNamespaceFrom","supportsTopLevelAwait","api","assertVersion","babelTargets","optionsExclude","forceAllTransforms","optionsInclude","loose","spec","semver","lt","hasUglifyTarget","uglify","transformTargets","shouldSkipExportNamespaceFrom","includes","excludes","moduleTransformations","pluginNames","pluginSyntaxMap","overlappingPlugins","proposalSyntaxPlugins","pluginUseBuiltIns","Array","from","map","concat","log","JSON","stringify","forEach"],"sources":["C:\\Users\\Rohith\\mern\\frontend\\node_modules\\@babel\\preset-env\\src\\index.ts"],"sourcesContent":["import semver, { type SemVer } from \"semver\";\nimport { logPlugin } from \"./debug\";\nimport getOptionSpecificExcludesFor from \"./get-option-specific-excludes\";\nimport {\n  addProposalSyntaxPlugins,\n  removeUnnecessaryItems,\n  removeUnsupportedItems,\n} from \"./filter-items\";\nimport moduleTransformations from \"./module-transformations\";\nimport normalizeOptions from \"./normalize-options\";\nimport {\n  pluginSyntaxMap,\n  proposalPlugins,\n  proposalSyntaxPlugins,\n} from \"./shipped-proposals\";\nimport {\n  plugins as pluginsList,\n  pluginsBugfixes as pluginsBugfixesList,\n} from \"./plugins-compat-data\";\nimport overlappingPlugins from \"@babel/compat-data/overlapping-plugins\";\n\nimport removeRegeneratorEntryPlugin from \"./polyfills/regenerator\";\nimport legacyBabelPolyfillPlugin from \"./polyfills/babel-polyfill\";\n\nimport type { CallerMetadata } from \"@babel/core\";\n\nimport _pluginCoreJS2 from \"babel-plugin-polyfill-corejs2\";\nimport _pluginCoreJS3 from \"babel-plugin-polyfill-corejs3\";\nimport _pluginRegenerator from \"babel-plugin-polyfill-regenerator\";\nconst pluginCoreJS2 = _pluginCoreJS2.default || _pluginCoreJS2;\nconst pluginCoreJS3 = _pluginCoreJS3.default || _pluginCoreJS3;\nconst pluginRegenerator = _pluginRegenerator.default || _pluginRegenerator;\n\nimport getTargets, {\n  prettifyTargets,\n  filterItems,\n  isRequired,\n} from \"@babel/helper-compilation-targets\";\nimport type { Targets, InputTargets } from \"@babel/helper-compilation-targets\";\nimport availablePlugins from \"./available-plugins\";\nimport { declarePreset } from \"@babel/helper-plugin-utils\";\n\ntype ModuleTransformationsType =\n  typeof import(\"./module-transformations\").default;\nimport type { BuiltInsOption, ModuleOption, Options } from \"./types\";\n\n// TODO: Remove in Babel 8\nexport function isPluginRequired(targets: Targets, support: Targets) {\n  return isRequired(\"fake-name\", targets, {\n    compatData: { \"fake-name\": support },\n  });\n}\n\nfunction filterStageFromList(\n  list: { [feature: string]: Targets },\n  stageList: Set<string>,\n) {\n  return Object.keys(list).reduce((result, item) => {\n    if (!stageList.has(item)) {\n      // @ts-expect-error todo: refine result types\n      result[item] = list[item];\n    }\n\n    return result;\n  }, {});\n}\n\nconst pluginLists = {\n  withProposals: {\n    withoutBugfixes: pluginsList,\n    withBugfixes: Object.assign({}, pluginsList, pluginsBugfixesList),\n  },\n  withoutProposals: {\n    withoutBugfixes: filterStageFromList(pluginsList, proposalPlugins),\n    withBugfixes: filterStageFromList(\n      Object.assign({}, pluginsList, pluginsBugfixesList),\n      proposalPlugins,\n    ),\n  },\n};\n\nfunction getPluginList(proposals: boolean, bugfixes: boolean) {\n  if (proposals) {\n    if (bugfixes) return pluginLists.withProposals.withBugfixes;\n    else return pluginLists.withProposals.withoutBugfixes;\n  } else {\n    if (bugfixes) return pluginLists.withoutProposals.withBugfixes;\n    else return pluginLists.withoutProposals.withoutBugfixes;\n  }\n}\n\nconst getPlugin = (pluginName: string) => {\n  const plugin =\n    // @ts-expect-error plugin name is constructed from available plugin list\n    availablePlugins[pluginName]();\n\n  if (!plugin) {\n    throw new Error(\n      `Could not find plugin \"${pluginName}\". Ensure there is an entry in ./available-plugins.js for it.`,\n    );\n  }\n\n  return plugin;\n};\n\nexport const transformIncludesAndExcludes = (opts: Array<string>): any => {\n  return opts.reduce(\n    (result, opt) => {\n      const target = opt.match(/^(es|es6|es7|esnext|web)\\./)\n        ? \"builtIns\"\n        : \"plugins\";\n      result[target].add(opt);\n      return result;\n    },\n    {\n      all: opts,\n      plugins: new Set(),\n      builtIns: new Set(),\n    },\n  );\n};\n\nexport const getModulesPluginNames = ({\n  modules,\n  transformations,\n  shouldTransformESM,\n  shouldTransformDynamicImport,\n  shouldTransformExportNamespaceFrom,\n  shouldParseTopLevelAwait,\n}: {\n  modules: ModuleOption;\n  transformations: ModuleTransformationsType;\n  shouldTransformESM: boolean;\n  shouldTransformDynamicImport: boolean;\n  shouldTransformExportNamespaceFrom: boolean;\n  shouldParseTopLevelAwait: boolean;\n}) => {\n  const modulesPluginNames = [];\n  if (modules !== false && transformations[modules]) {\n    if (shouldTransformESM) {\n      modulesPluginNames.push(transformations[modules]);\n    }\n\n    if (\n      shouldTransformDynamicImport &&\n      shouldTransformESM &&\n      modules !== \"umd\"\n    ) {\n      modulesPluginNames.push(\"proposal-dynamic-import\");\n    } else {\n      if (shouldTransformDynamicImport) {\n        console.warn(\n          \"Dynamic import can only be supported when transforming ES modules\" +\n            \" to AMD, CommonJS or SystemJS. Only the parser plugin will be enabled.\",\n        );\n      }\n      modulesPluginNames.push(\"syntax-dynamic-import\");\n    }\n  } else {\n    modulesPluginNames.push(\"syntax-dynamic-import\");\n  }\n\n  if (shouldTransformExportNamespaceFrom) {\n    modulesPluginNames.push(\"proposal-export-namespace-from\");\n  } else {\n    modulesPluginNames.push(\"syntax-export-namespace-from\");\n  }\n\n  if (shouldParseTopLevelAwait) {\n    modulesPluginNames.push(\"syntax-top-level-await\");\n  }\n\n  return modulesPluginNames;\n};\n\nexport const getPolyfillPlugins = ({\n  useBuiltIns,\n  corejs,\n  polyfillTargets,\n  include,\n  exclude,\n  proposals,\n  shippedProposals,\n  regenerator,\n  debug,\n}: {\n  useBuiltIns: BuiltInsOption;\n  corejs: SemVer | null | false;\n  polyfillTargets: Targets;\n  include: Set<string>;\n  exclude: Set<string>;\n  proposals: boolean;\n  shippedProposals: boolean;\n  regenerator: boolean;\n  debug: boolean;\n}) => {\n  const polyfillPlugins = [];\n  if (useBuiltIns === \"usage\" || useBuiltIns === \"entry\") {\n    const pluginOptions = {\n      method: `${useBuiltIns}-global`,\n      version: corejs ? corejs.toString() : undefined,\n      targets: polyfillTargets,\n      include,\n      exclude,\n      proposals,\n      shippedProposals,\n      debug,\n    };\n\n    if (corejs) {\n      if (useBuiltIns === \"usage\") {\n        if (corejs.major === 2) {\n          polyfillPlugins.push(\n            [pluginCoreJS2, pluginOptions],\n            [legacyBabelPolyfillPlugin, { usage: true }],\n          );\n        } else {\n          polyfillPlugins.push(\n            [pluginCoreJS3, pluginOptions],\n            [legacyBabelPolyfillPlugin, { usage: true, deprecated: true }],\n          );\n        }\n        if (regenerator) {\n          polyfillPlugins.push([\n            pluginRegenerator,\n            { method: \"usage-global\", debug },\n          ]);\n        }\n      } else {\n        if (corejs.major === 2) {\n          polyfillPlugins.push(\n            [legacyBabelPolyfillPlugin, { regenerator }],\n            [pluginCoreJS2, pluginOptions],\n          );\n        } else {\n          polyfillPlugins.push(\n            [pluginCoreJS3, pluginOptions],\n            [legacyBabelPolyfillPlugin, { deprecated: true }],\n          );\n          if (!regenerator) {\n            polyfillPlugins.push([removeRegeneratorEntryPlugin, pluginOptions]);\n          }\n        }\n      }\n    }\n  }\n  return polyfillPlugins;\n};\n\nfunction getLocalTargets(\n  optionsTargets: Options[\"targets\"],\n  ignoreBrowserslistConfig: boolean,\n  configPath: string,\n  browserslistEnv: string,\n) {\n  if (optionsTargets?.esmodules && optionsTargets.browsers) {\n    console.warn(`\n@babel/preset-env: esmodules and browsers targets have been specified together.\n\\`browsers\\` target, \\`${optionsTargets.browsers.toString()}\\` will be ignored.\n`);\n  }\n\n  return getTargets(optionsTargets as InputTargets, {\n    ignoreBrowserslistConfig,\n    configPath,\n    browserslistEnv,\n  });\n}\n\nfunction supportsStaticESM(caller: CallerMetadata | undefined) {\n  // @ts-expect-error supportsStaticESM is not defined in CallerMetadata\n  return !!caller?.supportsStaticESM;\n}\n\nfunction supportsDynamicImport(caller: CallerMetadata | undefined) {\n  // @ts-expect-error supportsDynamicImport is not defined in CallerMetadata\n  return !!caller?.supportsDynamicImport;\n}\n\nfunction supportsExportNamespaceFrom(caller: CallerMetadata | undefined) {\n  // @ts-expect-error supportsExportNamespaceFrom is not defined in CallerMetadata\n  return !!caller?.supportsExportNamespaceFrom;\n}\n\nfunction supportsTopLevelAwait(caller: CallerMetadata | undefined) {\n  // @ts-expect-error supportsTopLevelAwait is not defined in CallerMetadata\n  return !!caller?.supportsTopLevelAwait;\n}\n\nexport default declarePreset((api, opts: Options) => {\n  api.assertVersion(7);\n\n  const babelTargets = api.targets();\n\n  const {\n    bugfixes,\n    configPath,\n    debug,\n    exclude: optionsExclude,\n    forceAllTransforms,\n    ignoreBrowserslistConfig,\n    include: optionsInclude,\n    loose,\n    modules,\n    shippedProposals,\n    spec,\n    targets: optionsTargets,\n    useBuiltIns,\n    corejs: { version: corejs, proposals },\n    browserslistEnv,\n  } = normalizeOptions(opts);\n\n  let targets = babelTargets;\n\n  if (\n    // @babel/core < 7.13.0 doesn't load targets (api.targets() always\n    // returns {} thanks to @babel/helper-plugin-utils), so we always want\n    // to fallback to the old targets behavior in this case.\n    semver.lt(api.version, \"7.13.0\") ||\n    // If any browserslist-related option is specified, fallback to the old\n    // behavior of not using the targets specified in the top-level options.\n    opts.targets ||\n    opts.configPath ||\n    opts.browserslistEnv ||\n    opts.ignoreBrowserslistConfig\n  ) {\n    if (!process.env.BABEL_8_BREAKING) {\n      // eslint-disable-next-line no-var\n      var hasUglifyTarget = false;\n\n      if (optionsTargets?.uglify) {\n        hasUglifyTarget = true;\n        delete optionsTargets.uglify;\n\n        console.warn(`\nThe uglify target has been deprecated. Set the top level\noption \\`forceAllTransforms: true\\` instead.\n`);\n      }\n    }\n\n    targets = getLocalTargets(\n      optionsTargets,\n      ignoreBrowserslistConfig,\n      configPath,\n      browserslistEnv,\n    );\n  }\n\n  const transformTargets = (\n    process.env.BABEL_8_BREAKING\n      ? forceAllTransforms\n      : forceAllTransforms || hasUglifyTarget\n  )\n    ? ({} as Targets)\n    : targets;\n\n  const include = transformIncludesAndExcludes(optionsInclude);\n  const exclude = transformIncludesAndExcludes(optionsExclude);\n\n  const compatData = getPluginList(shippedProposals, bugfixes);\n  const shouldSkipExportNamespaceFrom =\n    (modules === \"auto\" && api.caller?.(supportsExportNamespaceFrom)) ||\n    (modules === false &&\n      !isRequired(\"proposal-export-namespace-from\", transformTargets, {\n        compatData,\n        includes: include.plugins,\n        excludes: exclude.plugins,\n      }));\n  const modulesPluginNames = getModulesPluginNames({\n    modules,\n    transformations: moduleTransformations,\n    // TODO: Remove the 'api.caller' check eventually. Just here to prevent\n    // unnecessary breakage in the short term for users on older betas/RCs.\n    shouldTransformESM: modules !== \"auto\" || !api.caller?.(supportsStaticESM),\n    shouldTransformDynamicImport:\n      modules !== \"auto\" || !api.caller?.(supportsDynamicImport),\n    shouldTransformExportNamespaceFrom: !shouldSkipExportNamespaceFrom,\n    shouldParseTopLevelAwait:\n      !api.caller || (api.caller(supportsTopLevelAwait) as boolean),\n  });\n\n  const pluginNames = filterItems(\n    compatData,\n    include.plugins,\n    exclude.plugins,\n    transformTargets,\n    modulesPluginNames,\n    getOptionSpecificExcludesFor({ loose }),\n    pluginSyntaxMap,\n  );\n  removeUnnecessaryItems(pluginNames, overlappingPlugins);\n  removeUnsupportedItems(pluginNames, api.version);\n  if (shippedProposals) {\n    addProposalSyntaxPlugins(pluginNames, proposalSyntaxPlugins);\n  }\n\n  const polyfillPlugins = getPolyfillPlugins({\n    useBuiltIns,\n    corejs,\n    polyfillTargets: targets,\n    include: include.builtIns,\n    exclude: exclude.builtIns,\n    proposals,\n    shippedProposals,\n    regenerator: pluginNames.has(\"transform-regenerator\"),\n    debug,\n  });\n\n  const pluginUseBuiltIns = useBuiltIns !== false;\n  const plugins = Array.from(pluginNames)\n    .map(pluginName => {\n      if (\n        pluginName === \"proposal-class-properties\" ||\n        pluginName === \"proposal-private-methods\" ||\n        pluginName === \"proposal-private-property-in-object\"\n      ) {\n        return [\n          getPlugin(pluginName),\n          {\n            loose: loose\n              ? \"#__internal__@babel/preset-env__prefer-true-but-false-is-ok-if-it-prevents-an-error\"\n              : \"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\",\n          },\n        ];\n      }\n      return [\n        getPlugin(pluginName),\n        { spec, loose, useBuiltIns: pluginUseBuiltIns },\n      ];\n    })\n    .concat(polyfillPlugins);\n\n  if (debug) {\n    console.log(\"@babel/preset-env: `DEBUG` option\");\n    console.log(\"\\nUsing targets:\");\n    console.log(JSON.stringify(prettifyTargets(targets), null, 2));\n    console.log(`\\nUsing modules transform: ${modules.toString()}`);\n    console.log(\"\\nUsing plugins:\");\n    pluginNames.forEach(pluginName => {\n      logPlugin(pluginName, targets, compatData);\n    });\n\n    if (!useBuiltIns) {\n      console.log(\n        \"\\nUsing polyfills: No polyfills were added, since the `useBuiltIns` option was not set.\",\n      );\n    }\n  }\n\n  return { plugins };\n});\n"]},"metadata":{},"sourceType":"script"}