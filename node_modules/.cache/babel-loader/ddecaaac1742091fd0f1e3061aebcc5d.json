{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _lodash = _interopRequireDefault(require(\"lodash\"));\n\nvar _utilities = require(\"../utilities\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nconst schema = [{\n  additionalProperties: false,\n  properties: {\n    excludeVariableMatch: {\n      type: 'string'\n    },\n    excludeVariableTypes: {\n      additionalProperties: false,\n      properties: {\n        const: {\n          type: 'boolean'\n        },\n        let: {\n          type: 'boolean'\n        },\n        var: {\n          type: 'boolean'\n        }\n      },\n      type: 'object'\n    }\n  },\n  type: 'object'\n}];\n\nconst create = context => {\n  const checkThisFile = !_lodash.default.get(context, 'settings.flowtype.onlyFilesWithFlowAnnotation') || (0, _utilities.isFlowFile)(context);\n\n  if (!checkThisFile) {\n    return () => {};\n  }\n\n  const excludeVariableMatch = new RegExp(_lodash.default.get(context, 'options[0].excludeVariableMatch', 'a^'), 'u');\n\n  const excludeVariableTypes = _lodash.default.get(context, 'options[0].excludeVariableTypes', {});\n\n  return {\n    VariableDeclaration: variableDeclaration => {\n      const variableType = _lodash.default.get(variableDeclaration, 'kind');\n\n      if (_lodash.default.get(excludeVariableTypes, variableType)) {\n        return;\n      } // eslint-disable-next-line unicorn/no-array-for-each\n\n\n      _lodash.default.forEach(variableDeclaration.declarations, variableDeclarator => {\n        const identifierNode = _lodash.default.get(variableDeclarator, 'id');\n\n        const identifierName = _lodash.default.get(identifierNode, 'name');\n\n        if (excludeVariableMatch.test(identifierName)) {\n          return;\n        }\n\n        const typeAnnotation = _lodash.default.get(identifierNode, 'typeAnnotation');\n\n        if (!typeAnnotation) {\n          context.report({\n            data: {\n              name: (0, _utilities.quoteName)(identifierName)\n            },\n            message: 'Missing {{name}}variable type annotation.',\n            node: identifierNode\n          });\n        }\n      });\n    }\n  };\n};\n\nvar _default = {\n  create,\n  schema\n};\nexports.default = _default;\nmodule.exports = exports.default;","map":{"version":3,"names":["Object","defineProperty","exports","value","default","_lodash","_interopRequireDefault","require","_utilities","obj","__esModule","schema","additionalProperties","properties","excludeVariableMatch","type","excludeVariableTypes","const","let","var","create","context","checkThisFile","get","isFlowFile","RegExp","VariableDeclaration","variableDeclaration","variableType","forEach","declarations","variableDeclarator","identifierNode","identifierName","test","typeAnnotation","report","data","name","quoteName","message","node","_default","module"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/eslint-plugin-flowtype/dist/rules/requireVariableType.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _lodash = _interopRequireDefault(require(\"lodash\"));\n\nvar _utilities = require(\"../utilities\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst schema = [{\n  additionalProperties: false,\n  properties: {\n    excludeVariableMatch: {\n      type: 'string'\n    },\n    excludeVariableTypes: {\n      additionalProperties: false,\n      properties: {\n        const: {\n          type: 'boolean'\n        },\n        let: {\n          type: 'boolean'\n        },\n        var: {\n          type: 'boolean'\n        }\n      },\n      type: 'object'\n    }\n  },\n  type: 'object'\n}];\n\nconst create = context => {\n  const checkThisFile = !_lodash.default.get(context, 'settings.flowtype.onlyFilesWithFlowAnnotation') || (0, _utilities.isFlowFile)(context);\n\n  if (!checkThisFile) {\n    return () => {};\n  }\n\n  const excludeVariableMatch = new RegExp(_lodash.default.get(context, 'options[0].excludeVariableMatch', 'a^'), 'u');\n\n  const excludeVariableTypes = _lodash.default.get(context, 'options[0].excludeVariableTypes', {});\n\n  return {\n    VariableDeclaration: variableDeclaration => {\n      const variableType = _lodash.default.get(variableDeclaration, 'kind');\n\n      if (_lodash.default.get(excludeVariableTypes, variableType)) {\n        return;\n      } // eslint-disable-next-line unicorn/no-array-for-each\n\n\n      _lodash.default.forEach(variableDeclaration.declarations, variableDeclarator => {\n        const identifierNode = _lodash.default.get(variableDeclarator, 'id');\n\n        const identifierName = _lodash.default.get(identifierNode, 'name');\n\n        if (excludeVariableMatch.test(identifierName)) {\n          return;\n        }\n\n        const typeAnnotation = _lodash.default.get(identifierNode, 'typeAnnotation');\n\n        if (!typeAnnotation) {\n          context.report({\n            data: {\n              name: (0, _utilities.quoteName)(identifierName)\n            },\n            message: 'Missing {{name}}variable type annotation.',\n            node: identifierNode\n          });\n        }\n      });\n    }\n  };\n};\n\nvar _default = {\n  create,\n  schema\n};\nexports.default = _default;\nmodule.exports = exports.default;"],"mappings":"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"},"metadata":{},"sourceType":"script"}