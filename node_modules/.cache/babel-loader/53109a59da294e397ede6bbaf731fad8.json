{"ast":null,"code":"/**\n * @fileoverview Enforce <marquee> elements are not used.\n * @author Ethan Cohen\n */\n// -----------------------------------------------------------------------------\n// Requirements\n// -----------------------------------------------------------------------------\nimport { RuleTester } from 'eslint';\nimport parserOptionsMapper from '../../__util__/parserOptionsMapper';\nimport rule from '../../../src/rules/accessible-emoji'; // -----------------------------------------------------------------------------\n// Tests\n// -----------------------------------------------------------------------------\n\nconst ruleTester = new RuleTester();\nconst expectedError = {\n  message: 'Emojis should be wrapped in <span>, have role=\"img\", and have an accessible description with aria-label or aria-labelledby.',\n  type: 'JSXOpeningElement'\n};\nruleTester.run('accessible-emoji', rule, {\n  valid: [{\n    code: '<div />;'\n  }, {\n    code: '<span />'\n  }, {\n    code: '<span>No emoji here!</span>'\n  }, {\n    code: '<span role=\"img\" aria-label=\"Panda face\">üêº</span>'\n  }, {\n    code: '<span role=\"img\" aria-label=\"Snowman\">&#9731;</span>'\n  }, {\n    code: '<span role=\"img\" aria-labelledby=\"id1\">üêº</span>'\n  }, {\n    code: '<span role=\"img\" aria-labelledby=\"id1\">&#9731;</span>'\n  }, {\n    code: '<span role=\"img\" aria-labelledby=\"id1\" aria-label=\"Snowman\">&#9731;</span>'\n  }, {\n    code: '<span>{props.emoji}</span>'\n  }, {\n    code: '<span aria-hidden>{props.emoji}</span>'\n  }, {\n    code: '<span aria-hidden=\"true\">üêº</span>'\n  }, {\n    code: '<span aria-hidden>üêº</span>'\n  }, {\n    code: '<div aria-hidden=\"true\">üêº</div>'\n  }, {\n    code: '<input type=\"hidden\">üêº</input>'\n  }, {\n    code: '<CustomInput type=\"hidden\">üêº</CustomInput>',\n    settings: {\n      'jsx-a11y': {\n        components: {\n          CustomInput: 'input'\n        }\n      }\n    }\n  }].map(parserOptionsMapper),\n  invalid: [{\n    code: '<span>üêº</span>',\n    errors: [expectedError]\n  }, {\n    code: '<span>fooüêºbar</span>',\n    errors: [expectedError]\n  }, {\n    code: '<span>foo üêº bar</span>',\n    errors: [expectedError]\n  }, {\n    code: '<i role=\"img\" aria-label=\"Panda face\">üêº</i>',\n    errors: [expectedError]\n  }, {\n    code: '<i role=\"img\" aria-labelledby=\"id1\">üêº</i>',\n    errors: [expectedError]\n  }, {\n    code: '<Foo>üêº</Foo>',\n    errors: [expectedError]\n  }, {\n    code: '<span aria-hidden=\"false\">üêº</span>',\n    errors: [expectedError]\n  }, {\n    code: '<CustomInput type=\"hidden\">üêº</CustomInput>',\n    errors: [expectedError]\n  }].map(parserOptionsMapper)\n});","map":{"version":3,"names":["RuleTester","parserOptionsMapper","rule","ruleTester","expectedError","message","type","run","valid","code","settings","components","CustomInput","map","invalid","errors"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/eslint-plugin-jsx-a11y/__tests__/src/rules/accessible-emoji-test.js"],"sourcesContent":["/**\n * @fileoverview Enforce <marquee> elements are not used.\n * @author Ethan Cohen\n */\n\n// -----------------------------------------------------------------------------\n// Requirements\n// -----------------------------------------------------------------------------\n\nimport { RuleTester } from 'eslint';\nimport parserOptionsMapper from '../../__util__/parserOptionsMapper';\nimport rule from '../../../src/rules/accessible-emoji';\n\n// -----------------------------------------------------------------------------\n// Tests\n// -----------------------------------------------------------------------------\n\nconst ruleTester = new RuleTester();\n\nconst expectedError = {\n  message: 'Emojis should be wrapped in <span>, have role=\"img\", and have an accessible description with aria-label or aria-labelledby.',\n  type: 'JSXOpeningElement',\n};\n\nruleTester.run('accessible-emoji', rule, {\n  valid: [\n    { code: '<div />;' },\n    { code: '<span />' },\n    { code: '<span>No emoji here!</span>' },\n    { code: '<span role=\"img\" aria-label=\"Panda face\">üêº</span>' },\n    { code: '<span role=\"img\" aria-label=\"Snowman\">&#9731;</span>' },\n    { code: '<span role=\"img\" aria-labelledby=\"id1\">üêº</span>' },\n    { code: '<span role=\"img\" aria-labelledby=\"id1\">&#9731;</span>' },\n    { code: '<span role=\"img\" aria-labelledby=\"id1\" aria-label=\"Snowman\">&#9731;</span>' },\n    { code: '<span>{props.emoji}</span>' },\n    { code: '<span aria-hidden>{props.emoji}</span>' },\n    { code: '<span aria-hidden=\"true\">üêº</span>' },\n    { code: '<span aria-hidden>üêº</span>' },\n    { code: '<div aria-hidden=\"true\">üêº</div>' },\n    { code: '<input type=\"hidden\">üêº</input>' },\n    {\n      code: '<CustomInput type=\"hidden\">üêº</CustomInput>',\n      settings: { 'jsx-a11y': { components: { CustomInput: 'input' } } },\n    },\n  ].map(parserOptionsMapper),\n  invalid: [\n    { code: '<span>üêº</span>', errors: [expectedError] },\n    { code: '<span>fooüêºbar</span>', errors: [expectedError] },\n    { code: '<span>foo üêº bar</span>', errors: [expectedError] },\n    { code: '<i role=\"img\" aria-label=\"Panda face\">üêº</i>', errors: [expectedError] },\n    { code: '<i role=\"img\" aria-labelledby=\"id1\">üêº</i>', errors: [expectedError] },\n    { code: '<Foo>üêº</Foo>', errors: [expectedError] },\n    { code: '<span aria-hidden=\"false\">üêº</span>', errors: [expectedError] },\n    { code: '<CustomInput type=\"hidden\">üêº</CustomInput>', errors: [expectedError] },\n  ].map(parserOptionsMapper),\n});\n"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA,SAASA,UAAT,QAA2B,QAA3B;AACA,OAAOC,mBAAP,MAAgC,oCAAhC;AACA,OAAOC,IAAP,MAAiB,qCAAjB,C,CAEA;AACA;AACA;;AAEA,MAAMC,UAAU,GAAG,IAAIH,UAAJ,EAAnB;AAEA,MAAMI,aAAa,GAAG;EACpBC,OAAO,EAAE,6HADW;EAEpBC,IAAI,EAAE;AAFc,CAAtB;AAKAH,UAAU,CAACI,GAAX,CAAe,kBAAf,EAAmCL,IAAnC,EAAyC;EACvCM,KAAK,EAAE,CACL;IAAEC,IAAI,EAAE;EAAR,CADK,EAEL;IAAEA,IAAI,EAAE;EAAR,CAFK,EAGL;IAAEA,IAAI,EAAE;EAAR,CAHK,EAIL;IAAEA,IAAI,EAAE;EAAR,CAJK,EAKL;IAAEA,IAAI,EAAE;EAAR,CALK,EAML;IAAEA,IAAI,EAAE;EAAR,CANK,EAOL;IAAEA,IAAI,EAAE;EAAR,CAPK,EAQL;IAAEA,IAAI,EAAE;EAAR,CARK,EASL;IAAEA,IAAI,EAAE;EAAR,CATK,EAUL;IAAEA,IAAI,EAAE;EAAR,CAVK,EAWL;IAAEA,IAAI,EAAE;EAAR,CAXK,EAYL;IAAEA,IAAI,EAAE;EAAR,CAZK,EAaL;IAAEA,IAAI,EAAE;EAAR,CAbK,EAcL;IAAEA,IAAI,EAAE;EAAR,CAdK,EAeL;IACEA,IAAI,EAAE,6CADR;IAEEC,QAAQ,EAAE;MAAE,YAAY;QAAEC,UAAU,EAAE;UAAEC,WAAW,EAAE;QAAf;MAAd;IAAd;EAFZ,CAfK,EAmBLC,GAnBK,CAmBDZ,mBAnBC,CADgC;EAqBvCa,OAAO,EAAE,CACP;IAAEL,IAAI,EAAE,iBAAR;IAA2BM,MAAM,EAAE,CAACX,aAAD;EAAnC,CADO,EAEP;IAAEK,IAAI,EAAE,uBAAR;IAAiCM,MAAM,EAAE,CAACX,aAAD;EAAzC,CAFO,EAGP;IAAEK,IAAI,EAAE,yBAAR;IAAmCM,MAAM,EAAE,CAACX,aAAD;EAA3C,CAHO,EAIP;IAAEK,IAAI,EAAE,8CAAR;IAAwDM,MAAM,EAAE,CAACX,aAAD;EAAhE,CAJO,EAKP;IAAEK,IAAI,EAAE,4CAAR;IAAsDM,MAAM,EAAE,CAACX,aAAD;EAA9D,CALO,EAMP;IAAEK,IAAI,EAAE,eAAR;IAAyBM,MAAM,EAAE,CAACX,aAAD;EAAjC,CANO,EAOP;IAAEK,IAAI,EAAE,qCAAR;IAA+CM,MAAM,EAAE,CAACX,aAAD;EAAvD,CAPO,EAQP;IAAEK,IAAI,EAAE,6CAAR;IAAuDM,MAAM,EAAE,CAACX,aAAD;EAA/D,CARO,EASPS,GATO,CASHZ,mBATG;AArB8B,CAAzC"},"metadata":{},"sourceType":"module"}