{"ast":null,"code":"'use strict';\n/**\n * Plugins engine.\n *\n * @module plugins\n *\n * @param {Object} data input data\n * @param {Object} info extra information\n * @param {Object} plugins plugins object from config\n * @return {Object} output data\n */\n\nmodule.exports = function (data, info, plugins) {\n  plugins.forEach(function (group) {\n    switch (group[0].type) {\n      case 'perItem':\n        data = perItem(data, info, group);\n        break;\n\n      case 'perItemReverse':\n        data = perItem(data, info, group, true);\n        break;\n\n      case 'full':\n        data = full(data, info, group);\n        break;\n    }\n  });\n  return data;\n};\n/**\n * Direct or reverse per-item loop.\n *\n * @param {Object} data input data\n * @param {Object} info extra information\n * @param {Array} plugins plugins list to process\n * @param {Boolean} [reverse] reverse pass?\n * @return {Object} output data\n */\n\n\nfunction perItem(data, info, plugins, reverse) {\n  function monkeys(items) {\n    items.content = items.content.filter(function (item) {\n      // reverse pass\n      if (reverse && item.content) {\n        monkeys(item);\n      } // main filter\n\n\n      var filter = true;\n\n      for (var i = 0; filter && i < plugins.length; i++) {\n        var plugin = plugins[i];\n\n        if (plugin.active && plugin.fn(item, plugin.params, info) === false) {\n          filter = false;\n        }\n      } // direct pass\n\n\n      if (!reverse && item.content) {\n        monkeys(item);\n      }\n\n      return filter;\n    });\n    return items;\n  }\n\n  return monkeys(data);\n}\n/**\n * \"Full\" plugins.\n *\n * @param {Object} data input data\n * @param {Object} info extra information\n * @param {Array} plugins plugins list to process\n * @return {Object} output data\n */\n\n\nfunction full(data, info, plugins) {\n  plugins.forEach(function (plugin) {\n    if (plugin.active) {\n      data = plugin.fn(data, plugin.params, info);\n    }\n  });\n  return data;\n}","map":{"version":3,"names":["module","exports","data","info","plugins","forEach","group","type","perItem","full","reverse","monkeys","items","content","filter","item","i","length","plugin","active","fn","params"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/svgo/lib/svgo/plugins.js"],"sourcesContent":["'use strict';\n\n/**\n * Plugins engine.\n *\n * @module plugins\n *\n * @param {Object} data input data\n * @param {Object} info extra information\n * @param {Object} plugins plugins object from config\n * @return {Object} output data\n */\nmodule.exports = function(data, info, plugins) {\n\n    plugins.forEach(function(group) {\n\n        switch(group[0].type) {\n            case 'perItem':\n                data = perItem(data, info, group);\n                break;\n            case 'perItemReverse':\n                data = perItem(data, info, group, true);\n                break;\n            case 'full':\n                data = full(data, info, group);\n                break;\n        }\n\n    });\n\n    return data;\n\n};\n\n/**\n * Direct or reverse per-item loop.\n *\n * @param {Object} data input data\n * @param {Object} info extra information\n * @param {Array} plugins plugins list to process\n * @param {Boolean} [reverse] reverse pass?\n * @return {Object} output data\n */\nfunction perItem(data, info, plugins, reverse) {\n\n    function monkeys(items) {\n\n        items.content = items.content.filter(function(item) {\n\n            // reverse pass\n            if (reverse && item.content) {\n                monkeys(item);\n            }\n\n            // main filter\n            var filter = true;\n\n            for (var i = 0; filter && i < plugins.length; i++) {\n                var plugin = plugins[i];\n\n                if (plugin.active && plugin.fn(item, plugin.params, info) === false) {\n                    filter = false;\n                }\n            }\n\n            // direct pass\n            if (!reverse && item.content) {\n                monkeys(item);\n            }\n\n            return filter;\n\n        });\n\n        return items;\n\n    }\n\n    return monkeys(data);\n\n}\n\n/**\n * \"Full\" plugins.\n *\n * @param {Object} data input data\n * @param {Object} info extra information\n * @param {Array} plugins plugins list to process\n * @return {Object} output data\n */\nfunction full(data, info, plugins) {\n\n    plugins.forEach(function(plugin) {\n        if (plugin.active) {\n            data = plugin.fn(data, plugin.params, info);\n        }\n    });\n\n    return data;\n\n}\n"],"mappings":"AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAA,MAAM,CAACC,OAAP,GAAiB,UAASC,IAAT,EAAeC,IAAf,EAAqBC,OAArB,EAA8B;EAE3CA,OAAO,CAACC,OAAR,CAAgB,UAASC,KAAT,EAAgB;IAE5B,QAAOA,KAAK,CAAC,CAAD,CAAL,CAASC,IAAhB;MACI,KAAK,SAAL;QACIL,IAAI,GAAGM,OAAO,CAACN,IAAD,EAAOC,IAAP,EAAaG,KAAb,CAAd;QACA;;MACJ,KAAK,gBAAL;QACIJ,IAAI,GAAGM,OAAO,CAACN,IAAD,EAAOC,IAAP,EAAaG,KAAb,EAAoB,IAApB,CAAd;QACA;;MACJ,KAAK,MAAL;QACIJ,IAAI,GAAGO,IAAI,CAACP,IAAD,EAAOC,IAAP,EAAaG,KAAb,CAAX;QACA;IATR;EAYH,CAdD;EAgBA,OAAOJ,IAAP;AAEH,CApBD;AAsBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASM,OAAT,CAAiBN,IAAjB,EAAuBC,IAAvB,EAA6BC,OAA7B,EAAsCM,OAAtC,EAA+C;EAE3C,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;IAEpBA,KAAK,CAACC,OAAN,GAAgBD,KAAK,CAACC,OAAN,CAAcC,MAAd,CAAqB,UAASC,IAAT,EAAe;MAEhD;MACA,IAAIL,OAAO,IAAIK,IAAI,CAACF,OAApB,EAA6B;QACzBF,OAAO,CAACI,IAAD,CAAP;MACH,CAL+C,CAOhD;;;MACA,IAAID,MAAM,GAAG,IAAb;;MAEA,KAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBF,MAAM,IAAIE,CAAC,GAAGZ,OAAO,CAACa,MAAtC,EAA8CD,CAAC,EAA/C,EAAmD;QAC/C,IAAIE,MAAM,GAAGd,OAAO,CAACY,CAAD,CAApB;;QAEA,IAAIE,MAAM,CAACC,MAAP,IAAiBD,MAAM,CAACE,EAAP,CAAUL,IAAV,EAAgBG,MAAM,CAACG,MAAvB,EAA+BlB,IAA/B,MAAyC,KAA9D,EAAqE;UACjEW,MAAM,GAAG,KAAT;QACH;MACJ,CAhB+C,CAkBhD;;;MACA,IAAI,CAACJ,OAAD,IAAYK,IAAI,CAACF,OAArB,EAA8B;QAC1BF,OAAO,CAACI,IAAD,CAAP;MACH;;MAED,OAAOD,MAAP;IAEH,CAzBe,CAAhB;IA2BA,OAAOF,KAAP;EAEH;;EAED,OAAOD,OAAO,CAACT,IAAD,CAAd;AAEH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASO,IAAT,CAAcP,IAAd,EAAoBC,IAApB,EAA0BC,OAA1B,EAAmC;EAE/BA,OAAO,CAACC,OAAR,CAAgB,UAASa,MAAT,EAAiB;IAC7B,IAAIA,MAAM,CAACC,MAAX,EAAmB;MACfjB,IAAI,GAAGgB,MAAM,CAACE,EAAP,CAAUlB,IAAV,EAAgBgB,MAAM,CAACG,MAAvB,EAA+BlB,IAA/B,CAAP;IACH;EACJ,CAJD;EAMA,OAAOD,IAAP;AAEH"},"metadata":{},"sourceType":"script"}