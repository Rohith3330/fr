{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.checkDuplicateIncludeExcludes = void 0;\nexports.default = normalizeOptions;\nexports.normalizeCoreJSOption = normalizeCoreJSOption;\nexports.validateUseBuiltInsOption = exports.validateModulesOption = exports.normalizePluginName = void 0;\n\nvar _semver = require(\"semver\");\n\nvar _corejs2BuiltIns = require(\"@babel/compat-data/corejs2-built-ins\");\n\nvar _coreJsCompat = require(\"../data/core-js-compat\");\n\nvar _pluginsCompatData = require(\"./plugins-compat-data\");\n\nvar _moduleTransformations = require(\"./module-transformations\");\n\nvar _options = require(\"./options\");\n\nvar _helperValidatorOption = require(\"@babel/helper-validator-option\");\n\nconst corejs2DefaultWebIncludes = [\"web.timers\", \"web.immediate\", \"web.dom.iterable\"];\nconst v = new _helperValidatorOption.OptionValidator(\"@babel/preset-env\");\nconst allPluginsList = Object.keys(_pluginsCompatData.plugins);\nconst modulePlugins = [\"proposal-dynamic-import\", ...Object.keys(_moduleTransformations.default).map(m => _moduleTransformations.default[m])];\n\nconst getValidIncludesAndExcludes = (type, corejs) => new Set([...allPluginsList, ...(type === \"exclude\" ? modulePlugins : []), ...(corejs ? corejs == 2 ? [...Object.keys(_corejs2BuiltIns), ...corejs2DefaultWebIncludes] : Object.keys(_coreJsCompat) : [])]);\n\nconst pluginToRegExp = plugin => {\n  if (plugin instanceof RegExp) return plugin;\n\n  try {\n    return new RegExp(`^${normalizePluginName(plugin)}$`);\n  } catch (e) {\n    return null;\n  }\n};\n\nconst selectPlugins = (regexp, type, corejs) => Array.from(getValidIncludesAndExcludes(type, corejs)).filter(item => regexp instanceof RegExp && regexp.test(item));\n\nconst flatten = array => [].concat(...array);\n\nconst expandIncludesAndExcludes = function () {\n  let plugins = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let type = arguments.length > 1 ? arguments[1] : undefined;\n  let corejs = arguments.length > 2 ? arguments[2] : undefined;\n  if (plugins.length === 0) return [];\n  const selectedPlugins = plugins.map(plugin => selectPlugins(pluginToRegExp(plugin), type, corejs));\n  const invalidRegExpList = plugins.filter((p, i) => selectedPlugins[i].length === 0);\n  v.invariant(invalidRegExpList.length === 0, `The plugins/built-ins '${invalidRegExpList.join(\", \")}' passed to the '${type}' option are not\n    valid. Please check data/[plugin-features|built-in-features].js in babel-preset-env`);\n  return flatten(selectedPlugins);\n};\n\nconst normalizePluginName = plugin => plugin.replace(/^(@babel\\/|babel-)(plugin-)?/, \"\");\n\nexports.normalizePluginName = normalizePluginName;\n\nconst checkDuplicateIncludeExcludes = function () {\n  let include = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let exclude = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  const duplicates = include.filter(opt => exclude.indexOf(opt) >= 0);\n  v.invariant(duplicates.length === 0, `The plugins/built-ins '${duplicates.join(\", \")}' were found in both the \"include\" and\n    \"exclude\" options.`);\n};\n\nexports.checkDuplicateIncludeExcludes = checkDuplicateIncludeExcludes;\n\nconst normalizeTargets = targets => {\n  if (typeof targets === \"string\" || Array.isArray(targets)) {\n    return {\n      browsers: targets\n    };\n  }\n\n  return Object.assign({}, targets);\n};\n\nconst validateModulesOption = function () {\n  let modulesOpt = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _options.ModulesOption.auto;\n  v.invariant(_options.ModulesOption[modulesOpt.toString()] || modulesOpt === _options.ModulesOption.false, `The 'modules' option must be one of \\n` + ` - 'false' to indicate no module processing\\n` + ` - a specific module type: 'commonjs', 'amd', 'umd', 'systemjs'` + ` - 'auto' (default) which will automatically select 'false' if the current\\n` + `   process is known to support ES module syntax, or \"commonjs\" otherwise\\n`);\n  return modulesOpt;\n};\n\nexports.validateModulesOption = validateModulesOption;\n\nconst validateUseBuiltInsOption = function () {\n  let builtInsOpt = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  v.invariant(_options.UseBuiltInsOption[builtInsOpt.toString()] || builtInsOpt === _options.UseBuiltInsOption.false, `The 'useBuiltIns' option must be either\n    'false' (default) to indicate no polyfill,\n    '\"entry\"' to indicate replacing the entry polyfill, or\n    '\"usage\"' to import only used polyfills per file`);\n  return builtInsOpt;\n};\n\nexports.validateUseBuiltInsOption = validateUseBuiltInsOption;\n\nfunction normalizeCoreJSOption(corejs, useBuiltIns) {\n  let proposals = false;\n  let rawVersion;\n\n  if (useBuiltIns && corejs === undefined) {\n    rawVersion = 2;\n    console.warn(\"\\nWARNING (@babel/preset-env): We noticed you're using the `useBuiltIns` option without declaring a \" + \"core-js version. Currently, we assume version 2.x when no version \" + \"is passed. Since this default version will likely change in future \" + \"versions of Babel, we recommend explicitly setting the core-js version \" + \"you are using via the `corejs` option.\\n\" + \"\\nYou should also be sure that the version you pass to the `corejs` \" + \"option matches the version specified in your `package.json`'s \" + \"`dependencies` section. If it doesn't, you need to run one of the \" + \"following commands:\\n\\n\" + \"  npm install --save core-js@2    npm install --save core-js@3\\n\" + \"  yarn add core-js@2              yarn add core-js@3\\n\\n\" + \"More info about useBuiltIns: https://babeljs.io/docs/en/babel-preset-env#usebuiltins\\n\" + \"More info about core-js: https://babeljs.io/docs/en/babel-preset-env#corejs\");\n  } else if (typeof corejs === \"object\" && corejs !== null) {\n    rawVersion = corejs.version;\n    proposals = Boolean(corejs.proposals);\n  } else {\n    rawVersion = corejs;\n  }\n\n  const version = rawVersion ? _semver.coerce(String(rawVersion)) : false;\n\n  if (!useBuiltIns && version) {\n    console.warn(\"\\nWARNING (@babel/preset-env): The `corejs` option only has an effect when the `useBuiltIns` option is not `false`\\n\");\n  }\n\n  if (useBuiltIns && (!version || version.major < 2 || version.major > 3)) {\n    throw new RangeError(\"Invalid Option: The version passed to `corejs` is invalid. Currently, \" + \"only core-js@2 and core-js@3 are supported.\");\n  }\n\n  return {\n    version,\n    proposals\n  };\n}\n\nfunction normalizeOptions(opts) {\n  v.validateTopLevelOptions(opts, _options.TopLevelOptions);\n  const useBuiltIns = validateUseBuiltInsOption(opts.useBuiltIns);\n  const corejs = normalizeCoreJSOption(opts.corejs, useBuiltIns);\n  const include = expandIncludesAndExcludes(opts.include, _options.TopLevelOptions.include, !!corejs.version && corejs.version.major);\n  const exclude = expandIncludesAndExcludes(opts.exclude, _options.TopLevelOptions.exclude, !!corejs.version && corejs.version.major);\n  checkDuplicateIncludeExcludes(include, exclude);\n  return {\n    bugfixes: v.validateBooleanOption(_options.TopLevelOptions.bugfixes, opts.bugfixes, false),\n    configPath: v.validateStringOption(_options.TopLevelOptions.configPath, opts.configPath, process.cwd()),\n    corejs,\n    debug: v.validateBooleanOption(_options.TopLevelOptions.debug, opts.debug, false),\n    include,\n    exclude,\n    forceAllTransforms: v.validateBooleanOption(_options.TopLevelOptions.forceAllTransforms, opts.forceAllTransforms, false),\n    ignoreBrowserslistConfig: v.validateBooleanOption(_options.TopLevelOptions.ignoreBrowserslistConfig, opts.ignoreBrowserslistConfig, false),\n    loose: v.validateBooleanOption(_options.TopLevelOptions.loose, opts.loose),\n    modules: validateModulesOption(opts.modules),\n    shippedProposals: v.validateBooleanOption(_options.TopLevelOptions.shippedProposals, opts.shippedProposals, false),\n    spec: v.validateBooleanOption(_options.TopLevelOptions.spec, opts.spec, false),\n    targets: normalizeTargets(opts.targets),\n    useBuiltIns: useBuiltIns,\n    browserslistEnv: v.validateStringOption(_options.TopLevelOptions.browserslistEnv, opts.browserslistEnv)\n  };\n}","map":{"version":3,"mappings":"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","names":["corejs2DefaultWebIncludes","v","OptionValidator","allPluginsList","Object","keys","pluginsList","modulePlugins","moduleTransformations","map","m","getValidIncludesAndExcludes","type","corejs","Set","corejs2Polyfills","corejs3Polyfills","pluginToRegExp","plugin","RegExp","normalizePluginName","e","selectPlugins","regexp","Array","from","filter","item","test","flatten","array","concat","expandIncludesAndExcludes","plugins","length","selectedPlugins","invalidRegExpList","p","i","invariant","join","replace","checkDuplicateIncludeExcludes","include","exclude","duplicates","opt","indexOf","normalizeTargets","targets","isArray","browsers","validateModulesOption","modulesOpt","ModulesOption","auto","toString","false","validateUseBuiltInsOption","builtInsOpt","UseBuiltInsOption","normalizeCoreJSOption","useBuiltIns","proposals","rawVersion","undefined","console","warn","version","Boolean","semver","coerce","String","major","RangeError","normalizeOptions","opts","validateTopLevelOptions","TopLevelOptions","bugfixes","validateBooleanOption","configPath","validateStringOption","process","cwd","debug","forceAllTransforms","ignoreBrowserslistConfig","loose","modules","shippedProposals","spec","browserslistEnv"],"sources":["C:\\Users\\Rohith\\mern\\frontend\\node_modules\\@babel\\preset-env\\src\\normalize-options.ts"],"sourcesContent":["import semver, { type SemVer } from \"semver\";\nimport corejs2Polyfills from \"@babel/compat-data/corejs2-built-ins\";\n// @ts-expect-error Fixme: TS can not infer types from ../data/core-js-compat.js\n// but we can't import core-js-compat/data.json because JSON imports does\n// not work on Node 14\nimport corejs3Polyfills from \"../data/core-js-compat\";\nimport { plugins as pluginsList } from \"./plugins-compat-data\";\nimport moduleTransformations from \"./module-transformations\";\nimport { TopLevelOptions, ModulesOption, UseBuiltInsOption } from \"./options\";\nimport { OptionValidator } from \"@babel/helper-validator-option\";\n\nconst corejs2DefaultWebIncludes = [\n  \"web.timers\",\n  \"web.immediate\",\n  \"web.dom.iterable\",\n];\n\nimport type {\n  BuiltInsOption,\n  CorejsOption,\n  ModuleOption,\n  Options,\n  PluginListItem,\n  PluginListOption,\n} from \"./types\";\n\ndeclare const PACKAGE_JSON: { name: string; version: string };\n\nconst v = new OptionValidator(PACKAGE_JSON.name);\n\nconst allPluginsList = Object.keys(pluginsList);\n\n// NOTE: Since module plugins are handled separately compared to other plugins (via the \"modules\" option) it\n// should only be possible to exclude and not include module plugins, otherwise it's possible that preset-env\n// will add a module plugin twice.\nconst modulePlugins = [\n  \"proposal-dynamic-import\",\n  ...Object.keys(moduleTransformations).map(m => moduleTransformations[m]),\n];\n\nconst getValidIncludesAndExcludes = (\n  type: \"include\" | \"exclude\",\n  corejs: number | false,\n) =>\n  new Set([\n    ...allPluginsList,\n    ...(type === \"exclude\" ? modulePlugins : []),\n    ...(corejs\n      ? corejs == 2\n        ? [...Object.keys(corejs2Polyfills), ...corejs2DefaultWebIncludes]\n        : Object.keys(corejs3Polyfills)\n      : []),\n  ]);\n\nconst pluginToRegExp = (plugin: PluginListItem) => {\n  if (plugin instanceof RegExp) return plugin;\n  try {\n    return new RegExp(`^${normalizePluginName(plugin)}$`);\n  } catch (e) {\n    return null;\n  }\n};\n\nconst selectPlugins = (\n  regexp: RegExp | null,\n  type: \"include\" | \"exclude\",\n  corejs: number | false,\n) =>\n  Array.from(getValidIncludesAndExcludes(type, corejs)).filter(\n    item => regexp instanceof RegExp && regexp.test(item),\n  );\n\nconst flatten = <T>(array: Array<Array<T>>): Array<T> => [].concat(...array);\n\nconst expandIncludesAndExcludes = (\n  plugins: PluginListOption = [],\n  type: \"include\" | \"exclude\",\n  corejs: number | false,\n) => {\n  if (plugins.length === 0) return [];\n\n  const selectedPlugins = plugins.map(plugin =>\n    selectPlugins(pluginToRegExp(plugin), type, corejs),\n  );\n  const invalidRegExpList = plugins.filter(\n    (p, i) => selectedPlugins[i].length === 0,\n  );\n\n  v.invariant(\n    invalidRegExpList.length === 0,\n    `The plugins/built-ins '${invalidRegExpList.join(\n      \", \",\n    )}' passed to the '${type}' option are not\n    valid. Please check data/[plugin-features|built-in-features].js in babel-preset-env`,\n  );\n\n  return flatten<string>(selectedPlugins);\n};\n\nexport const normalizePluginName = (plugin: string) =>\n  plugin.replace(/^(@babel\\/|babel-)(plugin-)?/, \"\");\n\nexport const checkDuplicateIncludeExcludes = (\n  include: Array<string> = [],\n  exclude: Array<string> = [],\n) => {\n  const duplicates = include.filter(opt => exclude.indexOf(opt) >= 0);\n\n  v.invariant(\n    duplicates.length === 0,\n    `The plugins/built-ins '${duplicates.join(\n      \", \",\n    )}' were found in both the \"include\" and\n    \"exclude\" options.`,\n  );\n};\n\nconst normalizeTargets = (\n  targets: string | string[] | Options[\"targets\"],\n): Options[\"targets\"] => {\n  // TODO: Allow to use only query or strings as a targets from next breaking change.\n  if (typeof targets === \"string\" || Array.isArray(targets)) {\n    return { browsers: targets };\n  }\n  return { ...targets };\n};\n\nexport const validateModulesOption = (\n  modulesOpt: ModuleOption = ModulesOption.auto,\n) => {\n  v.invariant(\n    // @ts-expect-error we have provided fallback for undefined keys\n    ModulesOption[modulesOpt.toString()] || modulesOpt === ModulesOption.false,\n    `The 'modules' option must be one of \\n` +\n      ` - 'false' to indicate no module processing\\n` +\n      ` - a specific module type: 'commonjs', 'amd', 'umd', 'systemjs'` +\n      ` - 'auto' (default) which will automatically select 'false' if the current\\n` +\n      `   process is known to support ES module syntax, or \"commonjs\" otherwise\\n`,\n  );\n\n  return modulesOpt;\n};\n\nexport const validateUseBuiltInsOption = (\n  builtInsOpt: BuiltInsOption = false,\n) => {\n  v.invariant(\n    // @ts-expect-error we have provided fallback for undefined keys\n    UseBuiltInsOption[builtInsOpt.toString()] ||\n      builtInsOpt === UseBuiltInsOption.false,\n    `The 'useBuiltIns' option must be either\n    'false' (default) to indicate no polyfill,\n    '\"entry\"' to indicate replacing the entry polyfill, or\n    '\"usage\"' to import only used polyfills per file`,\n  );\n\n  return builtInsOpt;\n};\n\nexport type NormalizedCorejsOption = {\n  proposals: boolean;\n  version: SemVer | null | false;\n};\n\nexport function normalizeCoreJSOption(\n  corejs: CorejsOption | undefined | null,\n  useBuiltIns: BuiltInsOption,\n): NormalizedCorejsOption {\n  let proposals = false;\n  let rawVersion;\n\n  if (useBuiltIns && corejs === undefined) {\n    rawVersion = 2;\n    console.warn(\n      \"\\nWARNING (@babel/preset-env): We noticed you're using the `useBuiltIns` option without declaring a \" +\n        \"core-js version. Currently, we assume version 2.x when no version \" +\n        \"is passed. Since this default version will likely change in future \" +\n        \"versions of Babel, we recommend explicitly setting the core-js version \" +\n        \"you are using via the `corejs` option.\\n\" +\n        \"\\nYou should also be sure that the version you pass to the `corejs` \" +\n        \"option matches the version specified in your `package.json`'s \" +\n        \"`dependencies` section. If it doesn't, you need to run one of the \" +\n        \"following commands:\\n\\n\" +\n        \"  npm install --save core-js@2    npm install --save core-js@3\\n\" +\n        \"  yarn add core-js@2              yarn add core-js@3\\n\\n\" +\n        \"More info about useBuiltIns: https://babeljs.io/docs/en/babel-preset-env#usebuiltins\\n\" +\n        \"More info about core-js: https://babeljs.io/docs/en/babel-preset-env#corejs\",\n    );\n  } else if (typeof corejs === \"object\" && corejs !== null) {\n    rawVersion = corejs.version;\n    proposals = Boolean(corejs.proposals);\n  } else {\n    rawVersion = corejs;\n  }\n\n  const version = rawVersion ? semver.coerce(String(rawVersion)) : false;\n\n  if (!useBuiltIns && version) {\n    console.warn(\n      \"\\nWARNING (@babel/preset-env): The `corejs` option only has an effect when the `useBuiltIns` option is not `false`\\n\",\n    );\n  }\n\n  if (useBuiltIns && (!version || version.major < 2 || version.major > 3)) {\n    throw new RangeError(\n      \"Invalid Option: The version passed to `corejs` is invalid. Currently, \" +\n        \"only core-js@2 and core-js@3 are supported.\",\n    );\n  }\n\n  return { version, proposals };\n}\n\nexport default function normalizeOptions(opts: Options) {\n  v.validateTopLevelOptions(opts, TopLevelOptions);\n\n  const useBuiltIns = validateUseBuiltInsOption(opts.useBuiltIns);\n\n  const corejs = normalizeCoreJSOption(opts.corejs, useBuiltIns);\n\n  const include = expandIncludesAndExcludes(\n    opts.include,\n    TopLevelOptions.include,\n    !!corejs.version && corejs.version.major,\n  );\n\n  const exclude = expandIncludesAndExcludes(\n    opts.exclude,\n    TopLevelOptions.exclude,\n    !!corejs.version && corejs.version.major,\n  );\n\n  checkDuplicateIncludeExcludes(include, exclude);\n\n  return {\n    bugfixes: v.validateBooleanOption(\n      TopLevelOptions.bugfixes,\n      opts.bugfixes,\n      process.env.BABEL_8_BREAKING ? true : false,\n    ),\n    configPath: v.validateStringOption(\n      TopLevelOptions.configPath,\n      opts.configPath,\n      process.cwd(),\n    ),\n    corejs,\n    debug: v.validateBooleanOption(TopLevelOptions.debug, opts.debug, false),\n    include,\n    exclude,\n    forceAllTransforms: v.validateBooleanOption(\n      TopLevelOptions.forceAllTransforms,\n      opts.forceAllTransforms,\n      false,\n    ),\n    ignoreBrowserslistConfig: v.validateBooleanOption(\n      TopLevelOptions.ignoreBrowserslistConfig,\n      opts.ignoreBrowserslistConfig,\n      false,\n    ),\n    loose: v.validateBooleanOption<boolean>(TopLevelOptions.loose, opts.loose),\n    modules: validateModulesOption(opts.modules),\n    shippedProposals: v.validateBooleanOption(\n      TopLevelOptions.shippedProposals,\n      opts.shippedProposals,\n      false,\n    ),\n    spec: v.validateBooleanOption(TopLevelOptions.spec, opts.spec, false),\n    targets: normalizeTargets(opts.targets),\n    useBuiltIns: useBuiltIns,\n    browserslistEnv: v.validateStringOption<string>(\n      TopLevelOptions.browserslistEnv,\n      opts.browserslistEnv,\n    ),\n  };\n}\n"]},"metadata":{},"sourceType":"script"}