{"ast":null,"code":"\"use strict\";\n/*--------------------------------------------------------------------------\r\n\r\n@sinclair/typebox/value\r\n\r\nThe MIT License (MIT)\r\n\r\nCopyright (c) 2022 Haydn Paterson (sinclair) <haydn.developer@gmail.com>\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in\r\nall copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\nTHE SOFTWARE.\r\n\r\n---------------------------------------------------------------------------*/\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Value = void 0;\n\nconst index_1 = require(\"../errors/index\");\n\nconst equal_1 = require(\"./equal\");\n\nconst cast_1 = require(\"./cast\");\n\nconst clone_1 = require(\"./clone\");\n\nconst create_1 = require(\"./create\");\n\nconst check_1 = require(\"./check\");\n\nconst delta_1 = require(\"./delta\");\n/** Value performs immutable operations on values */\n\n\nvar Value;\n\n(function (Value) {\n  function Cast() {\n    const [schema, references, value] = arguments.length === 3 ? [arguments.length <= 0 ? undefined : arguments[0], arguments.length <= 1 ? undefined : arguments[1], arguments.length <= 2 ? undefined : arguments[2]] : [arguments.length <= 0 ? undefined : arguments[0], [], arguments.length <= 1 ? undefined : arguments[1]];\n    return cast_1.ValueCast.Cast(schema, references, value);\n  }\n\n  Value.Cast = Cast;\n\n  function Create() {\n    const [schema, references] = arguments.length === 2 ? [arguments.length <= 0 ? undefined : arguments[0], arguments.length <= 1 ? undefined : arguments[1]] : [arguments.length <= 0 ? undefined : arguments[0], []];\n    return create_1.ValueCreate.Create(schema, references);\n  }\n\n  Value.Create = Create;\n\n  function Check() {\n    const [schema, references, value] = arguments.length === 3 ? [arguments.length <= 0 ? undefined : arguments[0], arguments.length <= 1 ? undefined : arguments[1], arguments.length <= 2 ? undefined : arguments[2]] : [arguments.length <= 0 ? undefined : arguments[0], [], arguments.length <= 1 ? undefined : arguments[1]];\n    return check_1.ValueCheck.Check(schema, references, value);\n  }\n\n  Value.Check = Check;\n\n  function* Errors() {\n    const [schema, references, value] = arguments.length === 3 ? [arguments.length <= 0 ? undefined : arguments[0], arguments.length <= 1 ? undefined : arguments[1], arguments.length <= 2 ? undefined : arguments[2]] : [arguments.length <= 0 ? undefined : arguments[0], [], arguments.length <= 1 ? undefined : arguments[1]];\n    yield* index_1.ValueErrors.Errors(schema, references, value);\n  }\n\n  Value.Errors = Errors;\n  /** Returns true if left and right values are structurally equal */\n\n  function Equal(left, right) {\n    return equal_1.ValueEqual.Equal(left, right);\n  }\n\n  Value.Equal = Equal;\n  /** Returns a structural clone of the given value */\n\n  function Clone(value) {\n    return clone_1.ValueClone.Clone(value);\n  }\n\n  Value.Clone = Clone;\n  /** Returns edits to transform the current value into the next value */\n\n  function Diff(current, next) {\n    return delta_1.ValueDelta.Diff(current, next);\n  }\n\n  Value.Diff = Diff;\n  /** Returns a new value with edits applied to the given value */\n\n  function Patch(current, edits) {\n    return delta_1.ValueDelta.Patch(current, edits);\n  }\n\n  Value.Patch = Patch;\n})(Value = exports.Value || (exports.Value = {}));","map":{"version":3,"names":["Object","defineProperty","exports","value","Value","index_1","require","equal_1","cast_1","clone_1","create_1","check_1","delta_1","Cast","schema","references","length","ValueCast","Create","ValueCreate","Check","ValueCheck","Errors","ValueErrors","Equal","left","right","ValueEqual","Clone","ValueClone","Diff","current","next","ValueDelta","Patch","edits"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/@sinclair/typebox/value/value.js"],"sourcesContent":["\"use strict\";\r\n/*--------------------------------------------------------------------------\r\n\r\n@sinclair/typebox/value\r\n\r\nThe MIT License (MIT)\r\n\r\nCopyright (c) 2022 Haydn Paterson (sinclair) <haydn.developer@gmail.com>\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in\r\nall copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\nTHE SOFTWARE.\r\n\r\n---------------------------------------------------------------------------*/\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Value = void 0;\r\nconst index_1 = require(\"../errors/index\");\r\nconst equal_1 = require(\"./equal\");\r\nconst cast_1 = require(\"./cast\");\r\nconst clone_1 = require(\"./clone\");\r\nconst create_1 = require(\"./create\");\r\nconst check_1 = require(\"./check\");\r\nconst delta_1 = require(\"./delta\");\r\n/** Value performs immutable operations on values */\r\nvar Value;\r\n(function (Value) {\r\n    function Cast(...args) {\r\n        const [schema, references, value] = args.length === 3 ? [args[0], args[1], args[2]] : [args[0], [], args[1]];\r\n        return cast_1.ValueCast.Cast(schema, references, value);\r\n    }\r\n    Value.Cast = Cast;\r\n    function Create(...args) {\r\n        const [schema, references] = args.length === 2 ? [args[0], args[1]] : [args[0], []];\r\n        return create_1.ValueCreate.Create(schema, references);\r\n    }\r\n    Value.Create = Create;\r\n    function Check(...args) {\r\n        const [schema, references, value] = args.length === 3 ? [args[0], args[1], args[2]] : [args[0], [], args[1]];\r\n        return check_1.ValueCheck.Check(schema, references, value);\r\n    }\r\n    Value.Check = Check;\r\n    function* Errors(...args) {\r\n        const [schema, references, value] = args.length === 3 ? [args[0], args[1], args[2]] : [args[0], [], args[1]];\r\n        yield* index_1.ValueErrors.Errors(schema, references, value);\r\n    }\r\n    Value.Errors = Errors;\r\n    /** Returns true if left and right values are structurally equal */\r\n    function Equal(left, right) {\r\n        return equal_1.ValueEqual.Equal(left, right);\r\n    }\r\n    Value.Equal = Equal;\r\n    /** Returns a structural clone of the given value */\r\n    function Clone(value) {\r\n        return clone_1.ValueClone.Clone(value);\r\n    }\r\n    Value.Clone = Clone;\r\n    /** Returns edits to transform the current value into the next value */\r\n    function Diff(current, next) {\r\n        return delta_1.ValueDelta.Diff(current, next);\r\n    }\r\n    Value.Diff = Diff;\r\n    /** Returns a new value with edits applied to the given value */\r\n    function Patch(current, edits) {\r\n        return delta_1.ValueDelta.Patch(current, edits);\r\n    }\r\n    Value.Patch = Patch;\r\n})(Value = exports.Value || (exports.Value = {}));\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}