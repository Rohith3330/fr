{"ast":null,"code":"'use strict';\n\nconst {\n  querySelector,\n  closestByName,\n  detachNodeFromParent\n} = require('../lib/xast.js');\n\nconst {\n  collectStylesheet,\n  computeStyle\n} = require('../lib/style.js');\n\nconst {\n  parsePathData\n} = require('../lib/path.js');\n\nexports.name = 'removeHiddenElems';\nexports.type = 'visitor';\nexports.active = true;\nexports.description = 'removes hidden elements (zero sized, with absent attributes)';\n/**\n * Remove hidden elements with disabled rendering:\n * - display=\"none\"\n * - opacity=\"0\"\n * - circle with zero radius\n * - ellipse with zero x-axis or y-axis radius\n * - rectangle with zero width or height\n * - pattern with zero width or height\n * - image with zero width or height\n * - path with empty data\n * - polyline with empty points\n * - polygon with empty points\n *\n * @author Kir Belevich\n *\n * @type {import('../lib/types').Plugin<{\n *   isHidden: boolean,\n *   displayNone: boolean,\n *   opacity0: boolean,\n *   circleR0: boolean,\n *   ellipseRX0: boolean,\n *   ellipseRY0: boolean,\n *   rectWidth0: boolean,\n *   rectHeight0: boolean,\n *   patternWidth0: boolean,\n *   patternHeight0: boolean,\n *   imageWidth0: boolean,\n *   imageHeight0: boolean,\n *   pathEmptyD: boolean,\n *   polylineEmptyPoints: boolean,\n *   polygonEmptyPoints: boolean,\n * }>}\n */\n\nexports.fn = (root, params) => {\n  const {\n    isHidden = true,\n    displayNone = true,\n    opacity0 = true,\n    circleR0 = true,\n    ellipseRX0 = true,\n    ellipseRY0 = true,\n    rectWidth0 = true,\n    rectHeight0 = true,\n    patternWidth0 = true,\n    patternHeight0 = true,\n    imageWidth0 = true,\n    imageHeight0 = true,\n    pathEmptyD = true,\n    polylineEmptyPoints = true,\n    polygonEmptyPoints = true\n  } = params;\n  const stylesheet = collectStylesheet(root);\n  return {\n    element: {\n      enter: (node, parentNode) => {\n        // Removes hidden elements\n        // https://www.w3schools.com/cssref/pr_class_visibility.asp\n        const computedStyle = computeStyle(stylesheet, node);\n\n        if (isHidden && computedStyle.visibility && computedStyle.visibility.type === 'static' && computedStyle.visibility.value === 'hidden' && // keep if any descendant enables visibility\n        querySelector(node, '[visibility=visible]') == null) {\n          detachNodeFromParent(node, parentNode);\n          return;\n        } // display=\"none\"\n        //\n        // https://www.w3.org/TR/SVG11/painting.html#DisplayProperty\n        // \"A value of display: none indicates that the given element\n        // and its children shall not be rendered directly\"\n\n\n        if (displayNone && computedStyle.display && computedStyle.display.type === 'static' && computedStyle.display.value === 'none' && // markers with display: none still rendered\n        node.name !== 'marker') {\n          detachNodeFromParent(node, parentNode);\n          return;\n        } // opacity=\"0\"\n        //\n        // https://www.w3.org/TR/SVG11/masking.html#ObjectAndGroupOpacityProperties\n\n\n        if (opacity0 && computedStyle.opacity && computedStyle.opacity.type === 'static' && computedStyle.opacity.value === '0' && // transparent element inside clipPath still affect clipped elements\n        closestByName(node, 'clipPath') == null) {\n          detachNodeFromParent(node, parentNode);\n          return;\n        } // Circles with zero radius\n        //\n        // https://www.w3.org/TR/SVG11/shapes.html#CircleElementRAttribute\n        // \"A value of zero disables rendering of the element\"\n        //\n        // <circle r=\"0\">\n\n\n        if (circleR0 && node.name === 'circle' && node.children.length === 0 && node.attributes.r === '0') {\n          detachNodeFromParent(node, parentNode);\n          return;\n        } // Ellipse with zero x-axis radius\n        //\n        // https://www.w3.org/TR/SVG11/shapes.html#EllipseElementRXAttribute\n        // \"A value of zero disables rendering of the element\"\n        //\n        // <ellipse rx=\"0\">\n\n\n        if (ellipseRX0 && node.name === 'ellipse' && node.children.length === 0 && node.attributes.rx === '0') {\n          detachNodeFromParent(node, parentNode);\n          return;\n        } // Ellipse with zero y-axis radius\n        //\n        // https://www.w3.org/TR/SVG11/shapes.html#EllipseElementRYAttribute\n        // \"A value of zero disables rendering of the element\"\n        //\n        // <ellipse ry=\"0\">\n\n\n        if (ellipseRY0 && node.name === 'ellipse' && node.children.length === 0 && node.attributes.ry === '0') {\n          detachNodeFromParent(node, parentNode);\n          return;\n        } // Rectangle with zero width\n        //\n        // https://www.w3.org/TR/SVG11/shapes.html#RectElementWidthAttribute\n        // \"A value of zero disables rendering of the element\"\n        //\n        // <rect width=\"0\">\n\n\n        if (rectWidth0 && node.name === 'rect' && node.children.length === 0 && node.attributes.width === '0') {\n          detachNodeFromParent(node, parentNode);\n          return;\n        } // Rectangle with zero height\n        //\n        // https://www.w3.org/TR/SVG11/shapes.html#RectElementHeightAttribute\n        // \"A value of zero disables rendering of the element\"\n        //\n        // <rect height=\"0\">\n\n\n        if (rectHeight0 && rectWidth0 && node.name === 'rect' && node.children.length === 0 && node.attributes.height === '0') {\n          detachNodeFromParent(node, parentNode);\n          return;\n        } // Pattern with zero width\n        //\n        // https://www.w3.org/TR/SVG11/pservers.html#PatternElementWidthAttribute\n        // \"A value of zero disables rendering of the element (i.e., no paint is applied)\"\n        //\n        // <pattern width=\"0\">\n\n\n        if (patternWidth0 && node.name === 'pattern' && node.attributes.width === '0') {\n          detachNodeFromParent(node, parentNode);\n          return;\n        } // Pattern with zero height\n        //\n        // https://www.w3.org/TR/SVG11/pservers.html#PatternElementHeightAttribute\n        // \"A value of zero disables rendering of the element (i.e., no paint is applied)\"\n        //\n        // <pattern height=\"0\">\n\n\n        if (patternHeight0 && node.name === 'pattern' && node.attributes.height === '0') {\n          detachNodeFromParent(node, parentNode);\n          return;\n        } // Image with zero width\n        //\n        // https://www.w3.org/TR/SVG11/struct.html#ImageElementWidthAttribute\n        // \"A value of zero disables rendering of the element\"\n        //\n        // <image width=\"0\">\n\n\n        if (imageWidth0 && node.name === 'image' && node.attributes.width === '0') {\n          detachNodeFromParent(node, parentNode);\n          return;\n        } // Image with zero height\n        //\n        // https://www.w3.org/TR/SVG11/struct.html#ImageElementHeightAttribute\n        // \"A value of zero disables rendering of the element\"\n        //\n        // <image height=\"0\">\n\n\n        if (imageHeight0 && node.name === 'image' && node.attributes.height === '0') {\n          detachNodeFromParent(node, parentNode);\n          return;\n        } // Path with empty data\n        //\n        // https://www.w3.org/TR/SVG11/paths.html#DAttribute\n        //\n        // <path d=\"\"/>\n\n\n        if (pathEmptyD && node.name === 'path') {\n          if (node.attributes.d == null) {\n            detachNodeFromParent(node, parentNode);\n            return;\n          }\n\n          const pathData = parsePathData(node.attributes.d);\n\n          if (pathData.length === 0) {\n            detachNodeFromParent(node, parentNode);\n            return;\n          } // keep single point paths for markers\n\n\n          if (pathData.length === 1 && computedStyle['marker-start'] == null && computedStyle['marker-end'] == null) {\n            detachNodeFromParent(node, parentNode);\n            return;\n          }\n\n          return;\n        } // Polyline with empty points\n        //\n        // https://www.w3.org/TR/SVG11/shapes.html#PolylineElementPointsAttribute\n        //\n        // <polyline points=\"\">\n\n\n        if (polylineEmptyPoints && node.name === 'polyline' && node.attributes.points == null) {\n          detachNodeFromParent(node, parentNode);\n          return;\n        } // Polygon with empty points\n        //\n        // https://www.w3.org/TR/SVG11/shapes.html#PolygonElementPointsAttribute\n        //\n        // <polygon points=\"\">\n\n\n        if (polygonEmptyPoints && node.name === 'polygon' && node.attributes.points == null) {\n          detachNodeFromParent(node, parentNode);\n          return;\n        }\n      }\n    }\n  };\n};","map":{"version":3,"names":["querySelector","closestByName","detachNodeFromParent","require","collectStylesheet","computeStyle","parsePathData","exports","name","type","active","description","fn","root","params","isHidden","displayNone","opacity0","circleR0","ellipseRX0","ellipseRY0","rectWidth0","rectHeight0","patternWidth0","patternHeight0","imageWidth0","imageHeight0","pathEmptyD","polylineEmptyPoints","polygonEmptyPoints","stylesheet","element","enter","node","parentNode","computedStyle","visibility","value","display","opacity","children","length","attributes","r","rx","ry","width","height","d","pathData","points"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/postcss-svgo/node_modules/svgo/plugins/removeHiddenElems.js"],"sourcesContent":["'use strict';\n\nconst {\n  querySelector,\n  closestByName,\n  detachNodeFromParent,\n} = require('../lib/xast.js');\nconst { collectStylesheet, computeStyle } = require('../lib/style.js');\nconst { parsePathData } = require('../lib/path.js');\n\nexports.name = 'removeHiddenElems';\nexports.type = 'visitor';\nexports.active = true;\nexports.description =\n  'removes hidden elements (zero sized, with absent attributes)';\n\n/**\n * Remove hidden elements with disabled rendering:\n * - display=\"none\"\n * - opacity=\"0\"\n * - circle with zero radius\n * - ellipse with zero x-axis or y-axis radius\n * - rectangle with zero width or height\n * - pattern with zero width or height\n * - image with zero width or height\n * - path with empty data\n * - polyline with empty points\n * - polygon with empty points\n *\n * @author Kir Belevich\n *\n * @type {import('../lib/types').Plugin<{\n *   isHidden: boolean,\n *   displayNone: boolean,\n *   opacity0: boolean,\n *   circleR0: boolean,\n *   ellipseRX0: boolean,\n *   ellipseRY0: boolean,\n *   rectWidth0: boolean,\n *   rectHeight0: boolean,\n *   patternWidth0: boolean,\n *   patternHeight0: boolean,\n *   imageWidth0: boolean,\n *   imageHeight0: boolean,\n *   pathEmptyD: boolean,\n *   polylineEmptyPoints: boolean,\n *   polygonEmptyPoints: boolean,\n * }>}\n */\nexports.fn = (root, params) => {\n  const {\n    isHidden = true,\n    displayNone = true,\n    opacity0 = true,\n    circleR0 = true,\n    ellipseRX0 = true,\n    ellipseRY0 = true,\n    rectWidth0 = true,\n    rectHeight0 = true,\n    patternWidth0 = true,\n    patternHeight0 = true,\n    imageWidth0 = true,\n    imageHeight0 = true,\n    pathEmptyD = true,\n    polylineEmptyPoints = true,\n    polygonEmptyPoints = true,\n  } = params;\n  const stylesheet = collectStylesheet(root);\n\n  return {\n    element: {\n      enter: (node, parentNode) => {\n        // Removes hidden elements\n        // https://www.w3schools.com/cssref/pr_class_visibility.asp\n        const computedStyle = computeStyle(stylesheet, node);\n        if (\n          isHidden &&\n          computedStyle.visibility &&\n          computedStyle.visibility.type === 'static' &&\n          computedStyle.visibility.value === 'hidden' &&\n          // keep if any descendant enables visibility\n          querySelector(node, '[visibility=visible]') == null\n        ) {\n          detachNodeFromParent(node, parentNode);\n          return;\n        }\n\n        // display=\"none\"\n        //\n        // https://www.w3.org/TR/SVG11/painting.html#DisplayProperty\n        // \"A value of display: none indicates that the given element\n        // and its children shall not be rendered directly\"\n        if (\n          displayNone &&\n          computedStyle.display &&\n          computedStyle.display.type === 'static' &&\n          computedStyle.display.value === 'none' &&\n          // markers with display: none still rendered\n          node.name !== 'marker'\n        ) {\n          detachNodeFromParent(node, parentNode);\n          return;\n        }\n\n        // opacity=\"0\"\n        //\n        // https://www.w3.org/TR/SVG11/masking.html#ObjectAndGroupOpacityProperties\n        if (\n          opacity0 &&\n          computedStyle.opacity &&\n          computedStyle.opacity.type === 'static' &&\n          computedStyle.opacity.value === '0' &&\n          // transparent element inside clipPath still affect clipped elements\n          closestByName(node, 'clipPath') == null\n        ) {\n          detachNodeFromParent(node, parentNode);\n          return;\n        }\n\n        // Circles with zero radius\n        //\n        // https://www.w3.org/TR/SVG11/shapes.html#CircleElementRAttribute\n        // \"A value of zero disables rendering of the element\"\n        //\n        // <circle r=\"0\">\n        if (\n          circleR0 &&\n          node.name === 'circle' &&\n          node.children.length === 0 &&\n          node.attributes.r === '0'\n        ) {\n          detachNodeFromParent(node, parentNode);\n          return;\n        }\n\n        // Ellipse with zero x-axis radius\n        //\n        // https://www.w3.org/TR/SVG11/shapes.html#EllipseElementRXAttribute\n        // \"A value of zero disables rendering of the element\"\n        //\n        // <ellipse rx=\"0\">\n        if (\n          ellipseRX0 &&\n          node.name === 'ellipse' &&\n          node.children.length === 0 &&\n          node.attributes.rx === '0'\n        ) {\n          detachNodeFromParent(node, parentNode);\n          return;\n        }\n\n        // Ellipse with zero y-axis radius\n        //\n        // https://www.w3.org/TR/SVG11/shapes.html#EllipseElementRYAttribute\n        // \"A value of zero disables rendering of the element\"\n        //\n        // <ellipse ry=\"0\">\n        if (\n          ellipseRY0 &&\n          node.name === 'ellipse' &&\n          node.children.length === 0 &&\n          node.attributes.ry === '0'\n        ) {\n          detachNodeFromParent(node, parentNode);\n          return;\n        }\n\n        // Rectangle with zero width\n        //\n        // https://www.w3.org/TR/SVG11/shapes.html#RectElementWidthAttribute\n        // \"A value of zero disables rendering of the element\"\n        //\n        // <rect width=\"0\">\n        if (\n          rectWidth0 &&\n          node.name === 'rect' &&\n          node.children.length === 0 &&\n          node.attributes.width === '0'\n        ) {\n          detachNodeFromParent(node, parentNode);\n          return;\n        }\n\n        // Rectangle with zero height\n        //\n        // https://www.w3.org/TR/SVG11/shapes.html#RectElementHeightAttribute\n        // \"A value of zero disables rendering of the element\"\n        //\n        // <rect height=\"0\">\n        if (\n          rectHeight0 &&\n          rectWidth0 &&\n          node.name === 'rect' &&\n          node.children.length === 0 &&\n          node.attributes.height === '0'\n        ) {\n          detachNodeFromParent(node, parentNode);\n          return;\n        }\n\n        // Pattern with zero width\n        //\n        // https://www.w3.org/TR/SVG11/pservers.html#PatternElementWidthAttribute\n        // \"A value of zero disables rendering of the element (i.e., no paint is applied)\"\n        //\n        // <pattern width=\"0\">\n        if (\n          patternWidth0 &&\n          node.name === 'pattern' &&\n          node.attributes.width === '0'\n        ) {\n          detachNodeFromParent(node, parentNode);\n          return;\n        }\n\n        // Pattern with zero height\n        //\n        // https://www.w3.org/TR/SVG11/pservers.html#PatternElementHeightAttribute\n        // \"A value of zero disables rendering of the element (i.e., no paint is applied)\"\n        //\n        // <pattern height=\"0\">\n        if (\n          patternHeight0 &&\n          node.name === 'pattern' &&\n          node.attributes.height === '0'\n        ) {\n          detachNodeFromParent(node, parentNode);\n          return;\n        }\n\n        // Image with zero width\n        //\n        // https://www.w3.org/TR/SVG11/struct.html#ImageElementWidthAttribute\n        // \"A value of zero disables rendering of the element\"\n        //\n        // <image width=\"0\">\n        if (\n          imageWidth0 &&\n          node.name === 'image' &&\n          node.attributes.width === '0'\n        ) {\n          detachNodeFromParent(node, parentNode);\n          return;\n        }\n\n        // Image with zero height\n        //\n        // https://www.w3.org/TR/SVG11/struct.html#ImageElementHeightAttribute\n        // \"A value of zero disables rendering of the element\"\n        //\n        // <image height=\"0\">\n        if (\n          imageHeight0 &&\n          node.name === 'image' &&\n          node.attributes.height === '0'\n        ) {\n          detachNodeFromParent(node, parentNode);\n          return;\n        }\n\n        // Path with empty data\n        //\n        // https://www.w3.org/TR/SVG11/paths.html#DAttribute\n        //\n        // <path d=\"\"/>\n        if (pathEmptyD && node.name === 'path') {\n          if (node.attributes.d == null) {\n            detachNodeFromParent(node, parentNode);\n            return;\n          }\n          const pathData = parsePathData(node.attributes.d);\n          if (pathData.length === 0) {\n            detachNodeFromParent(node, parentNode);\n            return;\n          }\n          // keep single point paths for markers\n          if (\n            pathData.length === 1 &&\n            computedStyle['marker-start'] == null &&\n            computedStyle['marker-end'] == null\n          ) {\n            detachNodeFromParent(node, parentNode);\n            return;\n          }\n          return;\n        }\n\n        // Polyline with empty points\n        //\n        // https://www.w3.org/TR/SVG11/shapes.html#PolylineElementPointsAttribute\n        //\n        // <polyline points=\"\">\n        if (\n          polylineEmptyPoints &&\n          node.name === 'polyline' &&\n          node.attributes.points == null\n        ) {\n          detachNodeFromParent(node, parentNode);\n          return;\n        }\n\n        // Polygon with empty points\n        //\n        // https://www.w3.org/TR/SVG11/shapes.html#PolygonElementPointsAttribute\n        //\n        // <polygon points=\"\">\n        if (\n          polygonEmptyPoints &&\n          node.name === 'polygon' &&\n          node.attributes.points == null\n        ) {\n          detachNodeFromParent(node, parentNode);\n          return;\n        }\n      },\n    },\n  };\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}