{"ast":null,"code":"/**\n * @fileoverview Require component props to be typed as read-only.\n * @author Luke Zapart\n */\n'use strict';\n\nconst Components = require('../util/Components');\n\nconst docsUrl = require('../util/docsUrl');\n\nconst report = require('../util/report');\n\nfunction isFlowPropertyType(node) {\n  return node.type === 'ObjectTypeProperty';\n}\n\nfunction isCovariant(node) {\n  return node.variance && node.variance.kind === 'plus' || node.parent && node.parent.parent && node.parent.parent.parent && node.parent.parent.parent.id && node.parent.parent.parent.id.name === '$ReadOnly';\n} // ------------------------------------------------------------------------------\n// Rule Definition\n// ------------------------------------------------------------------------------\n\n\nconst messages = {\n  readOnlyProp: 'Prop \\'{{name}}\\' should be read-only.'\n};\nmodule.exports = {\n  meta: {\n    docs: {\n      description: 'Enforce that props are read-only',\n      category: 'Stylistic Issues',\n      recommended: false,\n      url: docsUrl('prefer-read-only-props')\n    },\n    fixable: 'code',\n    messages,\n    schema: []\n  },\n  create: Components.detect((context, components) => ({\n    'Program:exit'() {\n      const list = components.list();\n      Object.keys(list).forEach(key => {\n        const component = list[key];\n\n        if (!component.declaredPropTypes) {\n          return;\n        }\n\n        Object.keys(component.declaredPropTypes).forEach(propName => {\n          const prop = component.declaredPropTypes[propName];\n\n          if (!prop.node || !isFlowPropertyType(prop.node)) {\n            return;\n          }\n\n          if (!isCovariant(prop.node)) {\n            report(context, messages.readOnlyProp, 'readOnlyProp', {\n              node: prop.node,\n              data: {\n                name: propName\n              },\n              fix: fixer => {\n                if (!prop.node.variance) {\n                  // Insert covariance\n                  return fixer.insertTextBefore(prop.node, '+');\n                } // Replace contravariance with covariance\n\n\n                return fixer.replaceText(prop.node.variance, '+');\n              }\n            });\n          }\n        });\n      });\n    }\n\n  }))\n};","map":{"version":3,"names":["Components","require","docsUrl","report","isFlowPropertyType","node","type","isCovariant","variance","kind","parent","id","name","messages","readOnlyProp","module","exports","meta","docs","description","category","recommended","url","fixable","schema","create","detect","context","components","list","Object","keys","forEach","key","component","declaredPropTypes","propName","prop","data","fix","fixer","insertTextBefore","replaceText"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/eslint-plugin-react/lib/rules/prefer-read-only-props.js"],"sourcesContent":["/**\n * @fileoverview Require component props to be typed as read-only.\n * @author Luke Zapart\n */\n\n'use strict';\n\nconst Components = require('../util/Components');\nconst docsUrl = require('../util/docsUrl');\nconst report = require('../util/report');\n\nfunction isFlowPropertyType(node) {\n  return node.type === 'ObjectTypeProperty';\n}\n\nfunction isCovariant(node) {\n  return (node.variance && node.variance.kind === 'plus')\n    || (\n      node.parent\n      && node.parent.parent\n      && node.parent.parent.parent\n      && node.parent.parent.parent.id\n      && node.parent.parent.parent.id.name === '$ReadOnly'\n    );\n}\n\n// ------------------------------------------------------------------------------\n// Rule Definition\n// ------------------------------------------------------------------------------\n\nconst messages = {\n  readOnlyProp: 'Prop \\'{{name}}\\' should be read-only.',\n};\n\nmodule.exports = {\n  meta: {\n    docs: {\n      description: 'Enforce that props are read-only',\n      category: 'Stylistic Issues',\n      recommended: false,\n      url: docsUrl('prefer-read-only-props'),\n    },\n    fixable: 'code',\n\n    messages,\n\n    schema: [],\n  },\n\n  create: Components.detect((context, components) => ({\n    'Program:exit'() {\n      const list = components.list();\n\n      Object.keys(list).forEach((key) => {\n        const component = list[key];\n\n        if (!component.declaredPropTypes) {\n          return;\n        }\n\n        Object.keys(component.declaredPropTypes).forEach((propName) => {\n          const prop = component.declaredPropTypes[propName];\n\n          if (!prop.node || !isFlowPropertyType(prop.node)) {\n            return;\n          }\n\n          if (!isCovariant(prop.node)) {\n            report(context, messages.readOnlyProp, 'readOnlyProp', {\n              node: prop.node,\n              data: {\n                name: propName,\n              },\n              fix: (fixer) => {\n                if (!prop.node.variance) {\n                  // Insert covariance\n                  return fixer.insertTextBefore(prop.node, '+');\n                }\n\n                // Replace contravariance with covariance\n                return fixer.replaceText(prop.node.variance, '+');\n              },\n            });\n          }\n        });\n      });\n    },\n  })),\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;;AAEA,MAAMA,UAAU,GAAGC,OAAO,CAAC,oBAAD,CAA1B;;AACA,MAAMC,OAAO,GAAGD,OAAO,CAAC,iBAAD,CAAvB;;AACA,MAAME,MAAM,GAAGF,OAAO,CAAC,gBAAD,CAAtB;;AAEA,SAASG,kBAAT,CAA4BC,IAA5B,EAAkC;EAChC,OAAOA,IAAI,CAACC,IAAL,KAAc,oBAArB;AACD;;AAED,SAASC,WAAT,CAAqBF,IAArB,EAA2B;EACzB,OAAQA,IAAI,CAACG,QAAL,IAAiBH,IAAI,CAACG,QAAL,CAAcC,IAAd,KAAuB,MAAzC,IAEHJ,IAAI,CAACK,MAAL,IACGL,IAAI,CAACK,MAAL,CAAYA,MADf,IAEGL,IAAI,CAACK,MAAL,CAAYA,MAAZ,CAAmBA,MAFtB,IAGGL,IAAI,CAACK,MAAL,CAAYA,MAAZ,CAAmBA,MAAnB,CAA0BC,EAH7B,IAIGN,IAAI,CAACK,MAAL,CAAYA,MAAZ,CAAmBA,MAAnB,CAA0BC,EAA1B,CAA6BC,IAA7B,KAAsC,WAN7C;AAQD,C,CAED;AACA;AACA;;;AAEA,MAAMC,QAAQ,GAAG;EACfC,YAAY,EAAE;AADC,CAAjB;AAIAC,MAAM,CAACC,OAAP,GAAiB;EACfC,IAAI,EAAE;IACJC,IAAI,EAAE;MACJC,WAAW,EAAE,kCADT;MAEJC,QAAQ,EAAE,kBAFN;MAGJC,WAAW,EAAE,KAHT;MAIJC,GAAG,EAAEpB,OAAO,CAAC,wBAAD;IAJR,CADF;IAOJqB,OAAO,EAAE,MAPL;IASJV,QATI;IAWJW,MAAM,EAAE;EAXJ,CADS;EAefC,MAAM,EAAEzB,UAAU,CAAC0B,MAAX,CAAkB,CAACC,OAAD,EAAUC,UAAV,MAA0B;IAClD,iBAAiB;MACf,MAAMC,IAAI,GAAGD,UAAU,CAACC,IAAX,EAAb;MAEAC,MAAM,CAACC,IAAP,CAAYF,IAAZ,EAAkBG,OAAlB,CAA2BC,GAAD,IAAS;QACjC,MAAMC,SAAS,GAAGL,IAAI,CAACI,GAAD,CAAtB;;QAEA,IAAI,CAACC,SAAS,CAACC,iBAAf,EAAkC;UAChC;QACD;;QAEDL,MAAM,CAACC,IAAP,CAAYG,SAAS,CAACC,iBAAtB,EAAyCH,OAAzC,CAAkDI,QAAD,IAAc;UAC7D,MAAMC,IAAI,GAAGH,SAAS,CAACC,iBAAV,CAA4BC,QAA5B,CAAb;;UAEA,IAAI,CAACC,IAAI,CAAChC,IAAN,IAAc,CAACD,kBAAkB,CAACiC,IAAI,CAAChC,IAAN,CAArC,EAAkD;YAChD;UACD;;UAED,IAAI,CAACE,WAAW,CAAC8B,IAAI,CAAChC,IAAN,CAAhB,EAA6B;YAC3BF,MAAM,CAACwB,OAAD,EAAUd,QAAQ,CAACC,YAAnB,EAAiC,cAAjC,EAAiD;cACrDT,IAAI,EAAEgC,IAAI,CAAChC,IAD0C;cAErDiC,IAAI,EAAE;gBACJ1B,IAAI,EAAEwB;cADF,CAF+C;cAKrDG,GAAG,EAAGC,KAAD,IAAW;gBACd,IAAI,CAACH,IAAI,CAAChC,IAAL,CAAUG,QAAf,EAAyB;kBACvB;kBACA,OAAOgC,KAAK,CAACC,gBAAN,CAAuBJ,IAAI,CAAChC,IAA5B,EAAkC,GAAlC,CAAP;gBACD,CAJa,CAMd;;;gBACA,OAAOmC,KAAK,CAACE,WAAN,CAAkBL,IAAI,CAAChC,IAAL,CAAUG,QAA5B,EAAsC,GAAtC,CAAP;cACD;YAboD,CAAjD,CAAN;UAeD;QACF,CAxBD;MAyBD,CAhCD;IAiCD;;EArCiD,CAA1B,CAAlB;AAfO,CAAjB"},"metadata":{},"sourceType":"script"}