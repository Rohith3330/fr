{"ast":null,"code":"'use strict';\n\nconst processors = require('./lib/decl');\n/**\n * @type {import('postcss').PluginCreator<void>}\n * @return {import('postcss').Plugin}\n */\n\n\nfunction pluginCreator() {\n  return {\n    postcssPlugin: 'postcss-merge-longhand',\n\n    OnceExit(css) {\n      css.walkRules(rule => {\n        processors.forEach(p => {\n          p.explode(rule);\n          p.merge(rule);\n        });\n      });\n    }\n\n  };\n}\n\npluginCreator.postcss = true;\nmodule.exports = pluginCreator;","map":{"version":3,"names":["processors","require","pluginCreator","postcssPlugin","OnceExit","css","walkRules","rule","forEach","p","explode","merge","postcss","module","exports"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/postcss-merge-longhand/src/index.js"],"sourcesContent":["'use strict';\nconst processors = require('./lib/decl');\n/**\n * @type {import('postcss').PluginCreator<void>}\n * @return {import('postcss').Plugin}\n */\nfunction pluginCreator() {\n  return {\n    postcssPlugin: 'postcss-merge-longhand',\n\n    OnceExit(css) {\n      css.walkRules((rule) => {\n        processors.forEach((p) => {\n          p.explode(rule);\n          p.merge(rule);\n        });\n      });\n    },\n  };\n}\n\npluginCreator.postcss = true;\nmodule.exports = pluginCreator;\n"],"mappings":"AAAA;;AACA,MAAMA,UAAU,GAAGC,OAAO,CAAC,YAAD,CAA1B;AACA;AACA;AACA;AACA;;;AACA,SAASC,aAAT,GAAyB;EACvB,OAAO;IACLC,aAAa,EAAE,wBADV;;IAGLC,QAAQ,CAACC,GAAD,EAAM;MACZA,GAAG,CAACC,SAAJ,CAAeC,IAAD,IAAU;QACtBP,UAAU,CAACQ,OAAX,CAAoBC,CAAD,IAAO;UACxBA,CAAC,CAACC,OAAF,CAAUH,IAAV;UACAE,CAAC,CAACE,KAAF,CAAQJ,IAAR;QACD,CAHD;MAID,CALD;IAMD;;EAVI,CAAP;AAYD;;AAEDL,aAAa,CAACU,OAAd,GAAwB,IAAxB;AACAC,MAAM,CAACC,OAAP,GAAiBZ,aAAjB"},"metadata":{},"sourceType":"script"}