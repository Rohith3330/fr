{"ast":null,"code":"#!/usr/bin/env node\n'use strict';\n\nconst fs = require('fs');\n\nconst path = require('path');\n\nconst check = require('check-types');\n\nconst bfj = require('../src');\n\nconsole.log('reading json');\nlet time = process.hrtime();\nbfj.read(getDataPath('.json')).then(data => {\n  reportTime();\n  console.log('writing json');\n  return bfj.write(getDataPath('-result.json'), data);\n}).then(() => done('succeeded')).catch(error => done(error.stack, 1));\n\nfunction getDataPath(suffix) {\n  return path.resolve(__dirname, process.argv[2] + suffix);\n}\n\nfunction reportTime() {\n  let interimTime = process.hrtime(time);\n  console.log('%d seconds and %d nanoseconds', interimTime[0], interimTime[1]);\n  time = process.hrtime();\n}\n\nfunction done(message, code) {\n  reportTime();\n  console.log(message);\n  process.exit(code);\n}","map":{"version":3,"names":["fs","require","path","check","bfj","console","log","time","process","hrtime","read","getDataPath","then","data","reportTime","write","done","catch","error","stack","suffix","resolve","__dirname","argv","interimTime","message","code","exit"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/bfj/test/performance.js"],"sourcesContent":["#!/usr/bin/env node\n\n'use strict'\n\nconst fs = require('fs')\nconst path = require('path')\nconst check = require('check-types')\nconst bfj = require('../src')\n\nconsole.log('reading json')\n\nlet time = process.hrtime()\n\nbfj.read(getDataPath('.json'))\n  .then(data => {\n    reportTime()\n    console.log('writing json')\n    return bfj.write(getDataPath('-result.json'), data)\n  })\n  .then(() => done('succeeded'))\n  .catch(error => done(error.stack, 1))\n\nfunction getDataPath (suffix) {\n  return path.resolve(__dirname, process.argv[2] + suffix)\n}\n\nfunction reportTime () {\n  let interimTime = process.hrtime(time)\n  console.log('%d seconds and %d nanoseconds', interimTime[0], interimTime[1])\n  time = process.hrtime()\n}\n\nfunction done (message, code) {\n  reportTime()\n  console.log(message)\n  process.exit(code)\n}\n\n"],"mappings":"AAAA;AAEA;;AAEA,MAAMA,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAlB;;AACA,MAAMC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAApB;;AACA,MAAME,KAAK,GAAGF,OAAO,CAAC,aAAD,CAArB;;AACA,MAAMG,GAAG,GAAGH,OAAO,CAAC,QAAD,CAAnB;;AAEAI,OAAO,CAACC,GAAR,CAAY,cAAZ;AAEA,IAAIC,IAAI,GAAGC,OAAO,CAACC,MAAR,EAAX;AAEAL,GAAG,CAACM,IAAJ,CAASC,WAAW,CAAC,OAAD,CAApB,EACGC,IADH,CACQC,IAAI,IAAI;EACZC,UAAU;EACVT,OAAO,CAACC,GAAR,CAAY,cAAZ;EACA,OAAOF,GAAG,CAACW,KAAJ,CAAUJ,WAAW,CAAC,cAAD,CAArB,EAAuCE,IAAvC,CAAP;AACD,CALH,EAMGD,IANH,CAMQ,MAAMI,IAAI,CAAC,WAAD,CANlB,EAOGC,KAPH,CAOSC,KAAK,IAAIF,IAAI,CAACE,KAAK,CAACC,KAAP,EAAc,CAAd,CAPtB;;AASA,SAASR,WAAT,CAAsBS,MAAtB,EAA8B;EAC5B,OAAOlB,IAAI,CAACmB,OAAL,CAAaC,SAAb,EAAwBd,OAAO,CAACe,IAAR,CAAa,CAAb,IAAkBH,MAA1C,CAAP;AACD;;AAED,SAASN,UAAT,GAAuB;EACrB,IAAIU,WAAW,GAAGhB,OAAO,CAACC,MAAR,CAAeF,IAAf,CAAlB;EACAF,OAAO,CAACC,GAAR,CAAY,+BAAZ,EAA6CkB,WAAW,CAAC,CAAD,CAAxD,EAA6DA,WAAW,CAAC,CAAD,CAAxE;EACAjB,IAAI,GAAGC,OAAO,CAACC,MAAR,EAAP;AACD;;AAED,SAASO,IAAT,CAAeS,OAAf,EAAwBC,IAAxB,EAA8B;EAC5BZ,UAAU;EACVT,OAAO,CAACC,GAAR,CAAYmB,OAAZ;EACAjB,OAAO,CAACmB,IAAR,CAAaD,IAAb;AACD"},"metadata":{},"sourceType":"script"}