{"ast":null,"code":"#!/usr/bin/env node\n'use strict';\n\nconst fs = require('fs');\n\nconst path = require('path');\n\nconst mimeScore = require('mime-score');\n\nlet db = require('mime-db');\n\nlet chalk = require('chalk');\n\nconst STANDARD_FACET_SCORE = 900;\nconst byExtension = {}; // Clear out any conflict extensions in mime-db\n\nfor (let type in db) {\n  let entry = db[type];\n  entry.type = type;\n  if (!entry.extensions) continue;\n  entry.extensions.forEach(ext => {\n    if (ext in byExtension) {\n      const e0 = entry;\n      const e1 = byExtension[ext];\n      e0.pri = mimeScore(e0.type, e0.source);\n      e1.pri = mimeScore(e1.type, e1.source);\n      let drop = e0.pri < e1.pri ? e0 : e1;\n      let keep = e0.pri >= e1.pri ? e0 : e1;\n      drop.extensions = drop.extensions.filter(e => e !== ext);\n      console.log(`${ext}: Keeping ${chalk.green(keep.type)} (${keep.pri}), dropping ${chalk.red(drop.type)} (${drop.pri})`);\n    }\n\n    byExtension[ext] = entry;\n  });\n}\n\nfunction writeTypesFile(types, path) {\n  fs.writeFileSync(path, JSON.stringify(types));\n} // Segregate into standard and non-standard types based on facet per\n// https://tools.ietf.org/html/rfc6838#section-3.1\n\n\nconst types = {};\nObject.keys(db).sort().forEach(k => {\n  const entry = db[k];\n  types[entry.type] = entry.extensions;\n});\nwriteTypesFile(types, path.join(__dirname, '..', 'types.json'));","map":{"version":3,"names":["fs","require","path","mimeScore","db","chalk","STANDARD_FACET_SCORE","byExtension","type","entry","extensions","forEach","ext","e0","e1","pri","source","drop","keep","filter","e","console","log","green","red","writeTypesFile","types","writeFileSync","JSON","stringify","Object","keys","sort","k","join","__dirname"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/mime/src/build.js"],"sourcesContent":["#!/usr/bin/env node\n\n'use strict';\n\nconst fs = require('fs');\nconst path = require('path');\nconst mimeScore = require('mime-score');\n\nlet db = require('mime-db');\nlet chalk = require('chalk');\n\nconst STANDARD_FACET_SCORE = 900;\n\nconst byExtension = {};\n\n// Clear out any conflict extensions in mime-db\nfor (let type in db) {\n  let entry = db[type];\n  entry.type = type;\n\n  if (!entry.extensions) continue;\n\n  entry.extensions.forEach(ext => {\n    if (ext in byExtension) {\n      const e0 = entry;\n      const e1 = byExtension[ext];\n      e0.pri = mimeScore(e0.type, e0.source);\n      e1.pri = mimeScore(e1.type, e1.source);\n\n      let drop = e0.pri < e1.pri ? e0 : e1;\n      let keep = e0.pri >= e1.pri ? e0 : e1;\n      drop.extensions = drop.extensions.filter(e => e !== ext);\n\n      console.log(`${ext}: Keeping ${chalk.green(keep.type)} (${keep.pri}), dropping ${chalk.red(drop.type)} (${drop.pri})`);\n    }\n    byExtension[ext] = entry;\n  });\n}\n\nfunction writeTypesFile(types, path) {\n  fs.writeFileSync(path, JSON.stringify(types));\n}\n\n// Segregate into standard and non-standard types based on facet per\n// https://tools.ietf.org/html/rfc6838#section-3.1\nconst types = {};\n\nObject.keys(db).sort().forEach(k => {\n  const entry = db[k];\n  types[entry.type] = entry.extensions;\n});\n\nwriteTypesFile(types, path.join(__dirname, '..', 'types.json'));\n"],"mappings":"AAAA;AAEA;;AAEA,MAAMA,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAlB;;AACA,MAAMC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAApB;;AACA,MAAME,SAAS,GAAGF,OAAO,CAAC,YAAD,CAAzB;;AAEA,IAAIG,EAAE,GAAGH,OAAO,CAAC,SAAD,CAAhB;;AACA,IAAII,KAAK,GAAGJ,OAAO,CAAC,OAAD,CAAnB;;AAEA,MAAMK,oBAAoB,GAAG,GAA7B;AAEA,MAAMC,WAAW,GAAG,EAApB,C,CAEA;;AACA,KAAK,IAAIC,IAAT,IAAiBJ,EAAjB,EAAqB;EACnB,IAAIK,KAAK,GAAGL,EAAE,CAACI,IAAD,CAAd;EACAC,KAAK,CAACD,IAAN,GAAaA,IAAb;EAEA,IAAI,CAACC,KAAK,CAACC,UAAX,EAAuB;EAEvBD,KAAK,CAACC,UAAN,CAAiBC,OAAjB,CAAyBC,GAAG,IAAI;IAC9B,IAAIA,GAAG,IAAIL,WAAX,EAAwB;MACtB,MAAMM,EAAE,GAAGJ,KAAX;MACA,MAAMK,EAAE,GAAGP,WAAW,CAACK,GAAD,CAAtB;MACAC,EAAE,CAACE,GAAH,GAASZ,SAAS,CAACU,EAAE,CAACL,IAAJ,EAAUK,EAAE,CAACG,MAAb,CAAlB;MACAF,EAAE,CAACC,GAAH,GAASZ,SAAS,CAACW,EAAE,CAACN,IAAJ,EAAUM,EAAE,CAACE,MAAb,CAAlB;MAEA,IAAIC,IAAI,GAAGJ,EAAE,CAACE,GAAH,GAASD,EAAE,CAACC,GAAZ,GAAkBF,EAAlB,GAAuBC,EAAlC;MACA,IAAII,IAAI,GAAGL,EAAE,CAACE,GAAH,IAAUD,EAAE,CAACC,GAAb,GAAmBF,EAAnB,GAAwBC,EAAnC;MACAG,IAAI,CAACP,UAAL,GAAkBO,IAAI,CAACP,UAAL,CAAgBS,MAAhB,CAAuBC,CAAC,IAAIA,CAAC,KAAKR,GAAlC,CAAlB;MAEAS,OAAO,CAACC,GAAR,CAAa,GAAEV,GAAI,aAAYP,KAAK,CAACkB,KAAN,CAAYL,IAAI,CAACV,IAAjB,CAAuB,KAAIU,IAAI,CAACH,GAAI,eAAcV,KAAK,CAACmB,GAAN,CAAUP,IAAI,CAACT,IAAf,CAAqB,KAAIS,IAAI,CAACF,GAAI,GAAnH;IACD;;IACDR,WAAW,CAACK,GAAD,CAAX,GAAmBH,KAAnB;EACD,CAdD;AAeD;;AAED,SAASgB,cAAT,CAAwBC,KAAxB,EAA+BxB,IAA/B,EAAqC;EACnCF,EAAE,CAAC2B,aAAH,CAAiBzB,IAAjB,EAAuB0B,IAAI,CAACC,SAAL,CAAeH,KAAf,CAAvB;AACD,C,CAED;AACA;;;AACA,MAAMA,KAAK,GAAG,EAAd;AAEAI,MAAM,CAACC,IAAP,CAAY3B,EAAZ,EAAgB4B,IAAhB,GAAuBrB,OAAvB,CAA+BsB,CAAC,IAAI;EAClC,MAAMxB,KAAK,GAAGL,EAAE,CAAC6B,CAAD,CAAhB;EACAP,KAAK,CAACjB,KAAK,CAACD,IAAP,CAAL,GAAoBC,KAAK,CAACC,UAA1B;AACD,CAHD;AAKAe,cAAc,CAACC,KAAD,EAAQxB,IAAI,CAACgC,IAAL,CAAUC,SAAV,EAAqB,IAArB,EAA2B,YAA3B,CAAR,CAAd"},"metadata":{},"sourceType":"script"}