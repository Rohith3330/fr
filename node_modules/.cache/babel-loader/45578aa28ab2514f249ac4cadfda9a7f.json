{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst utils_1 = require(\"@typescript-eslint/utils\");\n\nconst ts = __importStar(require(\"typescript\"));\n\nconst util_1 = require(\"../util\");\n\nexports.default = (0, util_1.createRule)({\n  name: 'prefer-return-this-type',\n  defaultOptions: [],\n  meta: {\n    type: 'suggestion',\n    docs: {\n      description: 'Enforce that `this` is used when only `this` type is returned',\n      recommended: 'strict',\n      requiresTypeChecking: true\n    },\n    messages: {\n      useThisType: 'Use `this` type instead.'\n    },\n    schema: [],\n    fixable: 'code'\n  },\n\n  create(context) {\n    const parserServices = (0, util_1.getParserServices)(context);\n    const checker = parserServices.program.getTypeChecker();\n\n    function tryGetNameInType(name, typeNode) {\n      if (typeNode.type === utils_1.AST_NODE_TYPES.TSTypeReference && typeNode.typeName.type === utils_1.AST_NODE_TYPES.Identifier && typeNode.typeName.name === name) {\n        return typeNode;\n      }\n\n      if (typeNode.type === utils_1.AST_NODE_TYPES.TSUnionType) {\n        for (const type of typeNode.types) {\n          const found = tryGetNameInType(name, type);\n\n          if (found) {\n            return found;\n          }\n        }\n      }\n\n      return undefined;\n    }\n\n    function isThisSpecifiedInParameters(originalFunc) {\n      const firstArg = originalFunc.params[0];\n      return firstArg && firstArg.type === utils_1.AST_NODE_TYPES.Identifier && firstArg.name === 'this';\n    }\n\n    function isFunctionReturningThis(originalFunc, originalClass) {\n      if (isThisSpecifiedInParameters(originalFunc)) {\n        return false;\n      }\n\n      const func = parserServices.esTreeNodeToTSNodeMap.get(originalFunc);\n\n      if (!func.body) {\n        return false;\n      }\n\n      const classType = checker.getTypeAtLocation(parserServices.esTreeNodeToTSNodeMap.get(originalClass));\n\n      if (func.body.kind !== ts.SyntaxKind.Block) {\n        const type = checker.getTypeAtLocation(func.body);\n        return classType.thisType === type;\n      }\n\n      let hasReturnThis = false;\n      let hasReturnClassType = false;\n      (0, util_1.forEachReturnStatement)(func.body, stmt => {\n        const expr = stmt.expression;\n\n        if (!expr) {\n          return;\n        } // fast check\n\n\n        if (expr.kind === ts.SyntaxKind.ThisKeyword) {\n          hasReturnThis = true;\n          return;\n        }\n\n        const type = checker.getTypeAtLocation(expr);\n\n        if (classType === type) {\n          hasReturnClassType = true;\n          return true;\n        }\n\n        if (classType.thisType === type) {\n          hasReturnThis = true;\n          return;\n        }\n\n        return;\n      });\n      return !hasReturnClassType && hasReturnThis;\n    }\n\n    function checkFunction(originalFunc, originalClass) {\n      var _a;\n\n      const className = (_a = originalClass.id) === null || _a === void 0 ? void 0 : _a.name;\n\n      if (!className || !originalFunc.returnType) {\n        return;\n      }\n\n      const node = tryGetNameInType(className, originalFunc.returnType.typeAnnotation);\n\n      if (!node) {\n        return;\n      }\n\n      if (isFunctionReturningThis(originalFunc, originalClass)) {\n        context.report({\n          node,\n          messageId: 'useThisType',\n          fix: fixer => fixer.replaceText(node, 'this')\n        });\n      }\n    }\n\n    return {\n      'ClassBody > MethodDefinition'(node) {\n        checkFunction(node.value, node.parent.parent);\n      },\n\n      'ClassBody > PropertyDefinition'(node) {\n        var _a, _b;\n\n        if (!(((_a = node.value) === null || _a === void 0 ? void 0 : _a.type) === utils_1.AST_NODE_TYPES.FunctionExpression || ((_b = node.value) === null || _b === void 0 ? void 0 : _b.type) === utils_1.AST_NODE_TYPES.ArrowFunctionExpression)) {\n          return;\n        }\n\n        checkFunction(node.value, node.parent.parent);\n      }\n\n    };\n  }\n\n});","map":{"version":3,"mappings":"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","names":["exports","name","defaultOptions","meta","type","docs","description","recommended","requiresTypeChecking","messages","useThisType","schema","fixable","create","context","parserServices","checker","program","getTypeChecker","tryGetNameInType","typeNode","utils_1","TSTypeReference","typeName","Identifier","TSUnionType","types","found","undefined","isThisSpecifiedInParameters","originalFunc","firstArg","params","isFunctionReturningThis","originalClass","func","esTreeNodeToTSNodeMap","get","body","classType","getTypeAtLocation","kind","ts","SyntaxKind","Block","thisType","hasReturnThis","hasReturnClassType","stmt","expr","expression","ThisKeyword","checkFunction","className","id","_a","returnType","node","typeAnnotation","report","messageId","fix","fixer","replaceText","value","parent","FunctionExpression","_b","ArrowFunctionExpression"],"sources":["../../src/rules/prefer-return-this-type.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}