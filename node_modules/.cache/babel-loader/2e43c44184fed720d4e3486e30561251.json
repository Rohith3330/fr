{"ast":null,"code":"let fs = require('fs/promises');\n\nlet {\n  spawn\n} = require('child_process');\n\nlet path = require('path');\n\nlet root = process.cwd();\n\nfunction npmInstall(cwd) {\n  return new Promise(resolve => {\n    let childProcess = spawn('npm', ['install'], {\n      cwd\n    });\n    childProcess.on('exit', resolve);\n  });\n}\n\nasync function install() {\n  let base = path.resolve(root, 'integrations');\n  let ignoreFolders = ['node_modules'];\n  let integrations = (await fs.readdir(base, {\n    withFileTypes: true\n  })).filter(integration => integration.isDirectory()).filter(integration => !ignoreFolders.includes(integration.name)).map(folder => path.resolve(base, folder.name)).concat([base]).map(integration => npmInstall(integration));\n  await Promise.all(integrations);\n  console.log('Done!');\n}\n\ninstall();","map":{"version":3,"names":["fs","require","spawn","path","root","process","cwd","npmInstall","Promise","resolve","childProcess","on","install","base","ignoreFolders","integrations","readdir","withFileTypes","filter","integration","isDirectory","includes","name","map","folder","concat","all","console","log"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/tailwindcss/scripts/install-integrations.js"],"sourcesContent":["let fs = require('fs/promises')\nlet { spawn } = require('child_process')\nlet path = require('path')\nlet root = process.cwd()\n\nfunction npmInstall(cwd) {\n  return new Promise((resolve) => {\n    let childProcess = spawn('npm', ['install'], { cwd })\n    childProcess.on('exit', resolve)\n  })\n}\n\nasync function install() {\n  let base = path.resolve(root, 'integrations')\n  let ignoreFolders = ['node_modules']\n  let integrations = (await fs.readdir(base, { withFileTypes: true }))\n    .filter((integration) => integration.isDirectory())\n    .filter((integration) => !ignoreFolders.includes(integration.name))\n    .map((folder) => path.resolve(base, folder.name))\n    .concat([base])\n    .map((integration) => npmInstall(integration))\n\n  await Promise.all(integrations)\n  console.log('Done!')\n}\n\ninstall()\n"],"mappings":"AAAA,IAAIA,EAAE,GAAGC,OAAO,CAAC,aAAD,CAAhB;;AACA,IAAI;EAAEC;AAAF,IAAYD,OAAO,CAAC,eAAD,CAAvB;;AACA,IAAIE,IAAI,GAAGF,OAAO,CAAC,MAAD,CAAlB;;AACA,IAAIG,IAAI,GAAGC,OAAO,CAACC,GAAR,EAAX;;AAEA,SAASC,UAAT,CAAoBD,GAApB,EAAyB;EACvB,OAAO,IAAIE,OAAJ,CAAaC,OAAD,IAAa;IAC9B,IAAIC,YAAY,GAAGR,KAAK,CAAC,KAAD,EAAQ,CAAC,SAAD,CAAR,EAAqB;MAAEI;IAAF,CAArB,CAAxB;IACAI,YAAY,CAACC,EAAb,CAAgB,MAAhB,EAAwBF,OAAxB;EACD,CAHM,CAAP;AAID;;AAED,eAAeG,OAAf,GAAyB;EACvB,IAAIC,IAAI,GAAGV,IAAI,CAACM,OAAL,CAAaL,IAAb,EAAmB,cAAnB,CAAX;EACA,IAAIU,aAAa,GAAG,CAAC,cAAD,CAApB;EACA,IAAIC,YAAY,GAAG,CAAC,MAAMf,EAAE,CAACgB,OAAH,CAAWH,IAAX,EAAiB;IAAEI,aAAa,EAAE;EAAjB,CAAjB,CAAP,EAChBC,MADgB,CACRC,WAAD,IAAiBA,WAAW,CAACC,WAAZ,EADR,EAEhBF,MAFgB,CAERC,WAAD,IAAiB,CAACL,aAAa,CAACO,QAAd,CAAuBF,WAAW,CAACG,IAAnC,CAFT,EAGhBC,GAHgB,CAGXC,MAAD,IAAYrB,IAAI,CAACM,OAAL,CAAaI,IAAb,EAAmBW,MAAM,CAACF,IAA1B,CAHA,EAIhBG,MAJgB,CAIT,CAACZ,IAAD,CAJS,EAKhBU,GALgB,CAKXJ,WAAD,IAAiBZ,UAAU,CAACY,WAAD,CALf,CAAnB;EAOA,MAAMX,OAAO,CAACkB,GAAR,CAAYX,YAAZ,CAAN;EACAY,OAAO,CAACC,GAAR,CAAY,OAAZ;AACD;;AAEDhB,OAAO"},"metadata":{},"sourceType":"script"}