{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nfunction getDef() {\n  return {\n    keyword: \"prohibited\",\n    type: \"object\",\n    schemaType: \"array\",\n    macro: function (schema) {\n      if (schema.length === 0) return true;\n      if (schema.length === 1) return {\n        not: {\n          required: schema\n        }\n      };\n      return {\n        not: {\n          anyOf: schema.map(p => ({\n            required: [p]\n          }))\n        }\n      };\n    },\n    metaSchema: {\n      type: \"array\",\n      items: {\n        type: \"string\"\n      }\n    }\n  };\n}\n\nexports.default = getDef;\nmodule.exports = getDef;","map":{"version":3,"mappings":";;;;;;AAEA,SAAwBA,MAAxB,GAA8B;EAC5B,OAAO;IACLC,OAAO,EAAE,YADJ;IAELC,IAAI,EAAE,QAFD;IAGLC,UAAU,EAAE,OAHP;IAILC,KAAK,EAAE,UAAUC,MAAV,EAA0B;MAC/B,IAAIA,MAAM,CAACC,MAAP,KAAkB,CAAtB,EAAyB,OAAO,IAAP;MACzB,IAAID,MAAM,CAACC,MAAP,KAAkB,CAAtB,EAAyB,OAAO;QAACC,GAAG,EAAE;UAACC,QAAQ,EAAEH;QAAX;MAAN,CAAP;MACzB,OAAO;QAACE,GAAG,EAAE;UAACE,KAAK,EAAEJ,MAAM,CAACK,GAAP,CAAYC,CAAD,KAAQ;YAACH,QAAQ,EAAE,CAACG,CAAD;UAAX,CAAR,CAAX;QAAR;MAAN,CAAP;IACD,CARI;IASLC,UAAU,EAAE;MACVV,IAAI,EAAE,OADI;MAEVW,KAAK,EAAE;QAACX,IAAI,EAAE;MAAP;IAFG;EATP,CAAP;AAcD;;AAfDY;AAiBAC,MAAM,CAACD,OAAP,GAAiBd,MAAjB","names":["getDef","keyword","type","schemaType","macro","schema","length","not","required","anyOf","map","p","metaSchema","items","exports","module"],"sources":["C:\\Users\\Rohith\\mern\\frontend\\node_modules\\mini-css-extract-plugin\\node_modules\\ajv-keywords\\src\\definitions\\prohibited.ts"],"sourcesContent":["import type {MacroKeywordDefinition} from \"ajv\"\n\nexport default function getDef(): MacroKeywordDefinition {\n  return {\n    keyword: \"prohibited\",\n    type: \"object\",\n    schemaType: \"array\",\n    macro: function (schema: string[]) {\n      if (schema.length === 0) return true\n      if (schema.length === 1) return {not: {required: schema}}\n      return {not: {anyOf: schema.map((p) => ({required: [p]}))}}\n    },\n    metaSchema: {\n      type: \"array\",\n      items: {type: \"string\"},\n    },\n  }\n}\n\nmodule.exports = getDef\n"]},"metadata":{},"sourceType":"script"}