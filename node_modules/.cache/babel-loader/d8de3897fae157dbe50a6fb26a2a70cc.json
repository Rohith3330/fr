{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _utils = require(\"./utils\");\n\nvar _default = (0, _utils.createRule)({\n  name: __filename,\n  meta: {\n    docs: {\n      category: 'Best Practices',\n      description: 'Suggest using `toBeCalledWith()` or `toHaveBeenCalledWith()`',\n      recommended: false\n    },\n    messages: {\n      preferCalledWith: 'Prefer {{name}}With(/* expected args */)'\n    },\n    type: 'suggestion',\n    schema: []\n  },\n  defaultOptions: [],\n\n  create(context) {\n    return {\n      CallExpression(node) {\n        if (!(0, _utils.isExpectCall)(node)) {\n          return;\n        }\n\n        const {\n          modifier,\n          matcher\n        } = (0, _utils.parseExpectCall)(node); // Could check resolves/rejects here but not a likely idiom.\n\n        if (matcher && !modifier) {\n          if (['toBeCalled', 'toHaveBeenCalled'].includes(matcher.name)) {\n            context.report({\n              data: {\n                name: matcher.name\n              },\n              // todo: rename to 'matcherName'\n              messageId: 'preferCalledWith',\n              node: matcher.node.property\n            });\n          }\n        }\n      }\n\n    };\n  }\n\n});\n\nexports.default = _default;","map":{"version":3,"names":["Object","defineProperty","exports","value","default","_utils","require","_default","createRule","name","__filename","meta","docs","category","description","recommended","messages","preferCalledWith","type","schema","defaultOptions","create","context","CallExpression","node","isExpectCall","modifier","matcher","parseExpectCall","includes","report","data","messageId","property"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/eslint-plugin-jest/lib/rules/prefer-called-with.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _utils = require(\"./utils\");\n\nvar _default = (0, _utils.createRule)({\n  name: __filename,\n  meta: {\n    docs: {\n      category: 'Best Practices',\n      description: 'Suggest using `toBeCalledWith()` or `toHaveBeenCalledWith()`',\n      recommended: false\n    },\n    messages: {\n      preferCalledWith: 'Prefer {{name}}With(/* expected args */)'\n    },\n    type: 'suggestion',\n    schema: []\n  },\n  defaultOptions: [],\n\n  create(context) {\n    return {\n      CallExpression(node) {\n        if (!(0, _utils.isExpectCall)(node)) {\n          return;\n        }\n\n        const {\n          modifier,\n          matcher\n        } = (0, _utils.parseExpectCall)(node); // Could check resolves/rejects here but not a likely idiom.\n\n        if (matcher && !modifier) {\n          if (['toBeCalled', 'toHaveBeenCalled'].includes(matcher.name)) {\n            context.report({\n              data: {\n                name: matcher.name\n              },\n              // todo: rename to 'matcherName'\n              messageId: 'preferCalledWith',\n              node: matcher.node.property\n            });\n          }\n        }\n      }\n\n    };\n  }\n\n});\n\nexports.default = _default;"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAC3CC,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAIC,MAAM,GAAGC,OAAO,CAAC,SAAD,CAApB;;AAEA,IAAIC,QAAQ,GAAG,CAAC,GAAGF,MAAM,CAACG,UAAX,EAAuB;EACpCC,IAAI,EAAEC,UAD8B;EAEpCC,IAAI,EAAE;IACJC,IAAI,EAAE;MACJC,QAAQ,EAAE,gBADN;MAEJC,WAAW,EAAE,8DAFT;MAGJC,WAAW,EAAE;IAHT,CADF;IAMJC,QAAQ,EAAE;MACRC,gBAAgB,EAAE;IADV,CANN;IASJC,IAAI,EAAE,YATF;IAUJC,MAAM,EAAE;EAVJ,CAF8B;EAcpCC,cAAc,EAAE,EAdoB;;EAgBpCC,MAAM,CAACC,OAAD,EAAU;IACd,OAAO;MACLC,cAAc,CAACC,IAAD,EAAO;QACnB,IAAI,CAAC,CAAC,GAAGnB,MAAM,CAACoB,YAAX,EAAyBD,IAAzB,CAAL,EAAqC;UACnC;QACD;;QAED,MAAM;UACJE,QADI;UAEJC;QAFI,IAGF,CAAC,GAAGtB,MAAM,CAACuB,eAAX,EAA4BJ,IAA5B,CAHJ,CALmB,CAQoB;;QAEvC,IAAIG,OAAO,IAAI,CAACD,QAAhB,EAA0B;UACxB,IAAI,CAAC,YAAD,EAAe,kBAAf,EAAmCG,QAAnC,CAA4CF,OAAO,CAAClB,IAApD,CAAJ,EAA+D;YAC7Da,OAAO,CAACQ,MAAR,CAAe;cACbC,IAAI,EAAE;gBACJtB,IAAI,EAAEkB,OAAO,CAAClB;cADV,CADO;cAIb;cACAuB,SAAS,EAAE,kBALE;cAMbR,IAAI,EAAEG,OAAO,CAACH,IAAR,CAAaS;YANN,CAAf;UAQD;QACF;MACF;;IAvBI,CAAP;EA0BD;;AA3CmC,CAAvB,CAAf;;AA+CA/B,OAAO,CAACE,OAAR,GAAkBG,QAAlB"},"metadata":{},"sourceType":"script"}