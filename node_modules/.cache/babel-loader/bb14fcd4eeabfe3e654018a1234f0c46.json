{"ast":null,"code":"'use strict';\n\nconst os = require('os');\n\nconst hasFlag = require('has-flag');\n\nconst env = process.env;\nlet forceColor;\n\nif (hasFlag('no-color') || hasFlag('no-colors') || hasFlag('color=false')) {\n  forceColor = false;\n} else if (hasFlag('color') || hasFlag('colors') || hasFlag('color=true') || hasFlag('color=always')) {\n  forceColor = true;\n}\n\nif ('FORCE_COLOR' in env) {\n  forceColor = env.FORCE_COLOR.length === 0 || parseInt(env.FORCE_COLOR, 10) !== 0;\n}\n\nfunction translateLevel(level) {\n  if (level === 0) {\n    return false;\n  }\n\n  return {\n    level,\n    hasBasic: true,\n    has256: level >= 2,\n    has16m: level >= 3\n  };\n}\n\nfunction supportsColor(stream) {\n  if (forceColor === false) {\n    return 0;\n  }\n\n  if (hasFlag('color=16m') || hasFlag('color=full') || hasFlag('color=truecolor')) {\n    return 3;\n  }\n\n  if (hasFlag('color=256')) {\n    return 2;\n  }\n\n  if (stream && !stream.isTTY && forceColor !== true) {\n    return 0;\n  }\n\n  const min = forceColor ? 1 : 0;\n\n  if (process.platform === 'win32') {\n    // Node.js 7.5.0 is the first version of Node.js to include a patch to\n    // libuv that enables 256 color output on Windows. Anything earlier and it\n    // won't work. However, here we target Node.js 8 at minimum as it is an LTS\n    // release, and Node.js 7 is not. Windows 10 build 10586 is the first Windows\n    // release that supports 256 colors. Windows 10 build 14931 is the first release\n    // that supports 16m/TrueColor.\n    const osRelease = os.release().split('.');\n\n    if (Number(process.versions.node.split('.')[0]) >= 8 && Number(osRelease[0]) >= 10 && Number(osRelease[2]) >= 10586) {\n      return Number(osRelease[2]) >= 14931 ? 3 : 2;\n    }\n\n    return 1;\n  }\n\n  if ('CI' in env) {\n    if (['TRAVIS', 'CIRCLECI', 'APPVEYOR', 'GITLAB_CI'].some(sign => sign in env) || env.CI_NAME === 'codeship') {\n      return 1;\n    }\n\n    return min;\n  }\n\n  if ('TEAMCITY_VERSION' in env) {\n    return /^(9\\.(0*[1-9]\\d*)\\.|\\d{2,}\\.)/.test(env.TEAMCITY_VERSION) ? 1 : 0;\n  }\n\n  if (env.COLORTERM === 'truecolor') {\n    return 3;\n  }\n\n  if ('TERM_PROGRAM' in env) {\n    const version = parseInt((env.TERM_PROGRAM_VERSION || '').split('.')[0], 10);\n\n    switch (env.TERM_PROGRAM) {\n      case 'iTerm.app':\n        return version >= 3 ? 3 : 2;\n\n      case 'Apple_Terminal':\n        return 2;\n      // No default\n    }\n  }\n\n  if (/-256(color)?$/i.test(env.TERM)) {\n    return 2;\n  }\n\n  if (/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(env.TERM)) {\n    return 1;\n  }\n\n  if ('COLORTERM' in env) {\n    return 1;\n  }\n\n  if (env.TERM === 'dumb') {\n    return min;\n  }\n\n  return min;\n}\n\nfunction getSupportLevel(stream) {\n  const level = supportsColor(stream);\n  return translateLevel(level);\n}\n\nmodule.exports = {\n  supportsColor: getSupportLevel,\n  stdout: getSupportLevel(process.stdout),\n  stderr: getSupportLevel(process.stderr)\n};","map":{"version":3,"names":["os","require","hasFlag","env","process","forceColor","FORCE_COLOR","length","parseInt","translateLevel","level","hasBasic","has256","has16m","supportsColor","stream","isTTY","min","platform","osRelease","release","split","Number","versions","node","some","sign","CI_NAME","test","TEAMCITY_VERSION","COLORTERM","version","TERM_PROGRAM_VERSION","TERM_PROGRAM","TERM","getSupportLevel","module","exports","stdout","stderr"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/supports-color/index.js"],"sourcesContent":["'use strict';\nconst os = require('os');\nconst hasFlag = require('has-flag');\n\nconst env = process.env;\n\nlet forceColor;\nif (hasFlag('no-color') ||\n\thasFlag('no-colors') ||\n\thasFlag('color=false')) {\n\tforceColor = false;\n} else if (hasFlag('color') ||\n\thasFlag('colors') ||\n\thasFlag('color=true') ||\n\thasFlag('color=always')) {\n\tforceColor = true;\n}\nif ('FORCE_COLOR' in env) {\n\tforceColor = env.FORCE_COLOR.length === 0 || parseInt(env.FORCE_COLOR, 10) !== 0;\n}\n\nfunction translateLevel(level) {\n\tif (level === 0) {\n\t\treturn false;\n\t}\n\n\treturn {\n\t\tlevel,\n\t\thasBasic: true,\n\t\thas256: level >= 2,\n\t\thas16m: level >= 3\n\t};\n}\n\nfunction supportsColor(stream) {\n\tif (forceColor === false) {\n\t\treturn 0;\n\t}\n\n\tif (hasFlag('color=16m') ||\n\t\thasFlag('color=full') ||\n\t\thasFlag('color=truecolor')) {\n\t\treturn 3;\n\t}\n\n\tif (hasFlag('color=256')) {\n\t\treturn 2;\n\t}\n\n\tif (stream && !stream.isTTY && forceColor !== true) {\n\t\treturn 0;\n\t}\n\n\tconst min = forceColor ? 1 : 0;\n\n\tif (process.platform === 'win32') {\n\t\t// Node.js 7.5.0 is the first version of Node.js to include a patch to\n\t\t// libuv that enables 256 color output on Windows. Anything earlier and it\n\t\t// won't work. However, here we target Node.js 8 at minimum as it is an LTS\n\t\t// release, and Node.js 7 is not. Windows 10 build 10586 is the first Windows\n\t\t// release that supports 256 colors. Windows 10 build 14931 is the first release\n\t\t// that supports 16m/TrueColor.\n\t\tconst osRelease = os.release().split('.');\n\t\tif (\n\t\t\tNumber(process.versions.node.split('.')[0]) >= 8 &&\n\t\t\tNumber(osRelease[0]) >= 10 &&\n\t\t\tNumber(osRelease[2]) >= 10586\n\t\t) {\n\t\t\treturn Number(osRelease[2]) >= 14931 ? 3 : 2;\n\t\t}\n\n\t\treturn 1;\n\t}\n\n\tif ('CI' in env) {\n\t\tif (['TRAVIS', 'CIRCLECI', 'APPVEYOR', 'GITLAB_CI'].some(sign => sign in env) || env.CI_NAME === 'codeship') {\n\t\t\treturn 1;\n\t\t}\n\n\t\treturn min;\n\t}\n\n\tif ('TEAMCITY_VERSION' in env) {\n\t\treturn /^(9\\.(0*[1-9]\\d*)\\.|\\d{2,}\\.)/.test(env.TEAMCITY_VERSION) ? 1 : 0;\n\t}\n\n\tif (env.COLORTERM === 'truecolor') {\n\t\treturn 3;\n\t}\n\n\tif ('TERM_PROGRAM' in env) {\n\t\tconst version = parseInt((env.TERM_PROGRAM_VERSION || '').split('.')[0], 10);\n\n\t\tswitch (env.TERM_PROGRAM) {\n\t\t\tcase 'iTerm.app':\n\t\t\t\treturn version >= 3 ? 3 : 2;\n\t\t\tcase 'Apple_Terminal':\n\t\t\t\treturn 2;\n\t\t\t// No default\n\t\t}\n\t}\n\n\tif (/-256(color)?$/i.test(env.TERM)) {\n\t\treturn 2;\n\t}\n\n\tif (/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(env.TERM)) {\n\t\treturn 1;\n\t}\n\n\tif ('COLORTERM' in env) {\n\t\treturn 1;\n\t}\n\n\tif (env.TERM === 'dumb') {\n\t\treturn min;\n\t}\n\n\treturn min;\n}\n\nfunction getSupportLevel(stream) {\n\tconst level = supportsColor(stream);\n\treturn translateLevel(level);\n}\n\nmodule.exports = {\n\tsupportsColor: getSupportLevel,\n\tstdout: getSupportLevel(process.stdout),\n\tstderr: getSupportLevel(process.stderr)\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}