{"ast":null,"code":"var canReorderSingle = require('./reorderable').canReorderSingle;\n\nvar extractProperties = require('./extract-properties');\n\nvar isMergeable = require('./is-mergeable');\n\nvar tidyRuleDuplicates = require('./tidy-rule-duplicates');\n\nvar Token = require('../../tokenizer/token');\n\nvar cloneArray = require('../../utils/clone-array');\n\nvar serializeBody = require('../../writer/one-time').body;\n\nvar serializeRules = require('../../writer/one-time').rules;\n\nfunction naturalSorter(a, b) {\n  return a > b ? 1 : -1;\n}\n\nfunction cloneAndMergeSelectors(propertyA, propertyB) {\n  var cloned = cloneArray(propertyA);\n  cloned[5] = cloned[5].concat(propertyB[5]);\n  return cloned;\n}\n\nfunction restructure(tokens, context) {\n  var options = context.options;\n  var mergeablePseudoClasses = options.compatibility.selectors.mergeablePseudoClasses;\n  var mergeablePseudoElements = options.compatibility.selectors.mergeablePseudoElements;\n  var mergeLimit = options.compatibility.selectors.mergeLimit;\n  var multiplePseudoMerging = options.compatibility.selectors.multiplePseudoMerging;\n  var specificityCache = context.cache.specificity;\n  var movableTokens = {};\n  var movedProperties = [];\n  var multiPropertyMoveCache = {};\n  var movedToBeDropped = [];\n  var maxCombinationsLevel = 2;\n  var ID_JOIN_CHARACTER = '%';\n\n  function sendToMultiPropertyMoveCache(position, movedProperty, allFits) {\n    for (var i = allFits.length - 1; i >= 0; i--) {\n      var fit = allFits[i][0];\n      var id = addToCache(movedProperty, fit);\n\n      if (multiPropertyMoveCache[id].length > 1 && processMultiPropertyMove(position, multiPropertyMoveCache[id])) {\n        removeAllMatchingFromCache(id);\n        break;\n      }\n    }\n  }\n\n  function addToCache(movedProperty, fit) {\n    var id = cacheId(fit);\n    multiPropertyMoveCache[id] = multiPropertyMoveCache[id] || [];\n    multiPropertyMoveCache[id].push([movedProperty, fit]);\n    return id;\n  }\n\n  function removeAllMatchingFromCache(matchId) {\n    var matchSelectors = matchId.split(ID_JOIN_CHARACTER);\n    var forRemoval = [];\n    var i;\n\n    for (var id in multiPropertyMoveCache) {\n      var selectors = id.split(ID_JOIN_CHARACTER);\n\n      for (i = selectors.length - 1; i >= 0; i--) {\n        if (matchSelectors.indexOf(selectors[i]) > -1) {\n          forRemoval.push(id);\n          break;\n        }\n      }\n    }\n\n    for (i = forRemoval.length - 1; i >= 0; i--) {\n      delete multiPropertyMoveCache[forRemoval[i]];\n    }\n  }\n\n  function cacheId(cachedTokens) {\n    var id = [];\n\n    for (var i = 0, l = cachedTokens.length; i < l; i++) {\n      id.push(serializeRules(cachedTokens[i][1]));\n    }\n\n    return id.join(ID_JOIN_CHARACTER);\n  }\n\n  function tokensToMerge(sourceTokens) {\n    var uniqueTokensWithBody = [];\n    var mergeableTokens = [];\n\n    for (var i = sourceTokens.length - 1; i >= 0; i--) {\n      if (!isMergeable(serializeRules(sourceTokens[i][1]), mergeablePseudoClasses, mergeablePseudoElements, multiplePseudoMerging)) {\n        continue;\n      }\n\n      mergeableTokens.unshift(sourceTokens[i]);\n\n      if (sourceTokens[i][2].length > 0 && uniqueTokensWithBody.indexOf(sourceTokens[i]) == -1) {\n        uniqueTokensWithBody.push(sourceTokens[i]);\n      }\n    }\n\n    return uniqueTokensWithBody.length > 1 ? mergeableTokens : [];\n  }\n\n  function shortenIfPossible(position, movedProperty) {\n    var name = movedProperty[0];\n    var value = movedProperty[1];\n    var key = movedProperty[4];\n    var valueSize = name.length + value.length + 1;\n    var allSelectors = [];\n    var qualifiedTokens = [];\n    var mergeableTokens = tokensToMerge(movableTokens[key]);\n\n    if (mergeableTokens.length < 2) {\n      return;\n    }\n\n    var allFits = findAllFits(mergeableTokens, valueSize, 1);\n    var bestFit = allFits[0];\n\n    if (bestFit[1] > 0) {\n      return sendToMultiPropertyMoveCache(position, movedProperty, allFits);\n    }\n\n    for (var i = bestFit[0].length - 1; i >= 0; i--) {\n      allSelectors = bestFit[0][i][1].concat(allSelectors);\n      qualifiedTokens.unshift(bestFit[0][i]);\n    }\n\n    allSelectors = tidyRuleDuplicates(allSelectors);\n    dropAsNewTokenAt(position, [movedProperty], allSelectors, qualifiedTokens);\n  }\n\n  function fitSorter(fit1, fit2) {\n    return fit1[1] > fit2[1] ? 1 : fit1[1] == fit2[1] ? 0 : -1;\n  }\n\n  function findAllFits(mergeableTokens, propertySize, propertiesCount) {\n    var combinations = allCombinations(mergeableTokens, propertySize, propertiesCount, maxCombinationsLevel - 1);\n    return combinations.sort(fitSorter);\n  }\n\n  function allCombinations(tokensVariant, propertySize, propertiesCount, level) {\n    var differenceVariants = [[tokensVariant, sizeDifference(tokensVariant, propertySize, propertiesCount)]];\n\n    if (tokensVariant.length > 2 && level > 0) {\n      for (var i = tokensVariant.length - 1; i >= 0; i--) {\n        var subVariant = Array.prototype.slice.call(tokensVariant, 0);\n        subVariant.splice(i, 1);\n        differenceVariants = differenceVariants.concat(allCombinations(subVariant, propertySize, propertiesCount, level - 1));\n      }\n    }\n\n    return differenceVariants;\n  }\n\n  function sizeDifference(tokensVariant, propertySize, propertiesCount) {\n    var allSelectorsSize = 0;\n\n    for (var i = tokensVariant.length - 1; i >= 0; i--) {\n      allSelectorsSize += tokensVariant[i][2].length > propertiesCount ? serializeRules(tokensVariant[i][1]).length : -1;\n    }\n\n    return allSelectorsSize - (tokensVariant.length - 1) * propertySize + 1;\n  }\n\n  function dropAsNewTokenAt(position, properties, allSelectors, mergeableTokens) {\n    var i, j, k, m;\n    var allProperties = [];\n\n    for (i = mergeableTokens.length - 1; i >= 0; i--) {\n      var mergeableToken = mergeableTokens[i];\n\n      for (j = mergeableToken[2].length - 1; j >= 0; j--) {\n        var mergeableProperty = mergeableToken[2][j];\n\n        for (k = 0, m = properties.length; k < m; k++) {\n          var property = properties[k];\n          var mergeablePropertyName = mergeableProperty[1][1];\n          var propertyName = property[0];\n          var propertyBody = property[4];\n\n          if (mergeablePropertyName == propertyName && serializeBody([mergeableProperty]) == propertyBody) {\n            mergeableToken[2].splice(j, 1);\n            break;\n          }\n        }\n      }\n    }\n\n    for (i = properties.length - 1; i >= 0; i--) {\n      allProperties.unshift(properties[i][3]);\n    }\n\n    var newToken = [Token.RULE, allSelectors, allProperties];\n    tokens.splice(position, 0, newToken);\n  }\n\n  function dropPropertiesAt(position, movedProperty) {\n    var key = movedProperty[4];\n    var toMove = movableTokens[key];\n\n    if (toMove && toMove.length > 1) {\n      if (!shortenMultiMovesIfPossible(position, movedProperty)) {\n        shortenIfPossible(position, movedProperty);\n      }\n    }\n  }\n\n  function shortenMultiMovesIfPossible(position, movedProperty) {\n    var candidates = [];\n    var propertiesAndMergableTokens = [];\n    var key = movedProperty[4];\n    var j, k;\n    var mergeableTokens = tokensToMerge(movableTokens[key]);\n\n    if (mergeableTokens.length < 2) {\n      return;\n    }\n\n    movableLoop: for (var value in movableTokens) {\n      var tokensList = movableTokens[value];\n\n      for (j = mergeableTokens.length - 1; j >= 0; j--) {\n        if (tokensList.indexOf(mergeableTokens[j]) == -1) {\n          continue movableLoop;\n        }\n      }\n\n      candidates.push(value);\n    }\n\n    if (candidates.length < 2) {\n      return false;\n    }\n\n    for (j = candidates.length - 1; j >= 0; j--) {\n      for (k = movedProperties.length - 1; k >= 0; k--) {\n        if (movedProperties[k][4] == candidates[j]) {\n          propertiesAndMergableTokens.unshift([movedProperties[k], mergeableTokens]);\n          break;\n        }\n      }\n    }\n\n    return processMultiPropertyMove(position, propertiesAndMergableTokens);\n  }\n\n  function processMultiPropertyMove(position, propertiesAndMergableTokens) {\n    var valueSize = 0;\n    var properties = [];\n    var property;\n\n    for (var i = propertiesAndMergableTokens.length - 1; i >= 0; i--) {\n      property = propertiesAndMergableTokens[i][0];\n      var fullValue = property[4];\n      valueSize += fullValue.length + (i > 0 ? 1 : 0);\n      properties.push(property);\n    }\n\n    var mergeableTokens = propertiesAndMergableTokens[0][1];\n    var bestFit = findAllFits(mergeableTokens, valueSize, properties.length)[0];\n\n    if (bestFit[1] > 0) {\n      return false;\n    }\n\n    var allSelectors = [];\n    var qualifiedTokens = [];\n\n    for (i = bestFit[0].length - 1; i >= 0; i--) {\n      allSelectors = bestFit[0][i][1].concat(allSelectors);\n      qualifiedTokens.unshift(bestFit[0][i]);\n    }\n\n    allSelectors = tidyRuleDuplicates(allSelectors);\n    dropAsNewTokenAt(position, properties, allSelectors, qualifiedTokens);\n\n    for (i = properties.length - 1; i >= 0; i--) {\n      property = properties[i];\n      var index = movedProperties.indexOf(property);\n      delete movableTokens[property[4]];\n\n      if (index > -1 && movedToBeDropped.indexOf(index) == -1) {\n        movedToBeDropped.push(index);\n      }\n    }\n\n    return true;\n  }\n\n  function boundToAnotherPropertyInCurrrentToken(property, movedProperty, token) {\n    var propertyName = property[0];\n    var movedPropertyName = movedProperty[0];\n\n    if (propertyName != movedPropertyName) {\n      return false;\n    }\n\n    var key = movedProperty[4];\n    var toMove = movableTokens[key];\n    return toMove && toMove.indexOf(token) > -1;\n  }\n\n  for (var i = tokens.length - 1; i >= 0; i--) {\n    var token = tokens[i];\n    var isRule;\n    var j, k, m;\n    var samePropertyAt;\n\n    if (token[0] == Token.RULE) {\n      isRule = true;\n    } else if (token[0] == Token.NESTED_BLOCK) {\n      isRule = false;\n    } else {\n      continue;\n    } // We cache movedProperties.length as it may change in the loop\n\n\n    var movedCount = movedProperties.length;\n    var properties = extractProperties(token);\n    movedToBeDropped = [];\n    var unmovableInCurrentToken = [];\n\n    for (j = properties.length - 1; j >= 0; j--) {\n      for (k = j - 1; k >= 0; k--) {\n        if (!canReorderSingle(properties[j], properties[k], specificityCache)) {\n          unmovableInCurrentToken.push(j);\n          break;\n        }\n      }\n    }\n\n    for (j = properties.length - 1; j >= 0; j--) {\n      var property = properties[j];\n      var movedSameProperty = false;\n\n      for (k = 0; k < movedCount; k++) {\n        var movedProperty = movedProperties[k];\n\n        if (movedToBeDropped.indexOf(k) == -1 && (!canReorderSingle(property, movedProperty, specificityCache) && !boundToAnotherPropertyInCurrrentToken(property, movedProperty, token) || movableTokens[movedProperty[4]] && movableTokens[movedProperty[4]].length === mergeLimit)) {\n          dropPropertiesAt(i + 1, movedProperty);\n\n          if (movedToBeDropped.indexOf(k) == -1) {\n            movedToBeDropped.push(k);\n            delete movableTokens[movedProperty[4]];\n          }\n        }\n\n        if (!movedSameProperty) {\n          movedSameProperty = property[0] == movedProperty[0] && property[1] == movedProperty[1];\n\n          if (movedSameProperty) {\n            samePropertyAt = k;\n          }\n        }\n      }\n\n      if (!isRule || unmovableInCurrentToken.indexOf(j) > -1) {\n        continue;\n      }\n\n      var key = property[4];\n\n      if (movedSameProperty && movedProperties[samePropertyAt][5].length + property[5].length > mergeLimit) {\n        dropPropertiesAt(i + 1, movedProperties[samePropertyAt]);\n        movedProperties.splice(samePropertyAt, 1);\n        movableTokens[key] = [token];\n        movedSameProperty = false;\n      } else {\n        movableTokens[key] = movableTokens[key] || [];\n        movableTokens[key].push(token);\n      }\n\n      if (movedSameProperty) {\n        movedProperties[samePropertyAt] = cloneAndMergeSelectors(movedProperties[samePropertyAt], property);\n      } else {\n        movedProperties.push(property);\n      }\n    }\n\n    movedToBeDropped = movedToBeDropped.sort(naturalSorter);\n\n    for (j = 0, m = movedToBeDropped.length; j < m; j++) {\n      var dropAt = movedToBeDropped[j] - j;\n      movedProperties.splice(dropAt, 1);\n    }\n  }\n\n  var position = tokens[0] && tokens[0][0] == Token.AT_RULE && tokens[0][1].indexOf('@charset') === 0 ? 1 : 0;\n\n  for (; position < tokens.length - 1; position++) {\n    var isImportRule = tokens[position][0] === Token.AT_RULE && tokens[position][1].indexOf('@import') === 0;\n    var isComment = tokens[position][0] === Token.COMMENT;\n\n    if (!(isImportRule || isComment)) {\n      break;\n    }\n  }\n\n  for (i = 0; i < movedProperties.length; i++) {\n    dropPropertiesAt(position, movedProperties[i]);\n  }\n}\n\nmodule.exports = restructure;","map":{"version":3,"names":["canReorderSingle","require","extractProperties","isMergeable","tidyRuleDuplicates","Token","cloneArray","serializeBody","body","serializeRules","rules","naturalSorter","a","b","cloneAndMergeSelectors","propertyA","propertyB","cloned","concat","restructure","tokens","context","options","mergeablePseudoClasses","compatibility","selectors","mergeablePseudoElements","mergeLimit","multiplePseudoMerging","specificityCache","cache","specificity","movableTokens","movedProperties","multiPropertyMoveCache","movedToBeDropped","maxCombinationsLevel","ID_JOIN_CHARACTER","sendToMultiPropertyMoveCache","position","movedProperty","allFits","i","length","fit","id","addToCache","processMultiPropertyMove","removeAllMatchingFromCache","cacheId","push","matchId","matchSelectors","split","forRemoval","indexOf","cachedTokens","l","join","tokensToMerge","sourceTokens","uniqueTokensWithBody","mergeableTokens","unshift","shortenIfPossible","name","value","key","valueSize","allSelectors","qualifiedTokens","findAllFits","bestFit","dropAsNewTokenAt","fitSorter","fit1","fit2","propertySize","propertiesCount","combinations","allCombinations","sort","tokensVariant","level","differenceVariants","sizeDifference","subVariant","Array","prototype","slice","call","splice","allSelectorsSize","properties","j","k","m","allProperties","mergeableToken","mergeableProperty","property","mergeablePropertyName","propertyName","propertyBody","newToken","RULE","dropPropertiesAt","toMove","shortenMultiMovesIfPossible","candidates","propertiesAndMergableTokens","movableLoop","tokensList","fullValue","index","boundToAnotherPropertyInCurrrentToken","token","movedPropertyName","isRule","samePropertyAt","NESTED_BLOCK","movedCount","unmovableInCurrentToken","movedSameProperty","dropAt","AT_RULE","isImportRule","isComment","COMMENT","module","exports"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/clean-css/lib/optimizer/level-2/restructure.js"],"sourcesContent":["var canReorderSingle = require('./reorderable').canReorderSingle;\nvar extractProperties = require('./extract-properties');\nvar isMergeable = require('./is-mergeable');\nvar tidyRuleDuplicates = require('./tidy-rule-duplicates');\n\nvar Token = require('../../tokenizer/token');\n\nvar cloneArray = require('../../utils/clone-array');\n\nvar serializeBody = require('../../writer/one-time').body;\nvar serializeRules = require('../../writer/one-time').rules;\n\nfunction naturalSorter(a, b) {\n  return a > b ? 1 : -1;\n}\n\nfunction cloneAndMergeSelectors(propertyA, propertyB) {\n  var cloned = cloneArray(propertyA);\n  cloned[5] = cloned[5].concat(propertyB[5]);\n\n  return cloned;\n}\n\nfunction restructure(tokens, context) {\n  var options = context.options;\n  var mergeablePseudoClasses = options.compatibility.selectors.mergeablePseudoClasses;\n  var mergeablePseudoElements = options.compatibility.selectors.mergeablePseudoElements;\n  var mergeLimit = options.compatibility.selectors.mergeLimit;\n  var multiplePseudoMerging = options.compatibility.selectors.multiplePseudoMerging;\n  var specificityCache = context.cache.specificity;\n  var movableTokens = {};\n  var movedProperties = [];\n  var multiPropertyMoveCache = {};\n  var movedToBeDropped = [];\n  var maxCombinationsLevel = 2;\n  var ID_JOIN_CHARACTER = '%';\n\n  function sendToMultiPropertyMoveCache(position, movedProperty, allFits) {\n    for (var i = allFits.length - 1; i >= 0; i--) {\n      var fit = allFits[i][0];\n      var id = addToCache(movedProperty, fit);\n\n      if (multiPropertyMoveCache[id].length > 1 && processMultiPropertyMove(position, multiPropertyMoveCache[id])) {\n        removeAllMatchingFromCache(id);\n        break;\n      }\n    }\n  }\n\n  function addToCache(movedProperty, fit) {\n    var id = cacheId(fit);\n    multiPropertyMoveCache[id] = multiPropertyMoveCache[id] || [];\n    multiPropertyMoveCache[id].push([movedProperty, fit]);\n    return id;\n  }\n\n  function removeAllMatchingFromCache(matchId) {\n    var matchSelectors = matchId.split(ID_JOIN_CHARACTER);\n    var forRemoval = [];\n    var i;\n\n    for (var id in multiPropertyMoveCache) {\n      var selectors = id.split(ID_JOIN_CHARACTER);\n      for (i = selectors.length - 1; i >= 0; i--) {\n        if (matchSelectors.indexOf(selectors[i]) > -1) {\n          forRemoval.push(id);\n          break;\n        }\n      }\n    }\n\n    for (i = forRemoval.length - 1; i >= 0; i--) {\n      delete multiPropertyMoveCache[forRemoval[i]];\n    }\n  }\n\n  function cacheId(cachedTokens) {\n    var id = [];\n    for (var i = 0, l = cachedTokens.length; i < l; i++) {\n      id.push(serializeRules(cachedTokens[i][1]));\n    }\n    return id.join(ID_JOIN_CHARACTER);\n  }\n\n  function tokensToMerge(sourceTokens) {\n    var uniqueTokensWithBody = [];\n    var mergeableTokens = [];\n\n    for (var i = sourceTokens.length - 1; i >= 0; i--) {\n      if (!isMergeable(\n        serializeRules(sourceTokens[i][1]),\n        mergeablePseudoClasses,\n        mergeablePseudoElements,\n        multiplePseudoMerging\n      )) {\n        continue;\n      }\n\n      mergeableTokens.unshift(sourceTokens[i]);\n      if (sourceTokens[i][2].length > 0\n        && uniqueTokensWithBody.indexOf(sourceTokens[i]) == -1) {\n        uniqueTokensWithBody.push(sourceTokens[i]);\n      }\n    }\n\n    return uniqueTokensWithBody.length > 1\n      ? mergeableTokens\n      : [];\n  }\n\n  function shortenIfPossible(position, movedProperty) {\n    var name = movedProperty[0];\n    var value = movedProperty[1];\n    var key = movedProperty[4];\n    var valueSize = name.length + value.length + 1;\n    var allSelectors = [];\n    var qualifiedTokens = [];\n\n    var mergeableTokens = tokensToMerge(movableTokens[key]);\n    if (mergeableTokens.length < 2) { return; }\n\n    var allFits = findAllFits(mergeableTokens, valueSize, 1);\n    var bestFit = allFits[0];\n    if (bestFit[1] > 0) { return sendToMultiPropertyMoveCache(position, movedProperty, allFits); }\n\n    for (var i = bestFit[0].length - 1; i >= 0; i--) {\n      allSelectors = bestFit[0][i][1].concat(allSelectors);\n      qualifiedTokens.unshift(bestFit[0][i]);\n    }\n\n    allSelectors = tidyRuleDuplicates(allSelectors);\n    dropAsNewTokenAt(position, [movedProperty], allSelectors, qualifiedTokens);\n  }\n\n  function fitSorter(fit1, fit2) {\n    return fit1[1] > fit2[1] ? 1 : (fit1[1] == fit2[1] ? 0 : -1);\n  }\n\n  function findAllFits(mergeableTokens, propertySize, propertiesCount) {\n    var combinations = allCombinations(mergeableTokens, propertySize, propertiesCount, maxCombinationsLevel - 1);\n    return combinations.sort(fitSorter);\n  }\n\n  function allCombinations(tokensVariant, propertySize, propertiesCount, level) {\n    var differenceVariants = [[tokensVariant, sizeDifference(tokensVariant, propertySize, propertiesCount)]];\n    if (tokensVariant.length > 2 && level > 0) {\n      for (var i = tokensVariant.length - 1; i >= 0; i--) {\n        var subVariant = Array.prototype.slice.call(tokensVariant, 0);\n        subVariant.splice(i, 1);\n        differenceVariants = differenceVariants.concat(\n          allCombinations(subVariant, propertySize, propertiesCount, level - 1)\n        );\n      }\n    }\n\n    return differenceVariants;\n  }\n\n  function sizeDifference(tokensVariant, propertySize, propertiesCount) {\n    var allSelectorsSize = 0;\n    for (var i = tokensVariant.length - 1; i >= 0; i--) {\n      allSelectorsSize += tokensVariant[i][2].length > propertiesCount\n        ? serializeRules(tokensVariant[i][1]).length\n        : -1;\n    }\n    return allSelectorsSize - (tokensVariant.length - 1) * propertySize + 1;\n  }\n\n  function dropAsNewTokenAt(position, properties, allSelectors, mergeableTokens) {\n    var i, j, k, m;\n    var allProperties = [];\n\n    for (i = mergeableTokens.length - 1; i >= 0; i--) {\n      var mergeableToken = mergeableTokens[i];\n\n      for (j = mergeableToken[2].length - 1; j >= 0; j--) {\n        var mergeableProperty = mergeableToken[2][j];\n\n        for (k = 0, m = properties.length; k < m; k++) {\n          var property = properties[k];\n\n          var mergeablePropertyName = mergeableProperty[1][1];\n          var propertyName = property[0];\n          var propertyBody = property[4];\n          if (mergeablePropertyName == propertyName && serializeBody([mergeableProperty]) == propertyBody) {\n            mergeableToken[2].splice(j, 1);\n            break;\n          }\n        }\n      }\n    }\n\n    for (i = properties.length - 1; i >= 0; i--) {\n      allProperties.unshift(properties[i][3]);\n    }\n\n    var newToken = [Token.RULE, allSelectors, allProperties];\n    tokens.splice(position, 0, newToken);\n  }\n\n  function dropPropertiesAt(position, movedProperty) {\n    var key = movedProperty[4];\n    var toMove = movableTokens[key];\n\n    if (toMove && toMove.length > 1) {\n      if (!shortenMultiMovesIfPossible(position, movedProperty)) { shortenIfPossible(position, movedProperty); }\n    }\n  }\n\n  function shortenMultiMovesIfPossible(position, movedProperty) {\n    var candidates = [];\n    var propertiesAndMergableTokens = [];\n    var key = movedProperty[4];\n    var j, k;\n\n    var mergeableTokens = tokensToMerge(movableTokens[key]);\n    if (mergeableTokens.length < 2) { return; }\n\n    movableLoop:\n    for (var value in movableTokens) {\n      var tokensList = movableTokens[value];\n\n      for (j = mergeableTokens.length - 1; j >= 0; j--) {\n        if (tokensList.indexOf(mergeableTokens[j]) == -1) { continue movableLoop; }\n      }\n\n      candidates.push(value);\n    }\n\n    if (candidates.length < 2) { return false; }\n\n    for (j = candidates.length - 1; j >= 0; j--) {\n      for (k = movedProperties.length - 1; k >= 0; k--) {\n        if (movedProperties[k][4] == candidates[j]) {\n          propertiesAndMergableTokens.unshift([movedProperties[k], mergeableTokens]);\n          break;\n        }\n      }\n    }\n\n    return processMultiPropertyMove(position, propertiesAndMergableTokens);\n  }\n\n  function processMultiPropertyMove(position, propertiesAndMergableTokens) {\n    var valueSize = 0;\n    var properties = [];\n    var property;\n\n    for (var i = propertiesAndMergableTokens.length - 1; i >= 0; i--) {\n      property = propertiesAndMergableTokens[i][0];\n      var fullValue = property[4];\n      valueSize += fullValue.length + (i > 0 ? 1 : 0);\n\n      properties.push(property);\n    }\n\n    var mergeableTokens = propertiesAndMergableTokens[0][1];\n    var bestFit = findAllFits(mergeableTokens, valueSize, properties.length)[0];\n    if (bestFit[1] > 0) { return false; }\n\n    var allSelectors = [];\n    var qualifiedTokens = [];\n    for (i = bestFit[0].length - 1; i >= 0; i--) {\n      allSelectors = bestFit[0][i][1].concat(allSelectors);\n      qualifiedTokens.unshift(bestFit[0][i]);\n    }\n\n    allSelectors = tidyRuleDuplicates(allSelectors);\n    dropAsNewTokenAt(position, properties, allSelectors, qualifiedTokens);\n\n    for (i = properties.length - 1; i >= 0; i--) {\n      property = properties[i];\n      var index = movedProperties.indexOf(property);\n\n      delete movableTokens[property[4]];\n\n      if (index > -1 && movedToBeDropped.indexOf(index) == -1) { movedToBeDropped.push(index); }\n    }\n\n    return true;\n  }\n\n  function boundToAnotherPropertyInCurrrentToken(property, movedProperty, token) {\n    var propertyName = property[0];\n    var movedPropertyName = movedProperty[0];\n    if (propertyName != movedPropertyName) { return false; }\n\n    var key = movedProperty[4];\n    var toMove = movableTokens[key];\n    return toMove && toMove.indexOf(token) > -1;\n  }\n\n  for (var i = tokens.length - 1; i >= 0; i--) {\n    var token = tokens[i];\n    var isRule;\n    var j, k, m;\n    var samePropertyAt;\n\n    if (token[0] == Token.RULE) {\n      isRule = true;\n    } else if (token[0] == Token.NESTED_BLOCK) {\n      isRule = false;\n    } else {\n      continue;\n    }\n\n    // We cache movedProperties.length as it may change in the loop\n    var movedCount = movedProperties.length;\n\n    var properties = extractProperties(token);\n    movedToBeDropped = [];\n\n    var unmovableInCurrentToken = [];\n    for (j = properties.length - 1; j >= 0; j--) {\n      for (k = j - 1; k >= 0; k--) {\n        if (!canReorderSingle(properties[j], properties[k], specificityCache)) {\n          unmovableInCurrentToken.push(j);\n          break;\n        }\n      }\n    }\n\n    for (j = properties.length - 1; j >= 0; j--) {\n      var property = properties[j];\n      var movedSameProperty = false;\n\n      for (k = 0; k < movedCount; k++) {\n        var movedProperty = movedProperties[k];\n\n        if (movedToBeDropped.indexOf(k) == -1 && (\n          !canReorderSingle(property, movedProperty, specificityCache)\n          && !boundToAnotherPropertyInCurrrentToken(property, movedProperty, token)\n          || movableTokens[movedProperty[4]] && movableTokens[movedProperty[4]].length === mergeLimit)\n        ) {\n          dropPropertiesAt(i + 1, movedProperty);\n\n          if (movedToBeDropped.indexOf(k) == -1) {\n            movedToBeDropped.push(k);\n            delete movableTokens[movedProperty[4]];\n          }\n        }\n\n        if (!movedSameProperty) {\n          movedSameProperty = property[0] == movedProperty[0] && property[1] == movedProperty[1];\n\n          if (movedSameProperty) {\n            samePropertyAt = k;\n          }\n        }\n      }\n\n      if (!isRule || unmovableInCurrentToken.indexOf(j) > -1) { continue; }\n\n      var key = property[4];\n\n      if (movedSameProperty && movedProperties[samePropertyAt][5].length + property[5].length > mergeLimit) {\n        dropPropertiesAt(i + 1, movedProperties[samePropertyAt]);\n        movedProperties.splice(samePropertyAt, 1);\n        movableTokens[key] = [token];\n        movedSameProperty = false;\n      } else {\n        movableTokens[key] = movableTokens[key] || [];\n        movableTokens[key].push(token);\n      }\n\n      if (movedSameProperty) {\n        movedProperties[samePropertyAt] = cloneAndMergeSelectors(movedProperties[samePropertyAt], property);\n      } else {\n        movedProperties.push(property);\n      }\n    }\n\n    movedToBeDropped = movedToBeDropped.sort(naturalSorter);\n    for (j = 0, m = movedToBeDropped.length; j < m; j++) {\n      var dropAt = movedToBeDropped[j] - j;\n      movedProperties.splice(dropAt, 1);\n    }\n  }\n\n  var position = tokens[0] && tokens[0][0] == Token.AT_RULE && tokens[0][1].indexOf('@charset') === 0 ? 1 : 0;\n  for (; position < tokens.length - 1; position++) {\n    var isImportRule = tokens[position][0] === Token.AT_RULE && tokens[position][1].indexOf('@import') === 0;\n    var isComment = tokens[position][0] === Token.COMMENT;\n    if (!(isImportRule || isComment)) { break; }\n  }\n\n  for (i = 0; i < movedProperties.length; i++) {\n    dropPropertiesAt(position, movedProperties[i]);\n  }\n}\n\nmodule.exports = restructure;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}