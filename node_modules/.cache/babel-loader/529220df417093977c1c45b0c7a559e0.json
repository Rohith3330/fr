{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst rxEscapable = // eslint-disable-next-line no-control-regex, no-misleading-character-class\n/[\\\\\"\\u0000-\\u001f\\u007f-\\u009f\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g;\nconst escaped = {\n  \"\\b\": \"\\\\b\",\n  \"\\t\": \"\\\\t\",\n  \"\\n\": \"\\\\n\",\n  \"\\f\": \"\\\\f\",\n  \"\\r\": \"\\\\r\",\n  '\"': '\\\\\"',\n  \"\\\\\": \"\\\\\\\\\"\n};\n\nfunction quote(s) {\n  rxEscapable.lastIndex = 0;\n  return '\"' + (rxEscapable.test(s) ? s.replace(rxEscapable, a => {\n    const c = escaped[a];\n    return typeof c === \"string\" ? c : \"\\\\u\" + (\"0000\" + a.charCodeAt(0).toString(16)).slice(-4);\n  }) : s) + '\"';\n}\n\nexports.default = quote;\nquote.code = 'require(\"ajv/dist/runtime/quote\").default';","map":{"version":3,"mappings":";;;;;AAAA,MAAMA,WAAW,GACf;AACA,iIAFF;AAIA,MAAMC,OAAO,GAA6B;EACxC,MAAM,KADkC;EAExC,MAAM,KAFkC;EAGxC,MAAM,KAHkC;EAIxC,MAAM,KAJkC;EAKxC,MAAM,KALkC;EAMxC,KAAK,KANmC;EAOxC,MAAM;AAPkC,CAA1C;;AAUA,SAAwBC,KAAxB,CAA8BC,CAA9B,EAAuC;EACrCH,WAAW,CAACI,SAAZ,GAAwB,CAAxB;EACA,OACE,OACCJ,WAAW,CAACK,IAAZ,CAAiBF,CAAjB,IACGA,CAAC,CAACG,OAAF,CAAUN,WAAV,EAAwBO,CAAD,IAAM;IAC3B,MAAMC,CAAC,GAAGP,OAAO,CAACM,CAAD,CAAjB;IACA,OAAO,OAAOC,CAAP,KAAa,QAAb,GACHA,CADG,GAEH,QAAQ,CAAC,SAASD,CAAC,CAACE,UAAF,CAAa,CAAb,EAAgBC,QAAhB,CAAyB,EAAzB,CAAV,EAAwCC,KAAxC,CAA8C,CAAC,CAA/C,CAFZ;EAGD,CALD,CADH,GAOGR,CARJ,IASA,GAVF;AAYD;;AAdDS;AAgBAV,KAAK,CAACW,IAAN,GAAa,2CAAb","names":["rxEscapable","escaped","quote","s","lastIndex","test","replace","a","c","charCodeAt","toString","slice","exports","code"],"sources":["C:\\Users\\Rohith\\mern\\frontend\\node_modules\\mini-css-extract-plugin\\node_modules\\ajv\\lib\\runtime\\quote.ts"],"sourcesContent":["const rxEscapable =\n  // eslint-disable-next-line no-control-regex, no-misleading-character-class\n  /[\\\\\"\\u0000-\\u001f\\u007f-\\u009f\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g\n\nconst escaped: {[K in string]?: string} = {\n  \"\\b\": \"\\\\b\",\n  \"\\t\": \"\\\\t\",\n  \"\\n\": \"\\\\n\",\n  \"\\f\": \"\\\\f\",\n  \"\\r\": \"\\\\r\",\n  '\"': '\\\\\"',\n  \"\\\\\": \"\\\\\\\\\",\n}\n\nexport default function quote(s: string): string {\n  rxEscapable.lastIndex = 0\n  return (\n    '\"' +\n    (rxEscapable.test(s)\n      ? s.replace(rxEscapable, (a) => {\n          const c = escaped[a]\n          return typeof c === \"string\"\n            ? c\n            : \"\\\\u\" + (\"0000\" + a.charCodeAt(0).toString(16)).slice(-4)\n        })\n      : s) +\n    '\"'\n  )\n}\n\nquote.code = 'require(\"ajv/dist/runtime/quote\").default'\n"]},"metadata":{},"sourceType":"script"}