{"ast":null,"code":"import propName from './propName';\nconst DEFAULT_OPTIONS = {\n  ignoreCase: true\n};\n/**\n * Returns the JSXAttribute itself or undefined, indicating the prop\n * is not present on the JSXOpeningElement.\n *\n */\n\nexport default function getProp() {\n  let props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let prop = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : DEFAULT_OPTIONS;\n\n  function getName(name) {\n    return options.ignoreCase ? name.toUpperCase() : name;\n  }\n\n  const propToFind = getName(prop);\n\n  function isPropToFind(property) {\n    return property.type === 'Property' && property.key.type === 'Identifier' && propToFind === getName(property.key.name);\n  }\n\n  const foundAttribute = props.find(attribute => {\n    // If the props contain a spread prop, try to find the property in the object expression.\n    if (attribute.type === 'JSXSpreadAttribute') {\n      return attribute.argument.type === 'ObjectExpression' && propToFind !== getName('key') // https://github.com/reactjs/rfcs/pull/107\n      && attribute.argument.properties.some(isPropToFind);\n    }\n\n    return propToFind === getName(propName(attribute));\n  });\n\n  if (foundAttribute && foundAttribute.type === 'JSXSpreadAttribute') {\n    return propertyToJSXAttribute(foundAttribute.argument.properties.find(isPropToFind));\n  }\n\n  return foundAttribute;\n}\n\nfunction propertyToJSXAttribute(node) {\n  const {\n    key,\n    value\n  } = node;\n  return {\n    type: 'JSXAttribute',\n    name: {\n      type: 'JSXIdentifier',\n      name: key.name,\n      ...getBaseProps(key)\n    },\n    value: value.type === 'Literal' ? adjustRangeOfNode(value) : {\n      type: 'JSXExpressionContainer',\n      expression: adjustExpressionRange(value),\n      ...getBaseProps(value)\n    },\n    ...getBaseProps(node)\n  };\n}\n\nfunction adjustRangeOfNode(node) {\n  const [start, end] = node.range || [node.start, node.end];\n  return { ...node,\n    end: undefined,\n    range: [start, end],\n    start: undefined\n  };\n}\n\nfunction adjustExpressionRange(_ref) {\n  let {\n    expressions,\n    quasis,\n    ...expression\n  } = _ref;\n  return { ...adjustRangeOfNode(expression),\n    ...(expressions ? {\n      expressions: expressions.map(adjustRangeOfNode)\n    } : {}),\n    ...(quasis ? {\n      quasis: quasis.map(adjustRangeOfNode)\n    } : {})\n  };\n}\n\nfunction getBaseProps(_ref2) {\n  let {\n    loc,\n    ...node\n  } = _ref2;\n  const {\n    range\n  } = adjustRangeOfNode(node);\n  return {\n    loc: getBaseLocation(loc),\n    range\n  };\n}\n\nfunction getBaseLocation(_ref3) {\n  let {\n    start,\n    end,\n    source,\n    filename\n  } = _ref3;\n  return {\n    start,\n    end,\n    ...(source !== undefined ? {\n      source\n    } : {}),\n    ...(filename !== undefined ? {\n      filename\n    } : {})\n  };\n}","map":{"version":3,"names":["propName","DEFAULT_OPTIONS","ignoreCase","getProp","props","prop","options","getName","name","toUpperCase","propToFind","isPropToFind","property","type","key","foundAttribute","find","attribute","argument","properties","some","propertyToJSXAttribute","node","value","getBaseProps","adjustRangeOfNode","expression","adjustExpressionRange","start","end","range","undefined","expressions","quasis","map","loc","getBaseLocation","source","filename"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/jsx-ast-utils/src/getProp.js"],"sourcesContent":["import propName from './propName';\n\nconst DEFAULT_OPTIONS = {\n  ignoreCase: true,\n};\n\n/**\n * Returns the JSXAttribute itself or undefined, indicating the prop\n * is not present on the JSXOpeningElement.\n *\n */\nexport default function getProp(props = [], prop = '', options = DEFAULT_OPTIONS) {\n  function getName(name) { return options.ignoreCase ? name.toUpperCase() : name; }\n  const propToFind = getName(prop);\n  function isPropToFind(property) {\n    return property.type === 'Property'\n      && property.key.type === 'Identifier'\n      && propToFind === getName(property.key.name);\n  }\n\n  const foundAttribute = props.find((attribute) => {\n    // If the props contain a spread prop, try to find the property in the object expression.\n    if (attribute.type === 'JSXSpreadAttribute') {\n      return attribute.argument.type === 'ObjectExpression'\n        && propToFind !== getName('key') // https://github.com/reactjs/rfcs/pull/107\n        && attribute.argument.properties.some(isPropToFind);\n    }\n\n    return propToFind === getName(propName(attribute));\n  });\n\n  if (foundAttribute && foundAttribute.type === 'JSXSpreadAttribute') {\n    return propertyToJSXAttribute(foundAttribute.argument.properties.find(isPropToFind));\n  }\n\n  return foundAttribute;\n}\n\nfunction propertyToJSXAttribute(node) {\n  const { key, value } = node;\n  return {\n    type: 'JSXAttribute',\n    name: { type: 'JSXIdentifier', name: key.name, ...getBaseProps(key) },\n    value: value.type === 'Literal'\n      ? adjustRangeOfNode(value)\n      : { type: 'JSXExpressionContainer', expression: adjustExpressionRange(value), ...getBaseProps(value) },\n    ...getBaseProps(node),\n  };\n}\n\nfunction adjustRangeOfNode(node) {\n  const [start, end] = node.range || [node.start, node.end];\n\n  return {\n    ...node,\n    end: undefined,\n    range: [start, end],\n    start: undefined,\n  };\n}\n\nfunction adjustExpressionRange({ expressions, quasis, ...expression }) {\n  return {\n    ...adjustRangeOfNode(expression),\n    ...(expressions ? { expressions: expressions.map(adjustRangeOfNode) } : {}),\n    ...(quasis ? { quasis: quasis.map(adjustRangeOfNode) } : {}),\n  };\n}\n\nfunction getBaseProps({ loc, ...node }) {\n  const { range } = adjustRangeOfNode(node);\n\n  return {\n    loc: getBaseLocation(loc),\n    range,\n  };\n}\n\nfunction getBaseLocation({\n  start,\n  end,\n  source,\n  filename,\n}) {\n  return {\n    start,\n    end,\n    ...(source !== undefined ? { source } : {}),\n    ...(filename !== undefined ? { filename } : {}),\n  };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}