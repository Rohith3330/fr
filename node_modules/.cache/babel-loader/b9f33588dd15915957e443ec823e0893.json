{"ast":null,"code":"'use strict';\n/** @type {(rule: import('postcss').Declaration[], ...props: string[]) => boolean} */\n\nmodule.exports = function (rule) {\n  for (var _len = arguments.length, props = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    props[_key - 1] = arguments[_key];\n  }\n\n  return props.every(p => rule.some(node => node.prop && node.prop.toLowerCase().includes(p)));\n};","map":{"version":3,"names":["module","exports","rule","props","every","p","some","node","prop","toLowerCase","includes"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/postcss-merge-longhand/src/lib/hasAllProps.js"],"sourcesContent":["'use strict';\n/** @type {(rule: import('postcss').Declaration[], ...props: string[]) => boolean} */\nmodule.exports = (rule, ...props) => {\n  return props.every((p) =>\n    rule.some((node) => node.prop && node.prop.toLowerCase().includes(p))\n  );\n};\n"],"mappings":"AAAA;AACA;;AACAA,MAAM,CAACC,OAAP,GAAiB,UAACC,IAAD,EAAoB;EAAA,kCAAVC,KAAU;IAAVA,KAAU;EAAA;;EACnC,OAAOA,KAAK,CAACC,KAAN,CAAaC,CAAD,IACjBH,IAAI,CAACI,IAAL,CAAWC,IAAD,IAAUA,IAAI,CAACC,IAAL,IAAaD,IAAI,CAACC,IAAL,CAAUC,WAAV,GAAwBC,QAAxB,CAAiCL,CAAjC,CAAjC,CADK,CAAP;AAGD,CAJD"},"metadata":{},"sourceType":"script"}