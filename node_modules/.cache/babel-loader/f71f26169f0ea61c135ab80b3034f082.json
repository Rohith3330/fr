{"ast":null,"code":"/**\n * @fileoverview Enforce anchor elements to contain accessible content.\n * @author Lisa Ring & Niklas Holmberg\n */\n// -----------------------------------------------------------------------------\n// Requirements\n// -----------------------------------------------------------------------------\nimport { RuleTester } from 'eslint';\nimport parserOptionsMapper from '../../__util__/parserOptionsMapper';\nimport rule from '../../../src/rules/anchor-has-content'; // -----------------------------------------------------------------------------\n// Tests\n// -----------------------------------------------------------------------------\n\nconst ruleTester = new RuleTester();\nconst expectedError = {\n  message: 'Anchors must have content and the content must be accessible by a screen reader.',\n  type: 'JSXOpeningElement'\n};\nruleTester.run('anchor-has-content', rule, {\n  valid: [{\n    code: '<div />;'\n  }, {\n    code: '<a>Foo</a>'\n  }, {\n    code: '<a><Bar /></a>'\n  }, {\n    code: '<a>{foo}</a>'\n  }, {\n    code: '<a>{foo.bar}</a>'\n  }, {\n    code: '<a dangerouslySetInnerHTML={{ __html: \"foo\" }} />'\n  }, {\n    code: '<a children={children} />'\n  }, {\n    code: '<Link />'\n  }, {\n    code: '<Link>foo</Link>',\n    settings: {\n      'jsx-a11y': {\n        components: {\n          Link: 'a'\n        }\n      }\n    }\n  }].map(parserOptionsMapper),\n  invalid: [{\n    code: '<a />',\n    errors: [expectedError]\n  }, {\n    code: '<a><Bar aria-hidden /></a>',\n    errors: [expectedError]\n  }, {\n    code: '<a>{undefined}</a>',\n    errors: [expectedError]\n  }, {\n    code: '<Link />',\n    errors: [expectedError],\n    settings: {\n      'jsx-a11y': {\n        components: {\n          Link: 'a'\n        }\n      }\n    }\n  }].map(parserOptionsMapper)\n});","map":{"version":3,"names":["RuleTester","parserOptionsMapper","rule","ruleTester","expectedError","message","type","run","valid","code","settings","components","Link","map","invalid","errors"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/eslint-plugin-jsx-a11y/__tests__/src/rules/anchor-has-content-test.js"],"sourcesContent":["/**\n * @fileoverview Enforce anchor elements to contain accessible content.\n * @author Lisa Ring & Niklas Holmberg\n */\n\n// -----------------------------------------------------------------------------\n// Requirements\n// -----------------------------------------------------------------------------\n\nimport { RuleTester } from 'eslint';\nimport parserOptionsMapper from '../../__util__/parserOptionsMapper';\nimport rule from '../../../src/rules/anchor-has-content';\n\n// -----------------------------------------------------------------------------\n// Tests\n// -----------------------------------------------------------------------------\n\nconst ruleTester = new RuleTester();\n\nconst expectedError = {\n  message: 'Anchors must have content and the content must be accessible by a screen reader.',\n  type: 'JSXOpeningElement',\n};\n\nruleTester.run('anchor-has-content', rule, {\n  valid: [\n    { code: '<div />;' },\n    { code: '<a>Foo</a>' },\n    { code: '<a><Bar /></a>' },\n    { code: '<a>{foo}</a>' },\n    { code: '<a>{foo.bar}</a>' },\n    { code: '<a dangerouslySetInnerHTML={{ __html: \"foo\" }} />' },\n    { code: '<a children={children} />' },\n    { code: '<Link />' },\n    {\n      code: '<Link>foo</Link>',\n      settings: { 'jsx-a11y': { components: { Link: 'a' } } },\n    },\n  ].map(parserOptionsMapper),\n  invalid: [\n    { code: '<a />', errors: [expectedError] },\n    { code: '<a><Bar aria-hidden /></a>', errors: [expectedError] },\n    { code: '<a>{undefined}</a>', errors: [expectedError] },\n    {\n      code: '<Link />',\n      errors: [expectedError],\n      settings: { 'jsx-a11y': { components: { Link: 'a' } } },\n    },\n  ].map(parserOptionsMapper),\n});\n"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA,SAASA,UAAT,QAA2B,QAA3B;AACA,OAAOC,mBAAP,MAAgC,oCAAhC;AACA,OAAOC,IAAP,MAAiB,uCAAjB,C,CAEA;AACA;AACA;;AAEA,MAAMC,UAAU,GAAG,IAAIH,UAAJ,EAAnB;AAEA,MAAMI,aAAa,GAAG;EACpBC,OAAO,EAAE,kFADW;EAEpBC,IAAI,EAAE;AAFc,CAAtB;AAKAH,UAAU,CAACI,GAAX,CAAe,oBAAf,EAAqCL,IAArC,EAA2C;EACzCM,KAAK,EAAE,CACL;IAAEC,IAAI,EAAE;EAAR,CADK,EAEL;IAAEA,IAAI,EAAE;EAAR,CAFK,EAGL;IAAEA,IAAI,EAAE;EAAR,CAHK,EAIL;IAAEA,IAAI,EAAE;EAAR,CAJK,EAKL;IAAEA,IAAI,EAAE;EAAR,CALK,EAML;IAAEA,IAAI,EAAE;EAAR,CANK,EAOL;IAAEA,IAAI,EAAE;EAAR,CAPK,EAQL;IAAEA,IAAI,EAAE;EAAR,CARK,EASL;IACEA,IAAI,EAAE,kBADR;IAEEC,QAAQ,EAAE;MAAE,YAAY;QAAEC,UAAU,EAAE;UAAEC,IAAI,EAAE;QAAR;MAAd;IAAd;EAFZ,CATK,EAaLC,GAbK,CAaDZ,mBAbC,CADkC;EAezCa,OAAO,EAAE,CACP;IAAEL,IAAI,EAAE,OAAR;IAAiBM,MAAM,EAAE,CAACX,aAAD;EAAzB,CADO,EAEP;IAAEK,IAAI,EAAE,4BAAR;IAAsCM,MAAM,EAAE,CAACX,aAAD;EAA9C,CAFO,EAGP;IAAEK,IAAI,EAAE,oBAAR;IAA8BM,MAAM,EAAE,CAACX,aAAD;EAAtC,CAHO,EAIP;IACEK,IAAI,EAAE,UADR;IAEEM,MAAM,EAAE,CAACX,aAAD,CAFV;IAGEM,QAAQ,EAAE;MAAE,YAAY;QAAEC,UAAU,EAAE;UAAEC,IAAI,EAAE;QAAR;MAAd;IAAd;EAHZ,CAJO,EASPC,GATO,CASHZ,mBATG;AAfgC,CAA3C"},"metadata":{},"sourceType":"module"}