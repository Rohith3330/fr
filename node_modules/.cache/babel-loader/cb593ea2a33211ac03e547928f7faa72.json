{"ast":null,"code":"'use strict';\n/**\n * @param {string | undefined} value\n * @return {string | undefined}\n */\n\nfunction trimValue(value) {\n  return value ? value.trim() : value;\n}\n/**\n * @param {{nodes: import('postcss').Node[]}} node\n * @return {boolean}\n */\n\n\nfunction empty(node) {\n  return !node.nodes.filter(child => child.type !== 'comment').length;\n}\n/**\n * @param {import('postcss').AnyNode} nodeA\n * @param {import('postcss').AnyNode} nodeB\n * @return {boolean}\n */\n\n\nfunction equals(nodeA, nodeB) {\n  const a =\n  /** @type {any} */\n  nodeA;\n  const b =\n  /** @type {any} */\n  nodeB;\n\n  if (a.type !== b.type) {\n    return false;\n  }\n\n  if (a.important !== b.important) {\n    return false;\n  }\n\n  if (a.raws && !b.raws || !a.raws && b.raws) {\n    return false;\n  }\n\n  switch (a.type) {\n    case 'rule':\n      if (a.selector !== b.selector) {\n        return false;\n      }\n\n      break;\n\n    case 'atrule':\n      if (a.name !== b.name || a.params !== b.params) {\n        return false;\n      }\n\n      if (a.raws && trimValue(a.raws.before) !== trimValue(b.raws.before)) {\n        return false;\n      }\n\n      if (a.raws && trimValue(a.raws.afterName) !== trimValue(b.raws.afterName)) {\n        return false;\n      }\n\n      break;\n\n    case 'decl':\n      if (a.prop !== b.prop || a.value !== b.value) {\n        return false;\n      }\n\n      if (a.raws && trimValue(a.raws.before) !== trimValue(b.raws.before)) {\n        return false;\n      }\n\n      break;\n  }\n\n  if (a.nodes) {\n    if (a.nodes.length !== b.nodes.length) {\n      return false;\n    }\n\n    for (let i = 0; i < a.nodes.length; i++) {\n      if (!equals(a.nodes[i], b.nodes[i])) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n/**\n * @param {import('postcss').Rule} last\n * @param {import('postcss').AnyNode[]} nodes\n * @return {void}\n */\n\n\nfunction dedupeRule(last, nodes) {\n  let index = nodes.indexOf(last) - 1;\n\n  while (index >= 0) {\n    const node = nodes[index--];\n\n    if (node && node.type === 'rule' && node.selector === last.selector) {\n      last.each(child => {\n        if (child.type === 'decl') {\n          dedupeNode(child, node.nodes);\n        }\n      });\n\n      if (empty(node)) {\n        node.remove();\n      }\n    }\n  }\n}\n/**\n * @param {import('postcss').AtRule | import('postcss').Declaration} last\n * @param {import('postcss').AnyNode[]} nodes\n * @return {void}\n */\n\n\nfunction dedupeNode(last, nodes) {\n  let index = nodes.includes(last) ? nodes.indexOf(last) - 1 : nodes.length - 1;\n\n  while (index >= 0) {\n    const node = nodes[index--];\n\n    if (node && equals(node, last)) {\n      node.remove();\n    }\n  }\n}\n/**\n * @param {import('postcss').AnyNode} root\n * @return {void}\n */\n\n\nfunction dedupe(root) {\n  const {\n    nodes\n  } =\n  /** @type {import('postcss').Container<import('postcss').ChildNode>} */\n  root;\n\n  if (!nodes) {\n    return;\n  }\n\n  let index = nodes.length - 1;\n\n  while (index >= 0) {\n    let last = nodes[index--];\n\n    if (!last || !last.parent) {\n      continue;\n    }\n\n    dedupe(last);\n\n    if (last.type === 'rule') {\n      dedupeRule(last, nodes);\n    } else if (last.type === 'atrule' || last.type === 'decl') {\n      dedupeNode(last, nodes);\n    }\n  }\n}\n/**\n * @type {import('postcss').PluginCreator<void>}\n * @return {import('postcss').Plugin}\n */\n\n\nfunction pluginCreator() {\n  return {\n    postcssPlugin: 'postcss-discard-duplicates',\n\n    OnceExit(css) {\n      dedupe(css);\n    }\n\n  };\n}\n\npluginCreator.postcss = true;\nmodule.exports = pluginCreator;","map":{"version":3,"names":["trimValue","value","trim","empty","node","nodes","filter","child","type","length","equals","nodeA","nodeB","a","b","important","raws","selector","name","params","before","afterName","prop","i","dedupeRule","last","index","indexOf","each","dedupeNode","remove","includes","dedupe","root","parent","pluginCreator","postcssPlugin","OnceExit","css","postcss","module","exports"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/postcss-discard-duplicates/src/index.js"],"sourcesContent":["'use strict';\n/**\n * @param {string | undefined} value\n * @return {string | undefined}\n */\nfunction trimValue(value) {\n  return value ? value.trim() : value;\n}\n\n/**\n * @param {{nodes: import('postcss').Node[]}} node\n * @return {boolean}\n */\nfunction empty(node) {\n  return !node.nodes.filter((child) => child.type !== 'comment').length;\n}\n\n/**\n * @param {import('postcss').AnyNode} nodeA\n * @param {import('postcss').AnyNode} nodeB\n * @return {boolean}\n */\nfunction equals(nodeA, nodeB) {\n  const a = /** @type {any} */ (nodeA);\n  const b = /** @type {any} */ (nodeB);\n  if (a.type !== b.type) {\n    return false;\n  }\n\n  if (a.important !== b.important) {\n    return false;\n  }\n\n  if ((a.raws && !b.raws) || (!a.raws && b.raws)) {\n    return false;\n  }\n\n  switch (a.type) {\n    case 'rule':\n      if (a.selector !== b.selector) {\n        return false;\n      }\n      break;\n    case 'atrule':\n      if (a.name !== b.name || a.params !== b.params) {\n        return false;\n      }\n\n      if (a.raws && trimValue(a.raws.before) !== trimValue(b.raws.before)) {\n        return false;\n      }\n\n      if (\n        a.raws &&\n        trimValue(a.raws.afterName) !== trimValue(b.raws.afterName)\n      ) {\n        return false;\n      }\n      break;\n    case 'decl':\n      if (a.prop !== b.prop || a.value !== b.value) {\n        return false;\n      }\n\n      if (a.raws && trimValue(a.raws.before) !== trimValue(b.raws.before)) {\n        return false;\n      }\n      break;\n  }\n\n  if (a.nodes) {\n    if (a.nodes.length !== b.nodes.length) {\n      return false;\n    }\n\n    for (let i = 0; i < a.nodes.length; i++) {\n      if (!equals(a.nodes[i], b.nodes[i])) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {import('postcss').Rule} last\n * @param {import('postcss').AnyNode[]} nodes\n * @return {void}\n */\nfunction dedupeRule(last, nodes) {\n  let index = nodes.indexOf(last) - 1;\n  while (index >= 0) {\n    const node = nodes[index--];\n    if (node && node.type === 'rule' && node.selector === last.selector) {\n      last.each((child) => {\n        if (child.type === 'decl') {\n          dedupeNode(child, node.nodes);\n        }\n      });\n\n      if (empty(node)) {\n        node.remove();\n      }\n    }\n  }\n}\n\n/**\n * @param {import('postcss').AtRule | import('postcss').Declaration} last\n * @param {import('postcss').AnyNode[]} nodes\n * @return {void}\n */\nfunction dedupeNode(last, nodes) {\n  let index = nodes.includes(last) ? nodes.indexOf(last) - 1 : nodes.length - 1;\n\n  while (index >= 0) {\n    const node = nodes[index--];\n    if (node && equals(node, last)) {\n      node.remove();\n    }\n  }\n}\n\n/**\n * @param {import('postcss').AnyNode} root\n * @return {void}\n */\nfunction dedupe(root) {\n  const { nodes } =\n    /** @type {import('postcss').Container<import('postcss').ChildNode>} */ (\n      root\n    );\n\n  if (!nodes) {\n    return;\n  }\n\n  let index = nodes.length - 1;\n  while (index >= 0) {\n    let last = nodes[index--];\n    if (!last || !last.parent) {\n      continue;\n    }\n    dedupe(last);\n    if (last.type === 'rule') {\n      dedupeRule(last, nodes);\n    } else if (last.type === 'atrule' || last.type === 'decl') {\n      dedupeNode(last, nodes);\n    }\n  }\n}\n\n/**\n * @type {import('postcss').PluginCreator<void>}\n * @return {import('postcss').Plugin}\n */\nfunction pluginCreator() {\n  return {\n    postcssPlugin: 'postcss-discard-duplicates',\n    OnceExit(css) {\n      dedupe(css);\n    },\n  };\n}\n\npluginCreator.postcss = true;\nmodule.exports = pluginCreator;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}