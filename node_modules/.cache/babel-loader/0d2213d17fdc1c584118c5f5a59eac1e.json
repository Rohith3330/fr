{"ast":null,"code":"'use strict';\n/**\n * @typedef {import('../lib/types').XastElement} XastElement\n */\n\nconst csso = require('csso');\n\nexports.type = 'visitor';\nexports.name = 'minifyStyles';\nexports.active = true;\nexports.description = 'minifies styles and removes unused styles based on usage data';\n/**\n * Minifies styles (<style> element + style attribute) using CSSO\n *\n * @author strarsis <strarsis@gmail.com>\n *\n * @type {import('../lib/types').Plugin<csso.MinifyOptions & Omit<csso.CompressOptions, 'usage'> & {\n *   usage?: boolean | {\n *     force?: boolean,\n *     ids?: boolean,\n *     classes?: boolean,\n *     tags?: boolean\n *   }\n * }>}\n */\n\nexports.fn = (_root, _ref) => {\n  let {\n    usage,\n    ...params\n  } = _ref;\n  let enableTagsUsage = true;\n  let enableIdsUsage = true;\n  let enableClassesUsage = true; // force to use usage data even if it unsafe (document contains <script> or on* attributes)\n\n  let forceUsageDeoptimized = false;\n\n  if (typeof usage === 'boolean') {\n    enableTagsUsage = usage;\n    enableIdsUsage = usage;\n    enableClassesUsage = usage;\n  } else if (usage) {\n    enableTagsUsage = usage.tags == null ? true : usage.tags;\n    enableIdsUsage = usage.ids == null ? true : usage.ids;\n    enableClassesUsage = usage.classes == null ? true : usage.classes;\n    forceUsageDeoptimized = usage.force == null ? false : usage.force;\n  }\n  /**\n   * @type {Array<XastElement>}\n   */\n\n\n  const styleElements = [];\n  /**\n   * @type {Array<XastElement>}\n   */\n\n  const elementsWithStyleAttributes = [];\n  let deoptimized = false;\n  /**\n   * @type {Set<string>}\n   */\n\n  const tagsUsage = new Set();\n  /**\n   * @type {Set<string>}\n   */\n\n  const idsUsage = new Set();\n  /**\n   * @type {Set<string>}\n   */\n\n  const classesUsage = new Set();\n  return {\n    element: {\n      enter: node => {\n        // detect deoptimisations\n        if (node.name === 'script') {\n          deoptimized = true;\n        }\n\n        for (const name of Object.keys(node.attributes)) {\n          if (name.startsWith('on')) {\n            deoptimized = true;\n          }\n        } // collect tags, ids and classes usage\n\n\n        tagsUsage.add(node.name);\n\n        if (node.attributes.id != null) {\n          idsUsage.add(node.attributes.id);\n        }\n\n        if (node.attributes.class != null) {\n          for (const className of node.attributes.class.split(/\\s+/)) {\n            classesUsage.add(className);\n          }\n        } // collect style elements or elements with style attribute\n\n\n        if (node.name === 'style' && node.children.length !== 0) {\n          styleElements.push(node);\n        } else if (node.attributes.style != null) {\n          elementsWithStyleAttributes.push(node);\n        }\n      }\n    },\n    root: {\n      exit: () => {\n        /**\n         * @type {csso.Usage}\n         */\n        const cssoUsage = {};\n\n        if (deoptimized === false || forceUsageDeoptimized === true) {\n          if (enableTagsUsage && tagsUsage.size !== 0) {\n            cssoUsage.tags = Array.from(tagsUsage);\n          }\n\n          if (enableIdsUsage && idsUsage.size !== 0) {\n            cssoUsage.ids = Array.from(idsUsage);\n          }\n\n          if (enableClassesUsage && classesUsage.size !== 0) {\n            cssoUsage.classes = Array.from(classesUsage);\n          }\n        } // minify style elements\n\n\n        for (const node of styleElements) {\n          if (node.children[0].type === 'text' || node.children[0].type === 'cdata') {\n            const cssText = node.children[0].value;\n            const minified = csso.minify(cssText, { ...params,\n              usage: cssoUsage\n            }).css; // preserve cdata if necessary\n            // TODO split cdata -> text optimisation into separate plugin\n\n            if (cssText.indexOf('>') >= 0 || cssText.indexOf('<') >= 0) {\n              node.children[0].type = 'cdata';\n              node.children[0].value = minified;\n            } else {\n              node.children[0].type = 'text';\n              node.children[0].value = minified;\n            }\n          }\n        } // minify style attributes\n\n\n        for (const node of elementsWithStyleAttributes) {\n          // style attribute\n          const elemStyle = node.attributes.style;\n          node.attributes.style = csso.minifyBlock(elemStyle, { ...params\n          }).css;\n        }\n      }\n    }\n  };\n};","map":{"version":3,"names":["csso","require","exports","type","name","active","description","fn","_root","usage","params","enableTagsUsage","enableIdsUsage","enableClassesUsage","forceUsageDeoptimized","tags","ids","classes","force","styleElements","elementsWithStyleAttributes","deoptimized","tagsUsage","Set","idsUsage","classesUsage","element","enter","node","Object","keys","attributes","startsWith","add","id","class","className","split","children","length","push","style","root","exit","cssoUsage","size","Array","from","cssText","value","minified","minify","css","indexOf","elemStyle","minifyBlock"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/postcss-svgo/node_modules/svgo/plugins/minifyStyles.js"],"sourcesContent":["'use strict';\n\n/**\n * @typedef {import('../lib/types').XastElement} XastElement\n */\n\nconst csso = require('csso');\n\nexports.type = 'visitor';\nexports.name = 'minifyStyles';\nexports.active = true;\nexports.description =\n  'minifies styles and removes unused styles based on usage data';\n\n/**\n * Minifies styles (<style> element + style attribute) using CSSO\n *\n * @author strarsis <strarsis@gmail.com>\n *\n * @type {import('../lib/types').Plugin<csso.MinifyOptions & Omit<csso.CompressOptions, 'usage'> & {\n *   usage?: boolean | {\n *     force?: boolean,\n *     ids?: boolean,\n *     classes?: boolean,\n *     tags?: boolean\n *   }\n * }>}\n */\nexports.fn = (_root, { usage, ...params }) => {\n  let enableTagsUsage = true;\n  let enableIdsUsage = true;\n  let enableClassesUsage = true;\n  // force to use usage data even if it unsafe (document contains <script> or on* attributes)\n  let forceUsageDeoptimized = false;\n  if (typeof usage === 'boolean') {\n    enableTagsUsage = usage;\n    enableIdsUsage = usage;\n    enableClassesUsage = usage;\n  } else if (usage) {\n    enableTagsUsage = usage.tags == null ? true : usage.tags;\n    enableIdsUsage = usage.ids == null ? true : usage.ids;\n    enableClassesUsage = usage.classes == null ? true : usage.classes;\n    forceUsageDeoptimized = usage.force == null ? false : usage.force;\n  }\n  /**\n   * @type {Array<XastElement>}\n   */\n  const styleElements = [];\n  /**\n   * @type {Array<XastElement>}\n   */\n  const elementsWithStyleAttributes = [];\n  let deoptimized = false;\n  /**\n   * @type {Set<string>}\n   */\n  const tagsUsage = new Set();\n  /**\n   * @type {Set<string>}\n   */\n  const idsUsage = new Set();\n  /**\n   * @type {Set<string>}\n   */\n  const classesUsage = new Set();\n\n  return {\n    element: {\n      enter: (node) => {\n        // detect deoptimisations\n        if (node.name === 'script') {\n          deoptimized = true;\n        }\n        for (const name of Object.keys(node.attributes)) {\n          if (name.startsWith('on')) {\n            deoptimized = true;\n          }\n        }\n        // collect tags, ids and classes usage\n        tagsUsage.add(node.name);\n        if (node.attributes.id != null) {\n          idsUsage.add(node.attributes.id);\n        }\n        if (node.attributes.class != null) {\n          for (const className of node.attributes.class.split(/\\s+/)) {\n            classesUsage.add(className);\n          }\n        }\n        // collect style elements or elements with style attribute\n        if (node.name === 'style' && node.children.length !== 0) {\n          styleElements.push(node);\n        } else if (node.attributes.style != null) {\n          elementsWithStyleAttributes.push(node);\n        }\n      },\n    },\n\n    root: {\n      exit: () => {\n        /**\n         * @type {csso.Usage}\n         */\n        const cssoUsage = {};\n        if (deoptimized === false || forceUsageDeoptimized === true) {\n          if (enableTagsUsage && tagsUsage.size !== 0) {\n            cssoUsage.tags = Array.from(tagsUsage);\n          }\n          if (enableIdsUsage && idsUsage.size !== 0) {\n            cssoUsage.ids = Array.from(idsUsage);\n          }\n          if (enableClassesUsage && classesUsage.size !== 0) {\n            cssoUsage.classes = Array.from(classesUsage);\n          }\n        }\n        // minify style elements\n        for (const node of styleElements) {\n          if (\n            node.children[0].type === 'text' ||\n            node.children[0].type === 'cdata'\n          ) {\n            const cssText = node.children[0].value;\n            const minified = csso.minify(cssText, {\n              ...params,\n              usage: cssoUsage,\n            }).css;\n            // preserve cdata if necessary\n            // TODO split cdata -> text optimisation into separate plugin\n            if (cssText.indexOf('>') >= 0 || cssText.indexOf('<') >= 0) {\n              node.children[0].type = 'cdata';\n              node.children[0].value = minified;\n            } else {\n              node.children[0].type = 'text';\n              node.children[0].value = minified;\n            }\n          }\n        }\n        // minify style attributes\n        for (const node of elementsWithStyleAttributes) {\n          // style attribute\n          const elemStyle = node.attributes.style;\n          node.attributes.style = csso.minifyBlock(elemStyle, {\n            ...params,\n          }).css;\n        }\n      },\n    },\n  };\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}