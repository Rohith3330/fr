{"ast":null,"code":"'use strict';\n\nconst browserslist = require('browserslist');\n\nconst plugins = require('./plugins');\n/** @typedef {{lint?: boolean}} Options */\n\n/**\n * @type {import('postcss').PluginCreator<Options>}\n * @param {Options} opts\n * @return {import('postcss').Plugin}\n */\n\n\nfunction pluginCreator() {\n  let opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return {\n    postcssPlugin: 'stylehacks',\n\n    OnceExit(css, _ref) {\n      let {\n        result\n      } = _ref;\n\n      /** @type {typeof result.opts & browserslist.Options} */\n      const resultOpts = result.opts || {};\n      const browsers = browserslist(null, {\n        stats: resultOpts.stats,\n        path: __dirname,\n        env: resultOpts.env\n      });\n      /** @type {import('./plugin').Plugin[]} */\n\n      const processors = [];\n\n      for (const Plugin of plugins) {\n        const hack = new Plugin(result);\n\n        if (!browsers.some(browser => hack.targets.has(browser))) {\n          processors.push(hack);\n        }\n      }\n\n      css.walk(node => {\n        processors.forEach(proc => {\n          if (!proc.nodeTypes.has(node.type)) {\n            return;\n          }\n\n          if (opts.lint) {\n            return proc.detectAndWarn(node);\n          }\n\n          return proc.detectAndResolve(node);\n        });\n      });\n    }\n\n  };\n}\n/** @type {(node: import('postcss').Node) => boolean} */\n\n\npluginCreator.detect = node => {\n  return plugins.some(Plugin => {\n    const hack = new Plugin();\n    return hack.any(node);\n  });\n};\n\npluginCreator.postcss = true;\nmodule.exports = pluginCreator;","map":{"version":3,"names":["browserslist","require","plugins","pluginCreator","opts","postcssPlugin","OnceExit","css","result","resultOpts","browsers","stats","path","__dirname","env","processors","Plugin","hack","some","browser","targets","has","push","walk","node","forEach","proc","nodeTypes","type","lint","detectAndWarn","detectAndResolve","detect","any","postcss","module","exports"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/stylehacks/src/index.js"],"sourcesContent":["'use strict';\nconst browserslist = require('browserslist');\nconst plugins = require('./plugins');\n\n/** @typedef {{lint?: boolean}} Options */\n\n/**\n * @type {import('postcss').PluginCreator<Options>}\n * @param {Options} opts\n * @return {import('postcss').Plugin}\n */\nfunction pluginCreator(opts = {}) {\n  return {\n    postcssPlugin: 'stylehacks',\n\n    OnceExit(css, { result }) {\n      /** @type {typeof result.opts & browserslist.Options} */\n      const resultOpts = result.opts || {};\n      const browsers = browserslist(null, {\n        stats: resultOpts.stats,\n        path: __dirname,\n        env: resultOpts.env,\n      });\n\n      /** @type {import('./plugin').Plugin[]} */\n      const processors = [];\n      for (const Plugin of plugins) {\n        const hack = new Plugin(result);\n        if (!browsers.some((browser) => hack.targets.has(browser))) {\n          processors.push(hack);\n        }\n      }\n      css.walk((node) => {\n        processors.forEach((proc) => {\n          if (!proc.nodeTypes.has(node.type)) {\n            return;\n          }\n\n          if (opts.lint) {\n            return proc.detectAndWarn(node);\n          }\n\n          return proc.detectAndResolve(node);\n        });\n      });\n    },\n  };\n}\n\n/** @type {(node: import('postcss').Node) => boolean} */\npluginCreator.detect = (node) => {\n  return plugins.some((Plugin) => {\n    const hack = new Plugin();\n\n    return hack.any(node);\n  });\n};\n\npluginCreator.postcss = true;\nmodule.exports = pluginCreator;\n"],"mappings":"AAAA;;AACA,MAAMA,YAAY,GAAGC,OAAO,CAAC,cAAD,CAA5B;;AACA,MAAMC,OAAO,GAAGD,OAAO,CAAC,WAAD,CAAvB;AAEA;;AAEA;AACA;AACA;AACA;AACA;;;AACA,SAASE,aAAT,GAAkC;EAAA,IAAXC,IAAW,uEAAJ,EAAI;EAChC,OAAO;IACLC,aAAa,EAAE,YADV;;IAGLC,QAAQ,CAACC,GAAD,QAAkB;MAAA,IAAZ;QAAEC;MAAF,CAAY;;MACxB;MACA,MAAMC,UAAU,GAAGD,MAAM,CAACJ,IAAP,IAAe,EAAlC;MACA,MAAMM,QAAQ,GAAGV,YAAY,CAAC,IAAD,EAAO;QAClCW,KAAK,EAAEF,UAAU,CAACE,KADgB;QAElCC,IAAI,EAAEC,SAF4B;QAGlCC,GAAG,EAAEL,UAAU,CAACK;MAHkB,CAAP,CAA7B;MAMA;;MACA,MAAMC,UAAU,GAAG,EAAnB;;MACA,KAAK,MAAMC,MAAX,IAAqBd,OAArB,EAA8B;QAC5B,MAAMe,IAAI,GAAG,IAAID,MAAJ,CAAWR,MAAX,CAAb;;QACA,IAAI,CAACE,QAAQ,CAACQ,IAAT,CAAeC,OAAD,IAAaF,IAAI,CAACG,OAAL,CAAaC,GAAb,CAAiBF,OAAjB,CAA3B,CAAL,EAA4D;UAC1DJ,UAAU,CAACO,IAAX,CAAgBL,IAAhB;QACD;MACF;;MACDV,GAAG,CAACgB,IAAJ,CAAUC,IAAD,IAAU;QACjBT,UAAU,CAACU,OAAX,CAAoBC,IAAD,IAAU;UAC3B,IAAI,CAACA,IAAI,CAACC,SAAL,CAAeN,GAAf,CAAmBG,IAAI,CAACI,IAAxB,CAAL,EAAoC;YAClC;UACD;;UAED,IAAIxB,IAAI,CAACyB,IAAT,EAAe;YACb,OAAOH,IAAI,CAACI,aAAL,CAAmBN,IAAnB,CAAP;UACD;;UAED,OAAOE,IAAI,CAACK,gBAAL,CAAsBP,IAAtB,CAAP;QACD,CAVD;MAWD,CAZD;IAaD;;EAjCI,CAAP;AAmCD;AAED;;;AACArB,aAAa,CAAC6B,MAAd,GAAwBR,IAAD,IAAU;EAC/B,OAAOtB,OAAO,CAACgB,IAAR,CAAcF,MAAD,IAAY;IAC9B,MAAMC,IAAI,GAAG,IAAID,MAAJ,EAAb;IAEA,OAAOC,IAAI,CAACgB,GAAL,CAAST,IAAT,CAAP;EACD,CAJM,CAAP;AAKD,CAND;;AAQArB,aAAa,CAAC+B,OAAd,GAAwB,IAAxB;AACAC,MAAM,CAACC,OAAP,GAAiBjC,aAAjB"},"metadata":{},"sourceType":"script"}