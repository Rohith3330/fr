{"ast":null,"code":"#!/usr/bin/env node\n'use strict';\n/*eslint-disable no-console*/\n\nvar fs = require('fs');\n\nvar argparse = require('argparse');\n\nvar yaml = require('..'); ////////////////////////////////////////////////////////////////////////////////\n\n\nvar cli = new argparse.ArgumentParser({\n  prog: 'js-yaml',\n  add_help: true\n});\ncli.add_argument('-v', '--version', {\n  action: 'version',\n  version: require('../package.json').version\n});\ncli.add_argument('-c', '--compact', {\n  help: 'Display errors in compact mode',\n  action: 'store_true'\n}); // deprecated (not needed after we removed output colors)\n// option suppressed, but not completely removed for compatibility\n\ncli.add_argument('-j', '--to-json', {\n  help: argparse.SUPPRESS,\n  dest: 'json',\n  action: 'store_true'\n});\ncli.add_argument('-t', '--trace', {\n  help: 'Show stack trace on error',\n  action: 'store_true'\n});\ncli.add_argument('file', {\n  help: 'File to read, utf-8 encoded without BOM',\n  nargs: '?',\n  default: '-'\n}); ////////////////////////////////////////////////////////////////////////////////\n\nvar options = cli.parse_args(); ////////////////////////////////////////////////////////////////////////////////\n\nfunction readFile(filename, encoding, callback) {\n  if (options.file === '-') {\n    // read from stdin\n    var chunks = [];\n    process.stdin.on('data', function (chunk) {\n      chunks.push(chunk);\n    });\n    process.stdin.on('end', function () {\n      return callback(null, Buffer.concat(chunks).toString(encoding));\n    });\n  } else {\n    fs.readFile(filename, encoding, callback);\n  }\n}\n\nreadFile(options.file, 'utf8', function (error, input) {\n  var output, isYaml;\n\n  if (error) {\n    if (error.code === 'ENOENT') {\n      console.error('File not found: ' + options.file);\n      process.exit(2);\n    }\n\n    console.error(options.trace && error.stack || error.message || String(error));\n    process.exit(1);\n  }\n\n  try {\n    output = JSON.parse(input);\n    isYaml = false;\n  } catch (err) {\n    if (err instanceof SyntaxError) {\n      try {\n        output = [];\n        yaml.loadAll(input, function (doc) {\n          output.push(doc);\n        }, {});\n        isYaml = true;\n        if (output.length === 0) output = null;else if (output.length === 1) output = output[0];\n      } catch (e) {\n        if (options.trace && err.stack) console.error(e.stack);else console.error(e.toString(options.compact));\n        process.exit(1);\n      }\n    } else {\n      console.error(options.trace && err.stack || err.message || String(err));\n      process.exit(1);\n    }\n  }\n\n  if (isYaml) console.log(JSON.stringify(output, null, '  '));else console.log(yaml.dump(output));\n});","map":{"version":3,"names":["fs","require","argparse","yaml","cli","ArgumentParser","prog","add_help","add_argument","action","version","help","SUPPRESS","dest","nargs","default","options","parse_args","readFile","filename","encoding","callback","file","chunks","process","stdin","on","chunk","push","Buffer","concat","toString","error","input","output","isYaml","code","console","exit","trace","stack","message","String","JSON","parse","err","SyntaxError","loadAll","doc","length","e","compact","log","stringify","dump"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/@eslint/eslintrc/node_modules/js-yaml/bin/js-yaml.js"],"sourcesContent":["#!/usr/bin/env node\n\n\n'use strict';\n\n/*eslint-disable no-console*/\n\n\nvar fs       = require('fs');\nvar argparse = require('argparse');\nvar yaml     = require('..');\n\n\n////////////////////////////////////////////////////////////////////////////////\n\n\nvar cli = new argparse.ArgumentParser({\n  prog:     'js-yaml',\n  add_help:  true\n});\n\ncli.add_argument('-v', '--version', {\n  action: 'version',\n  version: require('../package.json').version\n});\n\ncli.add_argument('-c', '--compact', {\n  help:   'Display errors in compact mode',\n  action: 'store_true'\n});\n\n// deprecated (not needed after we removed output colors)\n// option suppressed, but not completely removed for compatibility\ncli.add_argument('-j', '--to-json', {\n  help:   argparse.SUPPRESS,\n  dest:   'json',\n  action: 'store_true'\n});\n\ncli.add_argument('-t', '--trace', {\n  help:   'Show stack trace on error',\n  action: 'store_true'\n});\n\ncli.add_argument('file', {\n  help:   'File to read, utf-8 encoded without BOM',\n  nargs:  '?',\n  default: '-'\n});\n\n\n////////////////////////////////////////////////////////////////////////////////\n\n\nvar options = cli.parse_args();\n\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction readFile(filename, encoding, callback) {\n  if (options.file === '-') {\n    // read from stdin\n\n    var chunks = [];\n\n    process.stdin.on('data', function (chunk) {\n      chunks.push(chunk);\n    });\n\n    process.stdin.on('end', function () {\n      return callback(null, Buffer.concat(chunks).toString(encoding));\n    });\n  } else {\n    fs.readFile(filename, encoding, callback);\n  }\n}\n\nreadFile(options.file, 'utf8', function (error, input) {\n  var output, isYaml;\n\n  if (error) {\n    if (error.code === 'ENOENT') {\n      console.error('File not found: ' + options.file);\n      process.exit(2);\n    }\n\n    console.error(\n      options.trace && error.stack ||\n      error.message ||\n      String(error));\n\n    process.exit(1);\n  }\n\n  try {\n    output = JSON.parse(input);\n    isYaml = false;\n  } catch (err) {\n    if (err instanceof SyntaxError) {\n      try {\n        output = [];\n        yaml.loadAll(input, function (doc) { output.push(doc); }, {});\n        isYaml = true;\n\n        if (output.length === 0) output = null;\n        else if (output.length === 1) output = output[0];\n\n      } catch (e) {\n        if (options.trace && err.stack) console.error(e.stack);\n        else console.error(e.toString(options.compact));\n\n        process.exit(1);\n      }\n    } else {\n      console.error(\n        options.trace && err.stack ||\n        err.message ||\n        String(err));\n\n      process.exit(1);\n    }\n  }\n\n  if (isYaml) console.log(JSON.stringify(output, null, '  '));\n  else console.log(yaml.dump(output));\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}