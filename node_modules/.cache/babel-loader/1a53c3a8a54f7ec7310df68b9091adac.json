{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n/**\n * Safari 10.3 had an issue where async arrow function expressions within any class method would throw.\n * After an initial fix, any references to the instance via `this` within those methods would also throw.\n * This is fixed by converting arrow functions in class methods into equivalent function expressions.\n * @see https://bugs.webkit.org/show_bug.cgi?id=166879\n *\n * @example\n *   class X{ a(){ async () => {}; } }   // throws\n *   class X{ a(){ async function() {}; } }   // works\n *\n * @example\n *   class X{ a(){\n *     async () => this.a;   // throws\n *   } }\n *   class X{ a(){\n *     var _this=this;\n *     async function() { return _this.a };   // works\n *   } }\n */\n\nconst OPTS = {\n  allowInsertArrow: false,\n  specCompliant: false\n};\n\nvar _default = _ref => {\n  let {\n    types: t\n  } = _ref;\n  return {\n    name: \"transform-async-arrows-in-class\",\n    visitor: {\n      ArrowFunctionExpression(path) {\n        if (path.node.async && path.findParent(t.isClassMethod)) {\n          path.arrowFunctionToExpression(OPTS);\n        }\n      }\n\n    }\n  };\n};\n\nexports.default = _default;\nmodule.exports = exports.default;","map":{"version":3,"names":["exports","__esModule","default","OPTS","allowInsertArrow","specCompliant","_default","types","t","name","visitor","ArrowFunctionExpression","path","node","async","findParent","isClassMethod","arrowFunctionToExpression","module"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/@babel/preset-modules/lib/plugins/transform-async-arrows-in-class/index.js"],"sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\n/**\n * Safari 10.3 had an issue where async arrow function expressions within any class method would throw.\n * After an initial fix, any references to the instance via `this` within those methods would also throw.\n * This is fixed by converting arrow functions in class methods into equivalent function expressions.\n * @see https://bugs.webkit.org/show_bug.cgi?id=166879\n *\n * @example\n *   class X{ a(){ async () => {}; } }   // throws\n *   class X{ a(){ async function() {}; } }   // works\n *\n * @example\n *   class X{ a(){\n *     async () => this.a;   // throws\n *   } }\n *   class X{ a(){\n *     var _this=this;\n *     async function() { return _this.a };   // works\n *   } }\n */\nconst OPTS = {\n  allowInsertArrow: false,\n  specCompliant: false\n};\n\nvar _default = ({\n  types: t\n}) => ({\n  name: \"transform-async-arrows-in-class\",\n  visitor: {\n    ArrowFunctionExpression(path) {\n      if (path.node.async && path.findParent(t.isClassMethod)) {\n        path.arrowFunctionToExpression(OPTS);\n      }\n    }\n\n  }\n});\n\nexports.default = _default;\nmodule.exports = exports.default;"],"mappings":"AAAA;;AAEAA,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,IAAI,GAAG;EACXC,gBAAgB,EAAE,KADP;EAEXC,aAAa,EAAE;AAFJ,CAAb;;AAKA,IAAIC,QAAQ,GAAG;EAAA,IAAC;IACdC,KAAK,EAAEC;EADO,CAAD;EAAA,OAER;IACLC,IAAI,EAAE,iCADD;IAELC,OAAO,EAAE;MACPC,uBAAuB,CAACC,IAAD,EAAO;QAC5B,IAAIA,IAAI,CAACC,IAAL,CAAUC,KAAV,IAAmBF,IAAI,CAACG,UAAL,CAAgBP,CAAC,CAACQ,aAAlB,CAAvB,EAAyD;UACvDJ,IAAI,CAACK,yBAAL,CAA+Bd,IAA/B;QACD;MACF;;IALM;EAFJ,CAFQ;AAAA,CAAf;;AAcAH,OAAO,CAACE,OAAR,GAAkBI,QAAlB;AACAY,MAAM,CAAClB,OAAP,GAAiBA,OAAO,CAACE,OAAzB"},"metadata":{},"sourceType":"script"}