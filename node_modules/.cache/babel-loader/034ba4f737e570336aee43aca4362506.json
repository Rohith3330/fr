{"ast":null,"code":"const {\n  assert\n} = require(\"chai\");\n\nconst {\n  decode,\n  encode\n} = require(\"../lib\");\n\ndescribe(\"UTF8\", () => {\n  it(\"should f-1(f(x)) = x\", () => {\n    assert.equal(decode(encode(\"foo\")), \"foo\");\n    assert.equal(decode(encode(\"√©√©\")), \"√©√©\"); // TODO(sven): utf8 encoder fails here\n    // assert.equal(decode(encode(\"ü§£ËßÅË¶ã\")), \"ü§£ËßÅË¶ã\");\n  });\n});","map":{"version":3,"names":["assert","require","decode","encode","describe","it","equal"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/@webassemblyjs/utf8/test/index.js"],"sourcesContent":["const { assert } = require(\"chai\");\n\nconst { decode, encode } = require(\"../lib\");\n\ndescribe(\"UTF8\", () => {\n  it(\"should f-1(f(x)) = x\", () => {\n    assert.equal(decode(encode(\"foo\")), \"foo\");\n    assert.equal(decode(encode(\"√©√©\")), \"√©√©\");\n\n    // TODO(sven): utf8 encoder fails here\n    // assert.equal(decode(encode(\"ü§£ËßÅË¶ã\")), \"ü§£ËßÅË¶ã\");\n  });\n});\n"],"mappings":"AAAA,MAAM;EAAEA;AAAF,IAAaC,OAAO,CAAC,MAAD,CAA1B;;AAEA,MAAM;EAAEC,MAAF;EAAUC;AAAV,IAAqBF,OAAO,CAAC,QAAD,CAAlC;;AAEAG,QAAQ,CAAC,MAAD,EAAS,MAAM;EACrBC,EAAE,CAAC,sBAAD,EAAyB,MAAM;IAC/BL,MAAM,CAACM,KAAP,CAAaJ,MAAM,CAACC,MAAM,CAAC,KAAD,CAAP,CAAnB,EAAoC,KAApC;IACAH,MAAM,CAACM,KAAP,CAAaJ,MAAM,CAACC,MAAM,CAAC,IAAD,CAAP,CAAnB,EAAmC,IAAnC,EAF+B,CAI/B;IACA;EACD,CANC,CAAF;AAOD,CARO,CAAR"},"metadata":{},"sourceType":"script"}