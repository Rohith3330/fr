{"ast":null,"code":"\"use strict\";\n\nconst path = require(\"path\");\n\nconst {\n  findModuleById,\n  evalModuleCode,\n  AUTO_PUBLIC_PATH,\n  ABSOLUTE_PUBLIC_PATH,\n  BASE_URI,\n  SINGLE_DOT_PATH_SEGMENT,\n  stringifyRequest\n} = require(\"./utils\");\n\nconst schema = require(\"./loader-options.json\");\n\nconst MiniCssExtractPlugin = require(\"./index\");\n/** @typedef {import(\"schema-utils/declarations/validate\").Schema} Schema */\n\n/** @typedef {import(\"webpack\").Compiler} Compiler */\n\n/** @typedef {import(\"webpack\").Compilation} Compilation */\n\n/** @typedef {import(\"webpack\").Chunk} Chunk */\n\n/** @typedef {import(\"webpack\").Module} Module */\n\n/** @typedef {import(\"webpack\").sources.Source} Source */\n\n/** @typedef {import(\"webpack\").AssetInfo} AssetInfo */\n\n/** @typedef {import(\"webpack\").NormalModule} NormalModule */\n\n/** @typedef {import(\"./index.js\").LoaderOptions} LoaderOptions */\n\n/** @typedef {any} TODO */\n\n/**\n * @typedef {Object} Dependency\n * @property {string} identifier\n * @property {string | null} context\n * @property {Buffer} content\n * @property {string} media\n * @property {string} [supports]\n * @property {string} [layer]\n * @property {Buffer} [sourceMap]\n */\n\n/**\n * @param {string} content\n * @param {{ loaderContext: import(\"webpack\").LoaderContext<LoaderOptions>, options: LoaderOptions, locals: {[key: string]: string } | undefined }} context\n * @returns {string}\n */\n\n\nfunction hotLoader(content, context) {\n  const accept = context.locals ? \"\" : \"module.hot.accept(undefined, cssReload);\";\n  return `${content}\n    if(module.hot) {\n      // ${Date.now()}\n      var cssReload = require(${stringifyRequest(context.loaderContext, path.join(__dirname, \"hmr/hotModuleReplacement.js\"))})(module.id, ${JSON.stringify({ ...context.options,\n    locals: !!context.locals\n  })});\n      module.hot.dispose(cssReload);\n      ${accept}\n    }\n  `;\n}\n/**\n * @this {import(\"webpack\").LoaderContext<LoaderOptions>}\n * @param {string} request\n */\n\n\nfunction pitch(request) {\n  // @ts-ignore\n  const options = this.getOptions(\n  /** @type {Schema} */\n  schema);\n  const emit = typeof options.emit !== \"undefined\" ? options.emit : true;\n  const callback = this.async();\n  const optionsFromPlugin =\n  /** @type {TODO} */\n  this[MiniCssExtractPlugin.pluginSymbol];\n\n  if (!optionsFromPlugin) {\n    callback(new Error(\"You forgot to add 'mini-css-extract-plugin' plugin (i.e. `{ plugins: [new MiniCssExtractPlugin()] }`), please read https://github.com/webpack-contrib/mini-css-extract-plugin#getting-started\"));\n    return;\n  }\n\n  const {\n    webpack\n  } =\n  /** @type {Compiler} */\n  this._compiler;\n  /**\n   * @param {TODO} originalExports\n   * @param {Compilation} [compilation]\n   * @param {{ [name: string]: Source }} [assets]\n   * @param {Map<string, AssetInfo>} [assetsInfo]\n   * @returns {void}\n   */\n\n  const handleExports = (originalExports, compilation, assets, assetsInfo) => {\n    /** @type {{[key: string]: string } | undefined} */\n    let locals;\n    let namedExport;\n    const esModule = typeof options.esModule !== \"undefined\" ? options.esModule : true;\n    /**\n     * @param {Dependency[] | [null, object][]} dependencies\n     */\n\n    const addDependencies = dependencies => {\n      if (!Array.isArray(dependencies) && dependencies != null) {\n        throw new Error(`Exported value was not extracted as an array: ${JSON.stringify(dependencies)}`);\n      }\n\n      const identifierCountMap = new Map();\n      let lastDep;\n\n      for (const dependency of dependencies) {\n        if (!\n        /** @type {Dependency} */\n        dependency.identifier || !emit) {\n          // eslint-disable-next-line no-continue\n          continue;\n        }\n\n        const count = identifierCountMap.get(\n        /** @type {Dependency} */\n        dependency.identifier) || 0;\n        const CssDependency = MiniCssExtractPlugin.getCssDependency(webpack);\n        /** @type {NormalModule} */\n\n        this._module.addDependency(lastDep = new CssDependency(\n        /** @type {Dependency} */\n        dependency,\n        /** @type {Dependency} */\n        dependency.context, count));\n\n        identifierCountMap.set(\n        /** @type {Dependency} */\n        dependency.identifier, count + 1);\n      }\n\n      if (lastDep && assets) {\n        lastDep.assets = assets;\n        lastDep.assetsInfo = assetsInfo;\n      }\n    };\n\n    try {\n      // eslint-disable-next-line no-underscore-dangle\n      const exports = originalExports.__esModule ? originalExports.default : originalExports;\n      namedExport = // eslint-disable-next-line no-underscore-dangle\n      originalExports.__esModule && (!originalExports.default || !(\"locals\" in originalExports.default));\n\n      if (namedExport) {\n        Object.keys(originalExports).forEach(key => {\n          if (key !== \"default\") {\n            if (!locals) {\n              locals = {};\n            }\n\n            locals[key] = originalExports[key];\n          }\n        });\n      } else {\n        locals = exports && exports.locals;\n      }\n      /** @type {Dependency[] | [null, object][]} */\n\n\n      let dependencies;\n\n      if (!Array.isArray(exports)) {\n        dependencies = [[null, exports]];\n      } else {\n        dependencies = exports.map(_ref => {\n          let [id, content, media, sourceMap, supports, layer] = _ref;\n          let identifier = id;\n          let context;\n\n          if (compilation) {\n            const module =\n            /** @type {Module} */\n            findModuleById(compilation, id);\n            identifier = module.identifier();\n            ({\n              context\n            } = module);\n          } else {\n            // TODO check if this context is used somewhere\n            context = this.rootContext;\n          }\n\n          return {\n            identifier,\n            context,\n            content: Buffer.from(content),\n            media,\n            supports,\n            layer,\n            sourceMap: sourceMap ? Buffer.from(JSON.stringify(sourceMap)) : // eslint-disable-next-line no-undefined\n            undefined\n          };\n        });\n      }\n\n      addDependencies(dependencies);\n    } catch (e) {\n      callback(\n      /** @type {Error} */\n      e);\n      return;\n    }\n\n    const result = locals ? namedExport ? Object.keys(locals).map(key => `\\nexport var ${key} = ${JSON.stringify(\n    /** @type {{[key: string]: string }} */\n    locals[key])};`).join(\"\") : `\\n${esModule ? \"export default\" : \"module.exports =\"} ${JSON.stringify(locals)};` : esModule ? `\\nexport {};` : \"\";\n    let resultSource = `// extracted by ${MiniCssExtractPlugin.pluginName}`; // only attempt hotreloading if the css is actually used for something other than hash values\n\n    resultSource += this.hot && emit ? hotLoader(result, {\n      loaderContext: this,\n      options,\n      locals\n    }) : result;\n    callback(null, resultSource);\n  };\n\n  let {\n    publicPath\n  } =\n  /** @type {Compilation} */\n  this._compilation.outputOptions;\n\n  if (typeof options.publicPath === \"string\") {\n    // eslint-disable-next-line prefer-destructuring\n    publicPath = options.publicPath;\n  } else if (typeof options.publicPath === \"function\") {\n    publicPath = options.publicPath(this.resourcePath, this.rootContext);\n  }\n\n  if (publicPath === \"auto\") {\n    publicPath = AUTO_PUBLIC_PATH;\n  }\n\n  if (typeof optionsFromPlugin.experimentalUseImportModule === \"undefined\" && typeof this.importModule === \"function\" || optionsFromPlugin.experimentalUseImportModule) {\n    if (!this.importModule) {\n      callback(new Error(\"You are using 'experimentalUseImportModule' but 'this.importModule' is not available in loader context. You need to have at least webpack 5.33.2.\"));\n      return;\n    }\n\n    let publicPathForExtract;\n\n    if (typeof publicPath === \"string\") {\n      const isAbsolutePublicPath = /^[a-zA-Z][a-zA-Z\\d+\\-.]*?:/.test(publicPath);\n      publicPathForExtract = isAbsolutePublicPath ? publicPath : `${ABSOLUTE_PUBLIC_PATH}${publicPath.replace(/\\./g, SINGLE_DOT_PATH_SEGMENT)}`;\n    } else {\n      publicPathForExtract = publicPath;\n    }\n\n    this.importModule(`${this.resourcePath}.webpack[javascript/auto]!=!!!${request}`, {\n      layer: options.layer,\n      publicPath:\n      /** @type {string} */\n      publicPathForExtract,\n      baseUri: `${BASE_URI}/`\n    },\n    /**\n     * @param {Error | null | undefined} error\n     * @param {object} exports\n     */\n    (error, exports) => {\n      if (error) {\n        callback(error);\n        return;\n      }\n\n      handleExports(exports);\n    });\n    return;\n  }\n\n  const loaders = this.loaders.slice(this.loaderIndex + 1);\n  this.addDependency(this.resourcePath);\n  const childFilename = \"*\";\n  const outputOptions = {\n    filename: childFilename,\n    publicPath\n  };\n\n  const childCompiler =\n  /** @type {Compilation} */\n  this._compilation.createChildCompiler(`${MiniCssExtractPlugin.pluginName} ${request}`, outputOptions); // The templates are compiled and executed by NodeJS - similar to server side rendering\n  // Unfortunately this causes issues as some loaders require an absolute URL to support ES Modules\n  // The following config enables relative URL support for the child compiler\n\n\n  childCompiler.options.module = { ...childCompiler.options.module\n  };\n  childCompiler.options.module.parser = { ...childCompiler.options.module.parser\n  };\n  childCompiler.options.module.parser.javascript = { ...childCompiler.options.module.parser.javascript,\n    url: \"relative\"\n  };\n  const {\n    NodeTemplatePlugin\n  } = webpack.node;\n  const {\n    NodeTargetPlugin\n  } = webpack.node;\n  new NodeTemplatePlugin(outputOptions).apply(childCompiler);\n  new NodeTargetPlugin().apply(childCompiler);\n  const {\n    EntryOptionPlugin\n  } = webpack;\n  const {\n    library: {\n      EnableLibraryPlugin\n    }\n  } = webpack;\n  new EnableLibraryPlugin(\"commonjs2\").apply(childCompiler);\n  EntryOptionPlugin.applyEntryOption(childCompiler, this.context, {\n    child: {\n      library: {\n        type: \"commonjs2\"\n      },\n      import: [`!!${request}`]\n    }\n  });\n  const {\n    LimitChunkCountPlugin\n  } = webpack.optimize;\n  new LimitChunkCountPlugin({\n    maxChunks: 1\n  }).apply(childCompiler);\n  const {\n    NormalModule\n  } = webpack;\n  childCompiler.hooks.thisCompilation.tap(`${MiniCssExtractPlugin.pluginName} loader`,\n  /**\n   * @param {Compilation} compilation\n   */\n  compilation => {\n    const normalModuleHook = NormalModule.getCompilationHooks(compilation).loader;\n    normalModuleHook.tap(`${MiniCssExtractPlugin.pluginName} loader`, (loaderContext, module) => {\n      if (module.request === request) {\n        // eslint-disable-next-line no-param-reassign\n        module.loaders = loaders.map(loader => {\n          return {\n            type: null,\n            loader: loader.path,\n            options: loader.options,\n            ident: loader.ident\n          };\n        });\n      }\n    });\n  });\n  /** @type {string | Buffer} */\n\n  let source;\n  childCompiler.hooks.compilation.tap(MiniCssExtractPlugin.pluginName,\n  /**\n   * @param {Compilation} compilation\n   */\n  compilation => {\n    compilation.hooks.processAssets.tap(MiniCssExtractPlugin.pluginName, () => {\n      source = compilation.assets[childFilename] && compilation.assets[childFilename].source(); // Remove all chunk assets\n\n      compilation.chunks.forEach(chunk => {\n        chunk.files.forEach(file => {\n          compilation.deleteAsset(file);\n        });\n      });\n    });\n  });\n  childCompiler.runAsChild((error, entries, compilation) => {\n    if (error) {\n      callback(error);\n      return;\n    }\n\n    if (\n    /** @type {Compilation} */\n    compilation.errors.length > 0) {\n      callback(\n      /** @type {Compilation} */\n      compilation.errors[0]);\n      return;\n    }\n    /** @type {{ [name: string]: Source }} */\n\n\n    const assets = Object.create(null);\n    /** @type {Map<string, AssetInfo>} */\n\n    const assetsInfo = new Map();\n\n    for (const asset of\n    /** @type {Compilation} */\n    compilation.getAssets()) {\n      assets[asset.name] = asset.source;\n      assetsInfo.set(asset.name, asset.info);\n    }\n    /** @type {Compilation} */\n\n\n    compilation.fileDependencies.forEach(dep => {\n      this.addDependency(dep);\n    }, this);\n    /** @type {Compilation} */\n\n    compilation.contextDependencies.forEach(dep => {\n      this.addContextDependency(dep);\n    }, this);\n\n    if (!source) {\n      callback(new Error(\"Didn't get a result from child compiler\"));\n      return;\n    }\n\n    let originalExports;\n\n    try {\n      originalExports = evalModuleCode(this, source, request);\n    } catch (e) {\n      callback(\n      /** @type {Error} */\n      e);\n      return;\n    }\n\n    handleExports(originalExports, compilation, assets, assetsInfo);\n  });\n}\n\nmodule.exports = {\n  default: function loader() {},\n  pitch\n};","map":{"version":3,"names":["path","require","findModuleById","evalModuleCode","AUTO_PUBLIC_PATH","ABSOLUTE_PUBLIC_PATH","BASE_URI","SINGLE_DOT_PATH_SEGMENT","stringifyRequest","schema","MiniCssExtractPlugin","hotLoader","content","context","accept","locals","Date","now","loaderContext","join","__dirname","JSON","stringify","options","pitch","request","getOptions","emit","callback","async","optionsFromPlugin","pluginSymbol","Error","webpack","_compiler","handleExports","originalExports","compilation","assets","assetsInfo","namedExport","esModule","addDependencies","dependencies","Array","isArray","identifierCountMap","Map","lastDep","dependency","identifier","count","get","CssDependency","getCssDependency","_module","addDependency","set","exports","__esModule","default","Object","keys","forEach","key","map","id","media","sourceMap","supports","layer","module","rootContext","Buffer","from","undefined","e","result","resultSource","pluginName","hot","publicPath","_compilation","outputOptions","resourcePath","experimentalUseImportModule","importModule","publicPathForExtract","isAbsolutePublicPath","test","replace","baseUri","error","loaders","slice","loaderIndex","childFilename","filename","childCompiler","createChildCompiler","parser","javascript","url","NodeTemplatePlugin","node","NodeTargetPlugin","apply","EntryOptionPlugin","library","EnableLibraryPlugin","applyEntryOption","child","type","import","LimitChunkCountPlugin","optimize","maxChunks","NormalModule","hooks","thisCompilation","tap","normalModuleHook","getCompilationHooks","loader","ident","source","processAssets","chunks","chunk","files","file","deleteAsset","runAsChild","entries","errors","length","create","asset","getAssets","name","info","fileDependencies","dep","contextDependencies","addContextDependency"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/mini-css-extract-plugin/dist/loader.js"],"sourcesContent":["\"use strict\";\n\nconst path = require(\"path\");\n\nconst {\n  findModuleById,\n  evalModuleCode,\n  AUTO_PUBLIC_PATH,\n  ABSOLUTE_PUBLIC_PATH,\n  BASE_URI,\n  SINGLE_DOT_PATH_SEGMENT,\n  stringifyRequest\n} = require(\"./utils\");\n\nconst schema = require(\"./loader-options.json\");\n\nconst MiniCssExtractPlugin = require(\"./index\");\n/** @typedef {import(\"schema-utils/declarations/validate\").Schema} Schema */\n\n/** @typedef {import(\"webpack\").Compiler} Compiler */\n\n/** @typedef {import(\"webpack\").Compilation} Compilation */\n\n/** @typedef {import(\"webpack\").Chunk} Chunk */\n\n/** @typedef {import(\"webpack\").Module} Module */\n\n/** @typedef {import(\"webpack\").sources.Source} Source */\n\n/** @typedef {import(\"webpack\").AssetInfo} AssetInfo */\n\n/** @typedef {import(\"webpack\").NormalModule} NormalModule */\n\n/** @typedef {import(\"./index.js\").LoaderOptions} LoaderOptions */\n\n/** @typedef {any} TODO */\n\n/**\n * @typedef {Object} Dependency\n * @property {string} identifier\n * @property {string | null} context\n * @property {Buffer} content\n * @property {string} media\n * @property {string} [supports]\n * @property {string} [layer]\n * @property {Buffer} [sourceMap]\n */\n\n/**\n * @param {string} content\n * @param {{ loaderContext: import(\"webpack\").LoaderContext<LoaderOptions>, options: LoaderOptions, locals: {[key: string]: string } | undefined }} context\n * @returns {string}\n */\n\n\nfunction hotLoader(content, context) {\n  const accept = context.locals ? \"\" : \"module.hot.accept(undefined, cssReload);\";\n  return `${content}\n    if(module.hot) {\n      // ${Date.now()}\n      var cssReload = require(${stringifyRequest(context.loaderContext, path.join(__dirname, \"hmr/hotModuleReplacement.js\"))})(module.id, ${JSON.stringify({ ...context.options,\n    locals: !!context.locals\n  })});\n      module.hot.dispose(cssReload);\n      ${accept}\n    }\n  `;\n}\n/**\n * @this {import(\"webpack\").LoaderContext<LoaderOptions>}\n * @param {string} request\n */\n\n\nfunction pitch(request) {\n  // @ts-ignore\n  const options = this.getOptions(\n  /** @type {Schema} */\n  schema);\n  const emit = typeof options.emit !== \"undefined\" ? options.emit : true;\n  const callback = this.async();\n  const optionsFromPlugin =\n  /** @type {TODO} */\n  this[MiniCssExtractPlugin.pluginSymbol];\n\n  if (!optionsFromPlugin) {\n    callback(new Error(\"You forgot to add 'mini-css-extract-plugin' plugin (i.e. `{ plugins: [new MiniCssExtractPlugin()] }`), please read https://github.com/webpack-contrib/mini-css-extract-plugin#getting-started\"));\n    return;\n  }\n\n  const {\n    webpack\n  } =\n  /** @type {Compiler} */\n  this._compiler;\n  /**\n   * @param {TODO} originalExports\n   * @param {Compilation} [compilation]\n   * @param {{ [name: string]: Source }} [assets]\n   * @param {Map<string, AssetInfo>} [assetsInfo]\n   * @returns {void}\n   */\n\n  const handleExports = (originalExports, compilation, assets, assetsInfo) => {\n    /** @type {{[key: string]: string } | undefined} */\n    let locals;\n    let namedExport;\n    const esModule = typeof options.esModule !== \"undefined\" ? options.esModule : true;\n    /**\n     * @param {Dependency[] | [null, object][]} dependencies\n     */\n\n    const addDependencies = dependencies => {\n      if (!Array.isArray(dependencies) && dependencies != null) {\n        throw new Error(`Exported value was not extracted as an array: ${JSON.stringify(dependencies)}`);\n      }\n\n      const identifierCountMap = new Map();\n      let lastDep;\n\n      for (const dependency of dependencies) {\n        if (!\n        /** @type {Dependency} */\n        dependency.identifier || !emit) {\n          // eslint-disable-next-line no-continue\n          continue;\n        }\n\n        const count = identifierCountMap.get(\n        /** @type {Dependency} */\n        dependency.identifier) || 0;\n        const CssDependency = MiniCssExtractPlugin.getCssDependency(webpack);\n        /** @type {NormalModule} */\n\n        this._module.addDependency(lastDep = new CssDependency(\n        /** @type {Dependency} */\n        dependency,\n        /** @type {Dependency} */\n        dependency.context, count));\n\n        identifierCountMap.set(\n        /** @type {Dependency} */\n        dependency.identifier, count + 1);\n      }\n\n      if (lastDep && assets) {\n        lastDep.assets = assets;\n        lastDep.assetsInfo = assetsInfo;\n      }\n    };\n\n    try {\n      // eslint-disable-next-line no-underscore-dangle\n      const exports = originalExports.__esModule ? originalExports.default : originalExports;\n      namedExport = // eslint-disable-next-line no-underscore-dangle\n      originalExports.__esModule && (!originalExports.default || !(\"locals\" in originalExports.default));\n\n      if (namedExport) {\n        Object.keys(originalExports).forEach(key => {\n          if (key !== \"default\") {\n            if (!locals) {\n              locals = {};\n            }\n\n            locals[key] = originalExports[key];\n          }\n        });\n      } else {\n        locals = exports && exports.locals;\n      }\n      /** @type {Dependency[] | [null, object][]} */\n\n\n      let dependencies;\n\n      if (!Array.isArray(exports)) {\n        dependencies = [[null, exports]];\n      } else {\n        dependencies = exports.map(([id, content, media, sourceMap, supports, layer]) => {\n          let identifier = id;\n          let context;\n\n          if (compilation) {\n            const module =\n            /** @type {Module} */\n            findModuleById(compilation, id);\n            identifier = module.identifier();\n            ({\n              context\n            } = module);\n          } else {\n            // TODO check if this context is used somewhere\n            context = this.rootContext;\n          }\n\n          return {\n            identifier,\n            context,\n            content: Buffer.from(content),\n            media,\n            supports,\n            layer,\n            sourceMap: sourceMap ? Buffer.from(JSON.stringify(sourceMap)) : // eslint-disable-next-line no-undefined\n            undefined\n          };\n        });\n      }\n\n      addDependencies(dependencies);\n    } catch (e) {\n      callback(\n      /** @type {Error} */\n      e);\n      return;\n    }\n\n    const result = locals ? namedExport ? Object.keys(locals).map(key => `\\nexport var ${key} = ${JSON.stringify(\n    /** @type {{[key: string]: string }} */\n    locals[key])};`).join(\"\") : `\\n${esModule ? \"export default\" : \"module.exports =\"} ${JSON.stringify(locals)};` : esModule ? `\\nexport {};` : \"\";\n    let resultSource = `// extracted by ${MiniCssExtractPlugin.pluginName}`; // only attempt hotreloading if the css is actually used for something other than hash values\n\n    resultSource += this.hot && emit ? hotLoader(result, {\n      loaderContext: this,\n      options,\n      locals\n    }) : result;\n    callback(null, resultSource);\n  };\n\n  let {\n    publicPath\n  } =\n  /** @type {Compilation} */\n  this._compilation.outputOptions;\n\n  if (typeof options.publicPath === \"string\") {\n    // eslint-disable-next-line prefer-destructuring\n    publicPath = options.publicPath;\n  } else if (typeof options.publicPath === \"function\") {\n    publicPath = options.publicPath(this.resourcePath, this.rootContext);\n  }\n\n  if (publicPath === \"auto\") {\n    publicPath = AUTO_PUBLIC_PATH;\n  }\n\n  if (typeof optionsFromPlugin.experimentalUseImportModule === \"undefined\" && typeof this.importModule === \"function\" || optionsFromPlugin.experimentalUseImportModule) {\n    if (!this.importModule) {\n      callback(new Error(\"You are using 'experimentalUseImportModule' but 'this.importModule' is not available in loader context. You need to have at least webpack 5.33.2.\"));\n      return;\n    }\n\n    let publicPathForExtract;\n\n    if (typeof publicPath === \"string\") {\n      const isAbsolutePublicPath = /^[a-zA-Z][a-zA-Z\\d+\\-.]*?:/.test(publicPath);\n      publicPathForExtract = isAbsolutePublicPath ? publicPath : `${ABSOLUTE_PUBLIC_PATH}${publicPath.replace(/\\./g, SINGLE_DOT_PATH_SEGMENT)}`;\n    } else {\n      publicPathForExtract = publicPath;\n    }\n\n    this.importModule(`${this.resourcePath}.webpack[javascript/auto]!=!!!${request}`, {\n      layer: options.layer,\n      publicPath:\n      /** @type {string} */\n      publicPathForExtract,\n      baseUri: `${BASE_URI}/`\n    },\n    /**\n     * @param {Error | null | undefined} error\n     * @param {object} exports\n     */\n    (error, exports) => {\n      if (error) {\n        callback(error);\n        return;\n      }\n\n      handleExports(exports);\n    });\n    return;\n  }\n\n  const loaders = this.loaders.slice(this.loaderIndex + 1);\n  this.addDependency(this.resourcePath);\n  const childFilename = \"*\";\n  const outputOptions = {\n    filename: childFilename,\n    publicPath\n  };\n\n  const childCompiler =\n  /** @type {Compilation} */\n  this._compilation.createChildCompiler(`${MiniCssExtractPlugin.pluginName} ${request}`, outputOptions); // The templates are compiled and executed by NodeJS - similar to server side rendering\n  // Unfortunately this causes issues as some loaders require an absolute URL to support ES Modules\n  // The following config enables relative URL support for the child compiler\n\n\n  childCompiler.options.module = { ...childCompiler.options.module\n  };\n  childCompiler.options.module.parser = { ...childCompiler.options.module.parser\n  };\n  childCompiler.options.module.parser.javascript = { ...childCompiler.options.module.parser.javascript,\n    url: \"relative\"\n  };\n  const {\n    NodeTemplatePlugin\n  } = webpack.node;\n  const {\n    NodeTargetPlugin\n  } = webpack.node;\n  new NodeTemplatePlugin(outputOptions).apply(childCompiler);\n  new NodeTargetPlugin().apply(childCompiler);\n  const {\n    EntryOptionPlugin\n  } = webpack;\n  const {\n    library: {\n      EnableLibraryPlugin\n    }\n  } = webpack;\n  new EnableLibraryPlugin(\"commonjs2\").apply(childCompiler);\n  EntryOptionPlugin.applyEntryOption(childCompiler, this.context, {\n    child: {\n      library: {\n        type: \"commonjs2\"\n      },\n      import: [`!!${request}`]\n    }\n  });\n  const {\n    LimitChunkCountPlugin\n  } = webpack.optimize;\n  new LimitChunkCountPlugin({\n    maxChunks: 1\n  }).apply(childCompiler);\n  const {\n    NormalModule\n  } = webpack;\n  childCompiler.hooks.thisCompilation.tap(`${MiniCssExtractPlugin.pluginName} loader`,\n  /**\n   * @param {Compilation} compilation\n   */\n  compilation => {\n    const normalModuleHook = NormalModule.getCompilationHooks(compilation).loader;\n    normalModuleHook.tap(`${MiniCssExtractPlugin.pluginName} loader`, (loaderContext, module) => {\n      if (module.request === request) {\n        // eslint-disable-next-line no-param-reassign\n        module.loaders = loaders.map(loader => {\n          return {\n            type: null,\n            loader: loader.path,\n            options: loader.options,\n            ident: loader.ident\n          };\n        });\n      }\n    });\n  });\n  /** @type {string | Buffer} */\n\n  let source;\n  childCompiler.hooks.compilation.tap(MiniCssExtractPlugin.pluginName,\n  /**\n   * @param {Compilation} compilation\n   */\n  compilation => {\n    compilation.hooks.processAssets.tap(MiniCssExtractPlugin.pluginName, () => {\n      source = compilation.assets[childFilename] && compilation.assets[childFilename].source(); // Remove all chunk assets\n\n      compilation.chunks.forEach(chunk => {\n        chunk.files.forEach(file => {\n          compilation.deleteAsset(file);\n        });\n      });\n    });\n  });\n  childCompiler.runAsChild((error, entries, compilation) => {\n    if (error) {\n      callback(error);\n      return;\n    }\n\n    if (\n    /** @type {Compilation} */\n    compilation.errors.length > 0) {\n      callback(\n      /** @type {Compilation} */\n      compilation.errors[0]);\n      return;\n    }\n    /** @type {{ [name: string]: Source }} */\n\n\n    const assets = Object.create(null);\n    /** @type {Map<string, AssetInfo>} */\n\n    const assetsInfo = new Map();\n\n    for (const asset of\n    /** @type {Compilation} */\n    compilation.getAssets()) {\n      assets[asset.name] = asset.source;\n      assetsInfo.set(asset.name, asset.info);\n    }\n    /** @type {Compilation} */\n\n\n    compilation.fileDependencies.forEach(dep => {\n      this.addDependency(dep);\n    }, this);\n    /** @type {Compilation} */\n\n    compilation.contextDependencies.forEach(dep => {\n      this.addContextDependency(dep);\n    }, this);\n\n    if (!source) {\n      callback(new Error(\"Didn't get a result from child compiler\"));\n      return;\n    }\n\n    let originalExports;\n\n    try {\n      originalExports = evalModuleCode(this, source, request);\n    } catch (e) {\n      callback(\n      /** @type {Error} */\n      e);\n      return;\n    }\n\n    handleExports(originalExports, compilation, assets, assetsInfo);\n  });\n}\n\nmodule.exports = {\n  default: function loader() {},\n  pitch\n};"],"mappings":"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"},"metadata":{},"sourceType":"script"}