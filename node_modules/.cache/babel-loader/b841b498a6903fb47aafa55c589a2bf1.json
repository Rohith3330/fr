{"ast":null,"code":"'use strict';\n\nvar assert = require('assert');\n\nvar http = require('http');\n\nvar https = require('https');\n\nvar net = require('net');\n\nvar util = require('util');\n\nvar transport = require('spdy-transport');\n\nvar debug = require('debug')('spdy:client'); // Node.js 0.10 and 0.12 support\n\n\nObject.assign = process.versions.modules >= 46 ? Object.assign // eslint-disable-next-line\n: util._extend;\n\nvar EventEmitter = require('events').EventEmitter;\n\nvar spdy = require('../spdy');\n\nvar mode = /^v0\\.8\\./.test(process.version) ? 'rusty' : /^v0\\.(9|10)\\./.test(process.version) ? 'old' : /^v0\\.12\\./.test(process.version) ? 'normal' : 'modern';\nvar proto = {};\n\nfunction instantiate(base) {\n  function Agent(options) {\n    this._init(base, options);\n  }\n\n  util.inherits(Agent, base);\n\n  Agent.create = function create(options) {\n    return new Agent(options);\n  };\n\n  Object.keys(proto).forEach(function (key) {\n    Agent.prototype[key] = proto[key];\n  });\n  return Agent;\n}\n\nproto._init = function _init(base, options) {\n  base.call(this, options);\n  var state = {};\n  this._spdyState = state;\n  state.host = options.host;\n  state.options = options.spdy || {};\n  state.secure = this instanceof https.Agent;\n  state.fallback = false;\n  state.createSocket = this._getCreateSocket();\n  state.socket = null;\n  state.connection = null; // No chunked encoding\n\n  this.keepAlive = false;\n  var self = this;\n\n  this._connect(options, function (err, connection) {\n    if (err) {\n      return self.emit('error', err);\n    }\n\n    state.connection = connection;\n    self.emit('_connect');\n  });\n};\n\nproto._getCreateSocket = function _getCreateSocket() {\n  // Find super's `createSocket` method\n  var createSocket;\n  var cons = this.constructor.super_;\n\n  do {\n    createSocket = cons.prototype.createSocket;\n\n    if (cons.super_ === EventEmitter || !cons.super_) {\n      break;\n    }\n\n    cons = cons.super_;\n  } while (!createSocket);\n\n  if (!createSocket) {\n    createSocket = http.Agent.prototype.createSocket;\n  }\n\n  assert(createSocket, '.createSocket() method not found');\n  return createSocket;\n};\n\nproto._connect = function _connect(options, callback) {\n  var self = this;\n  var state = this._spdyState;\n  var protocols = state.options.protocols || ['h2', 'spdy/3.1', 'spdy/3', 'spdy/2', 'http/1.1', 'http/1.0']; // TODO(indutny): reconnect automatically?\n\n  var socket = this.createConnection(Object.assign({\n    NPNProtocols: protocols,\n    ALPNProtocols: protocols,\n    servername: options.servername || options.host\n  }, options));\n  state.socket = socket;\n  socket.setNoDelay(true);\n\n  function onError(err) {\n    return callback(err);\n  }\n\n  socket.on('error', onError);\n  socket.on(state.secure ? 'secureConnect' : 'connect', function () {\n    socket.removeListener('error', onError);\n    var protocol;\n\n    if (state.secure) {\n      protocol = socket.npnProtocol || socket.alpnProtocol || state.options.protocol;\n    } else {\n      protocol = state.options.protocol;\n    } // HTTP server - kill socket and switch to the fallback mode\n\n\n    if (!protocol || protocol === 'http/1.1' || protocol === 'http/1.0') {\n      debug('activating fallback');\n      socket.destroy();\n      state.fallback = true;\n      return;\n    }\n\n    debug('connected protocol=%j', protocol);\n    var connection = transport.connection.create(socket, Object.assign({\n      protocol: /spdy/.test(protocol) ? 'spdy' : 'http2',\n      isServer: false\n    }, state.options.connection || {})); // Pass connection level errors are passed to the agent.\n\n    connection.on('error', function (err) {\n      self.emit('error', err);\n    }); // Set version when we are certain\n\n    if (protocol === 'h2') {\n      connection.start(4);\n    } else if (protocol === 'spdy/3.1') {\n      connection.start(3.1);\n    } else if (protocol === 'spdy/3') {\n      connection.start(3);\n    } else if (protocol === 'spdy/2') {\n      connection.start(2);\n    } else {\n      socket.destroy();\n      callback(new Error('Unexpected protocol: ' + protocol));\n      return;\n    }\n\n    if (state.options['x-forwarded-for'] !== undefined) {\n      connection.sendXForwardedFor(state.options['x-forwarded-for']);\n    }\n\n    callback(null, connection);\n  });\n};\n\nproto._createSocket = function _createSocket(req, options, callback) {\n  var state = this._spdyState;\n\n  if (state.fallback) {\n    return state.createSocket(req, options);\n  }\n\n  var handle = spdy.handle.create(null, null, state.socket);\n  var socketOptions = {\n    handle: handle,\n    allowHalfOpen: true\n  };\n  var socket;\n\n  if (state.secure) {\n    socket = new spdy.Socket(state.socket, socketOptions);\n  } else {\n    socket = new net.Socket(socketOptions);\n  }\n\n  handle.assignSocket(socket);\n  handle.assignClientRequest(req); // Create stream only once `req.end()` is called\n\n  var self = this;\n  handle.once('needStream', function () {\n    if (state.connection === null) {\n      self.once('_connect', function () {\n        handle.setStream(self._createStream(req, handle));\n      });\n    } else {\n      handle.setStream(self._createStream(req, handle));\n    }\n  }); // Yes, it is in reverse\n\n  req.on('response', function (res) {\n    handle.assignRequest(res);\n  });\n  handle.assignResponse(req); // Handle PUSH\n\n  req.addListener('newListener', spdy.request.onNewListener); // For v0.8\n\n  socket.readable = true;\n  socket.writable = true;\n\n  if (callback) {\n    return callback(null, socket);\n  }\n\n  return socket;\n};\n\nif (mode === 'modern' || mode === 'normal') {\n  proto.createSocket = proto._createSocket;\n} else {\n  proto.createSocket = function createSocket(name, host, port, addr, req) {\n    var state = this._spdyState;\n\n    if (state.fallback) {\n      return state.createSocket(name, host, port, addr, req);\n    }\n\n    return this._createSocket(req, {\n      host: host,\n      port: port\n    });\n  };\n}\n\nproto._createStream = function _createStream(req, handle) {\n  var state = this._spdyState;\n  var self = this;\n  return state.connection.reserveStream({\n    method: req.method,\n    path: req.path,\n    headers: req._headers,\n    host: state.host\n  }, function (err, stream) {\n    if (err) {\n      return self.emit('error', err);\n    }\n\n    stream.on('response', function (status, headers) {\n      handle.emitResponse(status, headers);\n    });\n  });\n}; // Public APIs\n\n\nproto.close = function close(callback) {\n  var state = this._spdyState;\n\n  if (state.connection === null) {\n    this.once('_connect', function () {\n      this.close(callback);\n    });\n    return;\n  }\n\n  state.connection.end(callback);\n};\n\nexports.Agent = instantiate(https.Agent);\nexports.PlainAgent = instantiate(http.Agent);\n\nexports.create = function create(base, options) {\n  if (typeof base === 'object') {\n    options = base;\n    base = null;\n  }\n\n  if (base) {\n    return instantiate(base).create(options);\n  }\n\n  if (options.spdy && options.spdy.plain) {\n    return exports.PlainAgent.create(options);\n  } else {\n    return exports.Agent.create(options);\n  }\n};","map":{"version":3,"names":["assert","require","http","https","net","util","transport","debug","Object","assign","process","versions","modules","_extend","EventEmitter","spdy","mode","test","version","proto","instantiate","base","Agent","options","_init","inherits","create","keys","forEach","key","prototype","call","state","_spdyState","host","secure","fallback","createSocket","_getCreateSocket","socket","connection","keepAlive","self","_connect","err","emit","cons","constructor","super_","callback","protocols","createConnection","NPNProtocols","ALPNProtocols","servername","setNoDelay","onError","on","removeListener","protocol","npnProtocol","alpnProtocol","destroy","isServer","start","Error","undefined","sendXForwardedFor","_createSocket","req","handle","socketOptions","allowHalfOpen","Socket","assignSocket","assignClientRequest","once","setStream","_createStream","res","assignRequest","assignResponse","addListener","request","onNewListener","readable","writable","name","port","addr","reserveStream","method","path","headers","_headers","stream","status","emitResponse","close","end","exports","PlainAgent","plain"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/spdy/lib/spdy/agent.js"],"sourcesContent":["'use strict'\n\nvar assert = require('assert')\nvar http = require('http')\nvar https = require('https')\nvar net = require('net')\nvar util = require('util')\nvar transport = require('spdy-transport')\nvar debug = require('debug')('spdy:client')\n\n// Node.js 0.10 and 0.12 support\nObject.assign = process.versions.modules >= 46\n  ? Object.assign // eslint-disable-next-line\n  : util._extend\n\nvar EventEmitter = require('events').EventEmitter\n\nvar spdy = require('../spdy')\n\nvar mode = /^v0\\.8\\./.test(process.version)\n  ? 'rusty'\n  : /^v0\\.(9|10)\\./.test(process.version)\n    ? 'old'\n    : /^v0\\.12\\./.test(process.version)\n      ? 'normal'\n      : 'modern'\n\nvar proto = {}\n\nfunction instantiate (base) {\n  function Agent (options) {\n    this._init(base, options)\n  }\n  util.inherits(Agent, base)\n\n  Agent.create = function create (options) {\n    return new Agent(options)\n  }\n\n  Object.keys(proto).forEach(function (key) {\n    Agent.prototype[key] = proto[key]\n  })\n\n  return Agent\n}\n\nproto._init = function _init (base, options) {\n  base.call(this, options)\n\n  var state = {}\n  this._spdyState = state\n\n  state.host = options.host\n  state.options = options.spdy || {}\n  state.secure = this instanceof https.Agent\n  state.fallback = false\n  state.createSocket = this._getCreateSocket()\n  state.socket = null\n  state.connection = null\n\n  // No chunked encoding\n  this.keepAlive = false\n\n  var self = this\n  this._connect(options, function (err, connection) {\n    if (err) {\n      return self.emit('error', err)\n    }\n\n    state.connection = connection\n    self.emit('_connect')\n  })\n}\n\nproto._getCreateSocket = function _getCreateSocket () {\n  // Find super's `createSocket` method\n  var createSocket\n  var cons = this.constructor.super_\n  do {\n    createSocket = cons.prototype.createSocket\n\n    if (cons.super_ === EventEmitter || !cons.super_) {\n      break\n    }\n    cons = cons.super_\n  } while (!createSocket)\n  if (!createSocket) {\n    createSocket = http.Agent.prototype.createSocket\n  }\n\n  assert(createSocket, '.createSocket() method not found')\n\n  return createSocket\n}\n\nproto._connect = function _connect (options, callback) {\n  var self = this\n  var state = this._spdyState\n\n  var protocols = state.options.protocols || [\n    'h2',\n    'spdy/3.1', 'spdy/3', 'spdy/2',\n    'http/1.1', 'http/1.0'\n  ]\n\n  // TODO(indutny): reconnect automatically?\n  var socket = this.createConnection(Object.assign({\n    NPNProtocols: protocols,\n    ALPNProtocols: protocols,\n    servername: options.servername || options.host\n  }, options))\n  state.socket = socket\n\n  socket.setNoDelay(true)\n\n  function onError (err) {\n    return callback(err)\n  }\n  socket.on('error', onError)\n\n  socket.on(state.secure ? 'secureConnect' : 'connect', function () {\n    socket.removeListener('error', onError)\n\n    var protocol\n    if (state.secure) {\n      protocol = socket.npnProtocol ||\n                 socket.alpnProtocol ||\n                 state.options.protocol\n    } else {\n      protocol = state.options.protocol\n    }\n\n    // HTTP server - kill socket and switch to the fallback mode\n    if (!protocol || protocol === 'http/1.1' || protocol === 'http/1.0') {\n      debug('activating fallback')\n      socket.destroy()\n      state.fallback = true\n      return\n    }\n\n    debug('connected protocol=%j', protocol)\n    var connection = transport.connection.create(socket, Object.assign({\n      protocol: /spdy/.test(protocol) ? 'spdy' : 'http2',\n      isServer: false\n    }, state.options.connection || {}))\n\n    // Pass connection level errors are passed to the agent.\n    connection.on('error', function (err) {\n      self.emit('error', err)\n    })\n\n    // Set version when we are certain\n    if (protocol === 'h2') {\n      connection.start(4)\n    } else if (protocol === 'spdy/3.1') {\n      connection.start(3.1)\n    } else if (protocol === 'spdy/3') {\n      connection.start(3)\n    } else if (protocol === 'spdy/2') {\n      connection.start(2)\n    } else {\n      socket.destroy()\n      callback(new Error('Unexpected protocol: ' + protocol))\n      return\n    }\n\n    if (state.options['x-forwarded-for'] !== undefined) {\n      connection.sendXForwardedFor(state.options['x-forwarded-for'])\n    }\n\n    callback(null, connection)\n  })\n}\n\nproto._createSocket = function _createSocket (req, options, callback) {\n  var state = this._spdyState\n  if (state.fallback) { return state.createSocket(req, options) }\n\n  var handle = spdy.handle.create(null, null, state.socket)\n\n  var socketOptions = {\n    handle: handle,\n    allowHalfOpen: true\n  }\n\n  var socket\n  if (state.secure) {\n    socket = new spdy.Socket(state.socket, socketOptions)\n  } else {\n    socket = new net.Socket(socketOptions)\n  }\n\n  handle.assignSocket(socket)\n  handle.assignClientRequest(req)\n\n  // Create stream only once `req.end()` is called\n  var self = this\n  handle.once('needStream', function () {\n    if (state.connection === null) {\n      self.once('_connect', function () {\n        handle.setStream(self._createStream(req, handle))\n      })\n    } else {\n      handle.setStream(self._createStream(req, handle))\n    }\n  })\n\n  // Yes, it is in reverse\n  req.on('response', function (res) {\n    handle.assignRequest(res)\n  })\n  handle.assignResponse(req)\n\n  // Handle PUSH\n  req.addListener('newListener', spdy.request.onNewListener)\n\n  // For v0.8\n  socket.readable = true\n  socket.writable = true\n\n  if (callback) {\n    return callback(null, socket)\n  }\n\n  return socket\n}\n\nif (mode === 'modern' || mode === 'normal') {\n  proto.createSocket = proto._createSocket\n} else {\n  proto.createSocket = function createSocket (name, host, port, addr, req) {\n    var state = this._spdyState\n    if (state.fallback) {\n      return state.createSocket(name, host, port, addr, req)\n    }\n\n    return this._createSocket(req, {\n      host: host,\n      port: port\n    })\n  }\n}\n\nproto._createStream = function _createStream (req, handle) {\n  var state = this._spdyState\n\n  var self = this\n  return state.connection.reserveStream({\n    method: req.method,\n    path: req.path,\n    headers: req._headers,\n    host: state.host\n  }, function (err, stream) {\n    if (err) {\n      return self.emit('error', err)\n    }\n\n    stream.on('response', function (status, headers) {\n      handle.emitResponse(status, headers)\n    })\n  })\n}\n\n// Public APIs\n\nproto.close = function close (callback) {\n  var state = this._spdyState\n\n  if (state.connection === null) {\n    this.once('_connect', function () {\n      this.close(callback)\n    })\n    return\n  }\n\n  state.connection.end(callback)\n}\n\nexports.Agent = instantiate(https.Agent)\nexports.PlainAgent = instantiate(http.Agent)\n\nexports.create = function create (base, options) {\n  if (typeof base === 'object') {\n    options = base\n    base = null\n  }\n\n  if (base) {\n    return instantiate(base).create(options)\n  }\n\n  if (options.spdy && options.spdy.plain) {\n    return exports.PlainAgent.create(options)\n  } else { return exports.Agent.create(options) }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}