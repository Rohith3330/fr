{"ast":null,"code":"'use strict';\n\nconst doctrine = require('doctrine');\n\nconst pragmaUtil = require('./pragma'); // eslint-disable-next-line valid-jsdoc\n\n/**\n * @template {(_: object) => any} T\n * @param {T} fn\n * @returns {T}\n */\n\n\nfunction memoize(fn) {\n  const cache = new WeakMap(); // @ts-ignore\n\n  return function memoizedFn(arg) {\n    const cachedValue = cache.get(arg);\n\n    if (cachedValue !== undefined) {\n      return cachedValue;\n    }\n\n    const v = fn(arg);\n    cache.set(arg, v);\n    return v;\n  };\n}\n\nconst getPragma = memoize(pragmaUtil.getFromContext);\nconst getCreateClass = memoize(pragmaUtil.getCreateClassFromContext);\n/**\n * @param {ASTNode} node\n * @param {Context} context\n * @returns {boolean}\n */\n\nfunction isES5Component(node, context) {\n  const pragma = getPragma(context);\n  const createClass = getCreateClass(context);\n\n  if (!node.parent || !node.parent.callee) {\n    return false;\n  }\n\n  const callee = node.parent.callee; // React.createClass({})\n\n  if (callee.type === 'MemberExpression') {\n    return callee.object.name === pragma && callee.property.name === createClass;\n  } // createClass({})\n\n\n  if (callee.type === 'Identifier') {\n    return callee.name === createClass;\n  }\n\n  return false;\n}\n/**\n * Check if the node is explicitly declared as a descendant of a React Component\n * @param {any} node\n * @param {Context} context\n * @returns {boolean}\n */\n\n\nfunction isExplicitComponent(node, context) {\n  const sourceCode = context.getSourceCode();\n  let comment; // Sometimes the passed node may not have been parsed yet by eslint, and this function call crashes.\n  // Can be removed when eslint sets \"parent\" property for all nodes on initial AST traversal: https://github.com/eslint/eslint-scope/issues/27\n  // eslint-disable-next-line no-warning-comments\n  // FIXME: Remove try/catch when https://github.com/eslint/eslint-scope/issues/27 is implemented.\n\n  try {\n    comment = sourceCode.getJSDocComment(node);\n  } catch (e) {\n    comment = null;\n  }\n\n  if (comment === null) {\n    return false;\n  }\n\n  let commentAst;\n\n  try {\n    commentAst = doctrine.parse(comment.value, {\n      unwrap: true,\n      tags: ['extends', 'augments']\n    });\n  } catch (e) {\n    // handle a bug in the archived `doctrine`, see #2596\n    return false;\n  }\n\n  const relevantTags = commentAst.tags.filter(tag => tag.name === 'React.Component' || tag.name === 'React.PureComponent');\n  return relevantTags.length > 0;\n}\n/**\n * @param {ASTNode} node\n * @param {Context} context\n * @returns {boolean}\n */\n\n\nfunction isES6Component(node, context) {\n  const pragma = getPragma(context);\n\n  if (isExplicitComponent(node, context)) {\n    return true;\n  }\n\n  if (!node.superClass) {\n    return false;\n  }\n\n  if (node.superClass.type === 'MemberExpression') {\n    return node.superClass.object.name === pragma && /^(Pure)?Component$/.test(node.superClass.property.name);\n  }\n\n  if (node.superClass.type === 'Identifier') {\n    return /^(Pure)?Component$/.test(node.superClass.name);\n  }\n\n  return false;\n}\n/**\n * Get the parent ES5 component node from the current scope\n * @param {Context} context\n * @returns {ASTNode|null}\n */\n\n\nfunction getParentES5Component(context) {\n  let scope = context.getScope();\n\n  while (scope) {\n    // @ts-ignore\n    const node = scope.block && scope.block.parent && scope.block.parent.parent;\n\n    if (node && isES5Component(node, context)) {\n      return node;\n    }\n\n    scope = scope.upper;\n  }\n\n  return null;\n}\n/**\n * Get the parent ES6 component node from the current scope\n * @param {Context} context\n * @returns {ASTNode | null}\n */\n\n\nfunction getParentES6Component(context) {\n  let scope = context.getScope();\n\n  while (scope && scope.type !== 'class') {\n    scope = scope.upper;\n  }\n\n  const node = scope && scope.block;\n\n  if (!node || !isES6Component(node, context)) {\n    return null;\n  }\n\n  return node;\n}\n/**\n * Checks if a component extends React.PureComponent\n * @param {ASTNode} node\n * @param {Context} context\n * @returns {boolean}\n */\n\n\nfunction isPureComponent(node, context) {\n  const pragma = getPragma(context);\n  const sourceCode = context.getSourceCode();\n\n  if (node.superClass) {\n    return new RegExp(`^(${pragma}\\\\.)?PureComponent$`).test(sourceCode.getText(node.superClass));\n  }\n\n  return false;\n}\n/**\n * @param {ASTNode} node\n * @returns {boolean}\n */\n\n\nfunction isStateMemberExpression(node) {\n  return node.type === 'MemberExpression' && node.object.type === 'ThisExpression' && node.property.name === 'state';\n}\n\nmodule.exports = {\n  isES5Component,\n  isES6Component,\n  getParentES5Component,\n  getParentES6Component,\n  isExplicitComponent,\n  isPureComponent,\n  isStateMemberExpression\n};","map":{"version":3,"names":["doctrine","require","pragmaUtil","memoize","fn","cache","WeakMap","memoizedFn","arg","cachedValue","get","undefined","v","set","getPragma","getFromContext","getCreateClass","getCreateClassFromContext","isES5Component","node","context","pragma","createClass","parent","callee","type","object","name","property","isExplicitComponent","sourceCode","getSourceCode","comment","getJSDocComment","e","commentAst","parse","value","unwrap","tags","relevantTags","filter","tag","length","isES6Component","superClass","test","getParentES5Component","scope","getScope","block","upper","getParentES6Component","isPureComponent","RegExp","getText","isStateMemberExpression","module","exports"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/eslint-plugin-react/lib/util/componentUtil.js"],"sourcesContent":["'use strict';\n\nconst doctrine = require('doctrine');\nconst pragmaUtil = require('./pragma');\n\n// eslint-disable-next-line valid-jsdoc\n/**\n * @template {(_: object) => any} T\n * @param {T} fn\n * @returns {T}\n */\nfunction memoize(fn) {\n  const cache = new WeakMap();\n  // @ts-ignore\n  return function memoizedFn(arg) {\n    const cachedValue = cache.get(arg);\n    if (cachedValue !== undefined) {\n      return cachedValue;\n    }\n    const v = fn(arg);\n    cache.set(arg, v);\n    return v;\n  };\n}\n\nconst getPragma = memoize(pragmaUtil.getFromContext);\nconst getCreateClass = memoize(pragmaUtil.getCreateClassFromContext);\n\n/**\n * @param {ASTNode} node\n * @param {Context} context\n * @returns {boolean}\n */\nfunction isES5Component(node, context) {\n  const pragma = getPragma(context);\n  const createClass = getCreateClass(context);\n\n  if (!node.parent || !node.parent.callee) {\n    return false;\n  }\n  const callee = node.parent.callee;\n  // React.createClass({})\n  if (callee.type === 'MemberExpression') {\n    return callee.object.name === pragma && callee.property.name === createClass;\n  }\n  // createClass({})\n  if (callee.type === 'Identifier') {\n    return callee.name === createClass;\n  }\n  return false;\n}\n\n/**\n * Check if the node is explicitly declared as a descendant of a React Component\n * @param {any} node\n * @param {Context} context\n * @returns {boolean}\n */\nfunction isExplicitComponent(node, context) {\n  const sourceCode = context.getSourceCode();\n  let comment;\n  // Sometimes the passed node may not have been parsed yet by eslint, and this function call crashes.\n  // Can be removed when eslint sets \"parent\" property for all nodes on initial AST traversal: https://github.com/eslint/eslint-scope/issues/27\n  // eslint-disable-next-line no-warning-comments\n  // FIXME: Remove try/catch when https://github.com/eslint/eslint-scope/issues/27 is implemented.\n  try {\n    comment = sourceCode.getJSDocComment(node);\n  } catch (e) {\n    comment = null;\n  }\n\n  if (comment === null) {\n    return false;\n  }\n\n  let commentAst;\n  try {\n    commentAst = doctrine.parse(comment.value, {\n      unwrap: true,\n      tags: ['extends', 'augments'],\n    });\n  } catch (e) {\n    // handle a bug in the archived `doctrine`, see #2596\n    return false;\n  }\n\n  const relevantTags = commentAst.tags.filter((tag) => tag.name === 'React.Component' || tag.name === 'React.PureComponent');\n\n  return relevantTags.length > 0;\n}\n\n/**\n * @param {ASTNode} node\n * @param {Context} context\n * @returns {boolean}\n */\nfunction isES6Component(node, context) {\n  const pragma = getPragma(context);\n  if (isExplicitComponent(node, context)) {\n    return true;\n  }\n\n  if (!node.superClass) {\n    return false;\n  }\n  if (node.superClass.type === 'MemberExpression') {\n    return node.superClass.object.name === pragma\n          && /^(Pure)?Component$/.test(node.superClass.property.name);\n  }\n  if (node.superClass.type === 'Identifier') {\n    return /^(Pure)?Component$/.test(node.superClass.name);\n  }\n  return false;\n}\n\n/**\n * Get the parent ES5 component node from the current scope\n * @param {Context} context\n * @returns {ASTNode|null}\n */\nfunction getParentES5Component(context) {\n  let scope = context.getScope();\n  while (scope) {\n    // @ts-ignore\n    const node = scope.block && scope.block.parent && scope.block.parent.parent;\n    if (node && isES5Component(node, context)) {\n      return node;\n    }\n    scope = scope.upper;\n  }\n  return null;\n}\n\n/**\n * Get the parent ES6 component node from the current scope\n * @param {Context} context\n * @returns {ASTNode | null}\n */\nfunction getParentES6Component(context) {\n  let scope = context.getScope();\n  while (scope && scope.type !== 'class') {\n    scope = scope.upper;\n  }\n  const node = scope && scope.block;\n  if (!node || !isES6Component(node, context)) {\n    return null;\n  }\n  return node;\n}\n\n/**\n * Checks if a component extends React.PureComponent\n * @param {ASTNode} node\n * @param {Context} context\n * @returns {boolean}\n */\nfunction isPureComponent(node, context) {\n  const pragma = getPragma(context);\n  const sourceCode = context.getSourceCode();\n  if (node.superClass) {\n    return new RegExp(`^(${pragma}\\\\.)?PureComponent$`).test(sourceCode.getText(node.superClass));\n  }\n  return false;\n}\n\n/**\n * @param {ASTNode} node\n * @returns {boolean}\n */\nfunction isStateMemberExpression(node) {\n  return node.type === 'MemberExpression' && node.object.type === 'ThisExpression' && node.property.name === 'state';\n}\n\nmodule.exports = {\n  isES5Component,\n  isES6Component,\n  getParentES5Component,\n  getParentES6Component,\n  isExplicitComponent,\n  isPureComponent,\n  isStateMemberExpression,\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}