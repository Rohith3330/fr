{"ast":null,"code":"'use strict';\n\nvar callBound = require('call-bind/callBound');\n\nvar $PromiseThen = callBound('Promise.prototype.then', true);\n\nvar Type = require('./Type'); // https://ecma-international.org/ecma-262/6.0/#sec-ispromise\n\n\nmodule.exports = function IsPromise(x) {\n  if (Type(x) !== 'Object') {\n    return false;\n  }\n\n  if (!$PromiseThen) {\n    // Promises are not supported\n    return false;\n  }\n\n  try {\n    $PromiseThen(x); // throws if not a promise\n  } catch (e) {\n    return false;\n  }\n\n  return true;\n};","map":{"version":3,"names":["callBound","require","$PromiseThen","Type","module","exports","IsPromise","x","e"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/es-abstract/2022/IsPromise.js"],"sourcesContent":["'use strict';\n\nvar callBound = require('call-bind/callBound');\n\nvar $PromiseThen = callBound('Promise.prototype.then', true);\n\nvar Type = require('./Type');\n\n// https://ecma-international.org/ecma-262/6.0/#sec-ispromise\n\nmodule.exports = function IsPromise(x) {\n\tif (Type(x) !== 'Object') {\n\t\treturn false;\n\t}\n\tif (!$PromiseThen) { // Promises are not supported\n\t\treturn false;\n\t}\n\ttry {\n\t\t$PromiseThen(x); // throws if not a promise\n\t} catch (e) {\n\t\treturn false;\n\t}\n\treturn true;\n};\n"],"mappings":"AAAA;;AAEA,IAAIA,SAAS,GAAGC,OAAO,CAAC,qBAAD,CAAvB;;AAEA,IAAIC,YAAY,GAAGF,SAAS,CAAC,wBAAD,EAA2B,IAA3B,CAA5B;;AAEA,IAAIG,IAAI,GAAGF,OAAO,CAAC,QAAD,CAAlB,C,CAEA;;;AAEAG,MAAM,CAACC,OAAP,GAAiB,SAASC,SAAT,CAAmBC,CAAnB,EAAsB;EACtC,IAAIJ,IAAI,CAACI,CAAD,CAAJ,KAAY,QAAhB,EAA0B;IACzB,OAAO,KAAP;EACA;;EACD,IAAI,CAACL,YAAL,EAAmB;IAAE;IACpB,OAAO,KAAP;EACA;;EACD,IAAI;IACHA,YAAY,CAACK,CAAD,CAAZ,CADG,CACc;EACjB,CAFD,CAEE,OAAOC,CAAP,EAAU;IACX,OAAO,KAAP;EACA;;EACD,OAAO,IAAP;AACA,CAbD"},"metadata":{},"sourceType":"script"}