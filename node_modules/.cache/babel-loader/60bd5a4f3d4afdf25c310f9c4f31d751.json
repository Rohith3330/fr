{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n/**\n * Converts destructured parameters with default values to non-shorthand syntax.\n * This fixes the only Tagged Templates-related bug in ES Modules-supporting browsers (Safari 10 & 11).\n * Use this plugin instead of `@babel/plugin-transform-template-literals` when targeting ES Modules.\n *\n * @example\n *   // Bug 1: Safari 10/11 doesn't reliably return the same Strings value.\n *   // The value changes depending on invocation and function optimization state.\n *   function f() { return Object`` }\n *   f() === new f()  // false, should be true.\n *\n * @example\n *   // Bug 2: Safari 10/11 use the same cached strings value when the string parts are the same.\n *   // This behavior comes from an earlier version of the spec, and can cause tricky bugs.\n *   Object``===Object``  // true, should be false.\n *\n * Benchmarks: https://jsperf.com/compiled-tagged-template-performance\n */\n\nvar _default = _ref => {\n  let {\n    types: t\n  } = _ref;\n  return {\n    name: \"transform-tagged-template-caching\",\n    visitor: {\n      TaggedTemplateExpression(path, state) {\n        // tagged templates we've already dealt with\n        let processed = state.get(\"processed\");\n\n        if (!processed) {\n          processed = new WeakSet();\n          state.set(\"processed\", processed);\n        }\n\n        if (processed.has(path.node)) return path.skip(); // Grab the expressions from the original tag.\n        //   tag`a${'hello'}`  // ['hello']\n\n        const expressions = path.node.quasi.expressions; // Create an identity function helper:\n        //   identity = t => t\n\n        let identity = state.get(\"identity\");\n\n        if (!identity) {\n          identity = path.scope.getProgramParent().generateDeclaredUidIdentifier(\"_\");\n          state.set(\"identity\", identity);\n          const binding = path.scope.getBinding(identity.name);\n          binding.path.get(\"init\").replaceWith(t.arrowFunctionExpression( // re-use the helper identifier for compressability\n          [t.identifier(\"t\")], t.identifier(\"t\")));\n        } // Use the identity function helper to get a reference to the template's Strings.\n        // We replace all expressions with `0` ensure Strings has the same shape.\n        //   identity`a${0}`\n\n\n        const template = t.taggedTemplateExpression(t.cloneNode(identity), t.templateLiteral(path.node.quasi.quasis, expressions.map(() => t.numericLiteral(0))));\n        processed.add(template); // Install an inline cache at the callsite using the global variable:\n        //   _t || (_t = identity`a${0}`)\n\n        const ident = path.scope.getProgramParent().generateDeclaredUidIdentifier(\"t\");\n        path.scope.getBinding(ident.name).path.parent.kind = \"let\";\n        const inlineCache = t.logicalExpression(\"||\", ident, t.assignmentExpression(\"=\", t.cloneNode(ident), template)); // The original tag function becomes a plain function call.\n        // The expressions omitted from the cached Strings tag are directly applied as arguments.\n        //   tag(_t || (_t = Object`a${0}`), 'hello')\n\n        const node = t.callExpression(path.node.tag, [inlineCache, ...expressions]);\n        path.replaceWith(node);\n      }\n\n    }\n  };\n};\n\nexports.default = _default;\nmodule.exports = exports.default;","map":{"version":3,"names":["exports","__esModule","default","_default","types","t","name","visitor","TaggedTemplateExpression","path","state","processed","get","WeakSet","set","has","node","skip","expressions","quasi","identity","scope","getProgramParent","generateDeclaredUidIdentifier","binding","getBinding","replaceWith","arrowFunctionExpression","identifier","template","taggedTemplateExpression","cloneNode","templateLiteral","quasis","map","numericLiteral","add","ident","parent","kind","inlineCache","logicalExpression","assignmentExpression","callExpression","tag","module"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/@babel/preset-modules/lib/plugins/transform-tagged-template-caching/index.js"],"sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\n/**\n * Converts destructured parameters with default values to non-shorthand syntax.\n * This fixes the only Tagged Templates-related bug in ES Modules-supporting browsers (Safari 10 & 11).\n * Use this plugin instead of `@babel/plugin-transform-template-literals` when targeting ES Modules.\n *\n * @example\n *   // Bug 1: Safari 10/11 doesn't reliably return the same Strings value.\n *   // The value changes depending on invocation and function optimization state.\n *   function f() { return Object`` }\n *   f() === new f()  // false, should be true.\n *\n * @example\n *   // Bug 2: Safari 10/11 use the same cached strings value when the string parts are the same.\n *   // This behavior comes from an earlier version of the spec, and can cause tricky bugs.\n *   Object``===Object``  // true, should be false.\n *\n * Benchmarks: https://jsperf.com/compiled-tagged-template-performance\n */\nvar _default = ({\n  types: t\n}) => ({\n  name: \"transform-tagged-template-caching\",\n  visitor: {\n    TaggedTemplateExpression(path, state) {\n      // tagged templates we've already dealt with\n      let processed = state.get(\"processed\");\n\n      if (!processed) {\n        processed = new WeakSet();\n        state.set(\"processed\", processed);\n      }\n\n      if (processed.has(path.node)) return path.skip(); // Grab the expressions from the original tag.\n      //   tag`a${'hello'}`  // ['hello']\n\n      const expressions = path.node.quasi.expressions; // Create an identity function helper:\n      //   identity = t => t\n\n      let identity = state.get(\"identity\");\n\n      if (!identity) {\n        identity = path.scope.getProgramParent().generateDeclaredUidIdentifier(\"_\");\n        state.set(\"identity\", identity);\n        const binding = path.scope.getBinding(identity.name);\n        binding.path.get(\"init\").replaceWith(t.arrowFunctionExpression( // re-use the helper identifier for compressability\n        [t.identifier(\"t\")], t.identifier(\"t\")));\n      } // Use the identity function helper to get a reference to the template's Strings.\n      // We replace all expressions with `0` ensure Strings has the same shape.\n      //   identity`a${0}`\n\n\n      const template = t.taggedTemplateExpression(t.cloneNode(identity), t.templateLiteral(path.node.quasi.quasis, expressions.map(() => t.numericLiteral(0))));\n      processed.add(template); // Install an inline cache at the callsite using the global variable:\n      //   _t || (_t = identity`a${0}`)\n\n      const ident = path.scope.getProgramParent().generateDeclaredUidIdentifier(\"t\");\n      path.scope.getBinding(ident.name).path.parent.kind = \"let\";\n      const inlineCache = t.logicalExpression(\"||\", ident, t.assignmentExpression(\"=\", t.cloneNode(ident), template)); // The original tag function becomes a plain function call.\n      // The expressions omitted from the cached Strings tag are directly applied as arguments.\n      //   tag(_t || (_t = Object`a${0}`), 'hello')\n\n      const node = t.callExpression(path.node.tag, [inlineCache, ...expressions]);\n      path.replaceWith(node);\n    }\n\n  }\n});\n\nexports.default = _default;\nmodule.exports = exports.default;"],"mappings":"AAAA;;AAEAA,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,QAAQ,GAAG;EAAA,IAAC;IACdC,KAAK,EAAEC;EADO,CAAD;EAAA,OAER;IACLC,IAAI,EAAE,mCADD;IAELC,OAAO,EAAE;MACPC,wBAAwB,CAACC,IAAD,EAAOC,KAAP,EAAc;QACpC;QACA,IAAIC,SAAS,GAAGD,KAAK,CAACE,GAAN,CAAU,WAAV,CAAhB;;QAEA,IAAI,CAACD,SAAL,EAAgB;UACdA,SAAS,GAAG,IAAIE,OAAJ,EAAZ;UACAH,KAAK,CAACI,GAAN,CAAU,WAAV,EAAuBH,SAAvB;QACD;;QAED,IAAIA,SAAS,CAACI,GAAV,CAAcN,IAAI,CAACO,IAAnB,CAAJ,EAA8B,OAAOP,IAAI,CAACQ,IAAL,EAAP,CATM,CASc;QAClD;;QAEA,MAAMC,WAAW,GAAGT,IAAI,CAACO,IAAL,CAAUG,KAAV,CAAgBD,WAApC,CAZoC,CAYa;QACjD;;QAEA,IAAIE,QAAQ,GAAGV,KAAK,CAACE,GAAN,CAAU,UAAV,CAAf;;QAEA,IAAI,CAACQ,QAAL,EAAe;UACbA,QAAQ,GAAGX,IAAI,CAACY,KAAL,CAAWC,gBAAX,GAA8BC,6BAA9B,CAA4D,GAA5D,CAAX;UACAb,KAAK,CAACI,GAAN,CAAU,UAAV,EAAsBM,QAAtB;UACA,MAAMI,OAAO,GAAGf,IAAI,CAACY,KAAL,CAAWI,UAAX,CAAsBL,QAAQ,CAACd,IAA/B,CAAhB;UACAkB,OAAO,CAACf,IAAR,CAAaG,GAAb,CAAiB,MAAjB,EAAyBc,WAAzB,CAAqCrB,CAAC,CAACsB,uBAAF,EAA2B;UAChE,CAACtB,CAAC,CAACuB,UAAF,CAAa,GAAb,CAAD,CADqC,EAChBvB,CAAC,CAACuB,UAAF,CAAa,GAAb,CADgB,CAArC;QAED,CAvBmC,CAuBlC;QACF;QACA;;;QAGA,MAAMC,QAAQ,GAAGxB,CAAC,CAACyB,wBAAF,CAA2BzB,CAAC,CAAC0B,SAAF,CAAYX,QAAZ,CAA3B,EAAkDf,CAAC,CAAC2B,eAAF,CAAkBvB,IAAI,CAACO,IAAL,CAAUG,KAAV,CAAgBc,MAAlC,EAA0Cf,WAAW,CAACgB,GAAZ,CAAgB,MAAM7B,CAAC,CAAC8B,cAAF,CAAiB,CAAjB,CAAtB,CAA1C,CAAlD,CAAjB;QACAxB,SAAS,CAACyB,GAAV,CAAcP,QAAd,EA7BoC,CA6BX;QACzB;;QAEA,MAAMQ,KAAK,GAAG5B,IAAI,CAACY,KAAL,CAAWC,gBAAX,GAA8BC,6BAA9B,CAA4D,GAA5D,CAAd;QACAd,IAAI,CAACY,KAAL,CAAWI,UAAX,CAAsBY,KAAK,CAAC/B,IAA5B,EAAkCG,IAAlC,CAAuC6B,MAAvC,CAA8CC,IAA9C,GAAqD,KAArD;QACA,MAAMC,WAAW,GAAGnC,CAAC,CAACoC,iBAAF,CAAoB,IAApB,EAA0BJ,KAA1B,EAAiChC,CAAC,CAACqC,oBAAF,CAAuB,GAAvB,EAA4BrC,CAAC,CAAC0B,SAAF,CAAYM,KAAZ,CAA5B,EAAgDR,QAAhD,CAAjC,CAApB,CAlCoC,CAkC6E;QACjH;QACA;;QAEA,MAAMb,IAAI,GAAGX,CAAC,CAACsC,cAAF,CAAiBlC,IAAI,CAACO,IAAL,CAAU4B,GAA3B,EAAgC,CAACJ,WAAD,EAAc,GAAGtB,WAAjB,CAAhC,CAAb;QACAT,IAAI,CAACiB,WAAL,CAAiBV,IAAjB;MACD;;IAzCM;EAFJ,CAFQ;AAAA,CAAf;;AAkDAhB,OAAO,CAACE,OAAR,GAAkBC,QAAlB;AACA0C,MAAM,CAAC7C,OAAP,GAAiBA,OAAO,CAACE,OAAzB"},"metadata":{},"sourceType":"script"}