{"ast":null,"code":"'use strict';\n\nvar util = require('util');\n\nvar transport = require('../spdy-transport');\n\nvar debug = {\n  server: require('debug')('spdy:connection:server'),\n  client: require('debug')('spdy:connection:client')\n};\n\nvar EventEmitter = require('events').EventEmitter;\n\nvar Stream = transport.Stream;\n\nfunction Connection(socket, options) {\n  EventEmitter.call(this);\n  var state = {};\n  this._spdyState = state; // NOTE: There's a big trick here. Connection is used as a `this` argument\n  // to the wrapped `connection` event listener.\n  // socket end doesn't necessarly mean connection drop\n\n  this.httpAllowHalfOpen = true;\n  state.timeout = new transport.utils.Timeout(this); // Protocol info\n\n  state.protocol = transport.protocol[options.protocol];\n  state.version = null;\n  state.constants = state.protocol.constants;\n  state.pair = null;\n  state.isServer = options.isServer; // Root of priority tree (i.e. stream id = 0)\n\n  state.priorityRoot = new transport.Priority({\n    defaultWeight: state.constants.DEFAULT_WEIGHT,\n    maxCount: transport.protocol.base.constants.MAX_PRIORITY_STREAMS\n  }); // Defaults\n\n  state.maxStreams = options.maxStreams || state.constants.MAX_CONCURRENT_STREAMS;\n  state.autoSpdy31 = options.protocol.name !== 'h2' && options.autoSpdy31;\n  state.acceptPush = options.acceptPush === undefined ? !state.isServer : options.acceptPush;\n\n  if (options.maxChunk === false) {\n    state.maxChunk = Infinity;\n  } else if (options.maxChunk === undefined) {\n    state.maxChunk = transport.protocol.base.constants.DEFAULT_MAX_CHUNK;\n  } else {\n    state.maxChunk = options.maxChunk;\n  } // Connection-level flow control\n\n\n  var windowSize = options.windowSize || 1 << 20;\n  state.window = new transport.Window({\n    id: 0,\n    isServer: state.isServer,\n    recv: {\n      size: state.constants.DEFAULT_WINDOW,\n      max: state.constants.MAX_INITIAL_WINDOW_SIZE\n    },\n    send: {\n      size: state.constants.DEFAULT_WINDOW,\n      max: state.constants.MAX_INITIAL_WINDOW_SIZE\n    }\n  }); // It starts with DEFAULT_WINDOW, update must be sent to change it on client\n\n  state.window.recv.setMax(windowSize); // Boilerplate for Stream constructor\n\n  state.streamWindow = new transport.Window({\n    id: -1,\n    isServer: state.isServer,\n    recv: {\n      size: windowSize,\n      max: state.constants.MAX_INITIAL_WINDOW_SIZE\n    },\n    send: {\n      size: state.constants.DEFAULT_WINDOW,\n      max: state.constants.MAX_INITIAL_WINDOW_SIZE\n    }\n  }); // Various state info\n\n  state.pool = state.protocol.compressionPool.create(options.headerCompression);\n  state.counters = {\n    push: 0,\n    stream: 0\n  }; // Init streams list\n\n  state.stream = {\n    map: {},\n    count: 0,\n    nextId: state.isServer ? 2 : 1,\n    lastId: {\n      both: 0,\n      received: 0\n    }\n  };\n  state.ping = {\n    nextId: state.isServer ? 2 : 1,\n    map: {}\n  };\n  state.goaway = false; // Debug\n\n  state.debug = state.isServer ? debug.server : debug.client; // X-Forwarded feature\n\n  state.xForward = null; // Create parser and hole for framer\n\n  state.parser = state.protocol.parser.create({\n    // NOTE: needed to distinguish ping from ping ACK in SPDY\n    isServer: state.isServer,\n    window: state.window\n  });\n  state.framer = state.protocol.framer.create({\n    window: state.window,\n    timeout: state.timeout\n  }); // SPDY has PUSH enabled on servers\n\n  if (state.protocol.name === 'spdy') {\n    state.framer.enablePush(state.isServer);\n  }\n\n  if (!state.isServer) {\n    state.parser.skipPreface();\n  }\n\n  this.socket = socket;\n\n  this._init();\n}\n\nutil.inherits(Connection, EventEmitter);\nexports.Connection = Connection;\n\nConnection.create = function create(socket, options) {\n  return new Connection(socket, options);\n};\n\nConnection.prototype._init = function init() {\n  var self = this;\n  var state = this._spdyState;\n  var pool = state.pool; // Initialize session window\n\n  state.window.recv.on('drain', function () {\n    self._onSessionWindowDrain();\n  }); // Initialize parser\n\n  state.parser.on('data', function (frame) {\n    self._handleFrame(frame);\n  });\n  state.parser.once('version', function (version) {\n    self._onVersion(version);\n  }); // Propagate parser errors\n\n  state.parser.on('error', function (err) {\n    self._onParserError(err);\n  }); // Propagate framer errors\n\n  state.framer.on('error', function (err) {\n    self.emit('error', err);\n  });\n  this.socket.pipe(state.parser);\n  state.framer.pipe(this.socket); // Allow high-level api to catch socket errors\n\n  this.socket.on('error', function onSocketError(e) {\n    self.emit('error', e);\n  });\n  this.socket.once('close', function onclose(hadError) {\n    var err;\n\n    if (hadError) {\n      err = new Error('socket hang up');\n      err.code = 'ECONNRESET';\n    }\n\n    self.destroyStreams(err);\n    self.emit('close');\n\n    if (state.pair) {\n      pool.put(state.pair);\n    }\n\n    state.framer.resume();\n  }); // Reset timeout on close\n\n  this.once('close', function () {\n    self.setTimeout(0);\n  });\n\n  function _onWindowOverflow() {\n    self._onWindowOverflow();\n  }\n\n  state.window.recv.on('overflow', _onWindowOverflow);\n  state.window.send.on('overflow', _onWindowOverflow); // Do not allow half-open connections\n\n  this.socket.allowHalfOpen = false;\n};\n\nConnection.prototype._onVersion = function _onVersion(version) {\n  var state = this._spdyState;\n  var prev = state.version;\n  var parser = state.parser;\n  var framer = state.framer;\n  var pool = state.pool;\n  state.version = version;\n  state.debug('id=0 version=%d', version); // Ignore transition to 3.1\n\n  if (!prev) {\n    state.pair = pool.get(version);\n    parser.setCompression(state.pair);\n    framer.setCompression(state.pair);\n  }\n\n  framer.setVersion(version);\n\n  if (!state.isServer) {\n    framer.prefaceFrame();\n\n    if (state.xForward !== null) {\n      framer.xForwardedFor({\n        host: state.xForward\n      });\n    }\n  } // Send preface+settings frame (once)\n\n\n  framer.settingsFrame({\n    max_header_list_size: state.constants.DEFAULT_MAX_HEADER_LIST_SIZE,\n    max_concurrent_streams: state.maxStreams,\n    enable_push: state.acceptPush ? 1 : 0,\n    initial_window_size: state.window.recv.max\n  }); // Update session window\n\n  if (state.version >= 3.1 || state.isServer && state.autoSpdy31) {\n    this._onSessionWindowDrain();\n  }\n\n  this.emit('version', version);\n};\n\nConnection.prototype._onParserError = function _onParserError(err) {\n  var state = this._spdyState; // Prevent further errors\n\n  state.parser.kill(); // Send GOAWAY\n\n  if (err instanceof transport.protocol.base.utils.ProtocolError) {\n    this._goaway({\n      lastId: state.stream.lastId.both,\n      code: err.code,\n      extra: err.message,\n      send: true\n    });\n  }\n\n  this.emit('error', err);\n};\n\nConnection.prototype._handleFrame = function _handleFrame(frame) {\n  var state = this._spdyState;\n  state.debug('id=0 frame', frame);\n  state.timeout.reset(); // For testing purposes\n\n  this.emit('frame', frame);\n  var stream; // Session window update\n\n  if (frame.type === 'WINDOW_UPDATE' && frame.id === 0) {\n    if (state.version < 3.1 && state.autoSpdy31) {\n      state.debug('id=0 switch version to 3.1');\n      state.version = 3.1;\n      this.emit('version', 3.1);\n    }\n\n    state.window.send.update(frame.delta);\n    return;\n  }\n\n  if (state.isServer && frame.type === 'PUSH_PROMISE') {\n    state.debug('id=0 server PUSH_PROMISE');\n\n    this._goaway({\n      lastId: state.stream.lastId.both,\n      code: 'PROTOCOL_ERROR',\n      send: true\n    });\n\n    return;\n  }\n\n  if (!stream && frame.id !== undefined) {\n    // Load created one\n    stream = state.stream.map[frame.id]; // Fail if not found\n\n    if (!stream && frame.type !== 'HEADERS' && frame.type !== 'PRIORITY' && frame.type !== 'RST') {\n      // Other side should destroy the stream upon receiving GOAWAY\n      if (this._isGoaway(frame.id)) {\n        return;\n      }\n\n      state.debug('id=0 stream=%d not found', frame.id);\n      state.framer.rstFrame({\n        id: frame.id,\n        code: 'INVALID_STREAM'\n      });\n      return;\n    }\n  } // Create new stream\n\n\n  if (!stream && frame.type === 'HEADERS') {\n    this._handleHeaders(frame);\n\n    return;\n  }\n\n  if (stream) {\n    stream._handleFrame(frame);\n  } else if (frame.type === 'SETTINGS') {\n    this._handleSettings(frame.settings);\n  } else if (frame.type === 'ACK_SETTINGS') {// TODO(indutny): handle it one day\n  } else if (frame.type === 'PING') {\n    this._handlePing(frame);\n  } else if (frame.type === 'GOAWAY') {\n    this._handleGoaway(frame);\n  } else if (frame.type === 'X_FORWARDED_FOR') {\n    // Set X-Forwarded-For only once\n    if (state.xForward === null) {\n      state.xForward = frame.host;\n    }\n  } else if (frame.type === 'PRIORITY') {// TODO(indutny): handle this\n  } else {\n    state.debug('id=0 unknown frame type: %s', frame.type);\n  }\n};\n\nConnection.prototype._onWindowOverflow = function _onWindowOverflow() {\n  var state = this._spdyState;\n  state.debug('id=0 window overflow');\n\n  this._goaway({\n    lastId: state.stream.lastId.both,\n    code: 'FLOW_CONTROL_ERROR',\n    send: true\n  });\n};\n\nConnection.prototype._isGoaway = function _isGoaway(id) {\n  var state = this._spdyState;\n\n  if (state.goaway !== false && state.goaway < id) {\n    return true;\n  }\n\n  return false;\n};\n\nConnection.prototype._getId = function _getId() {\n  var state = this._spdyState;\n  var id = state.stream.nextId;\n  state.stream.nextId += 2;\n  return id;\n};\n\nConnection.prototype._createStream = function _createStream(uri) {\n  var state = this._spdyState;\n  var id = uri.id;\n\n  if (id === undefined) {\n    id = this._getId();\n  }\n\n  var isGoaway = this._isGoaway(id);\n\n  if (uri.push && !state.acceptPush) {\n    state.debug('id=0 push disabled promisedId=%d', id); // Fatal error\n\n    this._goaway({\n      lastId: state.stream.lastId.both,\n      code: 'PROTOCOL_ERROR',\n      send: true\n    });\n\n    isGoaway = true;\n  }\n\n  var stream = new Stream(this, {\n    id: id,\n    request: uri.request !== false,\n    method: uri.method,\n    path: uri.path,\n    host: uri.host,\n    priority: uri.priority,\n    headers: uri.headers,\n    parent: uri.parent,\n    readable: !isGoaway && uri.readable,\n    writable: !isGoaway && uri.writable\n  });\n  var self = this; // Just an empty stream for API consistency\n\n  if (isGoaway) {\n    return stream;\n  }\n\n  state.stream.lastId.both = Math.max(state.stream.lastId.both, id);\n  state.debug('id=0 add stream=%d', stream.id);\n  state.stream.map[stream.id] = stream;\n  state.stream.count++;\n  state.counters.stream++;\n\n  if (stream.parent !== null) {\n    state.counters.push++;\n  }\n\n  stream.once('close', function () {\n    self._removeStream(stream);\n  });\n  return stream;\n};\n\nConnection.prototype._handleHeaders = function _handleHeaders(frame) {\n  var state = this._spdyState; // Must be HEADERS frame after stream close\n\n  if (frame.id <= state.stream.lastId.received) {\n    return;\n  } // Someone is using our ids!\n\n\n  if ((frame.id + state.stream.nextId) % 2 === 0) {\n    state.framer.rstFrame({\n      id: frame.id,\n      code: 'PROTOCOL_ERROR'\n    });\n    return;\n  }\n\n  var stream = this._createStream({\n    id: frame.id,\n    request: false,\n    method: frame.headers[':method'],\n    path: frame.headers[':path'],\n    host: frame.headers[':authority'],\n    priority: frame.priority,\n    headers: frame.headers,\n    writable: frame.writable\n  }); // GOAWAY\n\n\n  if (this._isGoaway(stream.id)) {\n    return;\n  }\n\n  state.stream.lastId.received = Math.max(state.stream.lastId.received, stream.id); // TODO(indutny) handle stream limit\n\n  if (!this.emit('stream', stream)) {\n    // No listeners was set - abort the stream\n    stream.abort();\n    return;\n  } // Create fake frame to simulate end of the data\n\n\n  if (frame.fin) {\n    stream._handleFrame({\n      type: 'FIN',\n      fin: true\n    });\n  }\n\n  return stream;\n};\n\nConnection.prototype._onSessionWindowDrain = function _onSessionWindowDrain() {\n  var state = this._spdyState;\n\n  if (state.version < 3.1 && !(state.isServer && state.autoSpdy31)) {\n    return;\n  }\n\n  var delta = state.window.recv.getDelta();\n\n  if (delta === 0) {\n    return;\n  }\n\n  state.debug('id=0 session window drain, update by %d', delta);\n  state.framer.windowUpdateFrame({\n    id: 0,\n    delta: delta\n  });\n  state.window.recv.update(delta);\n};\n\nConnection.prototype.start = function start(version) {\n  this._spdyState.parser.setVersion(version);\n}; // Mostly for testing\n\n\nConnection.prototype.getVersion = function getVersion() {\n  return this._spdyState.version;\n};\n\nConnection.prototype._handleSettings = function _handleSettings(settings) {\n  var state = this._spdyState;\n  state.framer.ackSettingsFrame();\n\n  this._setDefaultWindow(settings);\n\n  if (settings.max_frame_size) {\n    state.framer.setMaxFrameSize(settings.max_frame_size);\n  } // TODO(indutny): handle max_header_list_size\n\n\n  if (settings.header_table_size) {\n    try {\n      state.pair.compress.updateTableSize(settings.header_table_size);\n    } catch (e) {\n      this._goaway({\n        lastId: 0,\n        code: 'PROTOCOL_ERROR',\n        send: true\n      });\n\n      return;\n    }\n  } // HTTP2 clients needs to enable PUSH streams explicitly\n\n\n  if (state.protocol.name !== 'spdy') {\n    if (settings.enable_push === undefined) {\n      state.framer.enablePush(state.isServer);\n    } else {\n      state.framer.enablePush(settings.enable_push === 1);\n    }\n  } // TODO(indutny): handle max_concurrent_streams\n\n};\n\nConnection.prototype._setDefaultWindow = function _setDefaultWindow(settings) {\n  if (settings.initial_window_size === undefined) {\n    return;\n  }\n\n  var state = this._spdyState; // Update defaults\n\n  var window = state.streamWindow;\n  window.send.setMax(settings.initial_window_size); // Update existing streams\n\n  Object.keys(state.stream.map).forEach(function (id) {\n    var stream = state.stream.map[id];\n    var window = stream._spdyState.window;\n    window.send.updateMax(settings.initial_window_size);\n  });\n};\n\nConnection.prototype._handlePing = function handlePing(frame) {\n  var self = this;\n  var state = this._spdyState; // Handle incoming PING\n\n  if (!frame.ack) {\n    state.framer.pingFrame({\n      opaque: frame.opaque,\n      ack: true\n    });\n    self.emit('ping', frame.opaque);\n    return;\n  } // Handle reply PING\n\n\n  var hex = frame.opaque.toString('hex');\n\n  if (!state.ping.map[hex]) {\n    return;\n  }\n\n  var ping = state.ping.map[hex];\n  delete state.ping.map[hex];\n\n  if (ping.cb) {\n    ping.cb(null);\n  }\n};\n\nConnection.prototype._handleGoaway = function handleGoaway(frame) {\n  this._goaway({\n    lastId: frame.lastId,\n    code: frame.code,\n    send: false\n  });\n};\n\nConnection.prototype.ping = function ping(callback) {\n  var state = this._spdyState; // HTTP2 is using 8-byte opaque\n\n  var opaque = Buffer.alloc(state.constants.PING_OPAQUE_SIZE);\n  opaque.fill(0);\n  opaque.writeUInt32BE(state.ping.nextId, opaque.length - 4);\n  state.ping.nextId += 2;\n  state.ping.map[opaque.toString('hex')] = {\n    cb: callback\n  };\n  state.framer.pingFrame({\n    opaque: opaque,\n    ack: false\n  });\n};\n\nConnection.prototype.getCounter = function getCounter(name) {\n  return this._spdyState.counters[name];\n};\n\nConnection.prototype.reserveStream = function reserveStream(uri, callback) {\n  var stream = this._createStream(uri); // GOAWAY\n\n\n  if (this._isGoaway(stream.id)) {\n    var err = new Error('Can\\'t send request after GOAWAY');\n    process.nextTick(function () {\n      if (callback) {\n        callback(err);\n      } else {\n        stream.emit('error', err);\n      }\n    });\n    return stream;\n  }\n\n  if (callback) {\n    process.nextTick(function () {\n      callback(null, stream);\n    });\n  }\n\n  return stream;\n};\n\nConnection.prototype.request = function request(uri, callback) {\n  var stream = this.reserveStream(uri, function (err) {\n    if (err) {\n      if (callback) {\n        callback(err);\n      } else {\n        stream.emit('error', err);\n      }\n\n      return;\n    }\n\n    if (stream._wasSent()) {\n      if (callback) {\n        callback(null, stream);\n      }\n\n      return;\n    }\n\n    stream.send(function (err) {\n      if (err) {\n        if (callback) {\n          return callback(err);\n        } else {\n          return stream.emit('error', err);\n        }\n      }\n\n      if (callback) {\n        callback(null, stream);\n      }\n    });\n  });\n  return stream;\n};\n\nConnection.prototype._removeStream = function _removeStream(stream) {\n  var state = this._spdyState;\n  state.debug('id=0 remove stream=%d', stream.id);\n  delete state.stream.map[stream.id];\n  state.stream.count--;\n\n  if (state.stream.count === 0) {\n    this.emit('_streamDrain');\n  }\n};\n\nConnection.prototype._goaway = function _goaway(params) {\n  var state = this._spdyState;\n  var self = this;\n  state.goaway = params.lastId;\n  state.debug('id=0 goaway from=%d', state.goaway);\n  Object.keys(state.stream.map).forEach(function (id) {\n    var stream = state.stream.map[id]; // Abort every stream started after GOAWAY\n\n    if (stream.id <= params.lastId) {\n      return;\n    }\n\n    stream.abort();\n    stream.emit('error', new Error('New stream after GOAWAY'));\n  });\n\n  function finish() {\n    // Destroy socket if there are no streams\n    if (state.stream.count === 0 || params.code !== 'OK') {\n      // No further frames should be processed\n      state.parser.kill();\n      process.nextTick(function () {\n        var err = new Error('Fatal error: ' + params.code);\n\n        self._onStreamDrain(err);\n      });\n      return;\n    }\n\n    self.on('_streamDrain', self._onStreamDrain);\n  }\n\n  if (params.send) {\n    // Make sure that GOAWAY frame is sent before dumping framer\n    state.framer.goawayFrame({\n      lastId: params.lastId,\n      code: params.code,\n      extra: params.extra\n    }, finish);\n  } else {\n    finish();\n  }\n};\n\nConnection.prototype._onStreamDrain = function _onStreamDrain(error) {\n  var state = this._spdyState;\n  state.debug('id=0 _onStreamDrain');\n  state.framer.dump();\n  state.framer.unpipe(this.socket);\n  state.framer.resume();\n\n  if (this.socket.destroySoon) {\n    this.socket.destroySoon();\n  }\n\n  this.emit('close', error);\n};\n\nConnection.prototype.end = function end(callback) {\n  var state = this._spdyState;\n\n  if (callback) {\n    this.once('close', callback);\n  }\n\n  this._goaway({\n    lastId: state.stream.lastId.both,\n    code: 'OK',\n    send: true\n  });\n};\n\nConnection.prototype.destroyStreams = function destroyStreams(err) {\n  var state = this._spdyState;\n  Object.keys(state.stream.map).forEach(function (id) {\n    var stream = state.stream.map[id];\n    stream.destroy();\n\n    if (err) {\n      stream.emit('error', err);\n    }\n  });\n};\n\nConnection.prototype.isServer = function isServer() {\n  return this._spdyState.isServer;\n};\n\nConnection.prototype.getXForwardedFor = function getXForwardFor() {\n  return this._spdyState.xForward;\n};\n\nConnection.prototype.sendXForwardedFor = function sendXForwardedFor(host) {\n  var state = this._spdyState;\n\n  if (state.version !== null) {\n    state.framer.xForwardedFor({\n      host: host\n    });\n  } else {\n    state.xForward = host;\n  }\n};\n\nConnection.prototype.pushPromise = function pushPromise(parent, uri, callback) {\n  var state = this._spdyState;\n\n  var stream = this._createStream({\n    request: false,\n    parent: parent,\n    method: uri.method,\n    path: uri.path,\n    host: uri.host,\n    priority: uri.priority,\n    headers: uri.headers,\n    readable: false\n  });\n\n  var err; // TODO(indutny): deduplicate this logic somehow\n\n  if (this._isGoaway(stream.id)) {\n    err = new Error('Can\\'t send PUSH_PROMISE after GOAWAY');\n    process.nextTick(function () {\n      if (callback) {\n        callback(err);\n      } else {\n        stream.emit('error', err);\n      }\n    });\n    return stream;\n  }\n\n  if (uri.push && !state.acceptPush) {\n    err = new Error('Can\\'t send PUSH_PROMISE, other side won\\'t accept it');\n    process.nextTick(function () {\n      if (callback) {\n        callback(err);\n      } else {\n        stream.emit('error', err);\n      }\n    });\n    return stream;\n  }\n\n  stream._sendPush(uri.status, uri.response, function (err) {\n    if (!callback) {\n      if (err) {\n        stream.emit('error', err);\n      }\n\n      return;\n    }\n\n    if (err) {\n      return callback(err);\n    }\n\n    callback(null, stream);\n  });\n\n  return stream;\n};\n\nConnection.prototype.setTimeout = function setTimeout(delay, callback) {\n  var state = this._spdyState;\n  state.timeout.set(delay, callback);\n};","map":{"version":3,"names":["util","require","transport","debug","server","client","EventEmitter","Stream","Connection","socket","options","call","state","_spdyState","httpAllowHalfOpen","timeout","utils","Timeout","protocol","version","constants","pair","isServer","priorityRoot","Priority","defaultWeight","DEFAULT_WEIGHT","maxCount","base","MAX_PRIORITY_STREAMS","maxStreams","MAX_CONCURRENT_STREAMS","autoSpdy31","name","acceptPush","undefined","maxChunk","Infinity","DEFAULT_MAX_CHUNK","windowSize","window","Window","id","recv","size","DEFAULT_WINDOW","max","MAX_INITIAL_WINDOW_SIZE","send","setMax","streamWindow","pool","compressionPool","create","headerCompression","counters","push","stream","map","count","nextId","lastId","both","received","ping","goaway","xForward","parser","framer","enablePush","skipPreface","_init","inherits","exports","prototype","init","self","on","_onSessionWindowDrain","frame","_handleFrame","once","_onVersion","err","_onParserError","emit","pipe","onSocketError","e","onclose","hadError","Error","code","destroyStreams","put","resume","setTimeout","_onWindowOverflow","allowHalfOpen","prev","get","setCompression","setVersion","prefaceFrame","xForwardedFor","host","settingsFrame","max_header_list_size","DEFAULT_MAX_HEADER_LIST_SIZE","max_concurrent_streams","enable_push","initial_window_size","kill","ProtocolError","_goaway","extra","message","reset","type","update","delta","_isGoaway","rstFrame","_handleHeaders","_handleSettings","settings","_handlePing","_handleGoaway","_getId","_createStream","uri","isGoaway","request","method","path","priority","headers","parent","readable","writable","Math","_removeStream","abort","fin","getDelta","windowUpdateFrame","start","getVersion","ackSettingsFrame","_setDefaultWindow","max_frame_size","setMaxFrameSize","header_table_size","compress","updateTableSize","Object","keys","forEach","updateMax","handlePing","ack","pingFrame","opaque","hex","toString","cb","handleGoaway","callback","Buffer","alloc","PING_OPAQUE_SIZE","fill","writeUInt32BE","length","getCounter","reserveStream","process","nextTick","_wasSent","params","finish","_onStreamDrain","goawayFrame","error","dump","unpipe","destroySoon","end","destroy","getXForwardedFor","getXForwardFor","sendXForwardedFor","pushPromise","_sendPush","status","response","delay","set"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/spdy-transport/lib/spdy-transport/connection.js"],"sourcesContent":["'use strict'\n\nvar util = require('util')\nvar transport = require('../spdy-transport')\n\nvar debug = {\n  server: require('debug')('spdy:connection:server'),\n  client: require('debug')('spdy:connection:client')\n}\nvar EventEmitter = require('events').EventEmitter\n\nvar Stream = transport.Stream\n\nfunction Connection (socket, options) {\n  EventEmitter.call(this)\n\n  var state = {}\n  this._spdyState = state\n\n  // NOTE: There's a big trick here. Connection is used as a `this` argument\n  // to the wrapped `connection` event listener.\n  // socket end doesn't necessarly mean connection drop\n  this.httpAllowHalfOpen = true\n\n  state.timeout = new transport.utils.Timeout(this)\n\n  // Protocol info\n  state.protocol = transport.protocol[options.protocol]\n  state.version = null\n  state.constants = state.protocol.constants\n  state.pair = null\n  state.isServer = options.isServer\n\n  // Root of priority tree (i.e. stream id = 0)\n  state.priorityRoot = new transport.Priority({\n    defaultWeight: state.constants.DEFAULT_WEIGHT,\n    maxCount: transport.protocol.base.constants.MAX_PRIORITY_STREAMS\n  })\n\n  // Defaults\n  state.maxStreams = options.maxStreams ||\n                     state.constants.MAX_CONCURRENT_STREAMS\n\n  state.autoSpdy31 = options.protocol.name !== 'h2' && options.autoSpdy31\n  state.acceptPush = options.acceptPush === undefined\n    ? !state.isServer\n    : options.acceptPush\n\n  if (options.maxChunk === false) { state.maxChunk = Infinity } else if (options.maxChunk === undefined) { state.maxChunk = transport.protocol.base.constants.DEFAULT_MAX_CHUNK } else {\n    state.maxChunk = options.maxChunk\n  }\n\n  // Connection-level flow control\n  var windowSize = options.windowSize || 1 << 20\n  state.window = new transport.Window({\n    id: 0,\n    isServer: state.isServer,\n    recv: {\n      size: state.constants.DEFAULT_WINDOW,\n      max: state.constants.MAX_INITIAL_WINDOW_SIZE\n    },\n    send: {\n      size: state.constants.DEFAULT_WINDOW,\n      max: state.constants.MAX_INITIAL_WINDOW_SIZE\n    }\n  })\n\n  // It starts with DEFAULT_WINDOW, update must be sent to change it on client\n  state.window.recv.setMax(windowSize)\n\n  // Boilerplate for Stream constructor\n  state.streamWindow = new transport.Window({\n    id: -1,\n    isServer: state.isServer,\n    recv: {\n      size: windowSize,\n      max: state.constants.MAX_INITIAL_WINDOW_SIZE\n    },\n    send: {\n      size: state.constants.DEFAULT_WINDOW,\n      max: state.constants.MAX_INITIAL_WINDOW_SIZE\n    }\n  })\n\n  // Various state info\n  state.pool = state.protocol.compressionPool.create(options.headerCompression)\n  state.counters = {\n    push: 0,\n    stream: 0\n  }\n\n  // Init streams list\n  state.stream = {\n    map: {},\n    count: 0,\n    nextId: state.isServer ? 2 : 1,\n    lastId: {\n      both: 0,\n      received: 0\n    }\n  }\n  state.ping = {\n    nextId: state.isServer ? 2 : 1,\n    map: {}\n  }\n  state.goaway = false\n\n  // Debug\n  state.debug = state.isServer ? debug.server : debug.client\n\n  // X-Forwarded feature\n  state.xForward = null\n\n  // Create parser and hole for framer\n  state.parser = state.protocol.parser.create({\n    // NOTE: needed to distinguish ping from ping ACK in SPDY\n    isServer: state.isServer,\n    window: state.window\n  })\n  state.framer = state.protocol.framer.create({\n    window: state.window,\n    timeout: state.timeout\n  })\n\n  // SPDY has PUSH enabled on servers\n  if (state.protocol.name === 'spdy') {\n    state.framer.enablePush(state.isServer)\n  }\n\n  if (!state.isServer) { state.parser.skipPreface() }\n\n  this.socket = socket\n\n  this._init()\n}\nutil.inherits(Connection, EventEmitter)\nexports.Connection = Connection\n\nConnection.create = function create (socket, options) {\n  return new Connection(socket, options)\n}\n\nConnection.prototype._init = function init () {\n  var self = this\n  var state = this._spdyState\n  var pool = state.pool\n\n  // Initialize session window\n  state.window.recv.on('drain', function () {\n    self._onSessionWindowDrain()\n  })\n\n  // Initialize parser\n  state.parser.on('data', function (frame) {\n    self._handleFrame(frame)\n  })\n  state.parser.once('version', function (version) {\n    self._onVersion(version)\n  })\n\n  // Propagate parser errors\n  state.parser.on('error', function (err) {\n    self._onParserError(err)\n  })\n\n  // Propagate framer errors\n  state.framer.on('error', function (err) {\n    self.emit('error', err)\n  })\n\n  this.socket.pipe(state.parser)\n  state.framer.pipe(this.socket)\n\n  // Allow high-level api to catch socket errors\n  this.socket.on('error', function onSocketError (e) {\n    self.emit('error', e)\n  })\n\n  this.socket.once('close', function onclose (hadError) {\n    var err\n    if (hadError) {\n      err = new Error('socket hang up')\n      err.code = 'ECONNRESET'\n    }\n\n    self.destroyStreams(err)\n    self.emit('close')\n\n    if (state.pair) {\n      pool.put(state.pair)\n    }\n\n    state.framer.resume()\n  })\n\n  // Reset timeout on close\n  this.once('close', function () {\n    self.setTimeout(0)\n  })\n\n  function _onWindowOverflow () {\n    self._onWindowOverflow()\n  }\n\n  state.window.recv.on('overflow', _onWindowOverflow)\n  state.window.send.on('overflow', _onWindowOverflow)\n\n  // Do not allow half-open connections\n  this.socket.allowHalfOpen = false\n}\n\nConnection.prototype._onVersion = function _onVersion (version) {\n  var state = this._spdyState\n  var prev = state.version\n  var parser = state.parser\n  var framer = state.framer\n  var pool = state.pool\n\n  state.version = version\n  state.debug('id=0 version=%d', version)\n\n  // Ignore transition to 3.1\n  if (!prev) {\n    state.pair = pool.get(version)\n    parser.setCompression(state.pair)\n    framer.setCompression(state.pair)\n  }\n  framer.setVersion(version)\n\n  if (!state.isServer) {\n    framer.prefaceFrame()\n    if (state.xForward !== null) {\n      framer.xForwardedFor({ host: state.xForward })\n    }\n  }\n\n  // Send preface+settings frame (once)\n  framer.settingsFrame({\n    max_header_list_size: state.constants.DEFAULT_MAX_HEADER_LIST_SIZE,\n    max_concurrent_streams: state.maxStreams,\n    enable_push: state.acceptPush ? 1 : 0,\n    initial_window_size: state.window.recv.max\n  })\n\n  // Update session window\n  if (state.version >= 3.1 || (state.isServer && state.autoSpdy31)) { this._onSessionWindowDrain() }\n\n  this.emit('version', version)\n}\n\nConnection.prototype._onParserError = function _onParserError (err) {\n  var state = this._spdyState\n\n  // Prevent further errors\n  state.parser.kill()\n\n  // Send GOAWAY\n  if (err instanceof transport.protocol.base.utils.ProtocolError) {\n    this._goaway({\n      lastId: state.stream.lastId.both,\n      code: err.code,\n      extra: err.message,\n      send: true\n    })\n  }\n\n  this.emit('error', err)\n}\n\nConnection.prototype._handleFrame = function _handleFrame (frame) {\n  var state = this._spdyState\n\n  state.debug('id=0 frame', frame)\n  state.timeout.reset()\n\n  // For testing purposes\n  this.emit('frame', frame)\n\n  var stream\n\n  // Session window update\n  if (frame.type === 'WINDOW_UPDATE' && frame.id === 0) {\n    if (state.version < 3.1 && state.autoSpdy31) {\n      state.debug('id=0 switch version to 3.1')\n      state.version = 3.1\n      this.emit('version', 3.1)\n    }\n    state.window.send.update(frame.delta)\n    return\n  }\n\n  if (state.isServer && frame.type === 'PUSH_PROMISE') {\n    state.debug('id=0 server PUSH_PROMISE')\n    this._goaway({\n      lastId: state.stream.lastId.both,\n      code: 'PROTOCOL_ERROR',\n      send: true\n    })\n    return\n  }\n\n  if (!stream && frame.id !== undefined) {\n    // Load created one\n    stream = state.stream.map[frame.id]\n\n    // Fail if not found\n    if (!stream &&\n        frame.type !== 'HEADERS' &&\n        frame.type !== 'PRIORITY' &&\n        frame.type !== 'RST') {\n      // Other side should destroy the stream upon receiving GOAWAY\n      if (this._isGoaway(frame.id)) { return }\n\n      state.debug('id=0 stream=%d not found', frame.id)\n      state.framer.rstFrame({ id: frame.id, code: 'INVALID_STREAM' })\n      return\n    }\n  }\n\n  // Create new stream\n  if (!stream && frame.type === 'HEADERS') {\n    this._handleHeaders(frame)\n    return\n  }\n\n  if (stream) {\n    stream._handleFrame(frame)\n  } else if (frame.type === 'SETTINGS') {\n    this._handleSettings(frame.settings)\n  } else if (frame.type === 'ACK_SETTINGS') {\n    // TODO(indutny): handle it one day\n  } else if (frame.type === 'PING') {\n    this._handlePing(frame)\n  } else if (frame.type === 'GOAWAY') {\n    this._handleGoaway(frame)\n  } else if (frame.type === 'X_FORWARDED_FOR') {\n    // Set X-Forwarded-For only once\n    if (state.xForward === null) {\n      state.xForward = frame.host\n    }\n  } else if (frame.type === 'PRIORITY') {\n    // TODO(indutny): handle this\n  } else {\n    state.debug('id=0 unknown frame type: %s', frame.type)\n  }\n}\n\nConnection.prototype._onWindowOverflow = function _onWindowOverflow () {\n  var state = this._spdyState\n  state.debug('id=0 window overflow')\n  this._goaway({\n    lastId: state.stream.lastId.both,\n    code: 'FLOW_CONTROL_ERROR',\n    send: true\n  })\n}\n\nConnection.prototype._isGoaway = function _isGoaway (id) {\n  var state = this._spdyState\n  if (state.goaway !== false && state.goaway < id) { return true }\n  return false\n}\n\nConnection.prototype._getId = function _getId () {\n  var state = this._spdyState\n\n  var id = state.stream.nextId\n  state.stream.nextId += 2\n  return id\n}\n\nConnection.prototype._createStream = function _createStream (uri) {\n  var state = this._spdyState\n  var id = uri.id\n  if (id === undefined) { id = this._getId() }\n\n  var isGoaway = this._isGoaway(id)\n\n  if (uri.push && !state.acceptPush) {\n    state.debug('id=0 push disabled promisedId=%d', id)\n\n    // Fatal error\n    this._goaway({\n      lastId: state.stream.lastId.both,\n      code: 'PROTOCOL_ERROR',\n      send: true\n    })\n    isGoaway = true\n  }\n\n  var stream = new Stream(this, {\n    id: id,\n    request: uri.request !== false,\n    method: uri.method,\n    path: uri.path,\n    host: uri.host,\n    priority: uri.priority,\n    headers: uri.headers,\n    parent: uri.parent,\n    readable: !isGoaway && uri.readable,\n    writable: !isGoaway && uri.writable\n  })\n  var self = this\n\n  // Just an empty stream for API consistency\n  if (isGoaway) {\n    return stream\n  }\n\n  state.stream.lastId.both = Math.max(state.stream.lastId.both, id)\n\n  state.debug('id=0 add stream=%d', stream.id)\n  state.stream.map[stream.id] = stream\n  state.stream.count++\n  state.counters.stream++\n  if (stream.parent !== null) {\n    state.counters.push++\n  }\n\n  stream.once('close', function () {\n    self._removeStream(stream)\n  })\n\n  return stream\n}\n\nConnection.prototype._handleHeaders = function _handleHeaders (frame) {\n  var state = this._spdyState\n\n  // Must be HEADERS frame after stream close\n  if (frame.id <= state.stream.lastId.received) { return }\n\n  // Someone is using our ids!\n  if ((frame.id + state.stream.nextId) % 2 === 0) {\n    state.framer.rstFrame({ id: frame.id, code: 'PROTOCOL_ERROR' })\n    return\n  }\n\n  var stream = this._createStream({\n    id: frame.id,\n    request: false,\n    method: frame.headers[':method'],\n    path: frame.headers[':path'],\n    host: frame.headers[':authority'],\n    priority: frame.priority,\n    headers: frame.headers,\n    writable: frame.writable\n  })\n\n  // GOAWAY\n  if (this._isGoaway(stream.id)) {\n    return\n  }\n\n  state.stream.lastId.received = Math.max(\n    state.stream.lastId.received,\n    stream.id\n  )\n\n  // TODO(indutny) handle stream limit\n  if (!this.emit('stream', stream)) {\n    // No listeners was set - abort the stream\n    stream.abort()\n    return\n  }\n\n  // Create fake frame to simulate end of the data\n  if (frame.fin) {\n    stream._handleFrame({ type: 'FIN', fin: true })\n  }\n\n  return stream\n}\n\nConnection.prototype._onSessionWindowDrain = function _onSessionWindowDrain () {\n  var state = this._spdyState\n  if (state.version < 3.1 && !(state.isServer && state.autoSpdy31)) {\n    return\n  }\n\n  var delta = state.window.recv.getDelta()\n  if (delta === 0) {\n    return\n  }\n\n  state.debug('id=0 session window drain, update by %d', delta)\n\n  state.framer.windowUpdateFrame({\n    id: 0,\n    delta: delta\n  })\n  state.window.recv.update(delta)\n}\n\nConnection.prototype.start = function start (version) {\n  this._spdyState.parser.setVersion(version)\n}\n\n// Mostly for testing\nConnection.prototype.getVersion = function getVersion () {\n  return this._spdyState.version\n}\n\nConnection.prototype._handleSettings = function _handleSettings (settings) {\n  var state = this._spdyState\n\n  state.framer.ackSettingsFrame()\n\n  this._setDefaultWindow(settings)\n  if (settings.max_frame_size) { state.framer.setMaxFrameSize(settings.max_frame_size) }\n\n  // TODO(indutny): handle max_header_list_size\n  if (settings.header_table_size) {\n    try {\n      state.pair.compress.updateTableSize(settings.header_table_size)\n    } catch (e) {\n      this._goaway({\n        lastId: 0,\n        code: 'PROTOCOL_ERROR',\n        send: true\n      })\n      return\n    }\n  }\n\n  // HTTP2 clients needs to enable PUSH streams explicitly\n  if (state.protocol.name !== 'spdy') {\n    if (settings.enable_push === undefined) {\n      state.framer.enablePush(state.isServer)\n    } else {\n      state.framer.enablePush(settings.enable_push === 1)\n    }\n  }\n\n  // TODO(indutny): handle max_concurrent_streams\n}\n\nConnection.prototype._setDefaultWindow = function _setDefaultWindow (settings) {\n  if (settings.initial_window_size === undefined) {\n    return\n  }\n\n  var state = this._spdyState\n\n  // Update defaults\n  var window = state.streamWindow\n  window.send.setMax(settings.initial_window_size)\n\n  // Update existing streams\n  Object.keys(state.stream.map).forEach(function (id) {\n    var stream = state.stream.map[id]\n    var window = stream._spdyState.window\n\n    window.send.updateMax(settings.initial_window_size)\n  })\n}\n\nConnection.prototype._handlePing = function handlePing (frame) {\n  var self = this\n  var state = this._spdyState\n\n  // Handle incoming PING\n  if (!frame.ack) {\n    state.framer.pingFrame({\n      opaque: frame.opaque,\n      ack: true\n    })\n\n    self.emit('ping', frame.opaque)\n    return\n  }\n\n  // Handle reply PING\n  var hex = frame.opaque.toString('hex')\n  if (!state.ping.map[hex]) {\n    return\n  }\n  var ping = state.ping.map[hex]\n  delete state.ping.map[hex]\n\n  if (ping.cb) {\n    ping.cb(null)\n  }\n}\n\nConnection.prototype._handleGoaway = function handleGoaway (frame) {\n  this._goaway({\n    lastId: frame.lastId,\n    code: frame.code,\n    send: false\n  })\n}\n\nConnection.prototype.ping = function ping (callback) {\n  var state = this._spdyState\n\n  // HTTP2 is using 8-byte opaque\n  var opaque = Buffer.alloc(state.constants.PING_OPAQUE_SIZE)\n  opaque.fill(0)\n  opaque.writeUInt32BE(state.ping.nextId, opaque.length - 4)\n  state.ping.nextId += 2\n\n  state.ping.map[opaque.toString('hex')] = { cb: callback }\n  state.framer.pingFrame({\n    opaque: opaque,\n    ack: false\n  })\n}\n\nConnection.prototype.getCounter = function getCounter (name) {\n  return this._spdyState.counters[name]\n}\n\nConnection.prototype.reserveStream = function reserveStream (uri, callback) {\n  var stream = this._createStream(uri)\n\n  // GOAWAY\n  if (this._isGoaway(stream.id)) {\n    var err = new Error('Can\\'t send request after GOAWAY')\n    process.nextTick(function () {\n      if (callback) { callback(err) } else {\n        stream.emit('error', err)\n      }\n    })\n    return stream\n  }\n\n  if (callback) {\n    process.nextTick(function () {\n      callback(null, stream)\n    })\n  }\n\n  return stream\n}\n\nConnection.prototype.request = function request (uri, callback) {\n  var stream = this.reserveStream(uri, function (err) {\n    if (err) {\n      if (callback) {\n        callback(err)\n      } else {\n        stream.emit('error', err)\n      }\n      return\n    }\n\n    if (stream._wasSent()) {\n      if (callback) {\n        callback(null, stream)\n      }\n      return\n    }\n\n    stream.send(function (err) {\n      if (err) {\n        if (callback) { return callback(err) } else { return stream.emit('error', err) }\n      }\n\n      if (callback) {\n        callback(null, stream)\n      }\n    })\n  })\n\n  return stream\n}\n\nConnection.prototype._removeStream = function _removeStream (stream) {\n  var state = this._spdyState\n\n  state.debug('id=0 remove stream=%d', stream.id)\n  delete state.stream.map[stream.id]\n  state.stream.count--\n\n  if (state.stream.count === 0) {\n    this.emit('_streamDrain')\n  }\n}\n\nConnection.prototype._goaway = function _goaway (params) {\n  var state = this._spdyState\n  var self = this\n\n  state.goaway = params.lastId\n  state.debug('id=0 goaway from=%d', state.goaway)\n\n  Object.keys(state.stream.map).forEach(function (id) {\n    var stream = state.stream.map[id]\n\n    // Abort every stream started after GOAWAY\n    if (stream.id <= params.lastId) {\n      return\n    }\n\n    stream.abort()\n    stream.emit('error', new Error('New stream after GOAWAY'))\n  })\n\n  function finish () {\n    // Destroy socket if there are no streams\n    if (state.stream.count === 0 || params.code !== 'OK') {\n      // No further frames should be processed\n      state.parser.kill()\n\n      process.nextTick(function () {\n        var err = new Error('Fatal error: ' + params.code)\n        self._onStreamDrain(err)\n      })\n      return\n    }\n\n    self.on('_streamDrain', self._onStreamDrain)\n  }\n\n  if (params.send) {\n    // Make sure that GOAWAY frame is sent before dumping framer\n    state.framer.goawayFrame({\n      lastId: params.lastId,\n      code: params.code,\n      extra: params.extra\n    }, finish)\n  } else {\n    finish()\n  }\n}\n\nConnection.prototype._onStreamDrain = function _onStreamDrain (error) {\n  var state = this._spdyState\n\n  state.debug('id=0 _onStreamDrain')\n\n  state.framer.dump()\n  state.framer.unpipe(this.socket)\n  state.framer.resume()\n\n  if (this.socket.destroySoon) {\n    this.socket.destroySoon()\n  }\n  this.emit('close', error)\n}\n\nConnection.prototype.end = function end (callback) {\n  var state = this._spdyState\n\n  if (callback) {\n    this.once('close', callback)\n  }\n  this._goaway({\n    lastId: state.stream.lastId.both,\n    code: 'OK',\n    send: true\n  })\n}\n\nConnection.prototype.destroyStreams = function destroyStreams (err) {\n  var state = this._spdyState\n  Object.keys(state.stream.map).forEach(function (id) {\n    var stream = state.stream.map[id]\n\n    stream.destroy()\n    if (err) {\n      stream.emit('error', err)\n    }\n  })\n}\n\nConnection.prototype.isServer = function isServer () {\n  return this._spdyState.isServer\n}\n\nConnection.prototype.getXForwardedFor = function getXForwardFor () {\n  return this._spdyState.xForward\n}\n\nConnection.prototype.sendXForwardedFor = function sendXForwardedFor (host) {\n  var state = this._spdyState\n  if (state.version !== null) {\n    state.framer.xForwardedFor({ host: host })\n  } else {\n    state.xForward = host\n  }\n}\n\nConnection.prototype.pushPromise = function pushPromise (parent, uri, callback) {\n  var state = this._spdyState\n\n  var stream = this._createStream({\n    request: false,\n    parent: parent,\n    method: uri.method,\n    path: uri.path,\n    host: uri.host,\n    priority: uri.priority,\n    headers: uri.headers,\n    readable: false\n  })\n\n  var err\n\n  // TODO(indutny): deduplicate this logic somehow\n  if (this._isGoaway(stream.id)) {\n    err = new Error('Can\\'t send PUSH_PROMISE after GOAWAY')\n\n    process.nextTick(function () {\n      if (callback) {\n        callback(err)\n      } else {\n        stream.emit('error', err)\n      }\n    })\n    return stream\n  }\n\n  if (uri.push && !state.acceptPush) {\n    err = new Error(\n      'Can\\'t send PUSH_PROMISE, other side won\\'t accept it')\n    process.nextTick(function () {\n      if (callback) { callback(err) } else {\n        stream.emit('error', err)\n      }\n    })\n    return stream\n  }\n\n  stream._sendPush(uri.status, uri.response, function (err) {\n    if (!callback) {\n      if (err) {\n        stream.emit('error', err)\n      }\n      return\n    }\n\n    if (err) { return callback(err) }\n    callback(null, stream)\n  })\n\n  return stream\n}\n\nConnection.prototype.setTimeout = function setTimeout (delay, callback) {\n  var state = this._spdyState\n\n  state.timeout.set(delay, callback)\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}