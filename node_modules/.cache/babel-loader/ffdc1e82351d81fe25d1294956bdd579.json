{"ast":null,"code":"import assign from 'object.assign';\n/**\n * Extractor function for an ObjectExpression type value node.\n * An object expression is using {}.\n *\n * @returns - a representation of the object\n */\n\nexport default function extractValueFromObjectExpression(value) {\n  // eslint-disable-next-line global-require\n  const getValue = require('.').default;\n\n  return value.properties.reduce((obj, property) => {\n    const object = { ...obj\n    }; // Support types: SpreadProperty and ExperimentalSpreadProperty\n\n    if (/^(?:Experimental)?Spread(?:Property|Element)$/.test(property.type)) {\n      if (property.argument.type === 'ObjectExpression') {\n        return assign(object, extractValueFromObjectExpression(property.argument));\n      }\n    } else {\n      object[getValue(property.key)] = getValue(property.value);\n    }\n\n    return object;\n  }, {});\n}","map":{"version":3,"names":["assign","extractValueFromObjectExpression","value","getValue","require","default","properties","reduce","obj","property","object","test","type","argument","key"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/jsx-ast-utils/src/values/expressions/ObjectExpression.js"],"sourcesContent":["import assign from 'object.assign';\n\n/**\n * Extractor function for an ObjectExpression type value node.\n * An object expression is using {}.\n *\n * @returns - a representation of the object\n */\nexport default function extractValueFromObjectExpression(value) {\n  // eslint-disable-next-line global-require\n  const getValue = require('.').default;\n  return value.properties.reduce((obj, property) => {\n    const object = { ...obj };\n    // Support types: SpreadProperty and ExperimentalSpreadProperty\n    if (/^(?:Experimental)?Spread(?:Property|Element)$/.test(property.type)) {\n      if (property.argument.type === 'ObjectExpression') {\n        return assign(object, extractValueFromObjectExpression(property.argument));\n      }\n    } else {\n      object[getValue(property.key)] = getValue(property.value);\n    }\n    return object;\n  }, {});\n}\n"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,eAAnB;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAe,SAASC,gCAAT,CAA0CC,KAA1C,EAAiD;EAC9D;EACA,MAAMC,QAAQ,GAAGC,OAAO,CAAC,GAAD,CAAP,CAAaC,OAA9B;;EACA,OAAOH,KAAK,CAACI,UAAN,CAAiBC,MAAjB,CAAwB,CAACC,GAAD,EAAMC,QAAN,KAAmB;IAChD,MAAMC,MAAM,GAAG,EAAE,GAAGF;IAAL,CAAf,CADgD,CAEhD;;IACA,IAAI,gDAAgDG,IAAhD,CAAqDF,QAAQ,CAACG,IAA9D,CAAJ,EAAyE;MACvE,IAAIH,QAAQ,CAACI,QAAT,CAAkBD,IAAlB,KAA2B,kBAA/B,EAAmD;QACjD,OAAOZ,MAAM,CAACU,MAAD,EAAST,gCAAgC,CAACQ,QAAQ,CAACI,QAAV,CAAzC,CAAb;MACD;IACF,CAJD,MAIO;MACLH,MAAM,CAACP,QAAQ,CAACM,QAAQ,CAACK,GAAV,CAAT,CAAN,GAAiCX,QAAQ,CAACM,QAAQ,CAACP,KAAV,CAAzC;IACD;;IACD,OAAOQ,MAAP;EACD,CAXM,EAWJ,EAXI,CAAP;AAYD"},"metadata":{},"sourceType":"module"}