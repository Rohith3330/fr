{"ast":null,"code":"/*:nodoc:*\n * class ActionVersion\n *\n * Support action for printing program version\n * This class inherited from [[Action]]\n **/\n'use strict';\n\nvar util = require('util');\n\nvar Action = require('../action'); //\n// Constants\n//\n\n\nvar c = require('../const');\n/*:nodoc:*\n * new ActionVersion(options)\n * - options (object): options hash see [[Action.new]]\n *\n **/\n\n\nvar ActionVersion = module.exports = function ActionVersion(options) {\n  options = options || {};\n  options.defaultValue = options.defaultValue ? options.defaultValue : c.SUPPRESS;\n  options.dest = options.dest || c.SUPPRESS;\n  options.nargs = 0;\n  this.version = options.version;\n  Action.call(this, options);\n};\n\nutil.inherits(ActionVersion, Action);\n/*:nodoc:*\n * ActionVersion#call(parser, namespace, values, optionString) -> Void\n * - parser (ArgumentParser): current parser\n * - namespace (Namespace): namespace for output data\n * - values (Array): parsed values\n * - optionString (Array): input option string(not parsed)\n *\n * Print version and exit\n **/\n\nActionVersion.prototype.call = function (parser) {\n  var version = this.version || parser.version;\n\n  var formatter = parser._getFormatter();\n\n  formatter.addText(version);\n  parser.exit(0, formatter.formatHelp());\n};","map":{"version":3,"names":["util","require","Action","c","ActionVersion","module","exports","options","defaultValue","SUPPRESS","dest","nargs","version","call","inherits","prototype","parser","formatter","_getFormatter","addText","exit","formatHelp"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/argparse/lib/action/version.js"],"sourcesContent":["/*:nodoc:*\n * class ActionVersion\n *\n * Support action for printing program version\n * This class inherited from [[Action]]\n **/\n'use strict';\n\nvar util = require('util');\n\nvar Action = require('../action');\n\n//\n// Constants\n//\nvar c = require('../const');\n\n/*:nodoc:*\n * new ActionVersion(options)\n * - options (object): options hash see [[Action.new]]\n *\n **/\nvar ActionVersion = module.exports = function ActionVersion(options) {\n  options = options || {};\n  options.defaultValue = (options.defaultValue ? options.defaultValue : c.SUPPRESS);\n  options.dest = (options.dest || c.SUPPRESS);\n  options.nargs = 0;\n  this.version = options.version;\n  Action.call(this, options);\n};\nutil.inherits(ActionVersion, Action);\n\n/*:nodoc:*\n * ActionVersion#call(parser, namespace, values, optionString) -> Void\n * - parser (ArgumentParser): current parser\n * - namespace (Namespace): namespace for output data\n * - values (Array): parsed values\n * - optionString (Array): input option string(not parsed)\n *\n * Print version and exit\n **/\nActionVersion.prototype.call = function (parser) {\n  var version = this.version || parser.version;\n  var formatter = parser._getFormatter();\n  formatter.addText(version);\n  parser.exit(0, formatter.formatHelp());\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAAlB;;AAEA,IAAIC,MAAM,GAAGD,OAAO,CAAC,WAAD,CAApB,C,CAEA;AACA;AACA;;;AACA,IAAIE,CAAC,GAAGF,OAAO,CAAC,UAAD,CAAf;AAEA;AACA;AACA;AACA;AACA;;;AACA,IAAIG,aAAa,GAAGC,MAAM,CAACC,OAAP,GAAiB,SAASF,aAAT,CAAuBG,OAAvB,EAAgC;EACnEA,OAAO,GAAGA,OAAO,IAAI,EAArB;EACAA,OAAO,CAACC,YAAR,GAAwBD,OAAO,CAACC,YAAR,GAAuBD,OAAO,CAACC,YAA/B,GAA8CL,CAAC,CAACM,QAAxE;EACAF,OAAO,CAACG,IAAR,GAAgBH,OAAO,CAACG,IAAR,IAAgBP,CAAC,CAACM,QAAlC;EACAF,OAAO,CAACI,KAAR,GAAgB,CAAhB;EACA,KAAKC,OAAL,GAAeL,OAAO,CAACK,OAAvB;EACAV,MAAM,CAACW,IAAP,CAAY,IAAZ,EAAkBN,OAAlB;AACD,CAPD;;AAQAP,IAAI,CAACc,QAAL,CAAcV,aAAd,EAA6BF,MAA7B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAE,aAAa,CAACW,SAAd,CAAwBF,IAAxB,GAA+B,UAAUG,MAAV,EAAkB;EAC/C,IAAIJ,OAAO,GAAG,KAAKA,OAAL,IAAgBI,MAAM,CAACJ,OAArC;;EACA,IAAIK,SAAS,GAAGD,MAAM,CAACE,aAAP,EAAhB;;EACAD,SAAS,CAACE,OAAV,CAAkBP,OAAlB;EACAI,MAAM,CAACI,IAAP,CAAY,CAAZ,EAAeH,SAAS,CAACI,UAAV,EAAf;AACD,CALD"},"metadata":{},"sourceType":"script"}