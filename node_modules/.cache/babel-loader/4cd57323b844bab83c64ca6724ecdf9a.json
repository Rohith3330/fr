{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isNotTokenOfTypeWithConditions = exports.isTokenOfTypeWithConditions = exports.isNodeOfTypeWithConditions = exports.isNodeOfTypes = exports.isNodeOfType = void 0;\n\nconst isNodeOfType = nodeType => node => (node === null || node === void 0 ? void 0 : node.type) === nodeType;\n\nexports.isNodeOfType = isNodeOfType;\n\nconst isNodeOfTypes = nodeTypes => node => !!node && nodeTypes.includes(node.type);\n\nexports.isNodeOfTypes = isNodeOfTypes;\n\nconst isNodeOfTypeWithConditions = (nodeType, conditions) => {\n  const entries = Object.entries(conditions);\n  return node => (node === null || node === void 0 ? void 0 : node.type) === nodeType && entries.every(_ref => {\n    let [key, value] = _ref;\n    return node[key] === value;\n  });\n};\n\nexports.isNodeOfTypeWithConditions = isNodeOfTypeWithConditions;\n\nconst isTokenOfTypeWithConditions = (tokenType, conditions) => {\n  const entries = Object.entries(conditions);\n  return token => (token === null || token === void 0 ? void 0 : token.type) === tokenType && entries.every(_ref2 => {\n    let [key, value] = _ref2;\n    return token[key] === value;\n  });\n};\n\nexports.isTokenOfTypeWithConditions = isTokenOfTypeWithConditions;\n\nconst isNotTokenOfTypeWithConditions = (tokenType, conditions) => token => !(0, exports.isTokenOfTypeWithConditions)(tokenType, conditions)(token);\n\nexports.isNotTokenOfTypeWithConditions = isNotTokenOfTypeWithConditions;","map":{"version":3,"mappings":";;;;;;;AAOO,MAAMA,YAAY,GACWC,QAAlC,IAEEC,IADF,IAGE,KAAI,SAAJ,QAAI,WAAJ,GAAI,MAAJ,OAAI,CAAEC,IAAN,MAAeF,QALZ;;AAAMG,uBAAYJ,YAAZ;;AAON,MAAMK,aAAa,GACsBC,SAA9C,IAEEJ,IADF,IAGE,CAAC,CAACA,IAAF,IAAUI,SAAS,CAACC,QAAV,CAAmBL,IAAI,CAACC,IAAxB,CALP;;AAAMC,wBAAaC,aAAb;;AAON,MAAMG,0BAA0B,GAAG,CAKxCP,QALwC,EAMxCQ,UANwC,KASC;EACzC,MAAMC,OAAO,GAAGC,MAAM,CAACD,OAAP,CAAeD,UAAf,CAAhB;EAEA,OACEP,IADK,IAGL,KAAI,SAAJ,QAAI,WAAJ,GAAI,MAAJ,OAAI,CAAEC,IAAN,MAAeF,QAAf,IACAS,OAAO,CAACE,KAAR,CAAc;IAAA,IAAC,CAACC,GAAD,EAAMC,KAAN,CAAD;IAAA,OAAkBZ,IAAI,CAACW,GAAD,CAAJ,KAAqCC,KAAvD;EAAA,CAAd,CAJF;AAKD,CAjBM;;AAAMV,qCAA0BI,0BAA1B;;AAmBN,MAAMO,2BAA2B,GAAG,CAKzCC,SALyC,EAMzCP,UANyC,KASE;EAC3C,MAAMC,OAAO,GAAGC,MAAM,CAACD,OAAP,CAAeD,UAAf,CAAhB;EAEA,OACEQ,KADK,IAGL,MAAK,SAAL,SAAK,WAAL,GAAK,MAAL,QAAK,CAAEd,IAAP,MAAgBa,SAAhB,IACAN,OAAO,CAACE,KAAR,CACE;IAAA,IAAC,CAACC,GAAD,EAAMC,KAAN,CAAD;IAAA,OAAkBG,KAAK,CAACJ,GAAD,CAAL,KAAuCC,KAAzD;EAAA,CADF,CAJF;AAOD,CAnBM;;AAAMV,sCAA2BW,2BAA3B;;AAqBN,MAAMG,8BAA8B,GACzC,CAKEF,SALF,EAMEP,UANF,KAUCQ,KAAD,IACE,CAAC,yCAA4BD,SAA5B,EAAuCP,UAAvC,EAAmDQ,KAAnD,CAZE;;AAAMb,yCAA8Bc,8BAA9B","names":["isNodeOfType","nodeType","node","type","exports","isNodeOfTypes","nodeTypes","includes","isNodeOfTypeWithConditions","conditions","entries","Object","every","key","value","isTokenOfTypeWithConditions","tokenType","token","isNotTokenOfTypeWithConditions"],"sources":["../../src/ast-utils/helpers.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}