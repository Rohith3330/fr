{"ast":null,"code":"'use strict';\n\nconst fs = require('fs');\n\nconst path = require('path');\n\nconst {\n  promisify\n} = require('util');\n\nconst camelcase = require('camelcase');\n\nconst findUp = require('find-up');\n\nconst resolveFrom = require('resolve-from');\n\nconst getPackageType = require('get-package-type');\n\nconst readFile = promisify(fs.readFile);\nlet loadActive = false;\n\nfunction isLoading() {\n  return loadActive;\n}\n\nconst standardConfigFiles = ['.nycrc', '.nycrc.json', '.nycrc.yml', '.nycrc.yaml', 'nyc.config.js', 'nyc.config.cjs', 'nyc.config.mjs'];\n\nfunction camelcasedConfig(config) {\n  const results = {};\n\n  for (const [field, value] of Object.entries(config)) {\n    results[camelcase(field)] = value;\n  }\n\n  return results;\n}\n\nasync function findPackage(options) {\n  const cwd = options.cwd || process.env.NYC_CWD || process.cwd();\n  const pkgPath = await findUp('package.json', {\n    cwd\n  });\n\n  if (pkgPath) {\n    const pkgConfig = JSON.parse(await readFile(pkgPath, 'utf8')).nyc || {};\n\n    if ('cwd' in pkgConfig) {\n      pkgConfig.cwd = path.resolve(path.dirname(pkgPath), pkgConfig.cwd);\n    }\n\n    return {\n      cwd: path.dirname(pkgPath),\n      pkgConfig\n    };\n  }\n\n  return {\n    cwd,\n    pkgConfig: {}\n  };\n}\n\nasync function actualLoad(configFile) {\n  if (!configFile) {\n    return {};\n  }\n\n  const configExt = path.extname(configFile).toLowerCase();\n\n  switch (configExt) {\n    case '.js':\n      /* istanbul ignore next: coverage for 13.2.0+ is shown in load-esm.js */\n      if ((await getPackageType(configFile)) === 'module') {\n        return require('./load-esm')(configFile);\n      }\n\n    /* fallthrough */\n\n    case '.cjs':\n      return require(configFile);\n\n    /* istanbul ignore next: coverage for 13.2.0+ is shown in load-esm.js */\n\n    case '.mjs':\n      return require('./load-esm')(configFile);\n\n    case '.yml':\n    case '.yaml':\n      return require('js-yaml').load(await readFile(configFile, 'utf8'));\n\n    default:\n      return JSON.parse(await readFile(configFile, 'utf8'));\n  }\n}\n\nasync function loadFile(configFile) {\n  /* This lets @istanbuljs/esm-loader-hook avoid circular initialization when loading\n   * configuration.  This should generally only happen when the loader hook is active\n   * on the main nyc process. */\n  loadActive = true;\n\n  try {\n    return await actualLoad(configFile);\n  } finally {\n    loadActive = false;\n  }\n}\n\nasync function applyExtends(config, filename) {\n  let loopCheck = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : new Set();\n  config = camelcasedConfig(config);\n\n  if ('extends' in config) {\n    const extConfigs = [].concat(config.extends);\n\n    if (extConfigs.some(e => typeof e !== 'string')) {\n      throw new TypeError(`${filename} contains an invalid 'extends' option`);\n    }\n\n    delete config.extends;\n    const filePath = path.dirname(filename);\n\n    for (const extConfig of extConfigs) {\n      const configFile = resolveFrom.silent(filePath, extConfig) || resolveFrom.silent(filePath, './' + extConfig);\n\n      if (!configFile) {\n        throw new Error(`Could not resolve configuration file ${extConfig} from ${path.dirname(filename)}.`);\n      }\n\n      if (loopCheck.has(configFile)) {\n        throw new Error(`Circular extended configurations: '${configFile}'.`);\n      }\n\n      loopCheck.add(configFile); // eslint-disable-next-line no-await-in-loop\n\n      const configLoaded = await loadFile(configFile);\n\n      if ('cwd' in configLoaded) {\n        configLoaded.cwd = path.resolve(path.dirname(configFile), configLoaded.cwd);\n      }\n\n      Object.assign(config, // eslint-disable-next-line no-await-in-loop\n      await applyExtends(configLoaded, configFile, loopCheck));\n    }\n  }\n\n  return config;\n}\n\nasync function loadNycConfig() {\n  let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const {\n    cwd,\n    pkgConfig\n  } = await findPackage(options);\n  const configFiles = [].concat(options.nycrcPath || standardConfigFiles);\n  const configFile = await findUp(configFiles, {\n    cwd\n  });\n\n  if (options.nycrcPath && !configFile) {\n    throw new Error(`Requested configuration file ${options.nycrcPath} not found`);\n  }\n\n  const config = {\n    cwd,\n    ...(await applyExtends(pkgConfig, path.join(cwd, 'package.json'))),\n    ...(await applyExtends(await loadFile(configFile), configFile))\n  };\n  const arrayFields = ['require', 'extension', 'exclude', 'include'];\n\n  for (const arrayField of arrayFields) {\n    if (config[arrayField]) {\n      config[arrayField] = [].concat(config[arrayField]);\n    }\n  }\n\n  return config;\n}\n\nmodule.exports = {\n  loadNycConfig,\n  isLoading\n};","map":{"version":3,"names":["fs","require","path","promisify","camelcase","findUp","resolveFrom","getPackageType","readFile","loadActive","isLoading","standardConfigFiles","camelcasedConfig","config","results","field","value","Object","entries","findPackage","options","cwd","process","env","NYC_CWD","pkgPath","pkgConfig","JSON","parse","nyc","resolve","dirname","actualLoad","configFile","configExt","extname","toLowerCase","load","loadFile","applyExtends","filename","loopCheck","Set","extConfigs","concat","extends","some","e","TypeError","filePath","extConfig","silent","Error","has","add","configLoaded","assign","loadNycConfig","configFiles","nycrcPath","join","arrayFields","arrayField","module","exports"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/@istanbuljs/load-nyc-config/index.js"],"sourcesContent":["'use strict';\n\nconst fs = require('fs');\nconst path = require('path');\nconst {promisify} = require('util');\nconst camelcase = require('camelcase');\nconst findUp = require('find-up');\nconst resolveFrom = require('resolve-from');\nconst getPackageType = require('get-package-type');\n\nconst readFile = promisify(fs.readFile);\n\nlet loadActive = false;\n\nfunction isLoading() {\n\treturn loadActive;\n}\n\nconst standardConfigFiles = [\n\t'.nycrc',\n\t'.nycrc.json',\n\t'.nycrc.yml',\n\t'.nycrc.yaml',\n\t'nyc.config.js',\n\t'nyc.config.cjs',\n\t'nyc.config.mjs'\n];\n\nfunction camelcasedConfig(config) {\n\tconst results = {};\n\tfor (const [field, value] of Object.entries(config)) {\n\t\tresults[camelcase(field)] = value;\n\t}\n\n\treturn results;\n}\n\nasync function findPackage(options) {\n\tconst cwd = options.cwd || process.env.NYC_CWD || process.cwd();\n\tconst pkgPath = await findUp('package.json', {cwd});\n\tif (pkgPath) {\n\t\tconst pkgConfig = JSON.parse(await readFile(pkgPath, 'utf8')).nyc || {};\n\t\tif ('cwd' in pkgConfig) {\n\t\t\tpkgConfig.cwd = path.resolve(path.dirname(pkgPath), pkgConfig.cwd);\n\t\t}\n\n\t\treturn {\n\t\t\tcwd: path.dirname(pkgPath),\n\t\t\tpkgConfig\n\t\t};\n\t}\n\n\treturn {\n\t\tcwd,\n\t\tpkgConfig: {}\n\t};\n}\n\nasync function actualLoad(configFile) {\n\tif (!configFile) {\n\t\treturn {};\n\t}\n\n\tconst configExt = path.extname(configFile).toLowerCase();\n\tswitch (configExt) {\n\t\tcase '.js':\n\t\t\t/* istanbul ignore next: coverage for 13.2.0+ is shown in load-esm.js */\n\t\t\tif (await getPackageType(configFile) === 'module') {\n\t\t\t\treturn require('./load-esm')(configFile);\n\t\t\t}\n\n\t\t\t/* fallthrough */\n\t\tcase '.cjs':\n\t\t\treturn require(configFile);\n\t\t/* istanbul ignore next: coverage for 13.2.0+ is shown in load-esm.js */\n\t\tcase '.mjs':\n\t\t\treturn require('./load-esm')(configFile);\n\t\tcase '.yml':\n\t\tcase '.yaml':\n\t\t\treturn require('js-yaml').load(await readFile(configFile, 'utf8'));\n\t\tdefault:\n\t\t\treturn JSON.parse(await readFile(configFile, 'utf8'));\n\t}\n}\n\nasync function loadFile(configFile) {\n\t/* This lets @istanbuljs/esm-loader-hook avoid circular initialization when loading\n\t * configuration.  This should generally only happen when the loader hook is active\n\t * on the main nyc process. */\n\tloadActive = true;\n\n\ttry {\n\t\treturn await actualLoad(configFile);\n\t} finally {\n\t\tloadActive = false;\n\t}\n}\n\nasync function applyExtends(config, filename, loopCheck = new Set()) {\n\tconfig = camelcasedConfig(config);\n\tif ('extends' in config) {\n\t\tconst extConfigs = [].concat(config.extends);\n\t\tif (extConfigs.some(e => typeof e !== 'string')) {\n\t\t\tthrow new TypeError(`${filename} contains an invalid 'extends' option`);\n\t\t}\n\n\t\tdelete config.extends;\n\t\tconst filePath = path.dirname(filename);\n\t\tfor (const extConfig of extConfigs) {\n\t\t\tconst configFile = resolveFrom.silent(filePath, extConfig) ||\n\t\t\t\tresolveFrom.silent(filePath, './' + extConfig);\n\t\t\tif (!configFile) {\n\t\t\t\tthrow new Error(`Could not resolve configuration file ${extConfig} from ${path.dirname(filename)}.`);\n\t\t\t}\n\n\t\t\tif (loopCheck.has(configFile)) {\n\t\t\t\tthrow new Error(`Circular extended configurations: '${configFile}'.`);\n\t\t\t}\n\n\t\t\tloopCheck.add(configFile);\n\n\t\t\t// eslint-disable-next-line no-await-in-loop\n\t\t\tconst configLoaded = await loadFile(configFile);\n\t\t\tif ('cwd' in configLoaded) {\n\t\t\t\tconfigLoaded.cwd = path.resolve(path.dirname(configFile), configLoaded.cwd);\n\t\t\t}\n\n\t\t\tObject.assign(\n\t\t\t\tconfig,\n\t\t\t\t// eslint-disable-next-line no-await-in-loop\n\t\t\t\tawait applyExtends(configLoaded, configFile, loopCheck)\n\t\t\t);\n\t\t}\n\t}\n\n\treturn config;\n}\n\nasync function loadNycConfig(options = {}) {\n\tconst {cwd, pkgConfig} = await findPackage(options);\n\tconst configFiles = [].concat(options.nycrcPath || standardConfigFiles);\n\tconst configFile = await findUp(configFiles, {cwd});\n\tif (options.nycrcPath && !configFile) {\n\t\tthrow new Error(`Requested configuration file ${options.nycrcPath} not found`);\n\t}\n\n\tconst config = {\n\t\tcwd,\n\t\t...(await applyExtends(pkgConfig, path.join(cwd, 'package.json'))),\n\t\t...(await applyExtends(await loadFile(configFile), configFile))\n\t};\n\n\tconst arrayFields = ['require', 'extension', 'exclude', 'include'];\n\tfor (const arrayField of arrayFields) {\n\t\tif (config[arrayField]) {\n\t\t\tconfig[arrayField] = [].concat(config[arrayField]);\n\t\t}\n\t}\n\n\treturn config;\n}\n\nmodule.exports = {\n\tloadNycConfig,\n\tisLoading\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}