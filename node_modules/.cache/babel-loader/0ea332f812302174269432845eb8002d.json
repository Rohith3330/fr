{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __exportStar = this && this.__exportStar || function (m, exports) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.findImportSpecifier = exports.isEmptyFunction = exports.getStatementCallExpression = exports.hasImportMatch = exports.getInnermostReturningFunction = exports.hasClosestExpectResolvesRejects = exports.getAssertNodeInfo = exports.getImportModuleName = exports.getFunctionName = exports.getReferenceNode = exports.getDeepestIdentifierNode = exports.getPropertyIdentifierNode = exports.getFunctionReturnStatementNode = exports.getInnermostFunctionScope = exports.getVariableReferences = exports.isPromiseHandled = exports.isPromisesArrayResolved = exports.isPromiseAllSettled = exports.isPromiseAll = exports.isPromiseIdentifier = exports.hasChainedThen = exports.hasThenProperty = exports.findClosestCallNode = exports.findClosestVariableDeclaratorNode = exports.findClosestCallExpressionNode = void 0;\n\nconst utils_1 = require(\"@typescript-eslint/utils\");\n\nconst is_node_of_type_1 = require(\"./is-node-of-type\");\n\n__exportStar(require(\"./is-node-of-type\"), exports);\n\nconst ValidLeftHandSideExpressions = [utils_1.AST_NODE_TYPES.CallExpression, utils_1.AST_NODE_TYPES.ClassExpression, utils_1.AST_NODE_TYPES.ClassDeclaration, utils_1.AST_NODE_TYPES.FunctionExpression, utils_1.AST_NODE_TYPES.Literal, utils_1.AST_NODE_TYPES.TemplateLiteral, utils_1.AST_NODE_TYPES.MemberExpression, utils_1.AST_NODE_TYPES.ArrayExpression, utils_1.AST_NODE_TYPES.ArrayPattern, utils_1.AST_NODE_TYPES.ClassExpression, utils_1.AST_NODE_TYPES.FunctionExpression, utils_1.AST_NODE_TYPES.Identifier, utils_1.AST_NODE_TYPES.JSXElement, utils_1.AST_NODE_TYPES.JSXFragment, utils_1.AST_NODE_TYPES.JSXOpeningElement, utils_1.AST_NODE_TYPES.MetaProperty, utils_1.AST_NODE_TYPES.ObjectExpression, utils_1.AST_NODE_TYPES.ObjectPattern, utils_1.AST_NODE_TYPES.Super, utils_1.AST_NODE_TYPES.ThisExpression, utils_1.AST_NODE_TYPES.TSNullKeyword, utils_1.AST_NODE_TYPES.TaggedTemplateExpression, utils_1.AST_NODE_TYPES.TSNonNullExpression, utils_1.AST_NODE_TYPES.TSAsExpression, utils_1.AST_NODE_TYPES.ArrowFunctionExpression];\n\nfunction findClosestCallExpressionNode(node) {\n  let shouldRestrictInnerScope = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  if ((0, is_node_of_type_1.isCallExpression)(node)) {\n    return node;\n  }\n\n  if (!node || !node.parent) {\n    return null;\n  }\n\n  if (shouldRestrictInnerScope && !ValidLeftHandSideExpressions.includes(node.parent.type)) {\n    return null;\n  }\n\n  return findClosestCallExpressionNode(node.parent, shouldRestrictInnerScope);\n}\n\nexports.findClosestCallExpressionNode = findClosestCallExpressionNode;\n\nfunction findClosestVariableDeclaratorNode(node) {\n  if (!node) {\n    return null;\n  }\n\n  if (utils_1.ASTUtils.isVariableDeclarator(node)) {\n    return node;\n  }\n\n  return findClosestVariableDeclaratorNode(node.parent);\n}\n\nexports.findClosestVariableDeclaratorNode = findClosestVariableDeclaratorNode;\n\nfunction findClosestCallNode(node, name) {\n  if (!node.parent) {\n    return null;\n  }\n\n  if ((0, is_node_of_type_1.isCallExpression)(node) && utils_1.ASTUtils.isIdentifier(node.callee) && node.callee.name === name) {\n    return node;\n  } else {\n    return findClosestCallNode(node.parent, name);\n  }\n}\n\nexports.findClosestCallNode = findClosestCallNode;\n\nfunction hasThenProperty(node) {\n  return (0, is_node_of_type_1.isMemberExpression)(node) && utils_1.ASTUtils.isIdentifier(node.property) && node.property.name === 'then';\n}\n\nexports.hasThenProperty = hasThenProperty;\n\nfunction hasChainedThen(node) {\n  const parent = node.parent;\n\n  if ((0, is_node_of_type_1.isCallExpression)(parent) && parent.parent) {\n    return hasThenProperty(parent.parent);\n  }\n\n  return !!parent && hasThenProperty(parent);\n}\n\nexports.hasChainedThen = hasChainedThen;\n\nfunction isPromiseIdentifier(node) {\n  return utils_1.ASTUtils.isIdentifier(node) && node.name === 'Promise';\n}\n\nexports.isPromiseIdentifier = isPromiseIdentifier;\n\nfunction isPromiseAll(node) {\n  return (0, is_node_of_type_1.isMemberExpression)(node.callee) && isPromiseIdentifier(node.callee.object) && utils_1.ASTUtils.isIdentifier(node.callee.property) && node.callee.property.name === 'all';\n}\n\nexports.isPromiseAll = isPromiseAll;\n\nfunction isPromiseAllSettled(node) {\n  return (0, is_node_of_type_1.isMemberExpression)(node.callee) && isPromiseIdentifier(node.callee.object) && utils_1.ASTUtils.isIdentifier(node.callee.property) && node.callee.property.name === 'allSettled';\n}\n\nexports.isPromiseAllSettled = isPromiseAllSettled;\n\nfunction isPromisesArrayResolved(node) {\n  const closestCallExpression = findClosestCallExpressionNode(node, true);\n\n  if (!closestCallExpression) {\n    return false;\n  }\n\n  return !!closestCallExpression.parent && (0, is_node_of_type_1.isArrayExpression)(closestCallExpression.parent) && (0, is_node_of_type_1.isCallExpression)(closestCallExpression.parent.parent) && (isPromiseAll(closestCallExpression.parent.parent) || isPromiseAllSettled(closestCallExpression.parent.parent));\n}\n\nexports.isPromisesArrayResolved = isPromisesArrayResolved;\n\nfunction isPromiseHandled(nodeIdentifier) {\n  const closestCallExpressionNode = findClosestCallExpressionNode(nodeIdentifier, true);\n  const suspiciousNodes = [nodeIdentifier, closestCallExpressionNode].filter(Boolean);\n\n  for (const node of suspiciousNodes) {\n    if (!node || !node.parent) {\n      continue;\n    }\n\n    if (utils_1.ASTUtils.isAwaitExpression(node.parent)) {\n      return true;\n    }\n\n    if ((0, is_node_of_type_1.isArrowFunctionExpression)(node.parent) || (0, is_node_of_type_1.isReturnStatement)(node.parent)) {\n      return true;\n    }\n\n    if (hasClosestExpectResolvesRejects(node.parent)) {\n      return true;\n    }\n\n    if (hasChainedThen(node)) {\n      return true;\n    }\n\n    if (isPromisesArrayResolved(node)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nexports.isPromiseHandled = isPromiseHandled;\n\nfunction getVariableReferences(context, node) {\n  var _a, _b, _c;\n\n  if (utils_1.ASTUtils.isVariableDeclarator(node)) {\n    return (_c = (_b = (_a = context.getDeclaredVariables(node)[0]) === null || _a === void 0 ? void 0 : _a.references) === null || _b === void 0 ? void 0 : _b.slice(1)) !== null && _c !== void 0 ? _c : [];\n  }\n\n  return [];\n}\n\nexports.getVariableReferences = getVariableReferences;\n\nfunction getInnermostFunctionScope(context, asyncQueryNode) {\n  const innermostScope = utils_1.ASTUtils.getInnermostScope(context.getScope(), asyncQueryNode);\n\n  if (innermostScope.type === 'function' && utils_1.ASTUtils.isFunction(innermostScope.block)) {\n    return innermostScope;\n  }\n\n  return null;\n}\n\nexports.getInnermostFunctionScope = getInnermostFunctionScope;\n\nfunction getFunctionReturnStatementNode(functionNode) {\n  if ((0, is_node_of_type_1.isBlockStatement)(functionNode.body)) {\n    const returnStatementNode = functionNode.body.body.find(statement => (0, is_node_of_type_1.isReturnStatement)(statement));\n\n    if (!returnStatementNode) {\n      return null;\n    }\n\n    return returnStatementNode.argument;\n  } else if (functionNode.expression) {\n    return functionNode.body;\n  }\n\n  return null;\n}\n\nexports.getFunctionReturnStatementNode = getFunctionReturnStatementNode;\n\nfunction getPropertyIdentifierNode(node) {\n  if (utils_1.ASTUtils.isIdentifier(node)) {\n    return node;\n  }\n\n  if ((0, is_node_of_type_1.isMemberExpression)(node)) {\n    return getPropertyIdentifierNode(node.object);\n  }\n\n  if ((0, is_node_of_type_1.isCallExpression)(node)) {\n    return getPropertyIdentifierNode(node.callee);\n  }\n\n  if ((0, is_node_of_type_1.isExpressionStatement)(node)) {\n    return getPropertyIdentifierNode(node.expression);\n  }\n\n  return null;\n}\n\nexports.getPropertyIdentifierNode = getPropertyIdentifierNode;\n\nfunction getDeepestIdentifierNode(node) {\n  if (utils_1.ASTUtils.isIdentifier(node)) {\n    return node;\n  }\n\n  if ((0, is_node_of_type_1.isMemberExpression)(node) && utils_1.ASTUtils.isIdentifier(node.property)) {\n    return node.property;\n  }\n\n  if ((0, is_node_of_type_1.isCallExpression)(node)) {\n    return getDeepestIdentifierNode(node.callee);\n  }\n\n  if (utils_1.ASTUtils.isAwaitExpression(node)) {\n    return getDeepestIdentifierNode(node.argument);\n  }\n\n  return null;\n}\n\nexports.getDeepestIdentifierNode = getDeepestIdentifierNode;\n\nfunction getReferenceNode(node) {\n  if (node.parent && ((0, is_node_of_type_1.isMemberExpression)(node.parent) || (0, is_node_of_type_1.isCallExpression)(node.parent))) {\n    return getReferenceNode(node.parent);\n  }\n\n  return node;\n}\n\nexports.getReferenceNode = getReferenceNode;\n\nfunction getFunctionName(node) {\n  var _a, _b;\n\n  return (_b = (_a = utils_1.ASTUtils.getFunctionNameWithKind(node).match(/('\\w+')/g)) === null || _a === void 0 ? void 0 : _a[0].replace(/'/g, '')) !== null && _b !== void 0 ? _b : '';\n}\n\nexports.getFunctionName = getFunctionName;\n\nfunction getImportModuleName(node) {\n  if ((0, is_node_of_type_1.isImportDeclaration)(node) && typeof node.source.value === 'string') {\n    return node.source.value;\n  }\n\n  if ((0, is_node_of_type_1.isCallExpression)(node) && (0, is_node_of_type_1.isLiteral)(node.arguments[0]) && typeof node.arguments[0].value === 'string') {\n    return node.arguments[0].value;\n  }\n\n  return undefined;\n}\n\nexports.getImportModuleName = getImportModuleName;\n\nfunction getAssertNodeInfo(node) {\n  const emptyInfo = {\n    matcher: null,\n    isNegated: false\n  };\n\n  if (!(0, is_node_of_type_1.isCallExpression)(node.object) || !utils_1.ASTUtils.isIdentifier(node.object.callee)) {\n    return emptyInfo;\n  }\n\n  if (node.object.callee.name !== 'expect') {\n    return emptyInfo;\n  }\n\n  let matcher = utils_1.ASTUtils.getPropertyName(node);\n  const isNegated = matcher === 'not';\n\n  if (isNegated) {\n    matcher = node.parent && (0, is_node_of_type_1.isMemberExpression)(node.parent) ? utils_1.ASTUtils.getPropertyName(node.parent) : null;\n  }\n\n  if (!matcher) {\n    return emptyInfo;\n  }\n\n  return {\n    matcher,\n    isNegated\n  };\n}\n\nexports.getAssertNodeInfo = getAssertNodeInfo;\n\nfunction hasClosestExpectResolvesRejects(node) {\n  if ((0, is_node_of_type_1.isCallExpression)(node) && utils_1.ASTUtils.isIdentifier(node.callee) && node.parent && (0, is_node_of_type_1.isMemberExpression)(node.parent) && node.callee.name === 'expect') {\n    const expectMatcher = node.parent.property;\n    return utils_1.ASTUtils.isIdentifier(expectMatcher) && (expectMatcher.name === 'resolves' || expectMatcher.name === 'rejects');\n  }\n\n  if (!node.parent) {\n    return false;\n  }\n\n  return hasClosestExpectResolvesRejects(node.parent);\n}\n\nexports.hasClosestExpectResolvesRejects = hasClosestExpectResolvesRejects;\n\nfunction getInnermostReturningFunction(context, node) {\n  const functionScope = getInnermostFunctionScope(context, node);\n\n  if (!functionScope) {\n    return undefined;\n  }\n\n  const returnStatementNode = getFunctionReturnStatementNode(functionScope.block);\n\n  if (!returnStatementNode) {\n    return undefined;\n  }\n\n  const returnStatementIdentifier = getDeepestIdentifierNode(returnStatementNode);\n\n  if ((returnStatementIdentifier === null || returnStatementIdentifier === void 0 ? void 0 : returnStatementIdentifier.name) !== node.name) {\n    return undefined;\n  }\n\n  return functionScope.block;\n}\n\nexports.getInnermostReturningFunction = getInnermostReturningFunction;\n\nfunction hasImportMatch(importNode, identifierName) {\n  if (utils_1.ASTUtils.isIdentifier(importNode)) {\n    return importNode.name === identifierName;\n  }\n\n  return importNode.local.name === identifierName;\n}\n\nexports.hasImportMatch = hasImportMatch;\n\nfunction getStatementCallExpression(statement) {\n  if ((0, is_node_of_type_1.isExpressionStatement)(statement)) {\n    const {\n      expression\n    } = statement;\n\n    if ((0, is_node_of_type_1.isCallExpression)(expression)) {\n      return expression;\n    }\n\n    if (utils_1.ASTUtils.isAwaitExpression(expression) && (0, is_node_of_type_1.isCallExpression)(expression.argument)) {\n      return expression.argument;\n    }\n\n    if ((0, is_node_of_type_1.isAssignmentExpression)(expression)) {\n      if ((0, is_node_of_type_1.isCallExpression)(expression.right)) {\n        return expression.right;\n      }\n\n      if (utils_1.ASTUtils.isAwaitExpression(expression.right) && (0, is_node_of_type_1.isCallExpression)(expression.right.argument)) {\n        return expression.right.argument;\n      }\n    }\n  }\n\n  if ((0, is_node_of_type_1.isReturnStatement)(statement) && (0, is_node_of_type_1.isCallExpression)(statement.argument)) {\n    return statement.argument;\n  }\n\n  if ((0, is_node_of_type_1.isVariableDeclaration)(statement)) {\n    for (const declaration of statement.declarations) {\n      if ((0, is_node_of_type_1.isCallExpression)(declaration.init)) {\n        return declaration.init;\n      }\n    }\n  }\n\n  return undefined;\n}\n\nexports.getStatementCallExpression = getStatementCallExpression;\n\nfunction isEmptyFunction(node) {\n  if (utils_1.ASTUtils.isFunction(node) && (0, is_node_of_type_1.isBlockStatement)(node.body)) {\n    return node.body.body.length === 0;\n  }\n\n  return false;\n}\n\nexports.isEmptyFunction = isEmptyFunction;\n\nfunction findImportSpecifier(specifierName, node) {\n  if ((0, is_node_of_type_1.isImportDeclaration)(node)) {\n    const namedExport = node.specifiers.find(n => {\n      return (0, is_node_of_type_1.isImportSpecifier)(n) && [n.imported.name, n.local.name].includes(specifierName);\n    });\n\n    if (namedExport) {\n      return namedExport;\n    }\n\n    return node.specifiers.find(n => (0, is_node_of_type_1.isImportNamespaceSpecifier)(n));\n  } else {\n    if (!utils_1.ASTUtils.isVariableDeclarator(node.parent)) {\n      return undefined;\n    }\n\n    const requireNode = node.parent;\n\n    if (utils_1.ASTUtils.isIdentifier(requireNode.id)) {\n      return requireNode.id;\n    }\n\n    if (!(0, is_node_of_type_1.isObjectPattern)(requireNode.id)) {\n      return undefined;\n    }\n\n    const property = requireNode.id.properties.find(n => (0, is_node_of_type_1.isProperty)(n) && utils_1.ASTUtils.isIdentifier(n.key) && n.key.name === specifierName);\n\n    if (!property) {\n      return undefined;\n    }\n\n    return property.key;\n  }\n}\n\nexports.findImportSpecifier = findImportSpecifier;","map":{"version":3,"names":["__createBinding","Object","create","o","m","k","k2","undefined","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","enumerable","get","defineProperty","__exportStar","exports","p","prototype","hasOwnProperty","call","value","findImportSpecifier","isEmptyFunction","getStatementCallExpression","hasImportMatch","getInnermostReturningFunction","hasClosestExpectResolvesRejects","getAssertNodeInfo","getImportModuleName","getFunctionName","getReferenceNode","getDeepestIdentifierNode","getPropertyIdentifierNode","getFunctionReturnStatementNode","getInnermostFunctionScope","getVariableReferences","isPromiseHandled","isPromisesArrayResolved","isPromiseAllSettled","isPromiseAll","isPromiseIdentifier","hasChainedThen","hasThenProperty","findClosestCallNode","findClosestVariableDeclaratorNode","findClosestCallExpressionNode","utils_1","require","is_node_of_type_1","ValidLeftHandSideExpressions","AST_NODE_TYPES","CallExpression","ClassExpression","ClassDeclaration","FunctionExpression","Literal","TemplateLiteral","MemberExpression","ArrayExpression","ArrayPattern","Identifier","JSXElement","JSXFragment","JSXOpeningElement","MetaProperty","ObjectExpression","ObjectPattern","Super","ThisExpression","TSNullKeyword","TaggedTemplateExpression","TSNonNullExpression","TSAsExpression","ArrowFunctionExpression","node","shouldRestrictInnerScope","isCallExpression","parent","includes","type","ASTUtils","isVariableDeclarator","name","isIdentifier","callee","isMemberExpression","property","object","closestCallExpression","isArrayExpression","nodeIdentifier","closestCallExpressionNode","suspiciousNodes","filter","Boolean","isAwaitExpression","isArrowFunctionExpression","isReturnStatement","context","_a","_b","_c","getDeclaredVariables","references","slice","asyncQueryNode","innermostScope","getInnermostScope","getScope","isFunction","block","functionNode","isBlockStatement","body","returnStatementNode","find","statement","argument","expression","isExpressionStatement","getFunctionNameWithKind","match","replace","isImportDeclaration","source","isLiteral","arguments","emptyInfo","matcher","isNegated","getPropertyName","expectMatcher","functionScope","returnStatementIdentifier","importNode","identifierName","local","isAssignmentExpression","right","isVariableDeclaration","declaration","declarations","init","length","specifierName","namedExport","specifiers","n","isImportSpecifier","imported","isImportNamespaceSpecifier","requireNode","id","isObjectPattern","properties","isProperty","key"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/eslint-plugin-testing-library/node-utils/index.js"],"sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.findImportSpecifier = exports.isEmptyFunction = exports.getStatementCallExpression = exports.hasImportMatch = exports.getInnermostReturningFunction = exports.hasClosestExpectResolvesRejects = exports.getAssertNodeInfo = exports.getImportModuleName = exports.getFunctionName = exports.getReferenceNode = exports.getDeepestIdentifierNode = exports.getPropertyIdentifierNode = exports.getFunctionReturnStatementNode = exports.getInnermostFunctionScope = exports.getVariableReferences = exports.isPromiseHandled = exports.isPromisesArrayResolved = exports.isPromiseAllSettled = exports.isPromiseAll = exports.isPromiseIdentifier = exports.hasChainedThen = exports.hasThenProperty = exports.findClosestCallNode = exports.findClosestVariableDeclaratorNode = exports.findClosestCallExpressionNode = void 0;\nconst utils_1 = require(\"@typescript-eslint/utils\");\nconst is_node_of_type_1 = require(\"./is-node-of-type\");\n__exportStar(require(\"./is-node-of-type\"), exports);\nconst ValidLeftHandSideExpressions = [\n    utils_1.AST_NODE_TYPES.CallExpression,\n    utils_1.AST_NODE_TYPES.ClassExpression,\n    utils_1.AST_NODE_TYPES.ClassDeclaration,\n    utils_1.AST_NODE_TYPES.FunctionExpression,\n    utils_1.AST_NODE_TYPES.Literal,\n    utils_1.AST_NODE_TYPES.TemplateLiteral,\n    utils_1.AST_NODE_TYPES.MemberExpression,\n    utils_1.AST_NODE_TYPES.ArrayExpression,\n    utils_1.AST_NODE_TYPES.ArrayPattern,\n    utils_1.AST_NODE_TYPES.ClassExpression,\n    utils_1.AST_NODE_TYPES.FunctionExpression,\n    utils_1.AST_NODE_TYPES.Identifier,\n    utils_1.AST_NODE_TYPES.JSXElement,\n    utils_1.AST_NODE_TYPES.JSXFragment,\n    utils_1.AST_NODE_TYPES.JSXOpeningElement,\n    utils_1.AST_NODE_TYPES.MetaProperty,\n    utils_1.AST_NODE_TYPES.ObjectExpression,\n    utils_1.AST_NODE_TYPES.ObjectPattern,\n    utils_1.AST_NODE_TYPES.Super,\n    utils_1.AST_NODE_TYPES.ThisExpression,\n    utils_1.AST_NODE_TYPES.TSNullKeyword,\n    utils_1.AST_NODE_TYPES.TaggedTemplateExpression,\n    utils_1.AST_NODE_TYPES.TSNonNullExpression,\n    utils_1.AST_NODE_TYPES.TSAsExpression,\n    utils_1.AST_NODE_TYPES.ArrowFunctionExpression,\n];\nfunction findClosestCallExpressionNode(node, shouldRestrictInnerScope = false) {\n    if ((0, is_node_of_type_1.isCallExpression)(node)) {\n        return node;\n    }\n    if (!node || !node.parent) {\n        return null;\n    }\n    if (shouldRestrictInnerScope &&\n        !ValidLeftHandSideExpressions.includes(node.parent.type)) {\n        return null;\n    }\n    return findClosestCallExpressionNode(node.parent, shouldRestrictInnerScope);\n}\nexports.findClosestCallExpressionNode = findClosestCallExpressionNode;\nfunction findClosestVariableDeclaratorNode(node) {\n    if (!node) {\n        return null;\n    }\n    if (utils_1.ASTUtils.isVariableDeclarator(node)) {\n        return node;\n    }\n    return findClosestVariableDeclaratorNode(node.parent);\n}\nexports.findClosestVariableDeclaratorNode = findClosestVariableDeclaratorNode;\nfunction findClosestCallNode(node, name) {\n    if (!node.parent) {\n        return null;\n    }\n    if ((0, is_node_of_type_1.isCallExpression)(node) &&\n        utils_1.ASTUtils.isIdentifier(node.callee) &&\n        node.callee.name === name) {\n        return node;\n    }\n    else {\n        return findClosestCallNode(node.parent, name);\n    }\n}\nexports.findClosestCallNode = findClosestCallNode;\nfunction hasThenProperty(node) {\n    return ((0, is_node_of_type_1.isMemberExpression)(node) &&\n        utils_1.ASTUtils.isIdentifier(node.property) &&\n        node.property.name === 'then');\n}\nexports.hasThenProperty = hasThenProperty;\nfunction hasChainedThen(node) {\n    const parent = node.parent;\n    if ((0, is_node_of_type_1.isCallExpression)(parent) && parent.parent) {\n        return hasThenProperty(parent.parent);\n    }\n    return !!parent && hasThenProperty(parent);\n}\nexports.hasChainedThen = hasChainedThen;\nfunction isPromiseIdentifier(node) {\n    return utils_1.ASTUtils.isIdentifier(node) && node.name === 'Promise';\n}\nexports.isPromiseIdentifier = isPromiseIdentifier;\nfunction isPromiseAll(node) {\n    return ((0, is_node_of_type_1.isMemberExpression)(node.callee) &&\n        isPromiseIdentifier(node.callee.object) &&\n        utils_1.ASTUtils.isIdentifier(node.callee.property) &&\n        node.callee.property.name === 'all');\n}\nexports.isPromiseAll = isPromiseAll;\nfunction isPromiseAllSettled(node) {\n    return ((0, is_node_of_type_1.isMemberExpression)(node.callee) &&\n        isPromiseIdentifier(node.callee.object) &&\n        utils_1.ASTUtils.isIdentifier(node.callee.property) &&\n        node.callee.property.name === 'allSettled');\n}\nexports.isPromiseAllSettled = isPromiseAllSettled;\nfunction isPromisesArrayResolved(node) {\n    const closestCallExpression = findClosestCallExpressionNode(node, true);\n    if (!closestCallExpression) {\n        return false;\n    }\n    return (!!closestCallExpression.parent &&\n        (0, is_node_of_type_1.isArrayExpression)(closestCallExpression.parent) &&\n        (0, is_node_of_type_1.isCallExpression)(closestCallExpression.parent.parent) &&\n        (isPromiseAll(closestCallExpression.parent.parent) ||\n            isPromiseAllSettled(closestCallExpression.parent.parent)));\n}\nexports.isPromisesArrayResolved = isPromisesArrayResolved;\nfunction isPromiseHandled(nodeIdentifier) {\n    const closestCallExpressionNode = findClosestCallExpressionNode(nodeIdentifier, true);\n    const suspiciousNodes = [nodeIdentifier, closestCallExpressionNode].filter(Boolean);\n    for (const node of suspiciousNodes) {\n        if (!node || !node.parent) {\n            continue;\n        }\n        if (utils_1.ASTUtils.isAwaitExpression(node.parent)) {\n            return true;\n        }\n        if ((0, is_node_of_type_1.isArrowFunctionExpression)(node.parent) ||\n            (0, is_node_of_type_1.isReturnStatement)(node.parent)) {\n            return true;\n        }\n        if (hasClosestExpectResolvesRejects(node.parent)) {\n            return true;\n        }\n        if (hasChainedThen(node)) {\n            return true;\n        }\n        if (isPromisesArrayResolved(node)) {\n            return true;\n        }\n    }\n    return false;\n}\nexports.isPromiseHandled = isPromiseHandled;\nfunction getVariableReferences(context, node) {\n    var _a, _b, _c;\n    if (utils_1.ASTUtils.isVariableDeclarator(node)) {\n        return (_c = (_b = (_a = context.getDeclaredVariables(node)[0]) === null || _a === void 0 ? void 0 : _a.references) === null || _b === void 0 ? void 0 : _b.slice(1)) !== null && _c !== void 0 ? _c : [];\n    }\n    return [];\n}\nexports.getVariableReferences = getVariableReferences;\nfunction getInnermostFunctionScope(context, asyncQueryNode) {\n    const innermostScope = utils_1.ASTUtils.getInnermostScope(context.getScope(), asyncQueryNode);\n    if (innermostScope.type === 'function' &&\n        utils_1.ASTUtils.isFunction(innermostScope.block)) {\n        return innermostScope;\n    }\n    return null;\n}\nexports.getInnermostFunctionScope = getInnermostFunctionScope;\nfunction getFunctionReturnStatementNode(functionNode) {\n    if ((0, is_node_of_type_1.isBlockStatement)(functionNode.body)) {\n        const returnStatementNode = functionNode.body.body.find((statement) => (0, is_node_of_type_1.isReturnStatement)(statement));\n        if (!returnStatementNode) {\n            return null;\n        }\n        return returnStatementNode.argument;\n    }\n    else if (functionNode.expression) {\n        return functionNode.body;\n    }\n    return null;\n}\nexports.getFunctionReturnStatementNode = getFunctionReturnStatementNode;\nfunction getPropertyIdentifierNode(node) {\n    if (utils_1.ASTUtils.isIdentifier(node)) {\n        return node;\n    }\n    if ((0, is_node_of_type_1.isMemberExpression)(node)) {\n        return getPropertyIdentifierNode(node.object);\n    }\n    if ((0, is_node_of_type_1.isCallExpression)(node)) {\n        return getPropertyIdentifierNode(node.callee);\n    }\n    if ((0, is_node_of_type_1.isExpressionStatement)(node)) {\n        return getPropertyIdentifierNode(node.expression);\n    }\n    return null;\n}\nexports.getPropertyIdentifierNode = getPropertyIdentifierNode;\nfunction getDeepestIdentifierNode(node) {\n    if (utils_1.ASTUtils.isIdentifier(node)) {\n        return node;\n    }\n    if ((0, is_node_of_type_1.isMemberExpression)(node) && utils_1.ASTUtils.isIdentifier(node.property)) {\n        return node.property;\n    }\n    if ((0, is_node_of_type_1.isCallExpression)(node)) {\n        return getDeepestIdentifierNode(node.callee);\n    }\n    if (utils_1.ASTUtils.isAwaitExpression(node)) {\n        return getDeepestIdentifierNode(node.argument);\n    }\n    return null;\n}\nexports.getDeepestIdentifierNode = getDeepestIdentifierNode;\nfunction getReferenceNode(node) {\n    if (node.parent &&\n        ((0, is_node_of_type_1.isMemberExpression)(node.parent) || (0, is_node_of_type_1.isCallExpression)(node.parent))) {\n        return getReferenceNode(node.parent);\n    }\n    return node;\n}\nexports.getReferenceNode = getReferenceNode;\nfunction getFunctionName(node) {\n    var _a, _b;\n    return ((_b = (_a = utils_1.ASTUtils.getFunctionNameWithKind(node)\n        .match(/('\\w+')/g)) === null || _a === void 0 ? void 0 : _a[0].replace(/'/g, '')) !== null && _b !== void 0 ? _b : '');\n}\nexports.getFunctionName = getFunctionName;\nfunction getImportModuleName(node) {\n    if ((0, is_node_of_type_1.isImportDeclaration)(node) && typeof node.source.value === 'string') {\n        return node.source.value;\n    }\n    if ((0, is_node_of_type_1.isCallExpression)(node) &&\n        (0, is_node_of_type_1.isLiteral)(node.arguments[0]) &&\n        typeof node.arguments[0].value === 'string') {\n        return node.arguments[0].value;\n    }\n    return undefined;\n}\nexports.getImportModuleName = getImportModuleName;\nfunction getAssertNodeInfo(node) {\n    const emptyInfo = { matcher: null, isNegated: false };\n    if (!(0, is_node_of_type_1.isCallExpression)(node.object) ||\n        !utils_1.ASTUtils.isIdentifier(node.object.callee)) {\n        return emptyInfo;\n    }\n    if (node.object.callee.name !== 'expect') {\n        return emptyInfo;\n    }\n    let matcher = utils_1.ASTUtils.getPropertyName(node);\n    const isNegated = matcher === 'not';\n    if (isNegated) {\n        matcher =\n            node.parent && (0, is_node_of_type_1.isMemberExpression)(node.parent)\n                ? utils_1.ASTUtils.getPropertyName(node.parent)\n                : null;\n    }\n    if (!matcher) {\n        return emptyInfo;\n    }\n    return { matcher, isNegated };\n}\nexports.getAssertNodeInfo = getAssertNodeInfo;\nfunction hasClosestExpectResolvesRejects(node) {\n    if ((0, is_node_of_type_1.isCallExpression)(node) &&\n        utils_1.ASTUtils.isIdentifier(node.callee) &&\n        node.parent &&\n        (0, is_node_of_type_1.isMemberExpression)(node.parent) &&\n        node.callee.name === 'expect') {\n        const expectMatcher = node.parent.property;\n        return (utils_1.ASTUtils.isIdentifier(expectMatcher) &&\n            (expectMatcher.name === 'resolves' || expectMatcher.name === 'rejects'));\n    }\n    if (!node.parent) {\n        return false;\n    }\n    return hasClosestExpectResolvesRejects(node.parent);\n}\nexports.hasClosestExpectResolvesRejects = hasClosestExpectResolvesRejects;\nfunction getInnermostReturningFunction(context, node) {\n    const functionScope = getInnermostFunctionScope(context, node);\n    if (!functionScope) {\n        return undefined;\n    }\n    const returnStatementNode = getFunctionReturnStatementNode(functionScope.block);\n    if (!returnStatementNode) {\n        return undefined;\n    }\n    const returnStatementIdentifier = getDeepestIdentifierNode(returnStatementNode);\n    if ((returnStatementIdentifier === null || returnStatementIdentifier === void 0 ? void 0 : returnStatementIdentifier.name) !== node.name) {\n        return undefined;\n    }\n    return functionScope.block;\n}\nexports.getInnermostReturningFunction = getInnermostReturningFunction;\nfunction hasImportMatch(importNode, identifierName) {\n    if (utils_1.ASTUtils.isIdentifier(importNode)) {\n        return importNode.name === identifierName;\n    }\n    return importNode.local.name === identifierName;\n}\nexports.hasImportMatch = hasImportMatch;\nfunction getStatementCallExpression(statement) {\n    if ((0, is_node_of_type_1.isExpressionStatement)(statement)) {\n        const { expression } = statement;\n        if ((0, is_node_of_type_1.isCallExpression)(expression)) {\n            return expression;\n        }\n        if (utils_1.ASTUtils.isAwaitExpression(expression) &&\n            (0, is_node_of_type_1.isCallExpression)(expression.argument)) {\n            return expression.argument;\n        }\n        if ((0, is_node_of_type_1.isAssignmentExpression)(expression)) {\n            if ((0, is_node_of_type_1.isCallExpression)(expression.right)) {\n                return expression.right;\n            }\n            if (utils_1.ASTUtils.isAwaitExpression(expression.right) &&\n                (0, is_node_of_type_1.isCallExpression)(expression.right.argument)) {\n                return expression.right.argument;\n            }\n        }\n    }\n    if ((0, is_node_of_type_1.isReturnStatement)(statement) && (0, is_node_of_type_1.isCallExpression)(statement.argument)) {\n        return statement.argument;\n    }\n    if ((0, is_node_of_type_1.isVariableDeclaration)(statement)) {\n        for (const declaration of statement.declarations) {\n            if ((0, is_node_of_type_1.isCallExpression)(declaration.init)) {\n                return declaration.init;\n            }\n        }\n    }\n    return undefined;\n}\nexports.getStatementCallExpression = getStatementCallExpression;\nfunction isEmptyFunction(node) {\n    if (utils_1.ASTUtils.isFunction(node) && (0, is_node_of_type_1.isBlockStatement)(node.body)) {\n        return node.body.body.length === 0;\n    }\n    return false;\n}\nexports.isEmptyFunction = isEmptyFunction;\nfunction findImportSpecifier(specifierName, node) {\n    if ((0, is_node_of_type_1.isImportDeclaration)(node)) {\n        const namedExport = node.specifiers.find((n) => {\n            return ((0, is_node_of_type_1.isImportSpecifier)(n) &&\n                [n.imported.name, n.local.name].includes(specifierName));\n        });\n        if (namedExport) {\n            return namedExport;\n        }\n        return node.specifiers.find((n) => (0, is_node_of_type_1.isImportNamespaceSpecifier)(n));\n    }\n    else {\n        if (!utils_1.ASTUtils.isVariableDeclarator(node.parent)) {\n            return undefined;\n        }\n        const requireNode = node.parent;\n        if (utils_1.ASTUtils.isIdentifier(requireNode.id)) {\n            return requireNode.id;\n        }\n        if (!(0, is_node_of_type_1.isObjectPattern)(requireNode.id)) {\n            return undefined;\n        }\n        const property = requireNode.id.properties.find((n) => (0, is_node_of_type_1.isProperty)(n) &&\n            utils_1.ASTUtils.isIdentifier(n.key) &&\n            n.key.name === specifierName);\n        if (!property) {\n            return undefined;\n        }\n        return property.key;\n    }\n}\nexports.findImportSpecifier = findImportSpecifier;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}