{"ast":null,"code":"/**\n * @fileoverview Rule to flag use of ternary operators.\n * @author Ian Christian Myers\n */\n\"use strict\"; //------------------------------------------------------------------------------\n// Rule Definition\n//------------------------------------------------------------------------------\n\n/** @type {import('../shared/types').Rule} */\n\nmodule.exports = {\n  meta: {\n    type: \"suggestion\",\n    docs: {\n      description: \"Disallow ternary operators\",\n      recommended: false,\n      url: \"https://eslint.org/docs/rules/no-ternary\"\n    },\n    schema: [],\n    messages: {\n      noTernaryOperator: \"Ternary operator used.\"\n    }\n  },\n\n  create(context) {\n    return {\n      ConditionalExpression(node) {\n        context.report({\n          node,\n          messageId: \"noTernaryOperator\"\n        });\n      }\n\n    };\n  }\n\n};","map":{"version":3,"names":["module","exports","meta","type","docs","description","recommended","url","schema","messages","noTernaryOperator","create","context","ConditionalExpression","node","report","messageId"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/eslint/lib/rules/no-ternary.js"],"sourcesContent":["/**\n * @fileoverview Rule to flag use of ternary operators.\n * @author Ian Christian Myers\n */\n\n\"use strict\";\n\n//------------------------------------------------------------------------------\n// Rule Definition\n//------------------------------------------------------------------------------\n\n/** @type {import('../shared/types').Rule} */\nmodule.exports = {\n    meta: {\n        type: \"suggestion\",\n\n        docs: {\n            description: \"Disallow ternary operators\",\n            recommended: false,\n            url: \"https://eslint.org/docs/rules/no-ternary\"\n        },\n\n        schema: [],\n\n        messages: {\n            noTernaryOperator: \"Ternary operator used.\"\n        }\n    },\n\n    create(context) {\n\n        return {\n\n            ConditionalExpression(node) {\n                context.report({ node, messageId: \"noTernaryOperator\" });\n            }\n\n        };\n\n    }\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AAEA,a,CAEA;AACA;AACA;;AAEA;;AACAA,MAAM,CAACC,OAAP,GAAiB;EACbC,IAAI,EAAE;IACFC,IAAI,EAAE,YADJ;IAGFC,IAAI,EAAE;MACFC,WAAW,EAAE,4BADX;MAEFC,WAAW,EAAE,KAFX;MAGFC,GAAG,EAAE;IAHH,CAHJ;IASFC,MAAM,EAAE,EATN;IAWFC,QAAQ,EAAE;MACNC,iBAAiB,EAAE;IADb;EAXR,CADO;;EAiBbC,MAAM,CAACC,OAAD,EAAU;IAEZ,OAAO;MAEHC,qBAAqB,CAACC,IAAD,EAAO;QACxBF,OAAO,CAACG,MAAR,CAAe;UAAED,IAAF;UAAQE,SAAS,EAAE;QAAnB,CAAf;MACH;;IAJE,CAAP;EAQH;;AA3BY,CAAjB"},"metadata":{},"sourceType":"script"}