{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n  return arr2;\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function () {};\n\n      return {\n        s: F,\n        n: function () {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function (e) {\n          throw e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function () {\n      it = o[Symbol.iterator]();\n    },\n    n: function () {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function (e) {\n      didErr = true;\n      err = e;\n    },\n    f: function () {\n      try {\n        if (!normalCompletion && it.return != null) it.return();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\n\nvar commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\nfunction createCommonjsModule(fn, module) {\n  return module = {\n    exports: {}\n  }, fn(module, module.exports), module.exports;\n}\n\nvar estraverse = createCommonjsModule(function (module, exports) {\n  /*\n    Copyright (C) 2012-2013 Yusuke Suzuki <utatane.tea@gmail.com>\n    Copyright (C) 2012 Ariya Hidayat <ariya.hidayat@gmail.com>\n  \n    Redistribution and use in source and binary forms, with or without\n    modification, are permitted provided that the following conditions are met:\n  \n      * Redistributions of source code must retain the above copyright\n        notice, this list of conditions and the following disclaimer.\n      * Redistributions in binary form must reproduce the above copyright\n        notice, this list of conditions and the following disclaimer in the\n        documentation and/or other materials provided with the distribution.\n  \n    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n    ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n    DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n    (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n    LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n    ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n    (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n    THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n\n  /*jslint vars:false, bitwise:true*/\n\n  /*jshint indent:4*/\n\n  /*global exports:true*/\n  (function clone(exports) {\n    var Syntax, VisitorOption, VisitorKeys, BREAK, SKIP, REMOVE;\n\n    function deepCopy(obj) {\n      var ret = {},\n          key,\n          val;\n\n      for (key in obj) {\n        if (obj.hasOwnProperty(key)) {\n          val = obj[key];\n\n          if (typeof val === 'object' && val !== null) {\n            ret[key] = deepCopy(val);\n          } else {\n            ret[key] = val;\n          }\n        }\n      }\n\n      return ret;\n    } // based on LLVM libc++ upper_bound / lower_bound\n    // MIT License\n\n\n    function upperBound(array, func) {\n      var diff, len, i, current;\n      len = array.length;\n      i = 0;\n\n      while (len) {\n        diff = len >>> 1;\n        current = i + diff;\n\n        if (func(array[current])) {\n          len = diff;\n        } else {\n          i = current + 1;\n          len -= diff + 1;\n        }\n      }\n\n      return i;\n    }\n\n    Syntax = {\n      AssignmentExpression: 'AssignmentExpression',\n      AssignmentPattern: 'AssignmentPattern',\n      ArrayExpression: 'ArrayExpression',\n      ArrayPattern: 'ArrayPattern',\n      ArrowFunctionExpression: 'ArrowFunctionExpression',\n      AwaitExpression: 'AwaitExpression',\n      // CAUTION: It's deferred to ES7.\n      BlockStatement: 'BlockStatement',\n      BinaryExpression: 'BinaryExpression',\n      BreakStatement: 'BreakStatement',\n      CallExpression: 'CallExpression',\n      CatchClause: 'CatchClause',\n      ChainExpression: 'ChainExpression',\n      ClassBody: 'ClassBody',\n      ClassDeclaration: 'ClassDeclaration',\n      ClassExpression: 'ClassExpression',\n      ComprehensionBlock: 'ComprehensionBlock',\n      // CAUTION: It's deferred to ES7.\n      ComprehensionExpression: 'ComprehensionExpression',\n      // CAUTION: It's deferred to ES7.\n      ConditionalExpression: 'ConditionalExpression',\n      ContinueStatement: 'ContinueStatement',\n      DebuggerStatement: 'DebuggerStatement',\n      DirectiveStatement: 'DirectiveStatement',\n      DoWhileStatement: 'DoWhileStatement',\n      EmptyStatement: 'EmptyStatement',\n      ExportAllDeclaration: 'ExportAllDeclaration',\n      ExportDefaultDeclaration: 'ExportDefaultDeclaration',\n      ExportNamedDeclaration: 'ExportNamedDeclaration',\n      ExportSpecifier: 'ExportSpecifier',\n      ExpressionStatement: 'ExpressionStatement',\n      ForStatement: 'ForStatement',\n      ForInStatement: 'ForInStatement',\n      ForOfStatement: 'ForOfStatement',\n      FunctionDeclaration: 'FunctionDeclaration',\n      FunctionExpression: 'FunctionExpression',\n      GeneratorExpression: 'GeneratorExpression',\n      // CAUTION: It's deferred to ES7.\n      Identifier: 'Identifier',\n      IfStatement: 'IfStatement',\n      ImportExpression: 'ImportExpression',\n      ImportDeclaration: 'ImportDeclaration',\n      ImportDefaultSpecifier: 'ImportDefaultSpecifier',\n      ImportNamespaceSpecifier: 'ImportNamespaceSpecifier',\n      ImportSpecifier: 'ImportSpecifier',\n      Literal: 'Literal',\n      LabeledStatement: 'LabeledStatement',\n      LogicalExpression: 'LogicalExpression',\n      MemberExpression: 'MemberExpression',\n      MetaProperty: 'MetaProperty',\n      MethodDefinition: 'MethodDefinition',\n      ModuleSpecifier: 'ModuleSpecifier',\n      NewExpression: 'NewExpression',\n      ObjectExpression: 'ObjectExpression',\n      ObjectPattern: 'ObjectPattern',\n      Program: 'Program',\n      Property: 'Property',\n      RestElement: 'RestElement',\n      ReturnStatement: 'ReturnStatement',\n      SequenceExpression: 'SequenceExpression',\n      SpreadElement: 'SpreadElement',\n      Super: 'Super',\n      SwitchStatement: 'SwitchStatement',\n      SwitchCase: 'SwitchCase',\n      TaggedTemplateExpression: 'TaggedTemplateExpression',\n      TemplateElement: 'TemplateElement',\n      TemplateLiteral: 'TemplateLiteral',\n      ThisExpression: 'ThisExpression',\n      ThrowStatement: 'ThrowStatement',\n      TryStatement: 'TryStatement',\n      UnaryExpression: 'UnaryExpression',\n      UpdateExpression: 'UpdateExpression',\n      VariableDeclaration: 'VariableDeclaration',\n      VariableDeclarator: 'VariableDeclarator',\n      WhileStatement: 'WhileStatement',\n      WithStatement: 'WithStatement',\n      YieldExpression: 'YieldExpression'\n    };\n    VisitorKeys = {\n      AssignmentExpression: ['left', 'right'],\n      AssignmentPattern: ['left', 'right'],\n      ArrayExpression: ['elements'],\n      ArrayPattern: ['elements'],\n      ArrowFunctionExpression: ['params', 'body'],\n      AwaitExpression: ['argument'],\n      // CAUTION: It's deferred to ES7.\n      BlockStatement: ['body'],\n      BinaryExpression: ['left', 'right'],\n      BreakStatement: ['label'],\n      CallExpression: ['callee', 'arguments'],\n      CatchClause: ['param', 'body'],\n      ChainExpression: ['expression'],\n      ClassBody: ['body'],\n      ClassDeclaration: ['id', 'superClass', 'body'],\n      ClassExpression: ['id', 'superClass', 'body'],\n      ComprehensionBlock: ['left', 'right'],\n      // CAUTION: It's deferred to ES7.\n      ComprehensionExpression: ['blocks', 'filter', 'body'],\n      // CAUTION: It's deferred to ES7.\n      ConditionalExpression: ['test', 'consequent', 'alternate'],\n      ContinueStatement: ['label'],\n      DebuggerStatement: [],\n      DirectiveStatement: [],\n      DoWhileStatement: ['body', 'test'],\n      EmptyStatement: [],\n      ExportAllDeclaration: ['source'],\n      ExportDefaultDeclaration: ['declaration'],\n      ExportNamedDeclaration: ['declaration', 'specifiers', 'source'],\n      ExportSpecifier: ['exported', 'local'],\n      ExpressionStatement: ['expression'],\n      ForStatement: ['init', 'test', 'update', 'body'],\n      ForInStatement: ['left', 'right', 'body'],\n      ForOfStatement: ['left', 'right', 'body'],\n      FunctionDeclaration: ['id', 'params', 'body'],\n      FunctionExpression: ['id', 'params', 'body'],\n      GeneratorExpression: ['blocks', 'filter', 'body'],\n      // CAUTION: It's deferred to ES7.\n      Identifier: [],\n      IfStatement: ['test', 'consequent', 'alternate'],\n      ImportExpression: ['source'],\n      ImportDeclaration: ['specifiers', 'source'],\n      ImportDefaultSpecifier: ['local'],\n      ImportNamespaceSpecifier: ['local'],\n      ImportSpecifier: ['imported', 'local'],\n      Literal: [],\n      LabeledStatement: ['label', 'body'],\n      LogicalExpression: ['left', 'right'],\n      MemberExpression: ['object', 'property'],\n      MetaProperty: ['meta', 'property'],\n      MethodDefinition: ['key', 'value'],\n      ModuleSpecifier: [],\n      NewExpression: ['callee', 'arguments'],\n      ObjectExpression: ['properties'],\n      ObjectPattern: ['properties'],\n      Program: ['body'],\n      Property: ['key', 'value'],\n      RestElement: ['argument'],\n      ReturnStatement: ['argument'],\n      SequenceExpression: ['expressions'],\n      SpreadElement: ['argument'],\n      Super: [],\n      SwitchStatement: ['discriminant', 'cases'],\n      SwitchCase: ['test', 'consequent'],\n      TaggedTemplateExpression: ['tag', 'quasi'],\n      TemplateElement: [],\n      TemplateLiteral: ['quasis', 'expressions'],\n      ThisExpression: [],\n      ThrowStatement: ['argument'],\n      TryStatement: ['block', 'handler', 'finalizer'],\n      UnaryExpression: ['argument'],\n      UpdateExpression: ['argument'],\n      VariableDeclaration: ['declarations'],\n      VariableDeclarator: ['id', 'init'],\n      WhileStatement: ['test', 'body'],\n      WithStatement: ['object', 'body'],\n      YieldExpression: ['argument']\n    }; // unique id\n\n    BREAK = {};\n    SKIP = {};\n    REMOVE = {};\n    VisitorOption = {\n      Break: BREAK,\n      Skip: SKIP,\n      Remove: REMOVE\n    };\n\n    function Reference(parent, key) {\n      this.parent = parent;\n      this.key = key;\n    }\n\n    Reference.prototype.replace = function replace(node) {\n      this.parent[this.key] = node;\n    };\n\n    Reference.prototype.remove = function remove() {\n      if (Array.isArray(this.parent)) {\n        this.parent.splice(this.key, 1);\n        return true;\n      } else {\n        this.replace(null);\n        return false;\n      }\n    };\n\n    function Element(node, path, wrap, ref) {\n      this.node = node;\n      this.path = path;\n      this.wrap = wrap;\n      this.ref = ref;\n    }\n\n    function Controller() {} // API:\n    // return property path array from root to current node\n\n\n    Controller.prototype.path = function path() {\n      var i, iz, j, jz, result, element;\n\n      function addToPath(result, path) {\n        if (Array.isArray(path)) {\n          for (j = 0, jz = path.length; j < jz; ++j) {\n            result.push(path[j]);\n          }\n        } else {\n          result.push(path);\n        }\n      } // root node\n\n\n      if (!this.__current.path) {\n        return null;\n      } // first node is sentinel, second node is root element\n\n\n      result = [];\n\n      for (i = 2, iz = this.__leavelist.length; i < iz; ++i) {\n        element = this.__leavelist[i];\n        addToPath(result, element.path);\n      }\n\n      addToPath(result, this.__current.path);\n      return result;\n    }; // API:\n    // return type of current node\n\n\n    Controller.prototype.type = function () {\n      var node = this.current();\n      return node.type || this.__current.wrap;\n    }; // API:\n    // return array of parent elements\n\n\n    Controller.prototype.parents = function parents() {\n      var i, iz, result; // first node is sentinel\n\n      result = [];\n\n      for (i = 1, iz = this.__leavelist.length; i < iz; ++i) {\n        result.push(this.__leavelist[i].node);\n      }\n\n      return result;\n    }; // API:\n    // return current node\n\n\n    Controller.prototype.current = function current() {\n      return this.__current.node;\n    };\n\n    Controller.prototype.__execute = function __execute(callback, element) {\n      var previous, result;\n      result = undefined;\n      previous = this.__current;\n      this.__current = element;\n      this.__state = null;\n\n      if (callback) {\n        result = callback.call(this, element.node, this.__leavelist[this.__leavelist.length - 1].node);\n      }\n\n      this.__current = previous;\n      return result;\n    }; // API:\n    // notify control skip / break\n\n\n    Controller.prototype.notify = function notify(flag) {\n      this.__state = flag;\n    }; // API:\n    // skip child nodes of current node\n\n\n    Controller.prototype.skip = function () {\n      this.notify(SKIP);\n    }; // API:\n    // break traversals\n\n\n    Controller.prototype['break'] = function () {\n      this.notify(BREAK);\n    }; // API:\n    // remove node\n\n\n    Controller.prototype.remove = function () {\n      this.notify(REMOVE);\n    };\n\n    Controller.prototype.__initialize = function (root, visitor) {\n      this.visitor = visitor;\n      this.root = root;\n      this.__worklist = [];\n      this.__leavelist = [];\n      this.__current = null;\n      this.__state = null;\n      this.__fallback = null;\n\n      if (visitor.fallback === 'iteration') {\n        this.__fallback = Object.keys;\n      } else if (typeof visitor.fallback === 'function') {\n        this.__fallback = visitor.fallback;\n      }\n\n      this.__keys = VisitorKeys;\n\n      if (visitor.keys) {\n        this.__keys = Object.assign(Object.create(this.__keys), visitor.keys);\n      }\n    };\n\n    function isNode(node) {\n      if (node == null) {\n        return false;\n      }\n\n      return typeof node === 'object' && typeof node.type === 'string';\n    }\n\n    function isProperty(nodeType, key) {\n      return (nodeType === Syntax.ObjectExpression || nodeType === Syntax.ObjectPattern) && 'properties' === key;\n    }\n\n    function candidateExistsInLeaveList(leavelist, candidate) {\n      for (var i = leavelist.length - 1; i >= 0; --i) {\n        if (leavelist[i].node === candidate) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n\n    Controller.prototype.traverse = function traverse(root, visitor) {\n      var worklist, leavelist, element, node, nodeType, ret, key, current, current2, candidates, candidate, sentinel;\n\n      this.__initialize(root, visitor);\n\n      sentinel = {}; // reference\n\n      worklist = this.__worklist;\n      leavelist = this.__leavelist; // initialize\n\n      worklist.push(new Element(root, null, null, null));\n      leavelist.push(new Element(null, null, null, null));\n\n      while (worklist.length) {\n        element = worklist.pop();\n\n        if (element === sentinel) {\n          element = leavelist.pop();\n          ret = this.__execute(visitor.leave, element);\n\n          if (this.__state === BREAK || ret === BREAK) {\n            return;\n          }\n\n          continue;\n        }\n\n        if (element.node) {\n          ret = this.__execute(visitor.enter, element);\n\n          if (this.__state === BREAK || ret === BREAK) {\n            return;\n          }\n\n          worklist.push(sentinel);\n          leavelist.push(element);\n\n          if (this.__state === SKIP || ret === SKIP) {\n            continue;\n          }\n\n          node = element.node;\n          nodeType = node.type || element.wrap;\n          candidates = this.__keys[nodeType];\n\n          if (!candidates) {\n            if (this.__fallback) {\n              candidates = this.__fallback(node);\n            } else {\n              throw new Error('Unknown node type ' + nodeType + '.');\n            }\n          }\n\n          current = candidates.length;\n\n          while ((current -= 1) >= 0) {\n            key = candidates[current];\n            candidate = node[key];\n\n            if (!candidate) {\n              continue;\n            }\n\n            if (Array.isArray(candidate)) {\n              current2 = candidate.length;\n\n              while ((current2 -= 1) >= 0) {\n                if (!candidate[current2]) {\n                  continue;\n                }\n\n                if (candidateExistsInLeaveList(leavelist, candidate[current2])) {\n                  continue;\n                }\n\n                if (isProperty(nodeType, candidates[current])) {\n                  element = new Element(candidate[current2], [key, current2], 'Property', null);\n                } else if (isNode(candidate[current2])) {\n                  element = new Element(candidate[current2], [key, current2], null, null);\n                } else {\n                  continue;\n                }\n\n                worklist.push(element);\n              }\n            } else if (isNode(candidate)) {\n              if (candidateExistsInLeaveList(leavelist, candidate)) {\n                continue;\n              }\n\n              worklist.push(new Element(candidate, key, null, null));\n            }\n          }\n        }\n      }\n    };\n\n    Controller.prototype.replace = function replace(root, visitor) {\n      var worklist, leavelist, node, nodeType, target, element, current, current2, candidates, candidate, sentinel, outer, key;\n\n      function removeElem(element) {\n        var i, key, nextElem, parent;\n\n        if (element.ref.remove()) {\n          // When the reference is an element of an array.\n          key = element.ref.key;\n          parent = element.ref.parent; // If removed from array, then decrease following items' keys.\n\n          i = worklist.length;\n\n          while (i--) {\n            nextElem = worklist[i];\n\n            if (nextElem.ref && nextElem.ref.parent === parent) {\n              if (nextElem.ref.key < key) {\n                break;\n              }\n\n              --nextElem.ref.key;\n            }\n          }\n        }\n      }\n\n      this.__initialize(root, visitor);\n\n      sentinel = {}; // reference\n\n      worklist = this.__worklist;\n      leavelist = this.__leavelist; // initialize\n\n      outer = {\n        root: root\n      };\n      element = new Element(root, null, null, new Reference(outer, 'root'));\n      worklist.push(element);\n      leavelist.push(element);\n\n      while (worklist.length) {\n        element = worklist.pop();\n\n        if (element === sentinel) {\n          element = leavelist.pop();\n          target = this.__execute(visitor.leave, element); // node may be replaced with null,\n          // so distinguish between undefined and null in this place\n\n          if (target !== undefined && target !== BREAK && target !== SKIP && target !== REMOVE) {\n            // replace\n            element.ref.replace(target);\n          }\n\n          if (this.__state === REMOVE || target === REMOVE) {\n            removeElem(element);\n          }\n\n          if (this.__state === BREAK || target === BREAK) {\n            return outer.root;\n          }\n\n          continue;\n        }\n\n        target = this.__execute(visitor.enter, element); // node may be replaced with null,\n        // so distinguish between undefined and null in this place\n\n        if (target !== undefined && target !== BREAK && target !== SKIP && target !== REMOVE) {\n          // replace\n          element.ref.replace(target);\n          element.node = target;\n        }\n\n        if (this.__state === REMOVE || target === REMOVE) {\n          removeElem(element);\n          element.node = null;\n        }\n\n        if (this.__state === BREAK || target === BREAK) {\n          return outer.root;\n        } // node may be null\n\n\n        node = element.node;\n\n        if (!node) {\n          continue;\n        }\n\n        worklist.push(sentinel);\n        leavelist.push(element);\n\n        if (this.__state === SKIP || target === SKIP) {\n          continue;\n        }\n\n        nodeType = node.type || element.wrap;\n        candidates = this.__keys[nodeType];\n\n        if (!candidates) {\n          if (this.__fallback) {\n            candidates = this.__fallback(node);\n          } else {\n            throw new Error('Unknown node type ' + nodeType + '.');\n          }\n        }\n\n        current = candidates.length;\n\n        while ((current -= 1) >= 0) {\n          key = candidates[current];\n          candidate = node[key];\n\n          if (!candidate) {\n            continue;\n          }\n\n          if (Array.isArray(candidate)) {\n            current2 = candidate.length;\n\n            while ((current2 -= 1) >= 0) {\n              if (!candidate[current2]) {\n                continue;\n              }\n\n              if (isProperty(nodeType, candidates[current])) {\n                element = new Element(candidate[current2], [key, current2], 'Property', new Reference(candidate, current2));\n              } else if (isNode(candidate[current2])) {\n                element = new Element(candidate[current2], [key, current2], null, new Reference(candidate, current2));\n              } else {\n                continue;\n              }\n\n              worklist.push(element);\n            }\n          } else if (isNode(candidate)) {\n            worklist.push(new Element(candidate, key, null, new Reference(node, key)));\n          }\n        }\n      }\n\n      return outer.root;\n    };\n\n    function traverse(root, visitor) {\n      var controller = new Controller();\n      return controller.traverse(root, visitor);\n    }\n\n    function replace(root, visitor) {\n      var controller = new Controller();\n      return controller.replace(root, visitor);\n    }\n\n    function extendCommentRange(comment, tokens) {\n      var target;\n      target = upperBound(tokens, function search(token) {\n        return token.range[0] > comment.range[0];\n      });\n      comment.extendedRange = [comment.range[0], comment.range[1]];\n\n      if (target !== tokens.length) {\n        comment.extendedRange[1] = tokens[target].range[0];\n      }\n\n      target -= 1;\n\n      if (target >= 0) {\n        comment.extendedRange[0] = tokens[target].range[1];\n      }\n\n      return comment;\n    }\n\n    function attachComments(tree, providedComments, tokens) {\n      // At first, we should calculate extended comment ranges.\n      var comments = [],\n          comment,\n          len,\n          i,\n          cursor;\n\n      if (!tree.range) {\n        throw new Error('attachComments needs range information');\n      } // tokens array is empty, we attach comments to tree as 'leadingComments'\n\n\n      if (!tokens.length) {\n        if (providedComments.length) {\n          for (i = 0, len = providedComments.length; i < len; i += 1) {\n            comment = deepCopy(providedComments[i]);\n            comment.extendedRange = [0, tree.range[0]];\n            comments.push(comment);\n          }\n\n          tree.leadingComments = comments;\n        }\n\n        return tree;\n      }\n\n      for (i = 0, len = providedComments.length; i < len; i += 1) {\n        comments.push(extendCommentRange(deepCopy(providedComments[i]), tokens));\n      } // This is based on John Freeman's implementation.\n\n\n      cursor = 0;\n      traverse(tree, {\n        enter: function (node) {\n          var comment;\n\n          while (cursor < comments.length) {\n            comment = comments[cursor];\n\n            if (comment.extendedRange[1] > node.range[0]) {\n              break;\n            }\n\n            if (comment.extendedRange[1] === node.range[0]) {\n              if (!node.leadingComments) {\n                node.leadingComments = [];\n              }\n\n              node.leadingComments.push(comment);\n              comments.splice(cursor, 1);\n            } else {\n              cursor += 1;\n            }\n          } // already out of owned node\n\n\n          if (cursor === comments.length) {\n            return VisitorOption.Break;\n          }\n\n          if (comments[cursor].extendedRange[0] > node.range[1]) {\n            return VisitorOption.Skip;\n          }\n        }\n      });\n      cursor = 0;\n      traverse(tree, {\n        leave: function (node) {\n          var comment;\n\n          while (cursor < comments.length) {\n            comment = comments[cursor];\n\n            if (node.range[1] < comment.extendedRange[0]) {\n              break;\n            }\n\n            if (node.range[1] === comment.extendedRange[0]) {\n              if (!node.trailingComments) {\n                node.trailingComments = [];\n              }\n\n              node.trailingComments.push(comment);\n              comments.splice(cursor, 1);\n            } else {\n              cursor += 1;\n            }\n          } // already out of owned node\n\n\n          if (cursor === comments.length) {\n            return VisitorOption.Break;\n          }\n\n          if (comments[cursor].extendedRange[0] > node.range[1]) {\n            return VisitorOption.Skip;\n          }\n        }\n      });\n      return tree;\n    }\n\n    exports.Syntax = Syntax;\n    exports.traverse = traverse;\n    exports.replace = replace;\n    exports.attachComments = attachComments;\n    exports.VisitorKeys = VisitorKeys;\n    exports.VisitorOption = VisitorOption;\n    exports.Controller = Controller;\n\n    exports.cloneEnvironment = function () {\n      return clone({});\n    };\n\n    return exports;\n  })(exports);\n  /* vim: set sw=4 ts=4 et tw=80 : */\n\n});\nvar parser = createCommonjsModule(function (module) {\n  /*\n   * Generated by PEG.js 0.10.0.\n   *\n   * http://pegjs.org/\n   */\n  (function (root, factory) {\n    if (module.exports) {\n      module.exports = factory();\n    }\n  })(commonjsGlobal, function () {\n    function peg$subclass(child, parent) {\n      function ctor() {\n        this.constructor = child;\n      }\n\n      ctor.prototype = parent.prototype;\n      child.prototype = new ctor();\n    }\n\n    function peg$SyntaxError(message, expected, found, location) {\n      this.message = message;\n      this.expected = expected;\n      this.found = found;\n      this.location = location;\n      this.name = \"SyntaxError\";\n\n      if (typeof Error.captureStackTrace === \"function\") {\n        Error.captureStackTrace(this, peg$SyntaxError);\n      }\n    }\n\n    peg$subclass(peg$SyntaxError, Error);\n\n    peg$SyntaxError.buildMessage = function (expected, found) {\n      var DESCRIBE_EXPECTATION_FNS = {\n        literal: function literal(expectation) {\n          return \"\\\"\" + literalEscape(expectation.text) + \"\\\"\";\n        },\n        \"class\": function _class(expectation) {\n          var escapedParts = \"\",\n              i;\n\n          for (i = 0; i < expectation.parts.length; i++) {\n            escapedParts += expectation.parts[i] instanceof Array ? classEscape(expectation.parts[i][0]) + \"-\" + classEscape(expectation.parts[i][1]) : classEscape(expectation.parts[i]);\n          }\n\n          return \"[\" + (expectation.inverted ? \"^\" : \"\") + escapedParts + \"]\";\n        },\n        any: function any(expectation) {\n          return \"any character\";\n        },\n        end: function end(expectation) {\n          return \"end of input\";\n        },\n        other: function other(expectation) {\n          return expectation.description;\n        }\n      };\n\n      function hex(ch) {\n        return ch.charCodeAt(0).toString(16).toUpperCase();\n      }\n\n      function literalEscape(s) {\n        return s.replace(/\\\\/g, '\\\\\\\\').replace(/\"/g, '\\\\\"').replace(/\\0/g, '\\\\0').replace(/\\t/g, '\\\\t').replace(/\\n/g, '\\\\n').replace(/\\r/g, '\\\\r').replace(/[\\x00-\\x0F]/g, function (ch) {\n          return '\\\\x0' + hex(ch);\n        }).replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function (ch) {\n          return '\\\\x' + hex(ch);\n        });\n      }\n\n      function classEscape(s) {\n        return s.replace(/\\\\/g, '\\\\\\\\').replace(/\\]/g, '\\\\]').replace(/\\^/g, '\\\\^').replace(/-/g, '\\\\-').replace(/\\0/g, '\\\\0').replace(/\\t/g, '\\\\t').replace(/\\n/g, '\\\\n').replace(/\\r/g, '\\\\r').replace(/[\\x00-\\x0F]/g, function (ch) {\n          return '\\\\x0' + hex(ch);\n        }).replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function (ch) {\n          return '\\\\x' + hex(ch);\n        });\n      }\n\n      function describeExpectation(expectation) {\n        return DESCRIBE_EXPECTATION_FNS[expectation.type](expectation);\n      }\n\n      function describeExpected(expected) {\n        var descriptions = new Array(expected.length),\n            i,\n            j;\n\n        for (i = 0; i < expected.length; i++) {\n          descriptions[i] = describeExpectation(expected[i]);\n        }\n\n        descriptions.sort();\n\n        if (descriptions.length > 0) {\n          for (i = 1, j = 1; i < descriptions.length; i++) {\n            if (descriptions[i - 1] !== descriptions[i]) {\n              descriptions[j] = descriptions[i];\n              j++;\n            }\n          }\n\n          descriptions.length = j;\n        }\n\n        switch (descriptions.length) {\n          case 1:\n            return descriptions[0];\n\n          case 2:\n            return descriptions[0] + \" or \" + descriptions[1];\n\n          default:\n            return descriptions.slice(0, -1).join(\", \") + \", or \" + descriptions[descriptions.length - 1];\n        }\n      }\n\n      function describeFound(found) {\n        return found ? \"\\\"\" + literalEscape(found) + \"\\\"\" : \"end of input\";\n      }\n\n      return \"Expected \" + describeExpected(expected) + \" but \" + describeFound(found) + \" found.\";\n    };\n\n    function peg$parse(input, options) {\n      options = options !== void 0 ? options : {};\n\n      var peg$FAILED = {},\n          peg$startRuleFunctions = {\n        start: peg$parsestart\n      },\n          peg$startRuleFunction = peg$parsestart,\n          peg$c0 = function peg$c0(ss) {\n        return ss.length === 1 ? ss[0] : {\n          type: 'matches',\n          selectors: ss\n        };\n      },\n          peg$c1 = function peg$c1() {\n        return void 0;\n      },\n          peg$c2 = \" \",\n          peg$c3 = peg$literalExpectation(\" \", false),\n          peg$c4 = /^[^ [\\],():#!=><~+.]/,\n          peg$c5 = peg$classExpectation([\" \", \"[\", \"]\", \",\", \"(\", \")\", \":\", \"#\", \"!\", \"=\", \">\", \"<\", \"~\", \"+\", \".\"], true, false),\n          peg$c6 = function peg$c6(i) {\n        return i.join('');\n      },\n          peg$c7 = \">\",\n          peg$c8 = peg$literalExpectation(\">\", false),\n          peg$c9 = function peg$c9() {\n        return 'child';\n      },\n          peg$c10 = \"~\",\n          peg$c11 = peg$literalExpectation(\"~\", false),\n          peg$c12 = function peg$c12() {\n        return 'sibling';\n      },\n          peg$c13 = \"+\",\n          peg$c14 = peg$literalExpectation(\"+\", false),\n          peg$c15 = function peg$c15() {\n        return 'adjacent';\n      },\n          peg$c16 = function peg$c16() {\n        return 'descendant';\n      },\n          peg$c17 = \",\",\n          peg$c18 = peg$literalExpectation(\",\", false),\n          peg$c19 = function peg$c19(s, ss) {\n        return [s].concat(ss.map(function (s) {\n          return s[3];\n        }));\n      },\n          peg$c20 = function peg$c20(a, ops) {\n        return ops.reduce(function (memo, rhs) {\n          return {\n            type: rhs[0],\n            left: memo,\n            right: rhs[1]\n          };\n        }, a);\n      },\n          peg$c21 = \"!\",\n          peg$c22 = peg$literalExpectation(\"!\", false),\n          peg$c23 = function peg$c23(subject, as) {\n        var b = as.length === 1 ? as[0] : {\n          type: 'compound',\n          selectors: as\n        };\n        if (subject) b.subject = true;\n        return b;\n      },\n          peg$c24 = \"*\",\n          peg$c25 = peg$literalExpectation(\"*\", false),\n          peg$c26 = function peg$c26(a) {\n        return {\n          type: 'wildcard',\n          value: a\n        };\n      },\n          peg$c27 = \"#\",\n          peg$c28 = peg$literalExpectation(\"#\", false),\n          peg$c29 = function peg$c29(i) {\n        return {\n          type: 'identifier',\n          value: i\n        };\n      },\n          peg$c30 = \"[\",\n          peg$c31 = peg$literalExpectation(\"[\", false),\n          peg$c32 = \"]\",\n          peg$c33 = peg$literalExpectation(\"]\", false),\n          peg$c34 = function peg$c34(v) {\n        return v;\n      },\n          peg$c35 = /^[><!]/,\n          peg$c36 = peg$classExpectation([\">\", \"<\", \"!\"], false, false),\n          peg$c37 = \"=\",\n          peg$c38 = peg$literalExpectation(\"=\", false),\n          peg$c39 = function peg$c39(a) {\n        return (a || '') + '=';\n      },\n          peg$c40 = /^[><]/,\n          peg$c41 = peg$classExpectation([\">\", \"<\"], false, false),\n          peg$c42 = \".\",\n          peg$c43 = peg$literalExpectation(\".\", false),\n          peg$c44 = function peg$c44(a, as) {\n        return [].concat.apply([a], as).join('');\n      },\n          peg$c45 = function peg$c45(name, op, value) {\n        return {\n          type: 'attribute',\n          name: name,\n          operator: op,\n          value: value\n        };\n      },\n          peg$c46 = function peg$c46(name) {\n        return {\n          type: 'attribute',\n          name: name\n        };\n      },\n          peg$c47 = \"\\\"\",\n          peg$c48 = peg$literalExpectation(\"\\\"\", false),\n          peg$c49 = /^[^\\\\\"]/,\n          peg$c50 = peg$classExpectation([\"\\\\\", \"\\\"\"], true, false),\n          peg$c51 = \"\\\\\",\n          peg$c52 = peg$literalExpectation(\"\\\\\", false),\n          peg$c53 = peg$anyExpectation(),\n          peg$c54 = function peg$c54(a, b) {\n        return a + b;\n      },\n          peg$c55 = function peg$c55(d) {\n        return {\n          type: 'literal',\n          value: strUnescape(d.join(''))\n        };\n      },\n          peg$c56 = \"'\",\n          peg$c57 = peg$literalExpectation(\"'\", false),\n          peg$c58 = /^[^\\\\']/,\n          peg$c59 = peg$classExpectation([\"\\\\\", \"'\"], true, false),\n          peg$c60 = /^[0-9]/,\n          peg$c61 = peg$classExpectation([[\"0\", \"9\"]], false, false),\n          peg$c62 = function peg$c62(a, b) {\n        // Can use `a.flat().join('')` once supported\n        var leadingDecimals = a ? [].concat.apply([], a).join('') : '';\n        return {\n          type: 'literal',\n          value: parseFloat(leadingDecimals + b.join(''))\n        };\n      },\n          peg$c63 = function peg$c63(i) {\n        return {\n          type: 'literal',\n          value: i\n        };\n      },\n          peg$c64 = \"type(\",\n          peg$c65 = peg$literalExpectation(\"type(\", false),\n          peg$c66 = /^[^ )]/,\n          peg$c67 = peg$classExpectation([\" \", \")\"], true, false),\n          peg$c68 = \")\",\n          peg$c69 = peg$literalExpectation(\")\", false),\n          peg$c70 = function peg$c70(t) {\n        return {\n          type: 'type',\n          value: t.join('')\n        };\n      },\n          peg$c71 = /^[imsu]/,\n          peg$c72 = peg$classExpectation([\"i\", \"m\", \"s\", \"u\"], false, false),\n          peg$c73 = \"/\",\n          peg$c74 = peg$literalExpectation(\"/\", false),\n          peg$c75 = /^[^\\/]/,\n          peg$c76 = peg$classExpectation([\"/\"], true, false),\n          peg$c77 = function peg$c77(d, flgs) {\n        return {\n          type: 'regexp',\n          value: new RegExp(d.join(''), flgs ? flgs.join('') : '')\n        };\n      },\n          peg$c78 = function peg$c78(i, is) {\n        return {\n          type: 'field',\n          name: is.reduce(function (memo, p) {\n            return memo + p[0] + p[1];\n          }, i)\n        };\n      },\n          peg$c79 = \":not(\",\n          peg$c80 = peg$literalExpectation(\":not(\", false),\n          peg$c81 = function peg$c81(ss) {\n        return {\n          type: 'not',\n          selectors: ss\n        };\n      },\n          peg$c82 = \":matches(\",\n          peg$c83 = peg$literalExpectation(\":matches(\", false),\n          peg$c84 = function peg$c84(ss) {\n        return {\n          type: 'matches',\n          selectors: ss\n        };\n      },\n          peg$c85 = \":has(\",\n          peg$c86 = peg$literalExpectation(\":has(\", false),\n          peg$c87 = function peg$c87(ss) {\n        return {\n          type: 'has',\n          selectors: ss\n        };\n      },\n          peg$c88 = \":first-child\",\n          peg$c89 = peg$literalExpectation(\":first-child\", false),\n          peg$c90 = function peg$c90() {\n        return nth(1);\n      },\n          peg$c91 = \":last-child\",\n          peg$c92 = peg$literalExpectation(\":last-child\", false),\n          peg$c93 = function peg$c93() {\n        return nthLast(1);\n      },\n          peg$c94 = \":nth-child(\",\n          peg$c95 = peg$literalExpectation(\":nth-child(\", false),\n          peg$c96 = function peg$c96(n) {\n        return nth(parseInt(n.join(''), 10));\n      },\n          peg$c97 = \":nth-last-child(\",\n          peg$c98 = peg$literalExpectation(\":nth-last-child(\", false),\n          peg$c99 = function peg$c99(n) {\n        return nthLast(parseInt(n.join(''), 10));\n      },\n          peg$c100 = \":\",\n          peg$c101 = peg$literalExpectation(\":\", false),\n          peg$c102 = \"statement\",\n          peg$c103 = peg$literalExpectation(\"statement\", true),\n          peg$c104 = \"expression\",\n          peg$c105 = peg$literalExpectation(\"expression\", true),\n          peg$c106 = \"declaration\",\n          peg$c107 = peg$literalExpectation(\"declaration\", true),\n          peg$c108 = \"function\",\n          peg$c109 = peg$literalExpectation(\"function\", true),\n          peg$c110 = \"pattern\",\n          peg$c111 = peg$literalExpectation(\"pattern\", true),\n          peg$c112 = function peg$c112(c) {\n        return {\n          type: 'class',\n          name: c\n        };\n      },\n          peg$currPos = 0,\n          peg$posDetailsCache = [{\n        line: 1,\n        column: 1\n      }],\n          peg$maxFailPos = 0,\n          peg$maxFailExpected = [],\n          peg$resultsCache = {},\n          peg$result;\n\n      if (\"startRule\" in options) {\n        if (!(options.startRule in peg$startRuleFunctions)) {\n          throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n        }\n\n        peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n      }\n\n      function peg$literalExpectation(text, ignoreCase) {\n        return {\n          type: \"literal\",\n          text: text,\n          ignoreCase: ignoreCase\n        };\n      }\n\n      function peg$classExpectation(parts, inverted, ignoreCase) {\n        return {\n          type: \"class\",\n          parts: parts,\n          inverted: inverted,\n          ignoreCase: ignoreCase\n        };\n      }\n\n      function peg$anyExpectation() {\n        return {\n          type: \"any\"\n        };\n      }\n\n      function peg$endExpectation() {\n        return {\n          type: \"end\"\n        };\n      }\n\n      function peg$computePosDetails(pos) {\n        var details = peg$posDetailsCache[pos],\n            p;\n\n        if (details) {\n          return details;\n        } else {\n          p = pos - 1;\n\n          while (!peg$posDetailsCache[p]) {\n            p--;\n          }\n\n          details = peg$posDetailsCache[p];\n          details = {\n            line: details.line,\n            column: details.column\n          };\n\n          while (p < pos) {\n            if (input.charCodeAt(p) === 10) {\n              details.line++;\n              details.column = 1;\n            } else {\n              details.column++;\n            }\n\n            p++;\n          }\n\n          peg$posDetailsCache[pos] = details;\n          return details;\n        }\n      }\n\n      function peg$computeLocation(startPos, endPos) {\n        var startPosDetails = peg$computePosDetails(startPos),\n            endPosDetails = peg$computePosDetails(endPos);\n        return {\n          start: {\n            offset: startPos,\n            line: startPosDetails.line,\n            column: startPosDetails.column\n          },\n          end: {\n            offset: endPos,\n            line: endPosDetails.line,\n            column: endPosDetails.column\n          }\n        };\n      }\n\n      function peg$fail(expected) {\n        if (peg$currPos < peg$maxFailPos) {\n          return;\n        }\n\n        if (peg$currPos > peg$maxFailPos) {\n          peg$maxFailPos = peg$currPos;\n          peg$maxFailExpected = [];\n        }\n\n        peg$maxFailExpected.push(expected);\n      }\n\n      function peg$buildStructuredError(expected, found, location) {\n        return new peg$SyntaxError(peg$SyntaxError.buildMessage(expected, found), expected, found, location);\n      }\n\n      function peg$parsestart() {\n        var s0, s1, s2, s3;\n        var key = peg$currPos * 30 + 0,\n            cached = peg$resultsCache[key];\n\n        if (cached) {\n          peg$currPos = cached.nextPos;\n          return cached.result;\n        }\n\n        s0 = peg$currPos;\n        s1 = peg$parse_();\n\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parseselectors();\n\n          if (s2 !== peg$FAILED) {\n            s3 = peg$parse_();\n\n            if (s3 !== peg$FAILED) {\n              s1 = peg$c0(s2);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          s1 = peg$parse_();\n\n          if (s1 !== peg$FAILED) {\n            s1 = peg$c1();\n          }\n\n          s0 = s1;\n        }\n\n        peg$resultsCache[key] = {\n          nextPos: peg$currPos,\n          result: s0\n        };\n        return s0;\n      }\n\n      function peg$parse_() {\n        var s0, s1;\n        var key = peg$currPos * 30 + 1,\n            cached = peg$resultsCache[key];\n\n        if (cached) {\n          peg$currPos = cached.nextPos;\n          return cached.result;\n        }\n\n        s0 = [];\n\n        if (input.charCodeAt(peg$currPos) === 32) {\n          s1 = peg$c2;\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          {\n            peg$fail(peg$c3);\n          }\n        }\n\n        while (s1 !== peg$FAILED) {\n          s0.push(s1);\n\n          if (input.charCodeAt(peg$currPos) === 32) {\n            s1 = peg$c2;\n            peg$currPos++;\n          } else {\n            s1 = peg$FAILED;\n            {\n              peg$fail(peg$c3);\n            }\n          }\n        }\n\n        peg$resultsCache[key] = {\n          nextPos: peg$currPos,\n          result: s0\n        };\n        return s0;\n      }\n\n      function peg$parseidentifierName() {\n        var s0, s1, s2;\n        var key = peg$currPos * 30 + 2,\n            cached = peg$resultsCache[key];\n\n        if (cached) {\n          peg$currPos = cached.nextPos;\n          return cached.result;\n        }\n\n        s0 = peg$currPos;\n        s1 = [];\n\n        if (peg$c4.test(input.charAt(peg$currPos))) {\n          s2 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          {\n            peg$fail(peg$c5);\n          }\n        }\n\n        if (s2 !== peg$FAILED) {\n          while (s2 !== peg$FAILED) {\n            s1.push(s2);\n\n            if (peg$c4.test(input.charAt(peg$currPos))) {\n              s2 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s2 = peg$FAILED;\n              {\n                peg$fail(peg$c5);\n              }\n            }\n          }\n        } else {\n          s1 = peg$FAILED;\n        }\n\n        if (s1 !== peg$FAILED) {\n          s1 = peg$c6(s1);\n        }\n\n        s0 = s1;\n        peg$resultsCache[key] = {\n          nextPos: peg$currPos,\n          result: s0\n        };\n        return s0;\n      }\n\n      function peg$parsebinaryOp() {\n        var s0, s1, s2, s3;\n        var key = peg$currPos * 30 + 3,\n            cached = peg$resultsCache[key];\n\n        if (cached) {\n          peg$currPos = cached.nextPos;\n          return cached.result;\n        }\n\n        s0 = peg$currPos;\n        s1 = peg$parse_();\n\n        if (s1 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 62) {\n            s2 = peg$c7;\n            peg$currPos++;\n          } else {\n            s2 = peg$FAILED;\n            {\n              peg$fail(peg$c8);\n            }\n          }\n\n          if (s2 !== peg$FAILED) {\n            s3 = peg$parse_();\n\n            if (s3 !== peg$FAILED) {\n              s1 = peg$c9();\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          s1 = peg$parse_();\n\n          if (s1 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 126) {\n              s2 = peg$c10;\n              peg$currPos++;\n            } else {\n              s2 = peg$FAILED;\n              {\n                peg$fail(peg$c11);\n              }\n            }\n\n            if (s2 !== peg$FAILED) {\n              s3 = peg$parse_();\n\n              if (s3 !== peg$FAILED) {\n                s1 = peg$c12();\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n\n          if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            s1 = peg$parse_();\n\n            if (s1 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 43) {\n                s2 = peg$c13;\n                peg$currPos++;\n              } else {\n                s2 = peg$FAILED;\n                {\n                  peg$fail(peg$c14);\n                }\n              }\n\n              if (s2 !== peg$FAILED) {\n                s3 = peg$parse_();\n\n                if (s3 !== peg$FAILED) {\n                  s1 = peg$c15();\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n\n            if (s0 === peg$FAILED) {\n              s0 = peg$currPos;\n\n              if (input.charCodeAt(peg$currPos) === 32) {\n                s1 = peg$c2;\n                peg$currPos++;\n              } else {\n                s1 = peg$FAILED;\n                {\n                  peg$fail(peg$c3);\n                }\n              }\n\n              if (s1 !== peg$FAILED) {\n                s2 = peg$parse_();\n\n                if (s2 !== peg$FAILED) {\n                  s1 = peg$c16();\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            }\n          }\n        }\n\n        peg$resultsCache[key] = {\n          nextPos: peg$currPos,\n          result: s0\n        };\n        return s0;\n      }\n\n      function peg$parseselectors() {\n        var s0, s1, s2, s3, s4, s5, s6, s7;\n        var key = peg$currPos * 30 + 4,\n            cached = peg$resultsCache[key];\n\n        if (cached) {\n          peg$currPos = cached.nextPos;\n          return cached.result;\n        }\n\n        s0 = peg$currPos;\n        s1 = peg$parseselector();\n\n        if (s1 !== peg$FAILED) {\n          s2 = [];\n          s3 = peg$currPos;\n          s4 = peg$parse_();\n\n          if (s4 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 44) {\n              s5 = peg$c17;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              {\n                peg$fail(peg$c18);\n              }\n            }\n\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parse_();\n\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parseselector();\n\n                if (s7 !== peg$FAILED) {\n                  s4 = [s4, s5, s6, s7];\n                  s3 = s4;\n                } else {\n                  peg$currPos = s3;\n                  s3 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n\n          while (s3 !== peg$FAILED) {\n            s2.push(s3);\n            s3 = peg$currPos;\n            s4 = peg$parse_();\n\n            if (s4 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 44) {\n                s5 = peg$c17;\n                peg$currPos++;\n              } else {\n                s5 = peg$FAILED;\n                {\n                  peg$fail(peg$c18);\n                }\n              }\n\n              if (s5 !== peg$FAILED) {\n                s6 = peg$parse_();\n\n                if (s6 !== peg$FAILED) {\n                  s7 = peg$parseselector();\n\n                  if (s7 !== peg$FAILED) {\n                    s4 = [s4, s5, s6, s7];\n                    s3 = s4;\n                  } else {\n                    peg$currPos = s3;\n                    s3 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s3;\n                  s3 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          }\n\n          if (s2 !== peg$FAILED) {\n            s1 = peg$c19(s1, s2);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n\n        peg$resultsCache[key] = {\n          nextPos: peg$currPos,\n          result: s0\n        };\n        return s0;\n      }\n\n      function peg$parseselector() {\n        var s0, s1, s2, s3, s4, s5;\n        var key = peg$currPos * 30 + 5,\n            cached = peg$resultsCache[key];\n\n        if (cached) {\n          peg$currPos = cached.nextPos;\n          return cached.result;\n        }\n\n        s0 = peg$currPos;\n        s1 = peg$parsesequence();\n\n        if (s1 !== peg$FAILED) {\n          s2 = [];\n          s3 = peg$currPos;\n          s4 = peg$parsebinaryOp();\n\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parsesequence();\n\n            if (s5 !== peg$FAILED) {\n              s4 = [s4, s5];\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n\n          while (s3 !== peg$FAILED) {\n            s2.push(s3);\n            s3 = peg$currPos;\n            s4 = peg$parsebinaryOp();\n\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parsesequence();\n\n              if (s5 !== peg$FAILED) {\n                s4 = [s4, s5];\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          }\n\n          if (s2 !== peg$FAILED) {\n            s1 = peg$c20(s1, s2);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n\n        peg$resultsCache[key] = {\n          nextPos: peg$currPos,\n          result: s0\n        };\n        return s0;\n      }\n\n      function peg$parsesequence() {\n        var s0, s1, s2, s3;\n        var key = peg$currPos * 30 + 6,\n            cached = peg$resultsCache[key];\n\n        if (cached) {\n          peg$currPos = cached.nextPos;\n          return cached.result;\n        }\n\n        s0 = peg$currPos;\n\n        if (input.charCodeAt(peg$currPos) === 33) {\n          s1 = peg$c21;\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          {\n            peg$fail(peg$c22);\n          }\n        }\n\n        if (s1 === peg$FAILED) {\n          s1 = null;\n        }\n\n        if (s1 !== peg$FAILED) {\n          s2 = [];\n          s3 = peg$parseatom();\n\n          if (s3 !== peg$FAILED) {\n            while (s3 !== peg$FAILED) {\n              s2.push(s3);\n              s3 = peg$parseatom();\n            }\n          } else {\n            s2 = peg$FAILED;\n          }\n\n          if (s2 !== peg$FAILED) {\n            s1 = peg$c23(s1, s2);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n\n        peg$resultsCache[key] = {\n          nextPos: peg$currPos,\n          result: s0\n        };\n        return s0;\n      }\n\n      function peg$parseatom() {\n        var s0;\n        var key = peg$currPos * 30 + 7,\n            cached = peg$resultsCache[key];\n\n        if (cached) {\n          peg$currPos = cached.nextPos;\n          return cached.result;\n        }\n\n        s0 = peg$parsewildcard();\n\n        if (s0 === peg$FAILED) {\n          s0 = peg$parseidentifier();\n\n          if (s0 === peg$FAILED) {\n            s0 = peg$parseattr();\n\n            if (s0 === peg$FAILED) {\n              s0 = peg$parsefield();\n\n              if (s0 === peg$FAILED) {\n                s0 = peg$parsenegation();\n\n                if (s0 === peg$FAILED) {\n                  s0 = peg$parsematches();\n\n                  if (s0 === peg$FAILED) {\n                    s0 = peg$parsehas();\n\n                    if (s0 === peg$FAILED) {\n                      s0 = peg$parsefirstChild();\n\n                      if (s0 === peg$FAILED) {\n                        s0 = peg$parselastChild();\n\n                        if (s0 === peg$FAILED) {\n                          s0 = peg$parsenthChild();\n\n                          if (s0 === peg$FAILED) {\n                            s0 = peg$parsenthLastChild();\n\n                            if (s0 === peg$FAILED) {\n                              s0 = peg$parseclass();\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n\n        peg$resultsCache[key] = {\n          nextPos: peg$currPos,\n          result: s0\n        };\n        return s0;\n      }\n\n      function peg$parsewildcard() {\n        var s0, s1;\n        var key = peg$currPos * 30 + 8,\n            cached = peg$resultsCache[key];\n\n        if (cached) {\n          peg$currPos = cached.nextPos;\n          return cached.result;\n        }\n\n        s0 = peg$currPos;\n\n        if (input.charCodeAt(peg$currPos) === 42) {\n          s1 = peg$c24;\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          {\n            peg$fail(peg$c25);\n          }\n        }\n\n        if (s1 !== peg$FAILED) {\n          s1 = peg$c26(s1);\n        }\n\n        s0 = s1;\n        peg$resultsCache[key] = {\n          nextPos: peg$currPos,\n          result: s0\n        };\n        return s0;\n      }\n\n      function peg$parseidentifier() {\n        var s0, s1, s2;\n        var key = peg$currPos * 30 + 9,\n            cached = peg$resultsCache[key];\n\n        if (cached) {\n          peg$currPos = cached.nextPos;\n          return cached.result;\n        }\n\n        s0 = peg$currPos;\n\n        if (input.charCodeAt(peg$currPos) === 35) {\n          s1 = peg$c27;\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          {\n            peg$fail(peg$c28);\n          }\n        }\n\n        if (s1 === peg$FAILED) {\n          s1 = null;\n        }\n\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parseidentifierName();\n\n          if (s2 !== peg$FAILED) {\n            s1 = peg$c29(s2);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n\n        peg$resultsCache[key] = {\n          nextPos: peg$currPos,\n          result: s0\n        };\n        return s0;\n      }\n\n      function peg$parseattr() {\n        var s0, s1, s2, s3, s4, s5;\n        var key = peg$currPos * 30 + 10,\n            cached = peg$resultsCache[key];\n\n        if (cached) {\n          peg$currPos = cached.nextPos;\n          return cached.result;\n        }\n\n        s0 = peg$currPos;\n\n        if (input.charCodeAt(peg$currPos) === 91) {\n          s1 = peg$c30;\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          {\n            peg$fail(peg$c31);\n          }\n        }\n\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parse_();\n\n          if (s2 !== peg$FAILED) {\n            s3 = peg$parseattrValue();\n\n            if (s3 !== peg$FAILED) {\n              s4 = peg$parse_();\n\n              if (s4 !== peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 93) {\n                  s5 = peg$c32;\n                  peg$currPos++;\n                } else {\n                  s5 = peg$FAILED;\n                  {\n                    peg$fail(peg$c33);\n                  }\n                }\n\n                if (s5 !== peg$FAILED) {\n                  s1 = peg$c34(s3);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n\n        peg$resultsCache[key] = {\n          nextPos: peg$currPos,\n          result: s0\n        };\n        return s0;\n      }\n\n      function peg$parseattrOps() {\n        var s0, s1, s2;\n        var key = peg$currPos * 30 + 11,\n            cached = peg$resultsCache[key];\n\n        if (cached) {\n          peg$currPos = cached.nextPos;\n          return cached.result;\n        }\n\n        s0 = peg$currPos;\n\n        if (peg$c35.test(input.charAt(peg$currPos))) {\n          s1 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          {\n            peg$fail(peg$c36);\n          }\n        }\n\n        if (s1 === peg$FAILED) {\n          s1 = null;\n        }\n\n        if (s1 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 61) {\n            s2 = peg$c37;\n            peg$currPos++;\n          } else {\n            s2 = peg$FAILED;\n            {\n              peg$fail(peg$c38);\n            }\n          }\n\n          if (s2 !== peg$FAILED) {\n            s1 = peg$c39(s1);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n\n        if (s0 === peg$FAILED) {\n          if (peg$c40.test(input.charAt(peg$currPos))) {\n            s0 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s0 = peg$FAILED;\n            {\n              peg$fail(peg$c41);\n            }\n          }\n        }\n\n        peg$resultsCache[key] = {\n          nextPos: peg$currPos,\n          result: s0\n        };\n        return s0;\n      }\n\n      function peg$parseattrEqOps() {\n        var s0, s1, s2;\n        var key = peg$currPos * 30 + 12,\n            cached = peg$resultsCache[key];\n\n        if (cached) {\n          peg$currPos = cached.nextPos;\n          return cached.result;\n        }\n\n        s0 = peg$currPos;\n\n        if (input.charCodeAt(peg$currPos) === 33) {\n          s1 = peg$c21;\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          {\n            peg$fail(peg$c22);\n          }\n        }\n\n        if (s1 === peg$FAILED) {\n          s1 = null;\n        }\n\n        if (s1 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 61) {\n            s2 = peg$c37;\n            peg$currPos++;\n          } else {\n            s2 = peg$FAILED;\n            {\n              peg$fail(peg$c38);\n            }\n          }\n\n          if (s2 !== peg$FAILED) {\n            s1 = peg$c39(s1);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n\n        peg$resultsCache[key] = {\n          nextPos: peg$currPos,\n          result: s0\n        };\n        return s0;\n      }\n\n      function peg$parseattrName() {\n        var s0, s1, s2, s3, s4, s5;\n        var key = peg$currPos * 30 + 13,\n            cached = peg$resultsCache[key];\n\n        if (cached) {\n          peg$currPos = cached.nextPos;\n          return cached.result;\n        }\n\n        s0 = peg$currPos;\n        s1 = peg$parseidentifierName();\n\n        if (s1 !== peg$FAILED) {\n          s2 = [];\n          s3 = peg$currPos;\n\n          if (input.charCodeAt(peg$currPos) === 46) {\n            s4 = peg$c42;\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            {\n              peg$fail(peg$c43);\n            }\n          }\n\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parseidentifierName();\n\n            if (s5 !== peg$FAILED) {\n              s4 = [s4, s5];\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n\n          while (s3 !== peg$FAILED) {\n            s2.push(s3);\n            s3 = peg$currPos;\n\n            if (input.charCodeAt(peg$currPos) === 46) {\n              s4 = peg$c42;\n              peg$currPos++;\n            } else {\n              s4 = peg$FAILED;\n              {\n                peg$fail(peg$c43);\n              }\n            }\n\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parseidentifierName();\n\n              if (s5 !== peg$FAILED) {\n                s4 = [s4, s5];\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          }\n\n          if (s2 !== peg$FAILED) {\n            s1 = peg$c44(s1, s2);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n\n        peg$resultsCache[key] = {\n          nextPos: peg$currPos,\n          result: s0\n        };\n        return s0;\n      }\n\n      function peg$parseattrValue() {\n        var s0, s1, s2, s3, s4, s5;\n        var key = peg$currPos * 30 + 14,\n            cached = peg$resultsCache[key];\n\n        if (cached) {\n          peg$currPos = cached.nextPos;\n          return cached.result;\n        }\n\n        s0 = peg$currPos;\n        s1 = peg$parseattrName();\n\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parse_();\n\n          if (s2 !== peg$FAILED) {\n            s3 = peg$parseattrEqOps();\n\n            if (s3 !== peg$FAILED) {\n              s4 = peg$parse_();\n\n              if (s4 !== peg$FAILED) {\n                s5 = peg$parsetype();\n\n                if (s5 === peg$FAILED) {\n                  s5 = peg$parseregex();\n                }\n\n                if (s5 !== peg$FAILED) {\n                  s1 = peg$c45(s1, s3, s5);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          s1 = peg$parseattrName();\n\n          if (s1 !== peg$FAILED) {\n            s2 = peg$parse_();\n\n            if (s2 !== peg$FAILED) {\n              s3 = peg$parseattrOps();\n\n              if (s3 !== peg$FAILED) {\n                s4 = peg$parse_();\n\n                if (s4 !== peg$FAILED) {\n                  s5 = peg$parsestring();\n\n                  if (s5 === peg$FAILED) {\n                    s5 = peg$parsenumber();\n\n                    if (s5 === peg$FAILED) {\n                      s5 = peg$parsepath();\n                    }\n                  }\n\n                  if (s5 !== peg$FAILED) {\n                    s1 = peg$c45(s1, s3, s5);\n                    s0 = s1;\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n\n          if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            s1 = peg$parseattrName();\n\n            if (s1 !== peg$FAILED) {\n              s1 = peg$c46(s1);\n            }\n\n            s0 = s1;\n          }\n        }\n\n        peg$resultsCache[key] = {\n          nextPos: peg$currPos,\n          result: s0\n        };\n        return s0;\n      }\n\n      function peg$parsestring() {\n        var s0, s1, s2, s3, s4, s5;\n        var key = peg$currPos * 30 + 15,\n            cached = peg$resultsCache[key];\n\n        if (cached) {\n          peg$currPos = cached.nextPos;\n          return cached.result;\n        }\n\n        s0 = peg$currPos;\n\n        if (input.charCodeAt(peg$currPos) === 34) {\n          s1 = peg$c47;\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          {\n            peg$fail(peg$c48);\n          }\n        }\n\n        if (s1 !== peg$FAILED) {\n          s2 = [];\n\n          if (peg$c49.test(input.charAt(peg$currPos))) {\n            s3 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            {\n              peg$fail(peg$c50);\n            }\n          }\n\n          if (s3 === peg$FAILED) {\n            s3 = peg$currPos;\n\n            if (input.charCodeAt(peg$currPos) === 92) {\n              s4 = peg$c51;\n              peg$currPos++;\n            } else {\n              s4 = peg$FAILED;\n              {\n                peg$fail(peg$c52);\n              }\n            }\n\n            if (s4 !== peg$FAILED) {\n              if (input.length > peg$currPos) {\n                s5 = input.charAt(peg$currPos);\n                peg$currPos++;\n              } else {\n                s5 = peg$FAILED;\n                {\n                  peg$fail(peg$c53);\n                }\n              }\n\n              if (s5 !== peg$FAILED) {\n                s4 = peg$c54(s4, s5);\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          }\n\n          while (s3 !== peg$FAILED) {\n            s2.push(s3);\n\n            if (peg$c49.test(input.charAt(peg$currPos))) {\n              s3 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s3 = peg$FAILED;\n              {\n                peg$fail(peg$c50);\n              }\n            }\n\n            if (s3 === peg$FAILED) {\n              s3 = peg$currPos;\n\n              if (input.charCodeAt(peg$currPos) === 92) {\n                s4 = peg$c51;\n                peg$currPos++;\n              } else {\n                s4 = peg$FAILED;\n                {\n                  peg$fail(peg$c52);\n                }\n              }\n\n              if (s4 !== peg$FAILED) {\n                if (input.length > peg$currPos) {\n                  s5 = input.charAt(peg$currPos);\n                  peg$currPos++;\n                } else {\n                  s5 = peg$FAILED;\n                  {\n                    peg$fail(peg$c53);\n                  }\n                }\n\n                if (s5 !== peg$FAILED) {\n                  s4 = peg$c54(s4, s5);\n                  s3 = s4;\n                } else {\n                  peg$currPos = s3;\n                  s3 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            }\n          }\n\n          if (s2 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 34) {\n              s3 = peg$c47;\n              peg$currPos++;\n            } else {\n              s3 = peg$FAILED;\n              {\n                peg$fail(peg$c48);\n              }\n            }\n\n            if (s3 !== peg$FAILED) {\n              s1 = peg$c55(s2);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n\n          if (input.charCodeAt(peg$currPos) === 39) {\n            s1 = peg$c56;\n            peg$currPos++;\n          } else {\n            s1 = peg$FAILED;\n            {\n              peg$fail(peg$c57);\n            }\n          }\n\n          if (s1 !== peg$FAILED) {\n            s2 = [];\n\n            if (peg$c58.test(input.charAt(peg$currPos))) {\n              s3 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s3 = peg$FAILED;\n              {\n                peg$fail(peg$c59);\n              }\n            }\n\n            if (s3 === peg$FAILED) {\n              s3 = peg$currPos;\n\n              if (input.charCodeAt(peg$currPos) === 92) {\n                s4 = peg$c51;\n                peg$currPos++;\n              } else {\n                s4 = peg$FAILED;\n                {\n                  peg$fail(peg$c52);\n                }\n              }\n\n              if (s4 !== peg$FAILED) {\n                if (input.length > peg$currPos) {\n                  s5 = input.charAt(peg$currPos);\n                  peg$currPos++;\n                } else {\n                  s5 = peg$FAILED;\n                  {\n                    peg$fail(peg$c53);\n                  }\n                }\n\n                if (s5 !== peg$FAILED) {\n                  s4 = peg$c54(s4, s5);\n                  s3 = s4;\n                } else {\n                  peg$currPos = s3;\n                  s3 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            }\n\n            while (s3 !== peg$FAILED) {\n              s2.push(s3);\n\n              if (peg$c58.test(input.charAt(peg$currPos))) {\n                s3 = input.charAt(peg$currPos);\n                peg$currPos++;\n              } else {\n                s3 = peg$FAILED;\n                {\n                  peg$fail(peg$c59);\n                }\n              }\n\n              if (s3 === peg$FAILED) {\n                s3 = peg$currPos;\n\n                if (input.charCodeAt(peg$currPos) === 92) {\n                  s4 = peg$c51;\n                  peg$currPos++;\n                } else {\n                  s4 = peg$FAILED;\n                  {\n                    peg$fail(peg$c52);\n                  }\n                }\n\n                if (s4 !== peg$FAILED) {\n                  if (input.length > peg$currPos) {\n                    s5 = input.charAt(peg$currPos);\n                    peg$currPos++;\n                  } else {\n                    s5 = peg$FAILED;\n                    {\n                      peg$fail(peg$c53);\n                    }\n                  }\n\n                  if (s5 !== peg$FAILED) {\n                    s4 = peg$c54(s4, s5);\n                    s3 = s4;\n                  } else {\n                    peg$currPos = s3;\n                    s3 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s3;\n                  s3 = peg$FAILED;\n                }\n              }\n            }\n\n            if (s2 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 39) {\n                s3 = peg$c56;\n                peg$currPos++;\n              } else {\n                s3 = peg$FAILED;\n                {\n                  peg$fail(peg$c57);\n                }\n              }\n\n              if (s3 !== peg$FAILED) {\n                s1 = peg$c55(s2);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        }\n\n        peg$resultsCache[key] = {\n          nextPos: peg$currPos,\n          result: s0\n        };\n        return s0;\n      }\n\n      function peg$parsenumber() {\n        var s0, s1, s2, s3;\n        var key = peg$currPos * 30 + 16,\n            cached = peg$resultsCache[key];\n\n        if (cached) {\n          peg$currPos = cached.nextPos;\n          return cached.result;\n        }\n\n        s0 = peg$currPos;\n        s1 = peg$currPos;\n        s2 = [];\n\n        if (peg$c60.test(input.charAt(peg$currPos))) {\n          s3 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          {\n            peg$fail(peg$c61);\n          }\n        }\n\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n\n          if (peg$c60.test(input.charAt(peg$currPos))) {\n            s3 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            {\n              peg$fail(peg$c61);\n            }\n          }\n        }\n\n        if (s2 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 46) {\n            s3 = peg$c42;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            {\n              peg$fail(peg$c43);\n            }\n          }\n\n          if (s3 !== peg$FAILED) {\n            s2 = [s2, s3];\n            s1 = s2;\n          } else {\n            peg$currPos = s1;\n            s1 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s1;\n          s1 = peg$FAILED;\n        }\n\n        if (s1 === peg$FAILED) {\n          s1 = null;\n        }\n\n        if (s1 !== peg$FAILED) {\n          s2 = [];\n\n          if (peg$c60.test(input.charAt(peg$currPos))) {\n            s3 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            {\n              peg$fail(peg$c61);\n            }\n          }\n\n          if (s3 !== peg$FAILED) {\n            while (s3 !== peg$FAILED) {\n              s2.push(s3);\n\n              if (peg$c60.test(input.charAt(peg$currPos))) {\n                s3 = input.charAt(peg$currPos);\n                peg$currPos++;\n              } else {\n                s3 = peg$FAILED;\n                {\n                  peg$fail(peg$c61);\n                }\n              }\n            }\n          } else {\n            s2 = peg$FAILED;\n          }\n\n          if (s2 !== peg$FAILED) {\n            s1 = peg$c62(s1, s2);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n\n        peg$resultsCache[key] = {\n          nextPos: peg$currPos,\n          result: s0\n        };\n        return s0;\n      }\n\n      function peg$parsepath() {\n        var s0, s1;\n        var key = peg$currPos * 30 + 17,\n            cached = peg$resultsCache[key];\n\n        if (cached) {\n          peg$currPos = cached.nextPos;\n          return cached.result;\n        }\n\n        s0 = peg$currPos;\n        s1 = peg$parseidentifierName();\n\n        if (s1 !== peg$FAILED) {\n          s1 = peg$c63(s1);\n        }\n\n        s0 = s1;\n        peg$resultsCache[key] = {\n          nextPos: peg$currPos,\n          result: s0\n        };\n        return s0;\n      }\n\n      function peg$parsetype() {\n        var s0, s1, s2, s3, s4, s5;\n        var key = peg$currPos * 30 + 18,\n            cached = peg$resultsCache[key];\n\n        if (cached) {\n          peg$currPos = cached.nextPos;\n          return cached.result;\n        }\n\n        s0 = peg$currPos;\n\n        if (input.substr(peg$currPos, 5) === peg$c64) {\n          s1 = peg$c64;\n          peg$currPos += 5;\n        } else {\n          s1 = peg$FAILED;\n          {\n            peg$fail(peg$c65);\n          }\n        }\n\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parse_();\n\n          if (s2 !== peg$FAILED) {\n            s3 = [];\n\n            if (peg$c66.test(input.charAt(peg$currPos))) {\n              s4 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s4 = peg$FAILED;\n              {\n                peg$fail(peg$c67);\n              }\n            }\n\n            if (s4 !== peg$FAILED) {\n              while (s4 !== peg$FAILED) {\n                s3.push(s4);\n\n                if (peg$c66.test(input.charAt(peg$currPos))) {\n                  s4 = input.charAt(peg$currPos);\n                  peg$currPos++;\n                } else {\n                  s4 = peg$FAILED;\n                  {\n                    peg$fail(peg$c67);\n                  }\n                }\n              }\n            } else {\n              s3 = peg$FAILED;\n            }\n\n            if (s3 !== peg$FAILED) {\n              s4 = peg$parse_();\n\n              if (s4 !== peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 41) {\n                  s5 = peg$c68;\n                  peg$currPos++;\n                } else {\n                  s5 = peg$FAILED;\n                  {\n                    peg$fail(peg$c69);\n                  }\n                }\n\n                if (s5 !== peg$FAILED) {\n                  s1 = peg$c70(s3);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n\n        peg$resultsCache[key] = {\n          nextPos: peg$currPos,\n          result: s0\n        };\n        return s0;\n      }\n\n      function peg$parseflags() {\n        var s0, s1;\n        var key = peg$currPos * 30 + 19,\n            cached = peg$resultsCache[key];\n\n        if (cached) {\n          peg$currPos = cached.nextPos;\n          return cached.result;\n        }\n\n        s0 = [];\n\n        if (peg$c71.test(input.charAt(peg$currPos))) {\n          s1 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          {\n            peg$fail(peg$c72);\n          }\n        }\n\n        if (s1 !== peg$FAILED) {\n          while (s1 !== peg$FAILED) {\n            s0.push(s1);\n\n            if (peg$c71.test(input.charAt(peg$currPos))) {\n              s1 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s1 = peg$FAILED;\n              {\n                peg$fail(peg$c72);\n              }\n            }\n          }\n        } else {\n          s0 = peg$FAILED;\n        }\n\n        peg$resultsCache[key] = {\n          nextPos: peg$currPos,\n          result: s0\n        };\n        return s0;\n      }\n\n      function peg$parseregex() {\n        var s0, s1, s2, s3, s4;\n        var key = peg$currPos * 30 + 20,\n            cached = peg$resultsCache[key];\n\n        if (cached) {\n          peg$currPos = cached.nextPos;\n          return cached.result;\n        }\n\n        s0 = peg$currPos;\n\n        if (input.charCodeAt(peg$currPos) === 47) {\n          s1 = peg$c73;\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          {\n            peg$fail(peg$c74);\n          }\n        }\n\n        if (s1 !== peg$FAILED) {\n          s2 = [];\n\n          if (peg$c75.test(input.charAt(peg$currPos))) {\n            s3 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            {\n              peg$fail(peg$c76);\n            }\n          }\n\n          if (s3 !== peg$FAILED) {\n            while (s3 !== peg$FAILED) {\n              s2.push(s3);\n\n              if (peg$c75.test(input.charAt(peg$currPos))) {\n                s3 = input.charAt(peg$currPos);\n                peg$currPos++;\n              } else {\n                s3 = peg$FAILED;\n                {\n                  peg$fail(peg$c76);\n                }\n              }\n            }\n          } else {\n            s2 = peg$FAILED;\n          }\n\n          if (s2 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 47) {\n              s3 = peg$c73;\n              peg$currPos++;\n            } else {\n              s3 = peg$FAILED;\n              {\n                peg$fail(peg$c74);\n              }\n            }\n\n            if (s3 !== peg$FAILED) {\n              s4 = peg$parseflags();\n\n              if (s4 === peg$FAILED) {\n                s4 = null;\n              }\n\n              if (s4 !== peg$FAILED) {\n                s1 = peg$c77(s2, s4);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n\n        peg$resultsCache[key] = {\n          nextPos: peg$currPos,\n          result: s0\n        };\n        return s0;\n      }\n\n      function peg$parsefield() {\n        var s0, s1, s2, s3, s4, s5, s6;\n        var key = peg$currPos * 30 + 21,\n            cached = peg$resultsCache[key];\n\n        if (cached) {\n          peg$currPos = cached.nextPos;\n          return cached.result;\n        }\n\n        s0 = peg$currPos;\n\n        if (input.charCodeAt(peg$currPos) === 46) {\n          s1 = peg$c42;\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          {\n            peg$fail(peg$c43);\n          }\n        }\n\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parseidentifierName();\n\n          if (s2 !== peg$FAILED) {\n            s3 = [];\n            s4 = peg$currPos;\n\n            if (input.charCodeAt(peg$currPos) === 46) {\n              s5 = peg$c42;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              {\n                peg$fail(peg$c43);\n              }\n            }\n\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parseidentifierName();\n\n              if (s6 !== peg$FAILED) {\n                s5 = [s5, s6];\n                s4 = s5;\n              } else {\n                peg$currPos = s4;\n                s4 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s4;\n              s4 = peg$FAILED;\n            }\n\n            while (s4 !== peg$FAILED) {\n              s3.push(s4);\n              s4 = peg$currPos;\n\n              if (input.charCodeAt(peg$currPos) === 46) {\n                s5 = peg$c42;\n                peg$currPos++;\n              } else {\n                s5 = peg$FAILED;\n                {\n                  peg$fail(peg$c43);\n                }\n              }\n\n              if (s5 !== peg$FAILED) {\n                s6 = peg$parseidentifierName();\n\n                if (s6 !== peg$FAILED) {\n                  s5 = [s5, s6];\n                  s4 = s5;\n                } else {\n                  peg$currPos = s4;\n                  s4 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s4;\n                s4 = peg$FAILED;\n              }\n            }\n\n            if (s3 !== peg$FAILED) {\n              s1 = peg$c78(s2, s3);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n\n        peg$resultsCache[key] = {\n          nextPos: peg$currPos,\n          result: s0\n        };\n        return s0;\n      }\n\n      function peg$parsenegation() {\n        var s0, s1, s2, s3, s4, s5;\n        var key = peg$currPos * 30 + 22,\n            cached = peg$resultsCache[key];\n\n        if (cached) {\n          peg$currPos = cached.nextPos;\n          return cached.result;\n        }\n\n        s0 = peg$currPos;\n\n        if (input.substr(peg$currPos, 5) === peg$c79) {\n          s1 = peg$c79;\n          peg$currPos += 5;\n        } else {\n          s1 = peg$FAILED;\n          {\n            peg$fail(peg$c80);\n          }\n        }\n\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parse_();\n\n          if (s2 !== peg$FAILED) {\n            s3 = peg$parseselectors();\n\n            if (s3 !== peg$FAILED) {\n              s4 = peg$parse_();\n\n              if (s4 !== peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 41) {\n                  s5 = peg$c68;\n                  peg$currPos++;\n                } else {\n                  s5 = peg$FAILED;\n                  {\n                    peg$fail(peg$c69);\n                  }\n                }\n\n                if (s5 !== peg$FAILED) {\n                  s1 = peg$c81(s3);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n\n        peg$resultsCache[key] = {\n          nextPos: peg$currPos,\n          result: s0\n        };\n        return s0;\n      }\n\n      function peg$parsematches() {\n        var s0, s1, s2, s3, s4, s5;\n        var key = peg$currPos * 30 + 23,\n            cached = peg$resultsCache[key];\n\n        if (cached) {\n          peg$currPos = cached.nextPos;\n          return cached.result;\n        }\n\n        s0 = peg$currPos;\n\n        if (input.substr(peg$currPos, 9) === peg$c82) {\n          s1 = peg$c82;\n          peg$currPos += 9;\n        } else {\n          s1 = peg$FAILED;\n          {\n            peg$fail(peg$c83);\n          }\n        }\n\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parse_();\n\n          if (s2 !== peg$FAILED) {\n            s3 = peg$parseselectors();\n\n            if (s3 !== peg$FAILED) {\n              s4 = peg$parse_();\n\n              if (s4 !== peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 41) {\n                  s5 = peg$c68;\n                  peg$currPos++;\n                } else {\n                  s5 = peg$FAILED;\n                  {\n                    peg$fail(peg$c69);\n                  }\n                }\n\n                if (s5 !== peg$FAILED) {\n                  s1 = peg$c84(s3);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n\n        peg$resultsCache[key] = {\n          nextPos: peg$currPos,\n          result: s0\n        };\n        return s0;\n      }\n\n      function peg$parsehas() {\n        var s0, s1, s2, s3, s4, s5;\n        var key = peg$currPos * 30 + 24,\n            cached = peg$resultsCache[key];\n\n        if (cached) {\n          peg$currPos = cached.nextPos;\n          return cached.result;\n        }\n\n        s0 = peg$currPos;\n\n        if (input.substr(peg$currPos, 5) === peg$c85) {\n          s1 = peg$c85;\n          peg$currPos += 5;\n        } else {\n          s1 = peg$FAILED;\n          {\n            peg$fail(peg$c86);\n          }\n        }\n\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parse_();\n\n          if (s2 !== peg$FAILED) {\n            s3 = peg$parseselectors();\n\n            if (s3 !== peg$FAILED) {\n              s4 = peg$parse_();\n\n              if (s4 !== peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 41) {\n                  s5 = peg$c68;\n                  peg$currPos++;\n                } else {\n                  s5 = peg$FAILED;\n                  {\n                    peg$fail(peg$c69);\n                  }\n                }\n\n                if (s5 !== peg$FAILED) {\n                  s1 = peg$c87(s3);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n\n        peg$resultsCache[key] = {\n          nextPos: peg$currPos,\n          result: s0\n        };\n        return s0;\n      }\n\n      function peg$parsefirstChild() {\n        var s0, s1;\n        var key = peg$currPos * 30 + 25,\n            cached = peg$resultsCache[key];\n\n        if (cached) {\n          peg$currPos = cached.nextPos;\n          return cached.result;\n        }\n\n        s0 = peg$currPos;\n\n        if (input.substr(peg$currPos, 12) === peg$c88) {\n          s1 = peg$c88;\n          peg$currPos += 12;\n        } else {\n          s1 = peg$FAILED;\n          {\n            peg$fail(peg$c89);\n          }\n        }\n\n        if (s1 !== peg$FAILED) {\n          s1 = peg$c90();\n        }\n\n        s0 = s1;\n        peg$resultsCache[key] = {\n          nextPos: peg$currPos,\n          result: s0\n        };\n        return s0;\n      }\n\n      function peg$parselastChild() {\n        var s0, s1;\n        var key = peg$currPos * 30 + 26,\n            cached = peg$resultsCache[key];\n\n        if (cached) {\n          peg$currPos = cached.nextPos;\n          return cached.result;\n        }\n\n        s0 = peg$currPos;\n\n        if (input.substr(peg$currPos, 11) === peg$c91) {\n          s1 = peg$c91;\n          peg$currPos += 11;\n        } else {\n          s1 = peg$FAILED;\n          {\n            peg$fail(peg$c92);\n          }\n        }\n\n        if (s1 !== peg$FAILED) {\n          s1 = peg$c93();\n        }\n\n        s0 = s1;\n        peg$resultsCache[key] = {\n          nextPos: peg$currPos,\n          result: s0\n        };\n        return s0;\n      }\n\n      function peg$parsenthChild() {\n        var s0, s1, s2, s3, s4, s5;\n        var key = peg$currPos * 30 + 27,\n            cached = peg$resultsCache[key];\n\n        if (cached) {\n          peg$currPos = cached.nextPos;\n          return cached.result;\n        }\n\n        s0 = peg$currPos;\n\n        if (input.substr(peg$currPos, 11) === peg$c94) {\n          s1 = peg$c94;\n          peg$currPos += 11;\n        } else {\n          s1 = peg$FAILED;\n          {\n            peg$fail(peg$c95);\n          }\n        }\n\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parse_();\n\n          if (s2 !== peg$FAILED) {\n            s3 = [];\n\n            if (peg$c60.test(input.charAt(peg$currPos))) {\n              s4 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s4 = peg$FAILED;\n              {\n                peg$fail(peg$c61);\n              }\n            }\n\n            if (s4 !== peg$FAILED) {\n              while (s4 !== peg$FAILED) {\n                s3.push(s4);\n\n                if (peg$c60.test(input.charAt(peg$currPos))) {\n                  s4 = input.charAt(peg$currPos);\n                  peg$currPos++;\n                } else {\n                  s4 = peg$FAILED;\n                  {\n                    peg$fail(peg$c61);\n                  }\n                }\n              }\n            } else {\n              s3 = peg$FAILED;\n            }\n\n            if (s3 !== peg$FAILED) {\n              s4 = peg$parse_();\n\n              if (s4 !== peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 41) {\n                  s5 = peg$c68;\n                  peg$currPos++;\n                } else {\n                  s5 = peg$FAILED;\n                  {\n                    peg$fail(peg$c69);\n                  }\n                }\n\n                if (s5 !== peg$FAILED) {\n                  s1 = peg$c96(s3);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n\n        peg$resultsCache[key] = {\n          nextPos: peg$currPos,\n          result: s0\n        };\n        return s0;\n      }\n\n      function peg$parsenthLastChild() {\n        var s0, s1, s2, s3, s4, s5;\n        var key = peg$currPos * 30 + 28,\n            cached = peg$resultsCache[key];\n\n        if (cached) {\n          peg$currPos = cached.nextPos;\n          return cached.result;\n        }\n\n        s0 = peg$currPos;\n\n        if (input.substr(peg$currPos, 16) === peg$c97) {\n          s1 = peg$c97;\n          peg$currPos += 16;\n        } else {\n          s1 = peg$FAILED;\n          {\n            peg$fail(peg$c98);\n          }\n        }\n\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parse_();\n\n          if (s2 !== peg$FAILED) {\n            s3 = [];\n\n            if (peg$c60.test(input.charAt(peg$currPos))) {\n              s4 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s4 = peg$FAILED;\n              {\n                peg$fail(peg$c61);\n              }\n            }\n\n            if (s4 !== peg$FAILED) {\n              while (s4 !== peg$FAILED) {\n                s3.push(s4);\n\n                if (peg$c60.test(input.charAt(peg$currPos))) {\n                  s4 = input.charAt(peg$currPos);\n                  peg$currPos++;\n                } else {\n                  s4 = peg$FAILED;\n                  {\n                    peg$fail(peg$c61);\n                  }\n                }\n              }\n            } else {\n              s3 = peg$FAILED;\n            }\n\n            if (s3 !== peg$FAILED) {\n              s4 = peg$parse_();\n\n              if (s4 !== peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 41) {\n                  s5 = peg$c68;\n                  peg$currPos++;\n                } else {\n                  s5 = peg$FAILED;\n                  {\n                    peg$fail(peg$c69);\n                  }\n                }\n\n                if (s5 !== peg$FAILED) {\n                  s1 = peg$c99(s3);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n\n        peg$resultsCache[key] = {\n          nextPos: peg$currPos,\n          result: s0\n        };\n        return s0;\n      }\n\n      function peg$parseclass() {\n        var s0, s1, s2;\n        var key = peg$currPos * 30 + 29,\n            cached = peg$resultsCache[key];\n\n        if (cached) {\n          peg$currPos = cached.nextPos;\n          return cached.result;\n        }\n\n        s0 = peg$currPos;\n\n        if (input.charCodeAt(peg$currPos) === 58) {\n          s1 = peg$c100;\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          {\n            peg$fail(peg$c101);\n          }\n        }\n\n        if (s1 !== peg$FAILED) {\n          if (input.substr(peg$currPos, 9).toLowerCase() === peg$c102) {\n            s2 = input.substr(peg$currPos, 9);\n            peg$currPos += 9;\n          } else {\n            s2 = peg$FAILED;\n            {\n              peg$fail(peg$c103);\n            }\n          }\n\n          if (s2 === peg$FAILED) {\n            if (input.substr(peg$currPos, 10).toLowerCase() === peg$c104) {\n              s2 = input.substr(peg$currPos, 10);\n              peg$currPos += 10;\n            } else {\n              s2 = peg$FAILED;\n              {\n                peg$fail(peg$c105);\n              }\n            }\n\n            if (s2 === peg$FAILED) {\n              if (input.substr(peg$currPos, 11).toLowerCase() === peg$c106) {\n                s2 = input.substr(peg$currPos, 11);\n                peg$currPos += 11;\n              } else {\n                s2 = peg$FAILED;\n                {\n                  peg$fail(peg$c107);\n                }\n              }\n\n              if (s2 === peg$FAILED) {\n                if (input.substr(peg$currPos, 8).toLowerCase() === peg$c108) {\n                  s2 = input.substr(peg$currPos, 8);\n                  peg$currPos += 8;\n                } else {\n                  s2 = peg$FAILED;\n                  {\n                    peg$fail(peg$c109);\n                  }\n                }\n\n                if (s2 === peg$FAILED) {\n                  if (input.substr(peg$currPos, 7).toLowerCase() === peg$c110) {\n                    s2 = input.substr(peg$currPos, 7);\n                    peg$currPos += 7;\n                  } else {\n                    s2 = peg$FAILED;\n                    {\n                      peg$fail(peg$c111);\n                    }\n                  }\n                }\n              }\n            }\n          }\n\n          if (s2 !== peg$FAILED) {\n            s1 = peg$c112(s2);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n\n        peg$resultsCache[key] = {\n          nextPos: peg$currPos,\n          result: s0\n        };\n        return s0;\n      }\n\n      function nth(n) {\n        return {\n          type: 'nth-child',\n          index: {\n            type: 'literal',\n            value: n\n          }\n        };\n      }\n\n      function nthLast(n) {\n        return {\n          type: 'nth-last-child',\n          index: {\n            type: 'literal',\n            value: n\n          }\n        };\n      }\n\n      function strUnescape(s) {\n        return s.replace(/\\\\(.)/g, function (match, ch) {\n          switch (ch) {\n            case 'b':\n              return '\\b';\n\n            case 'f':\n              return '\\f';\n\n            case 'n':\n              return '\\n';\n\n            case 'r':\n              return '\\r';\n\n            case 't':\n              return '\\t';\n\n            case 'v':\n              return '\\v';\n\n            default:\n              return ch;\n          }\n        });\n      }\n\n      peg$result = peg$startRuleFunction();\n\n      if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n        return peg$result;\n      } else {\n        if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n          peg$fail(peg$endExpectation());\n        }\n\n        throw peg$buildStructuredError(peg$maxFailExpected, peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null, peg$maxFailPos < input.length ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1) : peg$computeLocation(peg$maxFailPos, peg$maxFailPos));\n      }\n    }\n\n    return {\n      SyntaxError: peg$SyntaxError,\n      parse: peg$parse\n    };\n  });\n});\n\nfunction _objectEntries(obj) {\n  var entries = [];\n  var keys = Object.keys(obj);\n\n  for (var k = 0; k < keys.length; k++) entries.push([keys[k], obj[keys[k]]]);\n\n  return entries;\n}\n/**\n* @typedef {\"LEFT_SIDE\"|\"RIGHT_SIDE\"} Side\n*/\n\n\nvar LEFT_SIDE = 'LEFT_SIDE';\nvar RIGHT_SIDE = 'RIGHT_SIDE';\n/**\n * @external AST\n * @see https://esprima.readthedocs.io/en/latest/syntax-tree-format.html\n */\n\n/**\n * One of the rules of `grammar.pegjs`\n * @typedef {PlainObject} SelectorAST\n * @see grammar.pegjs\n*/\n\n/**\n * The `sequence` production of `grammar.pegjs`\n * @typedef {PlainObject} SelectorSequenceAST\n*/\n\n/**\n * Get the value of a property which may be multiple levels down\n * in the object.\n * @param {?PlainObject} obj\n * @param {string} key\n * @returns {undefined|boolean|string|number|external:AST}\n */\n\nfunction getPath(obj, key) {\n  var keys = key.split('.');\n\n  var _iterator = _createForOfIteratorHelper(keys),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var _key = _step.value;\n\n      if (obj == null) {\n        return obj;\n      }\n\n      obj = obj[_key];\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return obj;\n}\n/**\n * Determine whether `node` can be reached by following `path`,\n * starting at `ancestor`.\n * @param {?external:AST} node\n * @param {?external:AST} ancestor\n * @param {string[]} path\n * @returns {boolean}\n */\n\n\nfunction inPath(node, ancestor, path) {\n  if (path.length === 0) {\n    return node === ancestor;\n  }\n\n  if (ancestor == null) {\n    return false;\n  }\n\n  var field = ancestor[path[0]];\n  var remainingPath = path.slice(1);\n\n  if (Array.isArray(field)) {\n    var _iterator2 = _createForOfIteratorHelper(field),\n        _step2;\n\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var component = _step2.value;\n\n        if (inPath(node, component, remainingPath)) {\n          return true;\n        }\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n\n    return false;\n  } else {\n    return inPath(node, field, remainingPath);\n  }\n}\n/**\n * @callback TraverseOptionFallback\n * @param {external:AST} node The given node.\n * @returns {string[]} An array of visitor keys for the given node.\n */\n\n/**\n * @typedef {object} ESQueryOptions\n * @property { { [nodeType: string]: string[] } } [visitorKeys] By passing `visitorKeys` mapping, we can extend the properties of the nodes that traverse the node.\n * @property {TraverseOptionFallback} [fallback] By passing `fallback` option, we can control the properties of traversing nodes when encountering unknown nodes.\n */\n\n/**\n * Given a `node` and its ancestors, determine if `node` is matched\n * by `selector`.\n * @param {?external:AST} node\n * @param {?SelectorAST} selector\n * @param {external:AST[]} [ancestry=[]]\n * @param {ESQueryOptions} [options]\n * @throws {Error} Unknowns (operator, class name, selector type, or\n * selector value type)\n * @returns {boolean}\n */\n\n\nfunction matches(node, selector, ancestry, options) {\n  if (!selector) {\n    return true;\n  }\n\n  if (!node) {\n    return false;\n  }\n\n  if (!ancestry) {\n    ancestry = [];\n  }\n\n  switch (selector.type) {\n    case 'wildcard':\n      return true;\n\n    case 'identifier':\n      return selector.value.toLowerCase() === node.type.toLowerCase();\n\n    case 'field':\n      {\n        var path = selector.name.split('.');\n        var ancestor = ancestry[path.length - 1];\n        return inPath(node, ancestor, path);\n      }\n\n    case 'matches':\n      var _iterator3 = _createForOfIteratorHelper(selector.selectors),\n          _step3;\n\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var sel = _step3.value;\n\n          if (matches(node, sel, ancestry, options)) {\n            return true;\n          }\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n\n      return false;\n\n    case 'compound':\n      var _iterator4 = _createForOfIteratorHelper(selector.selectors),\n          _step4;\n\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var _sel = _step4.value;\n\n          if (!matches(node, _sel, ancestry, options)) {\n            return false;\n          }\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n\n      return true;\n\n    case 'not':\n      var _iterator5 = _createForOfIteratorHelper(selector.selectors),\n          _step5;\n\n      try {\n        for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n          var _sel2 = _step5.value;\n\n          if (matches(node, _sel2, ancestry, options)) {\n            return false;\n          }\n        }\n      } catch (err) {\n        _iterator5.e(err);\n      } finally {\n        _iterator5.f();\n      }\n\n      return true;\n\n    case 'has':\n      {\n        var _ret = function () {\n          var collector = [];\n\n          var _iterator6 = _createForOfIteratorHelper(selector.selectors),\n              _step6;\n\n          try {\n            var _loop = function _loop() {\n              var sel = _step6.value;\n              var a = [];\n              estraverse.traverse(node, {\n                enter: function enter(node, parent) {\n                  if (parent != null) {\n                    a.unshift(parent);\n                  }\n\n                  if (matches(node, sel, a, options)) {\n                    collector.push(node);\n                  }\n                },\n                leave: function leave() {\n                  a.shift();\n                },\n                keys: options && options.visitorKeys,\n                fallback: options && options.fallback || 'iteration'\n              });\n            };\n\n            for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n              _loop();\n            }\n          } catch (err) {\n            _iterator6.e(err);\n          } finally {\n            _iterator6.f();\n          }\n\n          return {\n            v: collector.length !== 0\n          };\n        }();\n\n        if (_typeof(_ret) === \"object\") return _ret.v;\n      }\n\n    case 'child':\n      if (matches(node, selector.right, ancestry, options)) {\n        return matches(ancestry[0], selector.left, ancestry.slice(1), options);\n      }\n\n      return false;\n\n    case 'descendant':\n      if (matches(node, selector.right, ancestry, options)) {\n        for (var i = 0, l = ancestry.length; i < l; ++i) {\n          if (matches(ancestry[i], selector.left, ancestry.slice(i + 1), options)) {\n            return true;\n          }\n        }\n      }\n\n      return false;\n\n    case 'attribute':\n      {\n        var p = getPath(node, selector.name);\n\n        switch (selector.operator) {\n          case void 0:\n            return p != null;\n\n          case '=':\n            switch (selector.value.type) {\n              case 'regexp':\n                return typeof p === 'string' && selector.value.value.test(p);\n\n              case 'literal':\n                return \"\".concat(selector.value.value) === \"\".concat(p);\n\n              case 'type':\n                return selector.value.value === _typeof(p);\n            }\n\n            throw new Error(\"Unknown selector value type: \".concat(selector.value.type));\n\n          case '!=':\n            switch (selector.value.type) {\n              case 'regexp':\n                return !selector.value.value.test(p);\n\n              case 'literal':\n                return \"\".concat(selector.value.value) !== \"\".concat(p);\n\n              case 'type':\n                return selector.value.value !== _typeof(p);\n            }\n\n            throw new Error(\"Unknown selector value type: \".concat(selector.value.type));\n\n          case '<=':\n            return p <= selector.value.value;\n\n          case '<':\n            return p < selector.value.value;\n\n          case '>':\n            return p > selector.value.value;\n\n          case '>=':\n            return p >= selector.value.value;\n        }\n\n        throw new Error(\"Unknown operator: \".concat(selector.operator));\n      }\n\n    case 'sibling':\n      return matches(node, selector.right, ancestry, options) && sibling(node, selector.left, ancestry, LEFT_SIDE, options) || selector.left.subject && matches(node, selector.left, ancestry, options) && sibling(node, selector.right, ancestry, RIGHT_SIDE, options);\n\n    case 'adjacent':\n      return matches(node, selector.right, ancestry, options) && adjacent(node, selector.left, ancestry, LEFT_SIDE, options) || selector.right.subject && matches(node, selector.left, ancestry, options) && adjacent(node, selector.right, ancestry, RIGHT_SIDE, options);\n\n    case 'nth-child':\n      return matches(node, selector.right, ancestry, options) && nthChild(node, ancestry, function () {\n        return selector.index.value - 1;\n      }, options);\n\n    case 'nth-last-child':\n      return matches(node, selector.right, ancestry, options) && nthChild(node, ancestry, function (length) {\n        return length - selector.index.value;\n      }, options);\n\n    case 'class':\n      switch (selector.name.toLowerCase()) {\n        case 'statement':\n          if (node.type.slice(-9) === 'Statement') return true;\n        // fallthrough: interface Declaration <: Statement { }\n\n        case 'declaration':\n          return node.type.slice(-11) === 'Declaration';\n\n        case 'pattern':\n          if (node.type.slice(-7) === 'Pattern') return true;\n        // fallthrough: interface Expression <: Node, Pattern { }\n\n        case 'expression':\n          return node.type.slice(-10) === 'Expression' || node.type.slice(-7) === 'Literal' || node.type === 'Identifier' && (ancestry.length === 0 || ancestry[0].type !== 'MetaProperty') || node.type === 'MetaProperty';\n\n        case 'function':\n          return node.type === 'FunctionDeclaration' || node.type === 'FunctionExpression' || node.type === 'ArrowFunctionExpression';\n      }\n\n      throw new Error(\"Unknown class name: \".concat(selector.name));\n  }\n\n  throw new Error(\"Unknown selector type: \".concat(selector.type));\n}\n/**\n * Get visitor keys of a given node.\n * @param {external:AST} node The AST node to get keys.\n * @param {ESQueryOptions|undefined} options\n * @returns {string[]} Visitor keys of the node.\n */\n\n\nfunction getVisitorKeys(node, options) {\n  var nodeType = node.type;\n\n  if (options && options.visitorKeys && options.visitorKeys[nodeType]) {\n    return options.visitorKeys[nodeType];\n  }\n\n  if (estraverse.VisitorKeys[nodeType]) {\n    return estraverse.VisitorKeys[nodeType];\n  }\n\n  if (options && typeof options.fallback === 'function') {\n    return options.fallback(node);\n  } // 'iteration' fallback\n\n\n  return Object.keys(node).filter(function (key) {\n    return key !== 'type';\n  });\n}\n/**\n * Check whether the given value is an ASTNode or not.\n * @param {any} node The value to check.\n * @returns {boolean} `true` if the value is an ASTNode.\n */\n\n\nfunction isNode(node) {\n  return node !== null && _typeof(node) === 'object' && typeof node.type === 'string';\n}\n/**\n * Determines if the given node has a sibling that matches the\n * given selector.\n * @param {external:AST} node\n * @param {SelectorSequenceAST} selector\n * @param {external:AST[]} ancestry\n * @param {Side} side\n * @param {ESQueryOptions|undefined} options\n * @returns {boolean}\n */\n\n\nfunction sibling(node, selector, ancestry, side, options) {\n  var _ancestry = _slicedToArray(ancestry, 1),\n      parent = _ancestry[0];\n\n  if (!parent) {\n    return false;\n  }\n\n  var keys = getVisitorKeys(parent, options);\n\n  var _iterator7 = _createForOfIteratorHelper(keys),\n      _step7;\n\n  try {\n    for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n      var key = _step7.value;\n      var listProp = parent[key];\n\n      if (Array.isArray(listProp)) {\n        var startIndex = listProp.indexOf(node);\n\n        if (startIndex < 0) {\n          continue;\n        }\n\n        var lowerBound = void 0,\n            upperBound = void 0;\n\n        if (side === LEFT_SIDE) {\n          lowerBound = 0;\n          upperBound = startIndex;\n        } else {\n          lowerBound = startIndex + 1;\n          upperBound = listProp.length;\n        }\n\n        for (var k = lowerBound; k < upperBound; ++k) {\n          if (isNode(listProp[k]) && matches(listProp[k], selector, ancestry, options)) {\n            return true;\n          }\n        }\n      }\n    }\n  } catch (err) {\n    _iterator7.e(err);\n  } finally {\n    _iterator7.f();\n  }\n\n  return false;\n}\n/**\n * Determines if the given node has an adjacent sibling that matches\n * the given selector.\n * @param {external:AST} node\n * @param {SelectorSequenceAST} selector\n * @param {external:AST[]} ancestry\n * @param {Side} side\n * @param {ESQueryOptions|undefined} options\n * @returns {boolean}\n */\n\n\nfunction adjacent(node, selector, ancestry, side, options) {\n  var _ancestry2 = _slicedToArray(ancestry, 1),\n      parent = _ancestry2[0];\n\n  if (!parent) {\n    return false;\n  }\n\n  var keys = getVisitorKeys(parent, options);\n\n  var _iterator8 = _createForOfIteratorHelper(keys),\n      _step8;\n\n  try {\n    for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n      var key = _step8.value;\n      var listProp = parent[key];\n\n      if (Array.isArray(listProp)) {\n        var idx = listProp.indexOf(node);\n\n        if (idx < 0) {\n          continue;\n        }\n\n        if (side === LEFT_SIDE && idx > 0 && isNode(listProp[idx - 1]) && matches(listProp[idx - 1], selector, ancestry, options)) {\n          return true;\n        }\n\n        if (side === RIGHT_SIDE && idx < listProp.length - 1 && isNode(listProp[idx + 1]) && matches(listProp[idx + 1], selector, ancestry, options)) {\n          return true;\n        }\n      }\n    }\n  } catch (err) {\n    _iterator8.e(err);\n  } finally {\n    _iterator8.f();\n  }\n\n  return false;\n}\n/**\n* @callback IndexFunction\n* @param {Integer} len Containing list's length\n* @returns {Integer}\n*/\n\n/**\n * Determines if the given node is the nth child, determined by\n * `idxFn`, which is given the containing list's length.\n * @param {external:AST} node\n * @param {external:AST[]} ancestry\n * @param {IndexFunction} idxFn\n * @param {ESQueryOptions|undefined} options\n * @returns {boolean}\n */\n\n\nfunction nthChild(node, ancestry, idxFn, options) {\n  var _ancestry3 = _slicedToArray(ancestry, 1),\n      parent = _ancestry3[0];\n\n  if (!parent) {\n    return false;\n  }\n\n  var keys = getVisitorKeys(parent, options);\n\n  var _iterator9 = _createForOfIteratorHelper(keys),\n      _step9;\n\n  try {\n    for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n      var key = _step9.value;\n      var listProp = parent[key];\n\n      if (Array.isArray(listProp)) {\n        var idx = listProp.indexOf(node);\n\n        if (idx >= 0 && idx === idxFn(listProp.length)) {\n          return true;\n        }\n      }\n    }\n  } catch (err) {\n    _iterator9.e(err);\n  } finally {\n    _iterator9.f();\n  }\n\n  return false;\n}\n/**\n * For each selector node marked as a subject, find the portion of the\n * selector that the subject must match.\n * @param {SelectorAST} selector\n * @param {SelectorAST} [ancestor] Defaults to `selector`\n * @returns {SelectorAST[]}\n */\n\n\nfunction subjects(selector, ancestor) {\n  if (selector == null || _typeof(selector) != 'object') {\n    return [];\n  }\n\n  if (ancestor == null) {\n    ancestor = selector;\n  }\n\n  var results = selector.subject ? [ancestor] : [];\n\n  for (var _i = 0, _Object$entries = _objectEntries(selector); _i < _Object$entries.length; _i++) {\n    var _Object$entries$_i = _slicedToArray(_Object$entries[_i], 2),\n        p = _Object$entries$_i[0],\n        sel = _Object$entries$_i[1];\n\n    results.push.apply(results, _toConsumableArray(subjects(sel, p === 'left' ? sel : ancestor)));\n  }\n\n  return results;\n}\n/**\n* @callback TraverseVisitor\n* @param {?external:AST} node\n* @param {?external:AST} parent\n* @param {external:AST[]} ancestry\n*/\n\n/**\n * From a JS AST and a selector AST, collect all JS AST nodes that\n * match the selector.\n * @param {external:AST} ast\n * @param {?SelectorAST} selector\n * @param {TraverseVisitor} visitor\n * @param {ESQueryOptions} [options]\n * @returns {external:AST[]}\n */\n\n\nfunction traverse(ast, selector, visitor, options) {\n  if (!selector) {\n    return;\n  }\n\n  var ancestry = [];\n  var altSubjects = subjects(selector);\n  estraverse.traverse(ast, {\n    enter: function enter(node, parent) {\n      if (parent != null) {\n        ancestry.unshift(parent);\n      }\n\n      if (matches(node, selector, ancestry, options)) {\n        if (altSubjects.length) {\n          for (var i = 0, l = altSubjects.length; i < l; ++i) {\n            if (matches(node, altSubjects[i], ancestry, options)) {\n              visitor(node, parent, ancestry);\n            }\n\n            for (var k = 0, m = ancestry.length; k < m; ++k) {\n              var succeedingAncestry = ancestry.slice(k + 1);\n\n              if (matches(ancestry[k], altSubjects[i], succeedingAncestry, options)) {\n                visitor(ancestry[k], parent, succeedingAncestry);\n              }\n            }\n          }\n        } else {\n          visitor(node, parent, ancestry);\n        }\n      }\n    },\n    leave: function leave() {\n      ancestry.shift();\n    },\n    keys: options && options.visitorKeys,\n    fallback: options && options.fallback || 'iteration'\n  });\n}\n/**\n * From a JS AST and a selector AST, collect all JS AST nodes that\n * match the selector.\n * @param {external:AST} ast\n * @param {?SelectorAST} selector\n * @param {ESQueryOptions} [options]\n * @returns {external:AST[]}\n */\n\n\nfunction match(ast, selector, options) {\n  var results = [];\n  traverse(ast, selector, function (node) {\n    results.push(node);\n  }, options);\n  return results;\n}\n/**\n * Parse a selector string and return its AST.\n * @param {string} selector\n * @returns {SelectorAST}\n */\n\n\nfunction parse(selector) {\n  return parser.parse(selector);\n}\n/**\n * Query the code AST using the selector string.\n * @param {external:AST} ast\n * @param {string} selector\n * @param {ESQueryOptions} [options]\n * @returns {external:AST[]}\n */\n\n\nfunction query(ast, selector, options) {\n  return match(ast, parse(selector), options);\n}\n\nquery.parse = parse;\nquery.match = match;\nquery.traverse = traverse;\nquery.matches = matches;\nquery.query = query;\nexport default query;","map":{"version":3,"names":["_typeof","obj","Symbol","iterator","constructor","prototype","_slicedToArray","arr","i","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","_toConsumableArray","_arrayWithoutHoles","_iterableToArray","_nonIterableSpread","Array","isArray","_arrayLikeToArray","iter","Object","from","_arr","_n","_d","_e","undefined","_i","_s","next","done","push","value","length","err","o","minLen","n","toString","call","slice","name","test","len","arr2","TypeError","_createForOfIteratorHelper","allowArrayLike","it","F","s","e","f","normalCompletion","didErr","step","return","commonjsGlobal","globalThis","window","global","self","createCommonjsModule","fn","module","exports","estraverse","clone","Syntax","VisitorOption","VisitorKeys","BREAK","SKIP","REMOVE","deepCopy","ret","key","val","hasOwnProperty","upperBound","array","func","diff","current","AssignmentExpression","AssignmentPattern","ArrayExpression","ArrayPattern","ArrowFunctionExpression","AwaitExpression","BlockStatement","BinaryExpression","BreakStatement","CallExpression","CatchClause","ChainExpression","ClassBody","ClassDeclaration","ClassExpression","ComprehensionBlock","ComprehensionExpression","ConditionalExpression","ContinueStatement","DebuggerStatement","DirectiveStatement","DoWhileStatement","EmptyStatement","ExportAllDeclaration","ExportDefaultDeclaration","ExportNamedDeclaration","ExportSpecifier","ExpressionStatement","ForStatement","ForInStatement","ForOfStatement","FunctionDeclaration","FunctionExpression","GeneratorExpression","Identifier","IfStatement","ImportExpression","ImportDeclaration","ImportDefaultSpecifier","ImportNamespaceSpecifier","ImportSpecifier","Literal","LabeledStatement","LogicalExpression","MemberExpression","MetaProperty","MethodDefinition","ModuleSpecifier","NewExpression","ObjectExpression","ObjectPattern","Program","Property","RestElement","ReturnStatement","SequenceExpression","SpreadElement","Super","SwitchStatement","SwitchCase","TaggedTemplateExpression","TemplateElement","TemplateLiteral","ThisExpression","ThrowStatement","TryStatement","UnaryExpression","UpdateExpression","VariableDeclaration","VariableDeclarator","WhileStatement","WithStatement","YieldExpression","Break","Skip","Remove","Reference","parent","replace","node","remove","splice","Element","path","wrap","ref","Controller","iz","j","jz","result","element","addToPath","__current","__leavelist","type","parents","__execute","callback","previous","__state","notify","flag","skip","__initialize","root","visitor","__worklist","__fallback","fallback","keys","__keys","assign","create","isNode","isProperty","nodeType","candidateExistsInLeaveList","leavelist","candidate","traverse","worklist","current2","candidates","sentinel","pop","leave","enter","Error","target","outer","removeElem","nextElem","controller","extendCommentRange","comment","tokens","search","token","range","extendedRange","attachComments","tree","providedComments","comments","cursor","leadingComments","trailingComments","cloneEnvironment","parser","factory","peg$subclass","child","ctor","peg$SyntaxError","message","expected","found","location","captureStackTrace","buildMessage","DESCRIBE_EXPECTATION_FNS","literal","expectation","literalEscape","text","_class","escapedParts","parts","classEscape","inverted","any","end","other","description","hex","ch","charCodeAt","toUpperCase","describeExpectation","describeExpected","descriptions","sort","join","describeFound","peg$parse","input","options","peg$FAILED","peg$startRuleFunctions","start","peg$parsestart","peg$startRuleFunction","peg$c0","ss","selectors","peg$c1","peg$c2","peg$c3","peg$literalExpectation","peg$c4","peg$c5","peg$classExpectation","peg$c6","peg$c7","peg$c8","peg$c9","peg$c10","peg$c11","peg$c12","peg$c13","peg$c14","peg$c15","peg$c16","peg$c17","peg$c18","peg$c19","concat","map","peg$c20","a","ops","reduce","memo","rhs","left","right","peg$c21","peg$c22","peg$c23","subject","as","b","peg$c24","peg$c25","peg$c26","peg$c27","peg$c28","peg$c29","peg$c30","peg$c31","peg$c32","peg$c33","peg$c34","v","peg$c35","peg$c36","peg$c37","peg$c38","peg$c39","peg$c40","peg$c41","peg$c42","peg$c43","peg$c44","apply","peg$c45","op","operator","peg$c46","peg$c47","peg$c48","peg$c49","peg$c50","peg$c51","peg$c52","peg$c53","peg$anyExpectation","peg$c54","peg$c55","d","strUnescape","peg$c56","peg$c57","peg$c58","peg$c59","peg$c60","peg$c61","peg$c62","leadingDecimals","parseFloat","peg$c63","peg$c64","peg$c65","peg$c66","peg$c67","peg$c68","peg$c69","peg$c70","t","peg$c71","peg$c72","peg$c73","peg$c74","peg$c75","peg$c76","peg$c77","flgs","RegExp","peg$c78","is","p","peg$c79","peg$c80","peg$c81","peg$c82","peg$c83","peg$c84","peg$c85","peg$c86","peg$c87","peg$c88","peg$c89","peg$c90","nth","peg$c91","peg$c92","peg$c93","nthLast","peg$c94","peg$c95","peg$c96","parseInt","peg$c97","peg$c98","peg$c99","peg$c100","peg$c101","peg$c102","peg$c103","peg$c104","peg$c105","peg$c106","peg$c107","peg$c108","peg$c109","peg$c110","peg$c111","peg$c112","c","peg$currPos","peg$posDetailsCache","line","column","peg$maxFailPos","peg$maxFailExpected","peg$resultsCache","peg$result","startRule","ignoreCase","peg$endExpectation","peg$computePosDetails","pos","details","peg$computeLocation","startPos","endPos","startPosDetails","endPosDetails","offset","peg$fail","peg$buildStructuredError","s0","s1","s2","s3","cached","nextPos","peg$parse_","peg$parseselectors","peg$parseidentifierName","charAt","peg$parsebinaryOp","s4","s5","s6","s7","peg$parseselector","peg$parsesequence","peg$parseatom","peg$parsewildcard","peg$parseidentifier","peg$parseattr","peg$parsefield","peg$parsenegation","peg$parsematches","peg$parsehas","peg$parsefirstChild","peg$parselastChild","peg$parsenthChild","peg$parsenthLastChild","peg$parseclass","peg$parseattrValue","peg$parseattrOps","peg$parseattrEqOps","peg$parseattrName","peg$parsetype","peg$parseregex","peg$parsestring","peg$parsenumber","peg$parsepath","substr","peg$parseflags","toLowerCase","index","match","SyntaxError","parse","_objectEntries","entries","k","LEFT_SIDE","RIGHT_SIDE","getPath","split","_iterator","_step","_key","inPath","ancestor","field","remainingPath","_iterator2","_step2","component","matches","selector","ancestry","_iterator3","_step3","sel","_iterator4","_step4","_sel","_iterator5","_step5","_sel2","_ret","collector","_iterator6","_step6","_loop","unshift","shift","visitorKeys","l","sibling","adjacent","nthChild","getVisitorKeys","filter","side","_ancestry","_iterator7","_step7","listProp","startIndex","indexOf","lowerBound","_ancestry2","_iterator8","_step8","idx","idxFn","_ancestry3","_iterator9","_step9","subjects","results","_Object$entries","_Object$entries$_i","ast","altSubjects","m","succeedingAncestry","query"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/esquery/dist/esquery.esm.js"],"sourcesContent":["function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n  return arr2;\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function () {};\n\n      return {\n        s: F,\n        n: function () {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function (e) {\n          throw e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function () {\n      it = o[Symbol.iterator]();\n    },\n    n: function () {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function (e) {\n      didErr = true;\n      err = e;\n    },\n    f: function () {\n      try {\n        if (!normalCompletion && it.return != null) it.return();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\n\nvar commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\nfunction createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\nvar estraverse = createCommonjsModule(function (module, exports) {\n  /*\n    Copyright (C) 2012-2013 Yusuke Suzuki <utatane.tea@gmail.com>\n    Copyright (C) 2012 Ariya Hidayat <ariya.hidayat@gmail.com>\n  \n    Redistribution and use in source and binary forms, with or without\n    modification, are permitted provided that the following conditions are met:\n  \n      * Redistributions of source code must retain the above copyright\n        notice, this list of conditions and the following disclaimer.\n      * Redistributions in binary form must reproduce the above copyright\n        notice, this list of conditions and the following disclaimer in the\n        documentation and/or other materials provided with the distribution.\n  \n    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n    ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n    DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n    (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n    LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n    ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n    (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n    THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n\n  /*jslint vars:false, bitwise:true*/\n\n  /*jshint indent:4*/\n\n  /*global exports:true*/\n  (function clone(exports) {\n\n    var Syntax, VisitorOption, VisitorKeys, BREAK, SKIP, REMOVE;\n\n    function deepCopy(obj) {\n      var ret = {},\n          key,\n          val;\n\n      for (key in obj) {\n        if (obj.hasOwnProperty(key)) {\n          val = obj[key];\n\n          if (typeof val === 'object' && val !== null) {\n            ret[key] = deepCopy(val);\n          } else {\n            ret[key] = val;\n          }\n        }\n      }\n\n      return ret;\n    } // based on LLVM libc++ upper_bound / lower_bound\n    // MIT License\n\n\n    function upperBound(array, func) {\n      var diff, len, i, current;\n      len = array.length;\n      i = 0;\n\n      while (len) {\n        diff = len >>> 1;\n        current = i + diff;\n\n        if (func(array[current])) {\n          len = diff;\n        } else {\n          i = current + 1;\n          len -= diff + 1;\n        }\n      }\n\n      return i;\n    }\n\n    Syntax = {\n      AssignmentExpression: 'AssignmentExpression',\n      AssignmentPattern: 'AssignmentPattern',\n      ArrayExpression: 'ArrayExpression',\n      ArrayPattern: 'ArrayPattern',\n      ArrowFunctionExpression: 'ArrowFunctionExpression',\n      AwaitExpression: 'AwaitExpression',\n      // CAUTION: It's deferred to ES7.\n      BlockStatement: 'BlockStatement',\n      BinaryExpression: 'BinaryExpression',\n      BreakStatement: 'BreakStatement',\n      CallExpression: 'CallExpression',\n      CatchClause: 'CatchClause',\n      ChainExpression: 'ChainExpression',\n      ClassBody: 'ClassBody',\n      ClassDeclaration: 'ClassDeclaration',\n      ClassExpression: 'ClassExpression',\n      ComprehensionBlock: 'ComprehensionBlock',\n      // CAUTION: It's deferred to ES7.\n      ComprehensionExpression: 'ComprehensionExpression',\n      // CAUTION: It's deferred to ES7.\n      ConditionalExpression: 'ConditionalExpression',\n      ContinueStatement: 'ContinueStatement',\n      DebuggerStatement: 'DebuggerStatement',\n      DirectiveStatement: 'DirectiveStatement',\n      DoWhileStatement: 'DoWhileStatement',\n      EmptyStatement: 'EmptyStatement',\n      ExportAllDeclaration: 'ExportAllDeclaration',\n      ExportDefaultDeclaration: 'ExportDefaultDeclaration',\n      ExportNamedDeclaration: 'ExportNamedDeclaration',\n      ExportSpecifier: 'ExportSpecifier',\n      ExpressionStatement: 'ExpressionStatement',\n      ForStatement: 'ForStatement',\n      ForInStatement: 'ForInStatement',\n      ForOfStatement: 'ForOfStatement',\n      FunctionDeclaration: 'FunctionDeclaration',\n      FunctionExpression: 'FunctionExpression',\n      GeneratorExpression: 'GeneratorExpression',\n      // CAUTION: It's deferred to ES7.\n      Identifier: 'Identifier',\n      IfStatement: 'IfStatement',\n      ImportExpression: 'ImportExpression',\n      ImportDeclaration: 'ImportDeclaration',\n      ImportDefaultSpecifier: 'ImportDefaultSpecifier',\n      ImportNamespaceSpecifier: 'ImportNamespaceSpecifier',\n      ImportSpecifier: 'ImportSpecifier',\n      Literal: 'Literal',\n      LabeledStatement: 'LabeledStatement',\n      LogicalExpression: 'LogicalExpression',\n      MemberExpression: 'MemberExpression',\n      MetaProperty: 'MetaProperty',\n      MethodDefinition: 'MethodDefinition',\n      ModuleSpecifier: 'ModuleSpecifier',\n      NewExpression: 'NewExpression',\n      ObjectExpression: 'ObjectExpression',\n      ObjectPattern: 'ObjectPattern',\n      Program: 'Program',\n      Property: 'Property',\n      RestElement: 'RestElement',\n      ReturnStatement: 'ReturnStatement',\n      SequenceExpression: 'SequenceExpression',\n      SpreadElement: 'SpreadElement',\n      Super: 'Super',\n      SwitchStatement: 'SwitchStatement',\n      SwitchCase: 'SwitchCase',\n      TaggedTemplateExpression: 'TaggedTemplateExpression',\n      TemplateElement: 'TemplateElement',\n      TemplateLiteral: 'TemplateLiteral',\n      ThisExpression: 'ThisExpression',\n      ThrowStatement: 'ThrowStatement',\n      TryStatement: 'TryStatement',\n      UnaryExpression: 'UnaryExpression',\n      UpdateExpression: 'UpdateExpression',\n      VariableDeclaration: 'VariableDeclaration',\n      VariableDeclarator: 'VariableDeclarator',\n      WhileStatement: 'WhileStatement',\n      WithStatement: 'WithStatement',\n      YieldExpression: 'YieldExpression'\n    };\n    VisitorKeys = {\n      AssignmentExpression: ['left', 'right'],\n      AssignmentPattern: ['left', 'right'],\n      ArrayExpression: ['elements'],\n      ArrayPattern: ['elements'],\n      ArrowFunctionExpression: ['params', 'body'],\n      AwaitExpression: ['argument'],\n      // CAUTION: It's deferred to ES7.\n      BlockStatement: ['body'],\n      BinaryExpression: ['left', 'right'],\n      BreakStatement: ['label'],\n      CallExpression: ['callee', 'arguments'],\n      CatchClause: ['param', 'body'],\n      ChainExpression: ['expression'],\n      ClassBody: ['body'],\n      ClassDeclaration: ['id', 'superClass', 'body'],\n      ClassExpression: ['id', 'superClass', 'body'],\n      ComprehensionBlock: ['left', 'right'],\n      // CAUTION: It's deferred to ES7.\n      ComprehensionExpression: ['blocks', 'filter', 'body'],\n      // CAUTION: It's deferred to ES7.\n      ConditionalExpression: ['test', 'consequent', 'alternate'],\n      ContinueStatement: ['label'],\n      DebuggerStatement: [],\n      DirectiveStatement: [],\n      DoWhileStatement: ['body', 'test'],\n      EmptyStatement: [],\n      ExportAllDeclaration: ['source'],\n      ExportDefaultDeclaration: ['declaration'],\n      ExportNamedDeclaration: ['declaration', 'specifiers', 'source'],\n      ExportSpecifier: ['exported', 'local'],\n      ExpressionStatement: ['expression'],\n      ForStatement: ['init', 'test', 'update', 'body'],\n      ForInStatement: ['left', 'right', 'body'],\n      ForOfStatement: ['left', 'right', 'body'],\n      FunctionDeclaration: ['id', 'params', 'body'],\n      FunctionExpression: ['id', 'params', 'body'],\n      GeneratorExpression: ['blocks', 'filter', 'body'],\n      // CAUTION: It's deferred to ES7.\n      Identifier: [],\n      IfStatement: ['test', 'consequent', 'alternate'],\n      ImportExpression: ['source'],\n      ImportDeclaration: ['specifiers', 'source'],\n      ImportDefaultSpecifier: ['local'],\n      ImportNamespaceSpecifier: ['local'],\n      ImportSpecifier: ['imported', 'local'],\n      Literal: [],\n      LabeledStatement: ['label', 'body'],\n      LogicalExpression: ['left', 'right'],\n      MemberExpression: ['object', 'property'],\n      MetaProperty: ['meta', 'property'],\n      MethodDefinition: ['key', 'value'],\n      ModuleSpecifier: [],\n      NewExpression: ['callee', 'arguments'],\n      ObjectExpression: ['properties'],\n      ObjectPattern: ['properties'],\n      Program: ['body'],\n      Property: ['key', 'value'],\n      RestElement: ['argument'],\n      ReturnStatement: ['argument'],\n      SequenceExpression: ['expressions'],\n      SpreadElement: ['argument'],\n      Super: [],\n      SwitchStatement: ['discriminant', 'cases'],\n      SwitchCase: ['test', 'consequent'],\n      TaggedTemplateExpression: ['tag', 'quasi'],\n      TemplateElement: [],\n      TemplateLiteral: ['quasis', 'expressions'],\n      ThisExpression: [],\n      ThrowStatement: ['argument'],\n      TryStatement: ['block', 'handler', 'finalizer'],\n      UnaryExpression: ['argument'],\n      UpdateExpression: ['argument'],\n      VariableDeclaration: ['declarations'],\n      VariableDeclarator: ['id', 'init'],\n      WhileStatement: ['test', 'body'],\n      WithStatement: ['object', 'body'],\n      YieldExpression: ['argument']\n    }; // unique id\n\n    BREAK = {};\n    SKIP = {};\n    REMOVE = {};\n    VisitorOption = {\n      Break: BREAK,\n      Skip: SKIP,\n      Remove: REMOVE\n    };\n\n    function Reference(parent, key) {\n      this.parent = parent;\n      this.key = key;\n    }\n\n    Reference.prototype.replace = function replace(node) {\n      this.parent[this.key] = node;\n    };\n\n    Reference.prototype.remove = function remove() {\n      if (Array.isArray(this.parent)) {\n        this.parent.splice(this.key, 1);\n        return true;\n      } else {\n        this.replace(null);\n        return false;\n      }\n    };\n\n    function Element(node, path, wrap, ref) {\n      this.node = node;\n      this.path = path;\n      this.wrap = wrap;\n      this.ref = ref;\n    }\n\n    function Controller() {} // API:\n    // return property path array from root to current node\n\n\n    Controller.prototype.path = function path() {\n      var i, iz, j, jz, result, element;\n\n      function addToPath(result, path) {\n        if (Array.isArray(path)) {\n          for (j = 0, jz = path.length; j < jz; ++j) {\n            result.push(path[j]);\n          }\n        } else {\n          result.push(path);\n        }\n      } // root node\n\n\n      if (!this.__current.path) {\n        return null;\n      } // first node is sentinel, second node is root element\n\n\n      result = [];\n\n      for (i = 2, iz = this.__leavelist.length; i < iz; ++i) {\n        element = this.__leavelist[i];\n        addToPath(result, element.path);\n      }\n\n      addToPath(result, this.__current.path);\n      return result;\n    }; // API:\n    // return type of current node\n\n\n    Controller.prototype.type = function () {\n      var node = this.current();\n      return node.type || this.__current.wrap;\n    }; // API:\n    // return array of parent elements\n\n\n    Controller.prototype.parents = function parents() {\n      var i, iz, result; // first node is sentinel\n\n      result = [];\n\n      for (i = 1, iz = this.__leavelist.length; i < iz; ++i) {\n        result.push(this.__leavelist[i].node);\n      }\n\n      return result;\n    }; // API:\n    // return current node\n\n\n    Controller.prototype.current = function current() {\n      return this.__current.node;\n    };\n\n    Controller.prototype.__execute = function __execute(callback, element) {\n      var previous, result;\n      result = undefined;\n      previous = this.__current;\n      this.__current = element;\n      this.__state = null;\n\n      if (callback) {\n        result = callback.call(this, element.node, this.__leavelist[this.__leavelist.length - 1].node);\n      }\n\n      this.__current = previous;\n      return result;\n    }; // API:\n    // notify control skip / break\n\n\n    Controller.prototype.notify = function notify(flag) {\n      this.__state = flag;\n    }; // API:\n    // skip child nodes of current node\n\n\n    Controller.prototype.skip = function () {\n      this.notify(SKIP);\n    }; // API:\n    // break traversals\n\n\n    Controller.prototype['break'] = function () {\n      this.notify(BREAK);\n    }; // API:\n    // remove node\n\n\n    Controller.prototype.remove = function () {\n      this.notify(REMOVE);\n    };\n\n    Controller.prototype.__initialize = function (root, visitor) {\n      this.visitor = visitor;\n      this.root = root;\n      this.__worklist = [];\n      this.__leavelist = [];\n      this.__current = null;\n      this.__state = null;\n      this.__fallback = null;\n\n      if (visitor.fallback === 'iteration') {\n        this.__fallback = Object.keys;\n      } else if (typeof visitor.fallback === 'function') {\n        this.__fallback = visitor.fallback;\n      }\n\n      this.__keys = VisitorKeys;\n\n      if (visitor.keys) {\n        this.__keys = Object.assign(Object.create(this.__keys), visitor.keys);\n      }\n    };\n\n    function isNode(node) {\n      if (node == null) {\n        return false;\n      }\n\n      return typeof node === 'object' && typeof node.type === 'string';\n    }\n\n    function isProperty(nodeType, key) {\n      return (nodeType === Syntax.ObjectExpression || nodeType === Syntax.ObjectPattern) && 'properties' === key;\n    }\n\n    function candidateExistsInLeaveList(leavelist, candidate) {\n      for (var i = leavelist.length - 1; i >= 0; --i) {\n        if (leavelist[i].node === candidate) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n\n    Controller.prototype.traverse = function traverse(root, visitor) {\n      var worklist, leavelist, element, node, nodeType, ret, key, current, current2, candidates, candidate, sentinel;\n\n      this.__initialize(root, visitor);\n\n      sentinel = {}; // reference\n\n      worklist = this.__worklist;\n      leavelist = this.__leavelist; // initialize\n\n      worklist.push(new Element(root, null, null, null));\n      leavelist.push(new Element(null, null, null, null));\n\n      while (worklist.length) {\n        element = worklist.pop();\n\n        if (element === sentinel) {\n          element = leavelist.pop();\n          ret = this.__execute(visitor.leave, element);\n\n          if (this.__state === BREAK || ret === BREAK) {\n            return;\n          }\n\n          continue;\n        }\n\n        if (element.node) {\n          ret = this.__execute(visitor.enter, element);\n\n          if (this.__state === BREAK || ret === BREAK) {\n            return;\n          }\n\n          worklist.push(sentinel);\n          leavelist.push(element);\n\n          if (this.__state === SKIP || ret === SKIP) {\n            continue;\n          }\n\n          node = element.node;\n          nodeType = node.type || element.wrap;\n          candidates = this.__keys[nodeType];\n\n          if (!candidates) {\n            if (this.__fallback) {\n              candidates = this.__fallback(node);\n            } else {\n              throw new Error('Unknown node type ' + nodeType + '.');\n            }\n          }\n\n          current = candidates.length;\n\n          while ((current -= 1) >= 0) {\n            key = candidates[current];\n            candidate = node[key];\n\n            if (!candidate) {\n              continue;\n            }\n\n            if (Array.isArray(candidate)) {\n              current2 = candidate.length;\n\n              while ((current2 -= 1) >= 0) {\n                if (!candidate[current2]) {\n                  continue;\n                }\n\n                if (candidateExistsInLeaveList(leavelist, candidate[current2])) {\n                  continue;\n                }\n\n                if (isProperty(nodeType, candidates[current])) {\n                  element = new Element(candidate[current2], [key, current2], 'Property', null);\n                } else if (isNode(candidate[current2])) {\n                  element = new Element(candidate[current2], [key, current2], null, null);\n                } else {\n                  continue;\n                }\n\n                worklist.push(element);\n              }\n            } else if (isNode(candidate)) {\n              if (candidateExistsInLeaveList(leavelist, candidate)) {\n                continue;\n              }\n\n              worklist.push(new Element(candidate, key, null, null));\n            }\n          }\n        }\n      }\n    };\n\n    Controller.prototype.replace = function replace(root, visitor) {\n      var worklist, leavelist, node, nodeType, target, element, current, current2, candidates, candidate, sentinel, outer, key;\n\n      function removeElem(element) {\n        var i, key, nextElem, parent;\n\n        if (element.ref.remove()) {\n          // When the reference is an element of an array.\n          key = element.ref.key;\n          parent = element.ref.parent; // If removed from array, then decrease following items' keys.\n\n          i = worklist.length;\n\n          while (i--) {\n            nextElem = worklist[i];\n\n            if (nextElem.ref && nextElem.ref.parent === parent) {\n              if (nextElem.ref.key < key) {\n                break;\n              }\n\n              --nextElem.ref.key;\n            }\n          }\n        }\n      }\n\n      this.__initialize(root, visitor);\n\n      sentinel = {}; // reference\n\n      worklist = this.__worklist;\n      leavelist = this.__leavelist; // initialize\n\n      outer = {\n        root: root\n      };\n      element = new Element(root, null, null, new Reference(outer, 'root'));\n      worklist.push(element);\n      leavelist.push(element);\n\n      while (worklist.length) {\n        element = worklist.pop();\n\n        if (element === sentinel) {\n          element = leavelist.pop();\n          target = this.__execute(visitor.leave, element); // node may be replaced with null,\n          // so distinguish between undefined and null in this place\n\n          if (target !== undefined && target !== BREAK && target !== SKIP && target !== REMOVE) {\n            // replace\n            element.ref.replace(target);\n          }\n\n          if (this.__state === REMOVE || target === REMOVE) {\n            removeElem(element);\n          }\n\n          if (this.__state === BREAK || target === BREAK) {\n            return outer.root;\n          }\n\n          continue;\n        }\n\n        target = this.__execute(visitor.enter, element); // node may be replaced with null,\n        // so distinguish between undefined and null in this place\n\n        if (target !== undefined && target !== BREAK && target !== SKIP && target !== REMOVE) {\n          // replace\n          element.ref.replace(target);\n          element.node = target;\n        }\n\n        if (this.__state === REMOVE || target === REMOVE) {\n          removeElem(element);\n          element.node = null;\n        }\n\n        if (this.__state === BREAK || target === BREAK) {\n          return outer.root;\n        } // node may be null\n\n\n        node = element.node;\n\n        if (!node) {\n          continue;\n        }\n\n        worklist.push(sentinel);\n        leavelist.push(element);\n\n        if (this.__state === SKIP || target === SKIP) {\n          continue;\n        }\n\n        nodeType = node.type || element.wrap;\n        candidates = this.__keys[nodeType];\n\n        if (!candidates) {\n          if (this.__fallback) {\n            candidates = this.__fallback(node);\n          } else {\n            throw new Error('Unknown node type ' + nodeType + '.');\n          }\n        }\n\n        current = candidates.length;\n\n        while ((current -= 1) >= 0) {\n          key = candidates[current];\n          candidate = node[key];\n\n          if (!candidate) {\n            continue;\n          }\n\n          if (Array.isArray(candidate)) {\n            current2 = candidate.length;\n\n            while ((current2 -= 1) >= 0) {\n              if (!candidate[current2]) {\n                continue;\n              }\n\n              if (isProperty(nodeType, candidates[current])) {\n                element = new Element(candidate[current2], [key, current2], 'Property', new Reference(candidate, current2));\n              } else if (isNode(candidate[current2])) {\n                element = new Element(candidate[current2], [key, current2], null, new Reference(candidate, current2));\n              } else {\n                continue;\n              }\n\n              worklist.push(element);\n            }\n          } else if (isNode(candidate)) {\n            worklist.push(new Element(candidate, key, null, new Reference(node, key)));\n          }\n        }\n      }\n\n      return outer.root;\n    };\n\n    function traverse(root, visitor) {\n      var controller = new Controller();\n      return controller.traverse(root, visitor);\n    }\n\n    function replace(root, visitor) {\n      var controller = new Controller();\n      return controller.replace(root, visitor);\n    }\n\n    function extendCommentRange(comment, tokens) {\n      var target;\n      target = upperBound(tokens, function search(token) {\n        return token.range[0] > comment.range[0];\n      });\n      comment.extendedRange = [comment.range[0], comment.range[1]];\n\n      if (target !== tokens.length) {\n        comment.extendedRange[1] = tokens[target].range[0];\n      }\n\n      target -= 1;\n\n      if (target >= 0) {\n        comment.extendedRange[0] = tokens[target].range[1];\n      }\n\n      return comment;\n    }\n\n    function attachComments(tree, providedComments, tokens) {\n      // At first, we should calculate extended comment ranges.\n      var comments = [],\n          comment,\n          len,\n          i,\n          cursor;\n\n      if (!tree.range) {\n        throw new Error('attachComments needs range information');\n      } // tokens array is empty, we attach comments to tree as 'leadingComments'\n\n\n      if (!tokens.length) {\n        if (providedComments.length) {\n          for (i = 0, len = providedComments.length; i < len; i += 1) {\n            comment = deepCopy(providedComments[i]);\n            comment.extendedRange = [0, tree.range[0]];\n            comments.push(comment);\n          }\n\n          tree.leadingComments = comments;\n        }\n\n        return tree;\n      }\n\n      for (i = 0, len = providedComments.length; i < len; i += 1) {\n        comments.push(extendCommentRange(deepCopy(providedComments[i]), tokens));\n      } // This is based on John Freeman's implementation.\n\n\n      cursor = 0;\n      traverse(tree, {\n        enter: function (node) {\n          var comment;\n\n          while (cursor < comments.length) {\n            comment = comments[cursor];\n\n            if (comment.extendedRange[1] > node.range[0]) {\n              break;\n            }\n\n            if (comment.extendedRange[1] === node.range[0]) {\n              if (!node.leadingComments) {\n                node.leadingComments = [];\n              }\n\n              node.leadingComments.push(comment);\n              comments.splice(cursor, 1);\n            } else {\n              cursor += 1;\n            }\n          } // already out of owned node\n\n\n          if (cursor === comments.length) {\n            return VisitorOption.Break;\n          }\n\n          if (comments[cursor].extendedRange[0] > node.range[1]) {\n            return VisitorOption.Skip;\n          }\n        }\n      });\n      cursor = 0;\n      traverse(tree, {\n        leave: function (node) {\n          var comment;\n\n          while (cursor < comments.length) {\n            comment = comments[cursor];\n\n            if (node.range[1] < comment.extendedRange[0]) {\n              break;\n            }\n\n            if (node.range[1] === comment.extendedRange[0]) {\n              if (!node.trailingComments) {\n                node.trailingComments = [];\n              }\n\n              node.trailingComments.push(comment);\n              comments.splice(cursor, 1);\n            } else {\n              cursor += 1;\n            }\n          } // already out of owned node\n\n\n          if (cursor === comments.length) {\n            return VisitorOption.Break;\n          }\n\n          if (comments[cursor].extendedRange[0] > node.range[1]) {\n            return VisitorOption.Skip;\n          }\n        }\n      });\n      return tree;\n    }\n\n    exports.Syntax = Syntax;\n    exports.traverse = traverse;\n    exports.replace = replace;\n    exports.attachComments = attachComments;\n    exports.VisitorKeys = VisitorKeys;\n    exports.VisitorOption = VisitorOption;\n    exports.Controller = Controller;\n\n    exports.cloneEnvironment = function () {\n      return clone({});\n    };\n\n    return exports;\n  })(exports);\n  /* vim: set sw=4 ts=4 et tw=80 : */\n\n});\n\nvar parser = createCommonjsModule(function (module) {\n  /*\n   * Generated by PEG.js 0.10.0.\n   *\n   * http://pegjs.org/\n   */\n  (function (root, factory) {\n    if ( module.exports) {\n      module.exports = factory();\n    }\n  })(commonjsGlobal, function () {\n\n    function peg$subclass(child, parent) {\n      function ctor() {\n        this.constructor = child;\n      }\n\n      ctor.prototype = parent.prototype;\n      child.prototype = new ctor();\n    }\n\n    function peg$SyntaxError(message, expected, found, location) {\n      this.message = message;\n      this.expected = expected;\n      this.found = found;\n      this.location = location;\n      this.name = \"SyntaxError\";\n\n      if (typeof Error.captureStackTrace === \"function\") {\n        Error.captureStackTrace(this, peg$SyntaxError);\n      }\n    }\n\n    peg$subclass(peg$SyntaxError, Error);\n\n    peg$SyntaxError.buildMessage = function (expected, found) {\n      var DESCRIBE_EXPECTATION_FNS = {\n        literal: function literal(expectation) {\n          return \"\\\"\" + literalEscape(expectation.text) + \"\\\"\";\n        },\n        \"class\": function _class(expectation) {\n          var escapedParts = \"\",\n              i;\n\n          for (i = 0; i < expectation.parts.length; i++) {\n            escapedParts += expectation.parts[i] instanceof Array ? classEscape(expectation.parts[i][0]) + \"-\" + classEscape(expectation.parts[i][1]) : classEscape(expectation.parts[i]);\n          }\n\n          return \"[\" + (expectation.inverted ? \"^\" : \"\") + escapedParts + \"]\";\n        },\n        any: function any(expectation) {\n          return \"any character\";\n        },\n        end: function end(expectation) {\n          return \"end of input\";\n        },\n        other: function other(expectation) {\n          return expectation.description;\n        }\n      };\n\n      function hex(ch) {\n        return ch.charCodeAt(0).toString(16).toUpperCase();\n      }\n\n      function literalEscape(s) {\n        return s.replace(/\\\\/g, '\\\\\\\\').replace(/\"/g, '\\\\\"').replace(/\\0/g, '\\\\0').replace(/\\t/g, '\\\\t').replace(/\\n/g, '\\\\n').replace(/\\r/g, '\\\\r').replace(/[\\x00-\\x0F]/g, function (ch) {\n          return '\\\\x0' + hex(ch);\n        }).replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function (ch) {\n          return '\\\\x' + hex(ch);\n        });\n      }\n\n      function classEscape(s) {\n        return s.replace(/\\\\/g, '\\\\\\\\').replace(/\\]/g, '\\\\]').replace(/\\^/g, '\\\\^').replace(/-/g, '\\\\-').replace(/\\0/g, '\\\\0').replace(/\\t/g, '\\\\t').replace(/\\n/g, '\\\\n').replace(/\\r/g, '\\\\r').replace(/[\\x00-\\x0F]/g, function (ch) {\n          return '\\\\x0' + hex(ch);\n        }).replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function (ch) {\n          return '\\\\x' + hex(ch);\n        });\n      }\n\n      function describeExpectation(expectation) {\n        return DESCRIBE_EXPECTATION_FNS[expectation.type](expectation);\n      }\n\n      function describeExpected(expected) {\n        var descriptions = new Array(expected.length),\n            i,\n            j;\n\n        for (i = 0; i < expected.length; i++) {\n          descriptions[i] = describeExpectation(expected[i]);\n        }\n\n        descriptions.sort();\n\n        if (descriptions.length > 0) {\n          for (i = 1, j = 1; i < descriptions.length; i++) {\n            if (descriptions[i - 1] !== descriptions[i]) {\n              descriptions[j] = descriptions[i];\n              j++;\n            }\n          }\n\n          descriptions.length = j;\n        }\n\n        switch (descriptions.length) {\n          case 1:\n            return descriptions[0];\n\n          case 2:\n            return descriptions[0] + \" or \" + descriptions[1];\n\n          default:\n            return descriptions.slice(0, -1).join(\", \") + \", or \" + descriptions[descriptions.length - 1];\n        }\n      }\n\n      function describeFound(found) {\n        return found ? \"\\\"\" + literalEscape(found) + \"\\\"\" : \"end of input\";\n      }\n\n      return \"Expected \" + describeExpected(expected) + \" but \" + describeFound(found) + \" found.\";\n    };\n\n    function peg$parse(input, options) {\n      options = options !== void 0 ? options : {};\n\n      var peg$FAILED = {},\n          peg$startRuleFunctions = {\n        start: peg$parsestart\n      },\n          peg$startRuleFunction = peg$parsestart,\n          peg$c0 = function peg$c0(ss) {\n        return ss.length === 1 ? ss[0] : {\n          type: 'matches',\n          selectors: ss\n        };\n      },\n          peg$c1 = function peg$c1() {\n        return void 0;\n      },\n          peg$c2 = \" \",\n          peg$c3 = peg$literalExpectation(\" \", false),\n          peg$c4 = /^[^ [\\],():#!=><~+.]/,\n          peg$c5 = peg$classExpectation([\" \", \"[\", \"]\", \",\", \"(\", \")\", \":\", \"#\", \"!\", \"=\", \">\", \"<\", \"~\", \"+\", \".\"], true, false),\n          peg$c6 = function peg$c6(i) {\n        return i.join('');\n      },\n          peg$c7 = \">\",\n          peg$c8 = peg$literalExpectation(\">\", false),\n          peg$c9 = function peg$c9() {\n        return 'child';\n      },\n          peg$c10 = \"~\",\n          peg$c11 = peg$literalExpectation(\"~\", false),\n          peg$c12 = function peg$c12() {\n        return 'sibling';\n      },\n          peg$c13 = \"+\",\n          peg$c14 = peg$literalExpectation(\"+\", false),\n          peg$c15 = function peg$c15() {\n        return 'adjacent';\n      },\n          peg$c16 = function peg$c16() {\n        return 'descendant';\n      },\n          peg$c17 = \",\",\n          peg$c18 = peg$literalExpectation(\",\", false),\n          peg$c19 = function peg$c19(s, ss) {\n        return [s].concat(ss.map(function (s) {\n          return s[3];\n        }));\n      },\n          peg$c20 = function peg$c20(a, ops) {\n        return ops.reduce(function (memo, rhs) {\n          return {\n            type: rhs[0],\n            left: memo,\n            right: rhs[1]\n          };\n        }, a);\n      },\n          peg$c21 = \"!\",\n          peg$c22 = peg$literalExpectation(\"!\", false),\n          peg$c23 = function peg$c23(subject, as) {\n        var b = as.length === 1 ? as[0] : {\n          type: 'compound',\n          selectors: as\n        };\n        if (subject) b.subject = true;\n        return b;\n      },\n          peg$c24 = \"*\",\n          peg$c25 = peg$literalExpectation(\"*\", false),\n          peg$c26 = function peg$c26(a) {\n        return {\n          type: 'wildcard',\n          value: a\n        };\n      },\n          peg$c27 = \"#\",\n          peg$c28 = peg$literalExpectation(\"#\", false),\n          peg$c29 = function peg$c29(i) {\n        return {\n          type: 'identifier',\n          value: i\n        };\n      },\n          peg$c30 = \"[\",\n          peg$c31 = peg$literalExpectation(\"[\", false),\n          peg$c32 = \"]\",\n          peg$c33 = peg$literalExpectation(\"]\", false),\n          peg$c34 = function peg$c34(v) {\n        return v;\n      },\n          peg$c35 = /^[><!]/,\n          peg$c36 = peg$classExpectation([\">\", \"<\", \"!\"], false, false),\n          peg$c37 = \"=\",\n          peg$c38 = peg$literalExpectation(\"=\", false),\n          peg$c39 = function peg$c39(a) {\n        return (a || '') + '=';\n      },\n          peg$c40 = /^[><]/,\n          peg$c41 = peg$classExpectation([\">\", \"<\"], false, false),\n          peg$c42 = \".\",\n          peg$c43 = peg$literalExpectation(\".\", false),\n          peg$c44 = function peg$c44(a, as) {\n        return [].concat.apply([a], as).join('');\n      },\n          peg$c45 = function peg$c45(name, op, value) {\n        return {\n          type: 'attribute',\n          name: name,\n          operator: op,\n          value: value\n        };\n      },\n          peg$c46 = function peg$c46(name) {\n        return {\n          type: 'attribute',\n          name: name\n        };\n      },\n          peg$c47 = \"\\\"\",\n          peg$c48 = peg$literalExpectation(\"\\\"\", false),\n          peg$c49 = /^[^\\\\\"]/,\n          peg$c50 = peg$classExpectation([\"\\\\\", \"\\\"\"], true, false),\n          peg$c51 = \"\\\\\",\n          peg$c52 = peg$literalExpectation(\"\\\\\", false),\n          peg$c53 = peg$anyExpectation(),\n          peg$c54 = function peg$c54(a, b) {\n        return a + b;\n      },\n          peg$c55 = function peg$c55(d) {\n        return {\n          type: 'literal',\n          value: strUnescape(d.join(''))\n        };\n      },\n          peg$c56 = \"'\",\n          peg$c57 = peg$literalExpectation(\"'\", false),\n          peg$c58 = /^[^\\\\']/,\n          peg$c59 = peg$classExpectation([\"\\\\\", \"'\"], true, false),\n          peg$c60 = /^[0-9]/,\n          peg$c61 = peg$classExpectation([[\"0\", \"9\"]], false, false),\n          peg$c62 = function peg$c62(a, b) {\n        // Can use `a.flat().join('')` once supported\n        var leadingDecimals = a ? [].concat.apply([], a).join('') : '';\n        return {\n          type: 'literal',\n          value: parseFloat(leadingDecimals + b.join(''))\n        };\n      },\n          peg$c63 = function peg$c63(i) {\n        return {\n          type: 'literal',\n          value: i\n        };\n      },\n          peg$c64 = \"type(\",\n          peg$c65 = peg$literalExpectation(\"type(\", false),\n          peg$c66 = /^[^ )]/,\n          peg$c67 = peg$classExpectation([\" \", \")\"], true, false),\n          peg$c68 = \")\",\n          peg$c69 = peg$literalExpectation(\")\", false),\n          peg$c70 = function peg$c70(t) {\n        return {\n          type: 'type',\n          value: t.join('')\n        };\n      },\n          peg$c71 = /^[imsu]/,\n          peg$c72 = peg$classExpectation([\"i\", \"m\", \"s\", \"u\"], false, false),\n          peg$c73 = \"/\",\n          peg$c74 = peg$literalExpectation(\"/\", false),\n          peg$c75 = /^[^\\/]/,\n          peg$c76 = peg$classExpectation([\"/\"], true, false),\n          peg$c77 = function peg$c77(d, flgs) {\n        return {\n          type: 'regexp',\n          value: new RegExp(d.join(''), flgs ? flgs.join('') : '')\n        };\n      },\n          peg$c78 = function peg$c78(i, is) {\n        return {\n          type: 'field',\n          name: is.reduce(function (memo, p) {\n            return memo + p[0] + p[1];\n          }, i)\n        };\n      },\n          peg$c79 = \":not(\",\n          peg$c80 = peg$literalExpectation(\":not(\", false),\n          peg$c81 = function peg$c81(ss) {\n        return {\n          type: 'not',\n          selectors: ss\n        };\n      },\n          peg$c82 = \":matches(\",\n          peg$c83 = peg$literalExpectation(\":matches(\", false),\n          peg$c84 = function peg$c84(ss) {\n        return {\n          type: 'matches',\n          selectors: ss\n        };\n      },\n          peg$c85 = \":has(\",\n          peg$c86 = peg$literalExpectation(\":has(\", false),\n          peg$c87 = function peg$c87(ss) {\n        return {\n          type: 'has',\n          selectors: ss\n        };\n      },\n          peg$c88 = \":first-child\",\n          peg$c89 = peg$literalExpectation(\":first-child\", false),\n          peg$c90 = function peg$c90() {\n        return nth(1);\n      },\n          peg$c91 = \":last-child\",\n          peg$c92 = peg$literalExpectation(\":last-child\", false),\n          peg$c93 = function peg$c93() {\n        return nthLast(1);\n      },\n          peg$c94 = \":nth-child(\",\n          peg$c95 = peg$literalExpectation(\":nth-child(\", false),\n          peg$c96 = function peg$c96(n) {\n        return nth(parseInt(n.join(''), 10));\n      },\n          peg$c97 = \":nth-last-child(\",\n          peg$c98 = peg$literalExpectation(\":nth-last-child(\", false),\n          peg$c99 = function peg$c99(n) {\n        return nthLast(parseInt(n.join(''), 10));\n      },\n          peg$c100 = \":\",\n          peg$c101 = peg$literalExpectation(\":\", false),\n          peg$c102 = \"statement\",\n          peg$c103 = peg$literalExpectation(\"statement\", true),\n          peg$c104 = \"expression\",\n          peg$c105 = peg$literalExpectation(\"expression\", true),\n          peg$c106 = \"declaration\",\n          peg$c107 = peg$literalExpectation(\"declaration\", true),\n          peg$c108 = \"function\",\n          peg$c109 = peg$literalExpectation(\"function\", true),\n          peg$c110 = \"pattern\",\n          peg$c111 = peg$literalExpectation(\"pattern\", true),\n          peg$c112 = function peg$c112(c) {\n        return {\n          type: 'class',\n          name: c\n        };\n      },\n          peg$currPos = 0,\n          peg$posDetailsCache = [{\n        line: 1,\n        column: 1\n      }],\n          peg$maxFailPos = 0,\n          peg$maxFailExpected = [],\n          peg$resultsCache = {},\n          peg$result;\n\n      if (\"startRule\" in options) {\n        if (!(options.startRule in peg$startRuleFunctions)) {\n          throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n        }\n\n        peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n      }\n\n      function peg$literalExpectation(text, ignoreCase) {\n        return {\n          type: \"literal\",\n          text: text,\n          ignoreCase: ignoreCase\n        };\n      }\n\n      function peg$classExpectation(parts, inverted, ignoreCase) {\n        return {\n          type: \"class\",\n          parts: parts,\n          inverted: inverted,\n          ignoreCase: ignoreCase\n        };\n      }\n\n      function peg$anyExpectation() {\n        return {\n          type: \"any\"\n        };\n      }\n\n      function peg$endExpectation() {\n        return {\n          type: \"end\"\n        };\n      }\n\n      function peg$computePosDetails(pos) {\n        var details = peg$posDetailsCache[pos],\n            p;\n\n        if (details) {\n          return details;\n        } else {\n          p = pos - 1;\n\n          while (!peg$posDetailsCache[p]) {\n            p--;\n          }\n\n          details = peg$posDetailsCache[p];\n          details = {\n            line: details.line,\n            column: details.column\n          };\n\n          while (p < pos) {\n            if (input.charCodeAt(p) === 10) {\n              details.line++;\n              details.column = 1;\n            } else {\n              details.column++;\n            }\n\n            p++;\n          }\n\n          peg$posDetailsCache[pos] = details;\n          return details;\n        }\n      }\n\n      function peg$computeLocation(startPos, endPos) {\n        var startPosDetails = peg$computePosDetails(startPos),\n            endPosDetails = peg$computePosDetails(endPos);\n        return {\n          start: {\n            offset: startPos,\n            line: startPosDetails.line,\n            column: startPosDetails.column\n          },\n          end: {\n            offset: endPos,\n            line: endPosDetails.line,\n            column: endPosDetails.column\n          }\n        };\n      }\n\n      function peg$fail(expected) {\n        if (peg$currPos < peg$maxFailPos) {\n          return;\n        }\n\n        if (peg$currPos > peg$maxFailPos) {\n          peg$maxFailPos = peg$currPos;\n          peg$maxFailExpected = [];\n        }\n\n        peg$maxFailExpected.push(expected);\n      }\n\n      function peg$buildStructuredError(expected, found, location) {\n        return new peg$SyntaxError(peg$SyntaxError.buildMessage(expected, found), expected, found, location);\n      }\n\n      function peg$parsestart() {\n        var s0, s1, s2, s3;\n        var key = peg$currPos * 30 + 0,\n            cached = peg$resultsCache[key];\n\n        if (cached) {\n          peg$currPos = cached.nextPos;\n          return cached.result;\n        }\n\n        s0 = peg$currPos;\n        s1 = peg$parse_();\n\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parseselectors();\n\n          if (s2 !== peg$FAILED) {\n            s3 = peg$parse_();\n\n            if (s3 !== peg$FAILED) {\n              s1 = peg$c0(s2);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          s1 = peg$parse_();\n\n          if (s1 !== peg$FAILED) {\n            s1 = peg$c1();\n          }\n\n          s0 = s1;\n        }\n\n        peg$resultsCache[key] = {\n          nextPos: peg$currPos,\n          result: s0\n        };\n        return s0;\n      }\n\n      function peg$parse_() {\n        var s0, s1;\n        var key = peg$currPos * 30 + 1,\n            cached = peg$resultsCache[key];\n\n        if (cached) {\n          peg$currPos = cached.nextPos;\n          return cached.result;\n        }\n\n        s0 = [];\n\n        if (input.charCodeAt(peg$currPos) === 32) {\n          s1 = peg$c2;\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n\n          {\n            peg$fail(peg$c3);\n          }\n        }\n\n        while (s1 !== peg$FAILED) {\n          s0.push(s1);\n\n          if (input.charCodeAt(peg$currPos) === 32) {\n            s1 = peg$c2;\n            peg$currPos++;\n          } else {\n            s1 = peg$FAILED;\n\n            {\n              peg$fail(peg$c3);\n            }\n          }\n        }\n\n        peg$resultsCache[key] = {\n          nextPos: peg$currPos,\n          result: s0\n        };\n        return s0;\n      }\n\n      function peg$parseidentifierName() {\n        var s0, s1, s2;\n        var key = peg$currPos * 30 + 2,\n            cached = peg$resultsCache[key];\n\n        if (cached) {\n          peg$currPos = cached.nextPos;\n          return cached.result;\n        }\n\n        s0 = peg$currPos;\n        s1 = [];\n\n        if (peg$c4.test(input.charAt(peg$currPos))) {\n          s2 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n\n          {\n            peg$fail(peg$c5);\n          }\n        }\n\n        if (s2 !== peg$FAILED) {\n          while (s2 !== peg$FAILED) {\n            s1.push(s2);\n\n            if (peg$c4.test(input.charAt(peg$currPos))) {\n              s2 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s2 = peg$FAILED;\n\n              {\n                peg$fail(peg$c5);\n              }\n            }\n          }\n        } else {\n          s1 = peg$FAILED;\n        }\n\n        if (s1 !== peg$FAILED) {\n          s1 = peg$c6(s1);\n        }\n\n        s0 = s1;\n        peg$resultsCache[key] = {\n          nextPos: peg$currPos,\n          result: s0\n        };\n        return s0;\n      }\n\n      function peg$parsebinaryOp() {\n        var s0, s1, s2, s3;\n        var key = peg$currPos * 30 + 3,\n            cached = peg$resultsCache[key];\n\n        if (cached) {\n          peg$currPos = cached.nextPos;\n          return cached.result;\n        }\n\n        s0 = peg$currPos;\n        s1 = peg$parse_();\n\n        if (s1 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 62) {\n            s2 = peg$c7;\n            peg$currPos++;\n          } else {\n            s2 = peg$FAILED;\n\n            {\n              peg$fail(peg$c8);\n            }\n          }\n\n          if (s2 !== peg$FAILED) {\n            s3 = peg$parse_();\n\n            if (s3 !== peg$FAILED) {\n              s1 = peg$c9();\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          s1 = peg$parse_();\n\n          if (s1 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 126) {\n              s2 = peg$c10;\n              peg$currPos++;\n            } else {\n              s2 = peg$FAILED;\n\n              {\n                peg$fail(peg$c11);\n              }\n            }\n\n            if (s2 !== peg$FAILED) {\n              s3 = peg$parse_();\n\n              if (s3 !== peg$FAILED) {\n                s1 = peg$c12();\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n\n          if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            s1 = peg$parse_();\n\n            if (s1 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 43) {\n                s2 = peg$c13;\n                peg$currPos++;\n              } else {\n                s2 = peg$FAILED;\n\n                {\n                  peg$fail(peg$c14);\n                }\n              }\n\n              if (s2 !== peg$FAILED) {\n                s3 = peg$parse_();\n\n                if (s3 !== peg$FAILED) {\n                  s1 = peg$c15();\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n\n            if (s0 === peg$FAILED) {\n              s0 = peg$currPos;\n\n              if (input.charCodeAt(peg$currPos) === 32) {\n                s1 = peg$c2;\n                peg$currPos++;\n              } else {\n                s1 = peg$FAILED;\n\n                {\n                  peg$fail(peg$c3);\n                }\n              }\n\n              if (s1 !== peg$FAILED) {\n                s2 = peg$parse_();\n\n                if (s2 !== peg$FAILED) {\n                  s1 = peg$c16();\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            }\n          }\n        }\n\n        peg$resultsCache[key] = {\n          nextPos: peg$currPos,\n          result: s0\n        };\n        return s0;\n      }\n\n      function peg$parseselectors() {\n        var s0, s1, s2, s3, s4, s5, s6, s7;\n        var key = peg$currPos * 30 + 4,\n            cached = peg$resultsCache[key];\n\n        if (cached) {\n          peg$currPos = cached.nextPos;\n          return cached.result;\n        }\n\n        s0 = peg$currPos;\n        s1 = peg$parseselector();\n\n        if (s1 !== peg$FAILED) {\n          s2 = [];\n          s3 = peg$currPos;\n          s4 = peg$parse_();\n\n          if (s4 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 44) {\n              s5 = peg$c17;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n\n              {\n                peg$fail(peg$c18);\n              }\n            }\n\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parse_();\n\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parseselector();\n\n                if (s7 !== peg$FAILED) {\n                  s4 = [s4, s5, s6, s7];\n                  s3 = s4;\n                } else {\n                  peg$currPos = s3;\n                  s3 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n\n          while (s3 !== peg$FAILED) {\n            s2.push(s3);\n            s3 = peg$currPos;\n            s4 = peg$parse_();\n\n            if (s4 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 44) {\n                s5 = peg$c17;\n                peg$currPos++;\n              } else {\n                s5 = peg$FAILED;\n\n                {\n                  peg$fail(peg$c18);\n                }\n              }\n\n              if (s5 !== peg$FAILED) {\n                s6 = peg$parse_();\n\n                if (s6 !== peg$FAILED) {\n                  s7 = peg$parseselector();\n\n                  if (s7 !== peg$FAILED) {\n                    s4 = [s4, s5, s6, s7];\n                    s3 = s4;\n                  } else {\n                    peg$currPos = s3;\n                    s3 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s3;\n                  s3 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          }\n\n          if (s2 !== peg$FAILED) {\n            s1 = peg$c19(s1, s2);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n\n        peg$resultsCache[key] = {\n          nextPos: peg$currPos,\n          result: s0\n        };\n        return s0;\n      }\n\n      function peg$parseselector() {\n        var s0, s1, s2, s3, s4, s5;\n        var key = peg$currPos * 30 + 5,\n            cached = peg$resultsCache[key];\n\n        if (cached) {\n          peg$currPos = cached.nextPos;\n          return cached.result;\n        }\n\n        s0 = peg$currPos;\n        s1 = peg$parsesequence();\n\n        if (s1 !== peg$FAILED) {\n          s2 = [];\n          s3 = peg$currPos;\n          s4 = peg$parsebinaryOp();\n\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parsesequence();\n\n            if (s5 !== peg$FAILED) {\n              s4 = [s4, s5];\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n\n          while (s3 !== peg$FAILED) {\n            s2.push(s3);\n            s3 = peg$currPos;\n            s4 = peg$parsebinaryOp();\n\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parsesequence();\n\n              if (s5 !== peg$FAILED) {\n                s4 = [s4, s5];\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          }\n\n          if (s2 !== peg$FAILED) {\n            s1 = peg$c20(s1, s2);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n\n        peg$resultsCache[key] = {\n          nextPos: peg$currPos,\n          result: s0\n        };\n        return s0;\n      }\n\n      function peg$parsesequence() {\n        var s0, s1, s2, s3;\n        var key = peg$currPos * 30 + 6,\n            cached = peg$resultsCache[key];\n\n        if (cached) {\n          peg$currPos = cached.nextPos;\n          return cached.result;\n        }\n\n        s0 = peg$currPos;\n\n        if (input.charCodeAt(peg$currPos) === 33) {\n          s1 = peg$c21;\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n\n          {\n            peg$fail(peg$c22);\n          }\n        }\n\n        if (s1 === peg$FAILED) {\n          s1 = null;\n        }\n\n        if (s1 !== peg$FAILED) {\n          s2 = [];\n          s3 = peg$parseatom();\n\n          if (s3 !== peg$FAILED) {\n            while (s3 !== peg$FAILED) {\n              s2.push(s3);\n              s3 = peg$parseatom();\n            }\n          } else {\n            s2 = peg$FAILED;\n          }\n\n          if (s2 !== peg$FAILED) {\n            s1 = peg$c23(s1, s2);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n\n        peg$resultsCache[key] = {\n          nextPos: peg$currPos,\n          result: s0\n        };\n        return s0;\n      }\n\n      function peg$parseatom() {\n        var s0;\n        var key = peg$currPos * 30 + 7,\n            cached = peg$resultsCache[key];\n\n        if (cached) {\n          peg$currPos = cached.nextPos;\n          return cached.result;\n        }\n\n        s0 = peg$parsewildcard();\n\n        if (s0 === peg$FAILED) {\n          s0 = peg$parseidentifier();\n\n          if (s0 === peg$FAILED) {\n            s0 = peg$parseattr();\n\n            if (s0 === peg$FAILED) {\n              s0 = peg$parsefield();\n\n              if (s0 === peg$FAILED) {\n                s0 = peg$parsenegation();\n\n                if (s0 === peg$FAILED) {\n                  s0 = peg$parsematches();\n\n                  if (s0 === peg$FAILED) {\n                    s0 = peg$parsehas();\n\n                    if (s0 === peg$FAILED) {\n                      s0 = peg$parsefirstChild();\n\n                      if (s0 === peg$FAILED) {\n                        s0 = peg$parselastChild();\n\n                        if (s0 === peg$FAILED) {\n                          s0 = peg$parsenthChild();\n\n                          if (s0 === peg$FAILED) {\n                            s0 = peg$parsenthLastChild();\n\n                            if (s0 === peg$FAILED) {\n                              s0 = peg$parseclass();\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n\n        peg$resultsCache[key] = {\n          nextPos: peg$currPos,\n          result: s0\n        };\n        return s0;\n      }\n\n      function peg$parsewildcard() {\n        var s0, s1;\n        var key = peg$currPos * 30 + 8,\n            cached = peg$resultsCache[key];\n\n        if (cached) {\n          peg$currPos = cached.nextPos;\n          return cached.result;\n        }\n\n        s0 = peg$currPos;\n\n        if (input.charCodeAt(peg$currPos) === 42) {\n          s1 = peg$c24;\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n\n          {\n            peg$fail(peg$c25);\n          }\n        }\n\n        if (s1 !== peg$FAILED) {\n          s1 = peg$c26(s1);\n        }\n\n        s0 = s1;\n        peg$resultsCache[key] = {\n          nextPos: peg$currPos,\n          result: s0\n        };\n        return s0;\n      }\n\n      function peg$parseidentifier() {\n        var s0, s1, s2;\n        var key = peg$currPos * 30 + 9,\n            cached = peg$resultsCache[key];\n\n        if (cached) {\n          peg$currPos = cached.nextPos;\n          return cached.result;\n        }\n\n        s0 = peg$currPos;\n\n        if (input.charCodeAt(peg$currPos) === 35) {\n          s1 = peg$c27;\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n\n          {\n            peg$fail(peg$c28);\n          }\n        }\n\n        if (s1 === peg$FAILED) {\n          s1 = null;\n        }\n\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parseidentifierName();\n\n          if (s2 !== peg$FAILED) {\n            s1 = peg$c29(s2);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n\n        peg$resultsCache[key] = {\n          nextPos: peg$currPos,\n          result: s0\n        };\n        return s0;\n      }\n\n      function peg$parseattr() {\n        var s0, s1, s2, s3, s4, s5;\n        var key = peg$currPos * 30 + 10,\n            cached = peg$resultsCache[key];\n\n        if (cached) {\n          peg$currPos = cached.nextPos;\n          return cached.result;\n        }\n\n        s0 = peg$currPos;\n\n        if (input.charCodeAt(peg$currPos) === 91) {\n          s1 = peg$c30;\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n\n          {\n            peg$fail(peg$c31);\n          }\n        }\n\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parse_();\n\n          if (s2 !== peg$FAILED) {\n            s3 = peg$parseattrValue();\n\n            if (s3 !== peg$FAILED) {\n              s4 = peg$parse_();\n\n              if (s4 !== peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 93) {\n                  s5 = peg$c32;\n                  peg$currPos++;\n                } else {\n                  s5 = peg$FAILED;\n\n                  {\n                    peg$fail(peg$c33);\n                  }\n                }\n\n                if (s5 !== peg$FAILED) {\n                  s1 = peg$c34(s3);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n\n        peg$resultsCache[key] = {\n          nextPos: peg$currPos,\n          result: s0\n        };\n        return s0;\n      }\n\n      function peg$parseattrOps() {\n        var s0, s1, s2;\n        var key = peg$currPos * 30 + 11,\n            cached = peg$resultsCache[key];\n\n        if (cached) {\n          peg$currPos = cached.nextPos;\n          return cached.result;\n        }\n\n        s0 = peg$currPos;\n\n        if (peg$c35.test(input.charAt(peg$currPos))) {\n          s1 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n\n          {\n            peg$fail(peg$c36);\n          }\n        }\n\n        if (s1 === peg$FAILED) {\n          s1 = null;\n        }\n\n        if (s1 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 61) {\n            s2 = peg$c37;\n            peg$currPos++;\n          } else {\n            s2 = peg$FAILED;\n\n            {\n              peg$fail(peg$c38);\n            }\n          }\n\n          if (s2 !== peg$FAILED) {\n            s1 = peg$c39(s1);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n\n        if (s0 === peg$FAILED) {\n          if (peg$c40.test(input.charAt(peg$currPos))) {\n            s0 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s0 = peg$FAILED;\n\n            {\n              peg$fail(peg$c41);\n            }\n          }\n        }\n\n        peg$resultsCache[key] = {\n          nextPos: peg$currPos,\n          result: s0\n        };\n        return s0;\n      }\n\n      function peg$parseattrEqOps() {\n        var s0, s1, s2;\n        var key = peg$currPos * 30 + 12,\n            cached = peg$resultsCache[key];\n\n        if (cached) {\n          peg$currPos = cached.nextPos;\n          return cached.result;\n        }\n\n        s0 = peg$currPos;\n\n        if (input.charCodeAt(peg$currPos) === 33) {\n          s1 = peg$c21;\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n\n          {\n            peg$fail(peg$c22);\n          }\n        }\n\n        if (s1 === peg$FAILED) {\n          s1 = null;\n        }\n\n        if (s1 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 61) {\n            s2 = peg$c37;\n            peg$currPos++;\n          } else {\n            s2 = peg$FAILED;\n\n            {\n              peg$fail(peg$c38);\n            }\n          }\n\n          if (s2 !== peg$FAILED) {\n            s1 = peg$c39(s1);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n\n        peg$resultsCache[key] = {\n          nextPos: peg$currPos,\n          result: s0\n        };\n        return s0;\n      }\n\n      function peg$parseattrName() {\n        var s0, s1, s2, s3, s4, s5;\n        var key = peg$currPos * 30 + 13,\n            cached = peg$resultsCache[key];\n\n        if (cached) {\n          peg$currPos = cached.nextPos;\n          return cached.result;\n        }\n\n        s0 = peg$currPos;\n        s1 = peg$parseidentifierName();\n\n        if (s1 !== peg$FAILED) {\n          s2 = [];\n          s3 = peg$currPos;\n\n          if (input.charCodeAt(peg$currPos) === 46) {\n            s4 = peg$c42;\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n\n            {\n              peg$fail(peg$c43);\n            }\n          }\n\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parseidentifierName();\n\n            if (s5 !== peg$FAILED) {\n              s4 = [s4, s5];\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n\n          while (s3 !== peg$FAILED) {\n            s2.push(s3);\n            s3 = peg$currPos;\n\n            if (input.charCodeAt(peg$currPos) === 46) {\n              s4 = peg$c42;\n              peg$currPos++;\n            } else {\n              s4 = peg$FAILED;\n\n              {\n                peg$fail(peg$c43);\n              }\n            }\n\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parseidentifierName();\n\n              if (s5 !== peg$FAILED) {\n                s4 = [s4, s5];\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          }\n\n          if (s2 !== peg$FAILED) {\n            s1 = peg$c44(s1, s2);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n\n        peg$resultsCache[key] = {\n          nextPos: peg$currPos,\n          result: s0\n        };\n        return s0;\n      }\n\n      function peg$parseattrValue() {\n        var s0, s1, s2, s3, s4, s5;\n        var key = peg$currPos * 30 + 14,\n            cached = peg$resultsCache[key];\n\n        if (cached) {\n          peg$currPos = cached.nextPos;\n          return cached.result;\n        }\n\n        s0 = peg$currPos;\n        s1 = peg$parseattrName();\n\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parse_();\n\n          if (s2 !== peg$FAILED) {\n            s3 = peg$parseattrEqOps();\n\n            if (s3 !== peg$FAILED) {\n              s4 = peg$parse_();\n\n              if (s4 !== peg$FAILED) {\n                s5 = peg$parsetype();\n\n                if (s5 === peg$FAILED) {\n                  s5 = peg$parseregex();\n                }\n\n                if (s5 !== peg$FAILED) {\n                  s1 = peg$c45(s1, s3, s5);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          s1 = peg$parseattrName();\n\n          if (s1 !== peg$FAILED) {\n            s2 = peg$parse_();\n\n            if (s2 !== peg$FAILED) {\n              s3 = peg$parseattrOps();\n\n              if (s3 !== peg$FAILED) {\n                s4 = peg$parse_();\n\n                if (s4 !== peg$FAILED) {\n                  s5 = peg$parsestring();\n\n                  if (s5 === peg$FAILED) {\n                    s5 = peg$parsenumber();\n\n                    if (s5 === peg$FAILED) {\n                      s5 = peg$parsepath();\n                    }\n                  }\n\n                  if (s5 !== peg$FAILED) {\n                    s1 = peg$c45(s1, s3, s5);\n                    s0 = s1;\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n\n          if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            s1 = peg$parseattrName();\n\n            if (s1 !== peg$FAILED) {\n              s1 = peg$c46(s1);\n            }\n\n            s0 = s1;\n          }\n        }\n\n        peg$resultsCache[key] = {\n          nextPos: peg$currPos,\n          result: s0\n        };\n        return s0;\n      }\n\n      function peg$parsestring() {\n        var s0, s1, s2, s3, s4, s5;\n        var key = peg$currPos * 30 + 15,\n            cached = peg$resultsCache[key];\n\n        if (cached) {\n          peg$currPos = cached.nextPos;\n          return cached.result;\n        }\n\n        s0 = peg$currPos;\n\n        if (input.charCodeAt(peg$currPos) === 34) {\n          s1 = peg$c47;\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n\n          {\n            peg$fail(peg$c48);\n          }\n        }\n\n        if (s1 !== peg$FAILED) {\n          s2 = [];\n\n          if (peg$c49.test(input.charAt(peg$currPos))) {\n            s3 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n\n            {\n              peg$fail(peg$c50);\n            }\n          }\n\n          if (s3 === peg$FAILED) {\n            s3 = peg$currPos;\n\n            if (input.charCodeAt(peg$currPos) === 92) {\n              s4 = peg$c51;\n              peg$currPos++;\n            } else {\n              s4 = peg$FAILED;\n\n              {\n                peg$fail(peg$c52);\n              }\n            }\n\n            if (s4 !== peg$FAILED) {\n              if (input.length > peg$currPos) {\n                s5 = input.charAt(peg$currPos);\n                peg$currPos++;\n              } else {\n                s5 = peg$FAILED;\n\n                {\n                  peg$fail(peg$c53);\n                }\n              }\n\n              if (s5 !== peg$FAILED) {\n                s4 = peg$c54(s4, s5);\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          }\n\n          while (s3 !== peg$FAILED) {\n            s2.push(s3);\n\n            if (peg$c49.test(input.charAt(peg$currPos))) {\n              s3 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s3 = peg$FAILED;\n\n              {\n                peg$fail(peg$c50);\n              }\n            }\n\n            if (s3 === peg$FAILED) {\n              s3 = peg$currPos;\n\n              if (input.charCodeAt(peg$currPos) === 92) {\n                s4 = peg$c51;\n                peg$currPos++;\n              } else {\n                s4 = peg$FAILED;\n\n                {\n                  peg$fail(peg$c52);\n                }\n              }\n\n              if (s4 !== peg$FAILED) {\n                if (input.length > peg$currPos) {\n                  s5 = input.charAt(peg$currPos);\n                  peg$currPos++;\n                } else {\n                  s5 = peg$FAILED;\n\n                  {\n                    peg$fail(peg$c53);\n                  }\n                }\n\n                if (s5 !== peg$FAILED) {\n                  s4 = peg$c54(s4, s5);\n                  s3 = s4;\n                } else {\n                  peg$currPos = s3;\n                  s3 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            }\n          }\n\n          if (s2 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 34) {\n              s3 = peg$c47;\n              peg$currPos++;\n            } else {\n              s3 = peg$FAILED;\n\n              {\n                peg$fail(peg$c48);\n              }\n            }\n\n            if (s3 !== peg$FAILED) {\n              s1 = peg$c55(s2);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n\n          if (input.charCodeAt(peg$currPos) === 39) {\n            s1 = peg$c56;\n            peg$currPos++;\n          } else {\n            s1 = peg$FAILED;\n\n            {\n              peg$fail(peg$c57);\n            }\n          }\n\n          if (s1 !== peg$FAILED) {\n            s2 = [];\n\n            if (peg$c58.test(input.charAt(peg$currPos))) {\n              s3 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s3 = peg$FAILED;\n\n              {\n                peg$fail(peg$c59);\n              }\n            }\n\n            if (s3 === peg$FAILED) {\n              s3 = peg$currPos;\n\n              if (input.charCodeAt(peg$currPos) === 92) {\n                s4 = peg$c51;\n                peg$currPos++;\n              } else {\n                s4 = peg$FAILED;\n\n                {\n                  peg$fail(peg$c52);\n                }\n              }\n\n              if (s4 !== peg$FAILED) {\n                if (input.length > peg$currPos) {\n                  s5 = input.charAt(peg$currPos);\n                  peg$currPos++;\n                } else {\n                  s5 = peg$FAILED;\n\n                  {\n                    peg$fail(peg$c53);\n                  }\n                }\n\n                if (s5 !== peg$FAILED) {\n                  s4 = peg$c54(s4, s5);\n                  s3 = s4;\n                } else {\n                  peg$currPos = s3;\n                  s3 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            }\n\n            while (s3 !== peg$FAILED) {\n              s2.push(s3);\n\n              if (peg$c58.test(input.charAt(peg$currPos))) {\n                s3 = input.charAt(peg$currPos);\n                peg$currPos++;\n              } else {\n                s3 = peg$FAILED;\n\n                {\n                  peg$fail(peg$c59);\n                }\n              }\n\n              if (s3 === peg$FAILED) {\n                s3 = peg$currPos;\n\n                if (input.charCodeAt(peg$currPos) === 92) {\n                  s4 = peg$c51;\n                  peg$currPos++;\n                } else {\n                  s4 = peg$FAILED;\n\n                  {\n                    peg$fail(peg$c52);\n                  }\n                }\n\n                if (s4 !== peg$FAILED) {\n                  if (input.length > peg$currPos) {\n                    s5 = input.charAt(peg$currPos);\n                    peg$currPos++;\n                  } else {\n                    s5 = peg$FAILED;\n\n                    {\n                      peg$fail(peg$c53);\n                    }\n                  }\n\n                  if (s5 !== peg$FAILED) {\n                    s4 = peg$c54(s4, s5);\n                    s3 = s4;\n                  } else {\n                    peg$currPos = s3;\n                    s3 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s3;\n                  s3 = peg$FAILED;\n                }\n              }\n            }\n\n            if (s2 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 39) {\n                s3 = peg$c56;\n                peg$currPos++;\n              } else {\n                s3 = peg$FAILED;\n\n                {\n                  peg$fail(peg$c57);\n                }\n              }\n\n              if (s3 !== peg$FAILED) {\n                s1 = peg$c55(s2);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        }\n\n        peg$resultsCache[key] = {\n          nextPos: peg$currPos,\n          result: s0\n        };\n        return s0;\n      }\n\n      function peg$parsenumber() {\n        var s0, s1, s2, s3;\n        var key = peg$currPos * 30 + 16,\n            cached = peg$resultsCache[key];\n\n        if (cached) {\n          peg$currPos = cached.nextPos;\n          return cached.result;\n        }\n\n        s0 = peg$currPos;\n        s1 = peg$currPos;\n        s2 = [];\n\n        if (peg$c60.test(input.charAt(peg$currPos))) {\n          s3 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n\n          {\n            peg$fail(peg$c61);\n          }\n        }\n\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n\n          if (peg$c60.test(input.charAt(peg$currPos))) {\n            s3 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n\n            {\n              peg$fail(peg$c61);\n            }\n          }\n        }\n\n        if (s2 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 46) {\n            s3 = peg$c42;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n\n            {\n              peg$fail(peg$c43);\n            }\n          }\n\n          if (s3 !== peg$FAILED) {\n            s2 = [s2, s3];\n            s1 = s2;\n          } else {\n            peg$currPos = s1;\n            s1 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s1;\n          s1 = peg$FAILED;\n        }\n\n        if (s1 === peg$FAILED) {\n          s1 = null;\n        }\n\n        if (s1 !== peg$FAILED) {\n          s2 = [];\n\n          if (peg$c60.test(input.charAt(peg$currPos))) {\n            s3 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n\n            {\n              peg$fail(peg$c61);\n            }\n          }\n\n          if (s3 !== peg$FAILED) {\n            while (s3 !== peg$FAILED) {\n              s2.push(s3);\n\n              if (peg$c60.test(input.charAt(peg$currPos))) {\n                s3 = input.charAt(peg$currPos);\n                peg$currPos++;\n              } else {\n                s3 = peg$FAILED;\n\n                {\n                  peg$fail(peg$c61);\n                }\n              }\n            }\n          } else {\n            s2 = peg$FAILED;\n          }\n\n          if (s2 !== peg$FAILED) {\n            s1 = peg$c62(s1, s2);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n\n        peg$resultsCache[key] = {\n          nextPos: peg$currPos,\n          result: s0\n        };\n        return s0;\n      }\n\n      function peg$parsepath() {\n        var s0, s1;\n        var key = peg$currPos * 30 + 17,\n            cached = peg$resultsCache[key];\n\n        if (cached) {\n          peg$currPos = cached.nextPos;\n          return cached.result;\n        }\n\n        s0 = peg$currPos;\n        s1 = peg$parseidentifierName();\n\n        if (s1 !== peg$FAILED) {\n          s1 = peg$c63(s1);\n        }\n\n        s0 = s1;\n        peg$resultsCache[key] = {\n          nextPos: peg$currPos,\n          result: s0\n        };\n        return s0;\n      }\n\n      function peg$parsetype() {\n        var s0, s1, s2, s3, s4, s5;\n        var key = peg$currPos * 30 + 18,\n            cached = peg$resultsCache[key];\n\n        if (cached) {\n          peg$currPos = cached.nextPos;\n          return cached.result;\n        }\n\n        s0 = peg$currPos;\n\n        if (input.substr(peg$currPos, 5) === peg$c64) {\n          s1 = peg$c64;\n          peg$currPos += 5;\n        } else {\n          s1 = peg$FAILED;\n\n          {\n            peg$fail(peg$c65);\n          }\n        }\n\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parse_();\n\n          if (s2 !== peg$FAILED) {\n            s3 = [];\n\n            if (peg$c66.test(input.charAt(peg$currPos))) {\n              s4 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s4 = peg$FAILED;\n\n              {\n                peg$fail(peg$c67);\n              }\n            }\n\n            if (s4 !== peg$FAILED) {\n              while (s4 !== peg$FAILED) {\n                s3.push(s4);\n\n                if (peg$c66.test(input.charAt(peg$currPos))) {\n                  s4 = input.charAt(peg$currPos);\n                  peg$currPos++;\n                } else {\n                  s4 = peg$FAILED;\n\n                  {\n                    peg$fail(peg$c67);\n                  }\n                }\n              }\n            } else {\n              s3 = peg$FAILED;\n            }\n\n            if (s3 !== peg$FAILED) {\n              s4 = peg$parse_();\n\n              if (s4 !== peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 41) {\n                  s5 = peg$c68;\n                  peg$currPos++;\n                } else {\n                  s5 = peg$FAILED;\n\n                  {\n                    peg$fail(peg$c69);\n                  }\n                }\n\n                if (s5 !== peg$FAILED) {\n                  s1 = peg$c70(s3);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n\n        peg$resultsCache[key] = {\n          nextPos: peg$currPos,\n          result: s0\n        };\n        return s0;\n      }\n\n      function peg$parseflags() {\n        var s0, s1;\n        var key = peg$currPos * 30 + 19,\n            cached = peg$resultsCache[key];\n\n        if (cached) {\n          peg$currPos = cached.nextPos;\n          return cached.result;\n        }\n\n        s0 = [];\n\n        if (peg$c71.test(input.charAt(peg$currPos))) {\n          s1 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n\n          {\n            peg$fail(peg$c72);\n          }\n        }\n\n        if (s1 !== peg$FAILED) {\n          while (s1 !== peg$FAILED) {\n            s0.push(s1);\n\n            if (peg$c71.test(input.charAt(peg$currPos))) {\n              s1 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s1 = peg$FAILED;\n\n              {\n                peg$fail(peg$c72);\n              }\n            }\n          }\n        } else {\n          s0 = peg$FAILED;\n        }\n\n        peg$resultsCache[key] = {\n          nextPos: peg$currPos,\n          result: s0\n        };\n        return s0;\n      }\n\n      function peg$parseregex() {\n        var s0, s1, s2, s3, s4;\n        var key = peg$currPos * 30 + 20,\n            cached = peg$resultsCache[key];\n\n        if (cached) {\n          peg$currPos = cached.nextPos;\n          return cached.result;\n        }\n\n        s0 = peg$currPos;\n\n        if (input.charCodeAt(peg$currPos) === 47) {\n          s1 = peg$c73;\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n\n          {\n            peg$fail(peg$c74);\n          }\n        }\n\n        if (s1 !== peg$FAILED) {\n          s2 = [];\n\n          if (peg$c75.test(input.charAt(peg$currPos))) {\n            s3 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n\n            {\n              peg$fail(peg$c76);\n            }\n          }\n\n          if (s3 !== peg$FAILED) {\n            while (s3 !== peg$FAILED) {\n              s2.push(s3);\n\n              if (peg$c75.test(input.charAt(peg$currPos))) {\n                s3 = input.charAt(peg$currPos);\n                peg$currPos++;\n              } else {\n                s3 = peg$FAILED;\n\n                {\n                  peg$fail(peg$c76);\n                }\n              }\n            }\n          } else {\n            s2 = peg$FAILED;\n          }\n\n          if (s2 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 47) {\n              s3 = peg$c73;\n              peg$currPos++;\n            } else {\n              s3 = peg$FAILED;\n\n              {\n                peg$fail(peg$c74);\n              }\n            }\n\n            if (s3 !== peg$FAILED) {\n              s4 = peg$parseflags();\n\n              if (s4 === peg$FAILED) {\n                s4 = null;\n              }\n\n              if (s4 !== peg$FAILED) {\n                s1 = peg$c77(s2, s4);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n\n        peg$resultsCache[key] = {\n          nextPos: peg$currPos,\n          result: s0\n        };\n        return s0;\n      }\n\n      function peg$parsefield() {\n        var s0, s1, s2, s3, s4, s5, s6;\n        var key = peg$currPos * 30 + 21,\n            cached = peg$resultsCache[key];\n\n        if (cached) {\n          peg$currPos = cached.nextPos;\n          return cached.result;\n        }\n\n        s0 = peg$currPos;\n\n        if (input.charCodeAt(peg$currPos) === 46) {\n          s1 = peg$c42;\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n\n          {\n            peg$fail(peg$c43);\n          }\n        }\n\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parseidentifierName();\n\n          if (s2 !== peg$FAILED) {\n            s3 = [];\n            s4 = peg$currPos;\n\n            if (input.charCodeAt(peg$currPos) === 46) {\n              s5 = peg$c42;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n\n              {\n                peg$fail(peg$c43);\n              }\n            }\n\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parseidentifierName();\n\n              if (s6 !== peg$FAILED) {\n                s5 = [s5, s6];\n                s4 = s5;\n              } else {\n                peg$currPos = s4;\n                s4 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s4;\n              s4 = peg$FAILED;\n            }\n\n            while (s4 !== peg$FAILED) {\n              s3.push(s4);\n              s4 = peg$currPos;\n\n              if (input.charCodeAt(peg$currPos) === 46) {\n                s5 = peg$c42;\n                peg$currPos++;\n              } else {\n                s5 = peg$FAILED;\n\n                {\n                  peg$fail(peg$c43);\n                }\n              }\n\n              if (s5 !== peg$FAILED) {\n                s6 = peg$parseidentifierName();\n\n                if (s6 !== peg$FAILED) {\n                  s5 = [s5, s6];\n                  s4 = s5;\n                } else {\n                  peg$currPos = s4;\n                  s4 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s4;\n                s4 = peg$FAILED;\n              }\n            }\n\n            if (s3 !== peg$FAILED) {\n              s1 = peg$c78(s2, s3);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n\n        peg$resultsCache[key] = {\n          nextPos: peg$currPos,\n          result: s0\n        };\n        return s0;\n      }\n\n      function peg$parsenegation() {\n        var s0, s1, s2, s3, s4, s5;\n        var key = peg$currPos * 30 + 22,\n            cached = peg$resultsCache[key];\n\n        if (cached) {\n          peg$currPos = cached.nextPos;\n          return cached.result;\n        }\n\n        s0 = peg$currPos;\n\n        if (input.substr(peg$currPos, 5) === peg$c79) {\n          s1 = peg$c79;\n          peg$currPos += 5;\n        } else {\n          s1 = peg$FAILED;\n\n          {\n            peg$fail(peg$c80);\n          }\n        }\n\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parse_();\n\n          if (s2 !== peg$FAILED) {\n            s3 = peg$parseselectors();\n\n            if (s3 !== peg$FAILED) {\n              s4 = peg$parse_();\n\n              if (s4 !== peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 41) {\n                  s5 = peg$c68;\n                  peg$currPos++;\n                } else {\n                  s5 = peg$FAILED;\n\n                  {\n                    peg$fail(peg$c69);\n                  }\n                }\n\n                if (s5 !== peg$FAILED) {\n                  s1 = peg$c81(s3);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n\n        peg$resultsCache[key] = {\n          nextPos: peg$currPos,\n          result: s0\n        };\n        return s0;\n      }\n\n      function peg$parsematches() {\n        var s0, s1, s2, s3, s4, s5;\n        var key = peg$currPos * 30 + 23,\n            cached = peg$resultsCache[key];\n\n        if (cached) {\n          peg$currPos = cached.nextPos;\n          return cached.result;\n        }\n\n        s0 = peg$currPos;\n\n        if (input.substr(peg$currPos, 9) === peg$c82) {\n          s1 = peg$c82;\n          peg$currPos += 9;\n        } else {\n          s1 = peg$FAILED;\n\n          {\n            peg$fail(peg$c83);\n          }\n        }\n\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parse_();\n\n          if (s2 !== peg$FAILED) {\n            s3 = peg$parseselectors();\n\n            if (s3 !== peg$FAILED) {\n              s4 = peg$parse_();\n\n              if (s4 !== peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 41) {\n                  s5 = peg$c68;\n                  peg$currPos++;\n                } else {\n                  s5 = peg$FAILED;\n\n                  {\n                    peg$fail(peg$c69);\n                  }\n                }\n\n                if (s5 !== peg$FAILED) {\n                  s1 = peg$c84(s3);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n\n        peg$resultsCache[key] = {\n          nextPos: peg$currPos,\n          result: s0\n        };\n        return s0;\n      }\n\n      function peg$parsehas() {\n        var s0, s1, s2, s3, s4, s5;\n        var key = peg$currPos * 30 + 24,\n            cached = peg$resultsCache[key];\n\n        if (cached) {\n          peg$currPos = cached.nextPos;\n          return cached.result;\n        }\n\n        s0 = peg$currPos;\n\n        if (input.substr(peg$currPos, 5) === peg$c85) {\n          s1 = peg$c85;\n          peg$currPos += 5;\n        } else {\n          s1 = peg$FAILED;\n\n          {\n            peg$fail(peg$c86);\n          }\n        }\n\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parse_();\n\n          if (s2 !== peg$FAILED) {\n            s3 = peg$parseselectors();\n\n            if (s3 !== peg$FAILED) {\n              s4 = peg$parse_();\n\n              if (s4 !== peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 41) {\n                  s5 = peg$c68;\n                  peg$currPos++;\n                } else {\n                  s5 = peg$FAILED;\n\n                  {\n                    peg$fail(peg$c69);\n                  }\n                }\n\n                if (s5 !== peg$FAILED) {\n                  s1 = peg$c87(s3);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n\n        peg$resultsCache[key] = {\n          nextPos: peg$currPos,\n          result: s0\n        };\n        return s0;\n      }\n\n      function peg$parsefirstChild() {\n        var s0, s1;\n        var key = peg$currPos * 30 + 25,\n            cached = peg$resultsCache[key];\n\n        if (cached) {\n          peg$currPos = cached.nextPos;\n          return cached.result;\n        }\n\n        s0 = peg$currPos;\n\n        if (input.substr(peg$currPos, 12) === peg$c88) {\n          s1 = peg$c88;\n          peg$currPos += 12;\n        } else {\n          s1 = peg$FAILED;\n\n          {\n            peg$fail(peg$c89);\n          }\n        }\n\n        if (s1 !== peg$FAILED) {\n          s1 = peg$c90();\n        }\n\n        s0 = s1;\n        peg$resultsCache[key] = {\n          nextPos: peg$currPos,\n          result: s0\n        };\n        return s0;\n      }\n\n      function peg$parselastChild() {\n        var s0, s1;\n        var key = peg$currPos * 30 + 26,\n            cached = peg$resultsCache[key];\n\n        if (cached) {\n          peg$currPos = cached.nextPos;\n          return cached.result;\n        }\n\n        s0 = peg$currPos;\n\n        if (input.substr(peg$currPos, 11) === peg$c91) {\n          s1 = peg$c91;\n          peg$currPos += 11;\n        } else {\n          s1 = peg$FAILED;\n\n          {\n            peg$fail(peg$c92);\n          }\n        }\n\n        if (s1 !== peg$FAILED) {\n          s1 = peg$c93();\n        }\n\n        s0 = s1;\n        peg$resultsCache[key] = {\n          nextPos: peg$currPos,\n          result: s0\n        };\n        return s0;\n      }\n\n      function peg$parsenthChild() {\n        var s0, s1, s2, s3, s4, s5;\n        var key = peg$currPos * 30 + 27,\n            cached = peg$resultsCache[key];\n\n        if (cached) {\n          peg$currPos = cached.nextPos;\n          return cached.result;\n        }\n\n        s0 = peg$currPos;\n\n        if (input.substr(peg$currPos, 11) === peg$c94) {\n          s1 = peg$c94;\n          peg$currPos += 11;\n        } else {\n          s1 = peg$FAILED;\n\n          {\n            peg$fail(peg$c95);\n          }\n        }\n\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parse_();\n\n          if (s2 !== peg$FAILED) {\n            s3 = [];\n\n            if (peg$c60.test(input.charAt(peg$currPos))) {\n              s4 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s4 = peg$FAILED;\n\n              {\n                peg$fail(peg$c61);\n              }\n            }\n\n            if (s4 !== peg$FAILED) {\n              while (s4 !== peg$FAILED) {\n                s3.push(s4);\n\n                if (peg$c60.test(input.charAt(peg$currPos))) {\n                  s4 = input.charAt(peg$currPos);\n                  peg$currPos++;\n                } else {\n                  s4 = peg$FAILED;\n\n                  {\n                    peg$fail(peg$c61);\n                  }\n                }\n              }\n            } else {\n              s3 = peg$FAILED;\n            }\n\n            if (s3 !== peg$FAILED) {\n              s4 = peg$parse_();\n\n              if (s4 !== peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 41) {\n                  s5 = peg$c68;\n                  peg$currPos++;\n                } else {\n                  s5 = peg$FAILED;\n\n                  {\n                    peg$fail(peg$c69);\n                  }\n                }\n\n                if (s5 !== peg$FAILED) {\n                  s1 = peg$c96(s3);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n\n        peg$resultsCache[key] = {\n          nextPos: peg$currPos,\n          result: s0\n        };\n        return s0;\n      }\n\n      function peg$parsenthLastChild() {\n        var s0, s1, s2, s3, s4, s5;\n        var key = peg$currPos * 30 + 28,\n            cached = peg$resultsCache[key];\n\n        if (cached) {\n          peg$currPos = cached.nextPos;\n          return cached.result;\n        }\n\n        s0 = peg$currPos;\n\n        if (input.substr(peg$currPos, 16) === peg$c97) {\n          s1 = peg$c97;\n          peg$currPos += 16;\n        } else {\n          s1 = peg$FAILED;\n\n          {\n            peg$fail(peg$c98);\n          }\n        }\n\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parse_();\n\n          if (s2 !== peg$FAILED) {\n            s3 = [];\n\n            if (peg$c60.test(input.charAt(peg$currPos))) {\n              s4 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s4 = peg$FAILED;\n\n              {\n                peg$fail(peg$c61);\n              }\n            }\n\n            if (s4 !== peg$FAILED) {\n              while (s4 !== peg$FAILED) {\n                s3.push(s4);\n\n                if (peg$c60.test(input.charAt(peg$currPos))) {\n                  s4 = input.charAt(peg$currPos);\n                  peg$currPos++;\n                } else {\n                  s4 = peg$FAILED;\n\n                  {\n                    peg$fail(peg$c61);\n                  }\n                }\n              }\n            } else {\n              s3 = peg$FAILED;\n            }\n\n            if (s3 !== peg$FAILED) {\n              s4 = peg$parse_();\n\n              if (s4 !== peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 41) {\n                  s5 = peg$c68;\n                  peg$currPos++;\n                } else {\n                  s5 = peg$FAILED;\n\n                  {\n                    peg$fail(peg$c69);\n                  }\n                }\n\n                if (s5 !== peg$FAILED) {\n                  s1 = peg$c99(s3);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n\n        peg$resultsCache[key] = {\n          nextPos: peg$currPos,\n          result: s0\n        };\n        return s0;\n      }\n\n      function peg$parseclass() {\n        var s0, s1, s2;\n        var key = peg$currPos * 30 + 29,\n            cached = peg$resultsCache[key];\n\n        if (cached) {\n          peg$currPos = cached.nextPos;\n          return cached.result;\n        }\n\n        s0 = peg$currPos;\n\n        if (input.charCodeAt(peg$currPos) === 58) {\n          s1 = peg$c100;\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n\n          {\n            peg$fail(peg$c101);\n          }\n        }\n\n        if (s1 !== peg$FAILED) {\n          if (input.substr(peg$currPos, 9).toLowerCase() === peg$c102) {\n            s2 = input.substr(peg$currPos, 9);\n            peg$currPos += 9;\n          } else {\n            s2 = peg$FAILED;\n\n            {\n              peg$fail(peg$c103);\n            }\n          }\n\n          if (s2 === peg$FAILED) {\n            if (input.substr(peg$currPos, 10).toLowerCase() === peg$c104) {\n              s2 = input.substr(peg$currPos, 10);\n              peg$currPos += 10;\n            } else {\n              s2 = peg$FAILED;\n\n              {\n                peg$fail(peg$c105);\n              }\n            }\n\n            if (s2 === peg$FAILED) {\n              if (input.substr(peg$currPos, 11).toLowerCase() === peg$c106) {\n                s2 = input.substr(peg$currPos, 11);\n                peg$currPos += 11;\n              } else {\n                s2 = peg$FAILED;\n\n                {\n                  peg$fail(peg$c107);\n                }\n              }\n\n              if (s2 === peg$FAILED) {\n                if (input.substr(peg$currPos, 8).toLowerCase() === peg$c108) {\n                  s2 = input.substr(peg$currPos, 8);\n                  peg$currPos += 8;\n                } else {\n                  s2 = peg$FAILED;\n\n                  {\n                    peg$fail(peg$c109);\n                  }\n                }\n\n                if (s2 === peg$FAILED) {\n                  if (input.substr(peg$currPos, 7).toLowerCase() === peg$c110) {\n                    s2 = input.substr(peg$currPos, 7);\n                    peg$currPos += 7;\n                  } else {\n                    s2 = peg$FAILED;\n\n                    {\n                      peg$fail(peg$c111);\n                    }\n                  }\n                }\n              }\n            }\n          }\n\n          if (s2 !== peg$FAILED) {\n            s1 = peg$c112(s2);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n\n        peg$resultsCache[key] = {\n          nextPos: peg$currPos,\n          result: s0\n        };\n        return s0;\n      }\n\n      function nth(n) {\n        return {\n          type: 'nth-child',\n          index: {\n            type: 'literal',\n            value: n\n          }\n        };\n      }\n\n      function nthLast(n) {\n        return {\n          type: 'nth-last-child',\n          index: {\n            type: 'literal',\n            value: n\n          }\n        };\n      }\n\n      function strUnescape(s) {\n        return s.replace(/\\\\(.)/g, function (match, ch) {\n          switch (ch) {\n            case 'b':\n              return '\\b';\n\n            case 'f':\n              return '\\f';\n\n            case 'n':\n              return '\\n';\n\n            case 'r':\n              return '\\r';\n\n            case 't':\n              return '\\t';\n\n            case 'v':\n              return '\\v';\n\n            default:\n              return ch;\n          }\n        });\n      }\n\n      peg$result = peg$startRuleFunction();\n\n      if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n        return peg$result;\n      } else {\n        if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n          peg$fail(peg$endExpectation());\n        }\n\n        throw peg$buildStructuredError(peg$maxFailExpected, peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null, peg$maxFailPos < input.length ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1) : peg$computeLocation(peg$maxFailPos, peg$maxFailPos));\n      }\n    }\n\n    return {\n      SyntaxError: peg$SyntaxError,\n      parse: peg$parse\n    };\n  });\n});\n\nfunction _objectEntries(obj) {\n  var entries = [];\n  var keys = Object.keys(obj);\n\n  for (var k = 0; k < keys.length; k++) entries.push([keys[k], obj[keys[k]]]);\n\n  return entries;\n}\n/**\n* @typedef {\"LEFT_SIDE\"|\"RIGHT_SIDE\"} Side\n*/\n\nvar LEFT_SIDE = 'LEFT_SIDE';\nvar RIGHT_SIDE = 'RIGHT_SIDE';\n/**\n * @external AST\n * @see https://esprima.readthedocs.io/en/latest/syntax-tree-format.html\n */\n\n/**\n * One of the rules of `grammar.pegjs`\n * @typedef {PlainObject} SelectorAST\n * @see grammar.pegjs\n*/\n\n/**\n * The `sequence` production of `grammar.pegjs`\n * @typedef {PlainObject} SelectorSequenceAST\n*/\n\n/**\n * Get the value of a property which may be multiple levels down\n * in the object.\n * @param {?PlainObject} obj\n * @param {string} key\n * @returns {undefined|boolean|string|number|external:AST}\n */\n\nfunction getPath(obj, key) {\n  var keys = key.split('.');\n\n  var _iterator = _createForOfIteratorHelper(keys),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var _key = _step.value;\n\n      if (obj == null) {\n        return obj;\n      }\n\n      obj = obj[_key];\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return obj;\n}\n/**\n * Determine whether `node` can be reached by following `path`,\n * starting at `ancestor`.\n * @param {?external:AST} node\n * @param {?external:AST} ancestor\n * @param {string[]} path\n * @returns {boolean}\n */\n\n\nfunction inPath(node, ancestor, path) {\n  if (path.length === 0) {\n    return node === ancestor;\n  }\n\n  if (ancestor == null) {\n    return false;\n  }\n\n  var field = ancestor[path[0]];\n  var remainingPath = path.slice(1);\n\n  if (Array.isArray(field)) {\n    var _iterator2 = _createForOfIteratorHelper(field),\n        _step2;\n\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var component = _step2.value;\n\n        if (inPath(node, component, remainingPath)) {\n          return true;\n        }\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n\n    return false;\n  } else {\n    return inPath(node, field, remainingPath);\n  }\n}\n/**\n * @callback TraverseOptionFallback\n * @param {external:AST} node The given node.\n * @returns {string[]} An array of visitor keys for the given node.\n */\n\n/**\n * @typedef {object} ESQueryOptions\n * @property { { [nodeType: string]: string[] } } [visitorKeys] By passing `visitorKeys` mapping, we can extend the properties of the nodes that traverse the node.\n * @property {TraverseOptionFallback} [fallback] By passing `fallback` option, we can control the properties of traversing nodes when encountering unknown nodes.\n */\n\n/**\n * Given a `node` and its ancestors, determine if `node` is matched\n * by `selector`.\n * @param {?external:AST} node\n * @param {?SelectorAST} selector\n * @param {external:AST[]} [ancestry=[]]\n * @param {ESQueryOptions} [options]\n * @throws {Error} Unknowns (operator, class name, selector type, or\n * selector value type)\n * @returns {boolean}\n */\n\n\nfunction matches(node, selector, ancestry, options) {\n  if (!selector) {\n    return true;\n  }\n\n  if (!node) {\n    return false;\n  }\n\n  if (!ancestry) {\n    ancestry = [];\n  }\n\n  switch (selector.type) {\n    case 'wildcard':\n      return true;\n\n    case 'identifier':\n      return selector.value.toLowerCase() === node.type.toLowerCase();\n\n    case 'field':\n      {\n        var path = selector.name.split('.');\n        var ancestor = ancestry[path.length - 1];\n        return inPath(node, ancestor, path);\n      }\n\n    case 'matches':\n      var _iterator3 = _createForOfIteratorHelper(selector.selectors),\n          _step3;\n\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var sel = _step3.value;\n\n          if (matches(node, sel, ancestry, options)) {\n            return true;\n          }\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n\n      return false;\n\n    case 'compound':\n      var _iterator4 = _createForOfIteratorHelper(selector.selectors),\n          _step4;\n\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var _sel = _step4.value;\n\n          if (!matches(node, _sel, ancestry, options)) {\n            return false;\n          }\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n\n      return true;\n\n    case 'not':\n      var _iterator5 = _createForOfIteratorHelper(selector.selectors),\n          _step5;\n\n      try {\n        for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n          var _sel2 = _step5.value;\n\n          if (matches(node, _sel2, ancestry, options)) {\n            return false;\n          }\n        }\n      } catch (err) {\n        _iterator5.e(err);\n      } finally {\n        _iterator5.f();\n      }\n\n      return true;\n\n    case 'has':\n      {\n        var _ret = function () {\n          var collector = [];\n\n          var _iterator6 = _createForOfIteratorHelper(selector.selectors),\n              _step6;\n\n          try {\n            var _loop = function _loop() {\n              var sel = _step6.value;\n              var a = [];\n              estraverse.traverse(node, {\n                enter: function enter(node, parent) {\n                  if (parent != null) {\n                    a.unshift(parent);\n                  }\n\n                  if (matches(node, sel, a, options)) {\n                    collector.push(node);\n                  }\n                },\n                leave: function leave() {\n                  a.shift();\n                },\n                keys: options && options.visitorKeys,\n                fallback: options && options.fallback || 'iteration'\n              });\n            };\n\n            for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n              _loop();\n            }\n          } catch (err) {\n            _iterator6.e(err);\n          } finally {\n            _iterator6.f();\n          }\n\n          return {\n            v: collector.length !== 0\n          };\n        }();\n\n        if (_typeof(_ret) === \"object\") return _ret.v;\n      }\n\n    case 'child':\n      if (matches(node, selector.right, ancestry, options)) {\n        return matches(ancestry[0], selector.left, ancestry.slice(1), options);\n      }\n\n      return false;\n\n    case 'descendant':\n      if (matches(node, selector.right, ancestry, options)) {\n        for (var i = 0, l = ancestry.length; i < l; ++i) {\n          if (matches(ancestry[i], selector.left, ancestry.slice(i + 1), options)) {\n            return true;\n          }\n        }\n      }\n\n      return false;\n\n    case 'attribute':\n      {\n        var p = getPath(node, selector.name);\n\n        switch (selector.operator) {\n          case void 0:\n            return p != null;\n\n          case '=':\n            switch (selector.value.type) {\n              case 'regexp':\n                return typeof p === 'string' && selector.value.value.test(p);\n\n              case 'literal':\n                return \"\".concat(selector.value.value) === \"\".concat(p);\n\n              case 'type':\n                return selector.value.value === _typeof(p);\n            }\n\n            throw new Error(\"Unknown selector value type: \".concat(selector.value.type));\n\n          case '!=':\n            switch (selector.value.type) {\n              case 'regexp':\n                return !selector.value.value.test(p);\n\n              case 'literal':\n                return \"\".concat(selector.value.value) !== \"\".concat(p);\n\n              case 'type':\n                return selector.value.value !== _typeof(p);\n            }\n\n            throw new Error(\"Unknown selector value type: \".concat(selector.value.type));\n\n          case '<=':\n            return p <= selector.value.value;\n\n          case '<':\n            return p < selector.value.value;\n\n          case '>':\n            return p > selector.value.value;\n\n          case '>=':\n            return p >= selector.value.value;\n        }\n\n        throw new Error(\"Unknown operator: \".concat(selector.operator));\n      }\n\n    case 'sibling':\n      return matches(node, selector.right, ancestry, options) && sibling(node, selector.left, ancestry, LEFT_SIDE, options) || selector.left.subject && matches(node, selector.left, ancestry, options) && sibling(node, selector.right, ancestry, RIGHT_SIDE, options);\n\n    case 'adjacent':\n      return matches(node, selector.right, ancestry, options) && adjacent(node, selector.left, ancestry, LEFT_SIDE, options) || selector.right.subject && matches(node, selector.left, ancestry, options) && adjacent(node, selector.right, ancestry, RIGHT_SIDE, options);\n\n    case 'nth-child':\n      return matches(node, selector.right, ancestry, options) && nthChild(node, ancestry, function () {\n        return selector.index.value - 1;\n      }, options);\n\n    case 'nth-last-child':\n      return matches(node, selector.right, ancestry, options) && nthChild(node, ancestry, function (length) {\n        return length - selector.index.value;\n      }, options);\n\n    case 'class':\n      switch (selector.name.toLowerCase()) {\n        case 'statement':\n          if (node.type.slice(-9) === 'Statement') return true;\n        // fallthrough: interface Declaration <: Statement { }\n\n        case 'declaration':\n          return node.type.slice(-11) === 'Declaration';\n\n        case 'pattern':\n          if (node.type.slice(-7) === 'Pattern') return true;\n        // fallthrough: interface Expression <: Node, Pattern { }\n\n        case 'expression':\n          return node.type.slice(-10) === 'Expression' || node.type.slice(-7) === 'Literal' || node.type === 'Identifier' && (ancestry.length === 0 || ancestry[0].type !== 'MetaProperty') || node.type === 'MetaProperty';\n\n        case 'function':\n          return node.type === 'FunctionDeclaration' || node.type === 'FunctionExpression' || node.type === 'ArrowFunctionExpression';\n      }\n\n      throw new Error(\"Unknown class name: \".concat(selector.name));\n  }\n\n  throw new Error(\"Unknown selector type: \".concat(selector.type));\n}\n/**\n * Get visitor keys of a given node.\n * @param {external:AST} node The AST node to get keys.\n * @param {ESQueryOptions|undefined} options\n * @returns {string[]} Visitor keys of the node.\n */\n\n\nfunction getVisitorKeys(node, options) {\n  var nodeType = node.type;\n\n  if (options && options.visitorKeys && options.visitorKeys[nodeType]) {\n    return options.visitorKeys[nodeType];\n  }\n\n  if (estraverse.VisitorKeys[nodeType]) {\n    return estraverse.VisitorKeys[nodeType];\n  }\n\n  if (options && typeof options.fallback === 'function') {\n    return options.fallback(node);\n  } // 'iteration' fallback\n\n\n  return Object.keys(node).filter(function (key) {\n    return key !== 'type';\n  });\n}\n/**\n * Check whether the given value is an ASTNode or not.\n * @param {any} node The value to check.\n * @returns {boolean} `true` if the value is an ASTNode.\n */\n\n\nfunction isNode(node) {\n  return node !== null && _typeof(node) === 'object' && typeof node.type === 'string';\n}\n/**\n * Determines if the given node has a sibling that matches the\n * given selector.\n * @param {external:AST} node\n * @param {SelectorSequenceAST} selector\n * @param {external:AST[]} ancestry\n * @param {Side} side\n * @param {ESQueryOptions|undefined} options\n * @returns {boolean}\n */\n\n\nfunction sibling(node, selector, ancestry, side, options) {\n  var _ancestry = _slicedToArray(ancestry, 1),\n      parent = _ancestry[0];\n\n  if (!parent) {\n    return false;\n  }\n\n  var keys = getVisitorKeys(parent, options);\n\n  var _iterator7 = _createForOfIteratorHelper(keys),\n      _step7;\n\n  try {\n    for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n      var key = _step7.value;\n      var listProp = parent[key];\n\n      if (Array.isArray(listProp)) {\n        var startIndex = listProp.indexOf(node);\n\n        if (startIndex < 0) {\n          continue;\n        }\n\n        var lowerBound = void 0,\n            upperBound = void 0;\n\n        if (side === LEFT_SIDE) {\n          lowerBound = 0;\n          upperBound = startIndex;\n        } else {\n          lowerBound = startIndex + 1;\n          upperBound = listProp.length;\n        }\n\n        for (var k = lowerBound; k < upperBound; ++k) {\n          if (isNode(listProp[k]) && matches(listProp[k], selector, ancestry, options)) {\n            return true;\n          }\n        }\n      }\n    }\n  } catch (err) {\n    _iterator7.e(err);\n  } finally {\n    _iterator7.f();\n  }\n\n  return false;\n}\n/**\n * Determines if the given node has an adjacent sibling that matches\n * the given selector.\n * @param {external:AST} node\n * @param {SelectorSequenceAST} selector\n * @param {external:AST[]} ancestry\n * @param {Side} side\n * @param {ESQueryOptions|undefined} options\n * @returns {boolean}\n */\n\n\nfunction adjacent(node, selector, ancestry, side, options) {\n  var _ancestry2 = _slicedToArray(ancestry, 1),\n      parent = _ancestry2[0];\n\n  if (!parent) {\n    return false;\n  }\n\n  var keys = getVisitorKeys(parent, options);\n\n  var _iterator8 = _createForOfIteratorHelper(keys),\n      _step8;\n\n  try {\n    for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n      var key = _step8.value;\n      var listProp = parent[key];\n\n      if (Array.isArray(listProp)) {\n        var idx = listProp.indexOf(node);\n\n        if (idx < 0) {\n          continue;\n        }\n\n        if (side === LEFT_SIDE && idx > 0 && isNode(listProp[idx - 1]) && matches(listProp[idx - 1], selector, ancestry, options)) {\n          return true;\n        }\n\n        if (side === RIGHT_SIDE && idx < listProp.length - 1 && isNode(listProp[idx + 1]) && matches(listProp[idx + 1], selector, ancestry, options)) {\n          return true;\n        }\n      }\n    }\n  } catch (err) {\n    _iterator8.e(err);\n  } finally {\n    _iterator8.f();\n  }\n\n  return false;\n}\n/**\n* @callback IndexFunction\n* @param {Integer} len Containing list's length\n* @returns {Integer}\n*/\n\n/**\n * Determines if the given node is the nth child, determined by\n * `idxFn`, which is given the containing list's length.\n * @param {external:AST} node\n * @param {external:AST[]} ancestry\n * @param {IndexFunction} idxFn\n * @param {ESQueryOptions|undefined} options\n * @returns {boolean}\n */\n\n\nfunction nthChild(node, ancestry, idxFn, options) {\n  var _ancestry3 = _slicedToArray(ancestry, 1),\n      parent = _ancestry3[0];\n\n  if (!parent) {\n    return false;\n  }\n\n  var keys = getVisitorKeys(parent, options);\n\n  var _iterator9 = _createForOfIteratorHelper(keys),\n      _step9;\n\n  try {\n    for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n      var key = _step9.value;\n      var listProp = parent[key];\n\n      if (Array.isArray(listProp)) {\n        var idx = listProp.indexOf(node);\n\n        if (idx >= 0 && idx === idxFn(listProp.length)) {\n          return true;\n        }\n      }\n    }\n  } catch (err) {\n    _iterator9.e(err);\n  } finally {\n    _iterator9.f();\n  }\n\n  return false;\n}\n/**\n * For each selector node marked as a subject, find the portion of the\n * selector that the subject must match.\n * @param {SelectorAST} selector\n * @param {SelectorAST} [ancestor] Defaults to `selector`\n * @returns {SelectorAST[]}\n */\n\n\nfunction subjects(selector, ancestor) {\n  if (selector == null || _typeof(selector) != 'object') {\n    return [];\n  }\n\n  if (ancestor == null) {\n    ancestor = selector;\n  }\n\n  var results = selector.subject ? [ancestor] : [];\n\n  for (var _i = 0, _Object$entries = _objectEntries(selector); _i < _Object$entries.length; _i++) {\n    var _Object$entries$_i = _slicedToArray(_Object$entries[_i], 2),\n        p = _Object$entries$_i[0],\n        sel = _Object$entries$_i[1];\n\n    results.push.apply(results, _toConsumableArray(subjects(sel, p === 'left' ? sel : ancestor)));\n  }\n\n  return results;\n}\n/**\n* @callback TraverseVisitor\n* @param {?external:AST} node\n* @param {?external:AST} parent\n* @param {external:AST[]} ancestry\n*/\n\n/**\n * From a JS AST and a selector AST, collect all JS AST nodes that\n * match the selector.\n * @param {external:AST} ast\n * @param {?SelectorAST} selector\n * @param {TraverseVisitor} visitor\n * @param {ESQueryOptions} [options]\n * @returns {external:AST[]}\n */\n\n\nfunction traverse(ast, selector, visitor, options) {\n  if (!selector) {\n    return;\n  }\n\n  var ancestry = [];\n  var altSubjects = subjects(selector);\n  estraverse.traverse(ast, {\n    enter: function enter(node, parent) {\n      if (parent != null) {\n        ancestry.unshift(parent);\n      }\n\n      if (matches(node, selector, ancestry, options)) {\n        if (altSubjects.length) {\n          for (var i = 0, l = altSubjects.length; i < l; ++i) {\n            if (matches(node, altSubjects[i], ancestry, options)) {\n              visitor(node, parent, ancestry);\n            }\n\n            for (var k = 0, m = ancestry.length; k < m; ++k) {\n              var succeedingAncestry = ancestry.slice(k + 1);\n\n              if (matches(ancestry[k], altSubjects[i], succeedingAncestry, options)) {\n                visitor(ancestry[k], parent, succeedingAncestry);\n              }\n            }\n          }\n        } else {\n          visitor(node, parent, ancestry);\n        }\n      }\n    },\n    leave: function leave() {\n      ancestry.shift();\n    },\n    keys: options && options.visitorKeys,\n    fallback: options && options.fallback || 'iteration'\n  });\n}\n/**\n * From a JS AST and a selector AST, collect all JS AST nodes that\n * match the selector.\n * @param {external:AST} ast\n * @param {?SelectorAST} selector\n * @param {ESQueryOptions} [options]\n * @returns {external:AST[]}\n */\n\n\nfunction match(ast, selector, options) {\n  var results = [];\n  traverse(ast, selector, function (node) {\n    results.push(node);\n  }, options);\n  return results;\n}\n/**\n * Parse a selector string and return its AST.\n * @param {string} selector\n * @returns {SelectorAST}\n */\n\n\nfunction parse(selector) {\n  return parser.parse(selector);\n}\n/**\n * Query the code AST using the selector string.\n * @param {external:AST} ast\n * @param {string} selector\n * @param {ESQueryOptions} [options]\n * @returns {external:AST[]}\n */\n\n\nfunction query(ast, selector, options) {\n  return match(ast, parse(selector), options);\n}\n\nquery.parse = parse;\nquery.match = match;\nquery.traverse = traverse;\nquery.matches = matches;\nquery.query = query;\n\nexport default query;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}