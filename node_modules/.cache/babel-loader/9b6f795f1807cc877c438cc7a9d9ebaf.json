{"ast":null,"code":"import expect from 'expect';\nimport { elementType } from 'jsx-ast-utils';\nimport isNonInteractiveRole from '../../../src/util/isNonInteractiveRole';\nimport { genElementSymbol, genInteractiveRoleElements, genNonInteractiveRoleElements } from '../../../__mocks__/genInteractives';\ndescribe('isNonInteractiveRole', () => {\n  describe('JSX Components (no tagName)', () => {\n    it('should identify them as interactive role elements', () => {\n      expect(isNonInteractiveRole(undefined, [])).toBe(false);\n    });\n  });\n  describe('elements with a non-interactive role', () => {\n    genNonInteractiveRoleElements().forEach(_ref => {\n      let {\n        openingElement\n      } = _ref;\n      const {\n        attributes\n      } = openingElement;\n      it(`should identify \\`${genElementSymbol(openingElement)}\\` as non-interactive role element`, () => {\n        expect(isNonInteractiveRole(elementType(openingElement), attributes)).toBe(true);\n      });\n    });\n  });\n  describe('elements without a role', () => {\n    it('should not identify them as non-interactive role elements', () => {\n      expect(isNonInteractiveRole('div', [])).toBe(false);\n    });\n  });\n  describe('elements with an interactive role', () => {\n    genInteractiveRoleElements().forEach(_ref2 => {\n      let {\n        openingElement\n      } = _ref2;\n      const {\n        attributes\n      } = openingElement;\n      it(`should NOT identify \\`${genElementSymbol(openingElement)}\\` as a non-interactive role element`, () => {\n        expect(isNonInteractiveRole(elementType(openingElement), attributes)).toBe(false);\n      });\n    });\n  });\n});","map":{"version":3,"names":["expect","elementType","isNonInteractiveRole","genElementSymbol","genInteractiveRoleElements","genNonInteractiveRoleElements","describe","it","undefined","toBe","forEach","openingElement","attributes"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/eslint-plugin-jsx-a11y/__tests__/src/util/isNonInteractiveRole-test.js"],"sourcesContent":["import expect from 'expect';\nimport { elementType } from 'jsx-ast-utils';\nimport isNonInteractiveRole from '../../../src/util/isNonInteractiveRole';\nimport {\n  genElementSymbol,\n  genInteractiveRoleElements,\n  genNonInteractiveRoleElements,\n} from '../../../__mocks__/genInteractives';\n\ndescribe('isNonInteractiveRole', () => {\n  describe('JSX Components (no tagName)', () => {\n    it('should identify them as interactive role elements', () => {\n      expect(isNonInteractiveRole(undefined, []))\n        .toBe(false);\n    });\n  });\n  describe('elements with a non-interactive role', () => {\n    genNonInteractiveRoleElements().forEach(({ openingElement }) => {\n      const { attributes } = openingElement;\n      it(`should identify \\`${genElementSymbol(openingElement)}\\` as non-interactive role element`, () => {\n        expect(isNonInteractiveRole(\n          elementType(openingElement),\n          attributes,\n        )).toBe(true);\n      });\n    });\n  });\n  describe('elements without a role', () => {\n    it('should not identify them as non-interactive role elements', () => {\n      expect(isNonInteractiveRole('div', [])).toBe(false);\n    });\n  });\n  describe('elements with an interactive role', () => {\n    genInteractiveRoleElements().forEach(({ openingElement }) => {\n      const { attributes } = openingElement;\n      it(`should NOT identify \\`${genElementSymbol(openingElement)}\\` as a non-interactive role element`, () => {\n        expect(isNonInteractiveRole(\n          elementType(openingElement),\n          attributes,\n        )).toBe(false);\n      });\n    });\n  });\n});\n"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,QAAnB;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,OAAOC,oBAAP,MAAiC,wCAAjC;AACA,SACEC,gBADF,EAEEC,0BAFF,EAGEC,6BAHF,QAIO,oCAJP;AAMAC,QAAQ,CAAC,sBAAD,EAAyB,MAAM;EACrCA,QAAQ,CAAC,6BAAD,EAAgC,MAAM;IAC5CC,EAAE,CAAC,mDAAD,EAAsD,MAAM;MAC5DP,MAAM,CAACE,oBAAoB,CAACM,SAAD,EAAY,EAAZ,CAArB,CAAN,CACGC,IADH,CACQ,KADR;IAED,CAHC,CAAF;EAID,CALO,CAAR;EAMAH,QAAQ,CAAC,sCAAD,EAAyC,MAAM;IACrDD,6BAA6B,GAAGK,OAAhC,CAAwC,QAAwB;MAAA,IAAvB;QAAEC;MAAF,CAAuB;MAC9D,MAAM;QAAEC;MAAF,IAAiBD,cAAvB;MACAJ,EAAE,CAAE,qBAAoBJ,gBAAgB,CAACQ,cAAD,CAAiB,oCAAvD,EAA4F,MAAM;QAClGX,MAAM,CAACE,oBAAoB,CACzBD,WAAW,CAACU,cAAD,CADc,EAEzBC,UAFyB,CAArB,CAAN,CAGGH,IAHH,CAGQ,IAHR;MAID,CALC,CAAF;IAMD,CARD;EASD,CAVO,CAAR;EAWAH,QAAQ,CAAC,yBAAD,EAA4B,MAAM;IACxCC,EAAE,CAAC,2DAAD,EAA8D,MAAM;MACpEP,MAAM,CAACE,oBAAoB,CAAC,KAAD,EAAQ,EAAR,CAArB,CAAN,CAAwCO,IAAxC,CAA6C,KAA7C;IACD,CAFC,CAAF;EAGD,CAJO,CAAR;EAKAH,QAAQ,CAAC,mCAAD,EAAsC,MAAM;IAClDF,0BAA0B,GAAGM,OAA7B,CAAqC,SAAwB;MAAA,IAAvB;QAAEC;MAAF,CAAuB;MAC3D,MAAM;QAAEC;MAAF,IAAiBD,cAAvB;MACAJ,EAAE,CAAE,yBAAwBJ,gBAAgB,CAACQ,cAAD,CAAiB,sCAA3D,EAAkG,MAAM;QACxGX,MAAM,CAACE,oBAAoB,CACzBD,WAAW,CAACU,cAAD,CADc,EAEzBC,UAFyB,CAArB,CAAN,CAGGH,IAHH,CAGQ,KAHR;MAID,CALC,CAAF;IAMD,CARD;EASD,CAVO,CAAR;AAWD,CAlCO,CAAR"},"metadata":{},"sourceType":"module"}