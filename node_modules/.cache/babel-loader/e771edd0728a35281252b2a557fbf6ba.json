{"ast":null,"code":"/**\n * @fileoverview Disallow sparse arrays\n * @author Nicholas C. Zakas\n */\n\"use strict\"; //------------------------------------------------------------------------------\n// Rule Definition\n//------------------------------------------------------------------------------\n\n/** @type {import('../shared/types').Rule} */\n\nmodule.exports = {\n  meta: {\n    type: \"problem\",\n    docs: {\n      description: \"Disallow sparse arrays\",\n      recommended: true,\n      url: \"https://eslint.org/docs/rules/no-sparse-arrays\"\n    },\n    schema: [],\n    messages: {\n      unexpectedSparseArray: \"Unexpected comma in middle of array.\"\n    }\n  },\n\n  create(context) {\n    //--------------------------------------------------------------------------\n    // Public\n    //--------------------------------------------------------------------------\n    return {\n      ArrayExpression(node) {\n        const emptySpot = node.elements.includes(null);\n\n        if (emptySpot) {\n          context.report({\n            node,\n            messageId: \"unexpectedSparseArray\"\n          });\n        }\n      }\n\n    };\n  }\n\n};","map":{"version":3,"names":["module","exports","meta","type","docs","description","recommended","url","schema","messages","unexpectedSparseArray","create","context","ArrayExpression","node","emptySpot","elements","includes","report","messageId"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/eslint/lib/rules/no-sparse-arrays.js"],"sourcesContent":["/**\n * @fileoverview Disallow sparse arrays\n * @author Nicholas C. Zakas\n */\n\"use strict\";\n\n//------------------------------------------------------------------------------\n// Rule Definition\n//------------------------------------------------------------------------------\n\n/** @type {import('../shared/types').Rule} */\nmodule.exports = {\n    meta: {\n        type: \"problem\",\n\n        docs: {\n            description: \"Disallow sparse arrays\",\n            recommended: true,\n            url: \"https://eslint.org/docs/rules/no-sparse-arrays\"\n        },\n\n        schema: [],\n\n        messages: {\n            unexpectedSparseArray: \"Unexpected comma in middle of array.\"\n        }\n    },\n\n    create(context) {\n\n\n        //--------------------------------------------------------------------------\n        // Public\n        //--------------------------------------------------------------------------\n\n        return {\n\n            ArrayExpression(node) {\n\n                const emptySpot = node.elements.includes(null);\n\n                if (emptySpot) {\n                    context.report({ node, messageId: \"unexpectedSparseArray\" });\n                }\n            }\n\n        };\n\n    }\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,a,CAEA;AACA;AACA;;AAEA;;AACAA,MAAM,CAACC,OAAP,GAAiB;EACbC,IAAI,EAAE;IACFC,IAAI,EAAE,SADJ;IAGFC,IAAI,EAAE;MACFC,WAAW,EAAE,wBADX;MAEFC,WAAW,EAAE,IAFX;MAGFC,GAAG,EAAE;IAHH,CAHJ;IASFC,MAAM,EAAE,EATN;IAWFC,QAAQ,EAAE;MACNC,qBAAqB,EAAE;IADjB;EAXR,CADO;;EAiBbC,MAAM,CAACC,OAAD,EAAU;IAGZ;IACA;IACA;IAEA,OAAO;MAEHC,eAAe,CAACC,IAAD,EAAO;QAElB,MAAMC,SAAS,GAAGD,IAAI,CAACE,QAAL,CAAcC,QAAd,CAAuB,IAAvB,CAAlB;;QAEA,IAAIF,SAAJ,EAAe;UACXH,OAAO,CAACM,MAAR,CAAe;YAAEJ,IAAF;YAAQK,SAAS,EAAE;UAAnB,CAAf;QACH;MACJ;;IATE,CAAP;EAaH;;AArCY,CAAjB"},"metadata":{},"sourceType":"script"}