{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nconst schema = [];\n\nconst breakLineMessage = direction => {\n  return `New line required ${direction} type declaration`;\n};\n\nconst create = context => {\n  return {\n    TypeAlias(node) {\n      const sourceCode = context.getSourceCode();\n\n      if (sourceCode.lines.length === 1) {\n        return;\n      }\n\n      const exportedType = node.parent.type === 'ExportNamedDeclaration';\n      const leadingComments = sourceCode.getCommentsBefore(exportedType ? node.parent : node);\n      const hasLeadingComments = leadingComments.length > 0;\n\n      if (node.loc.start.line !== 1) {\n        if (hasLeadingComments && leadingComments[0].loc.start.line !== 1) {\n          const lineAboveComment = sourceCode.lines[leadingComments[0].loc.start.line - 2];\n\n          if (lineAboveComment !== '') {\n            context.report({\n              fix(fixer) {\n                return fixer.insertTextBeforeRange(leadingComments[0].range, '\\n');\n              },\n\n              message: breakLineMessage('above'),\n              node\n            });\n          }\n        } else if (!hasLeadingComments) {\n          const isLineAbove = sourceCode.lines[node.loc.start.line - 2];\n\n          if (isLineAbove !== '') {\n            context.report({\n              fix(fixer) {\n                return fixer.insertTextBefore(exportedType ? node.parent : node, '\\n');\n              },\n\n              message: breakLineMessage('above'),\n              node\n            });\n          }\n        }\n      }\n\n      if (sourceCode.lines.length !== node.loc.end.line) {\n        const isLineBelow = sourceCode.lines[node.loc.end.line];\n\n        if (isLineBelow !== '') {\n          context.report({\n            fix(fixer) {\n              return fixer.insertTextAfter(node, '\\n');\n            },\n\n            message: breakLineMessage('below'),\n            node\n          });\n        }\n      }\n    }\n\n  };\n};\n\nvar _default = {\n  create,\n  meta: {\n    fixable: 'code'\n  },\n  schema\n};\nexports.default = _default;\nmodule.exports = exports.default;","map":{"version":3,"names":["Object","defineProperty","exports","value","default","schema","breakLineMessage","direction","create","context","TypeAlias","node","sourceCode","getSourceCode","lines","length","exportedType","parent","type","leadingComments","getCommentsBefore","hasLeadingComments","loc","start","line","lineAboveComment","report","fix","fixer","insertTextBeforeRange","range","message","isLineAbove","insertTextBefore","end","isLineBelow","insertTextAfter","_default","meta","fixable","module"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/eslint-plugin-flowtype/dist/rules/enforceLineBreak.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nconst schema = [];\n\nconst breakLineMessage = direction => {\n  return `New line required ${direction} type declaration`;\n};\n\nconst create = context => {\n  return {\n    TypeAlias(node) {\n      const sourceCode = context.getSourceCode();\n\n      if (sourceCode.lines.length === 1) {\n        return;\n      }\n\n      const exportedType = node.parent.type === 'ExportNamedDeclaration';\n      const leadingComments = sourceCode.getCommentsBefore(exportedType ? node.parent : node);\n      const hasLeadingComments = leadingComments.length > 0;\n\n      if (node.loc.start.line !== 1) {\n        if (hasLeadingComments && leadingComments[0].loc.start.line !== 1) {\n          const lineAboveComment = sourceCode.lines[leadingComments[0].loc.start.line - 2];\n\n          if (lineAboveComment !== '') {\n            context.report({\n              fix(fixer) {\n                return fixer.insertTextBeforeRange(leadingComments[0].range, '\\n');\n              },\n\n              message: breakLineMessage('above'),\n              node\n            });\n          }\n        } else if (!hasLeadingComments) {\n          const isLineAbove = sourceCode.lines[node.loc.start.line - 2];\n\n          if (isLineAbove !== '') {\n            context.report({\n              fix(fixer) {\n                return fixer.insertTextBefore(exportedType ? node.parent : node, '\\n');\n              },\n\n              message: breakLineMessage('above'),\n              node\n            });\n          }\n        }\n      }\n\n      if (sourceCode.lines.length !== node.loc.end.line) {\n        const isLineBelow = sourceCode.lines[node.loc.end.line];\n\n        if (isLineBelow !== '') {\n          context.report({\n            fix(fixer) {\n              return fixer.insertTextAfter(node, '\\n');\n            },\n\n            message: breakLineMessage('below'),\n            node\n          });\n        }\n      }\n    }\n\n  };\n};\n\nvar _default = {\n  create,\n  meta: {\n    fixable: 'code'\n  },\n  schema\n};\nexports.default = _default;\nmodule.exports = exports.default;"],"mappings":"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"},"metadata":{},"sourceType":"script"}