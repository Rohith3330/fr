{"ast":null,"code":"'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $BigInt = GetIntrinsic('%BigInt%', true);\nvar $TypeError = GetIntrinsic('%TypeError%');\nvar $SyntaxError = GetIntrinsic('%SyntaxError%'); // https://262.ecma-international.org/11.0/#sec-stringtobigint\n\nmodule.exports = function StringToBigInt(argument) {\n  if (typeof argument !== 'string') {\n    throw new $TypeError('`argument` must be a string');\n  }\n\n  if (!$BigInt) {\n    throw new $SyntaxError('BigInts are not supported in this environment');\n  }\n\n  try {\n    return $BigInt(argument);\n  } catch (e) {\n    return NaN;\n  }\n};","map":{"version":3,"names":["GetIntrinsic","require","$BigInt","$TypeError","$SyntaxError","module","exports","StringToBigInt","argument","e","NaN"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/es-abstract/2022/StringToBigInt.js"],"sourcesContent":["'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $BigInt = GetIntrinsic('%BigInt%', true);\nvar $TypeError = GetIntrinsic('%TypeError%');\nvar $SyntaxError = GetIntrinsic('%SyntaxError%');\n\n// https://262.ecma-international.org/11.0/#sec-stringtobigint\n\nmodule.exports = function StringToBigInt(argument) {\n\tif (typeof argument !== 'string') {\n\t\tthrow new $TypeError('`argument` must be a string');\n\t}\n\tif (!$BigInt) {\n\t\tthrow new $SyntaxError('BigInts are not supported in this environment');\n\t}\n\ttry {\n\t\treturn $BigInt(argument);\n\t} catch (e) {\n\t\treturn NaN;\n\t}\n};\n"],"mappings":"AAAA;;AAEA,IAAIA,YAAY,GAAGC,OAAO,CAAC,eAAD,CAA1B;;AAEA,IAAIC,OAAO,GAAGF,YAAY,CAAC,UAAD,EAAa,IAAb,CAA1B;AACA,IAAIG,UAAU,GAAGH,YAAY,CAAC,aAAD,CAA7B;AACA,IAAII,YAAY,GAAGJ,YAAY,CAAC,eAAD,CAA/B,C,CAEA;;AAEAK,MAAM,CAACC,OAAP,GAAiB,SAASC,cAAT,CAAwBC,QAAxB,EAAkC;EAClD,IAAI,OAAOA,QAAP,KAAoB,QAAxB,EAAkC;IACjC,MAAM,IAAIL,UAAJ,CAAe,6BAAf,CAAN;EACA;;EACD,IAAI,CAACD,OAAL,EAAc;IACb,MAAM,IAAIE,YAAJ,CAAiB,+CAAjB,CAAN;EACA;;EACD,IAAI;IACH,OAAOF,OAAO,CAACM,QAAD,CAAd;EACA,CAFD,CAEE,OAAOC,CAAP,EAAU;IACX,OAAOC,GAAP;EACA;AACD,CAZD"},"metadata":{},"sourceType":"script"}