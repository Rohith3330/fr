{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _experimentalUtils = require(\"@typescript-eslint/experimental-utils\");\n\nvar _utils = require(\"./utils\");\n\nconst isCatchCall = node => node.callee.type === _experimentalUtils.AST_NODE_TYPES.MemberExpression && (0, _utils.isSupportedAccessor)(node.callee.property, 'catch');\n\nvar _default = (0, _utils.createRule)({\n  name: __filename,\n  meta: {\n    docs: {\n      description: 'Prevent calling `expect` conditionally',\n      category: 'Best Practices',\n      recommended: 'error'\n    },\n    messages: {\n      conditionalExpect: 'Avoid calling `expect` conditionally`'\n    },\n    type: 'problem',\n    schema: []\n  },\n  defaultOptions: [],\n\n  create(context) {\n    let conditionalDepth = 0;\n    let inTestCase = false;\n    let inPromiseCatch = false;\n\n    const increaseConditionalDepth = () => inTestCase && conditionalDepth++;\n\n    const decreaseConditionalDepth = () => inTestCase && conditionalDepth--;\n\n    return {\n      FunctionDeclaration(node) {\n        const declaredVariables = context.getDeclaredVariables(node);\n        const testCallExpressions = (0, _utils.getTestCallExpressionsFromDeclaredVariables)(declaredVariables);\n\n        if (testCallExpressions.length > 0) {\n          inTestCase = true;\n        }\n      },\n\n      CallExpression(node) {\n        if ((0, _utils.isTestCaseCall)(node)) {\n          inTestCase = true;\n        }\n\n        if (isCatchCall(node)) {\n          inPromiseCatch = true;\n        }\n\n        if (inTestCase && (0, _utils.isExpectCall)(node) && conditionalDepth > 0) {\n          context.report({\n            messageId: 'conditionalExpect',\n            node\n          });\n        }\n\n        if (inPromiseCatch && (0, _utils.isExpectCall)(node)) {\n          context.report({\n            messageId: 'conditionalExpect',\n            node\n          });\n        }\n      },\n\n      'CallExpression:exit'(node) {\n        if ((0, _utils.isTestCaseCall)(node)) {\n          inTestCase = false;\n        }\n\n        if (isCatchCall(node)) {\n          inPromiseCatch = false;\n        }\n      },\n\n      CatchClause: increaseConditionalDepth,\n      'CatchClause:exit': decreaseConditionalDepth,\n      IfStatement: increaseConditionalDepth,\n      'IfStatement:exit': decreaseConditionalDepth,\n      SwitchStatement: increaseConditionalDepth,\n      'SwitchStatement:exit': decreaseConditionalDepth,\n      ConditionalExpression: increaseConditionalDepth,\n      'ConditionalExpression:exit': decreaseConditionalDepth,\n      LogicalExpression: increaseConditionalDepth,\n      'LogicalExpression:exit': decreaseConditionalDepth\n    };\n  }\n\n});\n\nexports.default = _default;","map":{"version":3,"names":["Object","defineProperty","exports","value","default","_experimentalUtils","require","_utils","isCatchCall","node","callee","type","AST_NODE_TYPES","MemberExpression","isSupportedAccessor","property","_default","createRule","name","__filename","meta","docs","description","category","recommended","messages","conditionalExpect","schema","defaultOptions","create","context","conditionalDepth","inTestCase","inPromiseCatch","increaseConditionalDepth","decreaseConditionalDepth","FunctionDeclaration","declaredVariables","getDeclaredVariables","testCallExpressions","getTestCallExpressionsFromDeclaredVariables","length","CallExpression","isTestCaseCall","isExpectCall","report","messageId","CatchClause","IfStatement","SwitchStatement","ConditionalExpression","LogicalExpression"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/eslint-plugin-jest/lib/rules/no-conditional-expect.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _experimentalUtils = require(\"@typescript-eslint/experimental-utils\");\n\nvar _utils = require(\"./utils\");\n\nconst isCatchCall = node => node.callee.type === _experimentalUtils.AST_NODE_TYPES.MemberExpression && (0, _utils.isSupportedAccessor)(node.callee.property, 'catch');\n\nvar _default = (0, _utils.createRule)({\n  name: __filename,\n  meta: {\n    docs: {\n      description: 'Prevent calling `expect` conditionally',\n      category: 'Best Practices',\n      recommended: 'error'\n    },\n    messages: {\n      conditionalExpect: 'Avoid calling `expect` conditionally`'\n    },\n    type: 'problem',\n    schema: []\n  },\n  defaultOptions: [],\n\n  create(context) {\n    let conditionalDepth = 0;\n    let inTestCase = false;\n    let inPromiseCatch = false;\n\n    const increaseConditionalDepth = () => inTestCase && conditionalDepth++;\n\n    const decreaseConditionalDepth = () => inTestCase && conditionalDepth--;\n\n    return {\n      FunctionDeclaration(node) {\n        const declaredVariables = context.getDeclaredVariables(node);\n        const testCallExpressions = (0, _utils.getTestCallExpressionsFromDeclaredVariables)(declaredVariables);\n\n        if (testCallExpressions.length > 0) {\n          inTestCase = true;\n        }\n      },\n\n      CallExpression(node) {\n        if ((0, _utils.isTestCaseCall)(node)) {\n          inTestCase = true;\n        }\n\n        if (isCatchCall(node)) {\n          inPromiseCatch = true;\n        }\n\n        if (inTestCase && (0, _utils.isExpectCall)(node) && conditionalDepth > 0) {\n          context.report({\n            messageId: 'conditionalExpect',\n            node\n          });\n        }\n\n        if (inPromiseCatch && (0, _utils.isExpectCall)(node)) {\n          context.report({\n            messageId: 'conditionalExpect',\n            node\n          });\n        }\n      },\n\n      'CallExpression:exit'(node) {\n        if ((0, _utils.isTestCaseCall)(node)) {\n          inTestCase = false;\n        }\n\n        if (isCatchCall(node)) {\n          inPromiseCatch = false;\n        }\n      },\n\n      CatchClause: increaseConditionalDepth,\n      'CatchClause:exit': decreaseConditionalDepth,\n      IfStatement: increaseConditionalDepth,\n      'IfStatement:exit': decreaseConditionalDepth,\n      SwitchStatement: increaseConditionalDepth,\n      'SwitchStatement:exit': decreaseConditionalDepth,\n      ConditionalExpression: increaseConditionalDepth,\n      'ConditionalExpression:exit': decreaseConditionalDepth,\n      LogicalExpression: increaseConditionalDepth,\n      'LogicalExpression:exit': decreaseConditionalDepth\n    };\n  }\n\n});\n\nexports.default = _default;"],"mappings":"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"},"metadata":{},"sourceType":"script"}