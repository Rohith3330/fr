{"ast":null,"code":"\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"C:/Users/Rohith/mern/frontend/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = loadBlockHoistPlugin;\n\nfunction _traverse() {\n  var data = require(\"@babel/traverse\");\n\n  _traverse = function _traverse() {\n    return data;\n  };\n\n  return data;\n}\n\nvar _plugin = require(\"../config/plugin\");\n\nvar LOADED_PLUGIN;\n\nfunction loadBlockHoistPlugin() {\n  if (!LOADED_PLUGIN) {\n    LOADED_PLUGIN = new _plugin.default(Object.assign({}, blockHoistPlugin, {\n      visitor: _traverse().default.explode(blockHoistPlugin.visitor)\n    }), {});\n  }\n\n  return LOADED_PLUGIN;\n}\n\nfunction priority(bodyNode) {\n  var priority = bodyNode == null ? void 0 : bodyNode._blockHoist;\n  if (priority == null) return 1;\n  if (priority === true) return 2;\n  return priority;\n}\n\nfunction stableSort(body) {\n  var buckets = Object.create(null);\n\n  for (var i = 0; i < body.length; i++) {\n    var n = body[i];\n    var p = priority(n);\n    var bucket = buckets[p] || (buckets[p] = []);\n    bucket.push(n);\n  }\n\n  var keys = Object.keys(buckets).map(function (k) {\n    return +k;\n  }).sort(function (a, b) {\n    return b - a;\n  });\n  var index = 0;\n\n  var _iterator = _createForOfIteratorHelper(keys),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var key = _step.value;\n      var _bucket = buckets[key];\n\n      var _iterator2 = _createForOfIteratorHelper(_bucket),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var _n = _step2.value;\n          body[index++] = _n;\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return body;\n}\n\nvar blockHoistPlugin = {\n  name: \"internal.blockHoist\",\n  visitor: {\n    Block: {\n      exit: function exit(_ref) {\n        var node = _ref.node;\n        var body = node.body;\n        var max = Math.pow(2, 30) - 1;\n        var hasChange = false;\n\n        for (var i = 0; i < body.length; i++) {\n          var n = body[i];\n          var p = priority(n);\n\n          if (p > max) {\n            hasChange = true;\n            break;\n          }\n\n          max = p;\n        }\n\n        if (!hasChange) return;\n        node.body = stableSort(body.slice());\n      }\n    }\n  }\n};\n0 && 0;","map":{"version":3,"mappings":"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","names":["_traverse","LOADED_PLUGIN","loadBlockHoistPlugin","Plugin","blockHoistPlugin","visitor","traverse","explode","priority","bodyNode","_blockHoist","stableSort","body","buckets","Object","create","i","length","n","p","bucket","push","keys","map","k","sort","a","b","index","key","name","Block","exit","node","max","Math","hasChange","slice"],"sources":["C:\\Users\\Rohith\\mern\\frontend\\node_modules\\@babel\\core\\src\\transformation\\block-hoist-plugin.ts"],"sourcesContent":["import traverse from \"@babel/traverse\";\nimport type { Statement } from \"@babel/types\";\nimport type { PluginObject } from \"../config\";\nimport Plugin from \"../config/plugin\";\n\nlet LOADED_PLUGIN: Plugin | void;\n\nexport default function loadBlockHoistPlugin(): Plugin {\n  if (!LOADED_PLUGIN) {\n    // cache the loaded blockHoist plugin plugin\n    LOADED_PLUGIN = new Plugin(\n      {\n        ...blockHoistPlugin,\n        visitor: traverse.explode(blockHoistPlugin.visitor),\n      },\n      {},\n    );\n  }\n\n  return LOADED_PLUGIN;\n}\nfunction priority(bodyNode: Statement & { _blockHoist?: number | true }) {\n  const priority = bodyNode?._blockHoist;\n  if (priority == null) return 1;\n  if (priority === true) return 2;\n  return priority;\n}\n\nfunction stableSort(body: Statement[]) {\n  // By default, we use priorities of 0-4.\n  const buckets = Object.create(null);\n\n  // By collecting into buckets, we can guarantee a stable sort.\n  for (let i = 0; i < body.length; i++) {\n    const n = body[i];\n    const p = priority(n);\n\n    // In case some plugin is setting an unexpected priority.\n    const bucket = buckets[p] || (buckets[p] = []);\n    bucket.push(n);\n  }\n\n  // Sort our keys in descending order. Keys are unique, so we don't have to\n  // worry about stability.\n  const keys = Object.keys(buckets)\n    .map(k => +k)\n    .sort((a, b) => b - a);\n\n  let index = 0;\n  for (const key of keys) {\n    const bucket = buckets[key];\n    for (const n of bucket) {\n      body[index++] = n;\n    }\n  }\n  return body;\n}\n\nconst blockHoistPlugin: PluginObject = {\n  /**\n   * [Please add a description.]\n   *\n   * Priority:\n   *\n   *  - 0 We want this to be at the **very** bottom\n   *  - 1 Default node position\n   *  - 2 Priority over normal nodes\n   *  - 3 We want this to be at the **very** top\n   *  - 4 Reserved for the helpers used to implement module imports.\n   */\n\n  name: \"internal.blockHoist\",\n\n  visitor: {\n    Block: {\n      exit({ node }) {\n        const { body } = node;\n\n        // Largest SMI\n        let max = 2 ** 30 - 1;\n        let hasChange = false;\n        for (let i = 0; i < body.length; i++) {\n          const n = body[i];\n          const p = priority(n);\n          if (p > max) {\n            hasChange = true;\n            break;\n          }\n          max = p;\n        }\n        if (!hasChange) return;\n\n        // My kingdom for a stable sort!\n        node.body = stableSort(body.slice());\n      },\n    },\n  },\n};\n"]},"metadata":{},"sourceType":"script"}