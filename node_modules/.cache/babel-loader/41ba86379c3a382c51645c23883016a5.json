{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"C:/Users/Rohith/mern/frontend/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.once = once;\n\nvar _async = require(\"./async\");\n\nfunction once(fn) {\n  var result;\n  var resultP;\n  return /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n    var resolve, reject;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!result) {\n              _context.next = 2;\n              break;\n            }\n\n            return _context.abrupt(\"return\", result);\n\n          case 2:\n            return _context.delegateYield((0, _async.isAsync)(), \"t0\", 3);\n\n          case 3:\n            if (_context.t0) {\n              _context.next = 6;\n              break;\n            }\n\n            return _context.delegateYield(fn(), \"t1\", 5);\n\n          case 5:\n            return _context.abrupt(\"return\", result = _context.t1);\n\n          case 6:\n            if (!resultP) {\n              _context.next = 9;\n              break;\n            }\n\n            return _context.delegateYield((0, _async.waitFor)(resultP), \"t2\", 8);\n\n          case 8:\n            return _context.abrupt(\"return\", _context.t2);\n\n          case 9:\n            resultP = new Promise(function (res, rej) {\n              resolve = res;\n              reject = rej;\n            });\n            _context.prev = 10;\n            return _context.delegateYield(fn(), \"t3\", 12);\n\n          case 12:\n            result = _context.t3;\n            resultP = null;\n            resolve(result);\n            return _context.abrupt(\"return\", result);\n\n          case 18:\n            _context.prev = 18;\n            _context.t4 = _context[\"catch\"](10);\n            reject(_context.t4);\n            throw _context.t4;\n\n          case 22:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[10, 18]]);\n  });\n}\n\n0 && 0;","map":{"version":3,"mappings":";;;;;;;;;AAEA;;AAEO,SAASA,IAAT,CAAiBC,EAAjB,EAAyD;EAC9D,IAAIC,MAAJ;EACA,IAAIC,OAAJ;EACA,+CAAO;IAAA;IAAA;MAAA;QAAA;UAAA;YAAA,KACDD,MADC;cAAA;cAAA;YAAA;;YAAA,iCACcA,MADd;;UAAA;YAEC,8BAAO,qBAAP;;UAFD;YAAA;cAAA;cAAA;YAAA;;YAEqC,8BAAOD,EAAE,EAAT;;UAFrC;YAAA,iCAE4BC,MAF5B;;UAAA;YAAA,KAGDC,OAHC;cAAA;cAAA;YAAA;;YAGe,8BAAO,oBAAQA,OAAR,CAAP;;UAHf;YAAA;;UAAA;YAMLA,OAAO,GAAG,IAAIC,OAAJ,CAAY,UAACC,GAAD,EAAMC,GAAN,EAAc;cAClCC,OAAO,GAAGF,GAAVE;cACAC,MAAM,GAAGF,GAATE;YAFQ,EAAVL;YANK;YAYM,8BAAOF,EAAE,EAAT;;UAZN;YAYHC,MAZG;YAeHC,OAAO,GAAG,IAAVA;YACAI,OAAO,CAACL,MAAD,CAAPK;YAhBG,iCAiBIL,MAjBJ;;UAAA;YAAA;YAAA;YAmBHM,MAAM,aAANA;YAnBG;;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAAP;AAuBD","names":["once","fn","result","resultP","Promise","res","rej","resolve","reject"],"sources":["C:\\Users\\Rohith\\mern\\frontend\\node_modules\\@babel\\core\\src\\gensync-utils\\functional.ts"],"sourcesContent":["import type { Handler } from \"gensync\";\n\nimport { isAsync, waitFor } from \"./async\";\n\nexport function once<R>(fn: () => Handler<R>): () => Handler<R> {\n  let result: R;\n  let resultP: Promise<R>;\n  return function* () {\n    if (result) return result;\n    if (!(yield* isAsync())) return (result = yield* fn());\n    if (resultP) return yield* waitFor(resultP);\n\n    let resolve: (result: R) => void, reject: (error: unknown) => void;\n    resultP = new Promise((res, rej) => {\n      resolve = res;\n      reject = rej;\n    });\n\n    try {\n      result = yield* fn();\n      // Avoid keeping the promise around\n      // now that we have the result.\n      resultP = null;\n      resolve(result);\n      return result;\n    } catch (error) {\n      reject(error);\n      throw error;\n    }\n  };\n}\n"]},"metadata":{},"sourceType":"script"}