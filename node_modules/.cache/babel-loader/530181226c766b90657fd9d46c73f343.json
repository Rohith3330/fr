{"ast":null,"code":"self.Flatted = function (exports) {\n  'use strict';\n\n  function _typeof(obj) {\n    \"@babel/helpers - typeof\";\n\n    return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n      return typeof obj;\n    } : function (obj) {\n      return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    }, _typeof(obj);\n  }\n  /*! (c) 2020 Andrea Giammarchi */\n\n\n  var $parse = JSON.parse,\n      $stringify = JSON.stringify;\n  var keys = Object.keys;\n  var Primitive = String; // it could be Number\n\n  var primitive = 'string'; // it could be 'number'\n\n  var ignore = {};\n  var object = 'object';\n\n  var noop = function noop(_, value) {\n    return value;\n  };\n\n  var primitives = function primitives(value) {\n    return value instanceof Primitive ? Primitive(value) : value;\n  };\n\n  var Primitives = function Primitives(_, value) {\n    return _typeof(value) === primitive ? new Primitive(value) : value;\n  };\n\n  var revive = function revive(input, parsed, output, $) {\n    var lazy = [];\n\n    for (var ke = keys(output), length = ke.length, y = 0; y < length; y++) {\n      var k = ke[y];\n      var value = output[k];\n\n      if (value instanceof Primitive) {\n        var tmp = input[value];\n\n        if (_typeof(tmp) === object && !parsed.has(tmp)) {\n          parsed.add(tmp);\n          output[k] = ignore;\n          lazy.push({\n            k: k,\n            a: [input, parsed, tmp, $]\n          });\n        } else output[k] = $.call(output, k, tmp);\n      } else if (output[k] !== ignore) output[k] = $.call(output, k, value);\n    }\n\n    for (var _length = lazy.length, i = 0; i < _length; i++) {\n      var _lazy$i = lazy[i],\n          _k = _lazy$i.k,\n          a = _lazy$i.a;\n      output[_k] = $.call(output, _k, revive.apply(null, a));\n    }\n\n    return output;\n  };\n\n  var set = function set(known, input, value) {\n    var index = Primitive(input.push(value) - 1);\n    known.set(value, index);\n    return index;\n  };\n\n  var parse = function parse(text, reviver) {\n    var input = $parse(text, Primitives).map(primitives);\n    var value = input[0];\n    var $ = reviver || noop;\n    var tmp = _typeof(value) === object && value ? revive(input, new Set(), value, $) : value;\n    return $.call({\n      '': tmp\n    }, '', tmp);\n  };\n\n  var stringify = function stringify(value, replacer, space) {\n    var $ = replacer && _typeof(replacer) === object ? function (k, v) {\n      return k === '' || -1 < replacer.indexOf(k) ? v : void 0;\n    } : replacer || noop;\n    var known = new Map();\n    var input = [];\n    var output = [];\n    var i = +set(known, input, $.call({\n      '': value\n    }, '', value));\n    var firstRun = !i;\n\n    while (i < input.length) {\n      firstRun = true;\n      output[i] = $stringify(input[i++], replace, space);\n    }\n\n    return '[' + output.join(',') + ']';\n\n    function replace(key, value) {\n      if (firstRun) {\n        firstRun = !firstRun;\n        return value;\n      }\n\n      var after = $.call(this, key, value);\n\n      switch (_typeof(after)) {\n        case object:\n          if (after === null) return after;\n\n        case primitive:\n          return known.get(after) || set(known, input, after);\n      }\n\n      return after;\n    }\n  };\n\n  var toJSON = function toJSON(any) {\n    return $parse(stringify(any));\n  };\n\n  var fromJSON = function fromJSON(any) {\n    return parse($stringify(any));\n  };\n\n  exports.fromJSON = fromJSON;\n  exports.parse = parse;\n  exports.stringify = stringify;\n  exports.toJSON = toJSON;\n  return exports;\n}({});","map":{"version":3,"names":["self","Flatted","exports","_typeof","obj","Symbol","iterator","constructor","prototype","$parse","JSON","parse","$stringify","stringify","keys","Object","Primitive","String","primitive","ignore","object","noop","_","value","primitives","Primitives","revive","input","parsed","output","$","lazy","ke","length","y","k","tmp","has","add","push","a","call","_length","i","_lazy$i","_k","apply","set","known","index","text","reviver","map","Set","replacer","space","v","indexOf","Map","firstRun","replace","join","key","after","get","toJSON","any","fromJSON"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/flatted/index.js"],"sourcesContent":["self.Flatted = (function (exports) {\n  'use strict';\n\n  function _typeof(obj) {\n    \"@babel/helpers - typeof\";\n\n    return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n      return typeof obj;\n    } : function (obj) {\n      return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    }, _typeof(obj);\n  }\n\n  /*! (c) 2020 Andrea Giammarchi */\n  var $parse = JSON.parse,\n      $stringify = JSON.stringify;\n  var keys = Object.keys;\n  var Primitive = String; // it could be Number\n\n  var primitive = 'string'; // it could be 'number'\n\n  var ignore = {};\n  var object = 'object';\n\n  var noop = function noop(_, value) {\n    return value;\n  };\n\n  var primitives = function primitives(value) {\n    return value instanceof Primitive ? Primitive(value) : value;\n  };\n\n  var Primitives = function Primitives(_, value) {\n    return _typeof(value) === primitive ? new Primitive(value) : value;\n  };\n\n  var revive = function revive(input, parsed, output, $) {\n    var lazy = [];\n\n    for (var ke = keys(output), length = ke.length, y = 0; y < length; y++) {\n      var k = ke[y];\n      var value = output[k];\n\n      if (value instanceof Primitive) {\n        var tmp = input[value];\n\n        if (_typeof(tmp) === object && !parsed.has(tmp)) {\n          parsed.add(tmp);\n          output[k] = ignore;\n          lazy.push({\n            k: k,\n            a: [input, parsed, tmp, $]\n          });\n        } else output[k] = $.call(output, k, tmp);\n      } else if (output[k] !== ignore) output[k] = $.call(output, k, value);\n    }\n\n    for (var _length = lazy.length, i = 0; i < _length; i++) {\n      var _lazy$i = lazy[i],\n          _k = _lazy$i.k,\n          a = _lazy$i.a;\n      output[_k] = $.call(output, _k, revive.apply(null, a));\n    }\n\n    return output;\n  };\n\n  var set = function set(known, input, value) {\n    var index = Primitive(input.push(value) - 1);\n    known.set(value, index);\n    return index;\n  };\n\n  var parse = function parse(text, reviver) {\n    var input = $parse(text, Primitives).map(primitives);\n    var value = input[0];\n    var $ = reviver || noop;\n    var tmp = _typeof(value) === object && value ? revive(input, new Set(), value, $) : value;\n    return $.call({\n      '': tmp\n    }, '', tmp);\n  };\n  var stringify = function stringify(value, replacer, space) {\n    var $ = replacer && _typeof(replacer) === object ? function (k, v) {\n      return k === '' || -1 < replacer.indexOf(k) ? v : void 0;\n    } : replacer || noop;\n    var known = new Map();\n    var input = [];\n    var output = [];\n    var i = +set(known, input, $.call({\n      '': value\n    }, '', value));\n    var firstRun = !i;\n\n    while (i < input.length) {\n      firstRun = true;\n      output[i] = $stringify(input[i++], replace, space);\n    }\n\n    return '[' + output.join(',') + ']';\n\n    function replace(key, value) {\n      if (firstRun) {\n        firstRun = !firstRun;\n        return value;\n      }\n\n      var after = $.call(this, key, value);\n\n      switch (_typeof(after)) {\n        case object:\n          if (after === null) return after;\n\n        case primitive:\n          return known.get(after) || set(known, input, after);\n      }\n\n      return after;\n    }\n  };\n  var toJSON = function toJSON(any) {\n    return $parse(stringify(any));\n  };\n  var fromJSON = function fromJSON(any) {\n    return parse($stringify(any));\n  };\n\n  exports.fromJSON = fromJSON;\n  exports.parse = parse;\n  exports.stringify = stringify;\n  exports.toJSON = toJSON;\n\n  return exports;\n\n})({});\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}