{"ast":null,"code":"'use strict'; // TODO: Remove from `core-js@4`\n\nvar ArrayBufferViewCore = require('../internals/array-buffer-view-core');\n\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\n\nvar isBigIntArray = require('../internals/is-big-int-array');\n\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\n\nvar toBigInt = require('../internals/to-big-int');\n\nvar toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\n\nvar fails = require('../internals/fails');\n\nvar aTypedArray = ArrayBufferViewCore.aTypedArray;\nvar getTypedArrayConstructor = ArrayBufferViewCore.getTypedArrayConstructor;\nvar exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;\nvar max = Math.max;\nvar min = Math.min; // some early implementations, like WebKit, does not follow the final semantic\n\nvar PROPER_ORDER = !fails(function () {\n  // eslint-disable-next-line es-x/no-typed-arrays -- required for testing\n  var array = new Int8Array([1]);\n  var spliced = array.toSpliced(1, 0, {\n    valueOf: function () {\n      array[0] = 2;\n      return 3;\n    }\n  });\n  return spliced[0] !== 2 || spliced[1] !== 3;\n}); // `%TypedArray%.prototype.toSpliced` method\n// https://tc39.es/proposal-change-array-by-copy/#sec-%typedarray%.prototype.toSpliced\n\nexportTypedArrayMethod('toSpliced', function toSpliced(start, deleteCount\n/* , ...items */\n) {\n  var O = aTypedArray(this);\n  var C = getTypedArrayConstructor(O);\n  var len = lengthOfArrayLike(O);\n  var actualStart = toAbsoluteIndex(start, len);\n  var argumentsLength = arguments.length;\n  var k = 0;\n  var insertCount, actualDeleteCount, thisIsBigIntArray, convertedItems, value, newLen, A;\n\n  if (argumentsLength === 0) {\n    insertCount = actualDeleteCount = 0;\n  } else if (argumentsLength === 1) {\n    insertCount = 0;\n    actualDeleteCount = len - actualStart;\n  } else {\n    actualDeleteCount = min(max(toIntegerOrInfinity(deleteCount), 0), len - actualStart);\n    insertCount = argumentsLength - 2;\n\n    if (insertCount) {\n      convertedItems = new C(insertCount);\n      thisIsBigIntArray = isBigIntArray(convertedItems);\n\n      for (var i = 2; i < argumentsLength; i++) {\n        value = arguments[i]; // FF30- typed arrays doesn't properly convert objects to typed array values\n\n        convertedItems[i - 2] = thisIsBigIntArray ? toBigInt(value) : +value;\n      }\n    }\n  }\n\n  newLen = len + insertCount - actualDeleteCount;\n  A = new C(newLen);\n\n  for (; k < actualStart; k++) A[k] = O[k];\n\n  for (; k < actualStart + insertCount; k++) A[k] = convertedItems[k - actualStart];\n\n  for (; k < newLen; k++) A[k] = O[k + actualDeleteCount - insertCount];\n\n  return A;\n}, !PROPER_ORDER);","map":{"version":3,"names":["ArrayBufferViewCore","require","lengthOfArrayLike","isBigIntArray","toAbsoluteIndex","toBigInt","toIntegerOrInfinity","fails","aTypedArray","getTypedArrayConstructor","exportTypedArrayMethod","max","Math","min","PROPER_ORDER","array","Int8Array","spliced","toSpliced","valueOf","start","deleteCount","O","C","len","actualStart","argumentsLength","arguments","length","k","insertCount","actualDeleteCount","thisIsBigIntArray","convertedItems","value","newLen","A","i"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/core-js/modules/esnext.typed-array.to-spliced.js"],"sourcesContent":["'use strict';\n// TODO: Remove from `core-js@4`\nvar ArrayBufferViewCore = require('../internals/array-buffer-view-core');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\nvar isBigIntArray = require('../internals/is-big-int-array');\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\nvar toBigInt = require('../internals/to-big-int');\nvar toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\nvar fails = require('../internals/fails');\n\nvar aTypedArray = ArrayBufferViewCore.aTypedArray;\nvar getTypedArrayConstructor = ArrayBufferViewCore.getTypedArrayConstructor;\nvar exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;\nvar max = Math.max;\nvar min = Math.min;\n\n// some early implementations, like WebKit, does not follow the final semantic\nvar PROPER_ORDER = !fails(function () {\n  // eslint-disable-next-line es-x/no-typed-arrays -- required for testing\n  var array = new Int8Array([1]);\n\n  var spliced = array.toSpliced(1, 0, {\n    valueOf: function () {\n      array[0] = 2;\n      return 3;\n    }\n  });\n\n  return spliced[0] !== 2 || spliced[1] !== 3;\n});\n\n// `%TypedArray%.prototype.toSpliced` method\n// https://tc39.es/proposal-change-array-by-copy/#sec-%typedarray%.prototype.toSpliced\nexportTypedArrayMethod('toSpliced', function toSpliced(start, deleteCount /* , ...items */) {\n  var O = aTypedArray(this);\n  var C = getTypedArrayConstructor(O);\n  var len = lengthOfArrayLike(O);\n  var actualStart = toAbsoluteIndex(start, len);\n  var argumentsLength = arguments.length;\n  var k = 0;\n  var insertCount, actualDeleteCount, thisIsBigIntArray, convertedItems, value, newLen, A;\n  if (argumentsLength === 0) {\n    insertCount = actualDeleteCount = 0;\n  } else if (argumentsLength === 1) {\n    insertCount = 0;\n    actualDeleteCount = len - actualStart;\n  } else {\n    actualDeleteCount = min(max(toIntegerOrInfinity(deleteCount), 0), len - actualStart);\n    insertCount = argumentsLength - 2;\n    if (insertCount) {\n      convertedItems = new C(insertCount);\n      thisIsBigIntArray = isBigIntArray(convertedItems);\n      for (var i = 2; i < argumentsLength; i++) {\n        value = arguments[i];\n        // FF30- typed arrays doesn't properly convert objects to typed array values\n        convertedItems[i - 2] = thisIsBigIntArray ? toBigInt(value) : +value;\n      }\n    }\n  }\n  newLen = len + insertCount - actualDeleteCount;\n  A = new C(newLen);\n\n  for (; k < actualStart; k++) A[k] = O[k];\n  for (; k < actualStart + insertCount; k++) A[k] = convertedItems[k - actualStart];\n  for (; k < newLen; k++) A[k] = O[k + actualDeleteCount - insertCount];\n\n  return A;\n}, !PROPER_ORDER);\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}