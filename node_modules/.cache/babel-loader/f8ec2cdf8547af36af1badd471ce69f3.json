{"ast":null,"code":"'use strict';\n\nvar test = require('tape');\n\nvar isNegativeZero = require('../');\n\ntest('not negative zero', function (t) {\n  t.notOk(isNegativeZero(), 'undefined is not negative zero');\n  t.notOk(isNegativeZero(null), 'null is not negative zero');\n  t.notOk(isNegativeZero(false), 'false is not negative zero');\n  t.notOk(isNegativeZero(true), 'true is not negative zero');\n  t.notOk(isNegativeZero(0), 'positive zero is not negative zero');\n  t.notOk(isNegativeZero(Infinity), 'Infinity is not negative zero');\n  t.notOk(isNegativeZero(-Infinity), '-Infinity is not negative zero');\n  t.notOk(isNegativeZero(NaN), 'NaN is not negative zero');\n  t.notOk(isNegativeZero('foo'), 'string is not negative zero');\n  t.notOk(isNegativeZero([]), 'array is not negative zero');\n  t.notOk(isNegativeZero({}), 'object is not negative zero');\n  t.notOk(isNegativeZero(function () {}), 'function is not negative zero');\n  t.notOk(isNegativeZero(-1), '-1 is not negative zero');\n  t.end();\n});\ntest('negative zero', function (t) {\n  t.ok(isNegativeZero(-0), 'negative zero is negative zero');\n  t.end();\n});","map":{"version":3,"names":["test","require","isNegativeZero","t","notOk","Infinity","NaN","end","ok"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/is-negative-zero/test/index.js"],"sourcesContent":["'use strict';\n\nvar test = require('tape');\nvar isNegativeZero = require('../');\n\ntest('not negative zero', function (t) {\n\tt.notOk(isNegativeZero(), 'undefined is not negative zero');\n\tt.notOk(isNegativeZero(null), 'null is not negative zero');\n\tt.notOk(isNegativeZero(false), 'false is not negative zero');\n\tt.notOk(isNegativeZero(true), 'true is not negative zero');\n\tt.notOk(isNegativeZero(0), 'positive zero is not negative zero');\n\tt.notOk(isNegativeZero(Infinity), 'Infinity is not negative zero');\n\tt.notOk(isNegativeZero(-Infinity), '-Infinity is not negative zero');\n\tt.notOk(isNegativeZero(NaN), 'NaN is not negative zero');\n\tt.notOk(isNegativeZero('foo'), 'string is not negative zero');\n\tt.notOk(isNegativeZero([]), 'array is not negative zero');\n\tt.notOk(isNegativeZero({}), 'object is not negative zero');\n\tt.notOk(isNegativeZero(function () {}), 'function is not negative zero');\n\tt.notOk(isNegativeZero(-1), '-1 is not negative zero');\n\n\tt.end();\n});\n\ntest('negative zero', function (t) {\n\tt.ok(isNegativeZero(-0), 'negative zero is negative zero');\n\tt.end();\n});\n\n"],"mappings":"AAAA;;AAEA,IAAIA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAAlB;;AACA,IAAIC,cAAc,GAAGD,OAAO,CAAC,KAAD,CAA5B;;AAEAD,IAAI,CAAC,mBAAD,EAAsB,UAAUG,CAAV,EAAa;EACtCA,CAAC,CAACC,KAAF,CAAQF,cAAc,EAAtB,EAA0B,gCAA1B;EACAC,CAAC,CAACC,KAAF,CAAQF,cAAc,CAAC,IAAD,CAAtB,EAA8B,2BAA9B;EACAC,CAAC,CAACC,KAAF,CAAQF,cAAc,CAAC,KAAD,CAAtB,EAA+B,4BAA/B;EACAC,CAAC,CAACC,KAAF,CAAQF,cAAc,CAAC,IAAD,CAAtB,EAA8B,2BAA9B;EACAC,CAAC,CAACC,KAAF,CAAQF,cAAc,CAAC,CAAD,CAAtB,EAA2B,oCAA3B;EACAC,CAAC,CAACC,KAAF,CAAQF,cAAc,CAACG,QAAD,CAAtB,EAAkC,+BAAlC;EACAF,CAAC,CAACC,KAAF,CAAQF,cAAc,CAAC,CAACG,QAAF,CAAtB,EAAmC,gCAAnC;EACAF,CAAC,CAACC,KAAF,CAAQF,cAAc,CAACI,GAAD,CAAtB,EAA6B,0BAA7B;EACAH,CAAC,CAACC,KAAF,CAAQF,cAAc,CAAC,KAAD,CAAtB,EAA+B,6BAA/B;EACAC,CAAC,CAACC,KAAF,CAAQF,cAAc,CAAC,EAAD,CAAtB,EAA4B,4BAA5B;EACAC,CAAC,CAACC,KAAF,CAAQF,cAAc,CAAC,EAAD,CAAtB,EAA4B,6BAA5B;EACAC,CAAC,CAACC,KAAF,CAAQF,cAAc,CAAC,YAAY,CAAE,CAAf,CAAtB,EAAwC,+BAAxC;EACAC,CAAC,CAACC,KAAF,CAAQF,cAAc,CAAC,CAAC,CAAF,CAAtB,EAA4B,yBAA5B;EAEAC,CAAC,CAACI,GAAF;AACA,CAhBG,CAAJ;AAkBAP,IAAI,CAAC,eAAD,EAAkB,UAAUG,CAAV,EAAa;EAClCA,CAAC,CAACK,EAAF,CAAKN,cAAc,CAAC,CAAC,CAAF,CAAnB,EAAyB,gCAAzB;EACAC,CAAC,CAACI,GAAF;AACA,CAHG,CAAJ"},"metadata":{},"sourceType":"script"}