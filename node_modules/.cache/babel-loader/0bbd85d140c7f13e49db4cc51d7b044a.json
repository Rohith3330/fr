{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.RULE_NAME = void 0;\n\nconst utils_1 = require(\"@typescript-eslint/utils\");\n\nconst create_testing_library_rule_1 = require(\"../create-testing-library-rule\");\n\nconst node_utils_1 = require(\"../node-utils\");\n\nexports.RULE_NAME = 'await-fire-event';\nexports.default = (0, create_testing_library_rule_1.createTestingLibraryRule)({\n  name: exports.RULE_NAME,\n  meta: {\n    type: 'problem',\n    docs: {\n      description: 'Enforce promises from `fireEvent` methods to be handled',\n      recommendedConfig: {\n        dom: false,\n        angular: false,\n        react: false,\n        vue: 'error',\n        marko: 'error'\n      }\n    },\n    messages: {\n      awaitFireEvent: 'Promise returned from `fireEvent.{{ name }}` must be handled',\n      fireEventWrapper: 'Promise returned from `{{ name }}` wrapper over fire event method must be handled'\n    },\n    schema: []\n  },\n  defaultOptions: [],\n\n  create(context, _, helpers) {\n    const functionWrappersNames = [];\n\n    function reportUnhandledNode(node, closestCallExpressionNode) {\n      let messageId = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'awaitFireEvent';\n\n      if (!(0, node_utils_1.isPromiseHandled)(node)) {\n        context.report({\n          node: closestCallExpressionNode.callee,\n          messageId,\n          data: {\n            name: node.name\n          }\n        });\n      }\n    }\n\n    function detectFireEventMethodWrapper(node) {\n      const innerFunction = (0, node_utils_1.getInnermostReturningFunction)(context, node);\n\n      if (innerFunction) {\n        functionWrappersNames.push((0, node_utils_1.getFunctionName)(innerFunction));\n      }\n    }\n\n    return {\n      'CallExpression Identifier'(node) {\n        if (helpers.isFireEventMethod(node)) {\n          detectFireEventMethodWrapper(node);\n          const closestCallExpression = (0, node_utils_1.findClosestCallExpressionNode)(node, true);\n\n          if (!closestCallExpression || !closestCallExpression.parent) {\n            return;\n          }\n\n          const references = (0, node_utils_1.getVariableReferences)(context, closestCallExpression.parent);\n\n          if (references.length === 0) {\n            reportUnhandledNode(node, closestCallExpression);\n          } else {\n            for (const reference of references) {\n              if (utils_1.ASTUtils.isIdentifier(reference.identifier)) {\n                reportUnhandledNode(reference.identifier, closestCallExpression);\n              }\n            }\n          }\n        } else if (functionWrappersNames.includes(node.name)) {\n          const closestCallExpression = (0, node_utils_1.findClosestCallExpressionNode)(node, true);\n\n          if (!closestCallExpression) {\n            return;\n          }\n\n          reportUnhandledNode(node, closestCallExpression, 'fireEventWrapper');\n        }\n      }\n\n    };\n  }\n\n});","map":{"version":3,"names":["Object","defineProperty","exports","value","RULE_NAME","utils_1","require","create_testing_library_rule_1","node_utils_1","default","createTestingLibraryRule","name","meta","type","docs","description","recommendedConfig","dom","angular","react","vue","marko","messages","awaitFireEvent","fireEventWrapper","schema","defaultOptions","create","context","_","helpers","functionWrappersNames","reportUnhandledNode","node","closestCallExpressionNode","messageId","isPromiseHandled","report","callee","data","detectFireEventMethodWrapper","innerFunction","getInnermostReturningFunction","push","getFunctionName","isFireEventMethod","closestCallExpression","findClosestCallExpressionNode","parent","references","getVariableReferences","length","reference","ASTUtils","isIdentifier","identifier","includes"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/eslint-plugin-testing-library/rules/await-fire-event.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RULE_NAME = void 0;\nconst utils_1 = require(\"@typescript-eslint/utils\");\nconst create_testing_library_rule_1 = require(\"../create-testing-library-rule\");\nconst node_utils_1 = require(\"../node-utils\");\nexports.RULE_NAME = 'await-fire-event';\nexports.default = (0, create_testing_library_rule_1.createTestingLibraryRule)({\n    name: exports.RULE_NAME,\n    meta: {\n        type: 'problem',\n        docs: {\n            description: 'Enforce promises from `fireEvent` methods to be handled',\n            recommendedConfig: {\n                dom: false,\n                angular: false,\n                react: false,\n                vue: 'error',\n                marko: 'error',\n            },\n        },\n        messages: {\n            awaitFireEvent: 'Promise returned from `fireEvent.{{ name }}` must be handled',\n            fireEventWrapper: 'Promise returned from `{{ name }}` wrapper over fire event method must be handled',\n        },\n        schema: [],\n    },\n    defaultOptions: [],\n    create(context, _, helpers) {\n        const functionWrappersNames = [];\n        function reportUnhandledNode(node, closestCallExpressionNode, messageId = 'awaitFireEvent') {\n            if (!(0, node_utils_1.isPromiseHandled)(node)) {\n                context.report({\n                    node: closestCallExpressionNode.callee,\n                    messageId,\n                    data: { name: node.name },\n                });\n            }\n        }\n        function detectFireEventMethodWrapper(node) {\n            const innerFunction = (0, node_utils_1.getInnermostReturningFunction)(context, node);\n            if (innerFunction) {\n                functionWrappersNames.push((0, node_utils_1.getFunctionName)(innerFunction));\n            }\n        }\n        return {\n            'CallExpression Identifier'(node) {\n                if (helpers.isFireEventMethod(node)) {\n                    detectFireEventMethodWrapper(node);\n                    const closestCallExpression = (0, node_utils_1.findClosestCallExpressionNode)(node, true);\n                    if (!closestCallExpression || !closestCallExpression.parent) {\n                        return;\n                    }\n                    const references = (0, node_utils_1.getVariableReferences)(context, closestCallExpression.parent);\n                    if (references.length === 0) {\n                        reportUnhandledNode(node, closestCallExpression);\n                    }\n                    else {\n                        for (const reference of references) {\n                            if (utils_1.ASTUtils.isIdentifier(reference.identifier)) {\n                                reportUnhandledNode(reference.identifier, closestCallExpression);\n                            }\n                        }\n                    }\n                }\n                else if (functionWrappersNames.includes(node.name)) {\n                    const closestCallExpression = (0, node_utils_1.findClosestCallExpressionNode)(node, true);\n                    if (!closestCallExpression) {\n                        return;\n                    }\n                    reportUnhandledNode(node, closestCallExpression, 'fireEventWrapper');\n                }\n            },\n        };\n    },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}