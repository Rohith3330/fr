{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _schemas = require(\"../util/schemas\");\n\nvar _getElementType = _interopRequireDefault(require(\"../util/getElementType\"));\n\nvar _hasAccessibleChild = _interopRequireDefault(require(\"../util/hasAccessibleChild\"));\n\nvar _isHiddenFromScreenReader = _interopRequireDefault(require(\"../util/isHiddenFromScreenReader\"));\n/**\n * @fileoverview Enforce heading (h1, h2, etc) elements contain accessible content.\n * @author Ethan Cohen\n */\n// ----------------------------------------------------------------------------\n// Rule Definition\n// ----------------------------------------------------------------------------\n\n\nvar errorMessage = 'Headings must have content and the content must be accessible by a screen reader.';\nvar headings = ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'];\nvar schema = (0, _schemas.generateObjSchema)({\n  components: _schemas.arraySchema\n});\nvar _default = {\n  meta: {\n    docs: {\n      url: 'https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/tree/HEAD/docs/rules/heading-has-content.md',\n      description: 'Enforce heading (`h1`, `h2`, etc) elements contain accessible content.'\n    },\n    schema: [schema]\n  },\n  create: function create(context) {\n    var elementType = (0, _getElementType[\"default\"])(context);\n    return {\n      JSXOpeningElement: function JSXOpeningElement(node) {\n        var options = context.options[0] || {};\n        var componentOptions = options.components || [];\n        var typeCheck = headings.concat(componentOptions);\n        var nodeType = elementType(node); // Only check 'h*' elements and custom types.\n\n        if (typeCheck.indexOf(nodeType) === -1) {\n          return;\n        }\n\n        if ((0, _hasAccessibleChild[\"default\"])(node.parent, elementType)) {\n          return;\n        }\n\n        if ((0, _isHiddenFromScreenReader[\"default\"])(nodeType, node.attributes)) {\n          return;\n        }\n\n        context.report({\n          node,\n          message: errorMessage\n        });\n      }\n    };\n  }\n};\nexports[\"default\"] = _default;\nmodule.exports = exports.default;","map":{"version":3,"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","_schemas","_getElementType","_hasAccessibleChild","_isHiddenFromScreenReader","errorMessage","headings","schema","generateObjSchema","components","arraySchema","_default","meta","docs","url","description","create","context","elementType","JSXOpeningElement","node","options","componentOptions","typeCheck","concat","nodeType","indexOf","parent","attributes","report","message","module","default"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/eslint-plugin-jsx-a11y/lib/rules/heading-has-content.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _schemas = require(\"../util/schemas\");\n\nvar _getElementType = _interopRequireDefault(require(\"../util/getElementType\"));\n\nvar _hasAccessibleChild = _interopRequireDefault(require(\"../util/hasAccessibleChild\"));\n\nvar _isHiddenFromScreenReader = _interopRequireDefault(require(\"../util/isHiddenFromScreenReader\"));\n\n/**\n * @fileoverview Enforce heading (h1, h2, etc) elements contain accessible content.\n * @author Ethan Cohen\n */\n// ----------------------------------------------------------------------------\n// Rule Definition\n// ----------------------------------------------------------------------------\nvar errorMessage = 'Headings must have content and the content must be accessible by a screen reader.';\nvar headings = ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'];\nvar schema = (0, _schemas.generateObjSchema)({\n  components: _schemas.arraySchema\n});\nvar _default = {\n  meta: {\n    docs: {\n      url: 'https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/tree/HEAD/docs/rules/heading-has-content.md',\n      description: 'Enforce heading (`h1`, `h2`, etc) elements contain accessible content.'\n    },\n    schema: [schema]\n  },\n  create: function create(context) {\n    var elementType = (0, _getElementType[\"default\"])(context);\n    return {\n      JSXOpeningElement: function JSXOpeningElement(node) {\n        var options = context.options[0] || {};\n        var componentOptions = options.components || [];\n        var typeCheck = headings.concat(componentOptions);\n        var nodeType = elementType(node); // Only check 'h*' elements and custom types.\n\n        if (typeCheck.indexOf(nodeType) === -1) {\n          return;\n        }\n\n        if ((0, _hasAccessibleChild[\"default\"])(node.parent, elementType)) {\n          return;\n        }\n\n        if ((0, _isHiddenFromScreenReader[\"default\"])(nodeType, node.attributes)) {\n          return;\n        }\n\n        context.report({\n          node,\n          message: errorMessage\n        });\n      }\n    };\n  }\n};\nexports[\"default\"] = _default;\nmodule.exports = exports.default;"],"mappings":"AAAA;;AAEA,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAAD,CAApC;;AAEAC,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAC3CC,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAAC,SAAD,CAAP,GAAqB,KAAK,CAA1B;;AAEA,IAAIE,QAAQ,GAAGL,OAAO,CAAC,iBAAD,CAAtB;;AAEA,IAAIM,eAAe,GAAGP,sBAAsB,CAACC,OAAO,CAAC,wBAAD,CAAR,CAA5C;;AAEA,IAAIO,mBAAmB,GAAGR,sBAAsB,CAACC,OAAO,CAAC,4BAAD,CAAR,CAAhD;;AAEA,IAAIQ,yBAAyB,GAAGT,sBAAsB,CAACC,OAAO,CAAC,kCAAD,CAAR,CAAtD;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIS,YAAY,GAAG,mFAAnB;AACA,IAAIC,QAAQ,GAAG,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+B,IAA/B,CAAf;AACA,IAAIC,MAAM,GAAG,CAAC,GAAGN,QAAQ,CAACO,iBAAb,EAAgC;EAC3CC,UAAU,EAAER,QAAQ,CAACS;AADsB,CAAhC,CAAb;AAGA,IAAIC,QAAQ,GAAG;EACbC,IAAI,EAAE;IACJC,IAAI,EAAE;MACJC,GAAG,EAAE,kGADD;MAEJC,WAAW,EAAE;IAFT,CADF;IAKJR,MAAM,EAAE,CAACA,MAAD;EALJ,CADO;EAQbS,MAAM,EAAE,SAASA,MAAT,CAAgBC,OAAhB,EAAyB;IAC/B,IAAIC,WAAW,GAAG,CAAC,GAAGhB,eAAe,CAAC,SAAD,CAAnB,EAAgCe,OAAhC,CAAlB;IACA,OAAO;MACLE,iBAAiB,EAAE,SAASA,iBAAT,CAA2BC,IAA3B,EAAiC;QAClD,IAAIC,OAAO,GAAGJ,OAAO,CAACI,OAAR,CAAgB,CAAhB,KAAsB,EAApC;QACA,IAAIC,gBAAgB,GAAGD,OAAO,CAACZ,UAAR,IAAsB,EAA7C;QACA,IAAIc,SAAS,GAAGjB,QAAQ,CAACkB,MAAT,CAAgBF,gBAAhB,CAAhB;QACA,IAAIG,QAAQ,GAAGP,WAAW,CAACE,IAAD,CAA1B,CAJkD,CAIhB;;QAElC,IAAIG,SAAS,CAACG,OAAV,CAAkBD,QAAlB,MAAgC,CAAC,CAArC,EAAwC;UACtC;QACD;;QAED,IAAI,CAAC,GAAGtB,mBAAmB,CAAC,SAAD,CAAvB,EAAoCiB,IAAI,CAACO,MAAzC,EAAiDT,WAAjD,CAAJ,EAAmE;UACjE;QACD;;QAED,IAAI,CAAC,GAAGd,yBAAyB,CAAC,SAAD,CAA7B,EAA0CqB,QAA1C,EAAoDL,IAAI,CAACQ,UAAzD,CAAJ,EAA0E;UACxE;QACD;;QAEDX,OAAO,CAACY,MAAR,CAAe;UACbT,IADa;UAEbU,OAAO,EAAEzB;QAFI,CAAf;MAID;IAvBI,CAAP;EAyBD;AAnCY,CAAf;AAqCAN,OAAO,CAAC,SAAD,CAAP,GAAqBY,QAArB;AACAoB,MAAM,CAAChC,OAAP,GAAiBA,OAAO,CAACiC,OAAzB"},"metadata":{},"sourceType":"script"}