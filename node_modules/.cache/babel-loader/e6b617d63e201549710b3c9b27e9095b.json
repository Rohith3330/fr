{"ast":null,"code":"/** internal\n * class ArgumentGroup\n *\n * Group arguments.\n * By default, ArgumentParser groups command-line arguments\n * into “positional arguments” and “optional arguments”\n * when displaying help messages. When there is a better\n * conceptual grouping of arguments than this default one,\n * appropriate groups can be created using the addArgumentGroup() method\n *\n * This class inherited from [[ArgumentContainer]]\n **/\n'use strict';\n\nvar util = require('util');\n\nvar ActionContainer = require('../action_container');\n/**\n * new ArgumentGroup(container, options)\n * - container (object): main container\n * - options (object): hash of group options\n *\n * #### options\n * - **prefixChars**  group name prefix\n * - **argumentDefault**  default argument value\n * - **title**  group title\n * - **description** group description\n *\n **/\n\n\nvar ArgumentGroup = module.exports = function ArgumentGroup(container, options) {\n  options = options || {}; // add any missing keyword arguments by checking the container\n\n  options.conflictHandler = options.conflictHandler || container.conflictHandler;\n  options.prefixChars = options.prefixChars || container.prefixChars;\n  options.argumentDefault = options.argumentDefault || container.argumentDefault;\n  ActionContainer.call(this, options); // group attributes\n\n  this.title = options.title;\n  this._groupActions = []; // share most attributes with the container\n\n  this._container = container;\n  this._registries = container._registries;\n  this._actions = container._actions;\n  this._optionStringActions = container._optionStringActions;\n  this._defaults = container._defaults;\n  this._hasNegativeNumberOptionals = container._hasNegativeNumberOptionals;\n  this._mutuallyExclusiveGroups = container._mutuallyExclusiveGroups;\n};\n\nutil.inherits(ArgumentGroup, ActionContainer);\n\nArgumentGroup.prototype._addAction = function (action) {\n  // Parent add action\n  action = ActionContainer.prototype._addAction.call(this, action);\n\n  this._groupActions.push(action);\n\n  return action;\n};\n\nArgumentGroup.prototype._removeAction = function (action) {\n  // Parent remove action\n  ActionContainer.prototype._removeAction.call(this, action);\n\n  var actionIndex = this._groupActions.indexOf(action);\n\n  if (actionIndex >= 0) {\n    this._groupActions.splice(actionIndex, 1);\n  }\n};","map":{"version":3,"names":["util","require","ActionContainer","ArgumentGroup","module","exports","container","options","conflictHandler","prefixChars","argumentDefault","call","title","_groupActions","_container","_registries","_actions","_optionStringActions","_defaults","_hasNegativeNumberOptionals","_mutuallyExclusiveGroups","inherits","prototype","_addAction","action","push","_removeAction","actionIndex","indexOf","splice"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/argparse/lib/argument/group.js"],"sourcesContent":["/** internal\n * class ArgumentGroup\n *\n * Group arguments.\n * By default, ArgumentParser groups command-line arguments\n * into “positional arguments” and “optional arguments”\n * when displaying help messages. When there is a better\n * conceptual grouping of arguments than this default one,\n * appropriate groups can be created using the addArgumentGroup() method\n *\n * This class inherited from [[ArgumentContainer]]\n **/\n'use strict';\n\nvar util = require('util');\n\nvar ActionContainer = require('../action_container');\n\n\n/**\n * new ArgumentGroup(container, options)\n * - container (object): main container\n * - options (object): hash of group options\n *\n * #### options\n * - **prefixChars**  group name prefix\n * - **argumentDefault**  default argument value\n * - **title**  group title\n * - **description** group description\n *\n **/\nvar ArgumentGroup = module.exports = function ArgumentGroup(container, options) {\n\n  options = options || {};\n\n  // add any missing keyword arguments by checking the container\n  options.conflictHandler = (options.conflictHandler || container.conflictHandler);\n  options.prefixChars = (options.prefixChars || container.prefixChars);\n  options.argumentDefault = (options.argumentDefault || container.argumentDefault);\n\n  ActionContainer.call(this, options);\n\n  // group attributes\n  this.title = options.title;\n  this._groupActions = [];\n\n  // share most attributes with the container\n  this._container = container;\n  this._registries = container._registries;\n  this._actions = container._actions;\n  this._optionStringActions = container._optionStringActions;\n  this._defaults = container._defaults;\n  this._hasNegativeNumberOptionals = container._hasNegativeNumberOptionals;\n  this._mutuallyExclusiveGroups = container._mutuallyExclusiveGroups;\n};\nutil.inherits(ArgumentGroup, ActionContainer);\n\n\nArgumentGroup.prototype._addAction = function (action) {\n  // Parent add action\n  action = ActionContainer.prototype._addAction.call(this, action);\n  this._groupActions.push(action);\n  return action;\n};\n\n\nArgumentGroup.prototype._removeAction = function (action) {\n  // Parent remove action\n  ActionContainer.prototype._removeAction.call(this, action);\n  var actionIndex = this._groupActions.indexOf(action);\n  if (actionIndex >= 0) {\n    this._groupActions.splice(actionIndex, 1);\n  }\n};\n\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAAlB;;AAEA,IAAIC,eAAe,GAAGD,OAAO,CAAC,qBAAD,CAA7B;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIE,aAAa,GAAGC,MAAM,CAACC,OAAP,GAAiB,SAASF,aAAT,CAAuBG,SAAvB,EAAkCC,OAAlC,EAA2C;EAE9EA,OAAO,GAAGA,OAAO,IAAI,EAArB,CAF8E,CAI9E;;EACAA,OAAO,CAACC,eAAR,GAA2BD,OAAO,CAACC,eAAR,IAA2BF,SAAS,CAACE,eAAhE;EACAD,OAAO,CAACE,WAAR,GAAuBF,OAAO,CAACE,WAAR,IAAuBH,SAAS,CAACG,WAAxD;EACAF,OAAO,CAACG,eAAR,GAA2BH,OAAO,CAACG,eAAR,IAA2BJ,SAAS,CAACI,eAAhE;EAEAR,eAAe,CAACS,IAAhB,CAAqB,IAArB,EAA2BJ,OAA3B,EAT8E,CAW9E;;EACA,KAAKK,KAAL,GAAaL,OAAO,CAACK,KAArB;EACA,KAAKC,aAAL,GAAqB,EAArB,CAb8E,CAe9E;;EACA,KAAKC,UAAL,GAAkBR,SAAlB;EACA,KAAKS,WAAL,GAAmBT,SAAS,CAACS,WAA7B;EACA,KAAKC,QAAL,GAAgBV,SAAS,CAACU,QAA1B;EACA,KAAKC,oBAAL,GAA4BX,SAAS,CAACW,oBAAtC;EACA,KAAKC,SAAL,GAAiBZ,SAAS,CAACY,SAA3B;EACA,KAAKC,2BAAL,GAAmCb,SAAS,CAACa,2BAA7C;EACA,KAAKC,wBAAL,GAAgCd,SAAS,CAACc,wBAA1C;AACD,CAvBD;;AAwBApB,IAAI,CAACqB,QAAL,CAAclB,aAAd,EAA6BD,eAA7B;;AAGAC,aAAa,CAACmB,SAAd,CAAwBC,UAAxB,GAAqC,UAAUC,MAAV,EAAkB;EACrD;EACAA,MAAM,GAAGtB,eAAe,CAACoB,SAAhB,CAA0BC,UAA1B,CAAqCZ,IAArC,CAA0C,IAA1C,EAAgDa,MAAhD,CAAT;;EACA,KAAKX,aAAL,CAAmBY,IAAnB,CAAwBD,MAAxB;;EACA,OAAOA,MAAP;AACD,CALD;;AAQArB,aAAa,CAACmB,SAAd,CAAwBI,aAAxB,GAAwC,UAAUF,MAAV,EAAkB;EACxD;EACAtB,eAAe,CAACoB,SAAhB,CAA0BI,aAA1B,CAAwCf,IAAxC,CAA6C,IAA7C,EAAmDa,MAAnD;;EACA,IAAIG,WAAW,GAAG,KAAKd,aAAL,CAAmBe,OAAnB,CAA2BJ,MAA3B,CAAlB;;EACA,IAAIG,WAAW,IAAI,CAAnB,EAAsB;IACpB,KAAKd,aAAL,CAAmBgB,MAAnB,CAA0BF,WAA1B,EAAuC,CAAvC;EACD;AACF,CAPD"},"metadata":{},"sourceType":"script"}