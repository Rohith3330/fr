{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.collectVariableUsage = exports.getDeclarationDomain = exports.getUsageDomain = exports.UsageDomain = exports.DeclarationDomain = void 0;\n\nconst util_1 = require(\"./util\");\n\nconst ts = require(\"typescript\");\n\nvar DeclarationDomain;\n\n(function (DeclarationDomain) {\n  DeclarationDomain[DeclarationDomain[\"Namespace\"] = 1] = \"Namespace\";\n  DeclarationDomain[DeclarationDomain[\"Type\"] = 2] = \"Type\";\n  DeclarationDomain[DeclarationDomain[\"Value\"] = 4] = \"Value\";\n  DeclarationDomain[DeclarationDomain[\"Import\"] = 8] = \"Import\";\n  DeclarationDomain[DeclarationDomain[\"Any\"] = 7] = \"Any\";\n})(DeclarationDomain = exports.DeclarationDomain || (exports.DeclarationDomain = {}));\n\nvar UsageDomain;\n\n(function (UsageDomain) {\n  UsageDomain[UsageDomain[\"Namespace\"] = 1] = \"Namespace\";\n  UsageDomain[UsageDomain[\"Type\"] = 2] = \"Type\";\n  UsageDomain[UsageDomain[\"Value\"] = 4] = \"Value\";\n  UsageDomain[UsageDomain[\"ValueOrNamespace\"] = 5] = \"ValueOrNamespace\";\n  UsageDomain[UsageDomain[\"Any\"] = 7] = \"Any\";\n  UsageDomain[UsageDomain[\"TypeQuery\"] = 8] = \"TypeQuery\";\n})(UsageDomain = exports.UsageDomain || (exports.UsageDomain = {})); // TODO handle cases where values are used only for their types, e.g. `declare [propSymbol]: number`\n\n\nfunction getUsageDomain(node) {\n  const parent = node.parent;\n\n  switch (parent.kind) {\n    case ts.SyntaxKind.TypeReference:\n      return node.originalKeywordKind !== ts.SyntaxKind.ConstKeyword ? 2\n      /* Type */\n      : undefined;\n\n    case ts.SyntaxKind.ExpressionWithTypeArguments:\n      return parent.parent.token === ts.SyntaxKind.ImplementsKeyword || parent.parent.parent.kind === ts.SyntaxKind.InterfaceDeclaration ? 2\n      /* Type */\n      : 4\n      /* Value */\n      ;\n\n    case ts.SyntaxKind.TypeQuery:\n      return 5\n      /* ValueOrNamespace */\n      | 8\n      /* TypeQuery */\n      ;\n\n    case ts.SyntaxKind.QualifiedName:\n      if (parent.left === node) {\n        if (getEntityNameParent(parent).kind === ts.SyntaxKind.TypeQuery) return 1\n        /* Namespace */\n        | 8\n        /* TypeQuery */\n        ;\n        return 1\n        /* Namespace */\n        ;\n      }\n\n      break;\n\n    case ts.SyntaxKind.ExportSpecifier:\n      // either {name} or {propertyName as name}\n      if (parent.propertyName === undefined || parent.propertyName === node) return 7\n      /* Any */\n      ; // TODO handle type-only exports\n\n      break;\n\n    case ts.SyntaxKind.ExportAssignment:\n      return 7\n      /* Any */\n      ;\n    // Value\n\n    case ts.SyntaxKind.BindingElement:\n      if (parent.initializer === node) return 5\n      /* ValueOrNamespace */\n      ;\n      break;\n\n    case ts.SyntaxKind.Parameter:\n    case ts.SyntaxKind.EnumMember:\n    case ts.SyntaxKind.PropertyDeclaration:\n    case ts.SyntaxKind.VariableDeclaration:\n    case ts.SyntaxKind.PropertyAssignment:\n    case ts.SyntaxKind.PropertyAccessExpression:\n    case ts.SyntaxKind.ImportEqualsDeclaration:\n      if (parent.name !== node) return 5\n      /* ValueOrNamespace */\n      ; // TODO handle type-only imports\n\n      break;\n\n    case ts.SyntaxKind.JsxAttribute:\n    case ts.SyntaxKind.FunctionDeclaration:\n    case ts.SyntaxKind.FunctionExpression:\n    case ts.SyntaxKind.NamespaceImport:\n    case ts.SyntaxKind.ClassDeclaration:\n    case ts.SyntaxKind.ClassExpression:\n    case ts.SyntaxKind.ModuleDeclaration:\n    case ts.SyntaxKind.MethodDeclaration:\n    case ts.SyntaxKind.EnumDeclaration:\n    case ts.SyntaxKind.GetAccessor:\n    case ts.SyntaxKind.SetAccessor:\n    case ts.SyntaxKind.LabeledStatement:\n    case ts.SyntaxKind.BreakStatement:\n    case ts.SyntaxKind.ContinueStatement:\n    case ts.SyntaxKind.ImportClause:\n    case ts.SyntaxKind.ImportSpecifier:\n    case ts.SyntaxKind.TypePredicate: // TODO this actually references a parameter\n\n    case ts.SyntaxKind.MethodSignature:\n    case ts.SyntaxKind.PropertySignature:\n    case ts.SyntaxKind.NamespaceExportDeclaration:\n    case ts.SyntaxKind.NamespaceExport:\n    case ts.SyntaxKind.InterfaceDeclaration:\n    case ts.SyntaxKind.TypeAliasDeclaration:\n    case ts.SyntaxKind.TypeParameter:\n    case ts.SyntaxKind.NamedTupleMember:\n      break;\n\n    default:\n      return 5\n      /* ValueOrNamespace */\n      ;\n  }\n}\n\nexports.getUsageDomain = getUsageDomain;\n\nfunction getDeclarationDomain(node) {\n  switch (node.parent.kind) {\n    case ts.SyntaxKind.TypeParameter:\n    case ts.SyntaxKind.InterfaceDeclaration:\n    case ts.SyntaxKind.TypeAliasDeclaration:\n      return 2\n      /* Type */\n      ;\n\n    case ts.SyntaxKind.ClassDeclaration:\n    case ts.SyntaxKind.ClassExpression:\n      return 2\n      /* Type */\n      | 4\n      /* Value */\n      ;\n\n    case ts.SyntaxKind.EnumDeclaration:\n      return 7\n      /* Any */\n      ;\n\n    case ts.SyntaxKind.NamespaceImport:\n    case ts.SyntaxKind.ImportClause:\n      return 7\n      /* Any */\n      | 8\n      /* Import */\n      ;\n    // TODO handle type-only imports\n\n    case ts.SyntaxKind.ImportEqualsDeclaration:\n    case ts.SyntaxKind.ImportSpecifier:\n      return node.parent.name === node ? 7\n      /* Any */\n      | 8\n      /* Import */\n      // TODO handle type-only imports\n      : undefined;\n\n    case ts.SyntaxKind.ModuleDeclaration:\n      return 1\n      /* Namespace */\n      ;\n\n    case ts.SyntaxKind.Parameter:\n      if (node.parent.parent.kind === ts.SyntaxKind.IndexSignature || node.originalKeywordKind === ts.SyntaxKind.ThisKeyword) return;\n    // falls through\n\n    case ts.SyntaxKind.BindingElement:\n    case ts.SyntaxKind.VariableDeclaration:\n      return node.parent.name === node ? 4\n      /* Value */\n      : undefined;\n\n    case ts.SyntaxKind.FunctionDeclaration:\n    case ts.SyntaxKind.FunctionExpression:\n      return 4\n      /* Value */\n      ;\n  }\n}\n\nexports.getDeclarationDomain = getDeclarationDomain;\n\nfunction collectVariableUsage(sourceFile) {\n  return new UsageWalker().getUsage(sourceFile);\n}\n\nexports.collectVariableUsage = collectVariableUsage;\n\nclass AbstractScope {\n  constructor(_global) {\n    this._global = _global;\n    this._variables = new Map();\n    this._uses = [];\n    this._namespaceScopes = undefined;\n    this._enumScopes = undefined;\n  }\n\n  addVariable(identifier, name, selector, exported, domain) {\n    const variables = this.getDestinationScope(selector).getVariables();\n    const declaration = {\n      domain,\n      exported,\n      declaration: name\n    };\n    const variable = variables.get(identifier);\n\n    if (variable === undefined) {\n      variables.set(identifier, {\n        domain,\n        declarations: [declaration],\n        uses: []\n      });\n    } else {\n      variable.domain |= domain;\n      variable.declarations.push(declaration);\n    }\n  }\n\n  addUse(use) {\n    this._uses.push(use);\n  }\n\n  getVariables() {\n    return this._variables;\n  }\n\n  getFunctionScope() {\n    return this;\n  }\n\n  end(cb) {\n    if (this._namespaceScopes !== undefined) this._namespaceScopes.forEach(value => value.finish(cb));\n    this._namespaceScopes = this._enumScopes = undefined;\n\n    this._applyUses();\n\n    this._variables.forEach(variable => {\n      for (const declaration of variable.declarations) {\n        const result = {\n          declarations: [],\n          domain: declaration.domain,\n          exported: declaration.exported,\n          inGlobalScope: this._global,\n          uses: []\n        };\n\n        for (const other of variable.declarations) if (other.domain & declaration.domain) result.declarations.push(other.declaration);\n\n        for (const use of variable.uses) if (use.domain & declaration.domain) result.uses.push(use);\n\n        cb(result, declaration.declaration, this);\n      }\n    });\n  } // tslint:disable-next-line:prefer-function-over-method\n\n\n  markExported(_name) {} // only relevant for the root scope\n\n\n  createOrReuseNamespaceScope(name, _exported, ambient, hasExportStatement) {\n    let scope;\n\n    if (this._namespaceScopes === undefined) {\n      this._namespaceScopes = new Map();\n    } else {\n      scope = this._namespaceScopes.get(name);\n    }\n\n    if (scope === undefined) {\n      scope = new NamespaceScope(ambient, hasExportStatement, this);\n\n      this._namespaceScopes.set(name, scope);\n    } else {\n      scope.refresh(ambient, hasExportStatement);\n    }\n\n    return scope;\n  }\n\n  createOrReuseEnumScope(name, _exported) {\n    let scope;\n\n    if (this._enumScopes === undefined) {\n      this._enumScopes = new Map();\n    } else {\n      scope = this._enumScopes.get(name);\n    }\n\n    if (scope === undefined) {\n      scope = new EnumScope(this);\n\n      this._enumScopes.set(name, scope);\n    }\n\n    return scope;\n  }\n\n  _applyUses() {\n    for (const use of this._uses) if (!this._applyUse(use)) this._addUseToParent(use);\n\n    this._uses = [];\n  }\n\n  _applyUse(use) {\n    let variables = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this._variables;\n    const variable = variables.get(use.location.text);\n    if (variable === undefined || (variable.domain & use.domain) === 0) return false;\n    variable.uses.push(use);\n    return true;\n  }\n\n  _addUseToParent(_use) {} // tslint:disable-line:prefer-function-over-method\n\n\n}\n\nclass RootScope extends AbstractScope {\n  constructor(_exportAll, global) {\n    super(global);\n    this._exportAll = _exportAll;\n    this._exports = undefined;\n    this._innerScope = new NonRootScope(this, 1\n    /* Function */\n    );\n  }\n\n  addVariable(identifier, name, selector, exported, domain) {\n    if (domain & 8\n    /* Import */\n    ) return super.addVariable(identifier, name, selector, exported, domain);\n    return this._innerScope.addVariable(identifier, name, selector, exported, domain);\n  }\n\n  addUse(use, origin) {\n    if (origin === this._innerScope) return super.addUse(use);\n    return this._innerScope.addUse(use);\n  }\n\n  markExported(id) {\n    if (this._exports === undefined) {\n      this._exports = [id.text];\n    } else {\n      this._exports.push(id.text);\n    }\n  }\n\n  end(cb) {\n    this._innerScope.end((value, key) => {\n      value.exported = value.exported || this._exportAll || this._exports !== undefined && this._exports.includes(key.text);\n      value.inGlobalScope = this._global;\n      return cb(value, key, this);\n    });\n\n    return super.end((value, key, scope) => {\n      value.exported = value.exported || scope === this && this._exports !== undefined && this._exports.includes(key.text);\n      return cb(value, key, scope);\n    });\n  }\n\n  getDestinationScope() {\n    return this;\n  }\n\n}\n\nclass NonRootScope extends AbstractScope {\n  constructor(_parent, _boundary) {\n    super(false);\n    this._parent = _parent;\n    this._boundary = _boundary;\n  }\n\n  _addUseToParent(use) {\n    return this._parent.addUse(use, this);\n  }\n\n  getDestinationScope(selector) {\n    return this._boundary & selector ? this : this._parent.getDestinationScope(selector);\n  }\n\n}\n\nclass EnumScope extends NonRootScope {\n  constructor(parent) {\n    super(parent, 1\n    /* Function */\n    );\n  }\n\n  end() {\n    this._applyUses();\n  }\n\n}\n\nclass ConditionalTypeScope extends NonRootScope {\n  constructor(parent) {\n    super(parent, 8\n    /* ConditionalType */\n    );\n    this._state = 0\n    /* Initial */\n    ;\n  }\n\n  updateState(newState) {\n    this._state = newState;\n  }\n\n  addUse(use) {\n    if (this._state === 2\n    /* TrueType */\n    ) return void this._uses.push(use);\n    return this._parent.addUse(use, this);\n  }\n\n}\n\nclass FunctionScope extends NonRootScope {\n  constructor(parent) {\n    super(parent, 1\n    /* Function */\n    );\n  }\n\n  beginBody() {\n    this._applyUses();\n  }\n\n}\n\nclass AbstractNamedExpressionScope extends NonRootScope {\n  constructor(_name, _domain, parent) {\n    super(parent, 1\n    /* Function */\n    );\n    this._name = _name;\n    this._domain = _domain;\n  }\n\n  end(cb) {\n    this._innerScope.end(cb);\n\n    return cb({\n      declarations: [this._name],\n      domain: this._domain,\n      exported: false,\n      uses: this._uses,\n      inGlobalScope: false\n    }, this._name, this);\n  }\n\n  addUse(use, source) {\n    if (source !== this._innerScope) return this._innerScope.addUse(use);\n\n    if (use.domain & this._domain && use.location.text === this._name.text) {\n      this._uses.push(use);\n    } else {\n      return this._parent.addUse(use, this);\n    }\n  }\n\n  getFunctionScope() {\n    return this._innerScope;\n  }\n\n  getDestinationScope() {\n    return this._innerScope;\n  }\n\n}\n\nclass FunctionExpressionScope extends AbstractNamedExpressionScope {\n  constructor(name, parent) {\n    super(name, 4\n    /* Value */\n    , parent);\n    this._innerScope = new FunctionScope(this);\n  }\n\n  beginBody() {\n    return this._innerScope.beginBody();\n  }\n\n}\n\nclass ClassExpressionScope extends AbstractNamedExpressionScope {\n  constructor(name, parent) {\n    super(name, 4\n    /* Value */\n    | 2\n    /* Type */\n    , parent);\n    this._innerScope = new NonRootScope(this, 1\n    /* Function */\n    );\n  }\n\n}\n\nclass BlockScope extends NonRootScope {\n  constructor(_functionScope, parent) {\n    super(parent, 2\n    /* Block */\n    );\n    this._functionScope = _functionScope;\n  }\n\n  getFunctionScope() {\n    return this._functionScope;\n  }\n\n}\n\nfunction mapDeclaration(declaration) {\n  return {\n    declaration,\n    exported: true,\n    domain: getDeclarationDomain(declaration)\n  };\n}\n\nclass NamespaceScope extends NonRootScope {\n  constructor(_ambient, _hasExport, parent) {\n    super(parent, 1\n    /* Function */\n    );\n    this._ambient = _ambient;\n    this._hasExport = _hasExport;\n    this._innerScope = new NonRootScope(this, 1\n    /* Function */\n    );\n    this._exports = undefined;\n  }\n\n  finish(cb) {\n    return super.end(cb);\n  }\n\n  end(cb) {\n    this._innerScope.end((variable, key, scope) => {\n      if (scope !== this._innerScope || !variable.exported && (!this._ambient || this._exports !== undefined && !this._exports.has(key.text))) return cb(variable, key, scope);\n\n      const namespaceVar = this._variables.get(key.text);\n\n      if (namespaceVar === undefined) {\n        this._variables.set(key.text, {\n          declarations: variable.declarations.map(mapDeclaration),\n          domain: variable.domain,\n          uses: [...variable.uses]\n        });\n      } else {\n        outer: for (const declaration of variable.declarations) {\n          for (const existing of namespaceVar.declarations) if (existing.declaration === declaration) continue outer;\n\n          namespaceVar.declarations.push(mapDeclaration(declaration));\n        }\n\n        namespaceVar.domain |= variable.domain;\n\n        for (const use of variable.uses) {\n          if (namespaceVar.uses.includes(use)) continue;\n          namespaceVar.uses.push(use);\n        }\n      }\n    });\n\n    this._applyUses();\n\n    this._innerScope = new NonRootScope(this, 1\n    /* Function */\n    );\n  }\n\n  createOrReuseNamespaceScope(name, exported, ambient, hasExportStatement) {\n    if (!exported && (!this._ambient || this._hasExport)) return this._innerScope.createOrReuseNamespaceScope(name, exported, ambient || this._ambient, hasExportStatement);\n    return super.createOrReuseNamespaceScope(name, exported, ambient || this._ambient, hasExportStatement);\n  }\n\n  createOrReuseEnumScope(name, exported) {\n    if (!exported && (!this._ambient || this._hasExport)) return this._innerScope.createOrReuseEnumScope(name, exported);\n    return super.createOrReuseEnumScope(name, exported);\n  }\n\n  addUse(use, source) {\n    if (source !== this._innerScope) return this._innerScope.addUse(use);\n\n    this._uses.push(use);\n  }\n\n  refresh(ambient, hasExport) {\n    this._ambient = ambient;\n    this._hasExport = hasExport;\n  }\n\n  markExported(name, _as) {\n    if (this._exports === undefined) this._exports = new Set();\n\n    this._exports.add(name.text);\n  }\n\n  getDestinationScope() {\n    return this._innerScope;\n  }\n\n}\n\nfunction getEntityNameParent(name) {\n  let parent = name.parent;\n\n  while (parent.kind === ts.SyntaxKind.QualifiedName) parent = parent.parent;\n\n  return parent;\n} // TODO class decorators resolve outside of class, element and parameter decorator resolve inside/at the class\n// TODO computed property name resolves inside/at the cass\n// TODO this and super in all of them are resolved outside of the class\n\n\nclass UsageWalker {\n  constructor() {\n    this._result = new Map();\n  }\n\n  getUsage(sourceFile) {\n    var _this = this;\n\n    const variableCallback = (variable, key) => {\n      this._result.set(key, variable);\n    };\n\n    const isModule = ts.isExternalModule(sourceFile);\n    this._scope = new RootScope(sourceFile.isDeclarationFile && isModule && !containsExportStatement(sourceFile), !isModule);\n\n    const cb = node => {\n      if (util_1.isBlockScopeBoundary(node)) return continueWithScope(node, new BlockScope(this._scope.getFunctionScope(), this._scope), handleBlockScope);\n\n      switch (node.kind) {\n        case ts.SyntaxKind.ClassExpression:\n          return continueWithScope(node, node.name !== undefined ? new ClassExpressionScope(node.name, this._scope) : new NonRootScope(this._scope, 1\n          /* Function */\n          ));\n\n        case ts.SyntaxKind.ClassDeclaration:\n          this._handleDeclaration(node, true, 4\n          /* Value */\n          | 2\n          /* Type */\n          );\n\n          return continueWithScope(node, new NonRootScope(this._scope, 1\n          /* Function */\n          ));\n\n        case ts.SyntaxKind.InterfaceDeclaration:\n        case ts.SyntaxKind.TypeAliasDeclaration:\n          this._handleDeclaration(node, true, 2\n          /* Type */\n          );\n\n          return continueWithScope(node, new NonRootScope(this._scope, 4\n          /* Type */\n          ));\n\n        case ts.SyntaxKind.EnumDeclaration:\n          this._handleDeclaration(node, true, 7\n          /* Any */\n          );\n\n          return continueWithScope(node, this._scope.createOrReuseEnumScope(node.name.text, util_1.hasModifier(node.modifiers, ts.SyntaxKind.ExportKeyword)));\n\n        case ts.SyntaxKind.ModuleDeclaration:\n          return this._handleModule(node, continueWithScope);\n\n        case ts.SyntaxKind.MappedType:\n          return continueWithScope(node, new NonRootScope(this._scope, 4\n          /* Type */\n          ));\n\n        case ts.SyntaxKind.FunctionExpression:\n        case ts.SyntaxKind.ArrowFunction:\n        case ts.SyntaxKind.Constructor:\n        case ts.SyntaxKind.MethodDeclaration:\n        case ts.SyntaxKind.FunctionDeclaration:\n        case ts.SyntaxKind.GetAccessor:\n        case ts.SyntaxKind.SetAccessor:\n        case ts.SyntaxKind.MethodSignature:\n        case ts.SyntaxKind.CallSignature:\n        case ts.SyntaxKind.ConstructSignature:\n        case ts.SyntaxKind.ConstructorType:\n        case ts.SyntaxKind.FunctionType:\n          return this._handleFunctionLikeDeclaration(node, cb, variableCallback);\n\n        case ts.SyntaxKind.ConditionalType:\n          return this._handleConditionalType(node, cb, variableCallback);\n        // End of Scope specific handling\n\n        case ts.SyntaxKind.VariableDeclarationList:\n          this._handleVariableDeclaration(node);\n\n          break;\n\n        case ts.SyntaxKind.Parameter:\n          if (node.parent.kind !== ts.SyntaxKind.IndexSignature && (node.name.kind !== ts.SyntaxKind.Identifier || node.name.originalKeywordKind !== ts.SyntaxKind.ThisKeyword)) this._handleBindingName(node.name, false, false);\n          break;\n\n        case ts.SyntaxKind.EnumMember:\n          this._scope.addVariable(util_1.getPropertyName(node.name), node.name, 1\n          /* Function */\n          , true, 4\n          /* Value */\n          );\n\n          break;\n\n        case ts.SyntaxKind.ImportClause:\n        case ts.SyntaxKind.ImportSpecifier:\n        case ts.SyntaxKind.NamespaceImport:\n        case ts.SyntaxKind.ImportEqualsDeclaration:\n          this._handleDeclaration(node, false, 7\n          /* Any */\n          | 8\n          /* Import */\n          );\n\n          break;\n\n        case ts.SyntaxKind.TypeParameter:\n          this._scope.addVariable(node.name.text, node.name, node.parent.kind === ts.SyntaxKind.InferType ? 8\n          /* InferType */\n          : 7\n          /* Type */\n          , false, 2\n          /* Type */\n          );\n\n          break;\n\n        case ts.SyntaxKind.ExportSpecifier:\n          if (node.propertyName !== undefined) return this._scope.markExported(node.propertyName, node.name);\n          return this._scope.markExported(node.name);\n\n        case ts.SyntaxKind.ExportAssignment:\n          if (node.expression.kind === ts.SyntaxKind.Identifier) return this._scope.markExported(node.expression);\n          break;\n\n        case ts.SyntaxKind.Identifier:\n          const domain = getUsageDomain(node);\n          if (domain !== undefined) this._scope.addUse({\n            domain,\n            location: node\n          });\n          return;\n      }\n\n      return ts.forEachChild(node, cb);\n    };\n\n    const continueWithScope = function (node, scope) {\n      let next = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : forEachChild;\n      const savedScope = _this._scope;\n      _this._scope = scope;\n      next(node);\n\n      _this._scope.end(variableCallback);\n\n      _this._scope = savedScope;\n    };\n\n    const handleBlockScope = node => {\n      if (node.kind === ts.SyntaxKind.CatchClause && node.variableDeclaration !== undefined) this._handleBindingName(node.variableDeclaration.name, true, false);\n      return ts.forEachChild(node, cb);\n    };\n\n    ts.forEachChild(sourceFile, cb);\n\n    this._scope.end(variableCallback);\n\n    return this._result;\n\n    function forEachChild(node) {\n      return ts.forEachChild(node, cb);\n    }\n  }\n\n  _handleConditionalType(node, cb, varCb) {\n    const savedScope = this._scope;\n    const scope = this._scope = new ConditionalTypeScope(savedScope);\n    cb(node.checkType);\n    scope.updateState(1\n    /* Extends */\n    );\n    cb(node.extendsType);\n    scope.updateState(2\n    /* TrueType */\n    );\n    cb(node.trueType);\n    scope.updateState(3\n    /* FalseType */\n    );\n    cb(node.falseType);\n    scope.end(varCb);\n    this._scope = savedScope;\n  }\n\n  _handleFunctionLikeDeclaration(node, cb, varCb) {\n    if (node.decorators !== undefined) node.decorators.forEach(cb);\n    const savedScope = this._scope;\n    if (node.kind === ts.SyntaxKind.FunctionDeclaration) this._handleDeclaration(node, false, 4\n    /* Value */\n    );\n    const scope = this._scope = node.kind === ts.SyntaxKind.FunctionExpression && node.name !== undefined ? new FunctionExpressionScope(node.name, savedScope) : new FunctionScope(savedScope);\n    if (node.name !== undefined) cb(node.name);\n    if (node.typeParameters !== undefined) node.typeParameters.forEach(cb);\n    node.parameters.forEach(cb);\n    if (node.type !== undefined) cb(node.type);\n\n    if (node.body !== undefined) {\n      scope.beginBody();\n      cb(node.body);\n    }\n\n    scope.end(varCb);\n    this._scope = savedScope;\n  }\n\n  _handleModule(node, next) {\n    if (node.flags & ts.NodeFlags.GlobalAugmentation) return next(node, this._scope.createOrReuseNamespaceScope('-global', false, true, false));\n\n    if (node.name.kind === ts.SyntaxKind.Identifier) {\n      const exported = isNamespaceExported(node);\n\n      this._scope.addVariable(node.name.text, node.name, 1\n      /* Function */\n      , exported, 1\n      /* Namespace */\n      | 4\n      /* Value */\n      );\n\n      const ambient = util_1.hasModifier(node.modifiers, ts.SyntaxKind.DeclareKeyword);\n      return next(node, this._scope.createOrReuseNamespaceScope(node.name.text, exported, ambient, ambient && namespaceHasExportStatement(node)));\n    }\n\n    return next(node, this._scope.createOrReuseNamespaceScope(`\"${node.name.text}\"`, false, true, namespaceHasExportStatement(node)));\n  }\n\n  _handleDeclaration(node, blockScoped, domain) {\n    if (node.name !== undefined) this._scope.addVariable(node.name.text, node.name, blockScoped ? 3\n    /* Block */\n    : 1\n    /* Function */\n    , util_1.hasModifier(node.modifiers, ts.SyntaxKind.ExportKeyword), domain);\n  }\n\n  _handleBindingName(name, blockScoped, exported) {\n    if (name.kind === ts.SyntaxKind.Identifier) return this._scope.addVariable(name.text, name, blockScoped ? 3\n    /* Block */\n    : 1\n    /* Function */\n    , exported, 4\n    /* Value */\n    );\n    util_1.forEachDestructuringIdentifier(name, declaration => {\n      this._scope.addVariable(declaration.name.text, declaration.name, blockScoped ? 3\n      /* Block */\n      : 1\n      /* Function */\n      , exported, 4\n      /* Value */\n      );\n    });\n  }\n\n  _handleVariableDeclaration(declarationList) {\n    const blockScoped = util_1.isBlockScopedVariableDeclarationList(declarationList);\n    const exported = declarationList.parent.kind === ts.SyntaxKind.VariableStatement && util_1.hasModifier(declarationList.parent.modifiers, ts.SyntaxKind.ExportKeyword);\n\n    for (const declaration of declarationList.declarations) this._handleBindingName(declaration.name, blockScoped, exported);\n  }\n\n}\n\nfunction isNamespaceExported(node) {\n  return node.parent.kind === ts.SyntaxKind.ModuleDeclaration || util_1.hasModifier(node.modifiers, ts.SyntaxKind.ExportKeyword);\n}\n\nfunction namespaceHasExportStatement(ns) {\n  if (ns.body === undefined || ns.body.kind !== ts.SyntaxKind.ModuleBlock) return false;\n  return containsExportStatement(ns.body);\n}\n\nfunction containsExportStatement(block) {\n  for (const statement of block.statements) if (statement.kind === ts.SyntaxKind.ExportDeclaration || statement.kind === ts.SyntaxKind.ExportAssignment) return true;\n\n  return false;\n}","map":{"version":3,"mappings":"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","names":["DeclarationDomain","exports","UsageDomain","getUsageDomain","node","parent","kind","ts","SyntaxKind","TypeReference","originalKeywordKind","ConstKeyword","undefined","ExpressionWithTypeArguments","token","ImplementsKeyword","InterfaceDeclaration","TypeQuery","QualifiedName","left","getEntityNameParent","ExportSpecifier","propertyName","ExportAssignment","BindingElement","initializer","Parameter","EnumMember","PropertyDeclaration","VariableDeclaration","PropertyAssignment","PropertyAccessExpression","ImportEqualsDeclaration","name","JsxAttribute","FunctionDeclaration","FunctionExpression","NamespaceImport","ClassDeclaration","ClassExpression","ModuleDeclaration","MethodDeclaration","EnumDeclaration","GetAccessor","SetAccessor","LabeledStatement","BreakStatement","ContinueStatement","ImportClause","ImportSpecifier","TypePredicate","MethodSignature","PropertySignature","NamespaceExportDeclaration","NamespaceExport","TypeAliasDeclaration","TypeParameter","NamedTupleMember","getDeclarationDomain","IndexSignature","ThisKeyword","collectVariableUsage","sourceFile","UsageWalker","getUsage","AbstractScope","constructor","_global","Map","addVariable","identifier","selector","exported","domain","variables","getDestinationScope","getVariables","declaration","variable","get","set","declarations","uses","push","addUse","use","_uses","_variables","getFunctionScope","end","cb","_namespaceScopes","forEach","value","finish","_enumScopes","_applyUses","result","inGlobalScope","other","markExported","_name","createOrReuseNamespaceScope","_exported","ambient","hasExportStatement","scope","NamespaceScope","refresh","createOrReuseEnumScope","EnumScope","_applyUse","_addUseToParent","location","text","_use","RootScope","_exportAll","global","NonRootScope","_innerScope","origin","id","_exports","key","includes","_parent","_boundary","ConditionalTypeScope","updateState","newState","_state","FunctionScope","beginBody","AbstractNamedExpressionScope","_domain","source","FunctionExpressionScope","ClassExpressionScope","BlockScope","_functionScope","mapDeclaration","_ambient","_hasExport","has","namespaceVar","map","outer","existing","hasExport","_as","Set","add","variableCallback","_result","isModule","isExternalModule","_scope","isDeclarationFile","containsExportStatement","util_1","continueWithScope","handleBlockScope","_handleDeclaration","modifiers","ExportKeyword","_handleModule","MappedType","ArrowFunction","Constructor","CallSignature","ConstructSignature","ConstructorType","FunctionType","_handleFunctionLikeDeclaration","ConditionalType","_handleConditionalType","VariableDeclarationList","_handleVariableDeclaration","Identifier","_handleBindingName","InferType","expression","forEachChild","next","savedScope","CatchClause","variableDeclaration","varCb","checkType","extendsType","trueType","falseType","decorators","typeParameters","parameters","type","body","flags","NodeFlags","GlobalAugmentation","isNamespaceExported","DeclareKeyword","namespaceHasExportStatement","blockScoped","declarationList","VariableStatement","ns","ModuleBlock","block","statement","statements","ExportDeclaration"],"sources":["usage.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}