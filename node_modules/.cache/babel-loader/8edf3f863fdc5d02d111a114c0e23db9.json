{"ast":null,"code":"import crypto from 'crypto';\nconst rnds8Pool = new Uint8Array(256); // # of random values to pre-allocate\n\nlet poolPtr = rnds8Pool.length;\nexport default function rng() {\n  if (poolPtr > rnds8Pool.length - 16) {\n    crypto.randomFillSync(rnds8Pool);\n    poolPtr = 0;\n  }\n\n  return rnds8Pool.slice(poolPtr, poolPtr += 16);\n}","map":{"version":3,"names":["crypto","rnds8Pool","Uint8Array","poolPtr","length","rng","randomFillSync","slice"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/uuid/dist/esm-node/rng.js"],"sourcesContent":["import crypto from 'crypto';\nconst rnds8Pool = new Uint8Array(256); // # of random values to pre-allocate\n\nlet poolPtr = rnds8Pool.length;\nexport default function rng() {\n  if (poolPtr > rnds8Pool.length - 16) {\n    crypto.randomFillSync(rnds8Pool);\n    poolPtr = 0;\n  }\n\n  return rnds8Pool.slice(poolPtr, poolPtr += 16);\n}"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,QAAnB;AACA,MAAMC,SAAS,GAAG,IAAIC,UAAJ,CAAe,GAAf,CAAlB,C,CAAuC;;AAEvC,IAAIC,OAAO,GAAGF,SAAS,CAACG,MAAxB;AACA,eAAe,SAASC,GAAT,GAAe;EAC5B,IAAIF,OAAO,GAAGF,SAAS,CAACG,MAAV,GAAmB,EAAjC,EAAqC;IACnCJ,MAAM,CAACM,cAAP,CAAsBL,SAAtB;IACAE,OAAO,GAAG,CAAV;EACD;;EAED,OAAOF,SAAS,CAACM,KAAV,CAAgBJ,OAAhB,EAAyBA,OAAO,IAAI,EAApC,CAAP;AACD"},"metadata":{},"sourceType":"module"}