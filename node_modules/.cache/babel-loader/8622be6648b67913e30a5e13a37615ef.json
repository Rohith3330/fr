{"ast":null,"code":"/**\n * @fileoverview XML character escaper\n * @author George Chung\n */\n\"use strict\"; //------------------------------------------------------------------------------\n// Public Interface\n//------------------------------------------------------------------------------\n\n/**\n * Returns the escaped value for a character\n * @param {string} s string to examine\n * @returns {string} severity level\n * @private\n */\n\nmodule.exports = function (s) {\n  return `${s}`.replace(/[<>&\"'\\x00-\\x1F\\x7F\\u0080-\\uFFFF]/gu, c => {\n    // eslint-disable-line no-control-regex -- Converting controls to entities\n    switch (c) {\n      case \"<\":\n        return \"&lt;\";\n\n      case \">\":\n        return \"&gt;\";\n\n      case \"&\":\n        return \"&amp;\";\n\n      case \"\\\"\":\n        return \"&quot;\";\n\n      case \"'\":\n        return \"&apos;\";\n\n      default:\n        return `&#${c.charCodeAt(0)};`;\n    }\n  });\n};","map":{"version":3,"names":["module","exports","s","replace","c","charCodeAt"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/eslint/lib/cli-engine/xml-escape.js"],"sourcesContent":["/**\n * @fileoverview XML character escaper\n * @author George Chung\n */\n\"use strict\";\n\n//------------------------------------------------------------------------------\n// Public Interface\n//------------------------------------------------------------------------------\n\n/**\n * Returns the escaped value for a character\n * @param {string} s string to examine\n * @returns {string} severity level\n * @private\n */\nmodule.exports = function(s) {\n    return (`${s}`).replace(/[<>&\"'\\x00-\\x1F\\x7F\\u0080-\\uFFFF]/gu, c => { // eslint-disable-line no-control-regex -- Converting controls to entities\n        switch (c) {\n            case \"<\":\n                return \"&lt;\";\n            case \">\":\n                return \"&gt;\";\n            case \"&\":\n                return \"&amp;\";\n            case \"\\\"\":\n                return \"&quot;\";\n            case \"'\":\n                return \"&apos;\";\n            default:\n                return `&#${c.charCodeAt(0)};`;\n        }\n    });\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,a,CAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AACAA,MAAM,CAACC,OAAP,GAAiB,UAASC,CAAT,EAAY;EACzB,OAAS,GAAEA,CAAE,EAAN,CAASC,OAAT,CAAiB,qCAAjB,EAAwDC,CAAC,IAAI;IAAE;IAClE,QAAQA,CAAR;MACI,KAAK,GAAL;QACI,OAAO,MAAP;;MACJ,KAAK,GAAL;QACI,OAAO,MAAP;;MACJ,KAAK,GAAL;QACI,OAAO,OAAP;;MACJ,KAAK,IAAL;QACI,OAAO,QAAP;;MACJ,KAAK,GAAL;QACI,OAAO,QAAP;;MACJ;QACI,OAAQ,KAAIA,CAAC,CAACC,UAAF,CAAa,CAAb,CAAgB,GAA5B;IAZR;EAcH,CAfM,CAAP;AAgBH,CAjBD"},"metadata":{},"sourceType":"script"}