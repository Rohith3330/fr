{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"default\", {\n  enumerable: true,\n  get: () => _default\n});\n\nconst _postcssSelectorParser = /*#__PURE__*/_interopRequireDefault(require(\"postcss-selector-parser\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _default(prefix, selector) {\n  let prependNegative = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  return (0, _postcssSelectorParser.default)(selectors => {\n    selectors.walkClasses(classSelector => {\n      let baseClass = classSelector.value;\n      let shouldPlaceNegativeBeforePrefix = prependNegative && baseClass.startsWith(\"-\");\n      classSelector.value = shouldPlaceNegativeBeforePrefix ? `-${prefix}${baseClass.slice(1)}` : `${prefix}${baseClass}`;\n    });\n  }).processSync(selector);\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","enumerable","get","_default","_postcssSelectorParser","_interopRequireDefault","require","obj","__esModule","default","prefix","selector","prependNegative","selectors","walkClasses","classSelector","baseClass","shouldPlaceNegativeBeforePrefix","startsWith","slice","processSync"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/tailwindcss/lib/util/prefixSelector.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: ()=>_default\n});\nconst _postcssSelectorParser = /*#__PURE__*/ _interopRequireDefault(require(\"postcss-selector-parser\"));\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nfunction _default(prefix, selector, prependNegative = false) {\n    return (0, _postcssSelectorParser.default)((selectors)=>{\n        selectors.walkClasses((classSelector)=>{\n            let baseClass = classSelector.value;\n            let shouldPlaceNegativeBeforePrefix = prependNegative && baseClass.startsWith(\"-\");\n            classSelector.value = shouldPlaceNegativeBeforePrefix ? `-${prefix}${baseClass.slice(1)}` : `${prefix}${baseClass}`;\n        });\n    }).processSync(selector);\n}\n"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EACzCC,KAAK,EAAE;AADkC,CAA7C;AAGAH,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,SAA/B,EAA0C;EACtCE,UAAU,EAAE,IAD0B;EAEtCC,GAAG,EAAE,MAAIC;AAF6B,CAA1C;;AAIA,MAAMC,sBAAsB,GAAG,aAAcC,sBAAsB,CAACC,OAAO,CAAC,yBAAD,CAAR,CAAnE;;AACA,SAASD,sBAAT,CAAgCE,GAAhC,EAAqC;EACjC,OAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;IACjCE,OAAO,EAAEF;EADwB,CAArC;AAGH;;AACD,SAASJ,QAAT,CAAkBO,MAAlB,EAA0BC,QAA1B,EAA6D;EAAA,IAAzBC,eAAyB,uEAAP,KAAO;EACzD,OAAO,CAAC,GAAGR,sBAAsB,CAACK,OAA3B,EAAqCI,SAAD,IAAa;IACpDA,SAAS,CAACC,WAAV,CAAuBC,aAAD,IAAiB;MACnC,IAAIC,SAAS,GAAGD,aAAa,CAACf,KAA9B;MACA,IAAIiB,+BAA+B,GAAGL,eAAe,IAAII,SAAS,CAACE,UAAV,CAAqB,GAArB,CAAzD;MACAH,aAAa,CAACf,KAAd,GAAsBiB,+BAA+B,GAAI,IAAGP,MAAO,GAAEM,SAAS,CAACG,KAAV,CAAgB,CAAhB,CAAmB,EAAnC,GAAwC,GAAET,MAAO,GAAEM,SAAU,EAAlH;IACH,CAJD;EAKH,CANM,EAMJI,WANI,CAMQT,QANR,CAAP;AAOH"},"metadata":{},"sourceType":"script"}