{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.shouldUseRule = exports.shouldUseGroup = exports.schemaHasRulesForType = void 0;\n\nfunction schemaHasRulesForType(_ref, type) {\n  let {\n    schema,\n    self\n  } = _ref;\n  const group = self.RULES.types[type];\n  return group && group !== true && shouldUseGroup(schema, group);\n}\n\nexports.schemaHasRulesForType = schemaHasRulesForType;\n\nfunction shouldUseGroup(schema, group) {\n  return group.rules.some(rule => shouldUseRule(schema, rule));\n}\n\nexports.shouldUseGroup = shouldUseGroup;\n\nfunction shouldUseRule(schema, rule) {\n  var _a;\n\n  return schema[rule.keyword] !== undefined || ((_a = rule.definition.implements) === null || _a === void 0 ? void 0 : _a.some(kwd => schema[kwd] !== undefined));\n}\n\nexports.shouldUseRule = shouldUseRule;","map":{"version":3,"mappings":";;;;;;;AAIA,SAAgBA,qBAAhB,OAEEC,IAFF,EAEgB;EAAA,IADd;IAACC,MAAD;IAASC;EAAT,CACc;EAEd,MAAMC,KAAK,GAAGD,IAAI,CAACE,KAAL,CAAWC,KAAX,CAAiBL,IAAjB,CAAd;EACA,OAAOG,KAAK,IAAIA,KAAK,KAAK,IAAnB,IAA2BG,cAAc,CAACL,MAAD,EAASE,KAAT,CAAhD;AACD;;AANDI;;AAQA,SAAgBD,cAAhB,CAA+BL,MAA/B,EAAwDE,KAAxD,EAAwE;EACtE,OAAOA,KAAK,CAACK,KAAN,CAAYC,IAAZ,CAAkBC,IAAD,IAAUC,aAAa,CAACV,MAAD,EAASS,IAAT,CAAxC,CAAP;AACD;;AAFDH;;AAIA,SAAgBI,aAAhB,CAA8BV,MAA9B,EAAuDS,IAAvD,EAAiE;;;EAC/D,OACET,MAAM,CAACS,IAAI,CAACE,OAAN,CAAN,KAAyBC,SAAzB,KACA,UAAI,CAACC,UAAL,CAAgBC,UAAhB,MAA0B,IAA1B,IAA0BC,aAA1B,GAA0B,MAA1B,GAA0BA,GAAEP,IAAF,CAAQQ,GAAD,IAAShB,MAAM,CAACgB,GAAD,CAAN,KAAgBJ,SAAhC,CAD1B,CADF;AAID;;AALDN","names":["schemaHasRulesForType","type","schema","self","group","RULES","types","shouldUseGroup","exports","rules","some","rule","shouldUseRule","keyword","undefined","definition","implements","_a","kwd"],"sources":["C:\\Users\\Rohith\\mern\\frontend\\node_modules\\mini-css-extract-plugin\\node_modules\\ajv\\lib\\compile\\validate\\applicability.ts"],"sourcesContent":["import type {AnySchemaObject} from \"../../types\"\nimport type {SchemaObjCxt} from \"..\"\nimport type {JSONType, RuleGroup, Rule} from \"../rules\"\n\nexport function schemaHasRulesForType(\n  {schema, self}: SchemaObjCxt,\n  type: JSONType\n): boolean | undefined {\n  const group = self.RULES.types[type]\n  return group && group !== true && shouldUseGroup(schema, group)\n}\n\nexport function shouldUseGroup(schema: AnySchemaObject, group: RuleGroup): boolean {\n  return group.rules.some((rule) => shouldUseRule(schema, rule))\n}\n\nexport function shouldUseRule(schema: AnySchemaObject, rule: Rule): boolean | undefined {\n  return (\n    schema[rule.keyword] !== undefined ||\n    rule.definition.implements?.some((kwd) => schema[kwd] !== undefined)\n  )\n}\n"]},"metadata":{},"sourceType":"script"}