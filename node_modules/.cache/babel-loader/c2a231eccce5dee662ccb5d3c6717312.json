{"ast":null,"code":"// jscs:disable requireUseStrict\nvar test = require('tape');\n\nvar functionBind = require('../implementation');\n\nvar getCurrentContext = function () {\n  return this;\n};\n\ntest('functionBind is a function', function (t) {\n  t.equal(typeof functionBind, 'function');\n  t.end();\n});\ntest('non-functions', function (t) {\n  var nonFunctions = [true, false, [], {}, 42, 'foo', NaN, /a/g];\n  t.plan(nonFunctions.length);\n\n  for (var i = 0; i < nonFunctions.length; ++i) {\n    try {\n      functionBind.call(nonFunctions[i]);\n    } catch (ex) {\n      t.ok(ex instanceof TypeError, 'throws when given ' + String(nonFunctions[i]));\n    }\n  }\n\n  t.end();\n});\ntest('without a context', function (t) {\n  t.test('binds properly', function (st) {\n    var args, context;\n    var namespace = {\n      func: functionBind.call(function () {\n        args = Array.prototype.slice.call(arguments);\n        context = this;\n      })\n    };\n    namespace.func(1, 2, 3);\n    st.deepEqual(args, [1, 2, 3]);\n    st.equal(context, getCurrentContext.call());\n    st.end();\n  });\n  t.test('binds properly, and still supplies bound arguments', function (st) {\n    var args, context;\n    var namespace = {\n      func: functionBind.call(function () {\n        args = Array.prototype.slice.call(arguments);\n        context = this;\n      }, undefined, 1, 2, 3)\n    };\n    namespace.func(4, 5, 6);\n    st.deepEqual(args, [1, 2, 3, 4, 5, 6]);\n    st.equal(context, getCurrentContext.call());\n    st.end();\n  });\n  t.test('returns properly', function (st) {\n    var args;\n    var namespace = {\n      func: functionBind.call(function () {\n        args = Array.prototype.slice.call(arguments);\n        return this;\n      }, null)\n    };\n    var context = namespace.func(1, 2, 3);\n    st.equal(context, getCurrentContext.call(), 'returned context is namespaced context');\n    st.deepEqual(args, [1, 2, 3], 'passed arguments are correct');\n    st.end();\n  });\n  t.test('returns properly with bound arguments', function (st) {\n    var args;\n    var namespace = {\n      func: functionBind.call(function () {\n        args = Array.prototype.slice.call(arguments);\n        return this;\n      }, null, 1, 2, 3)\n    };\n    var context = namespace.func(4, 5, 6);\n    st.equal(context, getCurrentContext.call(), 'returned context is namespaced context');\n    st.deepEqual(args, [1, 2, 3, 4, 5, 6], 'passed arguments are correct');\n    st.end();\n  });\n  t.test('called as a constructor', function (st) {\n    var thunkify = function (value) {\n      return function () {\n        return value;\n      };\n    };\n\n    st.test('returns object value', function (sst) {\n      var expectedReturnValue = [1, 2, 3];\n      var Constructor = functionBind.call(thunkify(expectedReturnValue), null);\n      var result = new Constructor();\n      sst.equal(result, expectedReturnValue);\n      sst.end();\n    });\n    st.test('does not return primitive value', function (sst) {\n      var Constructor = functionBind.call(thunkify(42), null);\n      var result = new Constructor();\n      sst.notEqual(result, 42);\n      sst.end();\n    });\n    st.test('object from bound constructor is instance of original and bound constructor', function (sst) {\n      var A = function (x) {\n        this.name = x || 'A';\n      };\n\n      var B = functionBind.call(A, null, 'B');\n      var result = new B();\n      sst.ok(result instanceof B, 'result is instance of bound constructor');\n      sst.ok(result instanceof A, 'result is instance of original constructor');\n      sst.end();\n    });\n    st.end();\n  });\n  t.end();\n});\ntest('with a context', function (t) {\n  t.test('with no bound arguments', function (st) {\n    var args, context;\n    var boundContext = {};\n    var namespace = {\n      func: functionBind.call(function () {\n        args = Array.prototype.slice.call(arguments);\n        context = this;\n      }, boundContext)\n    };\n    namespace.func(1, 2, 3);\n    st.equal(context, boundContext, 'binds a context properly');\n    st.deepEqual(args, [1, 2, 3], 'supplies passed arguments');\n    st.end();\n  });\n  t.test('with bound arguments', function (st) {\n    var args, context;\n    var boundContext = {};\n    var namespace = {\n      func: functionBind.call(function () {\n        args = Array.prototype.slice.call(arguments);\n        context = this;\n      }, boundContext, 1, 2, 3)\n    };\n    namespace.func(4, 5, 6);\n    st.equal(context, boundContext, 'binds a context properly');\n    st.deepEqual(args, [1, 2, 3, 4, 5, 6], 'supplies bound and passed arguments');\n    st.end();\n  });\n  t.test('returns properly', function (st) {\n    var boundContext = {};\n    var args;\n    var namespace = {\n      func: functionBind.call(function () {\n        args = Array.prototype.slice.call(arguments);\n        return this;\n      }, boundContext)\n    };\n    var context = namespace.func(1, 2, 3);\n    st.equal(context, boundContext, 'returned context is bound context');\n    st.notEqual(context, getCurrentContext.call(), 'returned context is not lexical context');\n    st.deepEqual(args, [1, 2, 3], 'passed arguments are correct');\n    st.end();\n  });\n  t.test('returns properly with bound arguments', function (st) {\n    var boundContext = {};\n    var args;\n    var namespace = {\n      func: functionBind.call(function () {\n        args = Array.prototype.slice.call(arguments);\n        return this;\n      }, boundContext, 1, 2, 3)\n    };\n    var context = namespace.func(4, 5, 6);\n    st.equal(context, boundContext, 'returned context is bound context');\n    st.notEqual(context, getCurrentContext.call(), 'returned context is not lexical context');\n    st.deepEqual(args, [1, 2, 3, 4, 5, 6], 'passed arguments are correct');\n    st.end();\n  });\n  t.test('passes the correct arguments when called as a constructor', function (st) {\n    var expected = {\n      name: 'Correct'\n    };\n    var namespace = {\n      Func: functionBind.call(function (arg) {\n        return arg;\n      }, {\n        name: 'Incorrect'\n      })\n    };\n    var returned = new namespace.Func(expected);\n    st.equal(returned, expected, 'returns the right arg when called as a constructor');\n    st.end();\n  });\n  t.test('has the new instance\\'s context when called as a constructor', function (st) {\n    var actualContext;\n    var expectedContext = {\n      foo: 'bar'\n    };\n    var namespace = {\n      Func: functionBind.call(function () {\n        actualContext = this;\n      }, expectedContext)\n    };\n    var result = new namespace.Func();\n    st.equal(result instanceof namespace.Func, true);\n    st.notEqual(actualContext, expectedContext);\n    st.end();\n  });\n  t.end();\n});\ntest('bound function length', function (t) {\n  t.test('sets a correct length without thisArg', function (st) {\n    var subject = functionBind.call(function (a, b, c) {\n      return a + b + c;\n    });\n    st.equal(subject.length, 3);\n    st.equal(subject(1, 2, 3), 6);\n    st.end();\n  });\n  t.test('sets a correct length with thisArg', function (st) {\n    var subject = functionBind.call(function (a, b, c) {\n      return a + b + c;\n    }, {});\n    st.equal(subject.length, 3);\n    st.equal(subject(1, 2, 3), 6);\n    st.end();\n  });\n  t.test('sets a correct length without thisArg and first argument', function (st) {\n    var subject = functionBind.call(function (a, b, c) {\n      return a + b + c;\n    }, undefined, 1);\n    st.equal(subject.length, 2);\n    st.equal(subject(2, 3), 6);\n    st.end();\n  });\n  t.test('sets a correct length with thisArg and first argument', function (st) {\n    var subject = functionBind.call(function (a, b, c) {\n      return a + b + c;\n    }, {}, 1);\n    st.equal(subject.length, 2);\n    st.equal(subject(2, 3), 6);\n    st.end();\n  });\n  t.test('sets a correct length without thisArg and too many arguments', function (st) {\n    var subject = functionBind.call(function (a, b, c) {\n      return a + b + c;\n    }, undefined, 1, 2, 3, 4);\n    st.equal(subject.length, 0);\n    st.equal(subject(), 6);\n    st.end();\n  });\n  t.test('sets a correct length with thisArg and too many arguments', function (st) {\n    var subject = functionBind.call(function (a, b, c) {\n      return a + b + c;\n    }, {}, 1, 2, 3, 4);\n    st.equal(subject.length, 0);\n    st.equal(subject(), 6);\n    st.end();\n  });\n});","map":{"version":3,"names":["test","require","functionBind","getCurrentContext","t","equal","end","nonFunctions","NaN","plan","length","i","call","ex","ok","TypeError","String","st","args","context","namespace","func","Array","prototype","slice","arguments","deepEqual","undefined","thunkify","value","sst","expectedReturnValue","Constructor","result","notEqual","A","x","name","B","boundContext","expected","Func","arg","returned","actualContext","expectedContext","foo","subject","a","b","c"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/function-bind/test/index.js"],"sourcesContent":["// jscs:disable requireUseStrict\n\nvar test = require('tape');\n\nvar functionBind = require('../implementation');\nvar getCurrentContext = function () { return this; };\n\ntest('functionBind is a function', function (t) {\n    t.equal(typeof functionBind, 'function');\n    t.end();\n});\n\ntest('non-functions', function (t) {\n    var nonFunctions = [true, false, [], {}, 42, 'foo', NaN, /a/g];\n    t.plan(nonFunctions.length);\n    for (var i = 0; i < nonFunctions.length; ++i) {\n        try { functionBind.call(nonFunctions[i]); } catch (ex) {\n            t.ok(ex instanceof TypeError, 'throws when given ' + String(nonFunctions[i]));\n        }\n    }\n    t.end();\n});\n\ntest('without a context', function (t) {\n    t.test('binds properly', function (st) {\n        var args, context;\n        var namespace = {\n            func: functionBind.call(function () {\n                args = Array.prototype.slice.call(arguments);\n                context = this;\n            })\n        };\n        namespace.func(1, 2, 3);\n        st.deepEqual(args, [1, 2, 3]);\n        st.equal(context, getCurrentContext.call());\n        st.end();\n    });\n\n    t.test('binds properly, and still supplies bound arguments', function (st) {\n        var args, context;\n        var namespace = {\n            func: functionBind.call(function () {\n                args = Array.prototype.slice.call(arguments);\n                context = this;\n            }, undefined, 1, 2, 3)\n        };\n        namespace.func(4, 5, 6);\n        st.deepEqual(args, [1, 2, 3, 4, 5, 6]);\n        st.equal(context, getCurrentContext.call());\n        st.end();\n    });\n\n    t.test('returns properly', function (st) {\n        var args;\n        var namespace = {\n            func: functionBind.call(function () {\n                args = Array.prototype.slice.call(arguments);\n                return this;\n            }, null)\n        };\n        var context = namespace.func(1, 2, 3);\n        st.equal(context, getCurrentContext.call(), 'returned context is namespaced context');\n        st.deepEqual(args, [1, 2, 3], 'passed arguments are correct');\n        st.end();\n    });\n\n    t.test('returns properly with bound arguments', function (st) {\n        var args;\n        var namespace = {\n            func: functionBind.call(function () {\n                args = Array.prototype.slice.call(arguments);\n                return this;\n            }, null, 1, 2, 3)\n        };\n        var context = namespace.func(4, 5, 6);\n        st.equal(context, getCurrentContext.call(), 'returned context is namespaced context');\n        st.deepEqual(args, [1, 2, 3, 4, 5, 6], 'passed arguments are correct');\n        st.end();\n    });\n\n    t.test('called as a constructor', function (st) {\n        var thunkify = function (value) {\n            return function () { return value; };\n        };\n        st.test('returns object value', function (sst) {\n            var expectedReturnValue = [1, 2, 3];\n            var Constructor = functionBind.call(thunkify(expectedReturnValue), null);\n            var result = new Constructor();\n            sst.equal(result, expectedReturnValue);\n            sst.end();\n        });\n\n        st.test('does not return primitive value', function (sst) {\n            var Constructor = functionBind.call(thunkify(42), null);\n            var result = new Constructor();\n            sst.notEqual(result, 42);\n            sst.end();\n        });\n\n        st.test('object from bound constructor is instance of original and bound constructor', function (sst) {\n            var A = function (x) {\n                this.name = x || 'A';\n            };\n            var B = functionBind.call(A, null, 'B');\n\n            var result = new B();\n            sst.ok(result instanceof B, 'result is instance of bound constructor');\n            sst.ok(result instanceof A, 'result is instance of original constructor');\n            sst.end();\n        });\n\n        st.end();\n    });\n\n    t.end();\n});\n\ntest('with a context', function (t) {\n    t.test('with no bound arguments', function (st) {\n        var args, context;\n        var boundContext = {};\n        var namespace = {\n            func: functionBind.call(function () {\n                args = Array.prototype.slice.call(arguments);\n                context = this;\n            }, boundContext)\n        };\n        namespace.func(1, 2, 3);\n        st.equal(context, boundContext, 'binds a context properly');\n        st.deepEqual(args, [1, 2, 3], 'supplies passed arguments');\n        st.end();\n    });\n\n    t.test('with bound arguments', function (st) {\n        var args, context;\n        var boundContext = {};\n        var namespace = {\n            func: functionBind.call(function () {\n                args = Array.prototype.slice.call(arguments);\n                context = this;\n            }, boundContext, 1, 2, 3)\n        };\n        namespace.func(4, 5, 6);\n        st.equal(context, boundContext, 'binds a context properly');\n        st.deepEqual(args, [1, 2, 3, 4, 5, 6], 'supplies bound and passed arguments');\n        st.end();\n    });\n\n    t.test('returns properly', function (st) {\n        var boundContext = {};\n        var args;\n        var namespace = {\n            func: functionBind.call(function () {\n                args = Array.prototype.slice.call(arguments);\n                return this;\n            }, boundContext)\n        };\n        var context = namespace.func(1, 2, 3);\n        st.equal(context, boundContext, 'returned context is bound context');\n        st.notEqual(context, getCurrentContext.call(), 'returned context is not lexical context');\n        st.deepEqual(args, [1, 2, 3], 'passed arguments are correct');\n        st.end();\n    });\n\n    t.test('returns properly with bound arguments', function (st) {\n        var boundContext = {};\n        var args;\n        var namespace = {\n            func: functionBind.call(function () {\n                args = Array.prototype.slice.call(arguments);\n                return this;\n            }, boundContext, 1, 2, 3)\n        };\n        var context = namespace.func(4, 5, 6);\n        st.equal(context, boundContext, 'returned context is bound context');\n        st.notEqual(context, getCurrentContext.call(), 'returned context is not lexical context');\n        st.deepEqual(args, [1, 2, 3, 4, 5, 6], 'passed arguments are correct');\n        st.end();\n    });\n\n    t.test('passes the correct arguments when called as a constructor', function (st) {\n        var expected = { name: 'Correct' };\n        var namespace = {\n            Func: functionBind.call(function (arg) {\n                return arg;\n            }, { name: 'Incorrect' })\n        };\n        var returned = new namespace.Func(expected);\n        st.equal(returned, expected, 'returns the right arg when called as a constructor');\n        st.end();\n    });\n\n    t.test('has the new instance\\'s context when called as a constructor', function (st) {\n        var actualContext;\n        var expectedContext = { foo: 'bar' };\n        var namespace = {\n            Func: functionBind.call(function () {\n                actualContext = this;\n            }, expectedContext)\n        };\n        var result = new namespace.Func();\n        st.equal(result instanceof namespace.Func, true);\n        st.notEqual(actualContext, expectedContext);\n        st.end();\n    });\n\n    t.end();\n});\n\ntest('bound function length', function (t) {\n    t.test('sets a correct length without thisArg', function (st) {\n        var subject = functionBind.call(function (a, b, c) { return a + b + c; });\n        st.equal(subject.length, 3);\n        st.equal(subject(1, 2, 3), 6);\n        st.end();\n    });\n\n    t.test('sets a correct length with thisArg', function (st) {\n        var subject = functionBind.call(function (a, b, c) { return a + b + c; }, {});\n        st.equal(subject.length, 3);\n        st.equal(subject(1, 2, 3), 6);\n        st.end();\n    });\n\n    t.test('sets a correct length without thisArg and first argument', function (st) {\n        var subject = functionBind.call(function (a, b, c) { return a + b + c; }, undefined, 1);\n        st.equal(subject.length, 2);\n        st.equal(subject(2, 3), 6);\n        st.end();\n    });\n\n    t.test('sets a correct length with thisArg and first argument', function (st) {\n        var subject = functionBind.call(function (a, b, c) { return a + b + c; }, {}, 1);\n        st.equal(subject.length, 2);\n        st.equal(subject(2, 3), 6);\n        st.end();\n    });\n\n    t.test('sets a correct length without thisArg and too many arguments', function (st) {\n        var subject = functionBind.call(function (a, b, c) { return a + b + c; }, undefined, 1, 2, 3, 4);\n        st.equal(subject.length, 0);\n        st.equal(subject(), 6);\n        st.end();\n    });\n\n    t.test('sets a correct length with thisArg and too many arguments', function (st) {\n        var subject = functionBind.call(function (a, b, c) { return a + b + c; }, {}, 1, 2, 3, 4);\n        st.equal(subject.length, 0);\n        st.equal(subject(), 6);\n        st.end();\n    });\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}