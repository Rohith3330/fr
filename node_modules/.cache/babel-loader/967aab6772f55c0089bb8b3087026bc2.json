{"ast":null,"code":"'use strict';\n\nvar getName = require('../');\n\nvar test = require('tape');\n\nvar runTests = require('./tests');\n\ntest('as a function', function (t) {\n  t.test('non-functions', function (st) {\n    st['throws'](function () {\n      getName();\n    }, TypeError, 'undefined is not a function');\n    st['throws'](function () {\n      getName(null);\n    }, TypeError, 'null is not a function');\n    st['throws'](function () {\n      getName(true);\n    }, TypeError, 'true is not a function');\n    st['throws'](function () {\n      getName(false);\n    }, TypeError, 'false is not a function');\n    st['throws'](function () {\n      getName('foo');\n    }, TypeError, '\"foo\" is not a function');\n    st['throws'](function () {\n      getName([]);\n    }, TypeError, '[] is not a function');\n    st['throws'](function () {\n      getName({});\n    }, TypeError, '{} is not a function');\n    st['throws'](function () {\n      getName(/a/g);\n    }, TypeError, '/a/g is not a function');\n    st.end();\n  });\n  runTests(getName, t);\n  t.end();\n});","map":{"version":3,"names":["getName","require","test","runTests","t","st","TypeError","end"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/function.prototype.name/test/index.js"],"sourcesContent":["'use strict';\n\nvar getName = require('../');\nvar test = require('tape');\nvar runTests = require('./tests');\n\ntest('as a function', function (t) {\n\tt.test('non-functions', function (st) {\n\t\tst['throws'](function () { getName(); }, TypeError, 'undefined is not a function');\n\t\tst['throws'](function () { getName(null); }, TypeError, 'null is not a function');\n\t\tst['throws'](function () { getName(true); }, TypeError, 'true is not a function');\n\t\tst['throws'](function () { getName(false); }, TypeError, 'false is not a function');\n\t\tst['throws'](function () { getName('foo'); }, TypeError, '\"foo\" is not a function');\n\t\tst['throws'](function () { getName([]); }, TypeError, '[] is not a function');\n\t\tst['throws'](function () { getName({}); }, TypeError, '{} is not a function');\n\t\tst['throws'](function () { getName(/a/g); }, TypeError, '/a/g is not a function');\n\t\tst.end();\n\t});\n\n\trunTests(getName, t);\n\n\tt.end();\n});\n"],"mappings":"AAAA;;AAEA,IAAIA,OAAO,GAAGC,OAAO,CAAC,KAAD,CAArB;;AACA,IAAIC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAAlB;;AACA,IAAIE,QAAQ,GAAGF,OAAO,CAAC,SAAD,CAAtB;;AAEAC,IAAI,CAAC,eAAD,EAAkB,UAAUE,CAAV,EAAa;EAClCA,CAAC,CAACF,IAAF,CAAO,eAAP,EAAwB,UAAUG,EAAV,EAAc;IACrCA,EAAE,CAAC,QAAD,CAAF,CAAa,YAAY;MAAEL,OAAO;IAAK,CAAvC,EAAyCM,SAAzC,EAAoD,6BAApD;IACAD,EAAE,CAAC,QAAD,CAAF,CAAa,YAAY;MAAEL,OAAO,CAAC,IAAD,CAAP;IAAgB,CAA3C,EAA6CM,SAA7C,EAAwD,wBAAxD;IACAD,EAAE,CAAC,QAAD,CAAF,CAAa,YAAY;MAAEL,OAAO,CAAC,IAAD,CAAP;IAAgB,CAA3C,EAA6CM,SAA7C,EAAwD,wBAAxD;IACAD,EAAE,CAAC,QAAD,CAAF,CAAa,YAAY;MAAEL,OAAO,CAAC,KAAD,CAAP;IAAiB,CAA5C,EAA8CM,SAA9C,EAAyD,yBAAzD;IACAD,EAAE,CAAC,QAAD,CAAF,CAAa,YAAY;MAAEL,OAAO,CAAC,KAAD,CAAP;IAAiB,CAA5C,EAA8CM,SAA9C,EAAyD,yBAAzD;IACAD,EAAE,CAAC,QAAD,CAAF,CAAa,YAAY;MAAEL,OAAO,CAAC,EAAD,CAAP;IAAc,CAAzC,EAA2CM,SAA3C,EAAsD,sBAAtD;IACAD,EAAE,CAAC,QAAD,CAAF,CAAa,YAAY;MAAEL,OAAO,CAAC,EAAD,CAAP;IAAc,CAAzC,EAA2CM,SAA3C,EAAsD,sBAAtD;IACAD,EAAE,CAAC,QAAD,CAAF,CAAa,YAAY;MAAEL,OAAO,CAAC,IAAD,CAAP;IAAgB,CAA3C,EAA6CM,SAA7C,EAAwD,wBAAxD;IACAD,EAAE,CAACE,GAAH;EACA,CAVD;EAYAJ,QAAQ,CAACH,OAAD,EAAUI,CAAV,CAAR;EAEAA,CAAC,CAACG,GAAF;AACA,CAhBG,CAAJ"},"metadata":{},"sourceType":"script"}