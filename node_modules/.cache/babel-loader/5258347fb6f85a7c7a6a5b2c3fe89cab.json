{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nconst schema = [{\n  enum: ['declaration', 'identifier'],\n  type: 'string'\n}, {\n  additionalProperties: false,\n  properties: {\n    ignoreTypeDefault: {\n      type: 'boolean'\n    }\n  },\n  type: 'object'\n}];\n\nconst create = context => {\n  if (context.options[0] === 'declaration') {\n    return {\n      ImportDeclaration(node) {\n        if (node.importKind !== 'type') {\n          for (const specifier of node.specifiers) {\n            if (specifier.importKind === 'type') {\n              context.report({\n                message: 'Unexpected type import',\n                node\n              });\n            }\n          }\n        }\n      }\n\n    };\n  } // Default to 'identifier'\n\n\n  const ignoreTypeDefault = context.options[1] && context.options[1].ignoreTypeDefault;\n  let isInsideDeclareModule = false;\n  return {\n    DeclareModule() {\n      isInsideDeclareModule = true;\n    },\n\n    'DeclareModule:exit'() {\n      isInsideDeclareModule = false;\n    },\n\n    ImportDeclaration(node) {\n      if (node.importKind !== 'type') {\n        return;\n      } // type specifiers are not allowed inside module declarations:\n      // https://github.com/facebook/flow/issues/7609\n\n\n      if (isInsideDeclareModule) {\n        return;\n      }\n\n      if (ignoreTypeDefault && node.specifiers[0] && node.specifiers[0].type === 'ImportDefaultSpecifier') {\n        return;\n      }\n\n      context.report({\n        fix(fixer) {\n          const imports = node.specifiers.map(specifier => {\n            if (specifier.type === 'ImportDefaultSpecifier') {\n              return 'type default as ' + specifier.local.name;\n            }\n\n            if (specifier.imported.name === specifier.local.name) {\n              return 'type ' + specifier.local.name;\n            }\n\n            return 'type ' + specifier.imported.name + ' as ' + specifier.local.name;\n          });\n          const source = node.source.value;\n          return fixer.replaceText(node, 'import {' + imports.join(', ') + '} from \\'' + source + '\\';');\n        },\n\n        message: 'Unexpected \"import type\"',\n        node\n      });\n    }\n\n  };\n};\n\nvar _default = {\n  create,\n  meta: {\n    fixable: 'code'\n  },\n  schema\n};\nexports.default = _default;\nmodule.exports = exports.default;","map":{"version":3,"names":["Object","defineProperty","exports","value","default","schema","enum","type","additionalProperties","properties","ignoreTypeDefault","create","context","options","ImportDeclaration","node","importKind","specifier","specifiers","report","message","isInsideDeclareModule","DeclareModule","fix","fixer","imports","map","local","name","imported","source","replaceText","join","_default","meta","fixable","module"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/eslint-plugin-flowtype/dist/rules/typeImportStyle.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nconst schema = [{\n  enum: ['declaration', 'identifier'],\n  type: 'string'\n}, {\n  additionalProperties: false,\n  properties: {\n    ignoreTypeDefault: {\n      type: 'boolean'\n    }\n  },\n  type: 'object'\n}];\n\nconst create = context => {\n  if (context.options[0] === 'declaration') {\n    return {\n      ImportDeclaration(node) {\n        if (node.importKind !== 'type') {\n          for (const specifier of node.specifiers) {\n            if (specifier.importKind === 'type') {\n              context.report({\n                message: 'Unexpected type import',\n                node\n              });\n            }\n          }\n        }\n      }\n\n    };\n  } // Default to 'identifier'\n\n\n  const ignoreTypeDefault = context.options[1] && context.options[1].ignoreTypeDefault;\n  let isInsideDeclareModule = false;\n  return {\n    DeclareModule() {\n      isInsideDeclareModule = true;\n    },\n\n    'DeclareModule:exit'() {\n      isInsideDeclareModule = false;\n    },\n\n    ImportDeclaration(node) {\n      if (node.importKind !== 'type') {\n        return;\n      } // type specifiers are not allowed inside module declarations:\n      // https://github.com/facebook/flow/issues/7609\n\n\n      if (isInsideDeclareModule) {\n        return;\n      }\n\n      if (ignoreTypeDefault && node.specifiers[0] && node.specifiers[0].type === 'ImportDefaultSpecifier') {\n        return;\n      }\n\n      context.report({\n        fix(fixer) {\n          const imports = node.specifiers.map(specifier => {\n            if (specifier.type === 'ImportDefaultSpecifier') {\n              return 'type default as ' + specifier.local.name;\n            }\n\n            if (specifier.imported.name === specifier.local.name) {\n              return 'type ' + specifier.local.name;\n            }\n\n            return 'type ' + specifier.imported.name + ' as ' + specifier.local.name;\n          });\n          const source = node.source.value;\n          return fixer.replaceText(node, 'import {' + imports.join(', ') + '} from \\'' + source + '\\';');\n        },\n\n        message: 'Unexpected \"import type\"',\n        node\n      });\n    }\n\n  };\n};\n\nvar _default = {\n  create,\n  meta: {\n    fixable: 'code'\n  },\n  schema\n};\nexports.default = _default;\nmodule.exports = exports.default;"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAC3CC,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;AACA,MAAMC,MAAM,GAAG,CAAC;EACdC,IAAI,EAAE,CAAC,aAAD,EAAgB,YAAhB,CADQ;EAEdC,IAAI,EAAE;AAFQ,CAAD,EAGZ;EACDC,oBAAoB,EAAE,KADrB;EAEDC,UAAU,EAAE;IACVC,iBAAiB,EAAE;MACjBH,IAAI,EAAE;IADW;EADT,CAFX;EAODA,IAAI,EAAE;AAPL,CAHY,CAAf;;AAaA,MAAMI,MAAM,GAAGC,OAAO,IAAI;EACxB,IAAIA,OAAO,CAACC,OAAR,CAAgB,CAAhB,MAAuB,aAA3B,EAA0C;IACxC,OAAO;MACLC,iBAAiB,CAACC,IAAD,EAAO;QACtB,IAAIA,IAAI,CAACC,UAAL,KAAoB,MAAxB,EAAgC;UAC9B,KAAK,MAAMC,SAAX,IAAwBF,IAAI,CAACG,UAA7B,EAAyC;YACvC,IAAID,SAAS,CAACD,UAAV,KAAyB,MAA7B,EAAqC;cACnCJ,OAAO,CAACO,MAAR,CAAe;gBACbC,OAAO,EAAE,wBADI;gBAEbL;cAFa,CAAf;YAID;UACF;QACF;MACF;;IAZI,CAAP;EAeD,CAjBuB,CAiBtB;;;EAGF,MAAML,iBAAiB,GAAGE,OAAO,CAACC,OAAR,CAAgB,CAAhB,KAAsBD,OAAO,CAACC,OAAR,CAAgB,CAAhB,EAAmBH,iBAAnE;EACA,IAAIW,qBAAqB,GAAG,KAA5B;EACA,OAAO;IACLC,aAAa,GAAG;MACdD,qBAAqB,GAAG,IAAxB;IACD,CAHI;;IAKL,uBAAuB;MACrBA,qBAAqB,GAAG,KAAxB;IACD,CAPI;;IASLP,iBAAiB,CAACC,IAAD,EAAO;MACtB,IAAIA,IAAI,CAACC,UAAL,KAAoB,MAAxB,EAAgC;QAC9B;MACD,CAHqB,CAGpB;MACF;;;MAGA,IAAIK,qBAAJ,EAA2B;QACzB;MACD;;MAED,IAAIX,iBAAiB,IAAIK,IAAI,CAACG,UAAL,CAAgB,CAAhB,CAArB,IAA2CH,IAAI,CAACG,UAAL,CAAgB,CAAhB,EAAmBX,IAAnB,KAA4B,wBAA3E,EAAqG;QACnG;MACD;;MAEDK,OAAO,CAACO,MAAR,CAAe;QACbI,GAAG,CAACC,KAAD,EAAQ;UACT,MAAMC,OAAO,GAAGV,IAAI,CAACG,UAAL,CAAgBQ,GAAhB,CAAoBT,SAAS,IAAI;YAC/C,IAAIA,SAAS,CAACV,IAAV,KAAmB,wBAAvB,EAAiD;cAC/C,OAAO,qBAAqBU,SAAS,CAACU,KAAV,CAAgBC,IAA5C;YACD;;YAED,IAAIX,SAAS,CAACY,QAAV,CAAmBD,IAAnB,KAA4BX,SAAS,CAACU,KAAV,CAAgBC,IAAhD,EAAsD;cACpD,OAAO,UAAUX,SAAS,CAACU,KAAV,CAAgBC,IAAjC;YACD;;YAED,OAAO,UAAUX,SAAS,CAACY,QAAV,CAAmBD,IAA7B,GAAoC,MAApC,GAA6CX,SAAS,CAACU,KAAV,CAAgBC,IAApE;UACD,CAVe,CAAhB;UAWA,MAAME,MAAM,GAAGf,IAAI,CAACe,MAAL,CAAY3B,KAA3B;UACA,OAAOqB,KAAK,CAACO,WAAN,CAAkBhB,IAAlB,EAAwB,aAAaU,OAAO,CAACO,IAAR,CAAa,IAAb,CAAb,GAAkC,WAAlC,GAAgDF,MAAhD,GAAyD,KAAjF,CAAP;QACD,CAfY;;QAiBbV,OAAO,EAAE,0BAjBI;QAkBbL;MAlBa,CAAf;IAoBD;;EA5CI,CAAP;AA+CD,CArED;;AAuEA,IAAIkB,QAAQ,GAAG;EACbtB,MADa;EAEbuB,IAAI,EAAE;IACJC,OAAO,EAAE;EADL,CAFO;EAKb9B;AALa,CAAf;AAOAH,OAAO,CAACE,OAAR,GAAkB6B,QAAlB;AACAG,MAAM,CAAClC,OAAP,GAAiBA,OAAO,CAACE,OAAzB"},"metadata":{},"sourceType":"script"}