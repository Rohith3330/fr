{"ast":null,"code":"import { SCHEMES } from \"../uri\";\nconst NID$ = \"(?:[0-9A-Za-z][0-9A-Za-z\\\\-]{1,31})\";\nconst PCT_ENCODED$ = \"(?:\\\\%[0-9A-Fa-f]{2})\";\nconst TRANS$$ = \"[0-9A-Za-z\\\\(\\\\)\\\\+\\\\,\\\\-\\\\.\\\\:\\\\=\\\\@\\\\;\\\\$\\\\_\\\\!\\\\*\\\\'\\\\/\\\\?\\\\#]\";\nconst NSS$ = \"(?:(?:\" + PCT_ENCODED$ + \"|\" + TRANS$$ + \")+)\";\nconst URN_SCHEME = new RegExp(\"^urn\\\\:(\" + NID$ + \")$\");\nconst URN_PATH = new RegExp(\"^(\" + NID$ + \")\\\\:(\" + NSS$ + \")$\");\nconst URN_PARSE = /^([^\\:]+)\\:(.*)/;\nconst URN_EXCLUDED = /[\\x00-\\x20\\\\\\\"\\&\\<\\>\\[\\]\\^\\`\\{\\|\\}\\~\\x7F-\\xFF]/g; //RFC 2141\n\nconst handler = {\n  scheme: \"urn\",\n  parse: function (components, options) {\n    const matches = components.path && components.path.match(URN_PARSE);\n    let urnComponents = components;\n\n    if (matches) {\n      const scheme = options.scheme || urnComponents.scheme || \"urn\";\n      const nid = matches[1].toLowerCase();\n      const nss = matches[2];\n      const urnScheme = `${scheme}:${options.nid || nid}`;\n      const schemeHandler = SCHEMES[urnScheme];\n      urnComponents.nid = nid;\n      urnComponents.nss = nss;\n      urnComponents.path = undefined;\n\n      if (schemeHandler) {\n        urnComponents = schemeHandler.parse(urnComponents, options);\n      }\n    } else {\n      urnComponents.error = urnComponents.error || \"URN can not be parsed.\";\n    }\n\n    return urnComponents;\n  },\n  serialize: function (urnComponents, options) {\n    const scheme = options.scheme || urnComponents.scheme || \"urn\";\n    const nid = urnComponents.nid;\n    const urnScheme = `${scheme}:${options.nid || nid}`;\n    const schemeHandler = SCHEMES[urnScheme];\n\n    if (schemeHandler) {\n      urnComponents = schemeHandler.serialize(urnComponents, options);\n    }\n\n    const uriComponents = urnComponents;\n    const nss = urnComponents.nss;\n    uriComponents.path = `${nid || options.nid}:${nss}`;\n    return uriComponents;\n  }\n};\nexport default handler;","map":{"version":3,"mappings":"AACA,SAAqBA,OAArB,QAAoC,QAApC;AAWA,MAAMC,IAAI,GAAG,qCAAb;AACA,MAAMC,YAAY,GAAG,uBAArB;AACA,MAAMC,OAAO,GAAG,mEAAhB;AACA,MAAMC,IAAI,GAAG,WAAWF,YAAX,GAA0B,GAA1B,GAAgCC,OAAhC,GAA0C,KAAvD;AACA,MAAME,UAAU,GAAG,IAAIC,MAAJ,CAAW,aAAaL,IAAb,GAAoB,IAA/B,CAAnB;AACA,MAAMM,QAAQ,GAAG,IAAID,MAAJ,CAAW,OAAOL,IAAP,GAAc,OAAd,GAAwBG,IAAxB,GAA+B,IAA1C,CAAjB;AACA,MAAMI,SAAS,GAAG,iBAAlB;AACA,MAAMC,YAAY,GAAG,iDAArB,C,CAEA;;AACA,MAAMC,OAAO,GAA8C;EAC1DC,MAAM,EAAG,KADiD;EAG1DC,KAAK,EAAG,UAAUC,UAAV,EAAoCC,OAApC,EAAsD;IAC7D,MAAMC,OAAO,GAAGF,UAAU,CAACG,IAAX,IAAmBH,UAAU,CAACG,IAAX,CAAgBC,KAAhB,CAAsBT,SAAtB,CAAnC;IACA,IAAIU,aAAa,GAAGL,UAApB;;IAEA,IAAIE,OAAJ,EAAa;MACZ,MAAMJ,MAAM,GAAGG,OAAO,CAACH,MAAR,IAAkBO,aAAa,CAACP,MAAhC,IAA0C,KAAzD;MACA,MAAMQ,GAAG,GAAGJ,OAAO,CAAC,CAAD,CAAP,CAAWK,WAAX,EAAZ;MACA,MAAMC,GAAG,GAAGN,OAAO,CAAC,CAAD,CAAnB;MACA,MAAMO,SAAS,GAAG,GAAGX,MAAM,IAAIG,OAAO,CAACK,GAAR,IAAeA,GAAG,EAAjD;MACA,MAAMI,aAAa,GAAGvB,OAAO,CAACsB,SAAD,CAA7B;MAEAJ,aAAa,CAACC,GAAd,GAAoBA,GAApB;MACAD,aAAa,CAACG,GAAd,GAAoBA,GAApB;MACAH,aAAa,CAACF,IAAd,GAAqBQ,SAArB;;MAEA,IAAID,aAAJ,EAAmB;QAClBL,aAAa,GAAGK,aAAa,CAACX,KAAd,CAAoBM,aAApB,EAAmCJ,OAAnC,CAAhB;MACA;IACD,CAdD,MAcO;MACNI,aAAa,CAACO,KAAd,GAAsBP,aAAa,CAACO,KAAd,IAAuB,wBAA7C;IACA;;IAED,OAAOP,aAAP;EACA,CA1ByD;EA4B1DQ,SAAS,EAAG,UAAUR,aAAV,EAAuCJ,OAAvC,EAAyD;IACpE,MAAMH,MAAM,GAAGG,OAAO,CAACH,MAAR,IAAkBO,aAAa,CAACP,MAAhC,IAA0C,KAAzD;IACA,MAAMQ,GAAG,GAAGD,aAAa,CAACC,GAA1B;IACA,MAAMG,SAAS,GAAG,GAAGX,MAAM,IAAIG,OAAO,CAACK,GAAR,IAAeA,GAAG,EAAjD;IACA,MAAMI,aAAa,GAAGvB,OAAO,CAACsB,SAAD,CAA7B;;IAEA,IAAIC,aAAJ,EAAmB;MAClBL,aAAa,GAAGK,aAAa,CAACG,SAAd,CAAwBR,aAAxB,EAAuCJ,OAAvC,CAAhB;IACA;;IAED,MAAMa,aAAa,GAAGT,aAAtB;IACA,MAAMG,GAAG,GAAGH,aAAa,CAACG,GAA1B;IACAM,aAAa,CAACX,IAAd,GAAqB,GAAGG,GAAG,IAAIL,OAAO,CAACK,GAAG,IAAIE,GAAG,EAAjD;IAEA,OAAOM,aAAP;EACA;AA3CyD,CAA3D;AA8CA,eAAejB,OAAf","names":["SCHEMES","NID$","PCT_ENCODED$","TRANS$$","NSS$","URN_SCHEME","RegExp","URN_PATH","URN_PARSE","URN_EXCLUDED","handler","scheme","parse","components","options","matches","path","match","urnComponents","nid","toLowerCase","nss","urnScheme","schemeHandler","undefined","error","serialize","uriComponents"],"sources":["../../../src/schemes/urn.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}