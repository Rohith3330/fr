{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nvar _a;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst utils_1 = require(\"@typescript-eslint/utils\");\n\nconst util = __importStar(require(\"../util\"));\n\nconst getESLintCoreRule_1 = require(\"../util/getESLintCoreRule\");\n\nconst baseRule = (0, getESLintCoreRule_1.getESLintCoreRule)('quotes');\nexports.default = util.createRule({\n  name: 'quotes',\n  meta: {\n    type: 'layout',\n    docs: {\n      description: 'Enforce the consistent use of either backticks, double, or single quotes',\n      recommended: false,\n      extendsBaseRule: true\n    },\n    fixable: 'code',\n    hasSuggestions: baseRule.meta.hasSuggestions,\n    // TODO: this rule has only had messages since v7.0 - remove this when we remove support for v6\n    messages: (_a = baseRule.meta.messages) !== null && _a !== void 0 ? _a : {\n      wrongQuotes: 'Strings must use {{description}}.'\n    },\n    schema: baseRule.meta.schema\n  },\n  defaultOptions: ['double', {\n    allowTemplateLiterals: false,\n    avoidEscape: false\n  }],\n\n  create(context, _ref) {\n    let [option] = _ref;\n    const rules = baseRule.create(context);\n\n    function isAllowedAsNonBacktick(node) {\n      const parent = node.parent;\n\n      switch (parent === null || parent === void 0 ? void 0 : parent.type) {\n        case utils_1.AST_NODE_TYPES.TSAbstractMethodDefinition:\n        case utils_1.AST_NODE_TYPES.TSMethodSignature:\n        case utils_1.AST_NODE_TYPES.TSPropertySignature:\n        case utils_1.AST_NODE_TYPES.TSModuleDeclaration:\n        case utils_1.AST_NODE_TYPES.TSLiteralType:\n        case utils_1.AST_NODE_TYPES.TSExternalModuleReference:\n          return true;\n\n        case utils_1.AST_NODE_TYPES.TSEnumMember:\n          return node === parent.id;\n\n        case utils_1.AST_NODE_TYPES.TSAbstractPropertyDefinition:\n        case utils_1.AST_NODE_TYPES.PropertyDefinition:\n          return node === parent.key;\n\n        default:\n          return false;\n      }\n    }\n\n    return {\n      Literal(node) {\n        if (option === 'backtick' && isAllowedAsNonBacktick(node)) {\n          return;\n        }\n\n        rules.Literal(node);\n      },\n\n      TemplateLiteral(node) {\n        rules.TemplateLiteral(node);\n      }\n\n    };\n  }\n\n});","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;;AAEA;;AACA;;AAEA,MAAMA,QAAQ,GAAG,2CAAkB,QAAlB,CAAjB;AAKAC,kBAAeC,IAAI,CAACC,UAAL,CAAqC;EAClDC,IAAI,EAAE,QAD4C;EAElDC,IAAI,EAAE;IACJC,IAAI,EAAE,QADF;IAEJC,IAAI,EAAE;MACJC,WAAW,EACT,0EAFE;MAGJC,WAAW,EAAE,KAHT;MAIJC,eAAe,EAAE;IAJb,CAFF;IAQJC,OAAO,EAAE,MARL;IASJC,cAAc,EAAEZ,QAAQ,CAACK,IAAT,CAAcO,cAT1B;IAUJ;IACAC,QAAQ,EAAE,cAAQ,CAACR,IAAT,CAAcQ,QAAd,MAAsB,IAAtB,IAAsBC,aAAtB,GAAsBA,EAAtB,GAA0B;MAClCC,WAAW,EAAE;IADqB,CAXhC;IAcJC,MAAM,EAAEhB,QAAQ,CAACK,IAAT,CAAcW;EAdlB,CAF4C;EAkBlDC,cAAc,EAAE,CACd,QADc,EAEd;IACEC,qBAAqB,EAAE,KADzB;IAEEC,WAAW,EAAE;EAFf,CAFc,CAlBkC;;EAyBlDC,MAAM,CAACC,OAAD,QAAkB;IAAA,IAAR,CAACC,MAAD,CAAQ;IACtB,MAAMC,KAAK,GAAGvB,QAAQ,CAACoB,MAAT,CAAgBC,OAAhB,CAAd;;IAEA,SAASG,sBAAT,CAAgCC,IAAhC,EAAsD;MACpD,MAAMC,MAAM,GAAGD,IAAI,CAACC,MAApB;;MAEA,QAAQA,MAAM,SAAN,UAAM,WAAN,GAAM,MAAN,SAAM,CAAEpB,IAAhB;QACE,KAAKqB,uBAAeC,0BAApB;QACA,KAAKD,uBAAeE,iBAApB;QACA,KAAKF,uBAAeG,mBAApB;QACA,KAAKH,uBAAeI,mBAApB;QACA,KAAKJ,uBAAeK,aAApB;QACA,KAAKL,uBAAeM,yBAApB;UACE,OAAO,IAAP;;QAEF,KAAKN,uBAAeO,YAApB;UACE,OAAOT,IAAI,KAAKC,MAAM,CAACS,EAAvB;;QAEF,KAAKR,uBAAeS,4BAApB;QACA,KAAKT,uBAAeU,kBAApB;UACE,OAAOZ,IAAI,KAAKC,MAAM,CAACY,GAAvB;;QAEF;UACE,OAAO,KAAP;MAjBJ;IAmBD;;IAED,OAAO;MACLC,OAAO,CAACd,IAAD,EAAK;QACV,IAAIH,MAAM,KAAK,UAAX,IAAyBE,sBAAsB,CAACC,IAAD,CAAnD,EAA2D;UACzD;QACD;;QAEDF,KAAK,CAACgB,OAAN,CAAcd,IAAd;MACD,CAPI;;MASLe,eAAe,CAACf,IAAD,EAAK;QAClBF,KAAK,CAACiB,eAAN,CAAsBf,IAAtB;MACD;;IAXI,CAAP;EAaD;;AAjEiD,CAArC,CAAf","names":["baseRule","exports","util","createRule","name","meta","type","docs","description","recommended","extendsBaseRule","fixable","hasSuggestions","messages","_a","wrongQuotes","schema","defaultOptions","allowTemplateLiterals","avoidEscape","create","context","option","rules","isAllowedAsNonBacktick","node","parent","utils_1","TSAbstractMethodDefinition","TSMethodSignature","TSPropertySignature","TSModuleDeclaration","TSLiteralType","TSExternalModuleReference","TSEnumMember","id","TSAbstractPropertyDefinition","PropertyDefinition","key","Literal","TemplateLiteral"],"sources":["../../src/rules/quotes.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}