{"ast":null,"code":"'use strict';\n\nvar _moduleVisitor = require('eslint-module-utils/moduleVisitor');\n\nvar _moduleVisitor2 = _interopRequireDefault(_moduleVisitor);\n\nvar _docsUrl = require('../docsUrl');\n\nvar _docsUrl2 = _interopRequireDefault(_docsUrl);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nvar DEFAULT_MAX = 10;\nvar DEFAULT_IGNORE_TYPE_IMPORTS = false;\nvar TYPE_IMPORT = 'type';\n\nvar countDependencies = function countDependencies(dependencies, lastNode, context) {\n  var _ref = context.options[0] || {\n    max: DEFAULT_MAX\n  },\n      max = _ref.max;\n\n  if (dependencies.size > max) {\n    context.report(lastNode, 'Maximum number of dependencies (' + String(max) + ') exceeded.');\n  }\n};\n\nmodule.exports = {\n  meta: {\n    type: 'suggestion',\n    docs: {\n      url: (0, _docsUrl2['default'])('max-dependencies')\n    },\n    schema: [{\n      'type': 'object',\n      'properties': {\n        'max': {\n          'type': 'number'\n        },\n        'ignoreTypeImports': {\n          'type': 'boolean'\n        }\n      },\n      'additionalProperties': false\n    }]\n  },\n  create: function () {\n    function create(context) {\n      var _ref2 = context.options[0] || {},\n          _ref2$ignoreTypeImpor = _ref2.ignoreTypeImports,\n          ignoreTypeImports = _ref2$ignoreTypeImpor === undefined ? DEFAULT_IGNORE_TYPE_IMPORTS : _ref2$ignoreTypeImpor;\n\n      var dependencies = new Set(); // keep track of dependencies\n\n      var lastNode = void 0; // keep track of the last node to report on\n\n      return Object.assign({\n        'Program:exit': function () {\n          function ProgramExit() {\n            countDependencies(dependencies, lastNode, context);\n          }\n\n          return ProgramExit;\n        }()\n      }, (0, _moduleVisitor2['default'])(function (source, _ref3) {\n        var importKind = _ref3.importKind;\n\n        if (importKind !== TYPE_IMPORT || !ignoreTypeImports) {\n          dependencies.add(source.value);\n        }\n\n        lastNode = source;\n      }, {\n        commonjs: true\n      }));\n    }\n\n    return create;\n  }()\n};","map":{"version":3,"mappings":";;AAAA;;;;AACA;;;;;;;;;;AAEA,IAAMA,cAAc,EAApB;AACA,IAAMC,8BAA8B,KAApC;AACA,IAAMC,cAAc,MAApB;;AAEA,IAAMC,oBAAoB,SAApBA,iBAAoB,CAACC,YAAD,EAAeC,QAAf,EAAyBC,OAAzB,EAAqC;EAAA,WAC7CA,QAAQC,OAARD,CAAgB,CAAhBA,KAAsB;IAAEE,KAAKR;EAAP,CADuB;EAAA,IACrDQ,GADqD,QACrDA,GADqD;;EAG7D,IAAIJ,aAAaK,IAAbL,GAAoBI,GAAxB,EAA6B;IAC3BF,QAAQI,MAARJ,CAAeD,QAAfC,8CAA4DE,GAA5D;EACD;AALH;;AAQAG,OAAOC,OAAPD,GAAiB;EACfE,MAAM;IACJC,MAAM,YADF;IAEJC,MAAM;MACJC,KAAK,0BAAQ,kBAAR;IADD,CAFF;IAMJC,QAAQ,CACN;MACE,QAAQ,QADV;MAEE,cAAc;QACZ,OAAO;UAAE,QAAQ;QAAV,CADK;QAEZ,qBAAqB;UAAE,QAAQ;QAAV;MAFT,CAFhB;MAME,wBAAwB;IAN1B,CADM;EANJ,CADS;EAmBfC;IAAQ,yBAAW;MAAA,YAGbZ,QAAQC,OAARD,CAAgB,CAAhBA,KAAsB,EAHT;MAAA,kCAEfa,iBAFe;MAAA,IAEfA,iBAFe,yCAEKlB,2BAFL;;MAKjB,IAAMG,eAAe,IAAIgB,GAAJ,EAArB,CALiB,CAKe;;MAChC,IAAIf,iBAAJ,CANiB,CAMH;;MAEd,OAAOgB,OAAOC,MAAPD,CAAc;QACnB;UAAgB,uBAAY;YAC1BlB,kBAAkBC,YAAlBD,EAAgCE,QAAhCF,EAA0CG,OAA1CH;UADF;;UAAA;QAAA;MADmB,CAAdkB,EAIJ,gCAAc,UAACE,MAAD,SAA4B;QAAA,IAAjBC,UAAiB,SAAjBA,UAAiB;;QAC3C,IAAIA,eAAetB,WAAfsB,IAA8B,CAACL,iBAAnC,EAAsD;UACpDf,aAAaqB,GAAbrB,CAAiBmB,OAAOG,KAAxBtB;QACD;;QACDC,WAAWkB,MAAXlB;MAJC,GAKA;QAAEsB,UAAU;MAAZ,CALA,CAJIN,CAAP;IARF;;IAAA;EAAA;AAnBe,CAAjBV","names":["DEFAULT_MAX","DEFAULT_IGNORE_TYPE_IMPORTS","TYPE_IMPORT","countDependencies","dependencies","lastNode","context","options","max","size","report","module","exports","meta","type","docs","url","schema","create","ignoreTypeImports","Set","Object","assign","source","importKind","add","value","commonjs"],"sources":["C:\\Users\\Rohith\\mern\\frontend\\node_modules\\eslint-plugin-import\\src\\rules\\max-dependencies.js"],"sourcesContent":["import moduleVisitor from 'eslint-module-utils/moduleVisitor';\nimport docsUrl from '../docsUrl';\n\nconst DEFAULT_MAX = 10;\nconst DEFAULT_IGNORE_TYPE_IMPORTS = false;\nconst TYPE_IMPORT = 'type';\n\nconst countDependencies = (dependencies, lastNode, context) => {\n  const { max } = context.options[0] || { max: DEFAULT_MAX };\n\n  if (dependencies.size > max) {\n    context.report(lastNode, `Maximum number of dependencies (${max}) exceeded.`);\n  }\n};\n\nmodule.exports = {\n  meta: {\n    type: 'suggestion',\n    docs: {\n      url: docsUrl('max-dependencies'),\n    },\n\n    schema: [\n      {\n        'type': 'object',\n        'properties': {\n          'max': { 'type': 'number' },\n          'ignoreTypeImports': { 'type': 'boolean' },\n        },\n        'additionalProperties': false,\n      },\n    ],\n  },\n\n  create: context => {\n    const {\n      ignoreTypeImports = DEFAULT_IGNORE_TYPE_IMPORTS,\n    } = context.options[0] || {};\n\n    const dependencies = new Set(); // keep track of dependencies\n    let lastNode; // keep track of the last node to report on\n\n    return Object.assign({\n      'Program:exit': function () {\n        countDependencies(dependencies, lastNode, context);\n      },\n    }, moduleVisitor((source, { importKind }) => {\n      if (importKind !== TYPE_IMPORT || !ignoreTypeImports) {\n        dependencies.add(source.value);\n      }\n      lastNode = source;\n    }, { commonjs: true }));\n  },\n};\n"]},"metadata":{},"sourceType":"script"}