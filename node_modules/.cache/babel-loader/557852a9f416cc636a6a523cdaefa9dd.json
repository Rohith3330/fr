{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\nvar DEFAULT_RAW = {\n  colon: ': ',\n  indent: '    ',\n  beforeDecl: '\\n',\n  beforeRule: '\\n',\n  beforeOpen: ' ',\n  beforeClose: '\\n',\n  beforeComment: '\\n',\n  after: '\\n',\n  emptyBody: '',\n  commentLeft: ' ',\n  commentRight: ' ',\n  semicolon: false\n};\n\nfunction capitalize(str) {\n  return str[0].toUpperCase() + str.slice(1);\n}\n\nvar Stringifier = /*#__PURE__*/function () {\n  function Stringifier(builder) {\n    this.builder = builder;\n  }\n\n  var _proto = Stringifier.prototype;\n\n  _proto.stringify = function stringify(node, semicolon) {\n    this[node.type](node, semicolon);\n  };\n\n  _proto.root = function root(node) {\n    this.body(node);\n    if (node.raws.after) this.builder(node.raws.after);\n  };\n\n  _proto.comment = function comment(node) {\n    var left = this.raw(node, 'left', 'commentLeft');\n    var right = this.raw(node, 'right', 'commentRight');\n    this.builder('/*' + left + node.text + right + '*/', node);\n  };\n\n  _proto.decl = function decl(node, semicolon) {\n    var between = this.raw(node, 'between', 'colon');\n    var string = node.prop + between + this.rawValue(node, 'value');\n\n    if (node.important) {\n      string += node.raws.important || ' !important';\n    }\n\n    if (semicolon) string += ';';\n    this.builder(string, node);\n  };\n\n  _proto.rule = function rule(node) {\n    this.block(node, this.rawValue(node, 'selector'));\n\n    if (node.raws.ownSemicolon) {\n      this.builder(node.raws.ownSemicolon, node, 'end');\n    }\n  };\n\n  _proto.atrule = function atrule(node, semicolon) {\n    var name = '@' + node.name;\n    var params = node.params ? this.rawValue(node, 'params') : '';\n\n    if (typeof node.raws.afterName !== 'undefined') {\n      name += node.raws.afterName;\n    } else if (params) {\n      name += ' ';\n    }\n\n    if (node.nodes) {\n      this.block(node, name + params);\n    } else {\n      var end = (node.raws.between || '') + (semicolon ? ';' : '');\n      this.builder(name + params + end, node);\n    }\n  };\n\n  _proto.body = function body(node) {\n    var last = node.nodes.length - 1;\n\n    while (last > 0) {\n      if (node.nodes[last].type !== 'comment') break;\n      last -= 1;\n    }\n\n    var semicolon = this.raw(node, 'semicolon');\n\n    for (var i = 0; i < node.nodes.length; i++) {\n      var child = node.nodes[i];\n      var before = this.raw(child, 'before');\n      if (before) this.builder(before);\n      this.stringify(child, last !== i || semicolon);\n    }\n  };\n\n  _proto.block = function block(node, start) {\n    var between = this.raw(node, 'between', 'beforeOpen');\n    this.builder(start + between + '{', node, 'start');\n    var after;\n\n    if (node.nodes && node.nodes.length) {\n      this.body(node);\n      after = this.raw(node, 'after');\n    } else {\n      after = this.raw(node, 'after', 'emptyBody');\n    }\n\n    if (after) this.builder(after);\n    this.builder('}', node, 'end');\n  };\n\n  _proto.raw = function raw(node, own, detect) {\n    var value;\n    if (!detect) detect = own; // Already had\n\n    if (own) {\n      value = node.raws[own];\n      if (typeof value !== 'undefined') return value;\n    }\n\n    var parent = node.parent; // Hack for first rule in CSS\n\n    if (detect === 'before') {\n      if (!parent || parent.type === 'root' && parent.first === node) {\n        return '';\n      }\n    } // Floating child without parent\n\n\n    if (!parent) return DEFAULT_RAW[detect]; // Detect style by other nodes\n\n    var root = node.root();\n    if (!root.rawCache) root.rawCache = {};\n\n    if (typeof root.rawCache[detect] !== 'undefined') {\n      return root.rawCache[detect];\n    }\n\n    if (detect === 'before' || detect === 'after') {\n      return this.beforeAfter(node, detect);\n    } else {\n      var method = 'raw' + capitalize(detect);\n\n      if (this[method]) {\n        value = this[method](root, node);\n      } else {\n        root.walk(function (i) {\n          value = i.raws[own];\n          if (typeof value !== 'undefined') return false;\n        });\n      }\n    }\n\n    if (typeof value === 'undefined') value = DEFAULT_RAW[detect];\n    root.rawCache[detect] = value;\n    return value;\n  };\n\n  _proto.rawSemicolon = function rawSemicolon(root) {\n    var value;\n    root.walk(function (i) {\n      if (i.nodes && i.nodes.length && i.last.type === 'decl') {\n        value = i.raws.semicolon;\n        if (typeof value !== 'undefined') return false;\n      }\n    });\n    return value;\n  };\n\n  _proto.rawEmptyBody = function rawEmptyBody(root) {\n    var value;\n    root.walk(function (i) {\n      if (i.nodes && i.nodes.length === 0) {\n        value = i.raws.after;\n        if (typeof value !== 'undefined') return false;\n      }\n    });\n    return value;\n  };\n\n  _proto.rawIndent = function rawIndent(root) {\n    if (root.raws.indent) return root.raws.indent;\n    var value;\n    root.walk(function (i) {\n      var p = i.parent;\n\n      if (p && p !== root && p.parent && p.parent === root) {\n        if (typeof i.raws.before !== 'undefined') {\n          var parts = i.raws.before.split('\\n');\n          value = parts[parts.length - 1];\n          value = value.replace(/[^\\s]/g, '');\n          return false;\n        }\n      }\n    });\n    return value;\n  };\n\n  _proto.rawBeforeComment = function rawBeforeComment(root, node) {\n    var value;\n    root.walkComments(function (i) {\n      if (typeof i.raws.before !== 'undefined') {\n        value = i.raws.before;\n\n        if (value.indexOf('\\n') !== -1) {\n          value = value.replace(/[^\\n]+$/, '');\n        }\n\n        return false;\n      }\n    });\n\n    if (typeof value === 'undefined') {\n      value = this.raw(node, null, 'beforeDecl');\n    } else if (value) {\n      value = value.replace(/[^\\s]/g, '');\n    }\n\n    return value;\n  };\n\n  _proto.rawBeforeDecl = function rawBeforeDecl(root, node) {\n    var value;\n    root.walkDecls(function (i) {\n      if (typeof i.raws.before !== 'undefined') {\n        value = i.raws.before;\n\n        if (value.indexOf('\\n') !== -1) {\n          value = value.replace(/[^\\n]+$/, '');\n        }\n\n        return false;\n      }\n    });\n\n    if (typeof value === 'undefined') {\n      value = this.raw(node, null, 'beforeRule');\n    } else if (value) {\n      value = value.replace(/[^\\s]/g, '');\n    }\n\n    return value;\n  };\n\n  _proto.rawBeforeRule = function rawBeforeRule(root) {\n    var value;\n    root.walk(function (i) {\n      if (i.nodes && (i.parent !== root || root.first !== i)) {\n        if (typeof i.raws.before !== 'undefined') {\n          value = i.raws.before;\n\n          if (value.indexOf('\\n') !== -1) {\n            value = value.replace(/[^\\n]+$/, '');\n          }\n\n          return false;\n        }\n      }\n    });\n    if (value) value = value.replace(/[^\\s]/g, '');\n    return value;\n  };\n\n  _proto.rawBeforeClose = function rawBeforeClose(root) {\n    var value;\n    root.walk(function (i) {\n      if (i.nodes && i.nodes.length > 0) {\n        if (typeof i.raws.after !== 'undefined') {\n          value = i.raws.after;\n\n          if (value.indexOf('\\n') !== -1) {\n            value = value.replace(/[^\\n]+$/, '');\n          }\n\n          return false;\n        }\n      }\n    });\n    if (value) value = value.replace(/[^\\s]/g, '');\n    return value;\n  };\n\n  _proto.rawBeforeOpen = function rawBeforeOpen(root) {\n    var value;\n    root.walk(function (i) {\n      if (i.type !== 'decl') {\n        value = i.raws.between;\n        if (typeof value !== 'undefined') return false;\n      }\n    });\n    return value;\n  };\n\n  _proto.rawColon = function rawColon(root) {\n    var value;\n    root.walkDecls(function (i) {\n      if (typeof i.raws.between !== 'undefined') {\n        value = i.raws.between.replace(/[^\\s:]/g, '');\n        return false;\n      }\n    });\n    return value;\n  };\n\n  _proto.beforeAfter = function beforeAfter(node, detect) {\n    var value;\n\n    if (node.type === 'decl') {\n      value = this.raw(node, null, 'beforeDecl');\n    } else if (node.type === 'comment') {\n      value = this.raw(node, null, 'beforeComment');\n    } else if (detect === 'before') {\n      value = this.raw(node, null, 'beforeRule');\n    } else {\n      value = this.raw(node, null, 'beforeClose');\n    }\n\n    var buf = node.parent;\n    var depth = 0;\n\n    while (buf && buf.type !== 'root') {\n      depth += 1;\n      buf = buf.parent;\n    }\n\n    if (value.indexOf('\\n') !== -1) {\n      var indent = this.raw(node, null, 'indent');\n\n      if (indent.length) {\n        for (var step = 0; step < depth; step++) {\n          value += indent;\n        }\n      }\n    }\n\n    return value;\n  };\n\n  _proto.rawValue = function rawValue(node, prop) {\n    var value = node[prop];\n    var raw = node.raws[prop];\n\n    if (raw && raw.value === value) {\n      return raw.raw;\n    }\n\n    return value;\n  };\n\n  return Stringifier;\n}();\n\nvar _default = Stringifier;\nexports.default = _default;\nmodule.exports = exports.default;","map":{"version":3,"mappings":"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","names":["DEFAULT_RAW","colon","indent","beforeDecl","beforeRule","beforeOpen","beforeClose","beforeComment","after","emptyBody","commentLeft","commentRight","semicolon","capitalize","str","toUpperCase","slice","Stringifier","builder","stringify","node","type","root","body","raws","comment","left","raw","right","text","decl","between","string","prop","rawValue","important","rule","block","ownSemicolon","atrule","name","params","afterName","nodes","end","last","length","i","child","before","start","own","detect","value","parent","first","rawCache","beforeAfter","method","walk","rawSemicolon","rawEmptyBody","rawIndent","p","parts","split","replace","rawBeforeComment","walkComments","indexOf","rawBeforeDecl","walkDecls","rawBeforeRule","rawBeforeClose","rawBeforeOpen","rawColon","buf","depth","step"],"sources":["C:\\Users\\Rohith\\mern\\frontend\\node_modules\\resolve-url-loader\\node_modules\\postcss\\lib\\stringifier.es6"],"sourcesContent":["const DEFAULT_RAW = {\n  colon: ': ',\n  indent: '    ',\n  beforeDecl: '\\n',\n  beforeRule: '\\n',\n  beforeOpen: ' ',\n  beforeClose: '\\n',\n  beforeComment: '\\n',\n  after: '\\n',\n  emptyBody: '',\n  commentLeft: ' ',\n  commentRight: ' ',\n  semicolon: false\n}\n\nfunction capitalize (str) {\n  return str[0].toUpperCase() + str.slice(1)\n}\n\nclass Stringifier {\n  constructor (builder) {\n    this.builder = builder\n  }\n\n  stringify (node, semicolon) {\n    this[node.type](node, semicolon)\n  }\n\n  root (node) {\n    this.body(node)\n    if (node.raws.after) this.builder(node.raws.after)\n  }\n\n  comment (node) {\n    let left = this.raw(node, 'left', 'commentLeft')\n    let right = this.raw(node, 'right', 'commentRight')\n    this.builder('/*' + left + node.text + right + '*/', node)\n  }\n\n  decl (node, semicolon) {\n    let between = this.raw(node, 'between', 'colon')\n    let string = node.prop + between + this.rawValue(node, 'value')\n\n    if (node.important) {\n      string += node.raws.important || ' !important'\n    }\n\n    if (semicolon) string += ';'\n    this.builder(string, node)\n  }\n\n  rule (node) {\n    this.block(node, this.rawValue(node, 'selector'))\n    if (node.raws.ownSemicolon) {\n      this.builder(node.raws.ownSemicolon, node, 'end')\n    }\n  }\n\n  atrule (node, semicolon) {\n    let name = '@' + node.name\n    let params = node.params ? this.rawValue(node, 'params') : ''\n\n    if (typeof node.raws.afterName !== 'undefined') {\n      name += node.raws.afterName\n    } else if (params) {\n      name += ' '\n    }\n\n    if (node.nodes) {\n      this.block(node, name + params)\n    } else {\n      let end = (node.raws.between || '') + (semicolon ? ';' : '')\n      this.builder(name + params + end, node)\n    }\n  }\n\n  body (node) {\n    let last = node.nodes.length - 1\n    while (last > 0) {\n      if (node.nodes[last].type !== 'comment') break\n      last -= 1\n    }\n\n    let semicolon = this.raw(node, 'semicolon')\n    for (let i = 0; i < node.nodes.length; i++) {\n      let child = node.nodes[i]\n      let before = this.raw(child, 'before')\n      if (before) this.builder(before)\n      this.stringify(child, last !== i || semicolon)\n    }\n  }\n\n  block (node, start) {\n    let between = this.raw(node, 'between', 'beforeOpen')\n    this.builder(start + between + '{', node, 'start')\n\n    let after\n    if (node.nodes && node.nodes.length) {\n      this.body(node)\n      after = this.raw(node, 'after')\n    } else {\n      after = this.raw(node, 'after', 'emptyBody')\n    }\n\n    if (after) this.builder(after)\n    this.builder('}', node, 'end')\n  }\n\n  raw (node, own, detect) {\n    let value\n    if (!detect) detect = own\n\n    // Already had\n    if (own) {\n      value = node.raws[own]\n      if (typeof value !== 'undefined') return value\n    }\n\n    let parent = node.parent\n\n    // Hack for first rule in CSS\n    if (detect === 'before') {\n      if (!parent || (parent.type === 'root' && parent.first === node)) {\n        return ''\n      }\n    }\n\n    // Floating child without parent\n    if (!parent) return DEFAULT_RAW[detect]\n\n    // Detect style by other nodes\n    let root = node.root()\n    if (!root.rawCache) root.rawCache = { }\n    if (typeof root.rawCache[detect] !== 'undefined') {\n      return root.rawCache[detect]\n    }\n\n    if (detect === 'before' || detect === 'after') {\n      return this.beforeAfter(node, detect)\n    } else {\n      let method = 'raw' + capitalize(detect)\n      if (this[method]) {\n        value = this[method](root, node)\n      } else {\n        root.walk(i => {\n          value = i.raws[own]\n          if (typeof value !== 'undefined') return false\n        })\n      }\n    }\n\n    if (typeof value === 'undefined') value = DEFAULT_RAW[detect]\n\n    root.rawCache[detect] = value\n    return value\n  }\n\n  rawSemicolon (root) {\n    let value\n    root.walk(i => {\n      if (i.nodes && i.nodes.length && i.last.type === 'decl') {\n        value = i.raws.semicolon\n        if (typeof value !== 'undefined') return false\n      }\n    })\n    return value\n  }\n\n  rawEmptyBody (root) {\n    let value\n    root.walk(i => {\n      if (i.nodes && i.nodes.length === 0) {\n        value = i.raws.after\n        if (typeof value !== 'undefined') return false\n      }\n    })\n    return value\n  }\n\n  rawIndent (root) {\n    if (root.raws.indent) return root.raws.indent\n    let value\n    root.walk(i => {\n      let p = i.parent\n      if (p && p !== root && p.parent && p.parent === root) {\n        if (typeof i.raws.before !== 'undefined') {\n          let parts = i.raws.before.split('\\n')\n          value = parts[parts.length - 1]\n          value = value.replace(/[^\\s]/g, '')\n          return false\n        }\n      }\n    })\n    return value\n  }\n\n  rawBeforeComment (root, node) {\n    let value\n    root.walkComments(i => {\n      if (typeof i.raws.before !== 'undefined') {\n        value = i.raws.before\n        if (value.indexOf('\\n') !== -1) {\n          value = value.replace(/[^\\n]+$/, '')\n        }\n        return false\n      }\n    })\n    if (typeof value === 'undefined') {\n      value = this.raw(node, null, 'beforeDecl')\n    } else if (value) {\n      value = value.replace(/[^\\s]/g, '')\n    }\n    return value\n  }\n\n  rawBeforeDecl (root, node) {\n    let value\n    root.walkDecls(i => {\n      if (typeof i.raws.before !== 'undefined') {\n        value = i.raws.before\n        if (value.indexOf('\\n') !== -1) {\n          value = value.replace(/[^\\n]+$/, '')\n        }\n        return false\n      }\n    })\n    if (typeof value === 'undefined') {\n      value = this.raw(node, null, 'beforeRule')\n    } else if (value) {\n      value = value.replace(/[^\\s]/g, '')\n    }\n    return value\n  }\n\n  rawBeforeRule (root) {\n    let value\n    root.walk(i => {\n      if (i.nodes && (i.parent !== root || root.first !== i)) {\n        if (typeof i.raws.before !== 'undefined') {\n          value = i.raws.before\n          if (value.indexOf('\\n') !== -1) {\n            value = value.replace(/[^\\n]+$/, '')\n          }\n          return false\n        }\n      }\n    })\n    if (value) value = value.replace(/[^\\s]/g, '')\n    return value\n  }\n\n  rawBeforeClose (root) {\n    let value\n    root.walk(i => {\n      if (i.nodes && i.nodes.length > 0) {\n        if (typeof i.raws.after !== 'undefined') {\n          value = i.raws.after\n          if (value.indexOf('\\n') !== -1) {\n            value = value.replace(/[^\\n]+$/, '')\n          }\n          return false\n        }\n      }\n    })\n    if (value) value = value.replace(/[^\\s]/g, '')\n    return value\n  }\n\n  rawBeforeOpen (root) {\n    let value\n    root.walk(i => {\n      if (i.type !== 'decl') {\n        value = i.raws.between\n        if (typeof value !== 'undefined') return false\n      }\n    })\n    return value\n  }\n\n  rawColon (root) {\n    let value\n    root.walkDecls(i => {\n      if (typeof i.raws.between !== 'undefined') {\n        value = i.raws.between.replace(/[^\\s:]/g, '')\n        return false\n      }\n    })\n    return value\n  }\n\n  beforeAfter (node, detect) {\n    let value\n    if (node.type === 'decl') {\n      value = this.raw(node, null, 'beforeDecl')\n    } else if (node.type === 'comment') {\n      value = this.raw(node, null, 'beforeComment')\n    } else if (detect === 'before') {\n      value = this.raw(node, null, 'beforeRule')\n    } else {\n      value = this.raw(node, null, 'beforeClose')\n    }\n\n    let buf = node.parent\n    let depth = 0\n    while (buf && buf.type !== 'root') {\n      depth += 1\n      buf = buf.parent\n    }\n\n    if (value.indexOf('\\n') !== -1) {\n      let indent = this.raw(node, null, 'indent')\n      if (indent.length) {\n        for (let step = 0; step < depth; step++) value += indent\n      }\n    }\n\n    return value\n  }\n\n  rawValue (node, prop) {\n    let value = node[prop]\n    let raw = node.raws[prop]\n    if (raw && raw.value === value) {\n      return raw.raw\n    }\n\n    return value\n  }\n}\n\nexport default Stringifier\n"]},"metadata":{},"sourceType":"script"}