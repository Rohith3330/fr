{"ast":null,"code":"import expect from 'expect';\nimport getSuggestion from '../../../src/util/getSuggestion';\ndescribe('spell check suggestion API', () => {\n  it('should return no suggestions given empty word and no dictionary', () => {\n    const word = '';\n    const expected = [];\n    const actual = getSuggestion(word);\n    expect(expected).toEqual(actual);\n  });\n  it('should return no suggestions given real word and no dictionary', () => {\n    const word = 'foo';\n    const expected = [];\n    const actual = getSuggestion(word);\n    expect(expected).toEqual(actual);\n  });\n  it('should return correct suggestion given real word and a dictionary', () => {\n    const word = 'fo';\n    const dictionary = ['foo', 'bar', 'baz'];\n    const expected = ['foo'];\n    const actual = getSuggestion(word, dictionary);\n    expect(expected).toEqual(actual);\n  });\n  it('should return multiple correct suggestions given real word and a dictionary', () => {\n    const word = 'theer';\n    const dictionary = ['there', 'their', 'foo', 'bar'];\n    const expected = ['there', 'their'];\n    const actual = getSuggestion(word, dictionary);\n    expect(expected).toEqual(actual);\n  });\n  it('should return correct # of suggestions given the limit argument', () => {\n    const word = 'theer';\n    const dictionary = ['there', 'their', 'foo', 'bar'];\n    const limit = 1;\n    const expected = 1;\n    const actual = getSuggestion(word, dictionary, limit).length;\n    expect(expected).toEqual(actual);\n  });\n});","map":{"version":3,"names":["expect","getSuggestion","describe","it","word","expected","actual","toEqual","dictionary","limit","length"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/eslint-plugin-jsx-a11y/__tests__/src/util/getSuggestion-test.js"],"sourcesContent":["import expect from 'expect';\nimport getSuggestion from '../../../src/util/getSuggestion';\n\ndescribe('spell check suggestion API', () => {\n  it('should return no suggestions given empty word and no dictionary', () => {\n    const word = '';\n    const expected = [];\n    const actual = getSuggestion(word);\n\n    expect(expected).toEqual(actual);\n  });\n\n  it('should return no suggestions given real word and no dictionary', () => {\n    const word = 'foo';\n    const expected = [];\n    const actual = getSuggestion(word);\n\n    expect(expected).toEqual(actual);\n  });\n\n  it('should return correct suggestion given real word and a dictionary', () => {\n    const word = 'fo';\n    const dictionary = ['foo', 'bar', 'baz'];\n    const expected = ['foo'];\n    const actual = getSuggestion(word, dictionary);\n\n    expect(expected).toEqual(actual);\n  });\n\n  it('should return multiple correct suggestions given real word and a dictionary', () => {\n    const word = 'theer';\n    const dictionary = ['there', 'their', 'foo', 'bar'];\n    const expected = ['there', 'their'];\n    const actual = getSuggestion(word, dictionary);\n\n    expect(expected).toEqual(actual);\n  });\n\n  it('should return correct # of suggestions given the limit argument', () => {\n    const word = 'theer';\n    const dictionary = ['there', 'their', 'foo', 'bar'];\n    const limit = 1;\n    const expected = 1;\n    const actual = getSuggestion(word, dictionary, limit).length;\n\n    expect(expected).toEqual(actual);\n  });\n});\n"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,QAAnB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AAEAC,QAAQ,CAAC,4BAAD,EAA+B,MAAM;EAC3CC,EAAE,CAAC,iEAAD,EAAoE,MAAM;IAC1E,MAAMC,IAAI,GAAG,EAAb;IACA,MAAMC,QAAQ,GAAG,EAAjB;IACA,MAAMC,MAAM,GAAGL,aAAa,CAACG,IAAD,CAA5B;IAEAJ,MAAM,CAACK,QAAD,CAAN,CAAiBE,OAAjB,CAAyBD,MAAzB;EACD,CANC,CAAF;EAQAH,EAAE,CAAC,gEAAD,EAAmE,MAAM;IACzE,MAAMC,IAAI,GAAG,KAAb;IACA,MAAMC,QAAQ,GAAG,EAAjB;IACA,MAAMC,MAAM,GAAGL,aAAa,CAACG,IAAD,CAA5B;IAEAJ,MAAM,CAACK,QAAD,CAAN,CAAiBE,OAAjB,CAAyBD,MAAzB;EACD,CANC,CAAF;EAQAH,EAAE,CAAC,mEAAD,EAAsE,MAAM;IAC5E,MAAMC,IAAI,GAAG,IAAb;IACA,MAAMI,UAAU,GAAG,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,CAAnB;IACA,MAAMH,QAAQ,GAAG,CAAC,KAAD,CAAjB;IACA,MAAMC,MAAM,GAAGL,aAAa,CAACG,IAAD,EAAOI,UAAP,CAA5B;IAEAR,MAAM,CAACK,QAAD,CAAN,CAAiBE,OAAjB,CAAyBD,MAAzB;EACD,CAPC,CAAF;EASAH,EAAE,CAAC,6EAAD,EAAgF,MAAM;IACtF,MAAMC,IAAI,GAAG,OAAb;IACA,MAAMI,UAAU,GAAG,CAAC,OAAD,EAAU,OAAV,EAAmB,KAAnB,EAA0B,KAA1B,CAAnB;IACA,MAAMH,QAAQ,GAAG,CAAC,OAAD,EAAU,OAAV,CAAjB;IACA,MAAMC,MAAM,GAAGL,aAAa,CAACG,IAAD,EAAOI,UAAP,CAA5B;IAEAR,MAAM,CAACK,QAAD,CAAN,CAAiBE,OAAjB,CAAyBD,MAAzB;EACD,CAPC,CAAF;EASAH,EAAE,CAAC,iEAAD,EAAoE,MAAM;IAC1E,MAAMC,IAAI,GAAG,OAAb;IACA,MAAMI,UAAU,GAAG,CAAC,OAAD,EAAU,OAAV,EAAmB,KAAnB,EAA0B,KAA1B,CAAnB;IACA,MAAMC,KAAK,GAAG,CAAd;IACA,MAAMJ,QAAQ,GAAG,CAAjB;IACA,MAAMC,MAAM,GAAGL,aAAa,CAACG,IAAD,EAAOI,UAAP,EAAmBC,KAAnB,CAAb,CAAuCC,MAAtD;IAEAV,MAAM,CAACK,QAAD,CAAN,CAAiBE,OAAjB,CAAyBD,MAAzB;EACD,CARC,CAAF;AASD,CA5CO,CAAR"},"metadata":{},"sourceType":"module"}