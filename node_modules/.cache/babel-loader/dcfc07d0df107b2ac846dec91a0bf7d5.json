{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.queryByText = exports.queryAllByText = exports.getByText = exports.getAllByText = exports.findByText = exports.findAllByText = void 0;\n\nvar _queryHelpers = require(\"../query-helpers\");\n\nvar _helpers = require(\"../helpers\");\n\nvar _allUtils = require(\"./all-utils\");\n\nconst queryAllByText = function (container, text) {\n  let {\n    selector = '*',\n    exact = true,\n    collapseWhitespace,\n    trim,\n    ignore = (0, _allUtils.getConfig)().defaultIgnore,\n    normalizer\n  } = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  (0, _helpers.checkContainerType)(container);\n  const matcher = exact ? _allUtils.matches : _allUtils.fuzzyMatches;\n  const matchNormalizer = (0, _allUtils.makeNormalizer)({\n    collapseWhitespace,\n    trim,\n    normalizer\n  });\n  let baseArray = [];\n\n  if (typeof container.matches === 'function' && container.matches(selector)) {\n    baseArray = [container];\n  }\n\n  return [...baseArray, ...Array.from(container.querySelectorAll(selector))] // TODO: `matches` according lib.dom.d.ts can get only `string` but according our code it can handle also boolean :)\n  .filter(node => !ignore || !node.matches(ignore)).filter(node => matcher((0, _allUtils.getNodeText)(node), node, text, matchNormalizer));\n};\n\nconst getMultipleError = (c, text) => `Found multiple elements with the text: ${text}`;\n\nconst getMissingError = function (c, text) {\n  let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  const {\n    collapseWhitespace,\n    trim,\n    normalizer\n  } = options;\n  const matchNormalizer = (0, _allUtils.makeNormalizer)({\n    collapseWhitespace,\n    trim,\n    normalizer\n  });\n  const normalizedText = matchNormalizer(text.toString());\n  const isNormalizedDifferent = normalizedText !== text.toString();\n  return `Unable to find an element with the text: ${isNormalizedDifferent ? `${normalizedText} (normalized from '${text}')` : text}. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.`;\n};\n\nconst queryAllByTextWithSuggestions = (0, _queryHelpers.wrapAllByQueryWithSuggestion)(queryAllByText, queryAllByText.name, 'queryAll');\nexports.queryAllByText = queryAllByTextWithSuggestions;\nconst [queryByText, getAllByText, getByText, findAllByText, findByText] = (0, _allUtils.buildQueries)(queryAllByText, getMultipleError, getMissingError);\nexports.findByText = findByText;\nexports.findAllByText = findAllByText;\nexports.getByText = getByText;\nexports.getAllByText = getAllByText;\nexports.queryByText = queryByText;","map":{"version":3,"names":["Object","defineProperty","exports","value","queryByText","queryAllByText","getByText","getAllByText","findByText","findAllByText","_queryHelpers","require","_helpers","_allUtils","container","text","selector","exact","collapseWhitespace","trim","ignore","getConfig","defaultIgnore","normalizer","checkContainerType","matcher","matches","fuzzyMatches","matchNormalizer","makeNormalizer","baseArray","Array","from","querySelectorAll","filter","node","getNodeText","getMultipleError","c","getMissingError","options","normalizedText","toString","isNormalizedDifferent","queryAllByTextWithSuggestions","wrapAllByQueryWithSuggestion","name","buildQueries"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/@testing-library/dom/dist/queries/text.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.queryByText = exports.queryAllByText = exports.getByText = exports.getAllByText = exports.findByText = exports.findAllByText = void 0;\n\nvar _queryHelpers = require(\"../query-helpers\");\n\nvar _helpers = require(\"../helpers\");\n\nvar _allUtils = require(\"./all-utils\");\n\nconst queryAllByText = (container, text, {\n  selector = '*',\n  exact = true,\n  collapseWhitespace,\n  trim,\n  ignore = (0, _allUtils.getConfig)().defaultIgnore,\n  normalizer\n} = {}) => {\n  (0, _helpers.checkContainerType)(container);\n  const matcher = exact ? _allUtils.matches : _allUtils.fuzzyMatches;\n  const matchNormalizer = (0, _allUtils.makeNormalizer)({\n    collapseWhitespace,\n    trim,\n    normalizer\n  });\n  let baseArray = [];\n\n  if (typeof container.matches === 'function' && container.matches(selector)) {\n    baseArray = [container];\n  }\n\n  return [...baseArray, ...Array.from(container.querySelectorAll(selector))] // TODO: `matches` according lib.dom.d.ts can get only `string` but according our code it can handle also boolean :)\n  .filter(node => !ignore || !node.matches(ignore)).filter(node => matcher((0, _allUtils.getNodeText)(node), node, text, matchNormalizer));\n};\n\nconst getMultipleError = (c, text) => `Found multiple elements with the text: ${text}`;\n\nconst getMissingError = (c, text, options = {}) => {\n  const {\n    collapseWhitespace,\n    trim,\n    normalizer\n  } = options;\n  const matchNormalizer = (0, _allUtils.makeNormalizer)({\n    collapseWhitespace,\n    trim,\n    normalizer\n  });\n  const normalizedText = matchNormalizer(text.toString());\n  const isNormalizedDifferent = normalizedText !== text.toString();\n  return `Unable to find an element with the text: ${isNormalizedDifferent ? `${normalizedText} (normalized from '${text}')` : text}. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.`;\n};\n\nconst queryAllByTextWithSuggestions = (0, _queryHelpers.wrapAllByQueryWithSuggestion)(queryAllByText, queryAllByText.name, 'queryAll');\nexports.queryAllByText = queryAllByTextWithSuggestions;\nconst [queryByText, getAllByText, getByText, findAllByText, findByText] = (0, _allUtils.buildQueries)(queryAllByText, getMultipleError, getMissingError);\nexports.findByText = findByText;\nexports.findAllByText = findAllByText;\nexports.getByText = getByText;\nexports.getAllByText = getAllByText;\nexports.queryByText = queryByText;"],"mappings":"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"},"metadata":{},"sourceType":"script"}