{"ast":null,"code":"/**\n * Extractor function for a MemberExpression type value node.\n * A member expression is accessing a property on an object `obj.property`.\n *\n * @param - value - AST Value object with type `MemberExpression`\n * @returns - The extracted value converted to correct type\n *  and maintaing `obj.property` convention.\n */\nexport default function extractValueFromMemberExpression(value) {\n  // eslint-disable-next-line global-require\n  const getValue = require('.').default;\n\n  return `${getValue(value.object)}${value.optional ? '?.' : '.'}${getValue(value.property)}`;\n}","map":{"version":3,"names":["extractValueFromMemberExpression","value","getValue","require","default","object","optional","property"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/jsx-ast-utils/src/values/expressions/MemberExpression.js"],"sourcesContent":["/**\n * Extractor function for a MemberExpression type value node.\n * A member expression is accessing a property on an object `obj.property`.\n *\n * @param - value - AST Value object with type `MemberExpression`\n * @returns - The extracted value converted to correct type\n *  and maintaing `obj.property` convention.\n */\nexport default function extractValueFromMemberExpression(value) {\n  // eslint-disable-next-line global-require\n  const getValue = require('.').default;\n  return `${getValue(value.object)}${value.optional ? '?.' : '.'}${getValue(value.property)}`;\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASA,gCAAT,CAA0CC,KAA1C,EAAiD;EAC9D;EACA,MAAMC,QAAQ,GAAGC,OAAO,CAAC,GAAD,CAAP,CAAaC,OAA9B;;EACA,OAAQ,GAAEF,QAAQ,CAACD,KAAK,CAACI,MAAP,CAAe,GAAEJ,KAAK,CAACK,QAAN,GAAiB,IAAjB,GAAwB,GAAI,GAAEJ,QAAQ,CAACD,KAAK,CAACM,QAAP,CAAiB,EAA1F;AACD"},"metadata":{},"sourceType":"module"}