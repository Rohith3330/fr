{"ast":null,"code":"'use strict';\n\nconst PROPERTIES = ['rss', 'heapTotal', 'heapUsed', 'external'];\nlet memory;\nmodule.exports = {\n  initialise,\n  update,\n  report\n};\n\nfunction initialise() {\n  memory = PROPERTIES.reduce((result, name) => {\n    result[name] = {\n      sum: 0,\n      hwm: 0\n    };\n    return result;\n  }, {\n    count: 0\n  });\n}\n\nfunction update() {\n  const currentMemory = process.memoryUsage();\n  PROPERTIES.forEach(name => updateProperty(name, currentMemory));\n}\n\nfunction updateProperty(name, currentMemory) {\n  const m = memory[name];\n  const c = currentMemory[name];\n  m.sum += c;\n\n  if (c > m.hwm) {\n    m.hwm = c;\n  }\n}\n\nfunction report() {\n  PROPERTIES.forEach(name => reportProperty(name));\n}\n\nfunction reportProperty(name) {\n  const m = memory[name]; // eslint-disable-next-line no-console\n\n  console.log(`mean ${name}: ${m.sum / memory.count}; hwm: ${m.hwm}`);\n}","map":{"version":3,"names":["PROPERTIES","memory","module","exports","initialise","update","report","reduce","result","name","sum","hwm","count","currentMemory","process","memoryUsage","forEach","updateProperty","m","c","reportProperty","console","log"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/bfj/src/memory.js"],"sourcesContent":["'use strict'\n\nconst PROPERTIES = [ 'rss', 'heapTotal', 'heapUsed', 'external' ]\n\nlet memory\n\nmodule.exports = {\n  initialise,\n  update,\n  report\n}\n\nfunction initialise () {\n  memory = PROPERTIES.reduce((result, name) => {\n    result[name] = {\n      sum: 0,\n      hwm: 0\n    }\n    return result\n  }, { count: 0 })\n}\n\nfunction update () {\n  const currentMemory = process.memoryUsage()\n  PROPERTIES.forEach(name => updateProperty(name, currentMemory))\n}\n\nfunction updateProperty (name, currentMemory) {\n  const m = memory[name]\n  const c = currentMemory[name]\n  m.sum += c\n  if (c > m.hwm) {\n    m.hwm = c\n  }\n}\n\nfunction report () {\n  PROPERTIES.forEach(name => reportProperty(name))\n}\n\nfunction reportProperty (name) {\n  const m = memory[name]\n  // eslint-disable-next-line no-console\n  console.log(`mean ${name}: ${m.sum / memory.count}; hwm: ${m.hwm}`)\n}\n"],"mappings":"AAAA;;AAEA,MAAMA,UAAU,GAAG,CAAE,KAAF,EAAS,WAAT,EAAsB,UAAtB,EAAkC,UAAlC,CAAnB;AAEA,IAAIC,MAAJ;AAEAC,MAAM,CAACC,OAAP,GAAiB;EACfC,UADe;EAEfC,MAFe;EAGfC;AAHe,CAAjB;;AAMA,SAASF,UAAT,GAAuB;EACrBH,MAAM,GAAGD,UAAU,CAACO,MAAX,CAAkB,CAACC,MAAD,EAASC,IAAT,KAAkB;IAC3CD,MAAM,CAACC,IAAD,CAAN,GAAe;MACbC,GAAG,EAAE,CADQ;MAEbC,GAAG,EAAE;IAFQ,CAAf;IAIA,OAAOH,MAAP;EACD,CANQ,EAMN;IAAEI,KAAK,EAAE;EAAT,CANM,CAAT;AAOD;;AAED,SAASP,MAAT,GAAmB;EACjB,MAAMQ,aAAa,GAAGC,OAAO,CAACC,WAAR,EAAtB;EACAf,UAAU,CAACgB,OAAX,CAAmBP,IAAI,IAAIQ,cAAc,CAACR,IAAD,EAAOI,aAAP,CAAzC;AACD;;AAED,SAASI,cAAT,CAAyBR,IAAzB,EAA+BI,aAA/B,EAA8C;EAC5C,MAAMK,CAAC,GAAGjB,MAAM,CAACQ,IAAD,CAAhB;EACA,MAAMU,CAAC,GAAGN,aAAa,CAACJ,IAAD,CAAvB;EACAS,CAAC,CAACR,GAAF,IAASS,CAAT;;EACA,IAAIA,CAAC,GAAGD,CAAC,CAACP,GAAV,EAAe;IACbO,CAAC,CAACP,GAAF,GAAQQ,CAAR;EACD;AACF;;AAED,SAASb,MAAT,GAAmB;EACjBN,UAAU,CAACgB,OAAX,CAAmBP,IAAI,IAAIW,cAAc,CAACX,IAAD,CAAzC;AACD;;AAED,SAASW,cAAT,CAAyBX,IAAzB,EAA+B;EAC7B,MAAMS,CAAC,GAAGjB,MAAM,CAACQ,IAAD,CAAhB,CAD6B,CAE7B;;EACAY,OAAO,CAACC,GAAR,CAAa,QAAOb,IAAK,KAAIS,CAAC,CAACR,GAAF,GAAQT,MAAM,CAACW,KAAM,UAASM,CAAC,CAACP,GAAI,EAAjE;AACD"},"metadata":{},"sourceType":"script"}