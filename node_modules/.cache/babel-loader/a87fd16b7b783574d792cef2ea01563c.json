{"ast":null,"code":"'use strict';\n/**\n * @typedef {import('../lib/types').XastElement} XastElement\n */\n\nconst {\n  visitSkip,\n  detachNodeFromParent\n} = require('../lib/xast.js');\n\nconst JSAPI = require('../lib/svgo/jsAPI.js');\n\nexports.name = 'mergeStyles';\nexports.type = 'visitor';\nexports.active = true;\nexports.description = 'merge multiple style elements into one';\n/**\n * Merge multiple style elements into one.\n *\n * @author strarsis <strarsis@gmail.com>\n *\n * @type {import('../lib/types').Plugin<void>}\n */\n\nexports.fn = () => {\n  /**\n   * @type {null | XastElement}\n   */\n  let firstStyleElement = null;\n  let collectedStyles = '';\n  let styleContentType = 'text';\n  return {\n    element: {\n      enter: (node, parentNode) => {\n        // skip <foreignObject> content\n        if (node.name === 'foreignObject') {\n          return visitSkip;\n        } // collect style elements\n\n\n        if (node.name !== 'style') {\n          return;\n        } // skip <style> with invalid type attribute\n\n\n        if (node.attributes.type != null && node.attributes.type !== '' && node.attributes.type !== 'text/css') {\n          return;\n        } // extract style element content\n\n\n        let css = '';\n\n        for (const child of node.children) {\n          if (child.type === 'text') {\n            css += child.value;\n          }\n\n          if (child.type === 'cdata') {\n            styleContentType = 'cdata';\n            css += child.value;\n          }\n        } // remove empty style elements\n\n\n        if (css.trim().length === 0) {\n          detachNodeFromParent(node, parentNode);\n          return;\n        } // collect css and wrap with media query if present in attribute\n\n\n        if (node.attributes.media == null) {\n          collectedStyles += css;\n        } else {\n          collectedStyles += `@media ${node.attributes.media}{${css}}`;\n          delete node.attributes.media;\n        } // combine collected styles in the first style element\n\n\n        if (firstStyleElement == null) {\n          firstStyleElement = node;\n        } else {\n          detachNodeFromParent(node, parentNode);\n          firstStyleElement.children = [new JSAPI({\n            type: styleContentType,\n            value: collectedStyles\n          }, firstStyleElement)];\n        }\n      }\n    }\n  };\n};","map":{"version":3,"names":["visitSkip","detachNodeFromParent","require","JSAPI","exports","name","type","active","description","fn","firstStyleElement","collectedStyles","styleContentType","element","enter","node","parentNode","attributes","css","child","children","value","trim","length","media"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/postcss-svgo/node_modules/svgo/plugins/mergeStyles.js"],"sourcesContent":["'use strict';\n\n/**\n * @typedef {import('../lib/types').XastElement} XastElement\n */\n\nconst { visitSkip, detachNodeFromParent } = require('../lib/xast.js');\nconst JSAPI = require('../lib/svgo/jsAPI.js');\n\nexports.name = 'mergeStyles';\nexports.type = 'visitor';\nexports.active = true;\nexports.description = 'merge multiple style elements into one';\n\n/**\n * Merge multiple style elements into one.\n *\n * @author strarsis <strarsis@gmail.com>\n *\n * @type {import('../lib/types').Plugin<void>}\n */\nexports.fn = () => {\n  /**\n   * @type {null | XastElement}\n   */\n  let firstStyleElement = null;\n  let collectedStyles = '';\n  let styleContentType = 'text';\n\n  return {\n    element: {\n      enter: (node, parentNode) => {\n        // skip <foreignObject> content\n        if (node.name === 'foreignObject') {\n          return visitSkip;\n        }\n\n        // collect style elements\n        if (node.name !== 'style') {\n          return;\n        }\n\n        // skip <style> with invalid type attribute\n        if (\n          node.attributes.type != null &&\n          node.attributes.type !== '' &&\n          node.attributes.type !== 'text/css'\n        ) {\n          return;\n        }\n\n        // extract style element content\n        let css = '';\n        for (const child of node.children) {\n          if (child.type === 'text') {\n            css += child.value;\n          }\n          if (child.type === 'cdata') {\n            styleContentType = 'cdata';\n            css += child.value;\n          }\n        }\n\n        // remove empty style elements\n        if (css.trim().length === 0) {\n          detachNodeFromParent(node, parentNode);\n          return;\n        }\n\n        // collect css and wrap with media query if present in attribute\n        if (node.attributes.media == null) {\n          collectedStyles += css;\n        } else {\n          collectedStyles += `@media ${node.attributes.media}{${css}}`;\n          delete node.attributes.media;\n        }\n\n        // combine collected styles in the first style element\n        if (firstStyleElement == null) {\n          firstStyleElement = node;\n        } else {\n          detachNodeFromParent(node, parentNode);\n          firstStyleElement.children = [\n            new JSAPI(\n              { type: styleContentType, value: collectedStyles },\n              firstStyleElement\n            ),\n          ];\n        }\n      },\n    },\n  };\n};\n"],"mappings":"AAAA;AAEA;AACA;AACA;;AAEA,MAAM;EAAEA,SAAF;EAAaC;AAAb,IAAsCC,OAAO,CAAC,gBAAD,CAAnD;;AACA,MAAMC,KAAK,GAAGD,OAAO,CAAC,sBAAD,CAArB;;AAEAE,OAAO,CAACC,IAAR,GAAe,aAAf;AACAD,OAAO,CAACE,IAAR,GAAe,SAAf;AACAF,OAAO,CAACG,MAAR,GAAiB,IAAjB;AACAH,OAAO,CAACI,WAAR,GAAsB,wCAAtB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAJ,OAAO,CAACK,EAAR,GAAa,MAAM;EACjB;AACF;AACA;EACE,IAAIC,iBAAiB,GAAG,IAAxB;EACA,IAAIC,eAAe,GAAG,EAAtB;EACA,IAAIC,gBAAgB,GAAG,MAAvB;EAEA,OAAO;IACLC,OAAO,EAAE;MACPC,KAAK,EAAE,CAACC,IAAD,EAAOC,UAAP,KAAsB;QAC3B;QACA,IAAID,IAAI,CAACV,IAAL,KAAc,eAAlB,EAAmC;UACjC,OAAOL,SAAP;QACD,CAJ0B,CAM3B;;;QACA,IAAIe,IAAI,CAACV,IAAL,KAAc,OAAlB,EAA2B;UACzB;QACD,CAT0B,CAW3B;;;QACA,IACEU,IAAI,CAACE,UAAL,CAAgBX,IAAhB,IAAwB,IAAxB,IACAS,IAAI,CAACE,UAAL,CAAgBX,IAAhB,KAAyB,EADzB,IAEAS,IAAI,CAACE,UAAL,CAAgBX,IAAhB,KAAyB,UAH3B,EAIE;UACA;QACD,CAlB0B,CAoB3B;;;QACA,IAAIY,GAAG,GAAG,EAAV;;QACA,KAAK,MAAMC,KAAX,IAAoBJ,IAAI,CAACK,QAAzB,EAAmC;UACjC,IAAID,KAAK,CAACb,IAAN,KAAe,MAAnB,EAA2B;YACzBY,GAAG,IAAIC,KAAK,CAACE,KAAb;UACD;;UACD,IAAIF,KAAK,CAACb,IAAN,KAAe,OAAnB,EAA4B;YAC1BM,gBAAgB,GAAG,OAAnB;YACAM,GAAG,IAAIC,KAAK,CAACE,KAAb;UACD;QACF,CA9B0B,CAgC3B;;;QACA,IAAIH,GAAG,CAACI,IAAJ,GAAWC,MAAX,KAAsB,CAA1B,EAA6B;UAC3BtB,oBAAoB,CAACc,IAAD,EAAOC,UAAP,CAApB;UACA;QACD,CApC0B,CAsC3B;;;QACA,IAAID,IAAI,CAACE,UAAL,CAAgBO,KAAhB,IAAyB,IAA7B,EAAmC;UACjCb,eAAe,IAAIO,GAAnB;QACD,CAFD,MAEO;UACLP,eAAe,IAAK,UAASI,IAAI,CAACE,UAAL,CAAgBO,KAAM,IAAGN,GAAI,GAA1D;UACA,OAAOH,IAAI,CAACE,UAAL,CAAgBO,KAAvB;QACD,CA5C0B,CA8C3B;;;QACA,IAAId,iBAAiB,IAAI,IAAzB,EAA+B;UAC7BA,iBAAiB,GAAGK,IAApB;QACD,CAFD,MAEO;UACLd,oBAAoB,CAACc,IAAD,EAAOC,UAAP,CAApB;UACAN,iBAAiB,CAACU,QAAlB,GAA6B,CAC3B,IAAIjB,KAAJ,CACE;YAAEG,IAAI,EAAEM,gBAAR;YAA0BS,KAAK,EAAEV;UAAjC,CADF,EAEED,iBAFF,CAD2B,CAA7B;QAMD;MACF;IA3DM;EADJ,CAAP;AA+DD,CAvED"},"metadata":{},"sourceType":"script"}