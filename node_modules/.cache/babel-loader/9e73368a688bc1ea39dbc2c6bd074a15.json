{"ast":null,"code":"var retry = require('../lib/retry');\n\nfunction attemptAsyncOperation(someInput, cb) {\n  var opts = {\n    retries: 2,\n    factor: 2,\n    minTimeout: 1 * 1000,\n    maxTimeout: 2 * 1000,\n    randomize: true\n  };\n  var operation = retry.operation(opts);\n  operation.attempt(function (currentAttempt) {\n    failingAsyncOperation(someInput, function (err, result) {\n      if (err && err.message === 'A fatal error') {\n        operation.stop();\n        return cb(err);\n      }\n\n      if (operation.retry(err)) {\n        return;\n      }\n\n      cb(operation.mainError(), operation.errors(), result);\n    });\n  });\n}\n\nattemptAsyncOperation('test input', function (err, errors, result) {\n  console.warn('err:');\n  console.log(err);\n  console.warn('result:');\n  console.log(result);\n});\n\nfunction failingAsyncOperation(input, cb) {\n  return setImmediate(cb.bind(null, new Error('A fatal error')));\n}","map":{"version":3,"names":["retry","require","attemptAsyncOperation","someInput","cb","opts","retries","factor","minTimeout","maxTimeout","randomize","operation","attempt","currentAttempt","failingAsyncOperation","err","result","message","stop","mainError","errors","console","warn","log","input","setImmediate","bind","Error"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/retry/example/stop.js"],"sourcesContent":["var retry = require('../lib/retry');\n\nfunction attemptAsyncOperation(someInput, cb) {\n  var opts = {\n    retries: 2,\n    factor: 2,\n    minTimeout: 1 * 1000,\n    maxTimeout: 2 * 1000,\n    randomize: true\n  };\n  var operation = retry.operation(opts);\n\n  operation.attempt(function(currentAttempt) {\n    failingAsyncOperation(someInput, function(err, result) {\n\n      if (err && err.message === 'A fatal error') {\n        operation.stop();\n        return cb(err);\n      }\n\n      if (operation.retry(err)) {\n        return;\n      }\n\n      cb(operation.mainError(), operation.errors(), result);\n    });\n  });\n}\n\nattemptAsyncOperation('test input', function(err, errors, result) {\n  console.warn('err:');\n  console.log(err);\n\n  console.warn('result:');\n  console.log(result);\n});\n\nfunction failingAsyncOperation(input, cb) {\n  return setImmediate(cb.bind(null, new Error('A fatal error')));\n}\n"],"mappings":"AAAA,IAAIA,KAAK,GAAGC,OAAO,CAAC,cAAD,CAAnB;;AAEA,SAASC,qBAAT,CAA+BC,SAA/B,EAA0CC,EAA1C,EAA8C;EAC5C,IAAIC,IAAI,GAAG;IACTC,OAAO,EAAE,CADA;IAETC,MAAM,EAAE,CAFC;IAGTC,UAAU,EAAE,IAAI,IAHP;IAITC,UAAU,EAAE,IAAI,IAJP;IAKTC,SAAS,EAAE;EALF,CAAX;EAOA,IAAIC,SAAS,GAAGX,KAAK,CAACW,SAAN,CAAgBN,IAAhB,CAAhB;EAEAM,SAAS,CAACC,OAAV,CAAkB,UAASC,cAAT,EAAyB;IACzCC,qBAAqB,CAACX,SAAD,EAAY,UAASY,GAAT,EAAcC,MAAd,EAAsB;MAErD,IAAID,GAAG,IAAIA,GAAG,CAACE,OAAJ,KAAgB,eAA3B,EAA4C;QAC1CN,SAAS,CAACO,IAAV;QACA,OAAOd,EAAE,CAACW,GAAD,CAAT;MACD;;MAED,IAAIJ,SAAS,CAACX,KAAV,CAAgBe,GAAhB,CAAJ,EAA0B;QACxB;MACD;;MAEDX,EAAE,CAACO,SAAS,CAACQ,SAAV,EAAD,EAAwBR,SAAS,CAACS,MAAV,EAAxB,EAA4CJ,MAA5C,CAAF;IACD,CAZoB,CAArB;EAaD,CAdD;AAeD;;AAEDd,qBAAqB,CAAC,YAAD,EAAe,UAASa,GAAT,EAAcK,MAAd,EAAsBJ,MAAtB,EAA8B;EAChEK,OAAO,CAACC,IAAR,CAAa,MAAb;EACAD,OAAO,CAACE,GAAR,CAAYR,GAAZ;EAEAM,OAAO,CAACC,IAAR,CAAa,SAAb;EACAD,OAAO,CAACE,GAAR,CAAYP,MAAZ;AACD,CANoB,CAArB;;AAQA,SAASF,qBAAT,CAA+BU,KAA/B,EAAsCpB,EAAtC,EAA0C;EACxC,OAAOqB,YAAY,CAACrB,EAAE,CAACsB,IAAH,CAAQ,IAAR,EAAc,IAAIC,KAAJ,CAAU,eAAV,CAAd,CAAD,CAAnB;AACD"},"metadata":{},"sourceType":"script"}