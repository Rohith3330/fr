{"ast":null,"code":"'use strict';\n\nvar assertRecord = require('../helpers/assertRecord');\n\nvar IsAccessorDescriptor = require('./IsAccessorDescriptor');\n\nvar IsDataDescriptor = require('./IsDataDescriptor');\n\nvar Type = require('./Type'); // https://ecma-international.org/ecma-262/6.0/#sec-isgenericdescriptor\n\n\nmodule.exports = function IsGenericDescriptor(Desc) {\n  if (typeof Desc === 'undefined') {\n    return false;\n  }\n\n  assertRecord(Type, 'Property Descriptor', 'Desc', Desc);\n\n  if (!IsAccessorDescriptor(Desc) && !IsDataDescriptor(Desc)) {\n    return true;\n  }\n\n  return false;\n};","map":{"version":3,"names":["assertRecord","require","IsAccessorDescriptor","IsDataDescriptor","Type","module","exports","IsGenericDescriptor","Desc"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/es-abstract/2016/IsGenericDescriptor.js"],"sourcesContent":["'use strict';\n\nvar assertRecord = require('../helpers/assertRecord');\n\nvar IsAccessorDescriptor = require('./IsAccessorDescriptor');\nvar IsDataDescriptor = require('./IsDataDescriptor');\nvar Type = require('./Type');\n\n// https://ecma-international.org/ecma-262/6.0/#sec-isgenericdescriptor\n\nmodule.exports = function IsGenericDescriptor(Desc) {\n\tif (typeof Desc === 'undefined') {\n\t\treturn false;\n\t}\n\n\tassertRecord(Type, 'Property Descriptor', 'Desc', Desc);\n\n\tif (!IsAccessorDescriptor(Desc) && !IsDataDescriptor(Desc)) {\n\t\treturn true;\n\t}\n\n\treturn false;\n};\n"],"mappings":"AAAA;;AAEA,IAAIA,YAAY,GAAGC,OAAO,CAAC,yBAAD,CAA1B;;AAEA,IAAIC,oBAAoB,GAAGD,OAAO,CAAC,wBAAD,CAAlC;;AACA,IAAIE,gBAAgB,GAAGF,OAAO,CAAC,oBAAD,CAA9B;;AACA,IAAIG,IAAI,GAAGH,OAAO,CAAC,QAAD,CAAlB,C,CAEA;;;AAEAI,MAAM,CAACC,OAAP,GAAiB,SAASC,mBAAT,CAA6BC,IAA7B,EAAmC;EACnD,IAAI,OAAOA,IAAP,KAAgB,WAApB,EAAiC;IAChC,OAAO,KAAP;EACA;;EAEDR,YAAY,CAACI,IAAD,EAAO,qBAAP,EAA8B,MAA9B,EAAsCI,IAAtC,CAAZ;;EAEA,IAAI,CAACN,oBAAoB,CAACM,IAAD,CAArB,IAA+B,CAACL,gBAAgB,CAACK,IAAD,CAApD,EAA4D;IAC3D,OAAO,IAAP;EACA;;EAED,OAAO,KAAP;AACA,CAZD"},"metadata":{},"sourceType":"script"}