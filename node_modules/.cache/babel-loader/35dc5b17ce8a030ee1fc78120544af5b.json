{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _ariaQuery = require(\"aria-query\");\n\nvar _jsxAstUtils = require(\"jsx-ast-utils\");\n\nvar _arrayIncludes = _interopRequireDefault(require(\"array-includes\"));\n\nvar _schemas = require(\"../util/schemas\");\n\nvar _getElementType = _interopRequireDefault(require(\"../util/getElementType\"));\n\nvar _isHiddenFromScreenReader = _interopRequireDefault(require(\"../util/isHiddenFromScreenReader\"));\n\nvar _isInteractiveElement = _interopRequireDefault(require(\"../util/isInteractiveElement\"));\n\nvar _isPresentationRole = _interopRequireDefault(require(\"../util/isPresentationRole\"));\n/**\n * @fileoverview Enforce a clickable non-interactive element has at least 1 keyboard event listener.\n * @author Ethan Cohen\n */\n// ----------------------------------------------------------------------------\n// Rule Definition\n// ----------------------------------------------------------------------------\n\n\nvar errorMessage = 'Visible, non-interactive elements with click handlers must have at least one keyboard listener.';\nvar schema = (0, _schemas.generateObjSchema)();\nvar domElements = (0, _toConsumableArray2[\"default\"])(_ariaQuery.dom.keys());\nvar _default = {\n  meta: {\n    docs: {\n      url: 'https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/tree/HEAD/docs/rules/click-events-have-key-events.md',\n      description: 'Enforce a clickable non-interactive element has at least one keyboard event listener.'\n    },\n    schema: [schema]\n  },\n  create: function create(context) {\n    var elementType = (0, _getElementType[\"default\"])(context);\n    return {\n      JSXOpeningElement: function JSXOpeningElement(node) {\n        var props = node.attributes;\n\n        if ((0, _jsxAstUtils.getProp)(props, 'onclick') === undefined) {\n          return;\n        }\n\n        var type = elementType(node);\n        var requiredProps = ['onkeydown', 'onkeyup', 'onkeypress'];\n\n        if (!(0, _arrayIncludes[\"default\"])(domElements, type)) {\n          // Do not test higher level JSX components, as we do not know what\n          // low-level DOM element this maps to.\n          return;\n        }\n\n        if ((0, _isHiddenFromScreenReader[\"default\"])(type, props) || (0, _isPresentationRole[\"default\"])(type, props)) {\n          return;\n        }\n\n        if ((0, _isInteractiveElement[\"default\"])(type, props)) {\n          return;\n        }\n\n        if ((0, _jsxAstUtils.hasAnyProp)(props, requiredProps)) {\n          return;\n        } // Visible, non-interactive elements with click handlers require one keyboard event listener.\n\n\n        context.report({\n          node,\n          message: errorMessage\n        });\n      }\n    };\n  }\n};\nexports[\"default\"] = _default;\nmodule.exports = exports.default;","map":{"version":3,"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","_toConsumableArray2","_ariaQuery","_jsxAstUtils","_arrayIncludes","_schemas","_getElementType","_isHiddenFromScreenReader","_isInteractiveElement","_isPresentationRole","errorMessage","schema","generateObjSchema","domElements","dom","keys","_default","meta","docs","url","description","create","context","elementType","JSXOpeningElement","node","props","attributes","getProp","undefined","type","requiredProps","hasAnyProp","report","message","module","default"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/eslint-plugin-jsx-a11y/lib/rules/click-events-have-key-events.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _ariaQuery = require(\"aria-query\");\n\nvar _jsxAstUtils = require(\"jsx-ast-utils\");\n\nvar _arrayIncludes = _interopRequireDefault(require(\"array-includes\"));\n\nvar _schemas = require(\"../util/schemas\");\n\nvar _getElementType = _interopRequireDefault(require(\"../util/getElementType\"));\n\nvar _isHiddenFromScreenReader = _interopRequireDefault(require(\"../util/isHiddenFromScreenReader\"));\n\nvar _isInteractiveElement = _interopRequireDefault(require(\"../util/isInteractiveElement\"));\n\nvar _isPresentationRole = _interopRequireDefault(require(\"../util/isPresentationRole\"));\n\n/**\n * @fileoverview Enforce a clickable non-interactive element has at least 1 keyboard event listener.\n * @author Ethan Cohen\n */\n// ----------------------------------------------------------------------------\n// Rule Definition\n// ----------------------------------------------------------------------------\nvar errorMessage = 'Visible, non-interactive elements with click handlers must have at least one keyboard listener.';\nvar schema = (0, _schemas.generateObjSchema)();\nvar domElements = (0, _toConsumableArray2[\"default\"])(_ariaQuery.dom.keys());\nvar _default = {\n  meta: {\n    docs: {\n      url: 'https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/tree/HEAD/docs/rules/click-events-have-key-events.md',\n      description: 'Enforce a clickable non-interactive element has at least one keyboard event listener.'\n    },\n    schema: [schema]\n  },\n  create: function create(context) {\n    var elementType = (0, _getElementType[\"default\"])(context);\n    return {\n      JSXOpeningElement: function JSXOpeningElement(node) {\n        var props = node.attributes;\n\n        if ((0, _jsxAstUtils.getProp)(props, 'onclick') === undefined) {\n          return;\n        }\n\n        var type = elementType(node);\n        var requiredProps = ['onkeydown', 'onkeyup', 'onkeypress'];\n\n        if (!(0, _arrayIncludes[\"default\"])(domElements, type)) {\n          // Do not test higher level JSX components, as we do not know what\n          // low-level DOM element this maps to.\n          return;\n        }\n\n        if ((0, _isHiddenFromScreenReader[\"default\"])(type, props) || (0, _isPresentationRole[\"default\"])(type, props)) {\n          return;\n        }\n\n        if ((0, _isInteractiveElement[\"default\"])(type, props)) {\n          return;\n        }\n\n        if ((0, _jsxAstUtils.hasAnyProp)(props, requiredProps)) {\n          return;\n        } // Visible, non-interactive elements with click handlers require one keyboard event listener.\n\n\n        context.report({\n          node,\n          message: errorMessage\n        });\n      }\n    };\n  }\n};\nexports[\"default\"] = _default;\nmodule.exports = exports.default;"],"mappings":"AAAA;;AAEA,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAAD,CAApC;;AAEAC,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAC3CC,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAAC,SAAD,CAAP,GAAqB,KAAK,CAA1B;;AAEA,IAAIE,mBAAmB,GAAGN,sBAAsB,CAACC,OAAO,CAAC,0CAAD,CAAR,CAAhD;;AAEA,IAAIM,UAAU,GAAGN,OAAO,CAAC,YAAD,CAAxB;;AAEA,IAAIO,YAAY,GAAGP,OAAO,CAAC,eAAD,CAA1B;;AAEA,IAAIQ,cAAc,GAAGT,sBAAsB,CAACC,OAAO,CAAC,gBAAD,CAAR,CAA3C;;AAEA,IAAIS,QAAQ,GAAGT,OAAO,CAAC,iBAAD,CAAtB;;AAEA,IAAIU,eAAe,GAAGX,sBAAsB,CAACC,OAAO,CAAC,wBAAD,CAAR,CAA5C;;AAEA,IAAIW,yBAAyB,GAAGZ,sBAAsB,CAACC,OAAO,CAAC,kCAAD,CAAR,CAAtD;;AAEA,IAAIY,qBAAqB,GAAGb,sBAAsB,CAACC,OAAO,CAAC,8BAAD,CAAR,CAAlD;;AAEA,IAAIa,mBAAmB,GAAGd,sBAAsB,CAACC,OAAO,CAAC,4BAAD,CAAR,CAAhD;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIc,YAAY,GAAG,iGAAnB;AACA,IAAIC,MAAM,GAAG,CAAC,GAAGN,QAAQ,CAACO,iBAAb,GAAb;AACA,IAAIC,WAAW,GAAG,CAAC,GAAGZ,mBAAmB,CAAC,SAAD,CAAvB,EAAoCC,UAAU,CAACY,GAAX,CAAeC,IAAf,EAApC,CAAlB;AACA,IAAIC,QAAQ,GAAG;EACbC,IAAI,EAAE;IACJC,IAAI,EAAE;MACJC,GAAG,EAAE,2GADD;MAEJC,WAAW,EAAE;IAFT,CADF;IAKJT,MAAM,EAAE,CAACA,MAAD;EALJ,CADO;EAQbU,MAAM,EAAE,SAASA,MAAT,CAAgBC,OAAhB,EAAyB;IAC/B,IAAIC,WAAW,GAAG,CAAC,GAAGjB,eAAe,CAAC,SAAD,CAAnB,EAAgCgB,OAAhC,CAAlB;IACA,OAAO;MACLE,iBAAiB,EAAE,SAASA,iBAAT,CAA2BC,IAA3B,EAAiC;QAClD,IAAIC,KAAK,GAAGD,IAAI,CAACE,UAAjB;;QAEA,IAAI,CAAC,GAAGxB,YAAY,CAACyB,OAAjB,EAA0BF,KAA1B,EAAiC,SAAjC,MAAgDG,SAApD,EAA+D;UAC7D;QACD;;QAED,IAAIC,IAAI,GAAGP,WAAW,CAACE,IAAD,CAAtB;QACA,IAAIM,aAAa,GAAG,CAAC,WAAD,EAAc,SAAd,EAAyB,YAAzB,CAApB;;QAEA,IAAI,CAAC,CAAC,GAAG3B,cAAc,CAAC,SAAD,CAAlB,EAA+BS,WAA/B,EAA4CiB,IAA5C,CAAL,EAAwD;UACtD;UACA;UACA;QACD;;QAED,IAAI,CAAC,GAAGvB,yBAAyB,CAAC,SAAD,CAA7B,EAA0CuB,IAA1C,EAAgDJ,KAAhD,KAA0D,CAAC,GAAGjB,mBAAmB,CAAC,SAAD,CAAvB,EAAoCqB,IAApC,EAA0CJ,KAA1C,CAA9D,EAAgH;UAC9G;QACD;;QAED,IAAI,CAAC,GAAGlB,qBAAqB,CAAC,SAAD,CAAzB,EAAsCsB,IAAtC,EAA4CJ,KAA5C,CAAJ,EAAwD;UACtD;QACD;;QAED,IAAI,CAAC,GAAGvB,YAAY,CAAC6B,UAAjB,EAA6BN,KAA7B,EAAoCK,aAApC,CAAJ,EAAwD;UACtD;QACD,CA1BiD,CA0BhD;;;QAGFT,OAAO,CAACW,MAAR,CAAe;UACbR,IADa;UAEbS,OAAO,EAAExB;QAFI,CAAf;MAID;IAlCI,CAAP;EAoCD;AA9CY,CAAf;AAgDAX,OAAO,CAAC,SAAD,CAAP,GAAqBiB,QAArB;AACAmB,MAAM,CAACpC,OAAP,GAAiBA,OAAO,CAACqC,OAAzB"},"metadata":{},"sourceType":"script"}