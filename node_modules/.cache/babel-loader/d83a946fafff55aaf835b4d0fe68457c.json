{"ast":null,"code":"'use strict';\n\nvar callBound = require('call-bind/callBound');\n\nvar $byteLength = callBound('SharedArrayBuffer.prototype.byteLength', true);\nmodule.exports = $byteLength ? function isSharedArrayBuffer(obj) {\n  if (!obj || typeof obj !== 'object') {\n    return false;\n  }\n\n  try {\n    $byteLength(obj);\n    return true;\n  } catch (e) {\n    return false;\n  }\n} : function isSharedArrayBuffer(obj) {\n  // eslint-disable-line no-unused-vars\n  return false;\n};","map":{"version":3,"names":["callBound","require","$byteLength","module","exports","isSharedArrayBuffer","obj","e"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/is-shared-array-buffer/index.js"],"sourcesContent":["'use strict';\n\nvar callBound = require('call-bind/callBound');\n\nvar $byteLength = callBound('SharedArrayBuffer.prototype.byteLength', true);\n\nmodule.exports = $byteLength\n\t? function isSharedArrayBuffer(obj) {\n\t\tif (!obj || typeof obj !== 'object') {\n\t\t\treturn false;\n\t\t}\n\t\ttry {\n\t\t\t$byteLength(obj);\n\t\t\treturn true;\n\t\t} catch (e) {\n\t\t\treturn false;\n\t\t}\n\t}\n\t: function isSharedArrayBuffer(obj) { // eslint-disable-line no-unused-vars\n\t\treturn false;\n\t};\n"],"mappings":"AAAA;;AAEA,IAAIA,SAAS,GAAGC,OAAO,CAAC,qBAAD,CAAvB;;AAEA,IAAIC,WAAW,GAAGF,SAAS,CAAC,wCAAD,EAA2C,IAA3C,CAA3B;AAEAG,MAAM,CAACC,OAAP,GAAiBF,WAAW,GACzB,SAASG,mBAAT,CAA6BC,GAA7B,EAAkC;EACnC,IAAI,CAACA,GAAD,IAAQ,OAAOA,GAAP,KAAe,QAA3B,EAAqC;IACpC,OAAO,KAAP;EACA;;EACD,IAAI;IACHJ,WAAW,CAACI,GAAD,CAAX;IACA,OAAO,IAAP;EACA,CAHD,CAGE,OAAOC,CAAP,EAAU;IACX,OAAO,KAAP;EACA;AACD,CAX0B,GAYzB,SAASF,mBAAT,CAA6BC,GAA7B,EAAkC;EAAE;EACrC,OAAO,KAAP;AACA,CAdF"},"metadata":{},"sourceType":"script"}