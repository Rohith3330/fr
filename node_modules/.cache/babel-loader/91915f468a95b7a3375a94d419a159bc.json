{"ast":null,"code":"/**\n * @fileoverview Prevent usage of findDOMNode\n * @author Yannick Croissant\n */\n'use strict';\n\nconst docsUrl = require('../util/docsUrl');\n\nconst report = require('../util/report'); // ------------------------------------------------------------------------------\n// Rule Definition\n// ------------------------------------------------------------------------------\n\n\nconst messages = {\n  noFindDOMNode: 'Do not use findDOMNode. It doesn’t work with function components and is deprecated in StrictMode. See https://reactjs.org/docs/react-dom.html#finddomnode'\n};\nmodule.exports = {\n  meta: {\n    docs: {\n      description: 'Disallow usage of findDOMNode',\n      category: 'Best Practices',\n      recommended: true,\n      url: docsUrl('no-find-dom-node')\n    },\n    messages,\n    schema: []\n  },\n\n  create(context) {\n    return {\n      CallExpression(node) {\n        const callee = node.callee;\n        const isfindDOMNode = callee.name === 'findDOMNode' || callee.property && callee.property.name === 'findDOMNode';\n\n        if (!isfindDOMNode) {\n          return;\n        }\n\n        report(context, messages.noFindDOMNode, 'noFindDOMNode', {\n          node: callee\n        });\n      }\n\n    };\n  }\n\n};","map":{"version":3,"names":["docsUrl","require","report","messages","noFindDOMNode","module","exports","meta","docs","description","category","recommended","url","schema","create","context","CallExpression","node","callee","isfindDOMNode","name","property"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/eslint-plugin-react/lib/rules/no-find-dom-node.js"],"sourcesContent":["/**\n * @fileoverview Prevent usage of findDOMNode\n * @author Yannick Croissant\n */\n\n'use strict';\n\nconst docsUrl = require('../util/docsUrl');\nconst report = require('../util/report');\n\n// ------------------------------------------------------------------------------\n// Rule Definition\n// ------------------------------------------------------------------------------\n\nconst messages = {\n  noFindDOMNode: 'Do not use findDOMNode. It doesn’t work with function components and is deprecated in StrictMode. See https://reactjs.org/docs/react-dom.html#finddomnode',\n};\n\nmodule.exports = {\n  meta: {\n    docs: {\n      description: 'Disallow usage of findDOMNode',\n      category: 'Best Practices',\n      recommended: true,\n      url: docsUrl('no-find-dom-node'),\n    },\n\n    messages,\n\n    schema: [],\n  },\n\n  create(context) {\n    return {\n      CallExpression(node) {\n        const callee = node.callee;\n\n        const isfindDOMNode = (callee.name === 'findDOMNode')\n          || (callee.property && callee.property.name === 'findDOMNode');\n        if (!isfindDOMNode) {\n          return;\n        }\n\n        report(context, messages.noFindDOMNode, 'noFindDOMNode', {\n          node: callee,\n        });\n      },\n    };\n  },\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;;AAEA,MAAMA,OAAO,GAAGC,OAAO,CAAC,iBAAD,CAAvB;;AACA,MAAMC,MAAM,GAAGD,OAAO,CAAC,gBAAD,CAAtB,C,CAEA;AACA;AACA;;;AAEA,MAAME,QAAQ,GAAG;EACfC,aAAa,EAAE;AADA,CAAjB;AAIAC,MAAM,CAACC,OAAP,GAAiB;EACfC,IAAI,EAAE;IACJC,IAAI,EAAE;MACJC,WAAW,EAAE,+BADT;MAEJC,QAAQ,EAAE,gBAFN;MAGJC,WAAW,EAAE,IAHT;MAIJC,GAAG,EAAEZ,OAAO,CAAC,kBAAD;IAJR,CADF;IAQJG,QARI;IAUJU,MAAM,EAAE;EAVJ,CADS;;EAcfC,MAAM,CAACC,OAAD,EAAU;IACd,OAAO;MACLC,cAAc,CAACC,IAAD,EAAO;QACnB,MAAMC,MAAM,GAAGD,IAAI,CAACC,MAApB;QAEA,MAAMC,aAAa,GAAID,MAAM,CAACE,IAAP,KAAgB,aAAjB,IAChBF,MAAM,CAACG,QAAP,IAAmBH,MAAM,CAACG,QAAP,CAAgBD,IAAhB,KAAyB,aADlD;;QAEA,IAAI,CAACD,aAAL,EAAoB;UAClB;QACD;;QAEDjB,MAAM,CAACa,OAAD,EAAUZ,QAAQ,CAACC,aAAnB,EAAkC,eAAlC,EAAmD;UACvDa,IAAI,EAAEC;QADiD,CAAnD,CAAN;MAGD;;IAbI,CAAP;EAeD;;AA9Bc,CAAjB"},"metadata":{},"sourceType":"script"}