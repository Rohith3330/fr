{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.applyMissingDependenciesDefaults = applyMissingDependenciesDefaults;\nexports.validateIncludeExclude = validateIncludeExclude;\n\nvar _utils = require(\"./utils\");\n\nfunction patternToRegExp(pattern) {\n  if (pattern instanceof RegExp) return pattern;\n\n  try {\n    return new RegExp(`^${pattern}$`);\n  } catch (_unused) {\n    return null;\n  }\n}\n\nfunction buildUnusedError(label, unused) {\n  if (!unused.length) return \"\";\n  return `  - The following \"${label}\" patterns didn't match any polyfill:\\n` + unused.map(original => `    ${String(original)}\\n`).join(\"\");\n}\n\nfunction buldDuplicatesError(duplicates) {\n  if (!duplicates.size) return \"\";\n  return `  - The following polyfills were matched both by \"include\" and \"exclude\" patterns:\\n` + Array.from(duplicates, name => `    ${name}\\n`).join(\"\");\n}\n\nfunction validateIncludeExclude(provider, polyfills, includePatterns, excludePatterns) {\n  let current;\n\n  const filter = pattern => {\n    const regexp = patternToRegExp(pattern);\n    if (!regexp) return false;\n    let matched = false;\n\n    for (const polyfill of polyfills) {\n      if (regexp.test(polyfill)) {\n        matched = true;\n        current.add(polyfill);\n      }\n    }\n\n    return !matched;\n  }; // prettier-ignore\n\n\n  const include = current = new Set();\n  const unusedInclude = Array.from(includePatterns).filter(filter); // prettier-ignore\n\n  const exclude = current = new Set();\n  const unusedExclude = Array.from(excludePatterns).filter(filter);\n  const duplicates = (0, _utils.intersection)(include, exclude);\n\n  if (duplicates.size > 0 || unusedInclude.length > 0 || unusedExclude.length > 0) {\n    throw new Error(`Error while validating the \"${provider}\" provider options:\\n` + buildUnusedError(\"include\", unusedInclude) + buildUnusedError(\"exclude\", unusedExclude) + buldDuplicatesError(duplicates));\n  }\n\n  return {\n    include,\n    exclude\n  };\n}\n\nfunction applyMissingDependenciesDefaults(options, babelApi) {\n  const {\n    missingDependencies = {}\n  } = options;\n  if (missingDependencies === false) return false;\n  const caller = babelApi.caller(caller => caller == null ? void 0 : caller.name);\n  const {\n    log = \"deferred\",\n    inject = caller === \"rollup-plugin-babel\" ? \"throw\" : \"import\",\n    all = false\n  } = missingDependencies;\n  return {\n    log,\n    inject,\n    all\n  };\n}","map":{"version":3,"names":["exports","__esModule","applyMissingDependenciesDefaults","validateIncludeExclude","_utils","require","patternToRegExp","pattern","RegExp","_unused","buildUnusedError","label","unused","length","map","original","String","join","buldDuplicatesError","duplicates","size","Array","from","name","provider","polyfills","includePatterns","excludePatterns","current","filter","regexp","matched","polyfill","test","add","include","Set","unusedInclude","exclude","unusedExclude","intersection","Error","options","babelApi","missingDependencies","caller","log","inject","all"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/@babel/helper-define-polyfill-provider/lib/normalize-options.js"],"sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.applyMissingDependenciesDefaults = applyMissingDependenciesDefaults;\nexports.validateIncludeExclude = validateIncludeExclude;\n\nvar _utils = require(\"./utils\");\n\nfunction patternToRegExp(pattern) {\n  if (pattern instanceof RegExp) return pattern;\n\n  try {\n    return new RegExp(`^${pattern}$`);\n  } catch (_unused) {\n    return null;\n  }\n}\n\nfunction buildUnusedError(label, unused) {\n  if (!unused.length) return \"\";\n  return `  - The following \"${label}\" patterns didn't match any polyfill:\\n` + unused.map(original => `    ${String(original)}\\n`).join(\"\");\n}\n\nfunction buldDuplicatesError(duplicates) {\n  if (!duplicates.size) return \"\";\n  return `  - The following polyfills were matched both by \"include\" and \"exclude\" patterns:\\n` + Array.from(duplicates, name => `    ${name}\\n`).join(\"\");\n}\n\nfunction validateIncludeExclude(provider, polyfills, includePatterns, excludePatterns) {\n  let current;\n\n  const filter = pattern => {\n    const regexp = patternToRegExp(pattern);\n    if (!regexp) return false;\n    let matched = false;\n\n    for (const polyfill of polyfills) {\n      if (regexp.test(polyfill)) {\n        matched = true;\n        current.add(polyfill);\n      }\n    }\n\n    return !matched;\n  }; // prettier-ignore\n\n\n  const include = current = new Set();\n  const unusedInclude = Array.from(includePatterns).filter(filter); // prettier-ignore\n\n  const exclude = current = new Set();\n  const unusedExclude = Array.from(excludePatterns).filter(filter);\n  const duplicates = (0, _utils.intersection)(include, exclude);\n\n  if (duplicates.size > 0 || unusedInclude.length > 0 || unusedExclude.length > 0) {\n    throw new Error(`Error while validating the \"${provider}\" provider options:\\n` + buildUnusedError(\"include\", unusedInclude) + buildUnusedError(\"exclude\", unusedExclude) + buldDuplicatesError(duplicates));\n  }\n\n  return {\n    include,\n    exclude\n  };\n}\n\nfunction applyMissingDependenciesDefaults(options, babelApi) {\n  const {\n    missingDependencies = {}\n  } = options;\n  if (missingDependencies === false) return false;\n  const caller = babelApi.caller(caller => caller == null ? void 0 : caller.name);\n  const {\n    log = \"deferred\",\n    inject = caller === \"rollup-plugin-babel\" ? \"throw\" : \"import\",\n    all = false\n  } = missingDependencies;\n  return {\n    log,\n    inject,\n    all\n  };\n}"],"mappings":"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"},"metadata":{},"sourceType":"script"}