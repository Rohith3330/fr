{"ast":null,"code":"var hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar noop = function () {};\n\nfunction ensureFunction(value) {\n  return typeof value === 'function' ? value : noop;\n}\n\nfunction invokeForType(fn, type) {\n  return function (node, item, list) {\n    if (node.type === type) {\n      fn.call(this, node, item, list);\n    }\n  };\n}\n\nfunction getWalkersFromStructure(name, nodeType) {\n  var structure = nodeType.structure;\n  var walkers = [];\n\n  for (var key in structure) {\n    if (hasOwnProperty.call(structure, key) === false) {\n      continue;\n    }\n\n    var fieldTypes = structure[key];\n    var walker = {\n      name: key,\n      type: false,\n      nullable: false\n    };\n\n    if (!Array.isArray(structure[key])) {\n      fieldTypes = [structure[key]];\n    }\n\n    for (var i = 0; i < fieldTypes.length; i++) {\n      var fieldType = fieldTypes[i];\n\n      if (fieldType === null) {\n        walker.nullable = true;\n      } else if (typeof fieldType === 'string') {\n        walker.type = 'node';\n      } else if (Array.isArray(fieldType)) {\n        walker.type = 'list';\n      }\n    }\n\n    if (walker.type) {\n      walkers.push(walker);\n    }\n  }\n\n  if (walkers.length) {\n    return {\n      context: nodeType.walkContext,\n      fields: walkers\n    };\n  }\n\n  return null;\n}\n\nfunction getTypesFromConfig(config) {\n  var types = {};\n\n  for (var name in config.node) {\n    if (hasOwnProperty.call(config.node, name)) {\n      var nodeType = config.node[name];\n\n      if (!nodeType.structure) {\n        throw new Error('Missed `structure` field in `' + name + '` node type definition');\n      }\n\n      types[name] = getWalkersFromStructure(name, nodeType);\n    }\n  }\n\n  return types;\n}\n\nfunction createTypeIterator(config, reverse) {\n  var fields = config.fields.slice();\n  var contextName = config.context;\n  var useContext = typeof contextName === 'string';\n\n  if (reverse) {\n    fields.reverse();\n  }\n\n  return function (node, context, walk, walkReducer) {\n    var prevContextValue;\n\n    if (useContext) {\n      prevContextValue = context[contextName];\n      context[contextName] = node;\n    }\n\n    for (var i = 0; i < fields.length; i++) {\n      var field = fields[i];\n      var ref = node[field.name];\n\n      if (!field.nullable || ref) {\n        if (field.type === 'list') {\n          var breakWalk = reverse ? ref.reduceRight(walkReducer, false) : ref.reduce(walkReducer, false);\n\n          if (breakWalk) {\n            return true;\n          }\n        } else if (walk(ref)) {\n          return true;\n        }\n      }\n    }\n\n    if (useContext) {\n      context[contextName] = prevContextValue;\n    }\n  };\n}\n\nfunction createFastTraveralMap(iterators) {\n  return {\n    Atrule: {\n      StyleSheet: iterators.StyleSheet,\n      Atrule: iterators.Atrule,\n      Rule: iterators.Rule,\n      Block: iterators.Block\n    },\n    Rule: {\n      StyleSheet: iterators.StyleSheet,\n      Atrule: iterators.Atrule,\n      Rule: iterators.Rule,\n      Block: iterators.Block\n    },\n    Declaration: {\n      StyleSheet: iterators.StyleSheet,\n      Atrule: iterators.Atrule,\n      Rule: iterators.Rule,\n      Block: iterators.Block,\n      DeclarationList: iterators.DeclarationList\n    }\n  };\n}\n\nmodule.exports = function createWalker(config) {\n  var types = getTypesFromConfig(config);\n  var iteratorsNatural = {};\n  var iteratorsReverse = {};\n  var breakWalk = Symbol('break-walk');\n  var skipNode = Symbol('skip-node');\n\n  for (var name in types) {\n    if (hasOwnProperty.call(types, name) && types[name] !== null) {\n      iteratorsNatural[name] = createTypeIterator(types[name], false);\n      iteratorsReverse[name] = createTypeIterator(types[name], true);\n    }\n  }\n\n  var fastTraversalIteratorsNatural = createFastTraveralMap(iteratorsNatural);\n  var fastTraversalIteratorsReverse = createFastTraveralMap(iteratorsReverse);\n\n  var walk = function (root, options) {\n    function walkNode(node, item, list) {\n      var enterRet = enter.call(context, node, item, list);\n\n      if (enterRet === breakWalk) {\n        debugger;\n        return true;\n      }\n\n      if (enterRet === skipNode) {\n        return false;\n      }\n\n      if (iterators.hasOwnProperty(node.type)) {\n        if (iterators[node.type](node, context, walkNode, walkReducer)) {\n          return true;\n        }\n      }\n\n      if (leave.call(context, node, item, list) === breakWalk) {\n        return true;\n      }\n\n      return false;\n    }\n\n    var walkReducer = (ret, data, item, list) => ret || walkNode(data, item, list);\n\n    var enter = noop;\n    var leave = noop;\n    var iterators = iteratorsNatural;\n    var context = {\n      break: breakWalk,\n      skip: skipNode,\n      root: root,\n      stylesheet: null,\n      atrule: null,\n      atrulePrelude: null,\n      rule: null,\n      selector: null,\n      block: null,\n      declaration: null,\n      function: null\n    };\n\n    if (typeof options === 'function') {\n      enter = options;\n    } else if (options) {\n      enter = ensureFunction(options.enter);\n      leave = ensureFunction(options.leave);\n\n      if (options.reverse) {\n        iterators = iteratorsReverse;\n      }\n\n      if (options.visit) {\n        if (fastTraversalIteratorsNatural.hasOwnProperty(options.visit)) {\n          iterators = options.reverse ? fastTraversalIteratorsReverse[options.visit] : fastTraversalIteratorsNatural[options.visit];\n        } else if (!types.hasOwnProperty(options.visit)) {\n          throw new Error('Bad value `' + options.visit + '` for `visit` option (should be: ' + Object.keys(types).join(', ') + ')');\n        }\n\n        enter = invokeForType(enter, options.visit);\n        leave = invokeForType(leave, options.visit);\n      }\n    }\n\n    if (enter === noop && leave === noop) {\n      throw new Error('Neither `enter` nor `leave` walker handler is set or both aren\\'t a function');\n    }\n\n    walkNode(root);\n  };\n\n  walk.break = breakWalk;\n  walk.skip = skipNode;\n\n  walk.find = function (ast, fn) {\n    var found = null;\n    walk(ast, function (node, item, list) {\n      if (fn.call(this, node, item, list)) {\n        found = node;\n        return breakWalk;\n      }\n    });\n    return found;\n  };\n\n  walk.findLast = function (ast, fn) {\n    var found = null;\n    walk(ast, {\n      reverse: true,\n      enter: function (node, item, list) {\n        if (fn.call(this, node, item, list)) {\n          found = node;\n          return breakWalk;\n        }\n      }\n    });\n    return found;\n  };\n\n  walk.findAll = function (ast, fn) {\n    var found = [];\n    walk(ast, function (node, item, list) {\n      if (fn.call(this, node, item, list)) {\n        found.push(node);\n      }\n    });\n    return found;\n  };\n\n  return walk;\n};","map":{"version":3,"names":["hasOwnProperty","Object","prototype","noop","ensureFunction","value","invokeForType","fn","type","node","item","list","call","getWalkersFromStructure","name","nodeType","structure","walkers","key","fieldTypes","walker","nullable","Array","isArray","i","length","fieldType","push","context","walkContext","fields","getTypesFromConfig","config","types","Error","createTypeIterator","reverse","slice","contextName","useContext","walk","walkReducer","prevContextValue","field","ref","breakWalk","reduceRight","reduce","createFastTraveralMap","iterators","Atrule","StyleSheet","Rule","Block","Declaration","DeclarationList","module","exports","createWalker","iteratorsNatural","iteratorsReverse","Symbol","skipNode","fastTraversalIteratorsNatural","fastTraversalIteratorsReverse","root","options","walkNode","enterRet","enter","leave","ret","data","break","skip","stylesheet","atrule","atrulePrelude","rule","selector","block","declaration","function","visit","keys","join","find","ast","found","findLast","findAll"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/postcss-svgo/node_modules/css-tree/lib/walker/create.js"],"sourcesContent":["var hasOwnProperty = Object.prototype.hasOwnProperty;\nvar noop = function() {};\n\nfunction ensureFunction(value) {\n    return typeof value === 'function' ? value : noop;\n}\n\nfunction invokeForType(fn, type) {\n    return function(node, item, list) {\n        if (node.type === type) {\n            fn.call(this, node, item, list);\n        }\n    };\n}\n\nfunction getWalkersFromStructure(name, nodeType) {\n    var structure = nodeType.structure;\n    var walkers = [];\n\n    for (var key in structure) {\n        if (hasOwnProperty.call(structure, key) === false) {\n            continue;\n        }\n\n        var fieldTypes = structure[key];\n        var walker = {\n            name: key,\n            type: false,\n            nullable: false\n        };\n\n        if (!Array.isArray(structure[key])) {\n            fieldTypes = [structure[key]];\n        }\n\n        for (var i = 0; i < fieldTypes.length; i++) {\n            var fieldType = fieldTypes[i];\n            if (fieldType === null) {\n                walker.nullable = true;\n            } else if (typeof fieldType === 'string') {\n                walker.type = 'node';\n            } else if (Array.isArray(fieldType)) {\n                walker.type = 'list';\n            }\n        }\n\n        if (walker.type) {\n            walkers.push(walker);\n        }\n    }\n\n    if (walkers.length) {\n        return {\n            context: nodeType.walkContext,\n            fields: walkers\n        };\n    }\n\n    return null;\n}\n\nfunction getTypesFromConfig(config) {\n    var types = {};\n\n    for (var name in config.node) {\n        if (hasOwnProperty.call(config.node, name)) {\n            var nodeType = config.node[name];\n\n            if (!nodeType.structure) {\n                throw new Error('Missed `structure` field in `' + name + '` node type definition');\n            }\n\n            types[name] = getWalkersFromStructure(name, nodeType);\n        }\n    }\n\n    return types;\n}\n\nfunction createTypeIterator(config, reverse) {\n    var fields = config.fields.slice();\n    var contextName = config.context;\n    var useContext = typeof contextName === 'string';\n\n    if (reverse) {\n        fields.reverse();\n    }\n\n    return function(node, context, walk, walkReducer) {\n        var prevContextValue;\n\n        if (useContext) {\n            prevContextValue = context[contextName];\n            context[contextName] = node;\n        }\n\n        for (var i = 0; i < fields.length; i++) {\n            var field = fields[i];\n            var ref = node[field.name];\n\n            if (!field.nullable || ref) {\n                if (field.type === 'list') {\n                    var breakWalk = reverse\n                        ? ref.reduceRight(walkReducer, false)\n                        : ref.reduce(walkReducer, false);\n\n                    if (breakWalk) {\n                        return true;\n                    }\n                } else if (walk(ref)) {\n                    return true;\n                }\n            }\n        }\n\n        if (useContext) {\n            context[contextName] = prevContextValue;\n        }\n    };\n}\n\nfunction createFastTraveralMap(iterators) {\n    return {\n        Atrule: {\n            StyleSheet: iterators.StyleSheet,\n            Atrule: iterators.Atrule,\n            Rule: iterators.Rule,\n            Block: iterators.Block\n        },\n        Rule: {\n            StyleSheet: iterators.StyleSheet,\n            Atrule: iterators.Atrule,\n            Rule: iterators.Rule,\n            Block: iterators.Block\n        },\n        Declaration: {\n            StyleSheet: iterators.StyleSheet,\n            Atrule: iterators.Atrule,\n            Rule: iterators.Rule,\n            Block: iterators.Block,\n            DeclarationList: iterators.DeclarationList\n        }\n    };\n}\n\nmodule.exports = function createWalker(config) {\n    var types = getTypesFromConfig(config);\n    var iteratorsNatural = {};\n    var iteratorsReverse = {};\n    var breakWalk = Symbol('break-walk');\n    var skipNode = Symbol('skip-node');\n\n    for (var name in types) {\n        if (hasOwnProperty.call(types, name) && types[name] !== null) {\n            iteratorsNatural[name] = createTypeIterator(types[name], false);\n            iteratorsReverse[name] = createTypeIterator(types[name], true);\n        }\n    }\n\n    var fastTraversalIteratorsNatural = createFastTraveralMap(iteratorsNatural);\n    var fastTraversalIteratorsReverse = createFastTraveralMap(iteratorsReverse);\n\n    var walk = function(root, options) {\n        function walkNode(node, item, list) {\n            var enterRet = enter.call(context, node, item, list);\n\n            if (enterRet === breakWalk) {\n                debugger;\n                return true;\n            }\n\n            if (enterRet === skipNode) {\n                return false;\n            }\n\n            if (iterators.hasOwnProperty(node.type)) {\n                if (iterators[node.type](node, context, walkNode, walkReducer)) {\n                    return true;\n                }\n            }\n\n            if (leave.call(context, node, item, list) === breakWalk) {\n                return true;\n            }\n\n            return false;\n        }\n\n        var walkReducer = (ret, data, item, list) => ret || walkNode(data, item, list);\n        var enter = noop;\n        var leave = noop;\n        var iterators = iteratorsNatural;\n        var context = {\n            break: breakWalk,\n            skip: skipNode,\n\n            root: root,\n            stylesheet: null,\n            atrule: null,\n            atrulePrelude: null,\n            rule: null,\n            selector: null,\n            block: null,\n            declaration: null,\n            function: null\n        };\n\n        if (typeof options === 'function') {\n            enter = options;\n        } else if (options) {\n            enter = ensureFunction(options.enter);\n            leave = ensureFunction(options.leave);\n\n            if (options.reverse) {\n                iterators = iteratorsReverse;\n            }\n\n            if (options.visit) {\n                if (fastTraversalIteratorsNatural.hasOwnProperty(options.visit)) {\n                    iterators = options.reverse\n                        ? fastTraversalIteratorsReverse[options.visit]\n                        : fastTraversalIteratorsNatural[options.visit];\n                } else if (!types.hasOwnProperty(options.visit)) {\n                    throw new Error('Bad value `' + options.visit + '` for `visit` option (should be: ' + Object.keys(types).join(', ') + ')');\n                }\n\n                enter = invokeForType(enter, options.visit);\n                leave = invokeForType(leave, options.visit);\n            }\n        }\n\n        if (enter === noop && leave === noop) {\n            throw new Error('Neither `enter` nor `leave` walker handler is set or both aren\\'t a function');\n        }\n\n        walkNode(root);\n    };\n\n    walk.break = breakWalk;\n    walk.skip = skipNode;\n\n    walk.find = function(ast, fn) {\n        var found = null;\n\n        walk(ast, function(node, item, list) {\n            if (fn.call(this, node, item, list)) {\n                found = node;\n                return breakWalk;\n            }\n        });\n\n        return found;\n    };\n\n    walk.findLast = function(ast, fn) {\n        var found = null;\n\n        walk(ast, {\n            reverse: true,\n            enter: function(node, item, list) {\n                if (fn.call(this, node, item, list)) {\n                    found = node;\n                    return breakWalk;\n                }\n            }\n        });\n\n        return found;\n    };\n\n    walk.findAll = function(ast, fn) {\n        var found = [];\n\n        walk(ast, function(node, item, list) {\n            if (fn.call(this, node, item, list)) {\n                found.push(node);\n            }\n        });\n\n        return found;\n    };\n\n    return walk;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}