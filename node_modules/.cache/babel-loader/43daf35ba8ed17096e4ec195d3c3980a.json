{"ast":null,"code":"\"use strict\";\n\nconst os = require(\"os\");\n\nconst {\n  SourceMapConsumer\n} = require(\"source-map\");\n\nconst {\n  validate\n} = require(\"schema-utils\");\n\nconst serialize = require(\"serialize-javascript\");\n\nconst {\n  Worker\n} = require(\"jest-worker\");\n\nconst {\n  throttleAll,\n  cssnanoMinify,\n  cssoMinify,\n  cleanCssMinify,\n  esbuildMinify,\n  parcelCssMinify\n} = require(\"./utils\");\n\nconst schema = require(\"./options.json\");\n\nconst {\n  minify\n} = require(\"./minify\");\n/** @typedef {import(\"schema-utils/declarations/validate\").Schema} Schema */\n\n/** @typedef {import(\"webpack\").Compiler} Compiler */\n\n/** @typedef {import(\"webpack\").Compilation} Compilation */\n\n/** @typedef {import(\"webpack\").WebpackError} WebpackError */\n\n/** @typedef {import(\"jest-worker\").Worker} JestWorker */\n\n/** @typedef {import(\"source-map\").RawSourceMap} RawSourceMap */\n\n/** @typedef {import(\"webpack\").Asset} Asset */\n\n/** @typedef {import(\"postcss\").ProcessOptions} ProcessOptions */\n\n/** @typedef {import(\"postcss\").Syntax} Syntax */\n\n/** @typedef {import(\"postcss\").Parser} Parser */\n\n/** @typedef {import(\"postcss\").Stringifier} Stringifier */\n\n/**\n * @typedef {Object} CssNanoOptions\n * @property {string} [configFile]\n * @property {[string, object] | string | undefined} [preset]\n */\n\n/** @typedef {Error & { plugin?: string, text?: string, source?: string } | string} Warning */\n\n/**\n * @typedef {Object} WarningObject\n * @property {string} message\n * @property {string} [plugin]\n * @property {string} [text]\n * @property {number} [line]\n * @property {number} [column]\n */\n\n/**\n * @typedef {Object} ErrorObject\n * @property {string} message\n * @property {number} [line]\n * @property {number} [column]\n * @property {string} [stack]\n */\n\n/**\n * @typedef {Object} MinimizedResult\n * @property {string} code\n * @property {RawSourceMap} [map]\n * @property {Array<Error | ErrorObject| string>} [errors]\n * @property {Array<Warning | WarningObject | string>} [warnings]\n */\n\n/**\n * @typedef {{ [file: string]: string }} Input\n */\n\n/**\n * @typedef {{ [key: string]: any }} CustomOptions\n */\n\n/**\n * @template T\n * @typedef {T extends infer U ? U : CustomOptions} InferDefaultType\n */\n\n/**\n * @template T\n * @callback BasicMinimizerImplementation\n * @param {Input} input\n * @param {RawSourceMap | undefined} sourceMap\n * @param {InferDefaultType<T>} minifyOptions\n * @returns {Promise<MinimizedResult>}\n */\n\n/**\n * @template T\n * @typedef {T extends any[] ? { [P in keyof T]: BasicMinimizerImplementation<T[P]>; } : BasicMinimizerImplementation<T>} MinimizerImplementation\n */\n\n/**\n * @template T\n * @typedef {T extends any[] ? { [P in keyof T]?: InferDefaultType<T[P]> } : InferDefaultType<T>} MinimizerOptions\n */\n\n/**\n * @template T\n * @typedef {Object} InternalOptions\n * @property {string} name\n * @property {string} input\n * @property {RawSourceMap | undefined} inputSourceMap\n * @property {{ implementation: MinimizerImplementation<T>, options: MinimizerOptions<T> }} minimizer\n */\n\n/**\n * @typedef InternalResult\n * @property {Array<{ code: string, map: RawSourceMap | undefined }>} outputs\n * @property {Array<Warning | WarningObject | string>} warnings\n * @property {Array<Error | ErrorObject | string>} errors\n */\n\n/** @typedef {undefined | boolean | number} Parallel */\n\n/** @typedef {RegExp | string} Rule */\n\n/** @typedef {Rule[] | Rule} Rules */\n\n/** @typedef {(warning: Warning | WarningObject | string, file: string, source?: string) => boolean} WarningsFilter */\n\n/**\n * @typedef {Object} BasePluginOptions\n * @property {Rules} [test]\n * @property {Rules} [include]\n * @property {Rules} [exclude]\n * @property {WarningsFilter} [warningsFilter]\n * @property {Parallel} [parallel]\n */\n\n/**\n * @template T\n * @typedef {JestWorker & { transform: (options: string) => InternalResult, minify: (options: InternalOptions<T>) => InternalResult }} MinimizerWorker\n */\n\n/**\n * @typedef{ProcessOptions | { from?: string,  to?: string, parser?: string | Syntax | Parser, stringifier?: string | Syntax | Stringifier, syntax?: string | Syntax } } ProcessOptionsExtender\n */\n\n/**\n * @typedef {CssNanoOptions & { processorOptions?: ProcessOptionsExtender }} CssNanoOptionsExtended\n */\n\n/**\n * @template T\n * @typedef {T extends CssNanoOptionsExtended ? { minify?: MinimizerImplementation<T> | undefined, minimizerOptions?: MinimizerOptions<T> | undefined } : { minify: MinimizerImplementation<T>, minimizerOptions?: MinimizerOptions<T> | undefined }} DefinedDefaultMinimizerAndOptions\n */\n\n/**\n * @template T\n * @typedef {BasePluginOptions & { minimizer: { implementation: MinimizerImplementation<T>, options: MinimizerOptions<T> } }} InternalPluginOptions\n */\n\n\nconst warningRegex = /\\s.+:+([0-9]+):+([0-9]+)/;\n/**\n * @template [T=CssNanoOptionsExtended]\n */\n\nclass CssMinimizerPlugin {\n  /**\n   * @param {BasePluginOptions & DefinedDefaultMinimizerAndOptions<T>} [options]\n   */\n  constructor(options) {\n    validate(\n    /** @type {Schema} */\n    schema, options || {}, {\n      name: \"Css Minimizer Plugin\",\n      baseDataPath: \"options\"\n    });\n    const {\n      minify =\n      /** @type {BasicMinimizerImplementation<T>} */\n      cssnanoMinify,\n      minimizerOptions =\n      /** @type {MinimizerOptions<T>} */\n      {},\n      test = /\\.css(\\?.*)?$/i,\n      warningsFilter = () => true,\n      parallel = true,\n      include,\n      exclude\n    } = options || {};\n    /**\n     * @private\n     * @type {InternalPluginOptions<T>}\n     */\n\n    this.options = {\n      test,\n      warningsFilter,\n      parallel,\n      include,\n      exclude,\n      minimizer: {\n        implementation:\n        /** @type {MinimizerImplementation<T>} */\n        minify,\n        options: minimizerOptions\n      }\n    };\n  }\n  /**\n   * @private\n   * @param {any} input\n   * @returns {boolean}\n   */\n\n\n  static isSourceMap(input) {\n    // All required options for `new SourceMapConsumer(...options)`\n    // https://github.com/mozilla/source-map#new-sourcemapconsumerrawsourcemap\n    return Boolean(input && input.version && input.sources && Array.isArray(input.sources) && typeof input.mappings === \"string\");\n  }\n  /**\n   * @private\n   * @param {Warning | WarningObject | string} warning\n   * @param {string} file\n   * @param {WarningsFilter} [warningsFilter]\n   * @param {SourceMapConsumer} [sourceMap]\n   * @param {Compilation[\"requestShortener\"]} [requestShortener]\n   * @returns {Error & { hideStack?: boolean, file?: string } | undefined}\n   */\n\n\n  static buildWarning(warning, file, warningsFilter, sourceMap, requestShortener) {\n    let warningMessage = typeof warning === \"string\" ? warning : `${warning.plugin ? `[${warning.plugin}] ` : \"\"}${warning.text || warning.message}`;\n    let locationMessage = \"\";\n    let source;\n\n    if (sourceMap) {\n      let line;\n      let column;\n\n      if (typeof warning === \"string\") {\n        const match = warningRegex.exec(warning);\n\n        if (match) {\n          line = +match[1];\n          column = +match[2];\n        }\n      } else {\n        ({\n          line,\n          column\n        } =\n        /** @type {WarningObject} */\n        warning);\n      }\n\n      if (line && column) {\n        const original = sourceMap.originalPositionFor({\n          line,\n          column\n        });\n\n        if (original && original.source && original.source !== file && requestShortener) {\n          ({\n            source\n          } = original);\n          warningMessage = `${warningMessage.replace(warningRegex, \"\")}`;\n          locationMessage = `${requestShortener.shorten(original.source)}:${original.line}:${original.column}`;\n        }\n      }\n    }\n\n    if (warningsFilter && !warningsFilter(warning, file, source)) {\n      return;\n    }\n    /**\n     * @type {Error & { hideStack?: boolean, file?: string }}\n     */\n\n\n    const builtWarning = new Error(`${file} from Css Minimizer plugin\\n${warningMessage}${locationMessage ? ` ${locationMessage}` : \"\"}`);\n    builtWarning.name = \"Warning\";\n    builtWarning.hideStack = true;\n    builtWarning.file = file; // eslint-disable-next-line consistent-return\n\n    return builtWarning;\n  }\n  /**\n   * @private\n   * @param {Error | ErrorObject | string} error\n   * @param {string} file\n   * @param {SourceMapConsumer} [sourceMap]\n   * @param {Compilation[\"requestShortener\"]} [requestShortener]\n   * @returns {Error}\n   */\n\n\n  static buildError(error, file, sourceMap, requestShortener) {\n    /**\n     * @type {Error & { file?: string }}\n     */\n    let builtError;\n\n    if (typeof error === \"string\") {\n      builtError = new Error(`${file} from Css Minimizer plugin\\n${error}`);\n      builtError.file = file;\n      return builtError;\n    }\n\n    if (\n    /** @type {ErrorObject} */\n    error.line &&\n    /** @type {ErrorObject} */\n    error.column) {\n      const {\n        line,\n        column\n      } =\n      /** @type {ErrorObject & { line: number, column: number }} */\n      error;\n      const original = sourceMap && sourceMap.originalPositionFor({\n        line,\n        column\n      });\n\n      if (original && original.source && requestShortener) {\n        builtError = new Error(`${file} from Css Minimizer plugin\\n${error.message} [${requestShortener.shorten(original.source)}:${original.line},${original.column}][${file}:${line},${column}]${error.stack ? `\\n${error.stack.split(\"\\n\").slice(1).join(\"\\n\")}` : \"\"}`);\n        builtError.file = file;\n        return builtError;\n      }\n\n      builtError = new Error(`${file} from Css Minimizer plugin\\n${error.message} [${file}:${line},${column}]${error.stack ? `\\n${error.stack.split(\"\\n\").slice(1).join(\"\\n\")}` : \"\"}`);\n      builtError.file = file;\n      return builtError;\n    }\n\n    if (error.stack) {\n      builtError = new Error(`${file} from Css Minimizer plugin\\n${error.stack}`);\n      builtError.file = file;\n      return builtError;\n    }\n\n    builtError = new Error(`${file} from Css Minimizer plugin\\n${error.message}`);\n    builtError.file = file;\n    return builtError;\n  }\n  /**\n   * @private\n   * @param {Parallel} parallel\n   * @returns {number}\n   */\n\n\n  static getAvailableNumberOfCores(parallel) {\n    // In some cases cpus() returns undefined\n    // https://github.com/nodejs/node/issues/19022\n    const cpus = os.cpus() || {\n      length: 1\n    };\n    return parallel === true ? cpus.length - 1 : Math.min(Number(parallel) || 0, cpus.length - 1);\n  }\n  /**\n   * @private\n   * @param {Compiler} compiler\n   * @param {Compilation} compilation\n   * @param {Record<string, import(\"webpack\").sources.Source>} assets\n   * @param {{availableNumberOfCores: number}} optimizeOptions\n   * @returns {Promise<void>}\n   */\n\n\n  async optimize(compiler, compilation, assets, optimizeOptions) {\n    const cache = compilation.getCache(\"CssMinimizerWebpackPlugin\");\n    let numberOfAssetsForMinify = 0;\n    const assetsForMinify = await Promise.all(Object.keys(typeof assets === \"undefined\" ? compilation.assets : assets).filter(name => {\n      const {\n        info\n      } =\n      /** @type {Asset} */\n      compilation.getAsset(name);\n\n      if ( // Skip double minimize assets from child compilation\n      info.minimized) {\n        return false;\n      }\n\n      if (!compiler.webpack.ModuleFilenameHelpers.matchObject.bind( // eslint-disable-next-line no-undefined\n      undefined, this.options)(name)) {\n        return false;\n      }\n\n      return true;\n    }).map(async name => {\n      const {\n        info,\n        source\n      } =\n      /** @type {Asset} */\n      compilation.getAsset(name);\n      const eTag = cache.getLazyHashedEtag(source);\n      const cacheItem = cache.getItemCache(name, eTag);\n      const output = await cacheItem.getPromise();\n\n      if (!output) {\n        numberOfAssetsForMinify += 1;\n      }\n\n      return {\n        name,\n        info,\n        inputSource: source,\n        output,\n        cacheItem\n      };\n    }));\n\n    if (assetsForMinify.length === 0) {\n      return;\n    }\n    /** @type {undefined | (() => MinimizerWorker<T>)} */\n\n\n    let getWorker;\n    /** @type {undefined | MinimizerWorker<T>} */\n\n    let initializedWorker;\n    /** @type {undefined | number} */\n\n    let numberOfWorkers;\n\n    if (optimizeOptions.availableNumberOfCores > 0) {\n      // Do not create unnecessary workers when the number of files is less than the available cores, it saves memory\n      numberOfWorkers = Math.min(numberOfAssetsForMinify, optimizeOptions.availableNumberOfCores);\n\n      getWorker = () => {\n        if (initializedWorker) {\n          return initializedWorker;\n        }\n\n        initializedWorker =\n        /** @type {MinimizerWorker<T>} */\n        new Worker(require.resolve(\"./minify\"), {\n          numWorkers: numberOfWorkers,\n          enableWorkerThreads: true\n        }); // https://github.com/facebook/jest/issues/8872#issuecomment-524822081\n\n        const workerStdout = initializedWorker.getStdout();\n\n        if (workerStdout) {\n          workerStdout.on(\"data\", chunk => process.stdout.write(chunk));\n        }\n\n        const workerStderr = initializedWorker.getStderr();\n\n        if (workerStderr) {\n          workerStderr.on(\"data\", chunk => process.stderr.write(chunk));\n        }\n\n        return initializedWorker;\n      };\n    }\n\n    const {\n      SourceMapSource,\n      RawSource\n    } = compiler.webpack.sources;\n    const scheduledTasks = [];\n\n    for (const asset of assetsForMinify) {\n      scheduledTasks.push(async () => {\n        const {\n          name,\n          inputSource,\n          cacheItem\n        } = asset;\n        let {\n          output\n        } = asset;\n\n        if (!output) {\n          let input;\n          /** @type {RawSourceMap | undefined} */\n\n          let inputSourceMap;\n          const {\n            source: sourceFromInputSource,\n            map\n          } = inputSource.sourceAndMap();\n          input = sourceFromInputSource;\n\n          if (map) {\n            if (!CssMinimizerPlugin.isSourceMap(map)) {\n              compilation.warnings.push(\n              /** @type {WebpackError} */\n              new Error(`${name} contains invalid source map`));\n            } else {\n              inputSourceMap =\n              /** @type {RawSourceMap} */\n              map;\n            }\n          }\n\n          if (Buffer.isBuffer(input)) {\n            input = input.toString();\n          }\n          /**\n           * @type {InternalOptions<T>}\n           */\n\n\n          const options = {\n            name,\n            input,\n            inputSourceMap,\n            minimizer: {\n              implementation: this.options.minimizer.implementation,\n              options: this.options.minimizer.options\n            }\n          };\n          let result;\n\n          try {\n            result = await (getWorker ? getWorker().transform(serialize(options)) : minify(options));\n          } catch (error) {\n            const hasSourceMap = inputSourceMap && CssMinimizerPlugin.isSourceMap(inputSourceMap);\n            compilation.errors.push(\n            /** @type {WebpackError} */\n            CssMinimizerPlugin.buildError(\n            /** @type {any} */\n            error, name, hasSourceMap ? new SourceMapConsumer(\n            /** @type {RawSourceMap} */\n            inputSourceMap) : // eslint-disable-next-line no-undefined\n            undefined, // eslint-disable-next-line no-undefined\n            hasSourceMap ? compilation.requestShortener : undefined));\n            return;\n          }\n\n          output = {\n            warnings: [],\n            errors: []\n          };\n\n          for (const item of result.outputs) {\n            if (item.map) {\n              let originalSource;\n              let innerSourceMap;\n\n              if (output.source) {\n                ({\n                  source: originalSource,\n                  map: innerSourceMap\n                } = output.source.sourceAndMap());\n              } else {\n                originalSource = input;\n                innerSourceMap = inputSourceMap;\n              } // TODO need API for merging source maps in `webpack-source`\n\n\n              output.source = new SourceMapSource(item.code, name, item.map, originalSource, innerSourceMap, true);\n            } else {\n              output.source = new RawSource(item.code);\n            }\n          }\n\n          if (result.errors && result.errors.length > 0) {\n            const hasSourceMap = inputSourceMap && CssMinimizerPlugin.isSourceMap(inputSourceMap);\n\n            for (const error of result.errors) {\n              output.warnings.push(CssMinimizerPlugin.buildError(error, name, hasSourceMap ? new SourceMapConsumer(\n              /** @type {RawSourceMap} */\n              inputSourceMap) : // eslint-disable-next-line no-undefined\n              undefined, // eslint-disable-next-line no-undefined\n              hasSourceMap ? compilation.requestShortener : undefined));\n            }\n          }\n\n          if (result.warnings && result.warnings.length > 0) {\n            const hasSourceMap = inputSourceMap && CssMinimizerPlugin.isSourceMap(inputSourceMap);\n\n            for (const warning of result.warnings) {\n              const buildWarning = CssMinimizerPlugin.buildWarning(warning, name, this.options.warningsFilter, hasSourceMap ? new SourceMapConsumer(\n              /** @type {RawSourceMap} */\n              inputSourceMap) : // eslint-disable-next-line no-undefined\n              undefined, // eslint-disable-next-line no-undefined\n              hasSourceMap ? compilation.requestShortener : undefined);\n\n              if (buildWarning) {\n                output.warnings.push(buildWarning);\n              }\n            }\n          }\n\n          await cacheItem.storePromise({\n            source: output.source,\n            warnings: output.warnings,\n            errors: output.errors\n          });\n        }\n\n        if (output.warnings && output.warnings.length > 0) {\n          for (const warning of output.warnings) {\n            compilation.warnings.push(warning);\n          }\n        }\n\n        if (output.errors && output.errors.length > 0) {\n          for (const error of output.errors) {\n            compilation.errors.push(error);\n          }\n        }\n\n        const newInfo = {\n          minimized: true\n        };\n        const {\n          source\n        } = output;\n        compilation.updateAsset(name, source, newInfo);\n      });\n    }\n\n    const limit = getWorker && numberOfAssetsForMinify > 0 ?\n    /** @type {number} */\n    numberOfWorkers : scheduledTasks.length;\n    await throttleAll(limit, scheduledTasks);\n\n    if (initializedWorker) {\n      await initializedWorker.end();\n    }\n  }\n  /**\n   * @param {Compiler} compiler\n   * @returns {void}\n   */\n\n\n  apply(compiler) {\n    const pluginName = this.constructor.name;\n    const availableNumberOfCores = CssMinimizerPlugin.getAvailableNumberOfCores(this.options.parallel);\n    compiler.hooks.compilation.tap(pluginName, compilation => {\n      compilation.hooks.processAssets.tapPromise({\n        name: pluginName,\n        stage: compiler.webpack.Compilation.PROCESS_ASSETS_STAGE_OPTIMIZE_SIZE,\n        additionalAssets: true\n      }, assets => this.optimize(compiler, compilation, assets, {\n        availableNumberOfCores\n      }));\n      compilation.hooks.statsPrinter.tap(pluginName, stats => {\n        stats.hooks.print.for(\"asset.info.minimized\").tap(\"css-minimizer-webpack-plugin\", (minimized, _ref) => {\n          let {\n            green,\n            formatFlag\n          } = _ref;\n          return (// eslint-disable-next-line no-undefined\n            minimized ?\n            /** @type {Function} */\n            green(\n            /** @type {Function} */\n            formatFlag(\"minimized\")) : \"\"\n          );\n        });\n      });\n    });\n  }\n\n}\n\nCssMinimizerPlugin.cssnanoMinify = cssnanoMinify;\nCssMinimizerPlugin.cssoMinify = cssoMinify;\nCssMinimizerPlugin.cleanCssMinify = cleanCssMinify;\nCssMinimizerPlugin.esbuildMinify = esbuildMinify;\nCssMinimizerPlugin.parcelCssMinify = parcelCssMinify;\nmodule.exports = CssMinimizerPlugin;","map":{"version":3,"names":["os","require","SourceMapConsumer","validate","serialize","Worker","throttleAll","cssnanoMinify","cssoMinify","cleanCssMinify","esbuildMinify","parcelCssMinify","schema","minify","warningRegex","CssMinimizerPlugin","constructor","options","name","baseDataPath","minimizerOptions","test","warningsFilter","parallel","include","exclude","minimizer","implementation","isSourceMap","input","Boolean","version","sources","Array","isArray","mappings","buildWarning","warning","file","sourceMap","requestShortener","warningMessage","plugin","text","message","locationMessage","source","line","column","match","exec","original","originalPositionFor","replace","shorten","builtWarning","Error","hideStack","buildError","error","builtError","stack","split","slice","join","getAvailableNumberOfCores","cpus","length","Math","min","Number","optimize","compiler","compilation","assets","optimizeOptions","cache","getCache","numberOfAssetsForMinify","assetsForMinify","Promise","all","Object","keys","filter","info","getAsset","minimized","webpack","ModuleFilenameHelpers","matchObject","bind","undefined","map","eTag","getLazyHashedEtag","cacheItem","getItemCache","output","getPromise","inputSource","getWorker","initializedWorker","numberOfWorkers","availableNumberOfCores","resolve","numWorkers","enableWorkerThreads","workerStdout","getStdout","on","chunk","process","stdout","write","workerStderr","getStderr","stderr","SourceMapSource","RawSource","scheduledTasks","asset","push","inputSourceMap","sourceFromInputSource","sourceAndMap","warnings","Buffer","isBuffer","toString","result","transform","hasSourceMap","errors","item","outputs","originalSource","innerSourceMap","code","storePromise","newInfo","updateAsset","limit","end","apply","pluginName","hooks","tap","processAssets","tapPromise","stage","Compilation","PROCESS_ASSETS_STAGE_OPTIMIZE_SIZE","additionalAssets","statsPrinter","stats","print","for","green","formatFlag","module","exports"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/css-minimizer-webpack-plugin/dist/index.js"],"sourcesContent":["\"use strict\";\n\nconst os = require(\"os\");\n\nconst {\n  SourceMapConsumer\n} = require(\"source-map\");\n\nconst {\n  validate\n} = require(\"schema-utils\");\n\nconst serialize = require(\"serialize-javascript\");\n\nconst {\n  Worker\n} = require(\"jest-worker\");\n\nconst {\n  throttleAll,\n  cssnanoMinify,\n  cssoMinify,\n  cleanCssMinify,\n  esbuildMinify,\n  parcelCssMinify\n} = require(\"./utils\");\n\nconst schema = require(\"./options.json\");\n\nconst {\n  minify\n} = require(\"./minify\");\n/** @typedef {import(\"schema-utils/declarations/validate\").Schema} Schema */\n\n/** @typedef {import(\"webpack\").Compiler} Compiler */\n\n/** @typedef {import(\"webpack\").Compilation} Compilation */\n\n/** @typedef {import(\"webpack\").WebpackError} WebpackError */\n\n/** @typedef {import(\"jest-worker\").Worker} JestWorker */\n\n/** @typedef {import(\"source-map\").RawSourceMap} RawSourceMap */\n\n/** @typedef {import(\"webpack\").Asset} Asset */\n\n/** @typedef {import(\"postcss\").ProcessOptions} ProcessOptions */\n\n/** @typedef {import(\"postcss\").Syntax} Syntax */\n\n/** @typedef {import(\"postcss\").Parser} Parser */\n\n/** @typedef {import(\"postcss\").Stringifier} Stringifier */\n\n/**\n * @typedef {Object} CssNanoOptions\n * @property {string} [configFile]\n * @property {[string, object] | string | undefined} [preset]\n */\n\n/** @typedef {Error & { plugin?: string, text?: string, source?: string } | string} Warning */\n\n/**\n * @typedef {Object} WarningObject\n * @property {string} message\n * @property {string} [plugin]\n * @property {string} [text]\n * @property {number} [line]\n * @property {number} [column]\n */\n\n/**\n * @typedef {Object} ErrorObject\n * @property {string} message\n * @property {number} [line]\n * @property {number} [column]\n * @property {string} [stack]\n */\n\n/**\n * @typedef {Object} MinimizedResult\n * @property {string} code\n * @property {RawSourceMap} [map]\n * @property {Array<Error | ErrorObject| string>} [errors]\n * @property {Array<Warning | WarningObject | string>} [warnings]\n */\n\n/**\n * @typedef {{ [file: string]: string }} Input\n */\n\n/**\n * @typedef {{ [key: string]: any }} CustomOptions\n */\n\n/**\n * @template T\n * @typedef {T extends infer U ? U : CustomOptions} InferDefaultType\n */\n\n/**\n * @template T\n * @callback BasicMinimizerImplementation\n * @param {Input} input\n * @param {RawSourceMap | undefined} sourceMap\n * @param {InferDefaultType<T>} minifyOptions\n * @returns {Promise<MinimizedResult>}\n */\n\n/**\n * @template T\n * @typedef {T extends any[] ? { [P in keyof T]: BasicMinimizerImplementation<T[P]>; } : BasicMinimizerImplementation<T>} MinimizerImplementation\n */\n\n/**\n * @template T\n * @typedef {T extends any[] ? { [P in keyof T]?: InferDefaultType<T[P]> } : InferDefaultType<T>} MinimizerOptions\n */\n\n/**\n * @template T\n * @typedef {Object} InternalOptions\n * @property {string} name\n * @property {string} input\n * @property {RawSourceMap | undefined} inputSourceMap\n * @property {{ implementation: MinimizerImplementation<T>, options: MinimizerOptions<T> }} minimizer\n */\n\n/**\n * @typedef InternalResult\n * @property {Array<{ code: string, map: RawSourceMap | undefined }>} outputs\n * @property {Array<Warning | WarningObject | string>} warnings\n * @property {Array<Error | ErrorObject | string>} errors\n */\n\n/** @typedef {undefined | boolean | number} Parallel */\n\n/** @typedef {RegExp | string} Rule */\n\n/** @typedef {Rule[] | Rule} Rules */\n\n/** @typedef {(warning: Warning | WarningObject | string, file: string, source?: string) => boolean} WarningsFilter */\n\n/**\n * @typedef {Object} BasePluginOptions\n * @property {Rules} [test]\n * @property {Rules} [include]\n * @property {Rules} [exclude]\n * @property {WarningsFilter} [warningsFilter]\n * @property {Parallel} [parallel]\n */\n\n/**\n * @template T\n * @typedef {JestWorker & { transform: (options: string) => InternalResult, minify: (options: InternalOptions<T>) => InternalResult }} MinimizerWorker\n */\n\n/**\n * @typedef{ProcessOptions | { from?: string,  to?: string, parser?: string | Syntax | Parser, stringifier?: string | Syntax | Stringifier, syntax?: string | Syntax } } ProcessOptionsExtender\n */\n\n/**\n * @typedef {CssNanoOptions & { processorOptions?: ProcessOptionsExtender }} CssNanoOptionsExtended\n */\n\n/**\n * @template T\n * @typedef {T extends CssNanoOptionsExtended ? { minify?: MinimizerImplementation<T> | undefined, minimizerOptions?: MinimizerOptions<T> | undefined } : { minify: MinimizerImplementation<T>, minimizerOptions?: MinimizerOptions<T> | undefined }} DefinedDefaultMinimizerAndOptions\n */\n\n/**\n * @template T\n * @typedef {BasePluginOptions & { minimizer: { implementation: MinimizerImplementation<T>, options: MinimizerOptions<T> } }} InternalPluginOptions\n */\n\n\nconst warningRegex = /\\s.+:+([0-9]+):+([0-9]+)/;\n/**\n * @template [T=CssNanoOptionsExtended]\n */\n\nclass CssMinimizerPlugin {\n  /**\n   * @param {BasePluginOptions & DefinedDefaultMinimizerAndOptions<T>} [options]\n   */\n  constructor(options) {\n    validate(\n    /** @type {Schema} */\n    schema, options || {}, {\n      name: \"Css Minimizer Plugin\",\n      baseDataPath: \"options\"\n    });\n    const {\n      minify =\n      /** @type {BasicMinimizerImplementation<T>} */\n      cssnanoMinify,\n      minimizerOptions =\n      /** @type {MinimizerOptions<T>} */\n      {},\n      test = /\\.css(\\?.*)?$/i,\n      warningsFilter = () => true,\n      parallel = true,\n      include,\n      exclude\n    } = options || {};\n    /**\n     * @private\n     * @type {InternalPluginOptions<T>}\n     */\n\n    this.options = {\n      test,\n      warningsFilter,\n      parallel,\n      include,\n      exclude,\n      minimizer: {\n        implementation:\n        /** @type {MinimizerImplementation<T>} */\n        minify,\n        options: minimizerOptions\n      }\n    };\n  }\n  /**\n   * @private\n   * @param {any} input\n   * @returns {boolean}\n   */\n\n\n  static isSourceMap(input) {\n    // All required options for `new SourceMapConsumer(...options)`\n    // https://github.com/mozilla/source-map#new-sourcemapconsumerrawsourcemap\n    return Boolean(input && input.version && input.sources && Array.isArray(input.sources) && typeof input.mappings === \"string\");\n  }\n  /**\n   * @private\n   * @param {Warning | WarningObject | string} warning\n   * @param {string} file\n   * @param {WarningsFilter} [warningsFilter]\n   * @param {SourceMapConsumer} [sourceMap]\n   * @param {Compilation[\"requestShortener\"]} [requestShortener]\n   * @returns {Error & { hideStack?: boolean, file?: string } | undefined}\n   */\n\n\n  static buildWarning(warning, file, warningsFilter, sourceMap, requestShortener) {\n    let warningMessage = typeof warning === \"string\" ? warning : `${warning.plugin ? `[${warning.plugin}] ` : \"\"}${warning.text || warning.message}`;\n    let locationMessage = \"\";\n    let source;\n\n    if (sourceMap) {\n      let line;\n      let column;\n\n      if (typeof warning === \"string\") {\n        const match = warningRegex.exec(warning);\n\n        if (match) {\n          line = +match[1];\n          column = +match[2];\n        }\n      } else {\n        ({\n          line,\n          column\n        } =\n        /** @type {WarningObject} */\n        warning);\n      }\n\n      if (line && column) {\n        const original = sourceMap.originalPositionFor({\n          line,\n          column\n        });\n\n        if (original && original.source && original.source !== file && requestShortener) {\n          ({\n            source\n          } = original);\n          warningMessage = `${warningMessage.replace(warningRegex, \"\")}`;\n          locationMessage = `${requestShortener.shorten(original.source)}:${original.line}:${original.column}`;\n        }\n      }\n    }\n\n    if (warningsFilter && !warningsFilter(warning, file, source)) {\n      return;\n    }\n    /**\n     * @type {Error & { hideStack?: boolean, file?: string }}\n     */\n\n\n    const builtWarning = new Error(`${file} from Css Minimizer plugin\\n${warningMessage}${locationMessage ? ` ${locationMessage}` : \"\"}`);\n    builtWarning.name = \"Warning\";\n    builtWarning.hideStack = true;\n    builtWarning.file = file; // eslint-disable-next-line consistent-return\n\n    return builtWarning;\n  }\n  /**\n   * @private\n   * @param {Error | ErrorObject | string} error\n   * @param {string} file\n   * @param {SourceMapConsumer} [sourceMap]\n   * @param {Compilation[\"requestShortener\"]} [requestShortener]\n   * @returns {Error}\n   */\n\n\n  static buildError(error, file, sourceMap, requestShortener) {\n    /**\n     * @type {Error & { file?: string }}\n     */\n    let builtError;\n\n    if (typeof error === \"string\") {\n      builtError = new Error(`${file} from Css Minimizer plugin\\n${error}`);\n      builtError.file = file;\n      return builtError;\n    }\n\n    if (\n    /** @type {ErrorObject} */\n    error.line &&\n    /** @type {ErrorObject} */\n    error.column) {\n      const {\n        line,\n        column\n      } =\n      /** @type {ErrorObject & { line: number, column: number }} */\n      error;\n      const original = sourceMap && sourceMap.originalPositionFor({\n        line,\n        column\n      });\n\n      if (original && original.source && requestShortener) {\n        builtError = new Error(`${file} from Css Minimizer plugin\\n${error.message} [${requestShortener.shorten(original.source)}:${original.line},${original.column}][${file}:${line},${column}]${error.stack ? `\\n${error.stack.split(\"\\n\").slice(1).join(\"\\n\")}` : \"\"}`);\n        builtError.file = file;\n        return builtError;\n      }\n\n      builtError = new Error(`${file} from Css Minimizer plugin\\n${error.message} [${file}:${line},${column}]${error.stack ? `\\n${error.stack.split(\"\\n\").slice(1).join(\"\\n\")}` : \"\"}`);\n      builtError.file = file;\n      return builtError;\n    }\n\n    if (error.stack) {\n      builtError = new Error(`${file} from Css Minimizer plugin\\n${error.stack}`);\n      builtError.file = file;\n      return builtError;\n    }\n\n    builtError = new Error(`${file} from Css Minimizer plugin\\n${error.message}`);\n    builtError.file = file;\n    return builtError;\n  }\n  /**\n   * @private\n   * @param {Parallel} parallel\n   * @returns {number}\n   */\n\n\n  static getAvailableNumberOfCores(parallel) {\n    // In some cases cpus() returns undefined\n    // https://github.com/nodejs/node/issues/19022\n    const cpus = os.cpus() || {\n      length: 1\n    };\n    return parallel === true ? cpus.length - 1 : Math.min(Number(parallel) || 0, cpus.length - 1);\n  }\n  /**\n   * @private\n   * @param {Compiler} compiler\n   * @param {Compilation} compilation\n   * @param {Record<string, import(\"webpack\").sources.Source>} assets\n   * @param {{availableNumberOfCores: number}} optimizeOptions\n   * @returns {Promise<void>}\n   */\n\n\n  async optimize(compiler, compilation, assets, optimizeOptions) {\n    const cache = compilation.getCache(\"CssMinimizerWebpackPlugin\");\n    let numberOfAssetsForMinify = 0;\n    const assetsForMinify = await Promise.all(Object.keys(typeof assets === \"undefined\" ? compilation.assets : assets).filter(name => {\n      const {\n        info\n      } =\n      /** @type {Asset} */\n      compilation.getAsset(name);\n\n      if ( // Skip double minimize assets from child compilation\n      info.minimized) {\n        return false;\n      }\n\n      if (!compiler.webpack.ModuleFilenameHelpers.matchObject.bind( // eslint-disable-next-line no-undefined\n      undefined, this.options)(name)) {\n        return false;\n      }\n\n      return true;\n    }).map(async name => {\n      const {\n        info,\n        source\n      } =\n      /** @type {Asset} */\n      compilation.getAsset(name);\n      const eTag = cache.getLazyHashedEtag(source);\n      const cacheItem = cache.getItemCache(name, eTag);\n      const output = await cacheItem.getPromise();\n\n      if (!output) {\n        numberOfAssetsForMinify += 1;\n      }\n\n      return {\n        name,\n        info,\n        inputSource: source,\n        output,\n        cacheItem\n      };\n    }));\n\n    if (assetsForMinify.length === 0) {\n      return;\n    }\n    /** @type {undefined | (() => MinimizerWorker<T>)} */\n\n\n    let getWorker;\n    /** @type {undefined | MinimizerWorker<T>} */\n\n    let initializedWorker;\n    /** @type {undefined | number} */\n\n    let numberOfWorkers;\n\n    if (optimizeOptions.availableNumberOfCores > 0) {\n      // Do not create unnecessary workers when the number of files is less than the available cores, it saves memory\n      numberOfWorkers = Math.min(numberOfAssetsForMinify, optimizeOptions.availableNumberOfCores);\n\n      getWorker = () => {\n        if (initializedWorker) {\n          return initializedWorker;\n        }\n\n        initializedWorker =\n        /** @type {MinimizerWorker<T>} */\n        new Worker(require.resolve(\"./minify\"), {\n          numWorkers: numberOfWorkers,\n          enableWorkerThreads: true\n        }); // https://github.com/facebook/jest/issues/8872#issuecomment-524822081\n\n        const workerStdout = initializedWorker.getStdout();\n\n        if (workerStdout) {\n          workerStdout.on(\"data\", chunk => process.stdout.write(chunk));\n        }\n\n        const workerStderr = initializedWorker.getStderr();\n\n        if (workerStderr) {\n          workerStderr.on(\"data\", chunk => process.stderr.write(chunk));\n        }\n\n        return initializedWorker;\n      };\n    }\n\n    const {\n      SourceMapSource,\n      RawSource\n    } = compiler.webpack.sources;\n    const scheduledTasks = [];\n\n    for (const asset of assetsForMinify) {\n      scheduledTasks.push(async () => {\n        const {\n          name,\n          inputSource,\n          cacheItem\n        } = asset;\n        let {\n          output\n        } = asset;\n\n        if (!output) {\n          let input;\n          /** @type {RawSourceMap | undefined} */\n\n          let inputSourceMap;\n          const {\n            source: sourceFromInputSource,\n            map\n          } = inputSource.sourceAndMap();\n          input = sourceFromInputSource;\n\n          if (map) {\n            if (!CssMinimizerPlugin.isSourceMap(map)) {\n              compilation.warnings.push(\n              /** @type {WebpackError} */\n              new Error(`${name} contains invalid source map`));\n            } else {\n              inputSourceMap =\n              /** @type {RawSourceMap} */\n              map;\n            }\n          }\n\n          if (Buffer.isBuffer(input)) {\n            input = input.toString();\n          }\n          /**\n           * @type {InternalOptions<T>}\n           */\n\n\n          const options = {\n            name,\n            input,\n            inputSourceMap,\n            minimizer: {\n              implementation: this.options.minimizer.implementation,\n              options: this.options.minimizer.options\n            }\n          };\n          let result;\n\n          try {\n            result = await (getWorker ? getWorker().transform(serialize(options)) : minify(options));\n          } catch (error) {\n            const hasSourceMap = inputSourceMap && CssMinimizerPlugin.isSourceMap(inputSourceMap);\n            compilation.errors.push(\n            /** @type {WebpackError} */\n            CssMinimizerPlugin.buildError(\n            /** @type {any} */\n            error, name, hasSourceMap ? new SourceMapConsumer(\n            /** @type {RawSourceMap} */\n            inputSourceMap) : // eslint-disable-next-line no-undefined\n            undefined, // eslint-disable-next-line no-undefined\n            hasSourceMap ? compilation.requestShortener : undefined));\n            return;\n          }\n\n          output = {\n            warnings: [],\n            errors: []\n          };\n\n          for (const item of result.outputs) {\n            if (item.map) {\n              let originalSource;\n              let innerSourceMap;\n\n              if (output.source) {\n                ({\n                  source: originalSource,\n                  map: innerSourceMap\n                } = output.source.sourceAndMap());\n              } else {\n                originalSource = input;\n                innerSourceMap = inputSourceMap;\n              } // TODO need API for merging source maps in `webpack-source`\n\n\n              output.source = new SourceMapSource(item.code, name, item.map, originalSource, innerSourceMap, true);\n            } else {\n              output.source = new RawSource(item.code);\n            }\n          }\n\n          if (result.errors && result.errors.length > 0) {\n            const hasSourceMap = inputSourceMap && CssMinimizerPlugin.isSourceMap(inputSourceMap);\n\n            for (const error of result.errors) {\n              output.warnings.push(CssMinimizerPlugin.buildError(error, name, hasSourceMap ? new SourceMapConsumer(\n              /** @type {RawSourceMap} */\n              inputSourceMap) : // eslint-disable-next-line no-undefined\n              undefined, // eslint-disable-next-line no-undefined\n              hasSourceMap ? compilation.requestShortener : undefined));\n            }\n          }\n\n          if (result.warnings && result.warnings.length > 0) {\n            const hasSourceMap = inputSourceMap && CssMinimizerPlugin.isSourceMap(inputSourceMap);\n\n            for (const warning of result.warnings) {\n              const buildWarning = CssMinimizerPlugin.buildWarning(warning, name, this.options.warningsFilter, hasSourceMap ? new SourceMapConsumer(\n              /** @type {RawSourceMap} */\n              inputSourceMap) : // eslint-disable-next-line no-undefined\n              undefined, // eslint-disable-next-line no-undefined\n              hasSourceMap ? compilation.requestShortener : undefined);\n\n              if (buildWarning) {\n                output.warnings.push(buildWarning);\n              }\n            }\n          }\n\n          await cacheItem.storePromise({\n            source: output.source,\n            warnings: output.warnings,\n            errors: output.errors\n          });\n        }\n\n        if (output.warnings && output.warnings.length > 0) {\n          for (const warning of output.warnings) {\n            compilation.warnings.push(warning);\n          }\n        }\n\n        if (output.errors && output.errors.length > 0) {\n          for (const error of output.errors) {\n            compilation.errors.push(error);\n          }\n        }\n\n        const newInfo = {\n          minimized: true\n        };\n        const {\n          source\n        } = output;\n        compilation.updateAsset(name, source, newInfo);\n      });\n    }\n\n    const limit = getWorker && numberOfAssetsForMinify > 0 ?\n    /** @type {number} */\n    numberOfWorkers : scheduledTasks.length;\n    await throttleAll(limit, scheduledTasks);\n\n    if (initializedWorker) {\n      await initializedWorker.end();\n    }\n  }\n  /**\n   * @param {Compiler} compiler\n   * @returns {void}\n   */\n\n\n  apply(compiler) {\n    const pluginName = this.constructor.name;\n    const availableNumberOfCores = CssMinimizerPlugin.getAvailableNumberOfCores(this.options.parallel);\n    compiler.hooks.compilation.tap(pluginName, compilation => {\n      compilation.hooks.processAssets.tapPromise({\n        name: pluginName,\n        stage: compiler.webpack.Compilation.PROCESS_ASSETS_STAGE_OPTIMIZE_SIZE,\n        additionalAssets: true\n      }, assets => this.optimize(compiler, compilation, assets, {\n        availableNumberOfCores\n      }));\n      compilation.hooks.statsPrinter.tap(pluginName, stats => {\n        stats.hooks.print.for(\"asset.info.minimized\").tap(\"css-minimizer-webpack-plugin\", (minimized, {\n          green,\n          formatFlag\n        }) => // eslint-disable-next-line no-undefined\n        minimized ?\n        /** @type {Function} */\n        green(\n        /** @type {Function} */\n        formatFlag(\"minimized\")) : \"\");\n      });\n    });\n  }\n\n}\n\nCssMinimizerPlugin.cssnanoMinify = cssnanoMinify;\nCssMinimizerPlugin.cssoMinify = cssoMinify;\nCssMinimizerPlugin.cleanCssMinify = cleanCssMinify;\nCssMinimizerPlugin.esbuildMinify = esbuildMinify;\nCssMinimizerPlugin.parcelCssMinify = parcelCssMinify;\nmodule.exports = CssMinimizerPlugin;"],"mappings":"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"},"metadata":{},"sourceType":"script"}