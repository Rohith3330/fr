{"ast":null,"code":"'use strict';\n\nvar zlibpool = exports;\n\nvar zlib = require('zlib');\n\nvar transport = require('../../../spdy-transport'); // TODO(indutny): think about it, why has it always been Z_SYNC_FLUSH here.\n// It should be possible to manually flush stuff after the write instead\n\n\nfunction createDeflate(version, compression) {\n  var deflate = zlib.createDeflate({\n    dictionary: transport.protocol.spdy.dictionary[version],\n    flush: zlib.Z_SYNC_FLUSH,\n    windowBits: 11,\n    level: compression ? zlib.Z_DEFAULT_COMPRESSION : zlib.Z_NO_COMPRESSION\n  }); // For node.js v0.8\n\n  deflate._flush = zlib.Z_SYNC_FLUSH;\n  return deflate;\n}\n\nfunction createInflate(version) {\n  var inflate = zlib.createInflate({\n    dictionary: transport.protocol.spdy.dictionary[version],\n    flush: zlib.Z_SYNC_FLUSH\n  }); // For node.js v0.8\n\n  inflate._flush = zlib.Z_SYNC_FLUSH;\n  return inflate;\n}\n\nfunction Pool(compression) {\n  this.compression = compression;\n  this.pool = {\n    2: [],\n    3: [],\n    3.1: []\n  };\n}\n\nzlibpool.create = function create(compression) {\n  return new Pool(compression);\n};\n\nPool.prototype.get = function get(version) {\n  if (this.pool[version].length > 0) {\n    return this.pool[version].pop();\n  } else {\n    var id = version;\n    return {\n      version: version,\n      compress: createDeflate(id, this.compression),\n      decompress: createInflate(id)\n    };\n  }\n};\n\nPool.prototype.put = function put(pair) {\n  this.pool[pair.version].push(pair);\n};","map":{"version":3,"names":["zlibpool","exports","zlib","require","transport","createDeflate","version","compression","deflate","dictionary","protocol","spdy","flush","Z_SYNC_FLUSH","windowBits","level","Z_DEFAULT_COMPRESSION","Z_NO_COMPRESSION","_flush","createInflate","inflate","Pool","pool","create","prototype","get","length","pop","id","compress","decompress","put","pair","push"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/spdy-transport/lib/spdy-transport/protocol/spdy/zlib-pool.js"],"sourcesContent":["'use strict'\n\nvar zlibpool = exports\nvar zlib = require('zlib')\n\nvar transport = require('../../../spdy-transport')\n\n// TODO(indutny): think about it, why has it always been Z_SYNC_FLUSH here.\n// It should be possible to manually flush stuff after the write instead\nfunction createDeflate (version, compression) {\n  var deflate = zlib.createDeflate({\n    dictionary: transport.protocol.spdy.dictionary[version],\n    flush: zlib.Z_SYNC_FLUSH,\n    windowBits: 11,\n    level: compression ? zlib.Z_DEFAULT_COMPRESSION : zlib.Z_NO_COMPRESSION\n  })\n\n  // For node.js v0.8\n  deflate._flush = zlib.Z_SYNC_FLUSH\n\n  return deflate\n}\n\nfunction createInflate (version) {\n  var inflate = zlib.createInflate({\n    dictionary: transport.protocol.spdy.dictionary[version],\n    flush: zlib.Z_SYNC_FLUSH\n  })\n\n  // For node.js v0.8\n  inflate._flush = zlib.Z_SYNC_FLUSH\n\n  return inflate\n}\n\nfunction Pool (compression) {\n  this.compression = compression\n  this.pool = {\n    2: [],\n    3: [],\n    3.1: []\n  }\n}\n\nzlibpool.create = function create (compression) {\n  return new Pool(compression)\n}\n\nPool.prototype.get = function get (version) {\n  if (this.pool[version].length > 0) {\n    return this.pool[version].pop()\n  } else {\n    var id = version\n\n    return {\n      version: version,\n      compress: createDeflate(id, this.compression),\n      decompress: createInflate(id)\n    }\n  }\n}\n\nPool.prototype.put = function put (pair) {\n  this.pool[pair.version].push(pair)\n}\n"],"mappings":"AAAA;;AAEA,IAAIA,QAAQ,GAAGC,OAAf;;AACA,IAAIC,IAAI,GAAGC,OAAO,CAAC,MAAD,CAAlB;;AAEA,IAAIC,SAAS,GAAGD,OAAO,CAAC,yBAAD,CAAvB,C,CAEA;AACA;;;AACA,SAASE,aAAT,CAAwBC,OAAxB,EAAiCC,WAAjC,EAA8C;EAC5C,IAAIC,OAAO,GAAGN,IAAI,CAACG,aAAL,CAAmB;IAC/BI,UAAU,EAAEL,SAAS,CAACM,QAAV,CAAmBC,IAAnB,CAAwBF,UAAxB,CAAmCH,OAAnC,CADmB;IAE/BM,KAAK,EAAEV,IAAI,CAACW,YAFmB;IAG/BC,UAAU,EAAE,EAHmB;IAI/BC,KAAK,EAAER,WAAW,GAAGL,IAAI,CAACc,qBAAR,GAAgCd,IAAI,CAACe;EAJxB,CAAnB,CAAd,CAD4C,CAQ5C;;EACAT,OAAO,CAACU,MAAR,GAAiBhB,IAAI,CAACW,YAAtB;EAEA,OAAOL,OAAP;AACD;;AAED,SAASW,aAAT,CAAwBb,OAAxB,EAAiC;EAC/B,IAAIc,OAAO,GAAGlB,IAAI,CAACiB,aAAL,CAAmB;IAC/BV,UAAU,EAAEL,SAAS,CAACM,QAAV,CAAmBC,IAAnB,CAAwBF,UAAxB,CAAmCH,OAAnC,CADmB;IAE/BM,KAAK,EAAEV,IAAI,CAACW;EAFmB,CAAnB,CAAd,CAD+B,CAM/B;;EACAO,OAAO,CAACF,MAAR,GAAiBhB,IAAI,CAACW,YAAtB;EAEA,OAAOO,OAAP;AACD;;AAED,SAASC,IAAT,CAAed,WAAf,EAA4B;EAC1B,KAAKA,WAAL,GAAmBA,WAAnB;EACA,KAAKe,IAAL,GAAY;IACV,GAAG,EADO;IAEV,GAAG,EAFO;IAGV,KAAK;EAHK,CAAZ;AAKD;;AAEDtB,QAAQ,CAACuB,MAAT,GAAkB,SAASA,MAAT,CAAiBhB,WAAjB,EAA8B;EAC9C,OAAO,IAAIc,IAAJ,CAASd,WAAT,CAAP;AACD,CAFD;;AAIAc,IAAI,CAACG,SAAL,CAAeC,GAAf,GAAqB,SAASA,GAAT,CAAcnB,OAAd,EAAuB;EAC1C,IAAI,KAAKgB,IAAL,CAAUhB,OAAV,EAAmBoB,MAAnB,GAA4B,CAAhC,EAAmC;IACjC,OAAO,KAAKJ,IAAL,CAAUhB,OAAV,EAAmBqB,GAAnB,EAAP;EACD,CAFD,MAEO;IACL,IAAIC,EAAE,GAAGtB,OAAT;IAEA,OAAO;MACLA,OAAO,EAAEA,OADJ;MAELuB,QAAQ,EAAExB,aAAa,CAACuB,EAAD,EAAK,KAAKrB,WAAV,CAFlB;MAGLuB,UAAU,EAAEX,aAAa,CAACS,EAAD;IAHpB,CAAP;EAKD;AACF,CAZD;;AAcAP,IAAI,CAACG,SAAL,CAAeO,GAAf,GAAqB,SAASA,GAAT,CAAcC,IAAd,EAAoB;EACvC,KAAKV,IAAL,CAAUU,IAAI,CAAC1B,OAAf,EAAwB2B,IAAxB,CAA6BD,IAA7B;AACD,CAFD"},"metadata":{},"sourceType":"script"}