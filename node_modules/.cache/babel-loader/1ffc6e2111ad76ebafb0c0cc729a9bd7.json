{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _default;\n\nvar _utils = require(\"./utils\");\n\nconst BABEL_POLYFILL_DEPRECATION = `\n  \\`@babel/polyfill\\` is deprecated. Please, use required parts of \\`core-js\\`\n  and \\`regenerator-runtime/runtime\\` separately`;\nconst NO_DIRECT_POLYFILL_IMPORT = `\n  When setting \\`useBuiltIns: 'usage'\\`, polyfills are automatically imported when needed.\n  Please remove the direct import of \\`SPECIFIER\\` or use \\`useBuiltIns: 'entry'\\` instead.`;\n\nfunction _default(_ref, _ref2) {\n  let {\n    template\n  } = _ref;\n  let {\n    regenerator,\n    deprecated,\n    usage\n  } = _ref2;\n  return {\n    name: \"preset-env/replace-babel-polyfill\",\n    visitor: {\n      ImportDeclaration(path) {\n        const src = (0, _utils.getImportSource)(path);\n\n        if (usage && (0, _utils.isPolyfillSource)(src)) {\n          console.warn(NO_DIRECT_POLYFILL_IMPORT.replace(\"SPECIFIER\", src));\n          if (!deprecated) path.remove();\n        } else if (src === \"@babel/polyfill\") {\n          if (deprecated) {\n            console.warn(BABEL_POLYFILL_DEPRECATION);\n          } else if (regenerator) {\n            path.replaceWithMultiple(template.ast`\n              import \"core-js\";\n              import \"regenerator-runtime/runtime.js\";\n            `);\n          } else {\n            path.replaceWith(template.ast`\n              import \"core-js\";\n            `);\n          }\n        }\n      },\n\n      Program(path) {\n        path.get(\"body\").forEach(bodyPath => {\n          const src = (0, _utils.getRequireSource)(bodyPath);\n\n          if (usage && (0, _utils.isPolyfillSource)(src)) {\n            console.warn(NO_DIRECT_POLYFILL_IMPORT.replace(\"SPECIFIER\", src));\n            if (!deprecated) bodyPath.remove();\n          } else if (src === \"@babel/polyfill\") {\n            if (deprecated) {\n              console.warn(BABEL_POLYFILL_DEPRECATION);\n            } else if (regenerator) {\n              bodyPath.replaceWithMultiple(template.ast`\n                require(\"core-js\");\n                require(\"regenerator-runtime/runtime.js\");\n              `);\n            } else {\n              bodyPath.replaceWith(template.ast`\n                require(\"core-js\");\n              `);\n            }\n          }\n        });\n      }\n\n    }\n  };\n}","map":{"version":3,"mappings":";;;;;;;AAAA;;AAKA,MAAMA,0BAA0B,GAAI;AACpC;AACA,iDAFA;AAIA,MAAMC,yBAAyB,GAAI;AACnC;AACA,4FAFA;;AAIe,+BAGb;EAAA,IAFA;IAAEC;EAAF,CAEA;EAAA,IADA;IAAEC,WAAF;IAAeC,UAAf;IAA2BC;EAA3B,CACA;EACA,OAAO;IACLC,IAAI,EAAE,mCADD;IAELC,OAAO,EAAE;MACPC,iBAAiB,CAACC,IAAD,EAAsC;QACrD,MAAMC,GAAG,GAAG,4BAAgBD,IAAhB,CAAZ;;QACA,IAAIJ,KAAK,IAAI,6BAAiBK,GAAjB,CAAb,EAAoC;UAClCC,OAAO,CAACC,IAARD,CAAaV,yBAAyB,CAACY,OAA1BZ,CAAkC,WAAlCA,EAA+CS,GAA/CT,CAAbU;UACA,IAAI,CAACP,UAAL,EAAiBK,IAAI,CAACK,MAALL;QAFnB,OAGO,IAAIC,GAAG,KAAK,iBAAZ,EAA+B;UACpC,IAAIN,UAAJ,EAAgB;YACdO,OAAO,CAACC,IAARD,CAAaX,0BAAbW;UADF,OAEO,IAAIR,WAAJ,EAAiB;YACtBM,IAAI,CAACM,mBAALN,CAAyBP,QAAQ,CAACc,GAAI;AAClD;AACA;AACA,aAHYP;UADK,OAKA;YACLA,IAAI,CAACQ,WAALR,CAAiBP,QAAQ,CAACc,GAAI;AAC1C;AACA,aAFYP;UAGD;QACF;MAnBI;;MAqBPS,OAAO,CAACT,IAAD,EAA4B;QACjCA,IAAI,CAACU,GAALV,CAAS,MAATA,EAAiBW,OAAjBX,CAAyBY,QAAQ,IAAI;UACnC,MAAMX,GAAG,GAAG,6BAAiBW,QAAjB,CAAZ;;UACA,IAAIhB,KAAK,IAAI,6BAAiBK,GAAjB,CAAb,EAAoC;YAClCC,OAAO,CAACC,IAARD,CAAaV,yBAAyB,CAACY,OAA1BZ,CAAkC,WAAlCA,EAA+CS,GAA/CT,CAAbU;YACA,IAAI,CAACP,UAAL,EAAiBiB,QAAQ,CAACP,MAATO;UAFnB,OAGO,IAAIX,GAAG,KAAK,iBAAZ,EAA+B;YACpC,IAAIN,UAAJ,EAAgB;cACdO,OAAO,CAACC,IAARD,CAAaX,0BAAbW;YADF,OAEO,IAAIR,WAAJ,EAAiB;cACtBkB,QAAQ,CAACN,mBAATM,CAA6BnB,QAAQ,CAACc,GAAI;AACxD;AACA;AACA,eAHcK;YADK,OAKA;cACLA,QAAQ,CAACJ,WAATI,CAAqBnB,QAAQ,CAACc,GAAI;AAChD;AACA,eAFcK;YAGD;UACF;QAlBH;MAoBD;;IA1CM;EAFJ,CAAP;AA+CD","names":["BABEL_POLYFILL_DEPRECATION","NO_DIRECT_POLYFILL_IMPORT","template","regenerator","deprecated","usage","name","visitor","ImportDeclaration","path","src","console","warn","replace","remove","replaceWithMultiple","ast","replaceWith","Program","get","forEach","bodyPath"],"sources":["C:\\Users\\Rohith\\mern\\frontend\\node_modules\\@babel\\preset-env\\src\\polyfills\\babel-polyfill.ts"],"sourcesContent":["import { getImportSource, getRequireSource, isPolyfillSource } from \"./utils\";\n\nimport type { NodePath } from \"@babel/traverse\";\nimport type * as t from \"@babel/types\";\n\nconst BABEL_POLYFILL_DEPRECATION = `\n  \\`@babel/polyfill\\` is deprecated. Please, use required parts of \\`core-js\\`\n  and \\`regenerator-runtime/runtime\\` separately`;\n\nconst NO_DIRECT_POLYFILL_IMPORT = `\n  When setting \\`useBuiltIns: 'usage'\\`, polyfills are automatically imported when needed.\n  Please remove the direct import of \\`SPECIFIER\\` or use \\`useBuiltIns: 'entry'\\` instead.`;\n\nexport default function (\n  { template }: any,\n  { regenerator, deprecated, usage }: any,\n) {\n  return {\n    name: \"preset-env/replace-babel-polyfill\",\n    visitor: {\n      ImportDeclaration(path: NodePath<t.ImportDeclaration>) {\n        const src = getImportSource(path);\n        if (usage && isPolyfillSource(src)) {\n          console.warn(NO_DIRECT_POLYFILL_IMPORT.replace(\"SPECIFIER\", src));\n          if (!deprecated) path.remove();\n        } else if (src === \"@babel/polyfill\") {\n          if (deprecated) {\n            console.warn(BABEL_POLYFILL_DEPRECATION);\n          } else if (regenerator) {\n            path.replaceWithMultiple(template.ast`\n              import \"core-js\";\n              import \"regenerator-runtime/runtime.js\";\n            `);\n          } else {\n            path.replaceWith(template.ast`\n              import \"core-js\";\n            `);\n          }\n        }\n      },\n      Program(path: NodePath<t.Program>) {\n        path.get(\"body\").forEach(bodyPath => {\n          const src = getRequireSource(bodyPath);\n          if (usage && isPolyfillSource(src)) {\n            console.warn(NO_DIRECT_POLYFILL_IMPORT.replace(\"SPECIFIER\", src));\n            if (!deprecated) bodyPath.remove();\n          } else if (src === \"@babel/polyfill\") {\n            if (deprecated) {\n              console.warn(BABEL_POLYFILL_DEPRECATION);\n            } else if (regenerator) {\n              bodyPath.replaceWithMultiple(template.ast`\n                require(\"core-js\");\n                require(\"regenerator-runtime/runtime.js\");\n              `);\n            } else {\n              bodyPath.replaceWith(template.ast`\n                require(\"core-js\");\n              `);\n            }\n          }\n        });\n      },\n    },\n  };\n}\n"]},"metadata":{},"sourceType":"script"}