{"ast":null,"code":"var assert = require('assert');\n\nvar net = require('net');\n\nvar streamPair = require('stream-pair');\n\nvar thing = require('handle-thing');\n\nvar Buffer = require('buffer').Buffer;\n\nvar fixtures = require('./fixtures');\n\nvar hose = require('../');\n\ndescribe('Select Hose', function () {\n  var pair;\n  var socket;\n  beforeEach(function () {\n    pair = streamPair.create();\n    var handle = thing.create(pair.other);\n    socket = new net.Socket({\n      handle: handle\n    }); // For v0.8\n\n    socket.readable = true;\n    socket.writable = true;\n  });\n  it('should select handler using first byte', function (done) {\n    var filter = hose.create(socket, function filter(data, callback) {\n      if (data[0] === 0x80) return callback(null, 'spdy');else return callback(null, 'http');\n    });\n    filter.on('select', function (protocol, socket) {\n      assert.equal(protocol, 'spdy');\n      socket.on('data', function (chunk) {\n        assert.equal(chunk.toString('hex'), '80030001');\n        done();\n      });\n    });\n    pair.write(new Buffer('80030001', 'hex'));\n  });\n  it('should select handler using two packets', function (done) {\n    var filter = hose.create(socket, function filter(data, callback) {\n      if (data.length < 2) return;\n      if (data[0] === 0x80 && data[1] === 0x03) return callback(null, 'spdy');else return callback(null, 'http');\n    });\n    filter.on('select', function (protocol, socket) {\n      assert.equal(protocol, 'spdy');\n      socket.on('data', function (chunk) {\n        assert.equal(chunk.toString('hex'), '80030001');\n        done();\n      });\n    });\n    pair.write(new Buffer('80', 'hex'));\n    setTimeout(function () {\n      pair.write(new Buffer('030001', 'hex'));\n    }, 20);\n  });\n  it('should read excessive packets', function (done) {\n    var filter = hose.create(socket, function filter(data, callback) {\n      if (data.length < 2) return;\n      if (data[0] === 0x61 && data[1] === 0x62) return callback(null, 'spdy');else return callback(null, 'http');\n    });\n    filter.on('select', function (protocol, socket) {\n      assert.equal(protocol, 'spdy');\n      fixtures.expectData(socket, 'abcd', done);\n    });\n    pair.write('a');\n    setTimeout(function () {\n      pair.write('b');\n      setTimeout(function () {\n        pair.end('cd');\n      }, 20);\n    }, 20);\n  });\n  it('should re-emit errors', function (done) {\n    var filter = hose.create(socket, function filter(data, callback) {\n      if (data.length < 2) return;\n      if (data[0] === 0x61 && data[1] === 0x62) return callback(null, 'spdy');else return callback(null, 'http');\n    });\n    filter.on('error', function (err) {\n      done();\n    });\n    socket.emit('error', new Error(123));\n  });\n});","map":{"version":3,"names":["assert","require","net","streamPair","thing","Buffer","fixtures","hose","describe","pair","socket","beforeEach","create","handle","other","Socket","readable","writable","it","done","filter","data","callback","on","protocol","equal","chunk","toString","write","length","setTimeout","expectData","end","err","emit","Error"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/select-hose/test/api-test.js"],"sourcesContent":["var assert = require('assert');\nvar net = require('net');\nvar streamPair = require('stream-pair');\nvar thing = require('handle-thing');\nvar Buffer = require('buffer').Buffer;\n\nvar fixtures = require('./fixtures');\n\nvar hose = require('../');\n\ndescribe('Select Hose', function() {\n  var pair;\n  var socket;\n  beforeEach(function() {\n    pair = streamPair.create();\n\n    var handle = thing.create(pair.other);\n    socket = new net.Socket({ handle: handle });\n\n    // For v0.8\n    socket.readable = true;\n    socket.writable = true;\n  });\n\n  it('should select handler using first byte', function(done) {\n    var filter = hose.create(socket, function filter(data, callback) {\n      if (data[0] === 0x80)\n        return callback(null, 'spdy');\n      else\n        return callback(null, 'http');\n    });\n\n    filter.on('select', function(protocol, socket) {\n      assert.equal(protocol, 'spdy');\n      socket.on('data', function(chunk) {\n        assert.equal(chunk.toString('hex'), '80030001');\n        done();\n      });\n    });\n\n    pair.write(new Buffer('80030001', 'hex'));\n  });\n\n  it('should select handler using two packets', function(done) {\n    var filter = hose.create(socket, function filter(data, callback) {\n      if (data.length < 2)\n        return;\n\n      if (data[0] === 0x80 && data[1] === 0x03)\n        return callback(null, 'spdy');\n      else\n        return callback(null, 'http');\n    });\n\n    filter.on('select', function(protocol, socket) {\n      assert.equal(protocol, 'spdy');\n      socket.on('data', function(chunk) {\n        assert.equal(chunk.toString('hex'), '80030001');\n        done();\n      });\n    });\n\n    pair.write(new Buffer('80', 'hex'));\n    setTimeout(function() {\n      pair.write(new Buffer('030001', 'hex'));\n    }, 20);\n  });\n\n  it('should read excessive packets', function(done) {\n    var filter = hose.create(socket, function filter(data, callback) {\n      if (data.length < 2)\n        return;\n\n      if (data[0] === 0x61 && data[1] === 0x62)\n        return callback(null, 'spdy');\n      else\n        return callback(null, 'http');\n    });\n\n    filter.on('select', function(protocol, socket) {\n      assert.equal(protocol, 'spdy');\n      fixtures.expectData(socket, 'abcd', done);\n    });\n\n    pair.write('a');\n    setTimeout(function() {\n      pair.write('b');\n      setTimeout(function() {\n        pair.end('cd');\n      }, 20);\n    }, 20);\n  });\n\n  it('should re-emit errors', function(done) {\n    var filter = hose.create(socket, function filter(data, callback) {\n      if (data.length < 2)\n        return;\n\n      if (data[0] === 0x61 && data[1] === 0x62)\n        return callback(null, 'spdy');\n      else\n        return callback(null, 'http');\n    });\n\n    filter.on('error', function(err) {\n      done();\n    });\n\n    socket.emit('error', new Error(123));\n  });\n});\n"],"mappings":"AAAA,IAAIA,MAAM,GAAGC,OAAO,CAAC,QAAD,CAApB;;AACA,IAAIC,GAAG,GAAGD,OAAO,CAAC,KAAD,CAAjB;;AACA,IAAIE,UAAU,GAAGF,OAAO,CAAC,aAAD,CAAxB;;AACA,IAAIG,KAAK,GAAGH,OAAO,CAAC,cAAD,CAAnB;;AACA,IAAII,MAAM,GAAGJ,OAAO,CAAC,QAAD,CAAP,CAAkBI,MAA/B;;AAEA,IAAIC,QAAQ,GAAGL,OAAO,CAAC,YAAD,CAAtB;;AAEA,IAAIM,IAAI,GAAGN,OAAO,CAAC,KAAD,CAAlB;;AAEAO,QAAQ,CAAC,aAAD,EAAgB,YAAW;EACjC,IAAIC,IAAJ;EACA,IAAIC,MAAJ;EACAC,UAAU,CAAC,YAAW;IACpBF,IAAI,GAAGN,UAAU,CAACS,MAAX,EAAP;IAEA,IAAIC,MAAM,GAAGT,KAAK,CAACQ,MAAN,CAAaH,IAAI,CAACK,KAAlB,CAAb;IACAJ,MAAM,GAAG,IAAIR,GAAG,CAACa,MAAR,CAAe;MAAEF,MAAM,EAAEA;IAAV,CAAf,CAAT,CAJoB,CAMpB;;IACAH,MAAM,CAACM,QAAP,GAAkB,IAAlB;IACAN,MAAM,CAACO,QAAP,GAAkB,IAAlB;EACD,CATS,CAAV;EAWAC,EAAE,CAAC,wCAAD,EAA2C,UAASC,IAAT,EAAe;IAC1D,IAAIC,MAAM,GAAGb,IAAI,CAACK,MAAL,CAAYF,MAAZ,EAAoB,SAASU,MAAT,CAAgBC,IAAhB,EAAsBC,QAAtB,EAAgC;MAC/D,IAAID,IAAI,CAAC,CAAD,CAAJ,KAAY,IAAhB,EACE,OAAOC,QAAQ,CAAC,IAAD,EAAO,MAAP,CAAf,CADF,KAGE,OAAOA,QAAQ,CAAC,IAAD,EAAO,MAAP,CAAf;IACH,CALY,CAAb;IAOAF,MAAM,CAACG,EAAP,CAAU,QAAV,EAAoB,UAASC,QAAT,EAAmBd,MAAnB,EAA2B;MAC7CV,MAAM,CAACyB,KAAP,CAAaD,QAAb,EAAuB,MAAvB;MACAd,MAAM,CAACa,EAAP,CAAU,MAAV,EAAkB,UAASG,KAAT,EAAgB;QAChC1B,MAAM,CAACyB,KAAP,CAAaC,KAAK,CAACC,QAAN,CAAe,KAAf,CAAb,EAAoC,UAApC;QACAR,IAAI;MACL,CAHD;IAID,CAND;IAQAV,IAAI,CAACmB,KAAL,CAAW,IAAIvB,MAAJ,CAAW,UAAX,EAAuB,KAAvB,CAAX;EACD,CAjBC,CAAF;EAmBAa,EAAE,CAAC,yCAAD,EAA4C,UAASC,IAAT,EAAe;IAC3D,IAAIC,MAAM,GAAGb,IAAI,CAACK,MAAL,CAAYF,MAAZ,EAAoB,SAASU,MAAT,CAAgBC,IAAhB,EAAsBC,QAAtB,EAAgC;MAC/D,IAAID,IAAI,CAACQ,MAAL,GAAc,CAAlB,EACE;MAEF,IAAIR,IAAI,CAAC,CAAD,CAAJ,KAAY,IAAZ,IAAoBA,IAAI,CAAC,CAAD,CAAJ,KAAY,IAApC,EACE,OAAOC,QAAQ,CAAC,IAAD,EAAO,MAAP,CAAf,CADF,KAGE,OAAOA,QAAQ,CAAC,IAAD,EAAO,MAAP,CAAf;IACH,CARY,CAAb;IAUAF,MAAM,CAACG,EAAP,CAAU,QAAV,EAAoB,UAASC,QAAT,EAAmBd,MAAnB,EAA2B;MAC7CV,MAAM,CAACyB,KAAP,CAAaD,QAAb,EAAuB,MAAvB;MACAd,MAAM,CAACa,EAAP,CAAU,MAAV,EAAkB,UAASG,KAAT,EAAgB;QAChC1B,MAAM,CAACyB,KAAP,CAAaC,KAAK,CAACC,QAAN,CAAe,KAAf,CAAb,EAAoC,UAApC;QACAR,IAAI;MACL,CAHD;IAID,CAND;IAQAV,IAAI,CAACmB,KAAL,CAAW,IAAIvB,MAAJ,CAAW,IAAX,EAAiB,KAAjB,CAAX;IACAyB,UAAU,CAAC,YAAW;MACpBrB,IAAI,CAACmB,KAAL,CAAW,IAAIvB,MAAJ,CAAW,QAAX,EAAqB,KAArB,CAAX;IACD,CAFS,EAEP,EAFO,CAAV;EAGD,CAvBC,CAAF;EAyBAa,EAAE,CAAC,+BAAD,EAAkC,UAASC,IAAT,EAAe;IACjD,IAAIC,MAAM,GAAGb,IAAI,CAACK,MAAL,CAAYF,MAAZ,EAAoB,SAASU,MAAT,CAAgBC,IAAhB,EAAsBC,QAAtB,EAAgC;MAC/D,IAAID,IAAI,CAACQ,MAAL,GAAc,CAAlB,EACE;MAEF,IAAIR,IAAI,CAAC,CAAD,CAAJ,KAAY,IAAZ,IAAoBA,IAAI,CAAC,CAAD,CAAJ,KAAY,IAApC,EACE,OAAOC,QAAQ,CAAC,IAAD,EAAO,MAAP,CAAf,CADF,KAGE,OAAOA,QAAQ,CAAC,IAAD,EAAO,MAAP,CAAf;IACH,CARY,CAAb;IAUAF,MAAM,CAACG,EAAP,CAAU,QAAV,EAAoB,UAASC,QAAT,EAAmBd,MAAnB,EAA2B;MAC7CV,MAAM,CAACyB,KAAP,CAAaD,QAAb,EAAuB,MAAvB;MACAlB,QAAQ,CAACyB,UAAT,CAAoBrB,MAApB,EAA4B,MAA5B,EAAoCS,IAApC;IACD,CAHD;IAKAV,IAAI,CAACmB,KAAL,CAAW,GAAX;IACAE,UAAU,CAAC,YAAW;MACpBrB,IAAI,CAACmB,KAAL,CAAW,GAAX;MACAE,UAAU,CAAC,YAAW;QACpBrB,IAAI,CAACuB,GAAL,CAAS,IAAT;MACD,CAFS,EAEP,EAFO,CAAV;IAGD,CALS,EAKP,EALO,CAAV;EAMD,CAvBC,CAAF;EAyBAd,EAAE,CAAC,uBAAD,EAA0B,UAASC,IAAT,EAAe;IACzC,IAAIC,MAAM,GAAGb,IAAI,CAACK,MAAL,CAAYF,MAAZ,EAAoB,SAASU,MAAT,CAAgBC,IAAhB,EAAsBC,QAAtB,EAAgC;MAC/D,IAAID,IAAI,CAACQ,MAAL,GAAc,CAAlB,EACE;MAEF,IAAIR,IAAI,CAAC,CAAD,CAAJ,KAAY,IAAZ,IAAoBA,IAAI,CAAC,CAAD,CAAJ,KAAY,IAApC,EACE,OAAOC,QAAQ,CAAC,IAAD,EAAO,MAAP,CAAf,CADF,KAGE,OAAOA,QAAQ,CAAC,IAAD,EAAO,MAAP,CAAf;IACH,CARY,CAAb;IAUAF,MAAM,CAACG,EAAP,CAAU,OAAV,EAAmB,UAASU,GAAT,EAAc;MAC/Bd,IAAI;IACL,CAFD;IAIAT,MAAM,CAACwB,IAAP,CAAY,OAAZ,EAAqB,IAAIC,KAAJ,CAAU,GAAV,CAArB;EACD,CAhBC,CAAF;AAiBD,CApGO,CAAR"},"metadata":{},"sourceType":"script"}