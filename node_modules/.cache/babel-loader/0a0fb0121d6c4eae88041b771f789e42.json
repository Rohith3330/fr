{"ast":null,"code":"import fs from 'fs';\nimport path from 'path';\nimport resolve from 'resolve';\nimport detective from 'detective';\n\nfunction createModule(file) {\n  const source = fs.readFileSync(file, 'utf-8');\n  const requires = detective(source);\n  return {\n    file,\n    requires\n  };\n}\n\nexport default function getModuleDependencies(entryFile) {\n  const rootModule = createModule(entryFile);\n  const modules = [rootModule]; // Iterate over the modules, even when new\n  // ones are being added\n\n  for (const mdl of modules) {\n    mdl.requires.filter(dep => {\n      // Only track local modules, not node_modules\n      return dep.startsWith('./') || dep.startsWith('../');\n    }).forEach(dep => {\n      try {\n        const basedir = path.dirname(mdl.file);\n        const depPath = resolve.sync(dep, {\n          basedir\n        });\n        const depModule = createModule(depPath);\n        modules.push(depModule);\n      } catch (_err) {// eslint-disable-next-line no-empty\n      }\n    });\n  }\n\n  return modules;\n}","map":{"version":3,"names":["fs","path","resolve","detective","createModule","file","source","readFileSync","requires","getModuleDependencies","entryFile","rootModule","modules","mdl","filter","dep","startsWith","forEach","basedir","dirname","depPath","sync","depModule","push","_err"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/tailwindcss/src/lib/getModuleDependencies.js"],"sourcesContent":["import fs from 'fs'\nimport path from 'path'\nimport resolve from 'resolve'\nimport detective from 'detective'\n\nfunction createModule(file) {\n  const source = fs.readFileSync(file, 'utf-8')\n  const requires = detective(source)\n\n  return { file, requires }\n}\n\nexport default function getModuleDependencies(entryFile) {\n  const rootModule = createModule(entryFile)\n  const modules = [rootModule]\n\n  // Iterate over the modules, even when new\n  // ones are being added\n  for (const mdl of modules) {\n    mdl.requires\n      .filter((dep) => {\n        // Only track local modules, not node_modules\n        return dep.startsWith('./') || dep.startsWith('../')\n      })\n      .forEach((dep) => {\n        try {\n          const basedir = path.dirname(mdl.file)\n          const depPath = resolve.sync(dep, { basedir })\n          const depModule = createModule(depPath)\n\n          modules.push(depModule)\n        } catch (_err) {\n          // eslint-disable-next-line no-empty\n        }\n      })\n  }\n\n  return modules\n}\n"],"mappings":"AAAA,OAAOA,EAAP,MAAe,IAAf;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,OAAP,MAAoB,SAApB;AACA,OAAOC,SAAP,MAAsB,WAAtB;;AAEA,SAASC,YAAT,CAAsBC,IAAtB,EAA4B;EAC1B,MAAMC,MAAM,GAAGN,EAAE,CAACO,YAAH,CAAgBF,IAAhB,EAAsB,OAAtB,CAAf;EACA,MAAMG,QAAQ,GAAGL,SAAS,CAACG,MAAD,CAA1B;EAEA,OAAO;IAAED,IAAF;IAAQG;EAAR,CAAP;AACD;;AAED,eAAe,SAASC,qBAAT,CAA+BC,SAA/B,EAA0C;EACvD,MAAMC,UAAU,GAAGP,YAAY,CAACM,SAAD,CAA/B;EACA,MAAME,OAAO,GAAG,CAACD,UAAD,CAAhB,CAFuD,CAIvD;EACA;;EACA,KAAK,MAAME,GAAX,IAAkBD,OAAlB,EAA2B;IACzBC,GAAG,CAACL,QAAJ,CACGM,MADH,CACWC,GAAD,IAAS;MACf;MACA,OAAOA,GAAG,CAACC,UAAJ,CAAe,IAAf,KAAwBD,GAAG,CAACC,UAAJ,CAAe,KAAf,CAA/B;IACD,CAJH,EAKGC,OALH,CAKYF,GAAD,IAAS;MAChB,IAAI;QACF,MAAMG,OAAO,GAAGjB,IAAI,CAACkB,OAAL,CAAaN,GAAG,CAACR,IAAjB,CAAhB;QACA,MAAMe,OAAO,GAAGlB,OAAO,CAACmB,IAAR,CAAaN,GAAb,EAAkB;UAAEG;QAAF,CAAlB,CAAhB;QACA,MAAMI,SAAS,GAAGlB,YAAY,CAACgB,OAAD,CAA9B;QAEAR,OAAO,CAACW,IAAR,CAAaD,SAAb;MACD,CAND,CAME,OAAOE,IAAP,EAAa,CACb;MACD;IACF,CAfH;EAgBD;;EAED,OAAOZ,OAAP;AACD"},"metadata":{},"sourceType":"module"}