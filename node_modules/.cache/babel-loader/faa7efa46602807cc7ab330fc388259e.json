{"ast":null,"code":"/**\n * @license\n * Copyright 2022 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { RaggedGather } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\nfunction raggedGather_(paramsNestedSplits, paramsDenseValues, indices, outputRaggedRank) {\n  var $paramsNestedSplits = paramsNestedSplits.map(function (t, i) {\n    return convertToTensor(t, \"tensors\".concat(i), 'raggedGather', 'int32');\n  });\n  var $paramsDenseValues = convertToTensor(paramsDenseValues, 'paramsDenseValues', 'raggedGather');\n  var $indices = convertToTensor(indices, 'indices', 'raggedGather', 'int32');\n  var inputs = {\n    paramsNestedSplits: $paramsNestedSplits,\n    paramsDenseValues: $paramsDenseValues,\n    indices: $indices\n  };\n  var attrs = {\n    outputRaggedRank: outputRaggedRank\n  };\n  var result = ENGINE.runKernel(RaggedGather, inputs, attrs);\n  return {\n    outputNestedSplits: result.slice(0, result.length - 1),\n    outputDenseValues: result[result.length - 1]\n  };\n}\nexport var raggedGather = op({\n  raggedGather_: raggedGather_\n});","map":null,"metadata":{},"sourceType":"module"}