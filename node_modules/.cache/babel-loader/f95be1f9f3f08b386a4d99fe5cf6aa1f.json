{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _default = (context, report) => {\n  const sourceCode = context.getSourceCode();\n  return typeCastExpression => {\n    report({\n      colon: sourceCode.getFirstToken(typeCastExpression.typeAnnotation),\n      node: typeCastExpression,\n      type: 'type cast'\n    });\n  };\n};\n\nexports.default = _default;\nmodule.exports = exports.default;","map":{"version":3,"names":["Object","defineProperty","exports","value","default","_default","context","report","sourceCode","getSourceCode","typeCastExpression","colon","getFirstToken","typeAnnotation","node","type","module"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/eslint-plugin-flowtype/dist/rules/typeColonSpacing/evaluateTypeCastExpression.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _default = (context, report) => {\n  const sourceCode = context.getSourceCode();\n  return typeCastExpression => {\n    report({\n      colon: sourceCode.getFirstToken(typeCastExpression.typeAnnotation),\n      node: typeCastExpression,\n      type: 'type cast'\n    });\n  };\n};\n\nexports.default = _default;\nmodule.exports = exports.default;"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAC3CC,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAIC,QAAQ,GAAG,CAACC,OAAD,EAAUC,MAAV,KAAqB;EAClC,MAAMC,UAAU,GAAGF,OAAO,CAACG,aAAR,EAAnB;EACA,OAAOC,kBAAkB,IAAI;IAC3BH,MAAM,CAAC;MACLI,KAAK,EAAEH,UAAU,CAACI,aAAX,CAAyBF,kBAAkB,CAACG,cAA5C,CADF;MAELC,IAAI,EAAEJ,kBAFD;MAGLK,IAAI,EAAE;IAHD,CAAD,CAAN;EAKD,CAND;AAOD,CATD;;AAWAb,OAAO,CAACE,OAAR,GAAkBC,QAAlB;AACAW,MAAM,CAACd,OAAP,GAAiBA,OAAO,CAACE,OAAzB"},"metadata":{},"sourceType":"script"}