{"ast":null,"code":"/**\n * @fileoverview TBD\n */\n'use strict';\n\nconst docsUrl = require('../util/docsUrl');\n\nconst isCreateElement = require('../util/isCreateElement');\n\nconst report = require('../util/report');\n\nconst messages = {\n  attributeMissing: 'An iframe element is missing a sandbox attribute',\n  invalidValue: 'An iframe element defines a sandbox attribute with invalid value \"{{ value }}\"',\n  invalidCombination: 'An iframe element defines a sandbox attribute with both allow-scripts and allow-same-origin which is invalid'\n};\nconst ALLOWED_VALUES = [// From https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe#attr-sandbox\n'', 'allow-downloads-without-user-activation', 'allow-downloads', 'allow-forms', 'allow-modals', 'allow-orientation-lock', 'allow-pointer-lock', 'allow-popups', 'allow-popups-to-escape-sandbox', 'allow-presentation', 'allow-same-origin', 'allow-scripts', 'allow-storage-access-by-user-activation', 'allow-top-navigation', 'allow-top-navigation-by-user-activation'];\n\nfunction validateSandboxAttribute(context, node, attribute) {\n  if (typeof attribute !== 'string') {\n    // Only string literals are supported for now\n    return;\n  }\n\n  const values = attribute.split(' ');\n  let allowScripts = false;\n  let allowSameOrigin = false;\n  values.forEach(attributeValue => {\n    const trimmedAttributeValue = attributeValue.trim();\n\n    if (ALLOWED_VALUES.indexOf(trimmedAttributeValue) === -1) {\n      report(context, messages.invalidValue, 'invalidValue', {\n        node,\n        data: {\n          value: trimmedAttributeValue\n        }\n      });\n    }\n\n    if (trimmedAttributeValue === 'allow-scripts') {\n      allowScripts = true;\n    }\n\n    if (trimmedAttributeValue === 'allow-same-origin') {\n      allowSameOrigin = true;\n    }\n  });\n\n  if (allowScripts && allowSameOrigin) {\n    report(context, messages.invalidCombination, 'invalidCombination', {\n      node\n    });\n  }\n}\n\nfunction checkAttributes(context, node) {\n  let sandboxAttributeFound = false;\n  node.attributes.forEach(attribute => {\n    if (attribute.type === 'JSXAttribute' && attribute.name && attribute.name.type === 'JSXIdentifier' && attribute.name.name === 'sandbox') {\n      sandboxAttributeFound = true;\n\n      if (attribute.value && attribute.value.type === 'Literal' && attribute.value.value) {\n        validateSandboxAttribute(context, node, attribute.value.value);\n      }\n    }\n  });\n\n  if (!sandboxAttributeFound) {\n    report(context, messages.attributeMissing, 'attributeMissing', {\n      node\n    });\n  }\n}\n\nfunction checkProps(context, node) {\n  let sandboxAttributeFound = false;\n\n  if (node.arguments.length > 1) {\n    const props = node.arguments[1];\n    const sandboxProp = props.properties && props.properties.find(x => x.type === 'Property' && x.key.name === 'sandbox');\n\n    if (sandboxProp) {\n      sandboxAttributeFound = true;\n\n      if (sandboxProp.value && sandboxProp.value.type === 'Literal' && sandboxProp.value.value) {\n        validateSandboxAttribute(context, node, sandboxProp.value.value);\n      }\n    }\n  }\n\n  if (!sandboxAttributeFound) {\n    report(context, messages.attributeMissing, 'attributeMissing', {\n      node\n    });\n  }\n}\n\nmodule.exports = {\n  meta: {\n    docs: {\n      description: 'Enforce sandbox attribute on iframe elements',\n      category: 'Best Practices',\n      recommended: false,\n      url: docsUrl('iframe-missing-sandbox')\n    },\n    schema: [],\n    messages\n  },\n\n  create(context) {\n    return {\n      'JSXOpeningElement[name.name=\"iframe\"]'(node) {\n        checkAttributes(context, node);\n      },\n\n      CallExpression(node) {\n        if (isCreateElement(node, context) && node.arguments && node.arguments.length > 0) {\n          const tag = node.arguments[0];\n\n          if (tag.type === 'Literal' && tag.value === 'iframe') {\n            checkProps(context, node);\n          }\n        }\n      }\n\n    };\n  }\n\n};","map":{"version":3,"names":["docsUrl","require","isCreateElement","report","messages","attributeMissing","invalidValue","invalidCombination","ALLOWED_VALUES","validateSandboxAttribute","context","node","attribute","values","split","allowScripts","allowSameOrigin","forEach","attributeValue","trimmedAttributeValue","trim","indexOf","data","value","checkAttributes","sandboxAttributeFound","attributes","type","name","checkProps","arguments","length","props","sandboxProp","properties","find","x","key","module","exports","meta","docs","description","category","recommended","url","schema","create","CallExpression","tag"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/eslint-plugin-react/lib/rules/iframe-missing-sandbox.js"],"sourcesContent":["/**\n * @fileoverview TBD\n */\n\n'use strict';\n\nconst docsUrl = require('../util/docsUrl');\nconst isCreateElement = require('../util/isCreateElement');\nconst report = require('../util/report');\n\nconst messages = {\n  attributeMissing: 'An iframe element is missing a sandbox attribute',\n  invalidValue: 'An iframe element defines a sandbox attribute with invalid value \"{{ value }}\"',\n  invalidCombination: 'An iframe element defines a sandbox attribute with both allow-scripts and allow-same-origin which is invalid',\n};\n\nconst ALLOWED_VALUES = [\n  // From https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe#attr-sandbox\n  '',\n  'allow-downloads-without-user-activation',\n  'allow-downloads',\n  'allow-forms',\n  'allow-modals',\n  'allow-orientation-lock',\n  'allow-pointer-lock',\n  'allow-popups',\n  'allow-popups-to-escape-sandbox',\n  'allow-presentation',\n  'allow-same-origin',\n  'allow-scripts',\n  'allow-storage-access-by-user-activation',\n  'allow-top-navigation',\n  'allow-top-navigation-by-user-activation',\n];\n\nfunction validateSandboxAttribute(context, node, attribute) {\n  if (typeof attribute !== 'string') {\n    // Only string literals are supported for now\n    return;\n  }\n  const values = attribute.split(' ');\n  let allowScripts = false;\n  let allowSameOrigin = false;\n  values.forEach((attributeValue) => {\n    const trimmedAttributeValue = attributeValue.trim();\n    if (ALLOWED_VALUES.indexOf(trimmedAttributeValue) === -1) {\n      report(context, messages.invalidValue, 'invalidValue', {\n        node,\n        data: {\n          value: trimmedAttributeValue,\n        },\n      });\n    }\n    if (trimmedAttributeValue === 'allow-scripts') {\n      allowScripts = true;\n    }\n    if (trimmedAttributeValue === 'allow-same-origin') {\n      allowSameOrigin = true;\n    }\n  });\n  if (allowScripts && allowSameOrigin) {\n    report(context, messages.invalidCombination, 'invalidCombination', {\n      node,\n    });\n  }\n}\n\nfunction checkAttributes(context, node) {\n  let sandboxAttributeFound = false;\n  node.attributes.forEach((attribute) => {\n    if (attribute.type === 'JSXAttribute'\n        && attribute.name\n        && attribute.name.type === 'JSXIdentifier'\n        && attribute.name.name === 'sandbox'\n    ) {\n      sandboxAttributeFound = true;\n      if (\n        attribute.value\n        && attribute.value.type === 'Literal'\n        && attribute.value.value\n      ) {\n        validateSandboxAttribute(context, node, attribute.value.value);\n      }\n    }\n  });\n  if (!sandboxAttributeFound) {\n    report(context, messages.attributeMissing, 'attributeMissing', {\n      node,\n    });\n  }\n}\n\nfunction checkProps(context, node) {\n  let sandboxAttributeFound = false;\n  if (node.arguments.length > 1) {\n    const props = node.arguments[1];\n    const sandboxProp = props.properties && props.properties.find((x) => x.type === 'Property' && x.key.name === 'sandbox');\n    if (sandboxProp) {\n      sandboxAttributeFound = true;\n      if (sandboxProp.value && sandboxProp.value.type === 'Literal' && sandboxProp.value.value) {\n        validateSandboxAttribute(context, node, sandboxProp.value.value);\n      }\n    }\n  }\n  if (!sandboxAttributeFound) {\n    report(context, messages.attributeMissing, 'attributeMissing', {\n      node,\n    });\n  }\n}\n\nmodule.exports = {\n  meta: {\n    docs: {\n      description: 'Enforce sandbox attribute on iframe elements',\n      category: 'Best Practices',\n      recommended: false,\n      url: docsUrl('iframe-missing-sandbox'),\n    },\n\n    schema: [],\n\n    messages,\n  },\n\n  create(context) {\n    return {\n      'JSXOpeningElement[name.name=\"iframe\"]'(node) {\n        checkAttributes(context, node);\n      },\n\n      CallExpression(node) {\n        if (isCreateElement(node, context) && node.arguments && node.arguments.length > 0) {\n          const tag = node.arguments[0];\n          if (tag.type === 'Literal' && tag.value === 'iframe') {\n            checkProps(context, node);\n          }\n        }\n      },\n    };\n  },\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}