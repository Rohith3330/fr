{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _babel = _interopRequireWildcard(require(\"@babel/core\"));\n\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function (nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\n\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache(nodeInterop);\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nconst {\n  types: t\n} = _babel.default || _babel;\n\nclass ImportsCache {\n  constructor(resolver) {\n    this._imports = new WeakMap();\n    this._anonymousImports = new WeakMap();\n    this._lastImports = new WeakMap();\n    this._resolver = resolver;\n  }\n\n  storeAnonymous(programPath, url, // eslint-disable-next-line no-undef\n  getVal) {\n    const key = this._normalizeKey(programPath, url);\n\n    const imports = this._ensure(this._anonymousImports, programPath, Set);\n\n    if (imports.has(key)) return;\n    const node = getVal(programPath.node.sourceType === \"script\", t.stringLiteral(this._resolver(url)));\n    imports.add(key);\n\n    this._injectImport(programPath, node);\n  }\n\n  storeNamed(programPath, url, name, getVal) {\n    const key = this._normalizeKey(programPath, url, name);\n\n    const imports = this._ensure(this._imports, programPath, Map);\n\n    if (!imports.has(key)) {\n      const {\n        node,\n        name: id\n      } = getVal(programPath.node.sourceType === \"script\", t.stringLiteral(this._resolver(url)), t.identifier(name));\n      imports.set(key, id);\n\n      this._injectImport(programPath, node);\n    }\n\n    return t.identifier(imports.get(key));\n  }\n\n  _injectImport(programPath, node) {\n    const lastImport = this._lastImports.get(programPath);\n\n    let newNodes;\n\n    if (lastImport && lastImport.node && // Sometimes the AST is modified and the \"last import\"\n    // we have has been replaced\n    lastImport.parent === programPath.node && lastImport.container === programPath.node.body) {\n      newNodes = lastImport.insertAfter(node);\n    } else {\n      newNodes = programPath.unshiftContainer(\"body\", node);\n    }\n\n    const newNode = newNodes[newNodes.length - 1];\n\n    this._lastImports.set(programPath, newNode);\n    /*\n    let lastImport;\n     programPath.get(\"body\").forEach(path => {\n      if (path.isImportDeclaration()) lastImport = path;\n      if (\n        path.isExpressionStatement() &&\n        isRequireCall(path.get(\"expression\"))\n      ) {\n        lastImport = path;\n      }\n      if (\n        path.isVariableDeclaration() &&\n        path.get(\"declarations\").length === 1 &&\n        (isRequireCall(path.get(\"declarations.0.init\")) ||\n          (path.get(\"declarations.0.init\").isMemberExpression() &&\n            isRequireCall(path.get(\"declarations.0.init.object\"))))\n      ) {\n        lastImport = path;\n      }\n    });*/\n\n  }\n\n  _ensure(map, programPath, Collection) {\n    let collection = map.get(programPath);\n\n    if (!collection) {\n      collection = new Collection();\n      map.set(programPath, collection);\n    }\n\n    return collection;\n  }\n\n  _normalizeKey(programPath, url) {\n    let name = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"\";\n    const {\n      sourceType\n    } = programPath.node; // If we rely on the imported binding (the \"name\" parameter), we also need to cache\n    // based on the sourceType. This is because the module transforms change the names\n    // of the import variables.\n\n    return `${name && sourceType}::${url}::${name}`;\n  }\n\n}\n\nexports.default = ImportsCache;","map":{"version":3,"names":["exports","__esModule","default","_babel","_interopRequireWildcard","require","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","types","t","ImportsCache","constructor","resolver","_imports","_anonymousImports","_lastImports","_resolver","storeAnonymous","programPath","url","getVal","_normalizeKey","imports","_ensure","Set","node","sourceType","stringLiteral","add","_injectImport","storeNamed","name","Map","id","identifier","lastImport","newNodes","parent","container","body","insertAfter","unshiftContainer","newNode","length","map","Collection","collection"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/@babel/helper-define-polyfill-provider/lib/imports-cache.js"],"sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _babel = _interopRequireWildcard(require(\"@babel/core\"));\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nconst {\n  types: t\n} = _babel.default || _babel;\n\nclass ImportsCache {\n  constructor(resolver) {\n    this._imports = new WeakMap();\n    this._anonymousImports = new WeakMap();\n    this._lastImports = new WeakMap();\n    this._resolver = resolver;\n  }\n\n  storeAnonymous(programPath, url, // eslint-disable-next-line no-undef\n  getVal) {\n    const key = this._normalizeKey(programPath, url);\n\n    const imports = this._ensure(this._anonymousImports, programPath, Set);\n\n    if (imports.has(key)) return;\n    const node = getVal(programPath.node.sourceType === \"script\", t.stringLiteral(this._resolver(url)));\n    imports.add(key);\n\n    this._injectImport(programPath, node);\n  }\n\n  storeNamed(programPath, url, name, getVal) {\n    const key = this._normalizeKey(programPath, url, name);\n\n    const imports = this._ensure(this._imports, programPath, Map);\n\n    if (!imports.has(key)) {\n      const {\n        node,\n        name: id\n      } = getVal(programPath.node.sourceType === \"script\", t.stringLiteral(this._resolver(url)), t.identifier(name));\n      imports.set(key, id);\n\n      this._injectImport(programPath, node);\n    }\n\n    return t.identifier(imports.get(key));\n  }\n\n  _injectImport(programPath, node) {\n    const lastImport = this._lastImports.get(programPath);\n\n    let newNodes;\n\n    if (lastImport && lastImport.node && // Sometimes the AST is modified and the \"last import\"\n    // we have has been replaced\n    lastImport.parent === programPath.node && lastImport.container === programPath.node.body) {\n      newNodes = lastImport.insertAfter(node);\n    } else {\n      newNodes = programPath.unshiftContainer(\"body\", node);\n    }\n\n    const newNode = newNodes[newNodes.length - 1];\n\n    this._lastImports.set(programPath, newNode);\n    /*\n    let lastImport;\n     programPath.get(\"body\").forEach(path => {\n      if (path.isImportDeclaration()) lastImport = path;\n      if (\n        path.isExpressionStatement() &&\n        isRequireCall(path.get(\"expression\"))\n      ) {\n        lastImport = path;\n      }\n      if (\n        path.isVariableDeclaration() &&\n        path.get(\"declarations\").length === 1 &&\n        (isRequireCall(path.get(\"declarations.0.init\")) ||\n          (path.get(\"declarations.0.init\").isMemberExpression() &&\n            isRequireCall(path.get(\"declarations.0.init.object\"))))\n      ) {\n        lastImport = path;\n      }\n    });*/\n\n  }\n\n  _ensure(map, programPath, Collection) {\n    let collection = map.get(programPath);\n\n    if (!collection) {\n      collection = new Collection();\n      map.set(programPath, collection);\n    }\n\n    return collection;\n  }\n\n  _normalizeKey(programPath, url, name = \"\") {\n    const {\n      sourceType\n    } = programPath.node; // If we rely on the imported binding (the \"name\" parameter), we also need to cache\n    // based on the sourceType. This is because the module transforms change the names\n    // of the import variables.\n\n    return `${name && sourceType}::${url}::${name}`;\n  }\n\n}\n\nexports.default = ImportsCache;"],"mappings":"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"},"metadata":{},"sourceType":"script"}