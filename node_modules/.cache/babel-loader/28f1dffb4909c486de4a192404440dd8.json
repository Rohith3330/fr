{"ast":null,"code":"/**\n * @fileoverview Prevent direct mutation of this.state\n * @author David Petersen\n * @author Nicolas Fernandez <@burabure>\n */\n'use strict';\n\nconst Components = require('../util/Components');\n\nconst componentUtil = require('../util/componentUtil');\n\nconst docsUrl = require('../util/docsUrl');\n\nconst report = require('../util/report'); // ------------------------------------------------------------------------------\n// Rule Definition\n// ------------------------------------------------------------------------------\n\n\nconst messages = {\n  noDirectMutation: 'Do not mutate state directly. Use setState().'\n};\nmodule.exports = {\n  meta: {\n    docs: {\n      description: 'Disallow direct mutation of this.state',\n      category: 'Possible Errors',\n      recommended: true,\n      url: docsUrl('no-direct-mutation-state')\n    },\n    messages\n  },\n  create: Components.detect((context, components, utils) => {\n    /**\n     * Checks if the component is valid\n     * @param {Object} component The component to process\n     * @returns {Boolean} True if the component is valid, false if not.\n     */\n    function isValid(component) {\n      return Boolean(component && !component.mutateSetState);\n    }\n    /**\n     * Reports undeclared proptypes for a given component\n     * @param {Object} component The component to process\n     */\n\n\n    function reportMutations(component) {\n      let mutation;\n\n      for (let i = 0, j = component.mutations.length; i < j; i++) {\n        mutation = component.mutations[i];\n        report(context, messages.noDirectMutation, 'noDirectMutation', {\n          node: mutation\n        });\n      }\n    }\n    /**\n     * Walks through the MemberExpression to the top-most property.\n     * @param {Object} node The node to process\n     * @returns {Object} The outer-most MemberExpression\n     */\n\n\n    function getOuterMemberExpression(node) {\n      while (node.object && node.object.property) {\n        node = node.object;\n      }\n\n      return node;\n    }\n    /**\n     * Determine if we should currently ignore assignments in this component.\n     * @param {?Object} component The component to process\n     * @returns {Boolean} True if we should skip assignment checks.\n     */\n\n\n    function shouldIgnoreComponent(component) {\n      return !component || component.inConstructor && !component.inCallExpression;\n    } // --------------------------------------------------------------------------\n    // Public\n    // --------------------------------------------------------------------------\n\n\n    return {\n      MethodDefinition(node) {\n        if (node.kind === 'constructor') {\n          components.set(node, {\n            inConstructor: true\n          });\n        }\n      },\n\n      CallExpression(node) {\n        components.set(node, {\n          inCallExpression: true\n        });\n      },\n\n      AssignmentExpression(node) {\n        const component = components.get(utils.getParentComponent());\n\n        if (shouldIgnoreComponent(component) || !node.left || !node.left.object) {\n          return;\n        }\n\n        const item = getOuterMemberExpression(node.left);\n\n        if (componentUtil.isStateMemberExpression(item)) {\n          const mutations = component && component.mutations || [];\n          mutations.push(node.left.object);\n          components.set(node, {\n            mutateSetState: true,\n            mutations\n          });\n        }\n      },\n\n      UpdateExpression(node) {\n        const component = components.get(utils.getParentComponent());\n\n        if (shouldIgnoreComponent(component) || node.argument.type !== 'MemberExpression') {\n          return;\n        }\n\n        const item = getOuterMemberExpression(node.argument);\n\n        if (componentUtil.isStateMemberExpression(item)) {\n          const mutations = component && component.mutations || [];\n          mutations.push(item);\n          components.set(node, {\n            mutateSetState: true,\n            mutations\n          });\n        }\n      },\n\n      'CallExpression:exit'(node) {\n        components.set(node, {\n          inCallExpression: false\n        });\n      },\n\n      'MethodDefinition:exit'(node) {\n        if (node.kind === 'constructor') {\n          components.set(node, {\n            inConstructor: false\n          });\n        }\n      },\n\n      'Program:exit'() {\n        const list = components.list();\n        Object.keys(list).forEach(key => {\n          if (!isValid(list[key])) {\n            reportMutations(list[key]);\n          }\n        });\n      }\n\n    };\n  })\n};","map":{"version":3,"names":["Components","require","componentUtil","docsUrl","report","messages","noDirectMutation","module","exports","meta","docs","description","category","recommended","url","create","detect","context","components","utils","isValid","component","Boolean","mutateSetState","reportMutations","mutation","i","j","mutations","length","node","getOuterMemberExpression","object","property","shouldIgnoreComponent","inConstructor","inCallExpression","MethodDefinition","kind","set","CallExpression","AssignmentExpression","get","getParentComponent","left","item","isStateMemberExpression","push","UpdateExpression","argument","type","list","Object","keys","forEach","key"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/eslint-plugin-react/lib/rules/no-direct-mutation-state.js"],"sourcesContent":["/**\n * @fileoverview Prevent direct mutation of this.state\n * @author David Petersen\n * @author Nicolas Fernandez <@burabure>\n */\n\n'use strict';\n\nconst Components = require('../util/Components');\nconst componentUtil = require('../util/componentUtil');\nconst docsUrl = require('../util/docsUrl');\nconst report = require('../util/report');\n\n// ------------------------------------------------------------------------------\n// Rule Definition\n// ------------------------------------------------------------------------------\n\nconst messages = {\n  noDirectMutation: 'Do not mutate state directly. Use setState().',\n};\n\nmodule.exports = {\n  meta: {\n    docs: {\n      description: 'Disallow direct mutation of this.state',\n      category: 'Possible Errors',\n      recommended: true,\n      url: docsUrl('no-direct-mutation-state'),\n    },\n\n    messages,\n  },\n\n  create: Components.detect((context, components, utils) => {\n    /**\n     * Checks if the component is valid\n     * @param {Object} component The component to process\n     * @returns {Boolean} True if the component is valid, false if not.\n     */\n    function isValid(component) {\n      return Boolean(component && !component.mutateSetState);\n    }\n\n    /**\n     * Reports undeclared proptypes for a given component\n     * @param {Object} component The component to process\n     */\n    function reportMutations(component) {\n      let mutation;\n      for (let i = 0, j = component.mutations.length; i < j; i++) {\n        mutation = component.mutations[i];\n        report(context, messages.noDirectMutation, 'noDirectMutation', {\n          node: mutation,\n        });\n      }\n    }\n\n    /**\n     * Walks through the MemberExpression to the top-most property.\n     * @param {Object} node The node to process\n     * @returns {Object} The outer-most MemberExpression\n     */\n    function getOuterMemberExpression(node) {\n      while (node.object && node.object.property) {\n        node = node.object;\n      }\n      return node;\n    }\n\n    /**\n     * Determine if we should currently ignore assignments in this component.\n     * @param {?Object} component The component to process\n     * @returns {Boolean} True if we should skip assignment checks.\n     */\n    function shouldIgnoreComponent(component) {\n      return !component || (component.inConstructor && !component.inCallExpression);\n    }\n\n    // --------------------------------------------------------------------------\n    // Public\n    // --------------------------------------------------------------------------\n    return {\n      MethodDefinition(node) {\n        if (node.kind === 'constructor') {\n          components.set(node, {\n            inConstructor: true,\n          });\n        }\n      },\n\n      CallExpression(node) {\n        components.set(node, {\n          inCallExpression: true,\n        });\n      },\n\n      AssignmentExpression(node) {\n        const component = components.get(utils.getParentComponent());\n        if (shouldIgnoreComponent(component) || !node.left || !node.left.object) {\n          return;\n        }\n        const item = getOuterMemberExpression(node.left);\n        if (componentUtil.isStateMemberExpression(item)) {\n          const mutations = (component && component.mutations) || [];\n          mutations.push(node.left.object);\n          components.set(node, {\n            mutateSetState: true,\n            mutations,\n          });\n        }\n      },\n\n      UpdateExpression(node) {\n        const component = components.get(utils.getParentComponent());\n        if (shouldIgnoreComponent(component) || node.argument.type !== 'MemberExpression') {\n          return;\n        }\n        const item = getOuterMemberExpression(node.argument);\n        if (componentUtil.isStateMemberExpression(item)) {\n          const mutations = (component && component.mutations) || [];\n          mutations.push(item);\n          components.set(node, {\n            mutateSetState: true,\n            mutations,\n          });\n        }\n      },\n\n      'CallExpression:exit'(node) {\n        components.set(node, {\n          inCallExpression: false,\n        });\n      },\n\n      'MethodDefinition:exit'(node) {\n        if (node.kind === 'constructor') {\n          components.set(node, {\n            inConstructor: false,\n          });\n        }\n      },\n\n      'Program:exit'() {\n        const list = components.list();\n\n        Object.keys(list).forEach((key) => {\n          if (!isValid(list[key])) {\n            reportMutations(list[key]);\n          }\n        });\n      },\n    };\n  }),\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}