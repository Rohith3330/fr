{"ast":null,"code":"/**\n * @fileoverview Flag shouldComponentUpdate when extending PureComponent\n */\n'use strict';\n\nconst astUtil = require('../util/ast');\n\nconst componentUtil = require('../util/componentUtil');\n\nconst docsUrl = require('../util/docsUrl');\n\nconst report = require('../util/report'); // ------------------------------------------------------------------------------\n// Rule Definition\n// ------------------------------------------------------------------------------\n\n\nconst messages = {\n  noShouldCompUpdate: '{{component}} does not need shouldComponentUpdate when extending React.PureComponent.'\n};\nmodule.exports = {\n  meta: {\n    docs: {\n      description: 'Disallow usage of shouldComponentUpdate when extending React.PureComponent',\n      category: 'Possible Errors',\n      recommended: false,\n      url: docsUrl('no-redundant-should-component-update')\n    },\n    messages,\n    schema: []\n  },\n\n  create(context) {\n    /**\n     * Checks for shouldComponentUpdate property\n     * @param {ASTNode} node The AST node being checked.\n     * @returns {Boolean} Whether or not the property exists.\n     */\n    function hasShouldComponentUpdate(node) {\n      const properties = astUtil.getComponentProperties(node);\n      return properties.some(property => {\n        const name = astUtil.getPropertyName(property);\n        return name === 'shouldComponentUpdate';\n      });\n    }\n    /**\n     * Get name of node if available\n     * @param {ASTNode} node The AST node being checked.\n     * @return {String} The name of the node\n     */\n\n\n    function getNodeName(node) {\n      if (node.id) {\n        return node.id.name;\n      }\n\n      if (node.parent && node.parent.id) {\n        return node.parent.id.name;\n      }\n\n      return '';\n    }\n    /**\n     * Checks for violation of rule\n     * @param {ASTNode} node The AST node being checked.\n     */\n\n\n    function checkForViolation(node) {\n      if (componentUtil.isPureComponent(node, context)) {\n        const hasScu = hasShouldComponentUpdate(node);\n\n        if (hasScu) {\n          const className = getNodeName(node);\n          report(context, messages.noShouldCompUpdate, 'noShouldCompUpdate', {\n            node,\n            data: {\n              component: className\n            }\n          });\n        }\n      }\n    }\n\n    return {\n      ClassDeclaration: checkForViolation,\n      ClassExpression: checkForViolation\n    };\n  }\n\n};","map":{"version":3,"names":["astUtil","require","componentUtil","docsUrl","report","messages","noShouldCompUpdate","module","exports","meta","docs","description","category","recommended","url","schema","create","context","hasShouldComponentUpdate","node","properties","getComponentProperties","some","property","name","getPropertyName","getNodeName","id","parent","checkForViolation","isPureComponent","hasScu","className","data","component","ClassDeclaration","ClassExpression"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/eslint-plugin-react/lib/rules/no-redundant-should-component-update.js"],"sourcesContent":["/**\n * @fileoverview Flag shouldComponentUpdate when extending PureComponent\n */\n\n'use strict';\n\nconst astUtil = require('../util/ast');\nconst componentUtil = require('../util/componentUtil');\nconst docsUrl = require('../util/docsUrl');\nconst report = require('../util/report');\n\n// ------------------------------------------------------------------------------\n// Rule Definition\n// ------------------------------------------------------------------------------\n\nconst messages = {\n  noShouldCompUpdate: '{{component}} does not need shouldComponentUpdate when extending React.PureComponent.',\n};\n\nmodule.exports = {\n  meta: {\n    docs: {\n      description: 'Disallow usage of shouldComponentUpdate when extending React.PureComponent',\n      category: 'Possible Errors',\n      recommended: false,\n      url: docsUrl('no-redundant-should-component-update'),\n    },\n\n    messages,\n\n    schema: [],\n  },\n\n  create(context) {\n    /**\n     * Checks for shouldComponentUpdate property\n     * @param {ASTNode} node The AST node being checked.\n     * @returns {Boolean} Whether or not the property exists.\n     */\n    function hasShouldComponentUpdate(node) {\n      const properties = astUtil.getComponentProperties(node);\n      return properties.some((property) => {\n        const name = astUtil.getPropertyName(property);\n        return name === 'shouldComponentUpdate';\n      });\n    }\n\n    /**\n     * Get name of node if available\n     * @param {ASTNode} node The AST node being checked.\n     * @return {String} The name of the node\n     */\n    function getNodeName(node) {\n      if (node.id) {\n        return node.id.name;\n      }\n      if (node.parent && node.parent.id) {\n        return node.parent.id.name;\n      }\n      return '';\n    }\n\n    /**\n     * Checks for violation of rule\n     * @param {ASTNode} node The AST node being checked.\n     */\n    function checkForViolation(node) {\n      if (componentUtil.isPureComponent(node, context)) {\n        const hasScu = hasShouldComponentUpdate(node);\n        if (hasScu) {\n          const className = getNodeName(node);\n          report(context, messages.noShouldCompUpdate, 'noShouldCompUpdate', {\n            node,\n            data: {\n              component: className,\n            },\n          });\n        }\n      }\n    }\n\n    return {\n      ClassDeclaration: checkForViolation,\n      ClassExpression: checkForViolation,\n    };\n  },\n};\n"],"mappings":"AAAA;AACA;AACA;AAEA;;AAEA,MAAMA,OAAO,GAAGC,OAAO,CAAC,aAAD,CAAvB;;AACA,MAAMC,aAAa,GAAGD,OAAO,CAAC,uBAAD,CAA7B;;AACA,MAAME,OAAO,GAAGF,OAAO,CAAC,iBAAD,CAAvB;;AACA,MAAMG,MAAM,GAAGH,OAAO,CAAC,gBAAD,CAAtB,C,CAEA;AACA;AACA;;;AAEA,MAAMI,QAAQ,GAAG;EACfC,kBAAkB,EAAE;AADL,CAAjB;AAIAC,MAAM,CAACC,OAAP,GAAiB;EACfC,IAAI,EAAE;IACJC,IAAI,EAAE;MACJC,WAAW,EAAE,4EADT;MAEJC,QAAQ,EAAE,iBAFN;MAGJC,WAAW,EAAE,KAHT;MAIJC,GAAG,EAAEX,OAAO,CAAC,sCAAD;IAJR,CADF;IAQJE,QARI;IAUJU,MAAM,EAAE;EAVJ,CADS;;EAcfC,MAAM,CAACC,OAAD,EAAU;IACd;AACJ;AACA;AACA;AACA;IACI,SAASC,wBAAT,CAAkCC,IAAlC,EAAwC;MACtC,MAAMC,UAAU,GAAGpB,OAAO,CAACqB,sBAAR,CAA+BF,IAA/B,CAAnB;MACA,OAAOC,UAAU,CAACE,IAAX,CAAiBC,QAAD,IAAc;QACnC,MAAMC,IAAI,GAAGxB,OAAO,CAACyB,eAAR,CAAwBF,QAAxB,CAAb;QACA,OAAOC,IAAI,KAAK,uBAAhB;MACD,CAHM,CAAP;IAID;IAED;AACJ;AACA;AACA;AACA;;;IACI,SAASE,WAAT,CAAqBP,IAArB,EAA2B;MACzB,IAAIA,IAAI,CAACQ,EAAT,EAAa;QACX,OAAOR,IAAI,CAACQ,EAAL,CAAQH,IAAf;MACD;;MACD,IAAIL,IAAI,CAACS,MAAL,IAAeT,IAAI,CAACS,MAAL,CAAYD,EAA/B,EAAmC;QACjC,OAAOR,IAAI,CAACS,MAAL,CAAYD,EAAZ,CAAeH,IAAtB;MACD;;MACD,OAAO,EAAP;IACD;IAED;AACJ;AACA;AACA;;;IACI,SAASK,iBAAT,CAA2BV,IAA3B,EAAiC;MAC/B,IAAIjB,aAAa,CAAC4B,eAAd,CAA8BX,IAA9B,EAAoCF,OAApC,CAAJ,EAAkD;QAChD,MAAMc,MAAM,GAAGb,wBAAwB,CAACC,IAAD,CAAvC;;QACA,IAAIY,MAAJ,EAAY;UACV,MAAMC,SAAS,GAAGN,WAAW,CAACP,IAAD,CAA7B;UACAf,MAAM,CAACa,OAAD,EAAUZ,QAAQ,CAACC,kBAAnB,EAAuC,oBAAvC,EAA6D;YACjEa,IADiE;YAEjEc,IAAI,EAAE;cACJC,SAAS,EAAEF;YADP;UAF2D,CAA7D,CAAN;QAMD;MACF;IACF;;IAED,OAAO;MACLG,gBAAgB,EAAEN,iBADb;MAELO,eAAe,EAAEP;IAFZ,CAAP;EAID;;AAlEc,CAAjB"},"metadata":{},"sourceType":"script"}