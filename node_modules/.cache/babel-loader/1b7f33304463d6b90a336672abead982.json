{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = void 0;\n\nfunction _fakeTimers() {\n  const data = require('@sinonjs/fake-timers');\n\n  _fakeTimers = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _jestMessageUtil() {\n  const data = require('jest-message-util');\n\n  _jestMessageUtil = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nclass FakeTimers {\n  constructor(_ref) {\n    let {\n      global,\n      config,\n      maxLoops\n    } = _ref;\n\n    _defineProperty(this, '_clock', void 0);\n\n    _defineProperty(this, '_config', void 0);\n\n    _defineProperty(this, '_fakingTime', void 0);\n\n    _defineProperty(this, '_global', void 0);\n\n    _defineProperty(this, '_fakeTimers', void 0);\n\n    _defineProperty(this, '_maxLoops', void 0);\n\n    this._global = global;\n    this._config = config;\n    this._maxLoops = maxLoops || 100000;\n    this._fakingTime = false;\n    this._fakeTimers = (0, _fakeTimers().withGlobal)(global);\n  }\n\n  clearAllTimers() {\n    if (this._fakingTime) {\n      this._clock.reset();\n    }\n  }\n\n  dispose() {\n    this.useRealTimers();\n  }\n\n  runAllTimers() {\n    if (this._checkFakeTimers()) {\n      this._clock.runAll();\n    }\n  }\n\n  runOnlyPendingTimers() {\n    if (this._checkFakeTimers()) {\n      this._clock.runToLast();\n    }\n  }\n\n  advanceTimersToNextTimer() {\n    let steps = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n\n    if (this._checkFakeTimers()) {\n      for (let i = steps; i > 0; i--) {\n        this._clock.next(); // Fire all timers at this point: https://github.com/sinonjs/fake-timers/issues/250\n\n\n        this._clock.tick(0);\n\n        if (this._clock.countTimers() === 0) {\n          break;\n        }\n      }\n    }\n  }\n\n  advanceTimersByTime(msToRun) {\n    if (this._checkFakeTimers()) {\n      this._clock.tick(msToRun);\n    }\n  }\n\n  runAllTicks() {\n    if (this._checkFakeTimers()) {\n      // @ts-expect-error\n      this._clock.runMicrotasks();\n    }\n  }\n\n  useRealTimers() {\n    if (this._fakingTime) {\n      this._clock.uninstall();\n\n      this._fakingTime = false;\n    }\n  }\n\n  useFakeTimers() {\n    if (!this._fakingTime) {\n      const toFake = Object.keys(this._fakeTimers.timers);\n      this._clock = this._fakeTimers.install({\n        loopLimit: this._maxLoops,\n        now: Date.now(),\n        toFake\n      });\n      this._fakingTime = true;\n    }\n  }\n\n  reset() {\n    if (this._checkFakeTimers()) {\n      const {\n        now\n      } = this._clock;\n\n      this._clock.reset();\n\n      this._clock.setSystemTime(now);\n    }\n  }\n\n  setSystemTime(now) {\n    if (this._checkFakeTimers()) {\n      this._clock.setSystemTime(now);\n    }\n  }\n\n  getRealSystemTime() {\n    return Date.now();\n  }\n\n  getTimerCount() {\n    if (this._checkFakeTimers()) {\n      return this._clock.countTimers();\n    }\n\n    return 0;\n  }\n\n  _checkFakeTimers() {\n    if (!this._fakingTime) {\n      this._global.console.warn('A function to advance timers was called but the timers API is not ' + 'mocked with fake timers. Call `jest.useFakeTimers()` in this test or ' + 'enable fake timers globally by setting `\"timers\": \"fake\"` in the ' + 'configuration file\\nStack Trace:\\n' + (0, _jestMessageUtil().formatStackTrace)(new Error().stack, this._config, {\n        noStackTrace: false\n      }));\n    }\n\n    return this._fakingTime;\n  }\n\n}\n\nexports.default = FakeTimers;","map":{"version":3,"names":["Object","defineProperty","exports","value","default","_fakeTimers","data","require","_jestMessageUtil","_defineProperty","obj","key","enumerable","configurable","writable","FakeTimers","constructor","global","config","maxLoops","_global","_config","_maxLoops","_fakingTime","withGlobal","clearAllTimers","_clock","reset","dispose","useRealTimers","runAllTimers","_checkFakeTimers","runAll","runOnlyPendingTimers","runToLast","advanceTimersToNextTimer","steps","i","next","tick","countTimers","advanceTimersByTime","msToRun","runAllTicks","runMicrotasks","uninstall","useFakeTimers","toFake","keys","timers","install","loopLimit","now","Date","setSystemTime","getRealSystemTime","getTimerCount","console","warn","formatStackTrace","Error","stack","noStackTrace"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/@jest/fake-timers/build/modernFakeTimers.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = void 0;\n\nfunction _fakeTimers() {\n  const data = require('@sinonjs/fake-timers');\n\n  _fakeTimers = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _jestMessageUtil() {\n  const data = require('jest-message-util');\n\n  _jestMessageUtil = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\n\nclass FakeTimers {\n  constructor({global, config, maxLoops}) {\n    _defineProperty(this, '_clock', void 0);\n\n    _defineProperty(this, '_config', void 0);\n\n    _defineProperty(this, '_fakingTime', void 0);\n\n    _defineProperty(this, '_global', void 0);\n\n    _defineProperty(this, '_fakeTimers', void 0);\n\n    _defineProperty(this, '_maxLoops', void 0);\n\n    this._global = global;\n    this._config = config;\n    this._maxLoops = maxLoops || 100000;\n    this._fakingTime = false;\n    this._fakeTimers = (0, _fakeTimers().withGlobal)(global);\n  }\n\n  clearAllTimers() {\n    if (this._fakingTime) {\n      this._clock.reset();\n    }\n  }\n\n  dispose() {\n    this.useRealTimers();\n  }\n\n  runAllTimers() {\n    if (this._checkFakeTimers()) {\n      this._clock.runAll();\n    }\n  }\n\n  runOnlyPendingTimers() {\n    if (this._checkFakeTimers()) {\n      this._clock.runToLast();\n    }\n  }\n\n  advanceTimersToNextTimer(steps = 1) {\n    if (this._checkFakeTimers()) {\n      for (let i = steps; i > 0; i--) {\n        this._clock.next(); // Fire all timers at this point: https://github.com/sinonjs/fake-timers/issues/250\n\n        this._clock.tick(0);\n\n        if (this._clock.countTimers() === 0) {\n          break;\n        }\n      }\n    }\n  }\n\n  advanceTimersByTime(msToRun) {\n    if (this._checkFakeTimers()) {\n      this._clock.tick(msToRun);\n    }\n  }\n\n  runAllTicks() {\n    if (this._checkFakeTimers()) {\n      // @ts-expect-error\n      this._clock.runMicrotasks();\n    }\n  }\n\n  useRealTimers() {\n    if (this._fakingTime) {\n      this._clock.uninstall();\n\n      this._fakingTime = false;\n    }\n  }\n\n  useFakeTimers() {\n    if (!this._fakingTime) {\n      const toFake = Object.keys(this._fakeTimers.timers);\n      this._clock = this._fakeTimers.install({\n        loopLimit: this._maxLoops,\n        now: Date.now(),\n        toFake\n      });\n      this._fakingTime = true;\n    }\n  }\n\n  reset() {\n    if (this._checkFakeTimers()) {\n      const {now} = this._clock;\n\n      this._clock.reset();\n\n      this._clock.setSystemTime(now);\n    }\n  }\n\n  setSystemTime(now) {\n    if (this._checkFakeTimers()) {\n      this._clock.setSystemTime(now);\n    }\n  }\n\n  getRealSystemTime() {\n    return Date.now();\n  }\n\n  getTimerCount() {\n    if (this._checkFakeTimers()) {\n      return this._clock.countTimers();\n    }\n\n    return 0;\n  }\n\n  _checkFakeTimers() {\n    if (!this._fakingTime) {\n      this._global.console.warn(\n        'A function to advance timers was called but the timers API is not ' +\n          'mocked with fake timers. Call `jest.useFakeTimers()` in this test or ' +\n          'enable fake timers globally by setting `\"timers\": \"fake\"` in the ' +\n          'configuration file\\nStack Trace:\\n' +\n          (0, _jestMessageUtil().formatStackTrace)(\n            new Error().stack,\n            this._config,\n            {\n              noStackTrace: false\n            }\n          )\n      );\n    }\n\n    return this._fakingTime;\n  }\n}\n\nexports.default = FakeTimers;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}