{"ast":null,"code":"'use strict';\n\nvar inspect = require('../');\n\nvar test = require('tape');\n\ntest('quoteStyle option', function (t) {\n  t['throws'](function () {\n    inspect(null, {\n      quoteStyle: false\n    });\n  }, 'false is not a valid value');\n  t['throws'](function () {\n    inspect(null, {\n      quoteStyle: true\n    });\n  }, 'true is not a valid value');\n  t['throws'](function () {\n    inspect(null, {\n      quoteStyle: ''\n    });\n  }, '\"\" is not a valid value');\n  t['throws'](function () {\n    inspect(null, {\n      quoteStyle: {}\n    });\n  }, '{} is not a valid value');\n  t['throws'](function () {\n    inspect(null, {\n      quoteStyle: []\n    });\n  }, '[] is not a valid value');\n  t['throws'](function () {\n    inspect(null, {\n      quoteStyle: 42\n    });\n  }, '42 is not a valid value');\n  t['throws'](function () {\n    inspect(null, {\n      quoteStyle: NaN\n    });\n  }, 'NaN is not a valid value');\n  t['throws'](function () {\n    inspect(null, {\n      quoteStyle: function () {}\n    });\n  }, 'a function is not a valid value');\n  t.end();\n});","map":{"version":3,"names":["inspect","require","test","t","quoteStyle","NaN","end"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/object-inspect/test/quoteStyle.js"],"sourcesContent":["'use strict';\n\nvar inspect = require('../');\nvar test = require('tape');\n\ntest('quoteStyle option', function (t) {\n    t['throws'](function () { inspect(null, { quoteStyle: false }); }, 'false is not a valid value');\n    t['throws'](function () { inspect(null, { quoteStyle: true }); }, 'true is not a valid value');\n    t['throws'](function () { inspect(null, { quoteStyle: '' }); }, '\"\" is not a valid value');\n    t['throws'](function () { inspect(null, { quoteStyle: {} }); }, '{} is not a valid value');\n    t['throws'](function () { inspect(null, { quoteStyle: [] }); }, '[] is not a valid value');\n    t['throws'](function () { inspect(null, { quoteStyle: 42 }); }, '42 is not a valid value');\n    t['throws'](function () { inspect(null, { quoteStyle: NaN }); }, 'NaN is not a valid value');\n    t['throws'](function () { inspect(null, { quoteStyle: function () {} }); }, 'a function is not a valid value');\n\n    t.end();\n});\n"],"mappings":"AAAA;;AAEA,IAAIA,OAAO,GAAGC,OAAO,CAAC,KAAD,CAArB;;AACA,IAAIC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAAlB;;AAEAC,IAAI,CAAC,mBAAD,EAAsB,UAAUC,CAAV,EAAa;EACnCA,CAAC,CAAC,QAAD,CAAD,CAAY,YAAY;IAAEH,OAAO,CAAC,IAAD,EAAO;MAAEI,UAAU,EAAE;IAAd,CAAP,CAAP;EAAuC,CAAjE,EAAmE,4BAAnE;EACAD,CAAC,CAAC,QAAD,CAAD,CAAY,YAAY;IAAEH,OAAO,CAAC,IAAD,EAAO;MAAEI,UAAU,EAAE;IAAd,CAAP,CAAP;EAAsC,CAAhE,EAAkE,2BAAlE;EACAD,CAAC,CAAC,QAAD,CAAD,CAAY,YAAY;IAAEH,OAAO,CAAC,IAAD,EAAO;MAAEI,UAAU,EAAE;IAAd,CAAP,CAAP;EAAoC,CAA9D,EAAgE,yBAAhE;EACAD,CAAC,CAAC,QAAD,CAAD,CAAY,YAAY;IAAEH,OAAO,CAAC,IAAD,EAAO;MAAEI,UAAU,EAAE;IAAd,CAAP,CAAP;EAAoC,CAA9D,EAAgE,yBAAhE;EACAD,CAAC,CAAC,QAAD,CAAD,CAAY,YAAY;IAAEH,OAAO,CAAC,IAAD,EAAO;MAAEI,UAAU,EAAE;IAAd,CAAP,CAAP;EAAoC,CAA9D,EAAgE,yBAAhE;EACAD,CAAC,CAAC,QAAD,CAAD,CAAY,YAAY;IAAEH,OAAO,CAAC,IAAD,EAAO;MAAEI,UAAU,EAAE;IAAd,CAAP,CAAP;EAAoC,CAA9D,EAAgE,yBAAhE;EACAD,CAAC,CAAC,QAAD,CAAD,CAAY,YAAY;IAAEH,OAAO,CAAC,IAAD,EAAO;MAAEI,UAAU,EAAEC;IAAd,CAAP,CAAP;EAAqC,CAA/D,EAAiE,0BAAjE;EACAF,CAAC,CAAC,QAAD,CAAD,CAAY,YAAY;IAAEH,OAAO,CAAC,IAAD,EAAO;MAAEI,UAAU,EAAE,YAAY,CAAE;IAA5B,CAAP,CAAP;EAAgD,CAA1E,EAA4E,iCAA5E;EAEAD,CAAC,CAACG,GAAF;AACH,CAXG,CAAJ"},"metadata":{},"sourceType":"script"}