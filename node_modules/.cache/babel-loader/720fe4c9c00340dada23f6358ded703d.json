{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport { useRef } from 'react';\nimport useMounted from './useMounted';\nimport useEventCallback from './useEventCallback';\n\nvar isSyntheticEvent = function isSyntheticEvent(event) {\n  return typeof event.persist === 'function';\n};\n/**\n * Creates a event handler function throttled by `requestAnimationFrame` that\n * returns the **most recent** event. Useful for noisy events that update react state.\n *\n * ```tsx\n * function Component() {\n *   const [position, setPosition] = useState();\n *   const handleMove = useThrottledEventHandler<React.PointerEvent>(\n *     (event) => {\n *       setPosition({\n *         top: event.clientX,\n *         left: event.clientY,\n *       })\n *     }\n *   )\n *\n *   return (\n *     <div onPointerMove={handleMove}>\n *        <div style={position} />\n *     </div>\n *   );\n * }\n * ```\n *\n * @param handler An event handler function\n * @typeParam TEvent The event object passed to the handler function\n * @returns The event handler with a `clear` method attached for clearing any in-flight handler calls\n *\n */\n\n\nexport default function useThrottledEventHandler(handler) {\n  var isMounted = useMounted();\n  var eventHandler = useEventCallback(handler);\n  var nextEventInfoRef = useRef({\n    event: null,\n    handle: null\n  });\n\n  var clear = function clear() {\n    cancelAnimationFrame(nextEventInfoRef.current.handle);\n    nextEventInfoRef.current.handle = null;\n  };\n\n  var handlePointerMoveAnimation = function handlePointerMoveAnimation() {\n    var next = nextEventInfoRef.current;\n\n    if (next.handle && next.event) {\n      if (isMounted()) {\n        next.handle = null;\n        eventHandler(next.event);\n      }\n    }\n\n    next.event = null;\n  };\n\n  var throttledHandler = function throttledHandler(event) {\n    if (!isMounted()) return;\n\n    if (isSyntheticEvent(event)) {\n      event.persist();\n    } // Special handling for a React.Konva event which reuses the\n    // event object as it bubbles, setting target\n    else if ('evt' in event) {\n      event = _extends({}, event);\n    }\n\n    nextEventInfoRef.current.event = event;\n\n    if (!nextEventInfoRef.current.handle) {\n      nextEventInfoRef.current.handle = requestAnimationFrame(handlePointerMoveAnimation);\n    }\n  };\n\n  throttledHandler.clear = clear;\n  return throttledHandler;\n}","map":{"version":3,"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","useRef","useMounted","useEventCallback","isSyntheticEvent","event","persist","useThrottledEventHandler","handler","isMounted","eventHandler","nextEventInfoRef","handle","clear","cancelAnimationFrame","current","handlePointerMoveAnimation","next","throttledHandler","requestAnimationFrame"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/@restart/hooks/esm/useThrottledEventHandler.js"],"sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { useRef } from 'react';\nimport useMounted from './useMounted';\nimport useEventCallback from './useEventCallback';\n\nvar isSyntheticEvent = function isSyntheticEvent(event) {\n  return typeof event.persist === 'function';\n};\n\n/**\n * Creates a event handler function throttled by `requestAnimationFrame` that\n * returns the **most recent** event. Useful for noisy events that update react state.\n *\n * ```tsx\n * function Component() {\n *   const [position, setPosition] = useState();\n *   const handleMove = useThrottledEventHandler<React.PointerEvent>(\n *     (event) => {\n *       setPosition({\n *         top: event.clientX,\n *         left: event.clientY,\n *       })\n *     }\n *   )\n *\n *   return (\n *     <div onPointerMove={handleMove}>\n *        <div style={position} />\n *     </div>\n *   );\n * }\n * ```\n *\n * @param handler An event handler function\n * @typeParam TEvent The event object passed to the handler function\n * @returns The event handler with a `clear` method attached for clearing any in-flight handler calls\n *\n */\nexport default function useThrottledEventHandler(handler) {\n  var isMounted = useMounted();\n  var eventHandler = useEventCallback(handler);\n  var nextEventInfoRef = useRef({\n    event: null,\n    handle: null\n  });\n\n  var clear = function clear() {\n    cancelAnimationFrame(nextEventInfoRef.current.handle);\n    nextEventInfoRef.current.handle = null;\n  };\n\n  var handlePointerMoveAnimation = function handlePointerMoveAnimation() {\n    var next = nextEventInfoRef.current;\n\n    if (next.handle && next.event) {\n      if (isMounted()) {\n        next.handle = null;\n        eventHandler(next.event);\n      }\n    }\n\n    next.event = null;\n  };\n\n  var throttledHandler = function throttledHandler(event) {\n    if (!isMounted()) return;\n\n    if (isSyntheticEvent(event)) {\n      event.persist();\n    } // Special handling for a React.Konva event which reuses the\n    // event object as it bubbles, setting target\n    else if ('evt' in event) {\n        event = _extends({}, event);\n      }\n\n    nextEventInfoRef.current.event = event;\n\n    if (!nextEventInfoRef.current.handle) {\n      nextEventInfoRef.current.handle = requestAnimationFrame(handlePointerMoveAnimation);\n    }\n  };\n\n  throttledHandler.clear = clear;\n  return throttledHandler;\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}