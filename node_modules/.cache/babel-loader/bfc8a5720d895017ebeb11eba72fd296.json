{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst tsutils = __importStar(require(\"tsutils\"));\n\nconst ts = __importStar(require(\"typescript\"));\n\nconst util_1 = require(\"../util\");\n\nconst getESLintCoreRule_1 = require(\"../util/getESLintCoreRule\");\n\nconst baseRule = (0, getESLintCoreRule_1.getESLintCoreRule)('dot-notation');\nexports.default = (0, util_1.createRule)({\n  name: 'dot-notation',\n  meta: {\n    type: 'suggestion',\n    docs: {\n      description: 'Enforce dot notation whenever possible',\n      recommended: 'strict',\n      extendsBaseRule: true,\n      requiresTypeChecking: true\n    },\n    schema: [{\n      type: 'object',\n      properties: {\n        allowKeywords: {\n          type: 'boolean',\n          default: true\n        },\n        allowPattern: {\n          type: 'string',\n          default: ''\n        },\n        allowPrivateClassPropertyAccess: {\n          type: 'boolean',\n          default: false\n        },\n        allowProtectedClassPropertyAccess: {\n          type: 'boolean',\n          default: false\n        },\n        allowIndexSignaturePropertyAccess: {\n          type: 'boolean',\n          default: false\n        }\n      },\n      additionalProperties: false\n    }],\n    fixable: baseRule.meta.fixable,\n    hasSuggestions: baseRule.meta.hasSuggestions,\n    messages: baseRule.meta.messages\n  },\n  defaultOptions: [{\n    allowPrivateClassPropertyAccess: false,\n    allowProtectedClassPropertyAccess: false,\n    allowIndexSignaturePropertyAccess: false,\n    allowKeywords: true,\n    allowPattern: ''\n  }],\n\n  create(context, _ref) {\n    let [options] = _ref;\n\n    var _a;\n\n    const rules = baseRule.create(context);\n    const {\n      program,\n      esTreeNodeToTSNodeMap\n    } = (0, util_1.getParserServices)(context);\n    const typeChecker = program.getTypeChecker();\n    const allowPrivateClassPropertyAccess = options.allowPrivateClassPropertyAccess;\n    const allowProtectedClassPropertyAccess = options.allowProtectedClassPropertyAccess;\n    const allowIndexSignaturePropertyAccess = ((_a = options.allowIndexSignaturePropertyAccess) !== null && _a !== void 0 ? _a : false) || tsutils.isCompilerOptionEnabled(program.getCompilerOptions(), // @ts-expect-error - TS is refining the type to never for some reason\n    'noPropertyAccessFromIndexSignature');\n    return {\n      MemberExpression(node) {\n        var _a, _b;\n\n        if ((allowPrivateClassPropertyAccess || allowProtectedClassPropertyAccess || allowIndexSignaturePropertyAccess) && node.computed) {\n          // for perf reasons - only fetch symbols if we have to\n          const propertySymbol = typeChecker.getSymbolAtLocation(esTreeNodeToTSNodeMap.get(node.property));\n          const modifierKind = (_b = (0, util_1.getModifiers)((_a = propertySymbol === null || propertySymbol === void 0 ? void 0 : propertySymbol.getDeclarations()) === null || _a === void 0 ? void 0 : _a[0])) === null || _b === void 0 ? void 0 : _b[0].kind;\n\n          if (allowPrivateClassPropertyAccess && modifierKind === ts.SyntaxKind.PrivateKeyword || allowProtectedClassPropertyAccess && modifierKind === ts.SyntaxKind.ProtectedKeyword) {\n            return;\n          }\n\n          if (propertySymbol === undefined && allowIndexSignaturePropertyAccess) {\n            const objectType = typeChecker.getTypeAtLocation(esTreeNodeToTSNodeMap.get(node.object));\n            const indexType = objectType.getNonNullableType().getStringIndexType();\n\n            if (indexType !== undefined) {\n              return;\n            }\n          }\n        }\n\n        rules.MemberExpression(node);\n      }\n\n    };\n  }\n\n});","map":{"version":3,"mappings":"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","names":["baseRule","exports","name","meta","type","docs","description","recommended","extendsBaseRule","requiresTypeChecking","schema","properties","allowKeywords","default","allowPattern","allowPrivateClassPropertyAccess","allowProtectedClassPropertyAccess","allowIndexSignaturePropertyAccess","additionalProperties","fixable","hasSuggestions","messages","defaultOptions","create","context","options","rules","program","esTreeNodeToTSNodeMap","typeChecker","getTypeChecker","_a","tsutils","isCompilerOptionEnabled","getCompilerOptions","MemberExpression","node","computed","propertySymbol","getSymbolAtLocation","get","property","modifierKind","getDeclarations","_b","kind","ts","SyntaxKind","PrivateKeyword","ProtectedKeyword","undefined","objectType","getTypeAtLocation","object","indexType","getNonNullableType","getStringIndexType"],"sources":["../../src/rules/dot-notation.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}