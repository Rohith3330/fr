{"ast":null,"code":"/**\n * @fileoverview Utility functions for type annotation detection.\n * @author Yannick Croissant\n * @author Vitor Balocco\n */\n'use strict';\n/**\n * Checks if we are declaring a `props` argument with a flow type annotation.\n * @param {ASTNode} node The AST node being checked.\n * @param {Object} context\n * @returns {Boolean} True if the node is a type annotated props declaration, false if not.\n */\n\nfunction isAnnotatedFunctionPropsDeclaration(node, context) {\n  if (!node || !node.params || !node.params.length) {\n    return false;\n  }\n\n  const typeNode = node.params[0].type === 'AssignmentPattern' ? node.params[0].left : node.params[0];\n  const tokens = context.getFirstTokens(typeNode, 2);\n  const isAnnotated = typeNode.typeAnnotation;\n  const isDestructuredProps = typeNode.type === 'ObjectPattern';\n  const isProps = tokens[0].value === 'props' || tokens[1] && tokens[1].value === 'props';\n  return isAnnotated && (isDestructuredProps || isProps);\n}\n\nmodule.exports = {\n  isAnnotatedFunctionPropsDeclaration\n};","map":{"version":3,"names":["isAnnotatedFunctionPropsDeclaration","node","context","params","length","typeNode","type","left","tokens","getFirstTokens","isAnnotated","typeAnnotation","isDestructuredProps","isProps","value","module","exports"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/eslint-plugin-react/lib/util/annotations.js"],"sourcesContent":["/**\n * @fileoverview Utility functions for type annotation detection.\n * @author Yannick Croissant\n * @author Vitor Balocco\n */\n\n'use strict';\n\n/**\n * Checks if we are declaring a `props` argument with a flow type annotation.\n * @param {ASTNode} node The AST node being checked.\n * @param {Object} context\n * @returns {Boolean} True if the node is a type annotated props declaration, false if not.\n */\nfunction isAnnotatedFunctionPropsDeclaration(node, context) {\n  if (!node || !node.params || !node.params.length) {\n    return false;\n  }\n\n  const typeNode = node.params[0].type === 'AssignmentPattern' ? node.params[0].left : node.params[0];\n\n  const tokens = context.getFirstTokens(typeNode, 2);\n  const isAnnotated = typeNode.typeAnnotation;\n  const isDestructuredProps = typeNode.type === 'ObjectPattern';\n  const isProps = tokens[0].value === 'props' || (tokens[1] && tokens[1].value === 'props');\n\n  return (isAnnotated && (isDestructuredProps || isProps));\n}\n\nmodule.exports = {\n  isAnnotatedFunctionPropsDeclaration,\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASA,mCAAT,CAA6CC,IAA7C,EAAmDC,OAAnD,EAA4D;EAC1D,IAAI,CAACD,IAAD,IAAS,CAACA,IAAI,CAACE,MAAf,IAAyB,CAACF,IAAI,CAACE,MAAL,CAAYC,MAA1C,EAAkD;IAChD,OAAO,KAAP;EACD;;EAED,MAAMC,QAAQ,GAAGJ,IAAI,CAACE,MAAL,CAAY,CAAZ,EAAeG,IAAf,KAAwB,mBAAxB,GAA8CL,IAAI,CAACE,MAAL,CAAY,CAAZ,EAAeI,IAA7D,GAAoEN,IAAI,CAACE,MAAL,CAAY,CAAZ,CAArF;EAEA,MAAMK,MAAM,GAAGN,OAAO,CAACO,cAAR,CAAuBJ,QAAvB,EAAiC,CAAjC,CAAf;EACA,MAAMK,WAAW,GAAGL,QAAQ,CAACM,cAA7B;EACA,MAAMC,mBAAmB,GAAGP,QAAQ,CAACC,IAAT,KAAkB,eAA9C;EACA,MAAMO,OAAO,GAAGL,MAAM,CAAC,CAAD,CAAN,CAAUM,KAAV,KAAoB,OAApB,IAAgCN,MAAM,CAAC,CAAD,CAAN,IAAaA,MAAM,CAAC,CAAD,CAAN,CAAUM,KAAV,KAAoB,OAAjF;EAEA,OAAQJ,WAAW,KAAKE,mBAAmB,IAAIC,OAA5B,CAAnB;AACD;;AAEDE,MAAM,CAACC,OAAP,GAAiB;EACfhB;AADe,CAAjB"},"metadata":{},"sourceType":"script"}