{"ast":null,"code":"'use strict';\n\nvar parsers = require('../parsers');\n\nvar implicitSetter = require('../parsers').implicitSetter; // the valid border-widths:\n\n\nvar widths = ['thin', 'medium', 'thick'];\n\nmodule.exports.isValid = function parse(v) {\n  var length = parsers.parseLength(v);\n\n  if (length !== undefined) {\n    return true;\n  }\n\n  if (typeof v !== 'string') {\n    return false;\n  }\n\n  if (v === '') {\n    return true;\n  }\n\n  v = v.toLowerCase();\n\n  if (widths.indexOf(v) === -1) {\n    return false;\n  }\n\n  return true;\n};\n\nvar isValid = module.exports.isValid;\n\nvar parser = function (v) {\n  var length = parsers.parseLength(v);\n\n  if (length !== undefined) {\n    return length;\n  }\n\n  if (isValid(v)) {\n    return v.toLowerCase();\n  }\n\n  return undefined;\n};\n\nmodule.exports.definition = {\n  set: implicitSetter('border', 'width', isValid, parser),\n  get: function () {\n    return this.getPropertyValue('border-width');\n  },\n  enumerable: true,\n  configurable: true\n};","map":{"version":3,"names":["parsers","require","implicitSetter","widths","module","exports","isValid","parse","v","length","parseLength","undefined","toLowerCase","indexOf","parser","definition","set","get","getPropertyValue","enumerable","configurable"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/cssstyle/lib/properties/borderWidth.js"],"sourcesContent":["'use strict';\n\nvar parsers = require('../parsers');\nvar implicitSetter = require('../parsers').implicitSetter;\n\n// the valid border-widths:\nvar widths = ['thin', 'medium', 'thick'];\n\nmodule.exports.isValid = function parse(v) {\n  var length = parsers.parseLength(v);\n  if (length !== undefined) {\n    return true;\n  }\n  if (typeof v !== 'string') {\n    return false;\n  }\n  if (v === '') {\n    return true;\n  }\n  v = v.toLowerCase();\n  if (widths.indexOf(v) === -1) {\n    return false;\n  }\n  return true;\n};\nvar isValid = module.exports.isValid;\n\nvar parser = function(v) {\n  var length = parsers.parseLength(v);\n  if (length !== undefined) {\n    return length;\n  }\n  if (isValid(v)) {\n    return v.toLowerCase();\n  }\n  return undefined;\n};\n\nmodule.exports.definition = {\n  set: implicitSetter('border', 'width', isValid, parser),\n  get: function() {\n    return this.getPropertyValue('border-width');\n  },\n  enumerable: true,\n  configurable: true,\n};\n"],"mappings":"AAAA;;AAEA,IAAIA,OAAO,GAAGC,OAAO,CAAC,YAAD,CAArB;;AACA,IAAIC,cAAc,GAAGD,OAAO,CAAC,YAAD,CAAP,CAAsBC,cAA3C,C,CAEA;;;AACA,IAAIC,MAAM,GAAG,CAAC,MAAD,EAAS,QAAT,EAAmB,OAAnB,CAAb;;AAEAC,MAAM,CAACC,OAAP,CAAeC,OAAf,GAAyB,SAASC,KAAT,CAAeC,CAAf,EAAkB;EACzC,IAAIC,MAAM,GAAGT,OAAO,CAACU,WAAR,CAAoBF,CAApB,CAAb;;EACA,IAAIC,MAAM,KAAKE,SAAf,EAA0B;IACxB,OAAO,IAAP;EACD;;EACD,IAAI,OAAOH,CAAP,KAAa,QAAjB,EAA2B;IACzB,OAAO,KAAP;EACD;;EACD,IAAIA,CAAC,KAAK,EAAV,EAAc;IACZ,OAAO,IAAP;EACD;;EACDA,CAAC,GAAGA,CAAC,CAACI,WAAF,EAAJ;;EACA,IAAIT,MAAM,CAACU,OAAP,CAAeL,CAAf,MAAsB,CAAC,CAA3B,EAA8B;IAC5B,OAAO,KAAP;EACD;;EACD,OAAO,IAAP;AACD,CAhBD;;AAiBA,IAAIF,OAAO,GAAGF,MAAM,CAACC,OAAP,CAAeC,OAA7B;;AAEA,IAAIQ,MAAM,GAAG,UAASN,CAAT,EAAY;EACvB,IAAIC,MAAM,GAAGT,OAAO,CAACU,WAAR,CAAoBF,CAApB,CAAb;;EACA,IAAIC,MAAM,KAAKE,SAAf,EAA0B;IACxB,OAAOF,MAAP;EACD;;EACD,IAAIH,OAAO,CAACE,CAAD,CAAX,EAAgB;IACd,OAAOA,CAAC,CAACI,WAAF,EAAP;EACD;;EACD,OAAOD,SAAP;AACD,CATD;;AAWAP,MAAM,CAACC,OAAP,CAAeU,UAAf,GAA4B;EAC1BC,GAAG,EAAEd,cAAc,CAAC,QAAD,EAAW,OAAX,EAAoBI,OAApB,EAA6BQ,MAA7B,CADO;EAE1BG,GAAG,EAAE,YAAW;IACd,OAAO,KAAKC,gBAAL,CAAsB,cAAtB,CAAP;EACD,CAJyB;EAK1BC,UAAU,EAAE,IALc;EAM1BC,YAAY,EAAE;AANY,CAA5B"},"metadata":{},"sourceType":"script"}