{"ast":null,"code":"'use strict';\n\nconst pragmaUtil = require('./pragma');\n\nconst isDestructuredFromPragmaImport = require('./isDestructuredFromPragmaImport');\n/**\n * Checks if the node is a createElement call\n * @param {ASTNode} node - The AST node being checked.\n * @param {Context} context - The AST node being checked.\n * @returns {Boolean} - True if node is a createElement call object literal, False if not.\n*/\n\n\nmodule.exports = function isCreateElement(node, context) {\n  const pragma = pragmaUtil.getFromContext(context);\n\n  if (node.callee && node.callee.type === 'MemberExpression' && node.callee.property.name === 'createElement' && node.callee.object && node.callee.object.name === pragma) {\n    return true;\n  }\n\n  if (node && node.callee && node.callee.name === 'createElement' && isDestructuredFromPragmaImport('createElement', context)) {\n    return true;\n  }\n\n  return false;\n};","map":{"version":3,"names":["pragmaUtil","require","isDestructuredFromPragmaImport","module","exports","isCreateElement","node","context","pragma","getFromContext","callee","type","property","name","object"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/eslint-plugin-react/lib/util/isCreateElement.js"],"sourcesContent":["'use strict';\n\nconst pragmaUtil = require('./pragma');\nconst isDestructuredFromPragmaImport = require('./isDestructuredFromPragmaImport');\n\n/**\n * Checks if the node is a createElement call\n * @param {ASTNode} node - The AST node being checked.\n * @param {Context} context - The AST node being checked.\n * @returns {Boolean} - True if node is a createElement call object literal, False if not.\n*/\nmodule.exports = function isCreateElement(node, context) {\n  const pragma = pragmaUtil.getFromContext(context);\n  if (\n    node.callee\n    && node.callee.type === 'MemberExpression'\n    && node.callee.property.name === 'createElement'\n    && node.callee.object\n    && node.callee.object.name === pragma\n  ) {\n    return true;\n  }\n\n  if (\n    node\n    && node.callee\n    && node.callee.name === 'createElement'\n    && isDestructuredFromPragmaImport('createElement', context)\n  ) {\n    return true;\n  }\n\n  return false;\n};\n"],"mappings":"AAAA;;AAEA,MAAMA,UAAU,GAAGC,OAAO,CAAC,UAAD,CAA1B;;AACA,MAAMC,8BAA8B,GAAGD,OAAO,CAAC,kCAAD,CAA9C;AAEA;AACA;AACA;AACA;AACA;AACA;;;AACAE,MAAM,CAACC,OAAP,GAAiB,SAASC,eAAT,CAAyBC,IAAzB,EAA+BC,OAA/B,EAAwC;EACvD,MAAMC,MAAM,GAAGR,UAAU,CAACS,cAAX,CAA0BF,OAA1B,CAAf;;EACA,IACED,IAAI,CAACI,MAAL,IACGJ,IAAI,CAACI,MAAL,CAAYC,IAAZ,KAAqB,kBADxB,IAEGL,IAAI,CAACI,MAAL,CAAYE,QAAZ,CAAqBC,IAArB,KAA8B,eAFjC,IAGGP,IAAI,CAACI,MAAL,CAAYI,MAHf,IAIGR,IAAI,CAACI,MAAL,CAAYI,MAAZ,CAAmBD,IAAnB,KAA4BL,MALjC,EAME;IACA,OAAO,IAAP;EACD;;EAED,IACEF,IAAI,IACDA,IAAI,CAACI,MADR,IAEGJ,IAAI,CAACI,MAAL,CAAYG,IAAZ,KAAqB,eAFxB,IAGGX,8BAA8B,CAAC,eAAD,EAAkBK,OAAlB,CAJnC,EAKE;IACA,OAAO,IAAP;EACD;;EAED,OAAO,KAAP;AACD,CAtBD"},"metadata":{},"sourceType":"script"}