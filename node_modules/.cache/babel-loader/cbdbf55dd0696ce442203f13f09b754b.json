{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _parser = _interopRequireDefault(require(\"./parser\"));\n\nvar _input = _interopRequireDefault(require(\"./input\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction parse(css, opts) {\n  var input = new _input.default(css, opts);\n  var parser = new _parser.default(input);\n\n  try {\n    parser.parse();\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (e.name === 'CssSyntaxError' && opts && opts.from) {\n        if (/\\.scss$/i.test(opts.from)) {\n          e.message += '\\nYou tried to parse SCSS with ' + 'the standard CSS parser; ' + 'try again with the postcss-scss parser';\n        } else if (/\\.sass/i.test(opts.from)) {\n          e.message += '\\nYou tried to parse Sass with ' + 'the standard CSS parser; ' + 'try again with the postcss-sass parser';\n        } else if (/\\.less$/i.test(opts.from)) {\n          e.message += '\\nYou tried to parse Less with ' + 'the standard CSS parser; ' + 'try again with the postcss-less parser';\n        }\n      }\n    }\n\n    throw e;\n  }\n\n  return parser.root;\n}\n\nvar _default = parse;\nexports.default = _default;\nmodule.exports = exports.default;","map":{"version":3,"mappings":";;;;;AAAA;;AACA;;;;;;;;AAEA,SAASA,KAAT,CAAgBC,GAAhB,EAAqBC,IAArB,EAA2B;EACzB,IAAIC,KAAK,GAAG,IAAIC,cAAJ,CAAUH,GAAV,EAAeC,IAAf,CAAZ;EACA,IAAIG,MAAM,GAAG,IAAIC,eAAJ,CAAWH,KAAX,CAAb;;EACA,IAAI;IACFE,MAAM,CAACL,KAAPK;EADF,EAEE,OAAOE,CAAP,EAAU;IACV,IAAIC,OAAO,CAACC,GAARD,CAAYE,QAAZF,KAAyB,YAA7B,EAA2C;MACzC,IAAID,CAAC,CAACI,IAAFJ,KAAW,gBAAXA,IAA+BL,IAA/BK,IAAuCL,IAAI,CAACU,IAAhD,EAAsD;QACpD,IAAI,WAAWC,IAAX,CAAgBX,IAAI,CAACU,IAArB,CAAJ,EAAgC;UAC9BL,CAAC,CAACO,OAAFP,IAAa,oCACA,2BADA,GAEA,wCAFbA;QADF,OAIO,IAAI,UAAUM,IAAV,CAAeX,IAAI,CAACU,IAApB,CAAJ,EAA+B;UACpCL,CAAC,CAACO,OAAFP,IAAa,oCACA,2BADA,GAEA,wCAFbA;QADK,OAIA,IAAI,WAAWM,IAAX,CAAgBX,IAAI,CAACU,IAArB,CAAJ,EAAgC;UACrCL,CAAC,CAACO,OAAFP,IAAa,oCACA,2BADA,GAEA,wCAFbA;QAGD;MACF;IACF;;IACD,MAAMA,CAAN;EACD;;EAED,OAAOF,MAAM,CAACU,IAAd;AACD;;eAEcf","names":["parse","css","opts","input","Input","parser","Parser","e","process","env","NODE_ENV","name","from","test","message","root"],"sources":["C:\\Users\\Rohith\\mern\\frontend\\node_modules\\resolve-url-loader\\node_modules\\postcss\\lib\\parse.es6"],"sourcesContent":["import Parser from './parser'\nimport Input from './input'\n\nfunction parse (css, opts) {\n  let input = new Input(css, opts)\n  let parser = new Parser(input)\n  try {\n    parser.parse()\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (e.name === 'CssSyntaxError' && opts && opts.from) {\n        if (/\\.scss$/i.test(opts.from)) {\n          e.message += '\\nYou tried to parse SCSS with ' +\n                       'the standard CSS parser; ' +\n                       'try again with the postcss-scss parser'\n        } else if (/\\.sass/i.test(opts.from)) {\n          e.message += '\\nYou tried to parse Sass with ' +\n                       'the standard CSS parser; ' +\n                       'try again with the postcss-sass parser'\n        } else if (/\\.less$/i.test(opts.from)) {\n          e.message += '\\nYou tried to parse Less with ' +\n                       'the standard CSS parser; ' +\n                       'try again with the postcss-less parser'\n        }\n      }\n    }\n    throw e\n  }\n\n  return parser.root\n}\n\nexport default parse\n"]},"metadata":{},"sourceType":"script"}