{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"C:/Users/Rohith/mern/frontend/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.parse = void 0;\nexports.parseAsync = parseAsync;\nexports.parseSync = parseSync;\n\nfunction _gensync() {\n  var data = require(\"gensync\");\n\n  _gensync = function _gensync() {\n    return data;\n  };\n\n  return data;\n}\n\nvar _config = require(\"./config\");\n\nvar _parser = require(\"./parser\");\n\nvar _normalizeOpts = require(\"./transformation/normalize-opts\");\n\nvar _rewriteStackTrace = require(\"./errors/rewrite-stack-trace\");\n\nvar parseRunner = _gensync()( /*#__PURE__*/_regeneratorRuntime().mark(function parse(code, opts) {\n  var config;\n  return _regeneratorRuntime().wrap(function parse$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          return _context.delegateYield((0, _config.default)(opts), \"t0\", 1);\n\n        case 1:\n          config = _context.t0;\n\n          if (!(config === null)) {\n            _context.next = 4;\n            break;\n          }\n\n          return _context.abrupt(\"return\", null);\n\n        case 4:\n          return _context.delegateYield((0, _parser.default)(config.passes, (0, _normalizeOpts.default)(config), code), \"t1\", 5);\n\n        case 5:\n          return _context.abrupt(\"return\", _context.t1);\n\n        case 6:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, parse);\n}));\n\nvar parse = function parse(code, opts, callback) {\n  if (typeof opts === \"function\") {\n    callback = opts;\n    opts = undefined;\n  }\n\n  if (callback === undefined) {\n    {\n      return (0, _rewriteStackTrace.beginHiddenCallStack)(parseRunner.sync)(code, opts);\n    }\n  }\n\n  (0, _rewriteStackTrace.beginHiddenCallStack)(parseRunner.errback)(code, opts, callback);\n};\n\nexports.parse = parse;\n\nfunction parseSync() {\n  return (0, _rewriteStackTrace.beginHiddenCallStack)(parseRunner.sync).apply(void 0, arguments);\n}\n\nfunction parseAsync() {\n  return (0, _rewriteStackTrace.beginHiddenCallStack)(parseRunner.async).apply(void 0, arguments);\n}\n\n0 && 0;","map":{"version":3,"mappings":";;;;;;;;;;;AAAA;EAAA;;EAAAA;IAAA;EAAA;;EAAA;AAAA;;AAEA;;AAEA;;AAEA;;AAGA;;AAiBA,IAAMC,WAAW,GAAGC,oDAAQ,SAAUC,KAAV,CAC1BC,IAD0B,EAE1BC,IAF0B;EAAA;EAAA;IAAA;MAAA;QAAA;UAIX,8BAAO,qBAAWA,IAAX,CAAP;;QAJW;UAIpBC,MAJoB;;UAAA,MAMtBA,MAAM,KAAK,IANW;YAAA;YAAA;UAAA;;UAAA,iCAOjB,IAPiB;;QAAA;UAUnB,8BAAO,qBAAOA,MAAM,CAACC,MAAd,EAAsB,4BAAiBD,MAAjB,CAAtB,EAAgDF,IAAhD,CAAP;;QAVmB;UAAA;;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA,GAAUD,KAAV;AAAA,CAARD,EAApB;;AAaO,IAAMC,KAAY,GAAG,SAASA,KAAT,CAC1BC,IAD0B,EAE1BC,IAF0B,EAG1BG,QAH0B,EAI1B;EACA,IAAI,OAAOH,IAAP,KAAgB,UAApB,EAAgC;IAC9BG,QAAQ,GAAGH,IAAXG;IACAH,IAAI,GAAGI,SAAPJ;EACD;;EAED,IAAIG,QAAQ,KAAKC,SAAjB,EAA4B;IAKnB;MAIL,OAAO,6CAAqBR,WAAW,CAACS,IAAjC,EAAuCN,IAAvC,EAA6CC,IAA7C,CAAP;IACD;EACF;;EAED,6CAAqBJ,WAAW,CAACU,OAAjC,EAA0CP,IAA1C,EAAgDC,IAAhD,EAAsDG,QAAtD;AAvBK;;;;AA0BA,SAASI,SAAT,GAAiE;EACtE,OAAO,6CAAqBX,WAAW,CAACS,IAAjC,0BAAP;AACD;;AACM,SAASG,UAAT,GAAmE;EACxE,OAAO,6CAAqBZ,WAAW,CAACa,KAAjC,0BAAP;AACD","names":["_gensync","parseRunner","gensync","parse","code","opts","config","passes","callback","undefined","sync","errback","parseSync","parseAsync","async"],"sources":["C:\\Users\\Rohith\\mern\\frontend\\node_modules\\@babel\\core\\src\\parse.ts"],"sourcesContent":["import gensync, { type Handler } from \"gensync\";\n\nimport loadConfig from \"./config\";\nimport type { InputOptions } from \"./config\";\nimport parser from \"./parser\";\nimport type { ParseResult } from \"./parser\";\nimport normalizeOptions from \"./transformation/normalize-opts\";\nimport type { ValidatedOptions } from \"./config/validation/options\";\n\nimport { beginHiddenCallStack } from \"./errors/rewrite-stack-trace\";\n\ntype FileParseCallback = {\n  (err: Error, ast: null): void;\n  (err: null, ast: ParseResult | null): void;\n};\n\ntype Parse = {\n  (code: string, callback: FileParseCallback): void;\n  (\n    code: string,\n    opts: InputOptions | undefined | null,\n    callback: FileParseCallback,\n  ): void;\n  (code: string, opts?: InputOptions | null): ParseResult | null;\n};\n\nconst parseRunner = gensync(function* parse(\n  code: string,\n  opts: InputOptions | undefined | null,\n): Handler<ParseResult | null> {\n  const config = yield* loadConfig(opts);\n\n  if (config === null) {\n    return null;\n  }\n\n  return yield* parser(config.passes, normalizeOptions(config), code);\n});\n\nexport const parse: Parse = function parse(\n  code,\n  opts?,\n  callback?: FileParseCallback,\n) {\n  if (typeof opts === \"function\") {\n    callback = opts;\n    opts = undefined as ValidatedOptions;\n  }\n\n  if (callback === undefined) {\n    if (process.env.BABEL_8_BREAKING) {\n      throw new Error(\n        \"Starting from Babel 8.0.0, the 'parse' function expects a callback. If you need to call it synchronously, please use 'parseSync'.\",\n      );\n    } else {\n      // console.warn(\n      //   \"Starting from Babel 8.0.0, the 'parse' function will expect a callback. If you need to call it synchronously, please use 'parseSync'.\",\n      // );\n      return beginHiddenCallStack(parseRunner.sync)(code, opts);\n    }\n  }\n\n  beginHiddenCallStack(parseRunner.errback)(code, opts, callback);\n};\n\nexport function parseSync(...args: Parameters<typeof parseRunner.sync>) {\n  return beginHiddenCallStack(parseRunner.sync)(...args);\n}\nexport function parseAsync(...args: Parameters<typeof parseRunner.async>) {\n  return beginHiddenCallStack(parseRunner.async)(...args);\n}\n"]},"metadata":{},"sourceType":"script"}