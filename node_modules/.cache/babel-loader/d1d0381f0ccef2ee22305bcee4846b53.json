{"ast":null,"code":"/*!\n * depd\n * Copyright(c) 2014 Douglas Christopher Wilson\n * MIT Licensed\n */\n'use strict';\n/**\n * Module exports.\n */\n\nmodule.exports = callSiteToString;\n/**\n * Format a CallSite file location to a string.\n */\n\nfunction callSiteFileLocation(callSite) {\n  var fileName;\n  var fileLocation = '';\n\n  if (callSite.isNative()) {\n    fileLocation = 'native';\n  } else if (callSite.isEval()) {\n    fileName = callSite.getScriptNameOrSourceURL();\n\n    if (!fileName) {\n      fileLocation = callSite.getEvalOrigin();\n    }\n  } else {\n    fileName = callSite.getFileName();\n  }\n\n  if (fileName) {\n    fileLocation += fileName;\n    var lineNumber = callSite.getLineNumber();\n\n    if (lineNumber != null) {\n      fileLocation += ':' + lineNumber;\n      var columnNumber = callSite.getColumnNumber();\n\n      if (columnNumber) {\n        fileLocation += ':' + columnNumber;\n      }\n    }\n  }\n\n  return fileLocation || 'unknown source';\n}\n/**\n * Format a CallSite to a string.\n */\n\n\nfunction callSiteToString(callSite) {\n  var addSuffix = true;\n  var fileLocation = callSiteFileLocation(callSite);\n  var functionName = callSite.getFunctionName();\n  var isConstructor = callSite.isConstructor();\n  var isMethodCall = !(callSite.isToplevel() || isConstructor);\n  var line = '';\n\n  if (isMethodCall) {\n    var methodName = callSite.getMethodName();\n    var typeName = getConstructorName(callSite);\n\n    if (functionName) {\n      if (typeName && functionName.indexOf(typeName) !== 0) {\n        line += typeName + '.';\n      }\n\n      line += functionName;\n\n      if (methodName && functionName.lastIndexOf('.' + methodName) !== functionName.length - methodName.length - 1) {\n        line += ' [as ' + methodName + ']';\n      }\n    } else {\n      line += typeName + '.' + (methodName || '<anonymous>');\n    }\n  } else if (isConstructor) {\n    line += 'new ' + (functionName || '<anonymous>');\n  } else if (functionName) {\n    line += functionName;\n  } else {\n    addSuffix = false;\n    line += fileLocation;\n  }\n\n  if (addSuffix) {\n    line += ' (' + fileLocation + ')';\n  }\n\n  return line;\n}\n/**\n * Get constructor name of reviver.\n */\n\n\nfunction getConstructorName(obj) {\n  var receiver = obj.receiver;\n  return receiver.constructor && receiver.constructor.name || null;\n}","map":{"version":3,"names":["module","exports","callSiteToString","callSiteFileLocation","callSite","fileName","fileLocation","isNative","isEval","getScriptNameOrSourceURL","getEvalOrigin","getFileName","lineNumber","getLineNumber","columnNumber","getColumnNumber","addSuffix","functionName","getFunctionName","isConstructor","isMethodCall","isToplevel","line","methodName","getMethodName","typeName","getConstructorName","indexOf","lastIndexOf","length","obj","receiver","constructor","name"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/serve-index/node_modules/depd/lib/compat/callsite-tostring.js"],"sourcesContent":["/*!\n * depd\n * Copyright(c) 2014 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n */\n\nmodule.exports = callSiteToString\n\n/**\n * Format a CallSite file location to a string.\n */\n\nfunction callSiteFileLocation (callSite) {\n  var fileName\n  var fileLocation = ''\n\n  if (callSite.isNative()) {\n    fileLocation = 'native'\n  } else if (callSite.isEval()) {\n    fileName = callSite.getScriptNameOrSourceURL()\n    if (!fileName) {\n      fileLocation = callSite.getEvalOrigin()\n    }\n  } else {\n    fileName = callSite.getFileName()\n  }\n\n  if (fileName) {\n    fileLocation += fileName\n\n    var lineNumber = callSite.getLineNumber()\n    if (lineNumber != null) {\n      fileLocation += ':' + lineNumber\n\n      var columnNumber = callSite.getColumnNumber()\n      if (columnNumber) {\n        fileLocation += ':' + columnNumber\n      }\n    }\n  }\n\n  return fileLocation || 'unknown source'\n}\n\n/**\n * Format a CallSite to a string.\n */\n\nfunction callSiteToString (callSite) {\n  var addSuffix = true\n  var fileLocation = callSiteFileLocation(callSite)\n  var functionName = callSite.getFunctionName()\n  var isConstructor = callSite.isConstructor()\n  var isMethodCall = !(callSite.isToplevel() || isConstructor)\n  var line = ''\n\n  if (isMethodCall) {\n    var methodName = callSite.getMethodName()\n    var typeName = getConstructorName(callSite)\n\n    if (functionName) {\n      if (typeName && functionName.indexOf(typeName) !== 0) {\n        line += typeName + '.'\n      }\n\n      line += functionName\n\n      if (methodName && functionName.lastIndexOf('.' + methodName) !== functionName.length - methodName.length - 1) {\n        line += ' [as ' + methodName + ']'\n      }\n    } else {\n      line += typeName + '.' + (methodName || '<anonymous>')\n    }\n  } else if (isConstructor) {\n    line += 'new ' + (functionName || '<anonymous>')\n  } else if (functionName) {\n    line += functionName\n  } else {\n    addSuffix = false\n    line += fileLocation\n  }\n\n  if (addSuffix) {\n    line += ' (' + fileLocation + ')'\n  }\n\n  return line\n}\n\n/**\n * Get constructor name of reviver.\n */\n\nfunction getConstructorName (obj) {\n  var receiver = obj.receiver\n  return (receiver.constructor && receiver.constructor.name) || null\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}