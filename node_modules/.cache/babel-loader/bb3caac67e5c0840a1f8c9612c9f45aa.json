{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _useCustomEffect = _interopRequireDefault(require(\"./useCustomEffect\"));\n\nvar _dequal = require(\"dequal\");\n\nvar _useImmediateUpdateEffect = _interopRequireDefault(require(\"./useImmediateUpdateEffect\"));\n\nvar _useEventCallback = _interopRequireDefault(require(\"./useEventCallback\"));\n\nvar _react = require(\"react\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction isDepsEqual(_ref, _ref2) {\n  var nextElement = _ref[0],\n      nextConfig = _ref[1];\n  var prevElement = _ref2[0],\n      prevConfig = _ref2[1];\n  return nextElement === prevElement && (0, _dequal.dequal)(nextConfig, prevConfig);\n}\n/**\n * Observe mutations on a DOM node or tree of DOM nodes.\n * Depends on the `MutationObserver` api.\n *\n * ```tsx\n * const [element, attachRef] = useCallbackRef(null);\n *\n * useMutationObserver(element, { subtree: true }, (records) => {\n *\n * });\n *\n * return (\n *   <div ref={attachRef} />\n * )\n * ```\n *\n * @param element The DOM element to observe\n * @param config The observer configuration\n * @param callback A callback fired when a mutation occurs\n */\n\n\nfunction useMutationObserver(element, config, callback) {\n  var _useState = (0, _react.useState)(null),\n      records = _useState[0],\n      setRecords = _useState[1];\n\n  var handler = (0, _useEventCallback.default)(callback || setRecords);\n  (0, _useCustomEffect.default)(function () {\n    if (!element) return; // The behavior around reusing mutation observers is confusing\n    // observing again _should_ disable the last listener but doesn't\n    // seem to always be the case, maybe just in JSDOM? In any case the cost\n    // to redeclaring it is gonna be fairly low anyway, so make it simple\n\n    var observer = new MutationObserver(handler);\n    observer.observe(element, config);\n    return function () {\n      observer.disconnect();\n    };\n  }, [element, config], {\n    isEqual: isDepsEqual,\n    // Intentionally done in render, otherwise observer will miss any\n    // changes made to the DOM during this update\n    effectHook: _useImmediateUpdateEffect.default\n  });\n  return callback ? void 0 : records || [];\n}\n\nvar _default = useMutationObserver;\nexports.default = _default;","map":{"version":3,"names":["exports","__esModule","default","_useCustomEffect","_interopRequireDefault","require","_dequal","_useImmediateUpdateEffect","_useEventCallback","_react","obj","isDepsEqual","_ref","_ref2","nextElement","nextConfig","prevElement","prevConfig","dequal","useMutationObserver","element","config","callback","_useState","useState","records","setRecords","handler","observer","MutationObserver","observe","disconnect","isEqual","effectHook","_default"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/@restart/hooks/cjs/useMutationObserver.js"],"sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _useCustomEffect = _interopRequireDefault(require(\"./useCustomEffect\"));\n\nvar _dequal = require(\"dequal\");\n\nvar _useImmediateUpdateEffect = _interopRequireDefault(require(\"./useImmediateUpdateEffect\"));\n\nvar _useEventCallback = _interopRequireDefault(require(\"./useEventCallback\"));\n\nvar _react = require(\"react\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction isDepsEqual(_ref, _ref2) {\n  var nextElement = _ref[0],\n      nextConfig = _ref[1];\n  var prevElement = _ref2[0],\n      prevConfig = _ref2[1];\n  return nextElement === prevElement && (0, _dequal.dequal)(nextConfig, prevConfig);\n}\n/**\n * Observe mutations on a DOM node or tree of DOM nodes.\n * Depends on the `MutationObserver` api.\n *\n * ```tsx\n * const [element, attachRef] = useCallbackRef(null);\n *\n * useMutationObserver(element, { subtree: true }, (records) => {\n *\n * });\n *\n * return (\n *   <div ref={attachRef} />\n * )\n * ```\n *\n * @param element The DOM element to observe\n * @param config The observer configuration\n * @param callback A callback fired when a mutation occurs\n */\n\n\nfunction useMutationObserver(element, config, callback) {\n  var _useState = (0, _react.useState)(null),\n      records = _useState[0],\n      setRecords = _useState[1];\n\n  var handler = (0, _useEventCallback.default)(callback || setRecords);\n  (0, _useCustomEffect.default)(function () {\n    if (!element) return; // The behavior around reusing mutation observers is confusing\n    // observing again _should_ disable the last listener but doesn't\n    // seem to always be the case, maybe just in JSDOM? In any case the cost\n    // to redeclaring it is gonna be fairly low anyway, so make it simple\n\n    var observer = new MutationObserver(handler);\n    observer.observe(element, config);\n    return function () {\n      observer.disconnect();\n    };\n  }, [element, config], {\n    isEqual: isDepsEqual,\n    // Intentionally done in render, otherwise observer will miss any\n    // changes made to the DOM during this update\n    effectHook: _useImmediateUpdateEffect.default\n  });\n  return callback ? void 0 : records || [];\n}\n\nvar _default = useMutationObserver;\nexports.default = _default;"],"mappings":"AAAA;;AAEAA,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAIC,gBAAgB,GAAGC,sBAAsB,CAACC,OAAO,CAAC,mBAAD,CAAR,CAA7C;;AAEA,IAAIC,OAAO,GAAGD,OAAO,CAAC,QAAD,CAArB;;AAEA,IAAIE,yBAAyB,GAAGH,sBAAsB,CAACC,OAAO,CAAC,4BAAD,CAAR,CAAtD;;AAEA,IAAIG,iBAAiB,GAAGJ,sBAAsB,CAACC,OAAO,CAAC,oBAAD,CAAR,CAA9C;;AAEA,IAAII,MAAM,GAAGJ,OAAO,CAAC,OAAD,CAApB;;AAEA,SAASD,sBAAT,CAAgCM,GAAhC,EAAqC;EAAE,OAAOA,GAAG,IAAIA,GAAG,CAACT,UAAX,GAAwBS,GAAxB,GAA8B;IAAER,OAAO,EAAEQ;EAAX,CAArC;AAAwD;;AAE/F,SAASC,WAAT,CAAqBC,IAArB,EAA2BC,KAA3B,EAAkC;EAChC,IAAIC,WAAW,GAAGF,IAAI,CAAC,CAAD,CAAtB;EAAA,IACIG,UAAU,GAAGH,IAAI,CAAC,CAAD,CADrB;EAEA,IAAII,WAAW,GAAGH,KAAK,CAAC,CAAD,CAAvB;EAAA,IACII,UAAU,GAAGJ,KAAK,CAAC,CAAD,CADtB;EAEA,OAAOC,WAAW,KAAKE,WAAhB,IAA+B,CAAC,GAAGV,OAAO,CAACY,MAAZ,EAAoBH,UAApB,EAAgCE,UAAhC,CAAtC;AACD;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,SAASE,mBAAT,CAA6BC,OAA7B,EAAsCC,MAAtC,EAA8CC,QAA9C,EAAwD;EACtD,IAAIC,SAAS,GAAG,CAAC,GAAGd,MAAM,CAACe,QAAX,EAAqB,IAArB,CAAhB;EAAA,IACIC,OAAO,GAAGF,SAAS,CAAC,CAAD,CADvB;EAAA,IAEIG,UAAU,GAAGH,SAAS,CAAC,CAAD,CAF1B;;EAIA,IAAII,OAAO,GAAG,CAAC,GAAGnB,iBAAiB,CAACN,OAAtB,EAA+BoB,QAAQ,IAAII,UAA3C,CAAd;EACA,CAAC,GAAGvB,gBAAgB,CAACD,OAArB,EAA8B,YAAY;IACxC,IAAI,CAACkB,OAAL,EAAc,OAD0B,CAClB;IACtB;IACA;IACA;;IAEA,IAAIQ,QAAQ,GAAG,IAAIC,gBAAJ,CAAqBF,OAArB,CAAf;IACAC,QAAQ,CAACE,OAAT,CAAiBV,OAAjB,EAA0BC,MAA1B;IACA,OAAO,YAAY;MACjBO,QAAQ,CAACG,UAAT;IACD,CAFD;EAGD,CAXD,EAWG,CAACX,OAAD,EAAUC,MAAV,CAXH,EAWsB;IACpBW,OAAO,EAAErB,WADW;IAEpB;IACA;IACAsB,UAAU,EAAE1B,yBAAyB,CAACL;EAJlB,CAXtB;EAiBA,OAAOoB,QAAQ,GAAG,KAAK,CAAR,GAAYG,OAAO,IAAI,EAAtC;AACD;;AAED,IAAIS,QAAQ,GAAGf,mBAAf;AACAnB,OAAO,CAACE,OAAR,GAAkBgC,QAAlB"},"metadata":{},"sourceType":"script"}