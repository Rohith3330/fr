{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.RULE_NAME = void 0;\n\nconst utils_1 = require(\"@typescript-eslint/utils\");\n\nconst create_testing_library_rule_1 = require(\"../create-testing-library-rule\");\n\nconst node_utils_1 = require(\"../node-utils\");\n\nexports.RULE_NAME = 'no-container';\nexports.default = (0, create_testing_library_rule_1.createTestingLibraryRule)({\n  name: exports.RULE_NAME,\n  meta: {\n    type: 'problem',\n    docs: {\n      description: 'Disallow the use of `container` methods',\n      recommendedConfig: {\n        dom: false,\n        angular: 'error',\n        react: 'error',\n        vue: 'error',\n        marko: 'error'\n      }\n    },\n    messages: {\n      noContainer: 'Avoid using container methods. Prefer using the methods from Testing Library, such as \"getByRole()\"'\n    },\n    schema: []\n  },\n  defaultOptions: [],\n\n  create(context, _, helpers) {\n    const destructuredContainerPropNames = [];\n    const renderWrapperNames = [];\n    let renderResultVarName = null;\n    let containerName = null;\n    let containerCallsMethod = false;\n\n    function detectRenderWrapper(node) {\n      const innerFunction = (0, node_utils_1.getInnermostReturningFunction)(context, node);\n\n      if (innerFunction) {\n        renderWrapperNames.push((0, node_utils_1.getFunctionName)(innerFunction));\n      }\n    }\n\n    function showErrorIfChainedContainerMethod(innerNode) {\n      if ((0, node_utils_1.isMemberExpression)(innerNode)) {\n        if (utils_1.ASTUtils.isIdentifier(innerNode.object)) {\n          const isContainerName = innerNode.object.name === containerName;\n\n          if (isContainerName) {\n            context.report({\n              node: innerNode,\n              messageId: 'noContainer'\n            });\n            return;\n          }\n\n          const isRenderWrapper = innerNode.object.name === renderResultVarName;\n          containerCallsMethod = utils_1.ASTUtils.isIdentifier(innerNode.property) && innerNode.property.name === 'container' && isRenderWrapper;\n\n          if (containerCallsMethod) {\n            context.report({\n              node: innerNode.property,\n              messageId: 'noContainer'\n            });\n            return;\n          }\n        }\n\n        showErrorIfChainedContainerMethod(innerNode.object);\n      }\n    }\n\n    return {\n      CallExpression(node) {\n        const callExpressionIdentifier = (0, node_utils_1.getDeepestIdentifierNode)(node);\n\n        if (!callExpressionIdentifier) {\n          return;\n        }\n\n        if (helpers.isRenderUtil(callExpressionIdentifier)) {\n          detectRenderWrapper(callExpressionIdentifier);\n        }\n\n        if ((0, node_utils_1.isMemberExpression)(node.callee)) {\n          showErrorIfChainedContainerMethod(node.callee);\n        } else if (utils_1.ASTUtils.isIdentifier(node.callee) && destructuredContainerPropNames.includes(node.callee.name)) {\n          context.report({\n            node,\n            messageId: 'noContainer'\n          });\n        }\n      },\n\n      VariableDeclarator(node) {\n        if (!node.init) {\n          return;\n        }\n\n        const initIdentifierNode = (0, node_utils_1.getDeepestIdentifierNode)(node.init);\n\n        if (!initIdentifierNode) {\n          return;\n        }\n\n        const isRenderWrapperVariableDeclarator = renderWrapperNames.includes(initIdentifierNode.name);\n\n        if (!helpers.isRenderVariableDeclarator(node) && !isRenderWrapperVariableDeclarator) {\n          return;\n        }\n\n        if ((0, node_utils_1.isObjectPattern)(node.id)) {\n          const containerIndex = node.id.properties.findIndex(property => (0, node_utils_1.isProperty)(property) && utils_1.ASTUtils.isIdentifier(property.key) && property.key.name === 'container');\n          const nodeValue = containerIndex !== -1 && node.id.properties[containerIndex].value;\n\n          if (!nodeValue) {\n            return;\n          }\n\n          if (utils_1.ASTUtils.isIdentifier(nodeValue)) {\n            containerName = nodeValue.name;\n          } else if ((0, node_utils_1.isObjectPattern)(nodeValue)) {\n            nodeValue.properties.forEach(property => (0, node_utils_1.isProperty)(property) && utils_1.ASTUtils.isIdentifier(property.key) && destructuredContainerPropNames.push(property.key.name));\n          }\n        } else if (utils_1.ASTUtils.isIdentifier(node.id)) {\n          renderResultVarName = node.id.name;\n        }\n      }\n\n    };\n  }\n\n});","map":{"version":3,"names":["Object","defineProperty","exports","value","RULE_NAME","utils_1","require","create_testing_library_rule_1","node_utils_1","default","createTestingLibraryRule","name","meta","type","docs","description","recommendedConfig","dom","angular","react","vue","marko","messages","noContainer","schema","defaultOptions","create","context","_","helpers","destructuredContainerPropNames","renderWrapperNames","renderResultVarName","containerName","containerCallsMethod","detectRenderWrapper","node","innerFunction","getInnermostReturningFunction","push","getFunctionName","showErrorIfChainedContainerMethod","innerNode","isMemberExpression","ASTUtils","isIdentifier","object","isContainerName","report","messageId","isRenderWrapper","property","CallExpression","callExpressionIdentifier","getDeepestIdentifierNode","isRenderUtil","callee","includes","VariableDeclarator","init","initIdentifierNode","isRenderWrapperVariableDeclarator","isRenderVariableDeclarator","isObjectPattern","id","containerIndex","properties","findIndex","isProperty","key","nodeValue","forEach"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/eslint-plugin-testing-library/rules/no-container.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RULE_NAME = void 0;\nconst utils_1 = require(\"@typescript-eslint/utils\");\nconst create_testing_library_rule_1 = require(\"../create-testing-library-rule\");\nconst node_utils_1 = require(\"../node-utils\");\nexports.RULE_NAME = 'no-container';\nexports.default = (0, create_testing_library_rule_1.createTestingLibraryRule)({\n    name: exports.RULE_NAME,\n    meta: {\n        type: 'problem',\n        docs: {\n            description: 'Disallow the use of `container` methods',\n            recommendedConfig: {\n                dom: false,\n                angular: 'error',\n                react: 'error',\n                vue: 'error',\n                marko: 'error',\n            },\n        },\n        messages: {\n            noContainer: 'Avoid using container methods. Prefer using the methods from Testing Library, such as \"getByRole()\"',\n        },\n        schema: [],\n    },\n    defaultOptions: [],\n    create(context, _, helpers) {\n        const destructuredContainerPropNames = [];\n        const renderWrapperNames = [];\n        let renderResultVarName = null;\n        let containerName = null;\n        let containerCallsMethod = false;\n        function detectRenderWrapper(node) {\n            const innerFunction = (0, node_utils_1.getInnermostReturningFunction)(context, node);\n            if (innerFunction) {\n                renderWrapperNames.push((0, node_utils_1.getFunctionName)(innerFunction));\n            }\n        }\n        function showErrorIfChainedContainerMethod(innerNode) {\n            if ((0, node_utils_1.isMemberExpression)(innerNode)) {\n                if (utils_1.ASTUtils.isIdentifier(innerNode.object)) {\n                    const isContainerName = innerNode.object.name === containerName;\n                    if (isContainerName) {\n                        context.report({\n                            node: innerNode,\n                            messageId: 'noContainer',\n                        });\n                        return;\n                    }\n                    const isRenderWrapper = innerNode.object.name === renderResultVarName;\n                    containerCallsMethod =\n                        utils_1.ASTUtils.isIdentifier(innerNode.property) &&\n                            innerNode.property.name === 'container' &&\n                            isRenderWrapper;\n                    if (containerCallsMethod) {\n                        context.report({\n                            node: innerNode.property,\n                            messageId: 'noContainer',\n                        });\n                        return;\n                    }\n                }\n                showErrorIfChainedContainerMethod(innerNode.object);\n            }\n        }\n        return {\n            CallExpression(node) {\n                const callExpressionIdentifier = (0, node_utils_1.getDeepestIdentifierNode)(node);\n                if (!callExpressionIdentifier) {\n                    return;\n                }\n                if (helpers.isRenderUtil(callExpressionIdentifier)) {\n                    detectRenderWrapper(callExpressionIdentifier);\n                }\n                if ((0, node_utils_1.isMemberExpression)(node.callee)) {\n                    showErrorIfChainedContainerMethod(node.callee);\n                }\n                else if (utils_1.ASTUtils.isIdentifier(node.callee) &&\n                    destructuredContainerPropNames.includes(node.callee.name)) {\n                    context.report({\n                        node,\n                        messageId: 'noContainer',\n                    });\n                }\n            },\n            VariableDeclarator(node) {\n                if (!node.init) {\n                    return;\n                }\n                const initIdentifierNode = (0, node_utils_1.getDeepestIdentifierNode)(node.init);\n                if (!initIdentifierNode) {\n                    return;\n                }\n                const isRenderWrapperVariableDeclarator = renderWrapperNames.includes(initIdentifierNode.name);\n                if (!helpers.isRenderVariableDeclarator(node) &&\n                    !isRenderWrapperVariableDeclarator) {\n                    return;\n                }\n                if ((0, node_utils_1.isObjectPattern)(node.id)) {\n                    const containerIndex = node.id.properties.findIndex((property) => (0, node_utils_1.isProperty)(property) &&\n                        utils_1.ASTUtils.isIdentifier(property.key) &&\n                        property.key.name === 'container');\n                    const nodeValue = containerIndex !== -1 && node.id.properties[containerIndex].value;\n                    if (!nodeValue) {\n                        return;\n                    }\n                    if (utils_1.ASTUtils.isIdentifier(nodeValue)) {\n                        containerName = nodeValue.name;\n                    }\n                    else if ((0, node_utils_1.isObjectPattern)(nodeValue)) {\n                        nodeValue.properties.forEach((property) => (0, node_utils_1.isProperty)(property) &&\n                            utils_1.ASTUtils.isIdentifier(property.key) &&\n                            destructuredContainerPropNames.push(property.key.name));\n                    }\n                }\n                else if (utils_1.ASTUtils.isIdentifier(node.id)) {\n                    renderResultVarName = node.id.name;\n                }\n            },\n        };\n    },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}