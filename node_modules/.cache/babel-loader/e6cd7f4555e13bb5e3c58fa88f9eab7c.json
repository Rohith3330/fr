{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nconst schema = [{\n  enum: ['always', 'never'],\n  type: 'string'\n}];\nconst meta = {\n  fixable: 'code'\n};\n\nconst create = context => {\n  const always = (context.options[0] || 'always') === 'always';\n  const sourceCode = context.getSourceCode();\n  return {\n    ObjectTypeAnnotation(node) {\n      const {\n        exact,\n        indexers,\n        inexact\n      } = node;\n\n      if (!['DeclareClass', 'InterfaceDeclaration'].includes(node.parent.type) && always && !exact && !inexact && indexers.length === 0) {\n        context.report({\n          fix: fixer => {\n            return [fixer.replaceText(sourceCode.getFirstToken(node), '{|'), fixer.replaceText(sourceCode.getLastToken(node), '|}')];\n          },\n          message: 'Object type must be exact.',\n          node\n        });\n      }\n\n      if (!always && exact) {\n        context.report({\n          fix: fixer => {\n            return [fixer.replaceText(sourceCode.getFirstToken(node), '{'), fixer.replaceText(sourceCode.getLastToken(node), '}')];\n          },\n          message: 'Object type must not be exact.',\n          node\n        });\n      }\n    }\n\n  };\n};\n\nvar _default = {\n  create,\n  meta,\n  schema\n};\nexports.default = _default;\nmodule.exports = exports.default;","map":{"version":3,"names":["Object","defineProperty","exports","value","default","schema","enum","type","meta","fixable","create","context","always","options","sourceCode","getSourceCode","ObjectTypeAnnotation","node","exact","indexers","inexact","includes","parent","length","report","fix","fixer","replaceText","getFirstToken","getLastToken","message","_default","module"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/eslint-plugin-flowtype/dist/rules/requireExactType.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nconst schema = [{\n  enum: ['always', 'never'],\n  type: 'string'\n}];\nconst meta = {\n  fixable: 'code'\n};\n\nconst create = context => {\n  const always = (context.options[0] || 'always') === 'always';\n  const sourceCode = context.getSourceCode();\n  return {\n    ObjectTypeAnnotation(node) {\n      const {\n        exact,\n        indexers,\n        inexact\n      } = node;\n\n      if (!['DeclareClass', 'InterfaceDeclaration'].includes(node.parent.type) && always && !exact && !inexact && indexers.length === 0) {\n        context.report({\n          fix: fixer => {\n            return [fixer.replaceText(sourceCode.getFirstToken(node), '{|'), fixer.replaceText(sourceCode.getLastToken(node), '|}')];\n          },\n          message: 'Object type must be exact.',\n          node\n        });\n      }\n\n      if (!always && exact) {\n        context.report({\n          fix: fixer => {\n            return [fixer.replaceText(sourceCode.getFirstToken(node), '{'), fixer.replaceText(sourceCode.getLastToken(node), '}')];\n          },\n          message: 'Object type must not be exact.',\n          node\n        });\n      }\n    }\n\n  };\n};\n\nvar _default = {\n  create,\n  meta,\n  schema\n};\nexports.default = _default;\nmodule.exports = exports.default;"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAC3CC,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;AACA,MAAMC,MAAM,GAAG,CAAC;EACdC,IAAI,EAAE,CAAC,QAAD,EAAW,OAAX,CADQ;EAEdC,IAAI,EAAE;AAFQ,CAAD,CAAf;AAIA,MAAMC,IAAI,GAAG;EACXC,OAAO,EAAE;AADE,CAAb;;AAIA,MAAMC,MAAM,GAAGC,OAAO,IAAI;EACxB,MAAMC,MAAM,GAAG,CAACD,OAAO,CAACE,OAAR,CAAgB,CAAhB,KAAsB,QAAvB,MAAqC,QAApD;EACA,MAAMC,UAAU,GAAGH,OAAO,CAACI,aAAR,EAAnB;EACA,OAAO;IACLC,oBAAoB,CAACC,IAAD,EAAO;MACzB,MAAM;QACJC,KADI;QAEJC,QAFI;QAGJC;MAHI,IAIFH,IAJJ;;MAMA,IAAI,CAAC,CAAC,cAAD,EAAiB,sBAAjB,EAAyCI,QAAzC,CAAkDJ,IAAI,CAACK,MAAL,CAAYf,IAA9D,CAAD,IAAwEK,MAAxE,IAAkF,CAACM,KAAnF,IAA4F,CAACE,OAA7F,IAAwGD,QAAQ,CAACI,MAAT,KAAoB,CAAhI,EAAmI;QACjIZ,OAAO,CAACa,MAAR,CAAe;UACbC,GAAG,EAAEC,KAAK,IAAI;YACZ,OAAO,CAACA,KAAK,CAACC,WAAN,CAAkBb,UAAU,CAACc,aAAX,CAAyBX,IAAzB,CAAlB,EAAkD,IAAlD,CAAD,EAA0DS,KAAK,CAACC,WAAN,CAAkBb,UAAU,CAACe,YAAX,CAAwBZ,IAAxB,CAAlB,EAAiD,IAAjD,CAA1D,CAAP;UACD,CAHY;UAIba,OAAO,EAAE,4BAJI;UAKbb;QALa,CAAf;MAOD;;MAED,IAAI,CAACL,MAAD,IAAWM,KAAf,EAAsB;QACpBP,OAAO,CAACa,MAAR,CAAe;UACbC,GAAG,EAAEC,KAAK,IAAI;YACZ,OAAO,CAACA,KAAK,CAACC,WAAN,CAAkBb,UAAU,CAACc,aAAX,CAAyBX,IAAzB,CAAlB,EAAkD,GAAlD,CAAD,EAAyDS,KAAK,CAACC,WAAN,CAAkBb,UAAU,CAACe,YAAX,CAAwBZ,IAAxB,CAAlB,EAAiD,GAAjD,CAAzD,CAAP;UACD,CAHY;UAIba,OAAO,EAAE,gCAJI;UAKbb;QALa,CAAf;MAOD;IACF;;EA3BI,CAAP;AA8BD,CAjCD;;AAmCA,IAAIc,QAAQ,GAAG;EACbrB,MADa;EAEbF,IAFa;EAGbH;AAHa,CAAf;AAKAH,OAAO,CAACE,OAAR,GAAkB2B,QAAlB;AACAC,MAAM,CAAC9B,OAAP,GAAiBA,OAAO,CAACE,OAAzB"},"metadata":{},"sourceType":"script"}