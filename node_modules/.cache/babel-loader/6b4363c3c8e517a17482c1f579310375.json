{"ast":null,"code":"var emptyCharacter = '';\n\nvar Breaks = require('../options/format').Breaks;\n\nvar Spaces = require('../options/format').Spaces;\n\nvar Marker = require('../tokenizer/marker');\n\nvar Token = require('../tokenizer/token');\n\nfunction supportsAfterClosingBrace(token) {\n  return token[1][1] == 'background' || token[1][1] == 'transform' || token[1][1] == 'src';\n}\n\nfunction afterClosingBrace(token, valueIndex) {\n  return token[valueIndex][1][token[valueIndex][1].length - 1] == Marker.CLOSE_ROUND_BRACKET;\n}\n\nfunction afterComma(token, valueIndex) {\n  return token[valueIndex][1] == Marker.COMMA;\n}\n\nfunction afterSlash(token, valueIndex) {\n  return token[valueIndex][1] == Marker.FORWARD_SLASH;\n}\n\nfunction beforeComma(token, valueIndex) {\n  return token[valueIndex + 1] && token[valueIndex + 1][1] == Marker.COMMA;\n}\n\nfunction beforeSlash(token, valueIndex) {\n  return token[valueIndex + 1] && token[valueIndex + 1][1] == Marker.FORWARD_SLASH;\n}\n\nfunction inFilter(token) {\n  return token[1][1] == 'filter' || token[1][1] == '-ms-filter';\n}\n\nfunction disallowsSpace(context, token, valueIndex) {\n  return !context.spaceAfterClosingBrace && supportsAfterClosingBrace(token) && afterClosingBrace(token, valueIndex) || beforeSlash(token, valueIndex) || afterSlash(token, valueIndex) || beforeComma(token, valueIndex) || afterComma(token, valueIndex);\n}\n\nfunction rules(context, tokens) {\n  var store = context.store;\n\n  for (var i = 0, l = tokens.length; i < l; i++) {\n    store(context, tokens[i]);\n\n    if (i < l - 1) {\n      store(context, comma(context));\n    }\n  }\n}\n\nfunction body(context, tokens) {\n  var lastPropertyAt = lastPropertyIndex(tokens);\n\n  for (var i = 0, l = tokens.length; i < l; i++) {\n    property(context, tokens, i, lastPropertyAt);\n  }\n}\n\nfunction lastPropertyIndex(tokens) {\n  var index = tokens.length - 1;\n\n  for (; index >= 0; index--) {\n    if (tokens[index][0] != Token.COMMENT) {\n      break;\n    }\n  }\n\n  return index;\n}\n\nfunction property(context, tokens, position, lastPropertyAt) {\n  var store = context.store;\n  var token = tokens[position];\n  var propertyValue = token[2];\n  var isPropertyBlock = propertyValue && propertyValue[0] === Token.PROPERTY_BLOCK;\n  var needsSemicolon;\n\n  if (context.format) {\n    if (context.format.semicolonAfterLastProperty || isPropertyBlock) {\n      needsSemicolon = true;\n    } else if (position < lastPropertyAt) {\n      needsSemicolon = true;\n    } else {\n      needsSemicolon = false;\n    }\n  } else {\n    needsSemicolon = position < lastPropertyAt || isPropertyBlock;\n  }\n\n  var isLast = position === lastPropertyAt;\n\n  switch (token[0]) {\n    case Token.AT_RULE:\n      store(context, token);\n      store(context, semicolon(context, Breaks.AfterProperty, false));\n      break;\n\n    case Token.AT_RULE_BLOCK:\n      rules(context, token[1]);\n      store(context, openBrace(context, Breaks.AfterRuleBegins, true));\n      body(context, token[2]);\n      store(context, closeBrace(context, Breaks.AfterRuleEnds, false, isLast));\n      break;\n\n    case Token.COMMENT:\n      store(context, token);\n      store(context, breakFor(context, Breaks.AfterComment) + context.indentWith);\n      break;\n\n    case Token.PROPERTY:\n      store(context, token[1]);\n      store(context, colon(context));\n\n      if (propertyValue) {\n        value(context, token);\n      }\n\n      store(context, needsSemicolon ? semicolon(context, Breaks.AfterProperty, isLast) : emptyCharacter);\n      break;\n\n    case Token.RAW:\n      store(context, token);\n  }\n}\n\nfunction value(context, token) {\n  var store = context.store;\n  var j, m;\n\n  if (token[2][0] == Token.PROPERTY_BLOCK) {\n    store(context, openBrace(context, Breaks.AfterBlockBegins, false));\n    body(context, token[2][1]);\n    store(context, closeBrace(context, Breaks.AfterBlockEnds, false, true));\n  } else {\n    for (j = 2, m = token.length; j < m; j++) {\n      store(context, token[j]);\n\n      if (j < m - 1 && (inFilter(token) || !disallowsSpace(context, token, j))) {\n        store(context, Marker.SPACE);\n      }\n    }\n  }\n}\n\nfunction breakFor(context, where) {\n  return context.format ? context.format.breaks[where] : emptyCharacter;\n}\n\nfunction allowsSpace(context, where) {\n  return context.format && context.format.spaces[where];\n}\n\nfunction openBrace(context, where, needsPrefixSpace) {\n  if (context.format) {\n    context.indentBy += context.format.indentBy;\n    context.indentWith = context.format.indentWith.repeat(context.indentBy);\n    return (needsPrefixSpace && allowsSpace(context, Spaces.BeforeBlockBegins) ? Marker.SPACE : emptyCharacter) + Marker.OPEN_CURLY_BRACKET + breakFor(context, where) + context.indentWith;\n  }\n\n  return Marker.OPEN_CURLY_BRACKET;\n}\n\nfunction closeBrace(context, where, beforeBlockEnd, isLast) {\n  if (context.format) {\n    context.indentBy -= context.format.indentBy;\n    context.indentWith = context.format.indentWith.repeat(context.indentBy);\n    return (beforeBlockEnd ? breakFor(context, Breaks.BeforeBlockEnds) : breakFor(context, Breaks.AfterProperty)) + context.indentWith + Marker.CLOSE_CURLY_BRACKET + (isLast ? emptyCharacter : breakFor(context, where) + context.indentWith);\n  }\n\n  return Marker.CLOSE_CURLY_BRACKET;\n}\n\nfunction colon(context) {\n  return context.format ? Marker.COLON + (allowsSpace(context, Spaces.BeforeValue) ? Marker.SPACE : emptyCharacter) : Marker.COLON;\n}\n\nfunction semicolon(context, where, isLast) {\n  return context.format ? Marker.SEMICOLON + (isLast ? emptyCharacter : breakFor(context, where) + context.indentWith) : Marker.SEMICOLON;\n}\n\nfunction comma(context) {\n  return context.format ? Marker.COMMA + breakFor(context, Breaks.BetweenSelectors) + context.indentWith : Marker.COMMA;\n}\n\nfunction all(context, tokens) {\n  var store = context.store;\n  var token;\n  var isLast;\n  var i, l;\n\n  for (i = 0, l = tokens.length; i < l; i++) {\n    token = tokens[i];\n    isLast = i == l - 1;\n\n    switch (token[0]) {\n      case Token.AT_RULE:\n        store(context, token);\n        store(context, semicolon(context, Breaks.AfterAtRule, isLast));\n        break;\n\n      case Token.AT_RULE_BLOCK:\n        rules(context, token[1]);\n        store(context, openBrace(context, Breaks.AfterRuleBegins, true));\n        body(context, token[2]);\n        store(context, closeBrace(context, Breaks.AfterRuleEnds, false, isLast));\n        break;\n\n      case Token.NESTED_BLOCK:\n        rules(context, token[1]);\n        store(context, openBrace(context, Breaks.AfterBlockBegins, true));\n        all(context, token[2]);\n        store(context, closeBrace(context, Breaks.AfterBlockEnds, true, isLast));\n        break;\n\n      case Token.COMMENT:\n        store(context, token);\n        store(context, breakFor(context, Breaks.AfterComment) + context.indentWith);\n        break;\n\n      case Token.RAW:\n        store(context, token);\n        break;\n\n      case Token.RULE:\n        rules(context, token[1]);\n        store(context, openBrace(context, Breaks.AfterRuleBegins, true));\n        body(context, token[2]);\n        store(context, closeBrace(context, Breaks.AfterRuleEnds, false, isLast));\n        break;\n    }\n  }\n}\n\nmodule.exports = {\n  all: all,\n  body: body,\n  property: property,\n  rules: rules,\n  value: value\n};","map":{"version":3,"names":["emptyCharacter","Breaks","require","Spaces","Marker","Token","supportsAfterClosingBrace","token","afterClosingBrace","valueIndex","length","CLOSE_ROUND_BRACKET","afterComma","COMMA","afterSlash","FORWARD_SLASH","beforeComma","beforeSlash","inFilter","disallowsSpace","context","spaceAfterClosingBrace","rules","tokens","store","i","l","comma","body","lastPropertyAt","lastPropertyIndex","property","index","COMMENT","position","propertyValue","isPropertyBlock","PROPERTY_BLOCK","needsSemicolon","format","semicolonAfterLastProperty","isLast","AT_RULE","semicolon","AfterProperty","AT_RULE_BLOCK","openBrace","AfterRuleBegins","closeBrace","AfterRuleEnds","breakFor","AfterComment","indentWith","PROPERTY","colon","value","RAW","j","m","AfterBlockBegins","AfterBlockEnds","SPACE","where","breaks","allowsSpace","spaces","needsPrefixSpace","indentBy","repeat","BeforeBlockBegins","OPEN_CURLY_BRACKET","beforeBlockEnd","BeforeBlockEnds","CLOSE_CURLY_BRACKET","COLON","BeforeValue","SEMICOLON","BetweenSelectors","all","AfterAtRule","NESTED_BLOCK","RULE","module","exports"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/clean-css/lib/writer/helpers.js"],"sourcesContent":["var emptyCharacter = '';\n\nvar Breaks = require('../options/format').Breaks;\nvar Spaces = require('../options/format').Spaces;\n\nvar Marker = require('../tokenizer/marker');\nvar Token = require('../tokenizer/token');\n\nfunction supportsAfterClosingBrace(token) {\n  return token[1][1] == 'background' || token[1][1] == 'transform' || token[1][1] == 'src';\n}\n\nfunction afterClosingBrace(token, valueIndex) {\n  return token[valueIndex][1][token[valueIndex][1].length - 1] == Marker.CLOSE_ROUND_BRACKET;\n}\n\nfunction afterComma(token, valueIndex) {\n  return token[valueIndex][1] == Marker.COMMA;\n}\n\nfunction afterSlash(token, valueIndex) {\n  return token[valueIndex][1] == Marker.FORWARD_SLASH;\n}\n\nfunction beforeComma(token, valueIndex) {\n  return token[valueIndex + 1] && token[valueIndex + 1][1] == Marker.COMMA;\n}\n\nfunction beforeSlash(token, valueIndex) {\n  return token[valueIndex + 1] && token[valueIndex + 1][1] == Marker.FORWARD_SLASH;\n}\n\nfunction inFilter(token) {\n  return token[1][1] == 'filter' || token[1][1] == '-ms-filter';\n}\n\nfunction disallowsSpace(context, token, valueIndex) {\n  return !context.spaceAfterClosingBrace\n    && supportsAfterClosingBrace(token)\n    && afterClosingBrace(token, valueIndex)\n    || beforeSlash(token, valueIndex)\n    || afterSlash(token, valueIndex)\n    || beforeComma(token, valueIndex)\n    || afterComma(token, valueIndex);\n}\n\nfunction rules(context, tokens) {\n  var store = context.store;\n\n  for (var i = 0, l = tokens.length; i < l; i++) {\n    store(context, tokens[i]);\n\n    if (i < l - 1) {\n      store(context, comma(context));\n    }\n  }\n}\n\nfunction body(context, tokens) {\n  var lastPropertyAt = lastPropertyIndex(tokens);\n\n  for (var i = 0, l = tokens.length; i < l; i++) {\n    property(context, tokens, i, lastPropertyAt);\n  }\n}\n\nfunction lastPropertyIndex(tokens) {\n  var index = tokens.length - 1;\n\n  for (; index >= 0; index--) {\n    if (tokens[index][0] != Token.COMMENT) {\n      break;\n    }\n  }\n\n  return index;\n}\n\nfunction property(context, tokens, position, lastPropertyAt) {\n  var store = context.store;\n  var token = tokens[position];\n\n  var propertyValue = token[2];\n  var isPropertyBlock = propertyValue && propertyValue[0] === Token.PROPERTY_BLOCK;\n\n  var needsSemicolon;\n  if (context.format) {\n    if (context.format.semicolonAfterLastProperty || isPropertyBlock) {\n      needsSemicolon = true;\n    } else if (position < lastPropertyAt) {\n      needsSemicolon = true;\n    } else {\n      needsSemicolon = false;\n    }\n  } else {\n    needsSemicolon = position < lastPropertyAt || isPropertyBlock;\n  }\n\n  var isLast = position === lastPropertyAt;\n\n  switch (token[0]) {\n  case Token.AT_RULE:\n    store(context, token);\n    store(context, semicolon(context, Breaks.AfterProperty, false));\n    break;\n  case Token.AT_RULE_BLOCK:\n    rules(context, token[1]);\n    store(context, openBrace(context, Breaks.AfterRuleBegins, true));\n    body(context, token[2]);\n    store(context, closeBrace(context, Breaks.AfterRuleEnds, false, isLast));\n    break;\n  case Token.COMMENT:\n    store(context, token);\n    store(context, breakFor(context, Breaks.AfterComment) + context.indentWith);\n    break;\n  case Token.PROPERTY:\n    store(context, token[1]);\n    store(context, colon(context));\n    if (propertyValue) {\n      value(context, token);\n    }\n    store(\n      context,\n      needsSemicolon ? semicolon(context, Breaks.AfterProperty, isLast) : emptyCharacter\n    );\n    break;\n  case Token.RAW:\n    store(context, token);\n  }\n}\n\nfunction value(context, token) {\n  var store = context.store;\n  var j, m;\n\n  if (token[2][0] == Token.PROPERTY_BLOCK) {\n    store(context, openBrace(context, Breaks.AfterBlockBegins, false));\n    body(context, token[2][1]);\n    store(context, closeBrace(context, Breaks.AfterBlockEnds, false, true));\n  } else {\n    for (j = 2, m = token.length; j < m; j++) {\n      store(context, token[j]);\n\n      if (j < m - 1 && (inFilter(token) || !disallowsSpace(context, token, j))) {\n        store(context, Marker.SPACE);\n      }\n    }\n  }\n}\n\nfunction breakFor(context, where) {\n  return context.format ? context.format.breaks[where] : emptyCharacter;\n}\n\nfunction allowsSpace(context, where) {\n  return context.format && context.format.spaces[where];\n}\n\nfunction openBrace(context, where, needsPrefixSpace) {\n  if (context.format) {\n    context.indentBy += context.format.indentBy;\n    context.indentWith = context.format.indentWith.repeat(context.indentBy);\n    return (\n      needsPrefixSpace\n      && allowsSpace(context, Spaces.BeforeBlockBegins) ? Marker.SPACE : emptyCharacter\n    ) + Marker.OPEN_CURLY_BRACKET\n      + breakFor(context, where)\n      + context.indentWith;\n  }\n  return Marker.OPEN_CURLY_BRACKET;\n}\n\nfunction closeBrace(context, where, beforeBlockEnd, isLast) {\n  if (context.format) {\n    context.indentBy -= context.format.indentBy;\n    context.indentWith = context.format.indentWith.repeat(context.indentBy);\n    return (\n      beforeBlockEnd\n        ? breakFor(context, Breaks.BeforeBlockEnds)\n        : breakFor(context, Breaks.AfterProperty)\n    ) + context.indentWith\n      + Marker.CLOSE_CURLY_BRACKET\n      + (isLast ? emptyCharacter : breakFor(context, where) + context.indentWith);\n  }\n  return Marker.CLOSE_CURLY_BRACKET;\n}\n\nfunction colon(context) {\n  return context.format\n    ? Marker.COLON + (allowsSpace(context, Spaces.BeforeValue) ? Marker.SPACE : emptyCharacter)\n    : Marker.COLON;\n}\n\nfunction semicolon(context, where, isLast) {\n  return context.format\n    ? Marker.SEMICOLON + (isLast ? emptyCharacter : (breakFor(context, where) + context.indentWith))\n    : Marker.SEMICOLON;\n}\n\nfunction comma(context) {\n  return context.format\n    ? Marker.COMMA + breakFor(context, Breaks.BetweenSelectors) + context.indentWith\n    : Marker.COMMA;\n}\n\nfunction all(context, tokens) {\n  var store = context.store;\n  var token;\n  var isLast;\n  var i, l;\n\n  for (i = 0, l = tokens.length; i < l; i++) {\n    token = tokens[i];\n    isLast = i == l - 1;\n\n    switch (token[0]) {\n    case Token.AT_RULE:\n      store(context, token);\n      store(context, semicolon(context, Breaks.AfterAtRule, isLast));\n      break;\n    case Token.AT_RULE_BLOCK:\n      rules(context, token[1]);\n      store(context, openBrace(context, Breaks.AfterRuleBegins, true));\n      body(context, token[2]);\n      store(context, closeBrace(context, Breaks.AfterRuleEnds, false, isLast));\n      break;\n    case Token.NESTED_BLOCK:\n      rules(context, token[1]);\n      store(context, openBrace(context, Breaks.AfterBlockBegins, true));\n      all(context, token[2]);\n      store(context, closeBrace(context, Breaks.AfterBlockEnds, true, isLast));\n      break;\n    case Token.COMMENT:\n      store(context, token);\n      store(context, breakFor(context, Breaks.AfterComment) + context.indentWith);\n      break;\n    case Token.RAW:\n      store(context, token);\n      break;\n    case Token.RULE:\n      rules(context, token[1]);\n      store(context, openBrace(context, Breaks.AfterRuleBegins, true));\n      body(context, token[2]);\n      store(context, closeBrace(context, Breaks.AfterRuleEnds, false, isLast));\n      break;\n    }\n  }\n}\n\nmodule.exports = {\n  all: all,\n  body: body,\n  property: property,\n  rules: rules,\n  value: value\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}