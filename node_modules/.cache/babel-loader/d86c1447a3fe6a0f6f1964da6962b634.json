{"ast":null,"code":"var prepare = require('./prepare/index');\n\nvar mergeAtrule = require('./1-mergeAtrule');\n\nvar initialMergeRuleset = require('./2-initialMergeRuleset');\n\nvar disjoinRuleset = require('./3-disjoinRuleset');\n\nvar restructShorthand = require('./4-restructShorthand');\n\nvar restructBlock = require('./6-restructBlock');\n\nvar mergeRuleset = require('./7-mergeRuleset');\n\nvar restructRuleset = require('./8-restructRuleset');\n\nmodule.exports = function (ast, options) {\n  // prepare ast for restructing\n  var indexer = prepare(ast, options);\n  options.logger('prepare', ast);\n  mergeAtrule(ast, options);\n  options.logger('mergeAtrule', ast);\n  initialMergeRuleset(ast);\n  options.logger('initialMergeRuleset', ast);\n  disjoinRuleset(ast);\n  options.logger('disjoinRuleset', ast);\n  restructShorthand(ast, indexer);\n  options.logger('restructShorthand', ast);\n  restructBlock(ast);\n  options.logger('restructBlock', ast);\n  mergeRuleset(ast);\n  options.logger('mergeRuleset', ast);\n  restructRuleset(ast);\n  options.logger('restructRuleset', ast);\n};","map":{"version":3,"names":["prepare","require","mergeAtrule","initialMergeRuleset","disjoinRuleset","restructShorthand","restructBlock","mergeRuleset","restructRuleset","module","exports","ast","options","indexer","logger"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/csso/lib/restructure/index.js"],"sourcesContent":["var prepare = require('./prepare/index');\nvar mergeAtrule = require('./1-mergeAtrule');\nvar initialMergeRuleset = require('./2-initialMergeRuleset');\nvar disjoinRuleset = require('./3-disjoinRuleset');\nvar restructShorthand = require('./4-restructShorthand');\nvar restructBlock = require('./6-restructBlock');\nvar mergeRuleset = require('./7-mergeRuleset');\nvar restructRuleset = require('./8-restructRuleset');\n\nmodule.exports = function(ast, options) {\n    // prepare ast for restructing\n    var indexer = prepare(ast, options);\n    options.logger('prepare', ast);\n\n    mergeAtrule(ast, options);\n    options.logger('mergeAtrule', ast);\n\n    initialMergeRuleset(ast);\n    options.logger('initialMergeRuleset', ast);\n\n    disjoinRuleset(ast);\n    options.logger('disjoinRuleset', ast);\n\n    restructShorthand(ast, indexer);\n    options.logger('restructShorthand', ast);\n\n    restructBlock(ast);\n    options.logger('restructBlock', ast);\n\n    mergeRuleset(ast);\n    options.logger('mergeRuleset', ast);\n\n    restructRuleset(ast);\n    options.logger('restructRuleset', ast);\n};\n"],"mappings":"AAAA,IAAIA,OAAO,GAAGC,OAAO,CAAC,iBAAD,CAArB;;AACA,IAAIC,WAAW,GAAGD,OAAO,CAAC,iBAAD,CAAzB;;AACA,IAAIE,mBAAmB,GAAGF,OAAO,CAAC,yBAAD,CAAjC;;AACA,IAAIG,cAAc,GAAGH,OAAO,CAAC,oBAAD,CAA5B;;AACA,IAAII,iBAAiB,GAAGJ,OAAO,CAAC,uBAAD,CAA/B;;AACA,IAAIK,aAAa,GAAGL,OAAO,CAAC,mBAAD,CAA3B;;AACA,IAAIM,YAAY,GAAGN,OAAO,CAAC,kBAAD,CAA1B;;AACA,IAAIO,eAAe,GAAGP,OAAO,CAAC,qBAAD,CAA7B;;AAEAQ,MAAM,CAACC,OAAP,GAAiB,UAASC,GAAT,EAAcC,OAAd,EAAuB;EACpC;EACA,IAAIC,OAAO,GAAGb,OAAO,CAACW,GAAD,EAAMC,OAAN,CAArB;EACAA,OAAO,CAACE,MAAR,CAAe,SAAf,EAA0BH,GAA1B;EAEAT,WAAW,CAACS,GAAD,EAAMC,OAAN,CAAX;EACAA,OAAO,CAACE,MAAR,CAAe,aAAf,EAA8BH,GAA9B;EAEAR,mBAAmB,CAACQ,GAAD,CAAnB;EACAC,OAAO,CAACE,MAAR,CAAe,qBAAf,EAAsCH,GAAtC;EAEAP,cAAc,CAACO,GAAD,CAAd;EACAC,OAAO,CAACE,MAAR,CAAe,gBAAf,EAAiCH,GAAjC;EAEAN,iBAAiB,CAACM,GAAD,EAAME,OAAN,CAAjB;EACAD,OAAO,CAACE,MAAR,CAAe,mBAAf,EAAoCH,GAApC;EAEAL,aAAa,CAACK,GAAD,CAAb;EACAC,OAAO,CAACE,MAAR,CAAe,eAAf,EAAgCH,GAAhC;EAEAJ,YAAY,CAACI,GAAD,CAAZ;EACAC,OAAO,CAACE,MAAR,CAAe,cAAf,EAA+BH,GAA/B;EAEAH,eAAe,CAACG,GAAD,CAAf;EACAC,OAAO,CAACE,MAAR,CAAe,iBAAf,EAAkCH,GAAlC;AACH,CAzBD"},"metadata":{},"sourceType":"script"}