{"ast":null,"code":"'use strict';\n\nconst {\n  extname\n} = require('path');\n\nfunction namedAssetImportPlugin(_ref) {\n  let {\n    types: t\n  } = _ref;\n  const visited = new WeakSet();\n\n  function generateNewSourcePath(loaderMap, moduleName, sourcePath) {\n    const ext = extname(sourcePath).substr(1);\n    const extMap = loaderMap[ext];\n    return extMap[moduleName] ? extMap[moduleName].replace(/\\[path\\]/, sourcePath) : sourcePath;\n  }\n\n  function replaceMatchingSpecifiers(path, loaderMap, callback) {\n    const sourcePath = path.node.source.value;\n    const ext = extname(sourcePath).substr(1);\n\n    if (visited.has(path.node) || sourcePath.indexOf('!') !== -1) {\n      return;\n    }\n\n    if (loaderMap[ext]) {\n      path.replaceWithMultiple(path.node.specifiers.map(specifier => {\n        const newSpecifier = callback(specifier, sourcePath);\n        visited.add(newSpecifier);\n        return newSpecifier;\n      }));\n    }\n  }\n\n  return {\n    visitor: {\n      ExportNamedDeclaration(path, _ref2) {\n        let {\n          opts: {\n            loaderMap\n          }\n        } = _ref2;\n\n        if (!path.node.source) {\n          return;\n        }\n\n        replaceMatchingSpecifiers(path, loaderMap, (specifier, sourcePath) => {\n          if (t.isExportDefaultSpecifier(specifier)) {\n            return t.exportDeclaration([t.exportDefaultSpecifier(t.identifier(specifier.local.name))], t.stringLiteral(sourcePath));\n          }\n\n          return t.exportNamedDeclaration(null, [t.exportSpecifier(t.identifier(specifier.local.name), t.identifier(specifier.exported.name))], t.stringLiteral(generateNewSourcePath(loaderMap, specifier.local.name, sourcePath)));\n        });\n      },\n\n      ImportDeclaration(path, _ref3) {\n        let {\n          opts: {\n            loaderMap\n          }\n        } = _ref3;\n        replaceMatchingSpecifiers(path, loaderMap, (specifier, sourcePath) => {\n          if (t.isImportDefaultSpecifier(specifier)) {\n            return t.importDeclaration([t.importDefaultSpecifier(t.identifier(specifier.local.name))], t.stringLiteral(sourcePath));\n          }\n\n          return t.importDeclaration([t.importSpecifier(t.identifier(specifier.local.name), t.identifier(specifier.imported.name))], t.stringLiteral(generateNewSourcePath(loaderMap, specifier.imported.name, sourcePath)));\n        });\n      }\n\n    }\n  };\n}\n\nmodule.exports = namedAssetImportPlugin;","map":{"version":3,"names":["extname","require","namedAssetImportPlugin","types","t","visited","WeakSet","generateNewSourcePath","loaderMap","moduleName","sourcePath","ext","substr","extMap","replace","replaceMatchingSpecifiers","path","callback","node","source","value","has","indexOf","replaceWithMultiple","specifiers","map","specifier","newSpecifier","add","visitor","ExportNamedDeclaration","opts","isExportDefaultSpecifier","exportDeclaration","exportDefaultSpecifier","identifier","local","name","stringLiteral","exportNamedDeclaration","exportSpecifier","exported","ImportDeclaration","isImportDefaultSpecifier","importDeclaration","importDefaultSpecifier","importSpecifier","imported","module","exports"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/babel-plugin-named-asset-import/index.js"],"sourcesContent":["'use strict';\n\nconst { extname } = require('path');\n\nfunction namedAssetImportPlugin({ types: t }) {\n  const visited = new WeakSet();\n\n  function generateNewSourcePath(loaderMap, moduleName, sourcePath) {\n    const ext = extname(sourcePath).substr(1);\n    const extMap = loaderMap[ext];\n    return extMap[moduleName]\n      ? extMap[moduleName].replace(/\\[path\\]/, sourcePath)\n      : sourcePath;\n  }\n\n  function replaceMatchingSpecifiers(path, loaderMap, callback) {\n    const sourcePath = path.node.source.value;\n    const ext = extname(sourcePath).substr(1);\n\n    if (visited.has(path.node) || sourcePath.indexOf('!') !== -1) {\n      return;\n    }\n\n    if (loaderMap[ext]) {\n      path.replaceWithMultiple(\n        path.node.specifiers.map(specifier => {\n          const newSpecifier = callback(specifier, sourcePath);\n          visited.add(newSpecifier);\n\n          return newSpecifier;\n        })\n      );\n    }\n  }\n\n  return {\n    visitor: {\n      ExportNamedDeclaration(path, { opts: { loaderMap } }) {\n        if (!path.node.source) {\n          return;\n        }\n\n        replaceMatchingSpecifiers(path, loaderMap, (specifier, sourcePath) => {\n          if (t.isExportDefaultSpecifier(specifier)) {\n            return t.exportDeclaration(\n              [t.exportDefaultSpecifier(t.identifier(specifier.local.name))],\n              t.stringLiteral(sourcePath)\n            );\n          }\n\n          return t.exportNamedDeclaration(\n            null,\n            [\n              t.exportSpecifier(\n                t.identifier(specifier.local.name),\n                t.identifier(specifier.exported.name)\n              ),\n            ],\n            t.stringLiteral(\n              generateNewSourcePath(loaderMap, specifier.local.name, sourcePath)\n            )\n          );\n        });\n      },\n      ImportDeclaration(path, { opts: { loaderMap } }) {\n        replaceMatchingSpecifiers(path, loaderMap, (specifier, sourcePath) => {\n          if (t.isImportDefaultSpecifier(specifier)) {\n            return t.importDeclaration(\n              [t.importDefaultSpecifier(t.identifier(specifier.local.name))],\n              t.stringLiteral(sourcePath)\n            );\n          }\n\n          return t.importDeclaration(\n            [\n              t.importSpecifier(\n                t.identifier(specifier.local.name),\n                t.identifier(specifier.imported.name)\n              ),\n            ],\n            t.stringLiteral(\n              generateNewSourcePath(\n                loaderMap,\n                specifier.imported.name,\n                sourcePath\n              )\n            )\n          );\n        });\n      },\n    },\n  };\n}\n\nmodule.exports = namedAssetImportPlugin;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}