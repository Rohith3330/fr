{"ast":null,"code":"/** @license URI.js v4.4.1 (c) 2011 Gary Court. License: http://github.com/garycourt/uri-js */\n!function (e, r) {\n  \"object\" == typeof exports && \"undefined\" != typeof module ? r(exports) : \"function\" == typeof define && define.amd ? define([\"exports\"], r) : r(e.URI = e.URI || {});\n}(this, function (e) {\n  \"use strict\";\n\n  function r() {\n    for (var e = arguments.length, r = Array(e), n = 0; n < e; n++) r[n] = arguments[n];\n\n    if (r.length > 1) {\n      r[0] = r[0].slice(0, -1);\n\n      for (var t = r.length - 1, o = 1; o < t; ++o) r[o] = r[o].slice(1, -1);\n\n      return r[t] = r[t].slice(1), r.join(\"\");\n    }\n\n    return r[0];\n  }\n\n  function n(e) {\n    return \"(?:\" + e + \")\";\n  }\n\n  function t(e) {\n    return e === undefined ? \"undefined\" : null === e ? \"null\" : Object.prototype.toString.call(e).split(\" \").pop().split(\"]\").shift().toLowerCase();\n  }\n\n  function o(e) {\n    return e.toUpperCase();\n  }\n\n  function a(e) {\n    return e !== undefined && null !== e ? e instanceof Array ? e : \"number\" != typeof e.length || e.split || e.setInterval || e.call ? [e] : Array.prototype.slice.call(e) : [];\n  }\n\n  function i(e, r) {\n    var n = e;\n    if (r) for (var t in r) n[t] = r[t];\n    return n;\n  }\n\n  function u(e) {\n    var t = r(\"[0-9]\", \"[A-Fa-f]\"),\n        o = n(n(\"%[EFef]\" + t + \"%\" + t + t + \"%\" + t + t) + \"|\" + n(\"%[89A-Fa-f]\" + t + \"%\" + t + t) + \"|\" + n(\"%\" + t + t)),\n        a = \"[\\\\!\\\\$\\\\&\\\\'\\\\(\\\\)\\\\*\\\\+\\\\,\\\\;\\\\=]\",\n        i = r(\"[\\\\:\\\\/\\\\?\\\\#\\\\[\\\\]\\\\@]\", a),\n        u = e ? \"[\\\\xA0-\\\\u200D\\\\u2010-\\\\u2029\\\\u202F-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFEF]\" : \"[]\",\n        s = e ? \"[\\\\uE000-\\\\uF8FF]\" : \"[]\",\n        f = r(\"[A-Za-z]\", \"[0-9]\", \"[\\\\-\\\\.\\\\_\\\\~]\", u),\n        c = n(n(\"25[0-5]\") + \"|\" + n(\"2[0-4][0-9]\") + \"|\" + n(\"1[0-9][0-9]\") + \"|\" + n(\"0?[1-9][0-9]\") + \"|0?0?[0-9]\"),\n        p = n(c + \"\\\\.\" + c + \"\\\\.\" + c + \"\\\\.\" + c),\n        h = n(t + \"{1,4}\"),\n        d = n(n(h + \"\\\\:\" + h) + \"|\" + p),\n        l = n(n(h + \"\\\\:\") + \"{6}\" + d),\n        m = n(\"\\\\:\\\\:\" + n(h + \"\\\\:\") + \"{5}\" + d),\n        g = n(n(h) + \"?\\\\:\\\\:\" + n(h + \"\\\\:\") + \"{4}\" + d),\n        v = n(n(n(h + \"\\\\:\") + \"{0,1}\" + h) + \"?\\\\:\\\\:\" + n(h + \"\\\\:\") + \"{3}\" + d),\n        E = n(n(n(h + \"\\\\:\") + \"{0,2}\" + h) + \"?\\\\:\\\\:\" + n(h + \"\\\\:\") + \"{2}\" + d),\n        C = n(n(n(h + \"\\\\:\") + \"{0,3}\" + h) + \"?\\\\:\\\\:\" + h + \"\\\\:\" + d),\n        y = n(n(n(h + \"\\\\:\") + \"{0,4}\" + h) + \"?\\\\:\\\\:\" + d),\n        S = n(n(n(h + \"\\\\:\") + \"{0,5}\" + h) + \"?\\\\:\\\\:\" + h),\n        A = n(n(n(h + \"\\\\:\") + \"{0,6}\" + h) + \"?\\\\:\\\\:\"),\n        D = n([l, m, g, v, E, C, y, S, A].join(\"|\")),\n        w = n(n(f + \"|\" + o) + \"+\");\n    return {\n      NOT_SCHEME: new RegExp(r(\"[^]\", \"[A-Za-z]\", \"[0-9]\", \"[\\\\+\\\\-\\\\.]\"), \"g\"),\n      NOT_USERINFO: new RegExp(r(\"[^\\\\%\\\\:]\", f, a), \"g\"),\n      NOT_HOST: new RegExp(r(\"[^\\\\%\\\\[\\\\]\\\\:]\", f, a), \"g\"),\n      NOT_PATH: new RegExp(r(\"[^\\\\%\\\\/\\\\:\\\\@]\", f, a), \"g\"),\n      NOT_PATH_NOSCHEME: new RegExp(r(\"[^\\\\%\\\\/\\\\@]\", f, a), \"g\"),\n      NOT_QUERY: new RegExp(r(\"[^\\\\%]\", f, a, \"[\\\\:\\\\@\\\\/\\\\?]\", s), \"g\"),\n      NOT_FRAGMENT: new RegExp(r(\"[^\\\\%]\", f, a, \"[\\\\:\\\\@\\\\/\\\\?]\"), \"g\"),\n      ESCAPE: new RegExp(r(\"[^]\", f, a), \"g\"),\n      UNRESERVED: new RegExp(f, \"g\"),\n      OTHER_CHARS: new RegExp(r(\"[^\\\\%]\", f, i), \"g\"),\n      PCT_ENCODED: new RegExp(o, \"g\"),\n      IPV4ADDRESS: new RegExp(\"^(\" + p + \")$\"),\n      IPV6ADDRESS: new RegExp(\"^\\\\[?(\" + D + \")\" + n(n(\"\\\\%25|\\\\%(?!\" + t + \"{2})\") + \"(\" + w + \")\") + \"?\\\\]?$\")\n    };\n  }\n\n  function s(e) {\n    throw new RangeError(H[e]);\n  }\n\n  function f(e, r) {\n    for (var n = [], t = e.length; t--;) n[t] = r(e[t]);\n\n    return n;\n  }\n\n  function c(e, r) {\n    var n = e.split(\"@\"),\n        t = \"\";\n    return n.length > 1 && (t = n[0] + \"@\", e = n[1]), e = e.replace(j, \".\"), t + f(e.split(\".\"), r).join(\".\");\n  }\n\n  function p(e) {\n    for (var r = [], n = 0, t = e.length; n < t;) {\n      var o = e.charCodeAt(n++);\n\n      if (o >= 55296 && o <= 56319 && n < t) {\n        var a = e.charCodeAt(n++);\n        56320 == (64512 & a) ? r.push(((1023 & o) << 10) + (1023 & a) + 65536) : (r.push(o), n--);\n      } else r.push(o);\n    }\n\n    return r;\n  }\n\n  function h(e) {\n    var r = e.charCodeAt(0);\n    return r < 16 ? \"%0\" + r.toString(16).toUpperCase() : r < 128 ? \"%\" + r.toString(16).toUpperCase() : r < 2048 ? \"%\" + (r >> 6 | 192).toString(16).toUpperCase() + \"%\" + (63 & r | 128).toString(16).toUpperCase() : \"%\" + (r >> 12 | 224).toString(16).toUpperCase() + \"%\" + (r >> 6 & 63 | 128).toString(16).toUpperCase() + \"%\" + (63 & r | 128).toString(16).toUpperCase();\n  }\n\n  function d(e) {\n    for (var r = \"\", n = 0, t = e.length; n < t;) {\n      var o = parseInt(e.substr(n + 1, 2), 16);\n      if (o < 128) r += String.fromCharCode(o), n += 3;else if (o >= 194 && o < 224) {\n        if (t - n >= 6) {\n          var a = parseInt(e.substr(n + 4, 2), 16);\n          r += String.fromCharCode((31 & o) << 6 | 63 & a);\n        } else r += e.substr(n, 6);\n\n        n += 6;\n      } else if (o >= 224) {\n        if (t - n >= 9) {\n          var i = parseInt(e.substr(n + 4, 2), 16),\n              u = parseInt(e.substr(n + 7, 2), 16);\n          r += String.fromCharCode((15 & o) << 12 | (63 & i) << 6 | 63 & u);\n        } else r += e.substr(n, 9);\n\n        n += 9;\n      } else r += e.substr(n, 3), n += 3;\n    }\n\n    return r;\n  }\n\n  function l(e, r) {\n    function n(e) {\n      var n = d(e);\n      return n.match(r.UNRESERVED) ? n : e;\n    }\n\n    return e.scheme && (e.scheme = String(e.scheme).replace(r.PCT_ENCODED, n).toLowerCase().replace(r.NOT_SCHEME, \"\")), e.userinfo !== undefined && (e.userinfo = String(e.userinfo).replace(r.PCT_ENCODED, n).replace(r.NOT_USERINFO, h).replace(r.PCT_ENCODED, o)), e.host !== undefined && (e.host = String(e.host).replace(r.PCT_ENCODED, n).toLowerCase().replace(r.NOT_HOST, h).replace(r.PCT_ENCODED, o)), e.path !== undefined && (e.path = String(e.path).replace(r.PCT_ENCODED, n).replace(e.scheme ? r.NOT_PATH : r.NOT_PATH_NOSCHEME, h).replace(r.PCT_ENCODED, o)), e.query !== undefined && (e.query = String(e.query).replace(r.PCT_ENCODED, n).replace(r.NOT_QUERY, h).replace(r.PCT_ENCODED, o)), e.fragment !== undefined && (e.fragment = String(e.fragment).replace(r.PCT_ENCODED, n).replace(r.NOT_FRAGMENT, h).replace(r.PCT_ENCODED, o)), e;\n  }\n\n  function m(e) {\n    return e.replace(/^0*(.*)/, \"$1\") || \"0\";\n  }\n\n  function g(e, r) {\n    var n = e.match(r.IPV4ADDRESS) || [],\n        t = T(n, 2),\n        o = t[1];\n    return o ? o.split(\".\").map(m).join(\".\") : e;\n  }\n\n  function v(e, r) {\n    var n = e.match(r.IPV6ADDRESS) || [],\n        t = T(n, 3),\n        o = t[1],\n        a = t[2];\n\n    if (o) {\n      for (var i = o.toLowerCase().split(\"::\").reverse(), u = T(i, 2), s = u[0], f = u[1], c = f ? f.split(\":\").map(m) : [], p = s.split(\":\").map(m), h = r.IPV4ADDRESS.test(p[p.length - 1]), d = h ? 7 : 8, l = p.length - d, v = Array(d), E = 0; E < d; ++E) v[E] = c[E] || p[l + E] || \"\";\n\n      h && (v[d - 1] = g(v[d - 1], r));\n      var C = v.reduce(function (e, r, n) {\n        if (!r || \"0\" === r) {\n          var t = e[e.length - 1];\n          t && t.index + t.length === n ? t.length++ : e.push({\n            index: n,\n            length: 1\n          });\n        }\n\n        return e;\n      }, []),\n          y = C.sort(function (e, r) {\n        return r.length - e.length;\n      })[0],\n          S = void 0;\n\n      if (y && y.length > 1) {\n        var A = v.slice(0, y.index),\n            D = v.slice(y.index + y.length);\n        S = A.join(\":\") + \"::\" + D.join(\":\");\n      } else S = v.join(\":\");\n\n      return a && (S += \"%\" + a), S;\n    }\n\n    return e;\n  }\n\n  function E(e) {\n    var r = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n        n = {},\n        t = !1 !== r.iri ? R : F;\n    \"suffix\" === r.reference && (e = (r.scheme ? r.scheme + \":\" : \"\") + \"//\" + e);\n    var o = e.match(K);\n\n    if (o) {\n      W ? (n.scheme = o[1], n.userinfo = o[3], n.host = o[4], n.port = parseInt(o[5], 10), n.path = o[6] || \"\", n.query = o[7], n.fragment = o[8], isNaN(n.port) && (n.port = o[5])) : (n.scheme = o[1] || undefined, n.userinfo = -1 !== e.indexOf(\"@\") ? o[3] : undefined, n.host = -1 !== e.indexOf(\"//\") ? o[4] : undefined, n.port = parseInt(o[5], 10), n.path = o[6] || \"\", n.query = -1 !== e.indexOf(\"?\") ? o[7] : undefined, n.fragment = -1 !== e.indexOf(\"#\") ? o[8] : undefined, isNaN(n.port) && (n.port = e.match(/\\/\\/(?:.|\\n)*\\:(?:\\/|\\?|\\#|$)/) ? o[4] : undefined)), n.host && (n.host = v(g(n.host, t), t)), n.scheme !== undefined || n.userinfo !== undefined || n.host !== undefined || n.port !== undefined || n.path || n.query !== undefined ? n.scheme === undefined ? n.reference = \"relative\" : n.fragment === undefined ? n.reference = \"absolute\" : n.reference = \"uri\" : n.reference = \"same-document\", r.reference && \"suffix\" !== r.reference && r.reference !== n.reference && (n.error = n.error || \"URI is not a \" + r.reference + \" reference.\");\n      var a = J[(r.scheme || n.scheme || \"\").toLowerCase()];\n      if (r.unicodeSupport || a && a.unicodeSupport) l(n, t);else {\n        if (n.host && (r.domainHost || a && a.domainHost)) try {\n          n.host = B.toASCII(n.host.replace(t.PCT_ENCODED, d).toLowerCase());\n        } catch (i) {\n          n.error = n.error || \"Host's domain name can not be converted to ASCII via punycode: \" + i;\n        }\n        l(n, F);\n      }\n      a && a.parse && a.parse(n, r);\n    } else n.error = n.error || \"URI can not be parsed.\";\n\n    return n;\n  }\n\n  function C(e, r) {\n    var n = !1 !== r.iri ? R : F,\n        t = [];\n    return e.userinfo !== undefined && (t.push(e.userinfo), t.push(\"@\")), e.host !== undefined && t.push(v(g(String(e.host), n), n).replace(n.IPV6ADDRESS, function (e, r, n) {\n      return \"[\" + r + (n ? \"%25\" + n : \"\") + \"]\";\n    })), \"number\" != typeof e.port && \"string\" != typeof e.port || (t.push(\":\"), t.push(String(e.port))), t.length ? t.join(\"\") : undefined;\n  }\n\n  function y(e) {\n    for (var r = []; e.length;) if (e.match(X)) e = e.replace(X, \"\");else if (e.match(ee)) e = e.replace(ee, \"/\");else if (e.match(re)) e = e.replace(re, \"/\"), r.pop();else if (\".\" === e || \"..\" === e) e = \"\";else {\n      var n = e.match(ne);\n      if (!n) throw new Error(\"Unexpected dot segment condition\");\n      var t = n[0];\n      e = e.slice(t.length), r.push(t);\n    }\n\n    return r.join(\"\");\n  }\n\n  function S(e) {\n    var r = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n        n = r.iri ? R : F,\n        t = [],\n        o = J[(r.scheme || e.scheme || \"\").toLowerCase()];\n    if (o && o.serialize && o.serialize(e, r), e.host) if (n.IPV6ADDRESS.test(e.host)) ;else if (r.domainHost || o && o.domainHost) try {\n      e.host = r.iri ? B.toUnicode(e.host) : B.toASCII(e.host.replace(n.PCT_ENCODED, d).toLowerCase());\n    } catch (u) {\n      e.error = e.error || \"Host's domain name can not be converted to \" + (r.iri ? \"Unicode\" : \"ASCII\") + \" via punycode: \" + u;\n    }\n    l(e, n), \"suffix\" !== r.reference && e.scheme && (t.push(e.scheme), t.push(\":\"));\n    var a = C(e, r);\n\n    if (a !== undefined && (\"suffix\" !== r.reference && t.push(\"//\"), t.push(a), e.path && \"/\" !== e.path.charAt(0) && t.push(\"/\")), e.path !== undefined) {\n      var i = e.path;\n      r.absolutePath || o && o.absolutePath || (i = y(i)), a === undefined && (i = i.replace(/^\\/\\//, \"/%2F\")), t.push(i);\n    }\n\n    return e.query !== undefined && (t.push(\"?\"), t.push(e.query)), e.fragment !== undefined && (t.push(\"#\"), t.push(e.fragment)), t.join(\"\");\n  }\n\n  function A(e, r) {\n    var n = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n        t = arguments[3],\n        o = {};\n    return t || (e = E(S(e, n), n), r = E(S(r, n), n)), n = n || {}, !n.tolerant && r.scheme ? (o.scheme = r.scheme, o.userinfo = r.userinfo, o.host = r.host, o.port = r.port, o.path = y(r.path || \"\"), o.query = r.query) : (r.userinfo !== undefined || r.host !== undefined || r.port !== undefined ? (o.userinfo = r.userinfo, o.host = r.host, o.port = r.port, o.path = y(r.path || \"\"), o.query = r.query) : (r.path ? (\"/\" === r.path.charAt(0) ? o.path = y(r.path) : (e.userinfo === undefined && e.host === undefined && e.port === undefined || e.path ? e.path ? o.path = e.path.slice(0, e.path.lastIndexOf(\"/\") + 1) + r.path : o.path = r.path : o.path = \"/\" + r.path, o.path = y(o.path)), o.query = r.query) : (o.path = e.path, r.query !== undefined ? o.query = r.query : o.query = e.query), o.userinfo = e.userinfo, o.host = e.host, o.port = e.port), o.scheme = e.scheme), o.fragment = r.fragment, o;\n  }\n\n  function D(e, r, n) {\n    var t = i({\n      scheme: \"null\"\n    }, n);\n    return S(A(E(e, t), E(r, t), t, !0), t);\n  }\n\n  function w(e, r) {\n    return \"string\" == typeof e ? e = S(E(e, r), r) : \"object\" === t(e) && (e = E(S(e, r), r)), e;\n  }\n\n  function b(e, r, n) {\n    return \"string\" == typeof e ? e = S(E(e, n), n) : \"object\" === t(e) && (e = S(e, n)), \"string\" == typeof r ? r = S(E(r, n), n) : \"object\" === t(r) && (r = S(r, n)), e === r;\n  }\n\n  function x(e, r) {\n    return e && e.toString().replace(r && r.iri ? R.ESCAPE : F.ESCAPE, h);\n  }\n\n  function O(e, r) {\n    return e && e.toString().replace(r && r.iri ? R.PCT_ENCODED : F.PCT_ENCODED, d);\n  }\n\n  function N(e) {\n    return \"boolean\" == typeof e.secure ? e.secure : \"wss\" === String(e.scheme).toLowerCase();\n  }\n\n  function I(e) {\n    var r = d(e);\n    return r.match(he) ? r : e;\n  }\n\n  var F = u(!1),\n      R = u(!0),\n      T = function () {\n    function e(e, r) {\n      var n = [],\n          t = !0,\n          o = !1,\n          a = undefined;\n\n      try {\n        for (var i, u = e[Symbol.iterator](); !(t = (i = u.next()).done) && (n.push(i.value), !r || n.length !== r); t = !0);\n      } catch (s) {\n        o = !0, a = s;\n      } finally {\n        try {\n          !t && u[\"return\"] && u[\"return\"]();\n        } finally {\n          if (o) throw a;\n        }\n      }\n\n      return n;\n    }\n\n    return function (r, n) {\n      if (Array.isArray(r)) return r;\n      if (Symbol.iterator in Object(r)) return e(r, n);\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    };\n  }(),\n      _ = function (e) {\n    if (Array.isArray(e)) {\n      for (var r = 0, n = Array(e.length); r < e.length; r++) n[r] = e[r];\n\n      return n;\n    }\n\n    return Array.from(e);\n  },\n      P = 2147483647,\n      q = /^xn--/,\n      U = /[^\\0-\\x7E]/,\n      j = /[\\x2E\\u3002\\uFF0E\\uFF61]/g,\n      H = {\n    overflow: \"Overflow: input needs wider integers to process\",\n    \"not-basic\": \"Illegal input >= 0x80 (not a basic code point)\",\n    \"invalid-input\": \"Invalid input\"\n  },\n      z = Math.floor,\n      L = String.fromCharCode,\n      $ = function (e) {\n    return String.fromCodePoint.apply(String, _(e));\n  },\n      M = function (e) {\n    return e - 48 < 10 ? e - 22 : e - 65 < 26 ? e - 65 : e - 97 < 26 ? e - 97 : 36;\n  },\n      V = function (e, r) {\n    return e + 22 + 75 * (e < 26) - ((0 != r) << 5);\n  },\n      k = function (e, r, n) {\n    var t = 0;\n\n    for (e = n ? z(e / 700) : e >> 1, e += z(e / r); e > 455; t += 36) e = z(e / 35);\n\n    return z(t + 36 * e / (e + 38));\n  },\n      Z = function (e) {\n    var r = [],\n        n = e.length,\n        t = 0,\n        o = 128,\n        a = 72,\n        i = e.lastIndexOf(\"-\");\n    i < 0 && (i = 0);\n\n    for (var u = 0; u < i; ++u) e.charCodeAt(u) >= 128 && s(\"not-basic\"), r.push(e.charCodeAt(u));\n\n    for (var f = i > 0 ? i + 1 : 0; f < n;) {\n      for (var c = t, p = 1, h = 36;; h += 36) {\n        f >= n && s(\"invalid-input\");\n        var d = M(e.charCodeAt(f++));\n        (d >= 36 || d > z((P - t) / p)) && s(\"overflow\"), t += d * p;\n        var l = h <= a ? 1 : h >= a + 26 ? 26 : h - a;\n        if (d < l) break;\n        var m = 36 - l;\n        p > z(P / m) && s(\"overflow\"), p *= m;\n      }\n\n      var g = r.length + 1;\n      a = k(t - c, g, 0 == c), z(t / g) > P - o && s(\"overflow\"), o += z(t / g), t %= g, r.splice(t++, 0, o);\n    }\n\n    return String.fromCodePoint.apply(String, r);\n  },\n      G = function (e) {\n    var r = [];\n    e = p(e);\n    var n = e.length,\n        t = 128,\n        o = 0,\n        a = 72,\n        i = !0,\n        u = !1,\n        f = undefined;\n\n    try {\n      for (var c, h = e[Symbol.iterator](); !(i = (c = h.next()).done); i = !0) {\n        var d = c.value;\n        d < 128 && r.push(L(d));\n      }\n    } catch (U) {\n      u = !0, f = U;\n    } finally {\n      try {\n        !i && h[\"return\"] && h[\"return\"]();\n      } finally {\n        if (u) throw f;\n      }\n    }\n\n    var l = r.length,\n        m = l;\n\n    for (l && r.push(\"-\"); m < n;) {\n      var g = P,\n          v = !0,\n          E = !1,\n          C = undefined;\n\n      try {\n        for (var y, S = e[Symbol.iterator](); !(v = (y = S.next()).done); v = !0) {\n          var A = y.value;\n          A >= t && A < g && (g = A);\n        }\n      } catch (U) {\n        E = !0, C = U;\n      } finally {\n        try {\n          !v && S[\"return\"] && S[\"return\"]();\n        } finally {\n          if (E) throw C;\n        }\n      }\n\n      var D = m + 1;\n      g - t > z((P - o) / D) && s(\"overflow\"), o += (g - t) * D, t = g;\n      var w = !0,\n          b = !1,\n          x = undefined;\n\n      try {\n        for (var O, N = e[Symbol.iterator](); !(w = (O = N.next()).done); w = !0) {\n          var I = O.value;\n\n          if (I < t && ++o > P && s(\"overflow\"), I == t) {\n            for (var F = o, R = 36;; R += 36) {\n              var T = R <= a ? 1 : R >= a + 26 ? 26 : R - a;\n              if (F < T) break;\n\n              var _ = F - T,\n                  q = 36 - T;\n\n              r.push(L(V(T + _ % q, 0))), F = z(_ / q);\n            }\n\n            r.push(L(V(F, 0))), a = k(o, D, m == l), o = 0, ++m;\n          }\n        }\n      } catch (U) {\n        b = !0, x = U;\n      } finally {\n        try {\n          !w && N[\"return\"] && N[\"return\"]();\n        } finally {\n          if (b) throw x;\n        }\n      }\n\n      ++o, ++t;\n    }\n\n    return r.join(\"\");\n  },\n      Q = function (e) {\n    return c(e, function (e) {\n      return q.test(e) ? Z(e.slice(4).toLowerCase()) : e;\n    });\n  },\n      Y = function (e) {\n    return c(e, function (e) {\n      return U.test(e) ? \"xn--\" + G(e) : e;\n    });\n  },\n      B = {\n    version: \"2.1.0\",\n    ucs2: {\n      decode: p,\n      encode: $\n    },\n    decode: Z,\n    encode: G,\n    toASCII: Y,\n    toUnicode: Q\n  },\n      J = {},\n      K = /^(?:([^:\\/?#]+):)?(?:\\/\\/((?:([^\\/?#@]*)@)?(\\[[^\\/?#\\]]+\\]|[^\\/?#:]*)(?:\\:(\\d*))?))?([^?#]*)(?:\\?([^#]*))?(?:#((?:.|\\n|\\r)*))?/i,\n      W = \"\".match(/(){0}/)[1] === undefined,\n      X = /^\\.\\.?\\//,\n      ee = /^\\/\\.(\\/|$)/,\n      re = /^\\/\\.\\.(\\/|$)/,\n      ne = /^\\/?(?:.|\\n)*?(?=\\/|$)/,\n      te = {\n    scheme: \"http\",\n    domainHost: !0,\n    parse: function (e, r) {\n      return e.host || (e.error = e.error || \"HTTP URIs must have a host.\"), e;\n    },\n    serialize: function (e, r) {\n      var n = \"https\" === String(e.scheme).toLowerCase();\n      return e.port !== (n ? 443 : 80) && \"\" !== e.port || (e.port = undefined), e.path || (e.path = \"/\"), e;\n    }\n  },\n      oe = {\n    scheme: \"https\",\n    domainHost: te.domainHost,\n    parse: te.parse,\n    serialize: te.serialize\n  },\n      ae = {\n    scheme: \"ws\",\n    domainHost: !0,\n    parse: function (e, r) {\n      var n = e;\n      return n.secure = N(n), n.resourceName = (n.path || \"/\") + (n.query ? \"?\" + n.query : \"\"), n.path = undefined, n.query = undefined, n;\n    },\n    serialize: function (e, r) {\n      if (e.port !== (N(e) ? 443 : 80) && \"\" !== e.port || (e.port = undefined), \"boolean\" == typeof e.secure && (e.scheme = e.secure ? \"wss\" : \"ws\", e.secure = undefined), e.resourceName) {\n        var n = e.resourceName.split(\"?\"),\n            t = T(n, 2),\n            o = t[0],\n            a = t[1];\n        e.path = o && \"/\" !== o ? o : undefined, e.query = a, e.resourceName = undefined;\n      }\n\n      return e.fragment = undefined, e;\n    }\n  },\n      ie = {\n    scheme: \"wss\",\n    domainHost: ae.domainHost,\n    parse: ae.parse,\n    serialize: ae.serialize\n  },\n      ue = {},\n      se = \"[A-Za-z0-9\\\\-\\\\.\\\\_\\\\~\\\\xA0-\\\\u200D\\\\u2010-\\\\u2029\\\\u202F-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFEF]\",\n      fe = \"[0-9A-Fa-f]\",\n      ce = n(n(\"%[EFef][0-9A-Fa-f]%\" + fe + fe + \"%\" + fe + fe) + \"|\" + n(\"%[89A-Fa-f][0-9A-Fa-f]%\" + fe + fe) + \"|\" + n(\"%\" + fe + fe)),\n      pe = r(\"[\\\\!\\\\$\\\\%\\\\'\\\\(\\\\)\\\\*\\\\+\\\\,\\\\-\\\\.0-9\\\\<\\\\>A-Z\\\\x5E-\\\\x7E]\", '[\\\\\"\\\\\\\\]'),\n      he = new RegExp(se, \"g\"),\n      de = new RegExp(ce, \"g\"),\n      le = new RegExp(r(\"[^]\", \"[A-Za-z0-9\\\\!\\\\$\\\\%\\\\'\\\\*\\\\+\\\\-\\\\^\\\\_\\\\`\\\\{\\\\|\\\\}\\\\~]\", \"[\\\\.]\", '[\\\\\"]', pe), \"g\"),\n      me = new RegExp(r(\"[^]\", se, \"[\\\\!\\\\$\\\\'\\\\(\\\\)\\\\*\\\\+\\\\,\\\\;\\\\:\\\\@]\"), \"g\"),\n      ge = me,\n      ve = {\n    scheme: \"mailto\",\n    parse: function (e, r) {\n      var n = e,\n          t = n.to = n.path ? n.path.split(\",\") : [];\n\n      if (n.path = undefined, n.query) {\n        for (var o = !1, a = {}, i = n.query.split(\"&\"), u = 0, s = i.length; u < s; ++u) {\n          var f = i[u].split(\"=\");\n\n          switch (f[0]) {\n            case \"to\":\n              for (var c = f[1].split(\",\"), p = 0, h = c.length; p < h; ++p) t.push(c[p]);\n\n              break;\n\n            case \"subject\":\n              n.subject = O(f[1], r);\n              break;\n\n            case \"body\":\n              n.body = O(f[1], r);\n              break;\n\n            default:\n              o = !0, a[O(f[0], r)] = O(f[1], r);\n          }\n        }\n\n        o && (n.headers = a);\n      }\n\n      n.query = undefined;\n\n      for (var d = 0, l = t.length; d < l; ++d) {\n        var m = t[d].split(\"@\");\n        if (m[0] = O(m[0]), r.unicodeSupport) m[1] = O(m[1], r).toLowerCase();else try {\n          m[1] = B.toASCII(O(m[1], r).toLowerCase());\n        } catch (g) {\n          n.error = n.error || \"Email address's domain name can not be converted to ASCII via punycode: \" + g;\n        }\n        t[d] = m.join(\"@\");\n      }\n\n      return n;\n    },\n    serialize: function (e, r) {\n      var n = e,\n          t = a(e.to);\n\n      if (t) {\n        for (var i = 0, u = t.length; i < u; ++i) {\n          var s = String(t[i]),\n              f = s.lastIndexOf(\"@\"),\n              c = s.slice(0, f).replace(de, I).replace(de, o).replace(le, h),\n              p = s.slice(f + 1);\n\n          try {\n            p = r.iri ? B.toUnicode(p) : B.toASCII(O(p, r).toLowerCase());\n          } catch (g) {\n            n.error = n.error || \"Email address's domain name can not be converted to \" + (r.iri ? \"Unicode\" : \"ASCII\") + \" via punycode: \" + g;\n          }\n\n          t[i] = c + \"@\" + p;\n        }\n\n        n.path = t.join(\",\");\n      }\n\n      var d = e.headers = e.headers || {};\n      e.subject && (d.subject = e.subject), e.body && (d.body = e.body);\n      var l = [];\n\n      for (var m in d) d[m] !== ue[m] && l.push(m.replace(de, I).replace(de, o).replace(me, h) + \"=\" + d[m].replace(de, I).replace(de, o).replace(ge, h));\n\n      return l.length && (n.query = l.join(\"&\")), n;\n    }\n  },\n      Ee = /^([^\\:]+)\\:(.*)/,\n      Ce = {\n    scheme: \"urn\",\n    parse: function (e, r) {\n      var n = e.path && e.path.match(Ee),\n          t = e;\n\n      if (n) {\n        var o = r.scheme || t.scheme || \"urn\",\n            a = n[1].toLowerCase(),\n            i = n[2],\n            u = o + \":\" + (r.nid || a),\n            s = J[u];\n        t.nid = a, t.nss = i, t.path = undefined, s && (t = s.parse(t, r));\n      } else t.error = t.error || \"URN can not be parsed.\";\n\n      return t;\n    },\n    serialize: function (e, r) {\n      var n = r.scheme || e.scheme || \"urn\",\n          t = e.nid,\n          o = n + \":\" + (r.nid || t),\n          a = J[o];\n      a && (e = a.serialize(e, r));\n      var i = e,\n          u = e.nss;\n      return i.path = (t || r.nid) + \":\" + u, i;\n    }\n  },\n      ye = /^[0-9A-Fa-f]{8}(?:\\-[0-9A-Fa-f]{4}){3}\\-[0-9A-Fa-f]{12}$/,\n      Se = {\n    scheme: \"urn:uuid\",\n    parse: function (e, r) {\n      var n = e;\n      return n.uuid = n.nss, n.nss = undefined, r.tolerant || n.uuid && n.uuid.match(ye) || (n.error = n.error || \"UUID is not valid.\"), n;\n    },\n    serialize: function (e, r) {\n      var n = e;\n      return n.nss = (e.uuid || \"\").toLowerCase(), n;\n    }\n  };\n\n  J[te.scheme] = te, J[oe.scheme] = oe, J[ae.scheme] = ae, J[ie.scheme] = ie, J[ve.scheme] = ve, J[Ce.scheme] = Ce, J[Se.scheme] = Se, e.SCHEMES = J, e.pctEncChar = h, e.pctDecChars = d, e.parse = E, e.removeDotSegments = y, e.serialize = S, e.resolveComponents = A, e.resolve = D, e.normalize = w, e.equal = b, e.escapeComponent = x, e.unescapeComponent = O, Object.defineProperty(e, \"__esModule\", {\n    value: !0\n  });\n});","map":{"version":3,"mappings":"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","names":["merge","sets","Array","_key","length","r","slice","xl","x","join","str","o","undefined","Object","prototype","toString","call","split","pop","shift","toLowerCase","toUpperCase","obj","setInterval","target","source","key","isIRI","HEXDIG$$","PCT_ENCODED$","subexp","SUB_DELIMS$$","RESERVED$$","UCSCHAR$$","s","f","DEC_OCTET_RELAXED$","p","H16$","LS32$","IPV4ADDRESS$","IPV6ADDRESS1$","D","IPV6ADDRESS2$","IPV6ADDRESS3$","IPV6ADDRESS4$","IPV6ADDRESS5$","IPV6ADDRESS6$","IPV6ADDRESS7$","IPV6ADDRESS8$","IPV6ADDRESS9$","ZONEID$","UNRESERVED$$","NOT_SCHEME","RegExp","NOT_USERINFO","NOT_HOST","NOT_PATH","NOT_PATH_NOSCHEME","NOT_QUERY","IPRIVATE$$","NOT_FRAGMENT","ESCAPE","UNRESERVED","OTHER_CHARS","PCT_ENCODED","IPV4ADDRESS","IPV6ADDRESS","IPV6ADDRESS$","error","type","RangeError","errors","map","array","fn","result","mapDomain","string","parts","t","e","replace","regexSeparators","ucs2decode","output","counter","value","charCodeAt","extra","push","chr","c","newStr","i","il","parseInt","substr","String","fromCharCode","c2","n","c3","components","protocol","decodeUnreserved","decStr","pctDecChars","match","scheme","userinfo","pctEncChar","host","path","query","fragment","matches","address","_matches","_stripLeadingZeros","_matches2","zone","reverse","last","_address$toLowerCase$2","first","firstFields","lastFields","isLastFieldIPv4Address","test","fieldCount","lastFieldsStart","fields","_normalizeIPv4","allZeroFields","reduce","acc","field","index","lastLongest","longestZeroFields","sort","a","b","newHost","newFirst","newLast","S","uriString","options","arguments","iri","IRI_PROTOCOL","URI_PROTOCOL","reference","URI_PARSE","NO_MATCH_IS_UNDEFINED","port","isNaN","indexOf","_normalizeIPv6","schemeHandler","SCHEMES","unicodeSupport","domainHost","punycode","toASCII","parse","uriTokens","_","$1","$2","input","RDS1","RDS2","RDS3","im","RDS5","Error","serialize","toUnicode","authority","_recomposeAuthority","charAt","absolutePath","removeDotSegments","base","relative","skipNormalization","tolerant","lastIndexOf","baseURI","relativeURI","schemelessOptions","assign","resolveComponents","uri","typeOf","uriA","uriB","wsComponents","secure","buildExps","T","maxInt","regexPunycode","regexNonASCII","floor","Math","stringFromCharCode","ucs2encode","fromCodePoint","toConsumableArray","basicToDigit","codePoint","digitToBasic","digit","flag","adapt","delta","numPoints","firstTime","k","baseMinusTMin","decode","inputLength","bias","basic","j","oldi","w","baseMinusT","out","splice","encode","u","_step","Symbol","iterator","_iteratorNormalCompletion","currentValue","basicLength","handledCPCount","m","_step2","_iteratorNormalCompletion2","handledCPCountPlusOne","_step3","_iteratorNormalCompletion3","q","qMinusT","F","ucs2","handler","http","isSecure","resourceName","_wsComponents$resourc2","ws","O","VCHAR$$","NOT_LOCAL_PART","NOT_HFNAME","NOT_HFVALUE","mailtoComponents","to","unknownHeaders","headers","hfields","hfield","toAddrs","subject","unescapeComponent","body","addr","toArray","toAddr","atIdx","localPart","domain","name","URN_PARSE","urnComponents","nid","nss","urnScheme","uriComponents","UUID","uuidComponents","uuid","https","wss","mailto","urn"],"sources":["C:\\Users\\Rohith\\mern\\frontend\\node_modules\\uri-js\\src\\util.ts","C:\\Users\\Rohith\\mern\\frontend\\node_modules\\uri-js\\src\\regexps-uri.ts","C:\\Users\\Rohith\\mern\\frontend\\node_modules\\uri-js\\node_modules\\punycode\\punycode.es6.js","C:\\Users\\Rohith\\mern\\frontend\\node_modules\\uri-js\\src\\uri.ts","C:\\Users\\Rohith\\mern\\frontend\\node_modules\\uri-js\\src\\schemes\\ws.ts","C:\\Users\\Rohith\\mern\\frontend\\node_modules\\uri-js\\src\\schemes\\mailto.ts","C:\\Users\\Rohith\\mern\\frontend\\node_modules\\uri-js\\src\\regexps-iri.ts","C:\\Users\\Rohith\\mern\\frontend\\node_modules\\uri-js\\src\\schemes\\http.ts","C:\\Users\\Rohith\\mern\\frontend\\node_modules\\uri-js\\src\\schemes\\https.ts","C:\\Users\\Rohith\\mern\\frontend\\node_modules\\uri-js\\src\\schemes\\wss.ts","C:\\Users\\Rohith\\mern\\frontend\\node_modules\\uri-js\\src\\schemes\\urn.ts","C:\\Users\\Rohith\\mern\\frontend\\node_modules\\uri-js\\src\\schemes\\urn-uuid.ts","C:\\Users\\Rohith\\mern\\frontend\\node_modules\\uri-js\\src\\index.ts"],"sourcesContent":["export function merge(...sets:Array<string>):string {\n\tif (sets.length > 1) {\n\t\tsets[0] = sets[0].slice(0, -1);\n\t\tconst xl = sets.length - 1;\n\t\tfor (let x = 1; x < xl; ++x) {\n\t\t\tsets[x] = sets[x].slice(1, -1);\n\t\t}\n\t\tsets[xl] = sets[xl].slice(1);\n\t\treturn sets.join('');\n\t} else {\n\t\treturn sets[0];\n\t}\n}\n\nexport function subexp(str:string):string {\n\treturn \"(?:\" + str + \")\";\n}\n\nexport function typeOf(o:any):string {\n\treturn o === undefined ? \"undefined\" : (o === null ? \"null\" : Object.prototype.toString.call(o).split(\" \").pop().split(\"]\").shift().toLowerCase());\n}\n\nexport function toUpperCase(str:string):string {\n\treturn str.toUpperCase();\n}\n\nexport function toArray(obj:any):Array<any> {\n\treturn obj !== undefined && obj !== null ? (obj instanceof Array ? obj : (typeof obj.length !== \"number\" || obj.split || obj.setInterval || obj.call ? [obj] : Array.prototype.slice.call(obj))) : [];\n}\n\n\nexport function assign(target: object, source: any): any {\n\tconst obj = target as any;\n\tif (source) {\n\t\tfor (const key in source) {\n\t\t\tobj[key] = source[key];\n\t\t}\n\t}\n\treturn obj;\n}","import { URIRegExps } from \"./uri\";\nimport { merge, subexp } from \"./util\";\n\nexport function buildExps(isIRI:boolean):URIRegExps {\n\tconst\n\t\tALPHA$$ = \"[A-Za-z]\",\n\t\tCR$ = \"[\\\\x0D]\",\n\t\tDIGIT$$ = \"[0-9]\",\n\t\tDQUOTE$$ = \"[\\\\x22]\",\n\t\tHEXDIG$$ = merge(DIGIT$$, \"[A-Fa-f]\"),  //case-insensitive\n\t\tLF$$ = \"[\\\\x0A]\",\n\t\tSP$$ = \"[\\\\x20]\",\n\t\tPCT_ENCODED$ = subexp(subexp(\"%[EFef]\" + HEXDIG$$ + \"%\" + HEXDIG$$ + HEXDIG$$ + \"%\" + HEXDIG$$ + HEXDIG$$) + \"|\" + subexp(\"%[89A-Fa-f]\" + HEXDIG$$ + \"%\" + HEXDIG$$ + HEXDIG$$) + \"|\" + subexp(\"%\" + HEXDIG$$ + HEXDIG$$)),  //expanded\n\t\tGEN_DELIMS$$ = \"[\\\\:\\\\/\\\\?\\\\#\\\\[\\\\]\\\\@]\",\n\t\tSUB_DELIMS$$ = \"[\\\\!\\\\$\\\\&\\\\'\\\\(\\\\)\\\\*\\\\+\\\\,\\\\;\\\\=]\",\n\t\tRESERVED$$ = merge(GEN_DELIMS$$, SUB_DELIMS$$),\n\t\tUCSCHAR$$ = isIRI ? \"[\\\\xA0-\\\\u200D\\\\u2010-\\\\u2029\\\\u202F-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFEF]\" : \"[]\",  //subset, excludes bidi control characters\n\t\tIPRIVATE$$ = isIRI ? \"[\\\\uE000-\\\\uF8FF]\" : \"[]\",  //subset\n\t\tUNRESERVED$$ = merge(ALPHA$$, DIGIT$$, \"[\\\\-\\\\.\\\\_\\\\~]\", UCSCHAR$$),\n\t\tSCHEME$ = subexp(ALPHA$$ + merge(ALPHA$$, DIGIT$$, \"[\\\\+\\\\-\\\\.]\") + \"*\"),\n\t\tUSERINFO$ = subexp(subexp(PCT_ENCODED$ + \"|\" + merge(UNRESERVED$$, SUB_DELIMS$$, \"[\\\\:]\")) + \"*\"),\n\t\tDEC_OCTET$ = subexp(subexp(\"25[0-5]\") + \"|\" + subexp(\"2[0-4]\" + DIGIT$$) + \"|\" + subexp(\"1\" + DIGIT$$ + DIGIT$$) + \"|\" + subexp(\"[1-9]\" + DIGIT$$) + \"|\" + DIGIT$$),\n\t\tDEC_OCTET_RELAXED$ = subexp(subexp(\"25[0-5]\") + \"|\" + subexp(\"2[0-4]\" + DIGIT$$) + \"|\" + subexp(\"1\" + DIGIT$$ + DIGIT$$) + \"|\" + subexp(\"0?[1-9]\" + DIGIT$$) + \"|0?0?\" + DIGIT$$),  //relaxed parsing rules\n\t\tIPV4ADDRESS$ = subexp(DEC_OCTET_RELAXED$ + \"\\\\.\" + DEC_OCTET_RELAXED$ + \"\\\\.\" + DEC_OCTET_RELAXED$ + \"\\\\.\" + DEC_OCTET_RELAXED$),\n\t\tH16$ = subexp(HEXDIG$$ + \"{1,4}\"),\n\t\tLS32$ = subexp(subexp(H16$ + \"\\\\:\" + H16$) + \"|\" + IPV4ADDRESS$),\n\t\tIPV6ADDRESS1$ = subexp(                                                            subexp(H16$ + \"\\\\:\") + \"{6}\" + LS32$), //                           6( h16 \":\" ) ls32\n\t\tIPV6ADDRESS2$ = subexp(                                                 \"\\\\:\\\\:\" + subexp(H16$ + \"\\\\:\") + \"{5}\" + LS32$), //                      \"::\" 5( h16 \":\" ) ls32\n\t\tIPV6ADDRESS3$ = subexp(subexp(                                 H16$) + \"?\\\\:\\\\:\" + subexp(H16$ + \"\\\\:\") + \"{4}\" + LS32$), //[               h16 ] \"::\" 4( h16 \":\" ) ls32\n\t\tIPV6ADDRESS4$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,1}\" + H16$) + \"?\\\\:\\\\:\" + subexp(H16$ + \"\\\\:\") + \"{3}\" + LS32$), //[ *1( h16 \":\" ) h16 ] \"::\" 3( h16 \":\" ) ls32\n\t\tIPV6ADDRESS5$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,2}\" + H16$) + \"?\\\\:\\\\:\" + subexp(H16$ + \"\\\\:\") + \"{2}\" + LS32$), //[ *2( h16 \":\" ) h16 ] \"::\" 2( h16 \":\" ) ls32\n\t\tIPV6ADDRESS6$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,3}\" + H16$) + \"?\\\\:\\\\:\" +        H16$ + \"\\\\:\"          + LS32$), //[ *3( h16 \":\" ) h16 ] \"::\"    h16 \":\"   ls32\n\t\tIPV6ADDRESS7$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,4}\" + H16$) + \"?\\\\:\\\\:\"                                + LS32$), //[ *4( h16 \":\" ) h16 ] \"::\"              ls32\n\t\tIPV6ADDRESS8$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,5}\" + H16$) + \"?\\\\:\\\\:\"                                + H16$ ), //[ *5( h16 \":\" ) h16 ] \"::\"              h16\n\t\tIPV6ADDRESS9$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,6}\" + H16$) + \"?\\\\:\\\\:\"                                       ), //[ *6( h16 \":\" ) h16 ] \"::\"\n\t\tIPV6ADDRESS$ = subexp([IPV6ADDRESS1$, IPV6ADDRESS2$, IPV6ADDRESS3$, IPV6ADDRESS4$, IPV6ADDRESS5$, IPV6ADDRESS6$, IPV6ADDRESS7$, IPV6ADDRESS8$, IPV6ADDRESS9$].join(\"|\")),\n\t\tZONEID$ = subexp(subexp(UNRESERVED$$ + \"|\" + PCT_ENCODED$) + \"+\"),  //RFC 6874\n\t\tIPV6ADDRZ$ = subexp(IPV6ADDRESS$ + \"\\\\%25\" + ZONEID$),  //RFC 6874\n\t\tIPV6ADDRZ_RELAXED$ = subexp(IPV6ADDRESS$ + subexp(\"\\\\%25|\\\\%(?!\" + HEXDIG$$ + \"{2})\") + ZONEID$),  //RFC 6874, with relaxed parsing rules\n\t\tIPVFUTURE$ = subexp(\"[vV]\" + HEXDIG$$ + \"+\\\\.\" + merge(UNRESERVED$$, SUB_DELIMS$$, \"[\\\\:]\") + \"+\"),\n\t\tIP_LITERAL$ = subexp(\"\\\\[\" + subexp(IPV6ADDRZ_RELAXED$ + \"|\" + IPV6ADDRESS$ + \"|\" + IPVFUTURE$) + \"\\\\]\"),  //RFC 6874\n\t\tREG_NAME$ = subexp(subexp(PCT_ENCODED$ + \"|\" + merge(UNRESERVED$$, SUB_DELIMS$$)) + \"*\"),\n\t\tHOST$ = subexp(IP_LITERAL$ + \"|\" + IPV4ADDRESS$ + \"(?!\" + REG_NAME$ + \")\" + \"|\" + REG_NAME$),\n\t\tPORT$ = subexp(DIGIT$$ + \"*\"),\n\t\tAUTHORITY$ = subexp(subexp(USERINFO$ + \"@\") + \"?\" + HOST$ + subexp(\"\\\\:\" + PORT$) + \"?\"),\n\t\tPCHAR$ = subexp(PCT_ENCODED$ + \"|\" + merge(UNRESERVED$$, SUB_DELIMS$$, \"[\\\\:\\\\@]\")),\n\t\tSEGMENT$ = subexp(PCHAR$ + \"*\"),\n\t\tSEGMENT_NZ$ = subexp(PCHAR$ + \"+\"),\n\t\tSEGMENT_NZ_NC$ = subexp(subexp(PCT_ENCODED$ + \"|\" + merge(UNRESERVED$$, SUB_DELIMS$$, \"[\\\\@]\")) + \"+\"),\n\t\tPATH_ABEMPTY$ = subexp(subexp(\"\\\\/\" + SEGMENT$) + \"*\"),\n\t\tPATH_ABSOLUTE$ = subexp(\"\\\\/\" + subexp(SEGMENT_NZ$ + PATH_ABEMPTY$) + \"?\"),  //simplified\n\t\tPATH_NOSCHEME$ = subexp(SEGMENT_NZ_NC$ + PATH_ABEMPTY$),  //simplified\n\t\tPATH_ROOTLESS$ = subexp(SEGMENT_NZ$ + PATH_ABEMPTY$),  //simplified\n\t\tPATH_EMPTY$ = \"(?!\" + PCHAR$ + \")\",\n\t\tPATH$ = subexp(PATH_ABEMPTY$ + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_NOSCHEME$ + \"|\" + PATH_ROOTLESS$ + \"|\" + PATH_EMPTY$),\n\t\tQUERY$ = subexp(subexp(PCHAR$ + \"|\" + merge(\"[\\\\/\\\\?]\", IPRIVATE$$)) + \"*\"),\n\t\tFRAGMENT$ = subexp(subexp(PCHAR$ + \"|[\\\\/\\\\?]\") + \"*\"),\n\t\tHIER_PART$ = subexp(subexp(\"\\\\/\\\\/\" + AUTHORITY$ + PATH_ABEMPTY$) + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_ROOTLESS$ + \"|\" + PATH_EMPTY$),\n\t\tURI$ = subexp(SCHEME$ + \"\\\\:\" + HIER_PART$ + subexp(\"\\\\?\" + QUERY$) + \"?\" + subexp(\"\\\\#\" + FRAGMENT$) + \"?\"),\n\t\tRELATIVE_PART$ = subexp(subexp(\"\\\\/\\\\/\" + AUTHORITY$ + PATH_ABEMPTY$) + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_NOSCHEME$ + \"|\" + PATH_EMPTY$),\n\t\tRELATIVE$ = subexp(RELATIVE_PART$ + subexp(\"\\\\?\" + QUERY$) + \"?\" + subexp(\"\\\\#\" + FRAGMENT$) + \"?\"),\n\t\tURI_REFERENCE$ = subexp(URI$ + \"|\" + RELATIVE$),\n\t\tABSOLUTE_URI$ = subexp(SCHEME$ + \"\\\\:\" + HIER_PART$ + subexp(\"\\\\?\" + QUERY$) + \"?\"),\n\n\t\tGENERIC_REF$ = \"^(\" + SCHEME$ + \")\\\\:\" + subexp(subexp(\"\\\\/\\\\/(\" + subexp(\"(\" + USERINFO$ + \")@\") + \"?(\" + HOST$ + \")\" + subexp(\"\\\\:(\" + PORT$ + \")\") + \"?)\") + \"?(\" + PATH_ABEMPTY$ + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_ROOTLESS$ + \"|\" + PATH_EMPTY$ + \")\") + subexp(\"\\\\?(\" + QUERY$ + \")\") + \"?\" + subexp(\"\\\\#(\" + FRAGMENT$ + \")\") + \"?$\",\n\t\tRELATIVE_REF$ = \"^(){0}\" + subexp(subexp(\"\\\\/\\\\/(\" + subexp(\"(\" + USERINFO$ + \")@\") + \"?(\" + HOST$ + \")\" + subexp(\"\\\\:(\" + PORT$ + \")\") + \"?)\") + \"?(\" + PATH_ABEMPTY$ + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_NOSCHEME$ + \"|\" + PATH_EMPTY$ + \")\") + subexp(\"\\\\?(\" + QUERY$ + \")\") + \"?\" + subexp(\"\\\\#(\" + FRAGMENT$ + \")\") + \"?$\",\n\t\tABSOLUTE_REF$ = \"^(\" + SCHEME$ + \")\\\\:\" + subexp(subexp(\"\\\\/\\\\/(\" + subexp(\"(\" + USERINFO$ + \")@\") + \"?(\" + HOST$ + \")\" + subexp(\"\\\\:(\" + PORT$ + \")\") + \"?)\") + \"?(\" + PATH_ABEMPTY$ + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_ROOTLESS$ + \"|\" + PATH_EMPTY$ + \")\") + subexp(\"\\\\?(\" + QUERY$ + \")\") + \"?$\",\n\t\tSAMEDOC_REF$ = \"^\" + subexp(\"\\\\#(\" + FRAGMENT$ + \")\") + \"?$\",\n\t\tAUTHORITY_REF$ = \"^\" + subexp(\"(\" + USERINFO$ + \")@\") + \"?(\" + HOST$ + \")\" + subexp(\"\\\\:(\" + PORT$ + \")\") + \"?$\"\n\t;\n\n\treturn {\n\t\tNOT_SCHEME : new RegExp(merge(\"[^]\", ALPHA$$, DIGIT$$, \"[\\\\+\\\\-\\\\.]\"), \"g\"),\n\t\tNOT_USERINFO : new RegExp(merge(\"[^\\\\%\\\\:]\", UNRESERVED$$, SUB_DELIMS$$), \"g\"),\n\t\tNOT_HOST : new RegExp(merge(\"[^\\\\%\\\\[\\\\]\\\\:]\", UNRESERVED$$, SUB_DELIMS$$), \"g\"),\n\t\tNOT_PATH : new RegExp(merge(\"[^\\\\%\\\\/\\\\:\\\\@]\", UNRESERVED$$, SUB_DELIMS$$), \"g\"),\n\t\tNOT_PATH_NOSCHEME : new RegExp(merge(\"[^\\\\%\\\\/\\\\@]\", UNRESERVED$$, SUB_DELIMS$$), \"g\"),\n\t\tNOT_QUERY : new RegExp(merge(\"[^\\\\%]\", UNRESERVED$$, SUB_DELIMS$$, \"[\\\\:\\\\@\\\\/\\\\?]\", IPRIVATE$$), \"g\"),\n\t\tNOT_FRAGMENT : new RegExp(merge(\"[^\\\\%]\", UNRESERVED$$, SUB_DELIMS$$, \"[\\\\:\\\\@\\\\/\\\\?]\"), \"g\"),\n\t\tESCAPE : new RegExp(merge(\"[^]\", UNRESERVED$$, SUB_DELIMS$$), \"g\"),\n\t\tUNRESERVED : new RegExp(UNRESERVED$$, \"g\"),\n\t\tOTHER_CHARS : new RegExp(merge(\"[^\\\\%]\", UNRESERVED$$, RESERVED$$), \"g\"),\n\t\tPCT_ENCODED : new RegExp(PCT_ENCODED$, \"g\"),\n\t\tIPV4ADDRESS : new RegExp(\"^(\" + IPV4ADDRESS$ + \")$\"),\n\t\tIPV6ADDRESS : new RegExp(\"^\\\\[?(\" + IPV6ADDRESS$ + \")\" + subexp(subexp(\"\\\\%25|\\\\%(?!\" + HEXDIG$$ + \"{2})\") + \"(\" + ZONEID$ + \")\") + \"?\\\\]?$\")  //RFC 6874, with relaxed parsing rules\n\t};\n}\n\nexport default buildExps(false);\n","'use strict';\n\n/** Highest positive signed 32-bit float value */\nconst maxInt = 2147483647; // aka. 0x7FFFFFFF or 2^31-1\n\n/** Bootstring parameters */\nconst base = 36;\nconst tMin = 1;\nconst tMax = 26;\nconst skew = 38;\nconst damp = 700;\nconst initialBias = 72;\nconst initialN = 128; // 0x80\nconst delimiter = '-'; // '\\x2D'\n\n/** Regular expressions */\nconst regexPunycode = /^xn--/;\nconst regexNonASCII = /[^\\0-\\x7E]/; // non-ASCII chars\nconst regexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g; // RFC 3490 separators\n\n/** Error messages */\nconst errors = {\n\t'overflow': 'Overflow: input needs wider integers to process',\n\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t'invalid-input': 'Invalid input'\n};\n\n/** Convenience shortcuts */\nconst baseMinusTMin = base - tMin;\nconst floor = Math.floor;\nconst stringFromCharCode = String.fromCharCode;\n\n/*--------------------------------------------------------------------------*/\n\n/**\n * A generic error utility function.\n * @private\n * @param {String} type The error type.\n * @returns {Error} Throws a `RangeError` with the applicable error message.\n */\nfunction error(type) {\n\tthrow new RangeError(errors[type]);\n}\n\n/**\n * A generic `Array#map` utility function.\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} callback The function that gets called for every array\n * item.\n * @returns {Array} A new array of values returned by the callback function.\n */\nfunction map(array, fn) {\n\tconst result = [];\n\tlet length = array.length;\n\twhile (length--) {\n\t\tresult[length] = fn(array[length]);\n\t}\n\treturn result;\n}\n\n/**\n * A simple `Array#map`-like wrapper to work with domain name strings or email\n * addresses.\n * @private\n * @param {String} domain The domain name or email address.\n * @param {Function} callback The function that gets called for every\n * character.\n * @returns {Array} A new string of characters returned by the callback\n * function.\n */\nfunction mapDomain(string, fn) {\n\tconst parts = string.split('@');\n\tlet result = '';\n\tif (parts.length > 1) {\n\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t// the local part (i.e. everything up to `@`) intact.\n\t\tresult = parts[0] + '@';\n\t\tstring = parts[1];\n\t}\n\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\tstring = string.replace(regexSeparators, '\\x2E');\n\tconst labels = string.split('.');\n\tconst encoded = map(labels, fn).join('.');\n\treturn result + encoded;\n}\n\n/**\n * Creates an array containing the numeric code points of each Unicode\n * character in the string. While JavaScript uses UCS-2 internally,\n * this function will convert a pair of surrogate halves (each of which\n * UCS-2 exposes as separate characters) into a single code point,\n * matching UTF-16.\n * @see `punycode.ucs2.encode`\n * @see <https://mathiasbynens.be/notes/javascript-encoding>\n * @memberOf punycode.ucs2\n * @name decode\n * @param {String} string The Unicode input string (UCS-2).\n * @returns {Array} The new array of code points.\n */\nfunction ucs2decode(string) {\n\tconst output = [];\n\tlet counter = 0;\n\tconst length = string.length;\n\twhile (counter < length) {\n\t\tconst value = string.charCodeAt(counter++);\n\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t// It's a high surrogate, and there is a next character.\n\t\t\tconst extra = string.charCodeAt(counter++);\n\t\t\tif ((extra & 0xFC00) == 0xDC00) { // Low surrogate.\n\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t} else {\n\t\t\t\t// It's an unmatched surrogate; only append this code unit, in case the\n\t\t\t\t// next code unit is the high surrogate of a surrogate pair.\n\t\t\t\toutput.push(value);\n\t\t\t\tcounter--;\n\t\t\t}\n\t\t} else {\n\t\t\toutput.push(value);\n\t\t}\n\t}\n\treturn output;\n}\n\n/**\n * Creates a string based on an array of numeric code points.\n * @see `punycode.ucs2.decode`\n * @memberOf punycode.ucs2\n * @name encode\n * @param {Array} codePoints The array of numeric code points.\n * @returns {String} The new Unicode string (UCS-2).\n */\nconst ucs2encode = array => String.fromCodePoint(...array);\n\n/**\n * Converts a basic code point into a digit/integer.\n * @see `digitToBasic()`\n * @private\n * @param {Number} codePoint The basic numeric code point value.\n * @returns {Number} The numeric value of a basic code point (for use in\n * representing integers) in the range `0` to `base - 1`, or `base` if\n * the code point does not represent a value.\n */\nconst basicToDigit = function(codePoint) {\n\tif (codePoint - 0x30 < 0x0A) {\n\t\treturn codePoint - 0x16;\n\t}\n\tif (codePoint - 0x41 < 0x1A) {\n\t\treturn codePoint - 0x41;\n\t}\n\tif (codePoint - 0x61 < 0x1A) {\n\t\treturn codePoint - 0x61;\n\t}\n\treturn base;\n};\n\n/**\n * Converts a digit/integer into a basic code point.\n * @see `basicToDigit()`\n * @private\n * @param {Number} digit The numeric value of a basic code point.\n * @returns {Number} The basic code point whose value (when used for\n * representing integers) is `digit`, which needs to be in the range\n * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n * used; else, the lowercase form is used. The behavior is undefined\n * if `flag` is non-zero and `digit` has no uppercase form.\n */\nconst digitToBasic = function(digit, flag) {\n\t//  0..25 map to ASCII a..z or A..Z\n\t// 26..35 map to ASCII 0..9\n\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n};\n\n/**\n * Bias adaptation function as per section 3.4 of RFC 3492.\n * https://tools.ietf.org/html/rfc3492#section-3.4\n * @private\n */\nconst adapt = function(delta, numPoints, firstTime) {\n\tlet k = 0;\n\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\tdelta += floor(delta / numPoints);\n\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\tdelta = floor(delta / baseMinusTMin);\n\t}\n\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n};\n\n/**\n * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n * symbols.\n * @memberOf punycode\n * @param {String} input The Punycode string of ASCII-only symbols.\n * @returns {String} The resulting string of Unicode symbols.\n */\nconst decode = function(input) {\n\t// Don't use UCS-2.\n\tconst output = [];\n\tconst inputLength = input.length;\n\tlet i = 0;\n\tlet n = initialN;\n\tlet bias = initialBias;\n\n\t// Handle the basic code points: let `basic` be the number of input code\n\t// points before the last delimiter, or `0` if there is none, then copy\n\t// the first basic code points to the output.\n\n\tlet basic = input.lastIndexOf(delimiter);\n\tif (basic < 0) {\n\t\tbasic = 0;\n\t}\n\n\tfor (let j = 0; j < basic; ++j) {\n\t\t// if it's not a basic code point\n\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\terror('not-basic');\n\t\t}\n\t\toutput.push(input.charCodeAt(j));\n\t}\n\n\t// Main decoding loop: start just after the last delimiter if any basic code\n\t// points were copied; start at the beginning otherwise.\n\n\tfor (let index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t// `index` is the index of the next character to be consumed.\n\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t// which gets added to `i`. The overflow checking is easier\n\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t// value at the end to obtain `delta`.\n\t\tlet oldi = i;\n\t\tfor (let w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\tif (index >= inputLength) {\n\t\t\t\terror('invalid-input');\n\t\t\t}\n\n\t\t\tconst digit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\ti += digit * w;\n\t\t\tconst t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\tif (digit < t) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tconst baseMinusT = base - t;\n\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tw *= baseMinusT;\n\n\t\t}\n\n\t\tconst out = output.length + 1;\n\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t// incrementing `n` each time, so we'll fix that now:\n\t\tif (floor(i / out) > maxInt - n) {\n\t\t\terror('overflow');\n\t\t}\n\n\t\tn += floor(i / out);\n\t\ti %= out;\n\n\t\t// Insert `n` at position `i` of the output.\n\t\toutput.splice(i++, 0, n);\n\n\t}\n\n\treturn String.fromCodePoint(...output);\n};\n\n/**\n * Converts a string of Unicode symbols (e.g. a domain name label) to a\n * Punycode string of ASCII-only symbols.\n * @memberOf punycode\n * @param {String} input The string of Unicode symbols.\n * @returns {String} The resulting Punycode string of ASCII-only symbols.\n */\nconst encode = function(input) {\n\tconst output = [];\n\n\t// Convert the input in UCS-2 to an array of Unicode code points.\n\tinput = ucs2decode(input);\n\n\t// Cache the length.\n\tlet inputLength = input.length;\n\n\t// Initialize the state.\n\tlet n = initialN;\n\tlet delta = 0;\n\tlet bias = initialBias;\n\n\t// Handle the basic code points.\n\tfor (const currentValue of input) {\n\t\tif (currentValue < 0x80) {\n\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t}\n\t}\n\n\tlet basicLength = output.length;\n\tlet handledCPCount = basicLength;\n\n\t// `handledCPCount` is the number of code points that have been handled;\n\t// `basicLength` is the number of basic code points.\n\n\t// Finish the basic string with a delimiter unless it's empty.\n\tif (basicLength) {\n\t\toutput.push(delimiter);\n\t}\n\n\t// Main encoding loop:\n\twhile (handledCPCount < inputLength) {\n\n\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t// larger one:\n\t\tlet m = maxInt;\n\t\tfor (const currentValue of input) {\n\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\tm = currentValue;\n\t\t\t}\n\t\t}\n\n\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t// but guard against overflow.\n\t\tconst handledCPCountPlusOne = handledCPCount + 1;\n\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\terror('overflow');\n\t\t}\n\n\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\tn = m;\n\n\t\tfor (const currentValue of input) {\n\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\t\t\tif (currentValue == n) {\n\t\t\t\t// Represent delta as a generalized variable-length integer.\n\t\t\t\tlet q = delta;\n\t\t\t\tfor (let k = base; /* no condition */; k += base) {\n\t\t\t\t\tconst t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tconst qMinusT = q - t;\n\t\t\t\t\tconst baseMinusT = base - t;\n\t\t\t\t\toutput.push(\n\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t);\n\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t}\n\n\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\tdelta = 0;\n\t\t\t\t++handledCPCount;\n\t\t\t}\n\t\t}\n\n\t\t++delta;\n\t\t++n;\n\n\t}\n\treturn output.join('');\n};\n\n/**\n * Converts a Punycode string representing a domain name or an email address\n * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n * it doesn't matter if you call it on a string that has already been\n * converted to Unicode.\n * @memberOf punycode\n * @param {String} input The Punycoded domain name or email address to\n * convert to Unicode.\n * @returns {String} The Unicode representation of the given Punycode\n * string.\n */\nconst toUnicode = function(input) {\n\treturn mapDomain(input, function(string) {\n\t\treturn regexPunycode.test(string)\n\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t: string;\n\t});\n};\n\n/**\n * Converts a Unicode string representing a domain name or an email address to\n * Punycode. Only the non-ASCII parts of the domain name will be converted,\n * i.e. it doesn't matter if you call it with a domain that's already in\n * ASCII.\n * @memberOf punycode\n * @param {String} input The domain name or email address to convert, as a\n * Unicode string.\n * @returns {String} The Punycode representation of the given domain name or\n * email address.\n */\nconst toASCII = function(input) {\n\treturn mapDomain(input, function(string) {\n\t\treturn regexNonASCII.test(string)\n\t\t\t? 'xn--' + encode(string)\n\t\t\t: string;\n\t});\n};\n\n/*--------------------------------------------------------------------------*/\n\n/** Define the public API */\nconst punycode = {\n\t/**\n\t * A string representing the current Punycode.js version number.\n\t * @memberOf punycode\n\t * @type String\n\t */\n\t'version': '2.1.0',\n\t/**\n\t * An object of methods to convert from JavaScript's internal character\n\t * representation (UCS-2) to Unicode code points, and back.\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode\n\t * @type Object\n\t */\n\t'ucs2': {\n\t\t'decode': ucs2decode,\n\t\t'encode': ucs2encode\n\t},\n\t'decode': decode,\n\t'encode': encode,\n\t'toASCII': toASCII,\n\t'toUnicode': toUnicode\n};\n\nexport default punycode;\n","/**\n * URI.js\n *\n * @fileoverview An RFC 3986 compliant, scheme extendable URI parsing/validating/resolving library for JavaScript.\n * @author <a href=\"mailto:gary.court@gmail.com\">Gary Court</a>\n * @see http://github.com/garycourt/uri-js\n */\n\n/**\n * Copyright 2011 Gary Court. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification, are\n * permitted provided that the following conditions are met:\n *\n *    1. Redistributions of source code must retain the above copyright notice, this list of\n *       conditions and the following disclaimer.\n *\n *    2. Redistributions in binary form must reproduce the above copyright notice, this list\n *       of conditions and the following disclaimer in the documentation and/or other materials\n *       provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY GARY COURT ``AS IS'' AND ANY EXPRESS OR IMPLIED\n * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n * FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL GARY COURT OR\n * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF\n * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * The views and conclusions contained in the software and documentation are those of the\n * authors and should not be interpreted as representing official policies, either expressed\n * or implied, of Gary Court.\n */\n\nimport URI_PROTOCOL from \"./regexps-uri\";\nimport IRI_PROTOCOL from \"./regexps-iri\";\nimport punycode from \"punycode\";\nimport { toUpperCase, typeOf, assign } from \"./util\";\n\nexport interface URIComponents {\n\tscheme?:string;\n\tuserinfo?:string;\n\thost?:string;\n\tport?:number|string;\n\tpath?:string;\n\tquery?:string;\n\tfragment?:string;\n\treference?:string;\n\terror?:string;\n}\n\nexport interface URIOptions {\n\tscheme?:string;\n\treference?:string;\n\ttolerant?:boolean;\n\tabsolutePath?:boolean;\n\tiri?:boolean;\n\tunicodeSupport?:boolean;\n\tdomainHost?:boolean;\n}\n\nexport interface URISchemeHandler<Components extends URIComponents = URIComponents, Options extends URIOptions = URIOptions, ParentComponents extends URIComponents = URIComponents> {\n\tscheme:string;\n\tparse(components:ParentComponents, options:Options):Components;\n\tserialize(components:Components, options:Options):ParentComponents;\n\tunicodeSupport?:boolean;\n\tdomainHost?:boolean;\n\tabsolutePath?:boolean;\n}\n\nexport interface URIRegExps {\n\tNOT_SCHEME : RegExp,\n\tNOT_USERINFO : RegExp,\n\tNOT_HOST : RegExp,\n\tNOT_PATH : RegExp,\n\tNOT_PATH_NOSCHEME : RegExp,\n\tNOT_QUERY : RegExp,\n\tNOT_FRAGMENT : RegExp,\n\tESCAPE : RegExp,\n\tUNRESERVED : RegExp,\n\tOTHER_CHARS : RegExp,\n\tPCT_ENCODED : RegExp,\n\tIPV4ADDRESS : RegExp,\n\tIPV6ADDRESS : RegExp,\n}\n\nexport const SCHEMES:{[scheme:string]:URISchemeHandler} = {};\n\nexport function pctEncChar(chr:string):string {\n\tconst c = chr.charCodeAt(0);\n\tlet e:string;\n\n\tif (c < 16) e = \"%0\" + c.toString(16).toUpperCase();\n\telse if (c < 128) e = \"%\" + c.toString(16).toUpperCase();\n\telse if (c < 2048) e = \"%\" + ((c >> 6) | 192).toString(16).toUpperCase() + \"%\" + ((c & 63) | 128).toString(16).toUpperCase();\n\telse e = \"%\" + ((c >> 12) | 224).toString(16).toUpperCase() + \"%\" + (((c >> 6) & 63) | 128).toString(16).toUpperCase() + \"%\" + ((c & 63) | 128).toString(16).toUpperCase();\n\n\treturn e;\n}\n\nexport function pctDecChars(str:string):string {\n\tlet newStr = \"\";\n\tlet i = 0;\n\tconst il = str.length;\n\n\twhile (i < il) {\n\t\tconst c = parseInt(str.substr(i + 1, 2), 16);\n\n\t\tif (c < 128) {\n\t\t\tnewStr += String.fromCharCode(c);\n\t\t\ti += 3;\n\t\t}\n\t\telse if (c >= 194 && c < 224) {\n\t\t\tif ((il - i) >= 6) {\n\t\t\t\tconst c2 = parseInt(str.substr(i + 4, 2), 16);\n\t\t\t\tnewStr += String.fromCharCode(((c & 31) << 6) | (c2 & 63));\n\t\t\t} else {\n\t\t\t\tnewStr += str.substr(i, 6);\n\t\t\t}\n\t\t\ti += 6;\n\t\t}\n\t\telse if (c >= 224) {\n\t\t\tif ((il - i) >= 9) {\n\t\t\t\tconst c2 = parseInt(str.substr(i + 4, 2), 16);\n\t\t\t\tconst c3 = parseInt(str.substr(i + 7, 2), 16);\n\t\t\t\tnewStr += String.fromCharCode(((c & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));\n\t\t\t} else {\n\t\t\t\tnewStr += str.substr(i, 9);\n\t\t\t}\n\t\t\ti += 9;\n\t\t}\n\t\telse {\n\t\t\tnewStr += str.substr(i, 3);\n\t\t\ti += 3;\n\t\t}\n\t}\n\n\treturn newStr;\n}\n\nfunction _normalizeComponentEncoding(components:URIComponents, protocol:URIRegExps) {\n\tfunction decodeUnreserved(str:string):string {\n\t\tconst decStr = pctDecChars(str);\n\t\treturn (!decStr.match(protocol.UNRESERVED) ? str : decStr);\n\t}\n\n\tif (components.scheme) components.scheme = String(components.scheme).replace(protocol.PCT_ENCODED, decodeUnreserved).toLowerCase().replace(protocol.NOT_SCHEME, \"\");\n\tif (components.userinfo !== undefined) components.userinfo = String(components.userinfo).replace(protocol.PCT_ENCODED, decodeUnreserved).replace(protocol.NOT_USERINFO, pctEncChar).replace(protocol.PCT_ENCODED, toUpperCase);\n\tif (components.host !== undefined) components.host = String(components.host).replace(protocol.PCT_ENCODED, decodeUnreserved).toLowerCase().replace(protocol.NOT_HOST, pctEncChar).replace(protocol.PCT_ENCODED, toUpperCase);\n\tif (components.path !== undefined) components.path = String(components.path).replace(protocol.PCT_ENCODED, decodeUnreserved).replace((components.scheme ? protocol.NOT_PATH : protocol.NOT_PATH_NOSCHEME), pctEncChar).replace(protocol.PCT_ENCODED, toUpperCase);\n\tif (components.query !== undefined) components.query = String(components.query).replace(protocol.PCT_ENCODED, decodeUnreserved).replace(protocol.NOT_QUERY, pctEncChar).replace(protocol.PCT_ENCODED, toUpperCase);\n\tif (components.fragment !== undefined) components.fragment = String(components.fragment).replace(protocol.PCT_ENCODED, decodeUnreserved).replace(protocol.NOT_FRAGMENT, pctEncChar).replace(protocol.PCT_ENCODED, toUpperCase);\n\n\treturn components;\n};\n\nfunction _stripLeadingZeros(str:string):string {\n\treturn str.replace(/^0*(.*)/, \"$1\") || \"0\";\n}\n\nfunction _normalizeIPv4(host:string, protocol:URIRegExps):string {\n\tconst matches = host.match(protocol.IPV4ADDRESS) || [];\n\tconst [, address] = matches;\n\t\n\tif (address) {\n\t\treturn address.split(\".\").map(_stripLeadingZeros).join(\".\");\n\t} else {\n\t\treturn host;\n\t}\n}\n\nfunction _normalizeIPv6(host:string, protocol:URIRegExps):string {\n\tconst matches = host.match(protocol.IPV6ADDRESS) || [];\n\tconst [, address, zone] = matches;\n\n\tif (address) {\n\t\tconst [last, first] = address.toLowerCase().split('::').reverse();\n\t\tconst firstFields = first ? first.split(\":\").map(_stripLeadingZeros) : [];\n\t\tconst lastFields = last.split(\":\").map(_stripLeadingZeros);\n\t\tconst isLastFieldIPv4Address = protocol.IPV4ADDRESS.test(lastFields[lastFields.length - 1]);\n\t\tconst fieldCount = isLastFieldIPv4Address ? 7 : 8;\n\t\tconst lastFieldsStart = lastFields.length - fieldCount;\n\t\tconst fields = Array<string>(fieldCount);\n\n\t\tfor (let x = 0; x < fieldCount; ++x) {\n\t\t\tfields[x] = firstFields[x] || lastFields[lastFieldsStart + x] || '';\n\t\t}\n\n\t\tif (isLastFieldIPv4Address) {\n\t\t\tfields[fieldCount - 1] = _normalizeIPv4(fields[fieldCount - 1], protocol);\n\t\t}\n\n\t\tconst allZeroFields = fields.reduce<Array<{index:number,length:number}>>((acc, field, index) => {\n\t\t\tif (!field || field === \"0\") {\n\t\t\t\tconst lastLongest = acc[acc.length - 1];\n\t\t\t\tif (lastLongest && lastLongest.index + lastLongest.length === index) {\n\t\t\t\t\tlastLongest.length++;\n\t\t\t\t} else {\n\t\t\t\t\tacc.push({ index, length : 1 });\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn acc;\n\t\t}, []);\n\n\t\tconst longestZeroFields = allZeroFields.sort((a, b) => b.length - a.length)[0];\n\n\t\tlet newHost:string;\n\t\tif (longestZeroFields && longestZeroFields.length > 1) {\n\t\t\tconst newFirst = fields.slice(0, longestZeroFields.index) ;\n\t\t\tconst newLast = fields.slice(longestZeroFields.index + longestZeroFields.length);\n\t\t\tnewHost = newFirst.join(\":\") + \"::\" + newLast.join(\":\");\n\t\t} else {\n\t\t\tnewHost = fields.join(\":\");\n\t\t}\n\n\t\tif (zone) {\n\t\t\tnewHost += \"%\" + zone;\n\t\t}\n\n\t\treturn newHost;\n\t} else {\n\t\treturn host;\n\t}\n}\n\nconst URI_PARSE = /^(?:([^:\\/?#]+):)?(?:\\/\\/((?:([^\\/?#@]*)@)?(\\[[^\\/?#\\]]+\\]|[^\\/?#:]*)(?:\\:(\\d*))?))?([^?#]*)(?:\\?([^#]*))?(?:#((?:.|\\n|\\r)*))?/i;\nconst NO_MATCH_IS_UNDEFINED = (<RegExpMatchArray>(\"\").match(/(){0}/))[1] === undefined;\n\nexport function parse(uriString:string, options:URIOptions = {}):URIComponents {\n\tconst components:URIComponents = {};\n\tconst protocol = (options.iri !== false ? IRI_PROTOCOL : URI_PROTOCOL);\n\n\tif (options.reference === \"suffix\") uriString = (options.scheme ? options.scheme + \":\" : \"\") + \"//\" + uriString;\n\n\tconst matches = uriString.match(URI_PARSE);\n\n\tif (matches) {\n\t\tif (NO_MATCH_IS_UNDEFINED) {\n\t\t\t//store each component\n\t\t\tcomponents.scheme = matches[1];\n\t\t\tcomponents.userinfo = matches[3];\n\t\t\tcomponents.host = matches[4];\n\t\t\tcomponents.port = parseInt(matches[5], 10);\n\t\t\tcomponents.path = matches[6] || \"\";\n\t\t\tcomponents.query = matches[7];\n\t\t\tcomponents.fragment = matches[8];\n\n\t\t\t//fix port number\n\t\t\tif (isNaN(components.port)) {\n\t\t\t\tcomponents.port = matches[5];\n\t\t\t}\n\t\t} else {  //IE FIX for improper RegExp matching\n\t\t\t//store each component\n\t\t\tcomponents.scheme = matches[1] || undefined;\n\t\t\tcomponents.userinfo = (uriString.indexOf(\"@\") !== -1 ? matches[3] : undefined);\n\t\t\tcomponents.host = (uriString.indexOf(\"//\") !== -1 ? matches[4] : undefined);\n\t\t\tcomponents.port = parseInt(matches[5], 10);\n\t\t\tcomponents.path = matches[6] || \"\";\n\t\t\tcomponents.query = (uriString.indexOf(\"?\") !== -1 ? matches[7] : undefined);\n\t\t\tcomponents.fragment = (uriString.indexOf(\"#\") !== -1 ? matches[8] : undefined);\n\n\t\t\t//fix port number\n\t\t\tif (isNaN(components.port)) {\n\t\t\t\tcomponents.port = (uriString.match(/\\/\\/(?:.|\\n)*\\:(?:\\/|\\?|\\#|$)/) ? matches[4] : undefined);\n\t\t\t}\n\t\t}\n\n\t\tif (components.host) {\n\t\t\t//normalize IP hosts\n\t\t\tcomponents.host = _normalizeIPv6(_normalizeIPv4(components.host, protocol), protocol);\n\t\t}\n\n\t\t//determine reference type\n\t\tif (components.scheme === undefined && components.userinfo === undefined && components.host === undefined && components.port === undefined && !components.path && components.query === undefined) {\n\t\t\tcomponents.reference = \"same-document\";\n\t\t} else if (components.scheme === undefined) {\n\t\t\tcomponents.reference = \"relative\";\n\t\t} else if (components.fragment === undefined) {\n\t\t\tcomponents.reference = \"absolute\";\n\t\t} else {\n\t\t\tcomponents.reference = \"uri\";\n\t\t}\n\n\t\t//check for reference errors\n\t\tif (options.reference && options.reference !== \"suffix\" && options.reference !== components.reference) {\n\t\t\tcomponents.error = components.error || \"URI is not a \" + options.reference + \" reference.\";\n\t\t}\n\n\t\t//find scheme handler\n\t\tconst schemeHandler = SCHEMES[(options.scheme || components.scheme || \"\").toLowerCase()];\n\n\t\t//check if scheme can't handle IRIs\n\t\tif (!options.unicodeSupport && (!schemeHandler || !schemeHandler.unicodeSupport)) {\n\t\t\t//if host component is a domain name\n\t\t\tif (components.host && (options.domainHost || (schemeHandler && schemeHandler.domainHost))) {\n\t\t\t\t//convert Unicode IDN -> ASCII IDN\n\t\t\t\ttry {\n\t\t\t\t\tcomponents.host = punycode.toASCII(components.host.replace(protocol.PCT_ENCODED, pctDecChars).toLowerCase());\n\t\t\t\t} catch (e) {\n\t\t\t\t\tcomponents.error = components.error || \"Host's domain name can not be converted to ASCII via punycode: \" + e;\n\t\t\t\t}\n\t\t\t}\n\t\t\t//convert IRI -> URI\n\t\t\t_normalizeComponentEncoding(components, URI_PROTOCOL);\n\t\t} else {\n\t\t\t//normalize encodings\n\t\t\t_normalizeComponentEncoding(components, protocol);\n\t\t}\n\n\t\t//perform scheme specific parsing\n\t\tif (schemeHandler && schemeHandler.parse) {\n\t\t\tschemeHandler.parse(components, options);\n\t\t}\n\t} else {\n\t\tcomponents.error = components.error || \"URI can not be parsed.\";\n\t}\n\n\treturn components;\n};\n\nfunction _recomposeAuthority(components:URIComponents, options:URIOptions):string|undefined {\n\tconst protocol = (options.iri !== false ? IRI_PROTOCOL : URI_PROTOCOL);\n\tconst uriTokens:Array<string> = [];\n\n\tif (components.userinfo !== undefined) {\n\t\turiTokens.push(components.userinfo);\n\t\turiTokens.push(\"@\");\n\t}\n\n\tif (components.host !== undefined) {\n\t\t//normalize IP hosts, add brackets and escape zone separator for IPv6\n\t\turiTokens.push(_normalizeIPv6(_normalizeIPv4(String(components.host), protocol), protocol).replace(protocol.IPV6ADDRESS, (_, $1, $2) => \"[\" + $1 + ($2 ? \"%25\" + $2 : \"\") + \"]\"));\n\t}\n\n\tif (typeof components.port === \"number\" || typeof components.port === \"string\") {\n\t\turiTokens.push(\":\");\n\t\turiTokens.push(String(components.port));\n\t}\n\n\treturn uriTokens.length ? uriTokens.join(\"\") : undefined;\n};\n\nconst RDS1 = /^\\.\\.?\\//;\nconst RDS2 = /^\\/\\.(\\/|$)/;\nconst RDS3 = /^\\/\\.\\.(\\/|$)/;\nconst RDS4 = /^\\.\\.?$/;\nconst RDS5 = /^\\/?(?:.|\\n)*?(?=\\/|$)/;\n\nexport function removeDotSegments(input:string):string {\n\tconst output:Array<string> = [];\n\n\twhile (input.length) {\n\t\tif (input.match(RDS1)) {\n\t\t\tinput = input.replace(RDS1, \"\");\n\t\t} else if (input.match(RDS2)) {\n\t\t\tinput = input.replace(RDS2, \"/\");\n\t\t} else if (input.match(RDS3)) {\n\t\t\tinput = input.replace(RDS3, \"/\");\n\t\t\toutput.pop();\n\t\t} else if (input === \".\" || input === \"..\") {\n\t\t\tinput = \"\";\n\t\t} else {\n\t\t\tconst im = input.match(RDS5);\n\t\t\tif (im) {\n\t\t\t\tconst s = im[0];\n\t\t\t\tinput = input.slice(s.length);\n\t\t\t\toutput.push(s);\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Unexpected dot segment condition\");\n\t\t\t}\n\t\t}\n\t}\n\n\treturn output.join(\"\");\n};\n\nexport function serialize(components:URIComponents, options:URIOptions = {}):string {\n\tconst protocol = (options.iri ? IRI_PROTOCOL : URI_PROTOCOL);\n\tconst uriTokens:Array<string> = [];\n\n\t//find scheme handler\n\tconst schemeHandler = SCHEMES[(options.scheme || components.scheme || \"\").toLowerCase()];\n\n\t//perform scheme specific serialization\n\tif (schemeHandler && schemeHandler.serialize) schemeHandler.serialize(components, options);\n\n\tif (components.host) {\n\t\t//if host component is an IPv6 address\n\t\tif (protocol.IPV6ADDRESS.test(components.host)) {\n\t\t\t//TODO: normalize IPv6 address as per RFC 5952\n\t\t}\n\n\t\t//if host component is a domain name\n\t\telse if (options.domainHost || (schemeHandler && schemeHandler.domainHost)) {\n\t\t\t//convert IDN via punycode\n\t\t\ttry {\n\t\t\t\tcomponents.host = (!options.iri ? punycode.toASCII(components.host.replace(protocol.PCT_ENCODED, pctDecChars).toLowerCase()) : punycode.toUnicode(components.host));\n\t\t\t} catch (e) {\n\t\t\t\tcomponents.error = components.error || \"Host's domain name can not be converted to \" + (!options.iri ? \"ASCII\" : \"Unicode\") + \" via punycode: \" + e;\n\t\t\t}\n\t\t}\n\t}\n\n\t//normalize encoding\n\t_normalizeComponentEncoding(components, protocol);\n\n\tif (options.reference !== \"suffix\" && components.scheme) {\n\t\turiTokens.push(components.scheme);\n\t\turiTokens.push(\":\");\n\t}\n\n\tconst authority = _recomposeAuthority(components, options);\n\tif (authority !== undefined) {\n\t\tif (options.reference !== \"suffix\") {\n\t\t\turiTokens.push(\"//\");\n\t\t}\n\n\t\turiTokens.push(authority);\n\n\t\tif (components.path && components.path.charAt(0) !== \"/\") {\n\t\t\turiTokens.push(\"/\");\n\t\t}\n\t}\n\n\tif (components.path !== undefined) {\n\t\tlet s = components.path;\n\n\t\tif (!options.absolutePath && (!schemeHandler || !schemeHandler.absolutePath)) {\n\t\t\ts = removeDotSegments(s);\n\t\t}\n\n\t\tif (authority === undefined) {\n\t\t\ts = s.replace(/^\\/\\//, \"/%2F\");  //don't allow the path to start with \"//\"\n\t\t}\n\n\t\turiTokens.push(s);\n\t}\n\n\tif (components.query !== undefined) {\n\t\turiTokens.push(\"?\");\n\t\turiTokens.push(components.query);\n\t}\n\n\tif (components.fragment !== undefined) {\n\t\turiTokens.push(\"#\");\n\t\turiTokens.push(components.fragment);\n\t}\n\n\treturn uriTokens.join(\"\");  //merge tokens into a string\n};\n\nexport function resolveComponents(base:URIComponents, relative:URIComponents, options:URIOptions = {}, skipNormalization?:boolean):URIComponents {\n\tconst target:URIComponents = {};\n\n\tif (!skipNormalization) {\n\t\tbase = parse(serialize(base, options), options);  //normalize base components\n\t\trelative = parse(serialize(relative, options), options);  //normalize relative components\n\t}\n\toptions = options || {};\n\n\tif (!options.tolerant && relative.scheme) {\n\t\ttarget.scheme = relative.scheme;\n\t\t//target.authority = relative.authority;\n\t\ttarget.userinfo = relative.userinfo;\n\t\ttarget.host = relative.host;\n\t\ttarget.port = relative.port;\n\t\ttarget.path = removeDotSegments(relative.path || \"\");\n\t\ttarget.query = relative.query;\n\t} else {\n\t\tif (relative.userinfo !== undefined || relative.host !== undefined || relative.port !== undefined) {\n\t\t\t//target.authority = relative.authority;\n\t\t\ttarget.userinfo = relative.userinfo;\n\t\t\ttarget.host = relative.host;\n\t\t\ttarget.port = relative.port;\n\t\t\ttarget.path = removeDotSegments(relative.path || \"\");\n\t\t\ttarget.query = relative.query;\n\t\t} else {\n\t\t\tif (!relative.path) {\n\t\t\t\ttarget.path = base.path;\n\t\t\t\tif (relative.query !== undefined) {\n\t\t\t\t\ttarget.query = relative.query;\n\t\t\t\t} else {\n\t\t\t\t\ttarget.query = base.query;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (relative.path.charAt(0) === \"/\") {\n\t\t\t\t\ttarget.path = removeDotSegments(relative.path);\n\t\t\t\t} else {\n\t\t\t\t\tif ((base.userinfo !== undefined || base.host !== undefined || base.port !== undefined) && !base.path) {\n\t\t\t\t\t\ttarget.path = \"/\" + relative.path;\n\t\t\t\t\t} else if (!base.path) {\n\t\t\t\t\t\ttarget.path = relative.path;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttarget.path = base.path.slice(0, base.path.lastIndexOf(\"/\") + 1) + relative.path;\n\t\t\t\t\t}\n\t\t\t\t\ttarget.path = removeDotSegments(target.path);\n\t\t\t\t}\n\t\t\t\ttarget.query = relative.query;\n\t\t\t}\n\t\t\t//target.authority = base.authority;\n\t\t\ttarget.userinfo = base.userinfo;\n\t\t\ttarget.host = base.host;\n\t\t\ttarget.port = base.port;\n\t\t}\n\t\ttarget.scheme = base.scheme;\n\t}\n\n\ttarget.fragment = relative.fragment;\n\n\treturn target;\n};\n\nexport function resolve(baseURI:string, relativeURI:string, options?:URIOptions):string {\n\tconst schemelessOptions = assign({ scheme : 'null' }, options);\n\treturn serialize(resolveComponents(parse(baseURI, schemelessOptions), parse(relativeURI, schemelessOptions), schemelessOptions, true), schemelessOptions);\n};\n\nexport function normalize(uri:string, options?:URIOptions):string;\nexport function normalize(uri:URIComponents, options?:URIOptions):URIComponents;\nexport function normalize(uri:any, options?:URIOptions):any {\n\tif (typeof uri === \"string\") {\n\t\turi = serialize(parse(uri, options), options);\n\t} else if (typeOf(uri) === \"object\") {\n\t\turi = parse(serialize(<URIComponents>uri, options), options);\n\t}\n\n\treturn uri;\n};\n\nexport function equal(uriA:string, uriB:string, options?: URIOptions):boolean;\nexport function equal(uriA:URIComponents, uriB:URIComponents, options?:URIOptions):boolean;\nexport function equal(uriA:any, uriB:any, options?:URIOptions):boolean {\n\tif (typeof uriA === \"string\") {\n\t\turiA = serialize(parse(uriA, options), options);\n\t} else if (typeOf(uriA) === \"object\") {\n\t\turiA = serialize(<URIComponents>uriA, options);\n\t}\n\n\tif (typeof uriB === \"string\") {\n\t\turiB = serialize(parse(uriB, options), options);\n\t} else if (typeOf(uriB) === \"object\") {\n\t\turiB = serialize(<URIComponents>uriB, options);\n\t}\n\n\treturn uriA === uriB;\n};\n\nexport function escapeComponent(str:string, options?:URIOptions):string {\n\treturn str && str.toString().replace((!options || !options.iri ? URI_PROTOCOL.ESCAPE : IRI_PROTOCOL.ESCAPE), pctEncChar);\n};\n\nexport function unescapeComponent(str:string, options?:URIOptions):string {\n\treturn str && str.toString().replace((!options || !options.iri ? URI_PROTOCOL.PCT_ENCODED : IRI_PROTOCOL.PCT_ENCODED), pctDecChars);\n};\n","import { URISchemeHandler, URIComponents, URIOptions } from \"../uri\";\n\nexport interface WSComponents extends URIComponents {\n\tresourceName?: string;\n\tsecure?: boolean;\n}\n\nfunction isSecure(wsComponents:WSComponents):boolean {\n\treturn typeof wsComponents.secure === 'boolean' ? wsComponents.secure : String(wsComponents.scheme).toLowerCase() === \"wss\";\n}\n\n//RFC 6455\nconst handler:URISchemeHandler = {\n\tscheme : \"ws\",\n\n\tdomainHost : true,\n\n\tparse : function (components:URIComponents, options:URIOptions):WSComponents {\n\t\tconst wsComponents = components as WSComponents;\n\n\t\t//indicate if the secure flag is set\n\t\twsComponents.secure = isSecure(wsComponents);\n\n\t\t//construct resouce name\n\t\twsComponents.resourceName = (wsComponents.path || '/') + (wsComponents.query ? '?' + wsComponents.query : '');\n\t\twsComponents.path = undefined;\n\t\twsComponents.query = undefined;\n\n\t\treturn wsComponents;\n\t},\n\n\tserialize : function (wsComponents:WSComponents, options:URIOptions):URIComponents {\n\t\t//normalize the default port\n\t\tif (wsComponents.port === (isSecure(wsComponents) ? 443 : 80) || wsComponents.port === \"\") {\n\t\t\twsComponents.port = undefined;\n\t\t}\n\n\t\t//ensure scheme matches secure flag\n\t\tif (typeof wsComponents.secure === 'boolean') {\n\t\t\twsComponents.scheme = (wsComponents.secure ? 'wss' : 'ws');\n\t\t\twsComponents.secure = undefined;\n\t\t}\n\n\t\t//reconstruct path from resource name\n\t\tif (wsComponents.resourceName) {\n\t\t\tconst [path, query] = wsComponents.resourceName.split('?');\n\t\t\twsComponents.path = (path && path !== '/' ? path : undefined);\n\t\t\twsComponents.query = query;\n\t\t\twsComponents.resourceName = undefined;\n\t\t}\n\n\t\t//forbid fragment component\n\t\twsComponents.fragment = undefined;\n\n\t\treturn wsComponents;\n\t}\n};\n\nexport default handler;","import { URISchemeHandler, URIComponents, URIOptions } from \"../uri\";\nimport { pctEncChar, pctDecChars, unescapeComponent } from \"../uri\";\nimport punycode from \"punycode\";\nimport { merge, subexp, toUpperCase, toArray } from \"../util\";\n\nexport interface MailtoHeaders {\n\t[hfname:string]:string\n}\n\nexport interface MailtoComponents extends URIComponents {\n\tto:Array<string>,\n\theaders?:MailtoHeaders,\n\tsubject?:string,\n\tbody?:string\n}\n\nconst O:MailtoHeaders = {};\nconst isIRI = true;\n\n//RFC 3986\nconst UNRESERVED$$ = \"[A-Za-z0-9\\\\-\\\\.\\\\_\\\\~\" + (isIRI ? \"\\\\xA0-\\\\u200D\\\\u2010-\\\\u2029\\\\u202F-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFEF\" : \"\") + \"]\";\nconst HEXDIG$$ = \"[0-9A-Fa-f]\";  //case-insensitive\nconst PCT_ENCODED$ = subexp(subexp(\"%[EFef]\" + HEXDIG$$ + \"%\" + HEXDIG$$ + HEXDIG$$ + \"%\" + HEXDIG$$ + HEXDIG$$) + \"|\" + subexp(\"%[89A-Fa-f]\" + HEXDIG$$ + \"%\" + HEXDIG$$ + HEXDIG$$) + \"|\" + subexp(\"%\" + HEXDIG$$ + HEXDIG$$));  //expanded\n\n//RFC 5322, except these symbols as per RFC 6068: @ : / ? # [ ] & ; =\n//const ATEXT$$ = \"[A-Za-z0-9\\\\!\\\\#\\\\$\\\\%\\\\&\\\\'\\\\*\\\\+\\\\-\\\\/\\\\=\\\\?\\\\^\\\\_\\\\`\\\\{\\\\|\\\\}\\\\~]\";\n//const WSP$$ = \"[\\\\x20\\\\x09]\";\n//const OBS_QTEXT$$ = \"[\\\\x01-\\\\x08\\\\x0B\\\\x0C\\\\x0E-\\\\x1F\\\\x7F]\";  //(%d1-8 / %d11-12 / %d14-31 / %d127)\n//const QTEXT$$ = merge(\"[\\\\x21\\\\x23-\\\\x5B\\\\x5D-\\\\x7E]\", OBS_QTEXT$$);  //%d33 / %d35-91 / %d93-126 / obs-qtext\n//const VCHAR$$ = \"[\\\\x21-\\\\x7E]\";\n//const WSP$$ = \"[\\\\x20\\\\x09]\";\n//const OBS_QP$ = subexp(\"\\\\\\\\\" + merge(\"[\\\\x00\\\\x0D\\\\x0A]\", OBS_QTEXT$$));  //%d0 / CR / LF / obs-qtext\n//const FWS$ = subexp(subexp(WSP$$ + \"*\" + \"\\\\x0D\\\\x0A\") + \"?\" + WSP$$ + \"+\");\n//const QUOTED_PAIR$ = subexp(subexp(\"\\\\\\\\\" + subexp(VCHAR$$ + \"|\" + WSP$$)) + \"|\" + OBS_QP$);\n//const QUOTED_STRING$ = subexp('\\\\\"' + subexp(FWS$ + \"?\" + QCONTENT$) + \"*\" + FWS$ + \"?\" + '\\\\\"');\nconst ATEXT$$ = \"[A-Za-z0-9\\\\!\\\\$\\\\%\\\\'\\\\*\\\\+\\\\-\\\\^\\\\_\\\\`\\\\{\\\\|\\\\}\\\\~]\";\nconst QTEXT$$ = \"[\\\\!\\\\$\\\\%\\\\'\\\\(\\\\)\\\\*\\\\+\\\\,\\\\-\\\\.0-9\\\\<\\\\>A-Z\\\\x5E-\\\\x7E]\";\nconst VCHAR$$ = merge(QTEXT$$, \"[\\\\\\\"\\\\\\\\]\");\nconst DOT_ATOM_TEXT$ = subexp(ATEXT$$ + \"+\" + subexp(\"\\\\.\" + ATEXT$$ + \"+\") + \"*\");\nconst QUOTED_PAIR$ = subexp(\"\\\\\\\\\" + VCHAR$$);\nconst QCONTENT$ = subexp(QTEXT$$ + \"|\" + QUOTED_PAIR$);\nconst QUOTED_STRING$ = subexp('\\\\\"' + QCONTENT$ + \"*\" + '\\\\\"');\n\n//RFC 6068\nconst DTEXT_NO_OBS$$ = \"[\\\\x21-\\\\x5A\\\\x5E-\\\\x7E]\";  //%d33-90 / %d94-126\nconst SOME_DELIMS$$ = \"[\\\\!\\\\$\\\\'\\\\(\\\\)\\\\*\\\\+\\\\,\\\\;\\\\:\\\\@]\";\nconst QCHAR$ = subexp(UNRESERVED$$ + \"|\" + PCT_ENCODED$ + \"|\" + SOME_DELIMS$$);\nconst DOMAIN$ = subexp(DOT_ATOM_TEXT$ + \"|\" + \"\\\\[\" + DTEXT_NO_OBS$$ + \"*\" + \"\\\\]\");\nconst LOCAL_PART$ = subexp(DOT_ATOM_TEXT$ + \"|\" + QUOTED_STRING$);\nconst ADDR_SPEC$ = subexp(LOCAL_PART$ + \"\\\\@\" + DOMAIN$);\nconst TO$ = subexp(ADDR_SPEC$ + subexp(\"\\\\,\" + ADDR_SPEC$) + \"*\");\nconst HFNAME$ = subexp(QCHAR$ + \"*\");\nconst HFVALUE$ = HFNAME$;\nconst HFIELD$ = subexp(HFNAME$ + \"\\\\=\" + HFVALUE$);\nconst HFIELDS2$ = subexp(HFIELD$ + subexp(\"\\\\&\" + HFIELD$) + \"*\");\nconst HFIELDS$ = subexp(\"\\\\?\" + HFIELDS2$);\nconst MAILTO_URI = new RegExp(\"^mailto\\\\:\" + TO$ + \"?\" + HFIELDS$ + \"?$\");\n\nconst UNRESERVED = new RegExp(UNRESERVED$$, \"g\");\nconst PCT_ENCODED = new RegExp(PCT_ENCODED$, \"g\");\nconst NOT_LOCAL_PART = new RegExp(merge(\"[^]\", ATEXT$$, \"[\\\\.]\", '[\\\\\"]', VCHAR$$), \"g\");\nconst NOT_DOMAIN = new RegExp(merge(\"[^]\", ATEXT$$, \"[\\\\.]\", \"[\\\\[]\", DTEXT_NO_OBS$$, \"[\\\\]]\"), \"g\");\nconst NOT_HFNAME = new RegExp(merge(\"[^]\", UNRESERVED$$, SOME_DELIMS$$), \"g\");\nconst NOT_HFVALUE = NOT_HFNAME;\nconst TO = new RegExp(\"^\" + TO$ + \"$\");\nconst HFIELDS = new RegExp(\"^\" + HFIELDS2$ + \"$\");\n\nfunction decodeUnreserved(str:string):string {\n\tconst decStr = pctDecChars(str);\n\treturn (!decStr.match(UNRESERVED) ? str : decStr);\n}\n\nconst handler:URISchemeHandler<MailtoComponents> =  {\n\tscheme : \"mailto\",\n\n\tparse : function (components:URIComponents, options:URIOptions):MailtoComponents {\n\t\tconst mailtoComponents = components as MailtoComponents;\n\t\tconst to = mailtoComponents.to = (mailtoComponents.path ? mailtoComponents.path.split(\",\") : []);\n\t\tmailtoComponents.path = undefined;\n\n\t\tif (mailtoComponents.query) {\n\t\t\tlet unknownHeaders = false\n\t\t\tconst headers:MailtoHeaders = {};\n\t\t\tconst hfields = mailtoComponents.query.split(\"&\");\n\n\t\t\tfor (let x = 0, xl = hfields.length; x < xl; ++x) {\n\t\t\t\tconst hfield = hfields[x].split(\"=\");\n\n\t\t\t\tswitch (hfield[0]) {\n\t\t\t\t\tcase \"to\":\n\t\t\t\t\t\tconst toAddrs = hfield[1].split(\",\");\n\t\t\t\t\t\tfor (let x = 0, xl = toAddrs.length; x < xl; ++x) {\n\t\t\t\t\t\t\tto.push(toAddrs[x]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"subject\":\n\t\t\t\t\t\tmailtoComponents.subject = unescapeComponent(hfield[1], options);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"body\":\n\t\t\t\t\t\tmailtoComponents.body = unescapeComponent(hfield[1], options);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tunknownHeaders = true;\n\t\t\t\t\t\theaders[unescapeComponent(hfield[0], options)] = unescapeComponent(hfield[1], options);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (unknownHeaders) mailtoComponents.headers = headers;\n\t\t}\n\n\t\tmailtoComponents.query = undefined;\n\n\t\tfor (let x = 0, xl = to.length; x < xl; ++x) {\n\t\t\tconst addr = to[x].split(\"@\");\n\n\t\t\taddr[0] = unescapeComponent(addr[0]);\n\n\t\t\tif (!options.unicodeSupport) {\n\t\t\t\t//convert Unicode IDN -> ASCII IDN\n\t\t\t\ttry {\n\t\t\t\t\taddr[1] = punycode.toASCII(unescapeComponent(addr[1], options).toLowerCase());\n\t\t\t\t} catch (e) {\n\t\t\t\t\tmailtoComponents.error = mailtoComponents.error || \"Email address's domain name can not be converted to ASCII via punycode: \" + e;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\taddr[1] = unescapeComponent(addr[1], options).toLowerCase();\n\t\t\t}\n\n\t\t\tto[x] = addr.join(\"@\");\n\t\t}\n\n\t\treturn mailtoComponents;\n\t},\n\n\tserialize : function (mailtoComponents:MailtoComponents, options:URIOptions):URIComponents {\n\t\tconst components = mailtoComponents as URIComponents;\n\t\tconst to = toArray(mailtoComponents.to);\n\t\tif (to) {\n\t\t\tfor (let x = 0, xl = to.length; x < xl; ++x) {\n\t\t\t\tconst toAddr = String(to[x]);\n\t\t\t\tconst atIdx = toAddr.lastIndexOf(\"@\");\n\t\t\t\tconst localPart = (toAddr.slice(0, atIdx)).replace(PCT_ENCODED, decodeUnreserved).replace(PCT_ENCODED, toUpperCase).replace(NOT_LOCAL_PART, pctEncChar);\n\t\t\t\tlet domain = toAddr.slice(atIdx + 1);\n\n\t\t\t\t//convert IDN via punycode\n\t\t\t\ttry {\n\t\t\t\t\tdomain = (!options.iri ? punycode.toASCII(unescapeComponent(domain, options).toLowerCase()) : punycode.toUnicode(domain));\n\t\t\t\t} catch (e) {\n\t\t\t\t\tcomponents.error = components.error || \"Email address's domain name can not be converted to \" + (!options.iri ? \"ASCII\" : \"Unicode\") + \" via punycode: \" + e;\n\t\t\t\t}\n\n\t\t\t\tto[x] = localPart + \"@\" + domain;\n\t\t\t}\n\n\t\t\tcomponents.path = to.join(\",\");\n\t\t}\n\n\t\tconst headers = mailtoComponents.headers = mailtoComponents.headers || {};\n\n\t\tif (mailtoComponents.subject) headers[\"subject\"] = mailtoComponents.subject;\n\t\tif (mailtoComponents.body) headers[\"body\"] = mailtoComponents.body;\n\n\t\tconst fields = [];\n\t\tfor (const name in headers) {\n\t\t\tif (headers[name] !== O[name]) {\n\t\t\t\tfields.push(\n\t\t\t\t\tname.replace(PCT_ENCODED, decodeUnreserved).replace(PCT_ENCODED, toUpperCase).replace(NOT_HFNAME, pctEncChar) +\n\t\t\t\t\t\"=\" +\n\t\t\t\t\theaders[name].replace(PCT_ENCODED, decodeUnreserved).replace(PCT_ENCODED, toUpperCase).replace(NOT_HFVALUE, pctEncChar)\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\tif (fields.length) {\n\t\t\tcomponents.query = fields.join(\"&\");\n\t\t}\n\n\t\treturn components;\n\t}\n}\n\nexport default handler;","import { URIRegExps } from \"./uri\";\nimport { buildExps } from \"./regexps-uri\";\n\nexport default buildExps(true);\n","import { URISchemeHandler, URIComponents, URIOptions } from \"../uri\";\n\nconst handler:URISchemeHandler = {\n\tscheme : \"http\",\n\n\tdomainHost : true,\n\n\tparse : function (components:URIComponents, options:URIOptions):URIComponents {\n\t\t//report missing host\n\t\tif (!components.host) {\n\t\t\tcomponents.error = components.error || \"HTTP URIs must have a host.\";\n\t\t}\n\n\t\treturn components;\n\t},\n\n\tserialize : function (components:URIComponents, options:URIOptions):URIComponents {\n\t\tconst secure = String(components.scheme).toLowerCase() === \"https\";\n\n\t\t//normalize the default port\n\t\tif (components.port === (secure ? 443 : 80) || components.port === \"\") {\n\t\t\tcomponents.port = undefined;\n\t\t}\n\t\t\n\t\t//normalize the empty path\n\t\tif (!components.path) {\n\t\t\tcomponents.path = \"/\";\n\t\t}\n\n\t\t//NOTE: We do not parse query strings for HTTP URIs\n\t\t//as WWW Form Url Encoded query strings are part of the HTML4+ spec,\n\t\t//and not the HTTP spec.\n\n\t\treturn components;\n\t}\n};\n\nexport default handler;","import { URISchemeHandler, URIComponents, URIOptions } from \"../uri\";\nimport http from \"./http\";\n\nconst handler:URISchemeHandler = {\n\tscheme : \"https\",\n\tdomainHost : http.domainHost,\n\tparse : http.parse,\n\tserialize : http.serialize\n}\n\nexport default handler;","import { URISchemeHandler, URIComponents, URIOptions } from \"../uri\";\nimport ws from \"./ws\";\n\nconst handler:URISchemeHandler = {\n\tscheme : \"wss\",\n\tdomainHost : ws.domainHost,\n\tparse : ws.parse,\n\tserialize : ws.serialize\n}\n\nexport default handler;","import { URISchemeHandler, URIComponents, URIOptions } from \"../uri\";\nimport { pctEncChar, SCHEMES } from \"../uri\";\n\nexport interface URNComponents extends URIComponents {\n\tnid?:string;\n\tnss?:string;\n}\n\nexport interface URNOptions extends URIOptions {\n\tnid?:string;\n}\n\nconst NID$ = \"(?:[0-9A-Za-z][0-9A-Za-z\\\\-]{1,31})\";\nconst PCT_ENCODED$ = \"(?:\\\\%[0-9A-Fa-f]{2})\";\nconst TRANS$$ = \"[0-9A-Za-z\\\\(\\\\)\\\\+\\\\,\\\\-\\\\.\\\\:\\\\=\\\\@\\\\;\\\\$\\\\_\\\\!\\\\*\\\\'\\\\/\\\\?\\\\#]\";\nconst NSS$ = \"(?:(?:\" + PCT_ENCODED$ + \"|\" + TRANS$$ + \")+)\";\nconst URN_SCHEME = new RegExp(\"^urn\\\\:(\" + NID$ + \")$\");\nconst URN_PATH = new RegExp(\"^(\" + NID$ + \")\\\\:(\" + NSS$ + \")$\");\nconst URN_PARSE = /^([^\\:]+)\\:(.*)/;\nconst URN_EXCLUDED = /[\\x00-\\x20\\\\\\\"\\&\\<\\>\\[\\]\\^\\`\\{\\|\\}\\~\\x7F-\\xFF]/g;\n\n//RFC 2141\nconst handler:URISchemeHandler<URNComponents,URNOptions> = {\n\tscheme : \"urn\",\n\n\tparse : function (components:URIComponents, options:URNOptions):URNComponents {\n\t\tconst matches = components.path && components.path.match(URN_PARSE);\n\t\tlet urnComponents = components as URNComponents;\n\n\t\tif (matches) {\n\t\t\tconst scheme = options.scheme || urnComponents.scheme || \"urn\";\n\t\t\tconst nid = matches[1].toLowerCase();\n\t\t\tconst nss = matches[2];\n\t\t\tconst urnScheme = `${scheme}:${options.nid || nid}`;\n\t\t\tconst schemeHandler = SCHEMES[urnScheme];\n\n\t\t\turnComponents.nid = nid;\n\t\t\turnComponents.nss = nss;\n\t\t\turnComponents.path = undefined;\n\n\t\t\tif (schemeHandler) {\n\t\t\t\turnComponents = schemeHandler.parse(urnComponents, options) as URNComponents;\n\t\t\t}\n\t\t} else {\n\t\t\turnComponents.error = urnComponents.error || \"URN can not be parsed.\";\n\t\t}\n\n\t\treturn urnComponents;\n\t},\n\n\tserialize : function (urnComponents:URNComponents, options:URNOptions):URIComponents {\n\t\tconst scheme = options.scheme || urnComponents.scheme || \"urn\";\n\t\tconst nid = urnComponents.nid;\n\t\tconst urnScheme = `${scheme}:${options.nid || nid}`;\n\t\tconst schemeHandler = SCHEMES[urnScheme];\n\n\t\tif (schemeHandler) {\n\t\t\turnComponents = schemeHandler.serialize(urnComponents, options) as URNComponents;\n\t\t}\n\n\t\tconst uriComponents = urnComponents as URIComponents;\n\t\tconst nss = urnComponents.nss;\n\t\turiComponents.path = `${nid || options.nid}:${nss}`;\n\n\t\treturn uriComponents;\n\t},\n};\n\nexport default handler;","import { URISchemeHandler, URIComponents, URIOptions } from \"../uri\";\nimport { URNComponents } from \"./urn\";\nimport { SCHEMES } from \"../uri\";\n\nexport interface UUIDComponents extends URNComponents {\n\tuuid?: string;\n}\n\nconst UUID = /^[0-9A-Fa-f]{8}(?:\\-[0-9A-Fa-f]{4}){3}\\-[0-9A-Fa-f]{12}$/;\nconst UUID_PARSE = /^[0-9A-Fa-f\\-]{36}/;\n\n//RFC 4122\nconst handler:URISchemeHandler<UUIDComponents, URIOptions, URNComponents> = {\n\tscheme : \"urn:uuid\",\n\n\tparse : function (urnComponents:URNComponents, options:URIOptions):UUIDComponents {\n\t\tconst uuidComponents = urnComponents as UUIDComponents;\n\t\tuuidComponents.uuid = uuidComponents.nss;\n\t\tuuidComponents.nss = undefined;\n\n\t\tif (!options.tolerant && (!uuidComponents.uuid || !uuidComponents.uuid.match(UUID))) {\n\t\t\tuuidComponents.error = uuidComponents.error || \"UUID is not valid.\";\n\t\t}\n\n\t\treturn uuidComponents;\n\t},\n\n\tserialize : function (uuidComponents:UUIDComponents, options:URIOptions):URNComponents {\n\t\tconst urnComponents = uuidComponents as URNComponents;\n\t\t//normalize UUID\n\t\turnComponents.nss = (uuidComponents.uuid || \"\").toLowerCase();\n\t\treturn urnComponents;\n\t},\n};\n\nexport default handler;","import { SCHEMES } from \"./uri\";\n\nimport http from \"./schemes/http\";\nSCHEMES[http.scheme] = http;\n\nimport https from \"./schemes/https\";\nSCHEMES[https.scheme] = https;\n\nimport ws from \"./schemes/ws\";\nSCHEMES[ws.scheme] = ws;\n\nimport wss from \"./schemes/wss\";\nSCHEMES[wss.scheme] = wss;\n\nimport mailto from \"./schemes/mailto\";\nSCHEMES[mailto.scheme] = mailto;\n\nimport urn from \"./schemes/urn\";\nSCHEMES[urn.scheme] = urn;\n\nimport uuid from \"./schemes/urn-uuid\";\nSCHEMES[uuid.scheme] = uuid;\n\nexport * from \"./uri\";\n"]},"metadata":{},"sourceType":"script"}