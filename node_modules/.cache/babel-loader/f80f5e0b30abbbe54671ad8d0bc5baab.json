{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.mergeRefs = mergeRefs;\nexports.default = void 0;\n\nvar _react = require(\"react\");\n\nvar toFnRef = function toFnRef(ref) {\n  return !ref || typeof ref === 'function' ? ref : function (value) {\n    ref.current = value;\n  };\n};\n\nfunction mergeRefs(refA, refB) {\n  var a = toFnRef(refA);\n  var b = toFnRef(refB);\n  return function (value) {\n    if (a) a(value);\n    if (b) b(value);\n  };\n}\n/**\n * Create and returns a single callback ref composed from two other Refs.\n *\n * ```tsx\n * const Button = React.forwardRef((props, ref) => {\n *   const [element, attachRef] = useCallbackRef<HTMLButtonElement>();\n *   const mergedRef = useMergedRefs(ref, attachRef);\n *\n *   return <button ref={mergedRef} {...props}/>\n * })\n * ```\n *\n * @param refA A Callback or mutable Ref\n * @param refB A Callback or mutable Ref\n * @category refs\n */\n\n\nfunction useMergedRefs(refA, refB) {\n  return (0, _react.useMemo)(function () {\n    return mergeRefs(refA, refB);\n  }, [refA, refB]);\n}\n\nvar _default = useMergedRefs;\nexports.default = _default;","map":{"version":3,"names":["exports","__esModule","mergeRefs","default","_react","require","toFnRef","ref","value","current","refA","refB","a","b","useMergedRefs","useMemo","_default"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/@restart/hooks/cjs/useMergedRefs.js"],"sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.mergeRefs = mergeRefs;\nexports.default = void 0;\n\nvar _react = require(\"react\");\n\nvar toFnRef = function toFnRef(ref) {\n  return !ref || typeof ref === 'function' ? ref : function (value) {\n    ref.current = value;\n  };\n};\n\nfunction mergeRefs(refA, refB) {\n  var a = toFnRef(refA);\n  var b = toFnRef(refB);\n  return function (value) {\n    if (a) a(value);\n    if (b) b(value);\n  };\n}\n/**\n * Create and returns a single callback ref composed from two other Refs.\n *\n * ```tsx\n * const Button = React.forwardRef((props, ref) => {\n *   const [element, attachRef] = useCallbackRef<HTMLButtonElement>();\n *   const mergedRef = useMergedRefs(ref, attachRef);\n *\n *   return <button ref={mergedRef} {...props}/>\n * })\n * ```\n *\n * @param refA A Callback or mutable Ref\n * @param refB A Callback or mutable Ref\n * @category refs\n */\n\n\nfunction useMergedRefs(refA, refB) {\n  return (0, _react.useMemo)(function () {\n    return mergeRefs(refA, refB);\n  }, [refA, refB]);\n}\n\nvar _default = useMergedRefs;\nexports.default = _default;"],"mappings":"AAAA;;AAEAA,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAACE,SAAR,GAAoBA,SAApB;AACAF,OAAO,CAACG,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAIC,MAAM,GAAGC,OAAO,CAAC,OAAD,CAApB;;AAEA,IAAIC,OAAO,GAAG,SAASA,OAAT,CAAiBC,GAAjB,EAAsB;EAClC,OAAO,CAACA,GAAD,IAAQ,OAAOA,GAAP,KAAe,UAAvB,GAAoCA,GAApC,GAA0C,UAAUC,KAAV,EAAiB;IAChED,GAAG,CAACE,OAAJ,GAAcD,KAAd;EACD,CAFD;AAGD,CAJD;;AAMA,SAASN,SAAT,CAAmBQ,IAAnB,EAAyBC,IAAzB,EAA+B;EAC7B,IAAIC,CAAC,GAAGN,OAAO,CAACI,IAAD,CAAf;EACA,IAAIG,CAAC,GAAGP,OAAO,CAACK,IAAD,CAAf;EACA,OAAO,UAAUH,KAAV,EAAiB;IACtB,IAAII,CAAJ,EAAOA,CAAC,CAACJ,KAAD,CAAD;IACP,IAAIK,CAAJ,EAAOA,CAAC,CAACL,KAAD,CAAD;EACR,CAHD;AAID;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,SAASM,aAAT,CAAuBJ,IAAvB,EAA6BC,IAA7B,EAAmC;EACjC,OAAO,CAAC,GAAGP,MAAM,CAACW,OAAX,EAAoB,YAAY;IACrC,OAAOb,SAAS,CAACQ,IAAD,EAAOC,IAAP,CAAhB;EACD,CAFM,EAEJ,CAACD,IAAD,EAAOC,IAAP,CAFI,CAAP;AAGD;;AAED,IAAIK,QAAQ,GAAGF,aAAf;AACAd,OAAO,CAACG,OAAR,GAAkBa,QAAlB"},"metadata":{},"sourceType":"script"}