{"ast":null,"code":"import log from '../util/log';\nexport default function normalizeTailwindDirectives(root) {\n  let tailwindDirectives = new Set();\n  let layerDirectives = new Set();\n  let applyDirectives = new Set();\n  root.walkAtRules(atRule => {\n    if (atRule.name === 'apply') {\n      applyDirectives.add(atRule);\n    }\n\n    if (atRule.name === 'import') {\n      if (atRule.params === '\"tailwindcss/base\"' || atRule.params === \"'tailwindcss/base'\") {\n        atRule.name = 'tailwind';\n        atRule.params = 'base';\n      } else if (atRule.params === '\"tailwindcss/components\"' || atRule.params === \"'tailwindcss/components'\") {\n        atRule.name = 'tailwind';\n        atRule.params = 'components';\n      } else if (atRule.params === '\"tailwindcss/utilities\"' || atRule.params === \"'tailwindcss/utilities'\") {\n        atRule.name = 'tailwind';\n        atRule.params = 'utilities';\n      } else if (atRule.params === '\"tailwindcss/screens\"' || atRule.params === \"'tailwindcss/screens'\" || atRule.params === '\"tailwindcss/variants\"' || atRule.params === \"'tailwindcss/variants'\") {\n        atRule.name = 'tailwind';\n        atRule.params = 'variants';\n      }\n    }\n\n    if (atRule.name === 'tailwind') {\n      if (atRule.params === 'screens') {\n        atRule.params = 'variants';\n      }\n\n      tailwindDirectives.add(atRule.params);\n    }\n\n    if (['layer', 'responsive', 'variants'].includes(atRule.name)) {\n      if (['responsive', 'variants'].includes(atRule.name)) {\n        log.warn(`${atRule.name}-at-rule-deprecated`, [`The \\`@${atRule.name}\\` directive has been deprecated in Tailwind CSS v3.0.`, `Use \\`@layer utilities\\` or \\`@layer components\\` instead.`, 'https://tailwindcss.com/docs/upgrade-guide#replace-variants-with-layer']);\n      }\n\n      layerDirectives.add(atRule);\n    }\n  });\n\n  if (!tailwindDirectives.has('base') || !tailwindDirectives.has('components') || !tailwindDirectives.has('utilities')) {\n    for (let rule of layerDirectives) {\n      if (rule.name === 'layer' && ['base', 'components', 'utilities'].includes(rule.params)) {\n        if (!tailwindDirectives.has(rule.params)) {\n          throw rule.error(`\\`@layer ${rule.params}\\` is used but no matching \\`@tailwind ${rule.params}\\` directive is present.`);\n        }\n      } else if (rule.name === 'responsive') {\n        if (!tailwindDirectives.has('utilities')) {\n          throw rule.error('`@responsive` is used but `@tailwind utilities` is missing.');\n        }\n      } else if (rule.name === 'variants') {\n        if (!tailwindDirectives.has('utilities')) {\n          throw rule.error('`@variants` is used but `@tailwind utilities` is missing.');\n        }\n      }\n    }\n  }\n\n  return {\n    tailwindDirectives,\n    applyDirectives\n  };\n}","map":{"version":3,"names":["log","normalizeTailwindDirectives","root","tailwindDirectives","Set","layerDirectives","applyDirectives","walkAtRules","atRule","name","add","params","includes","warn","has","rule","error"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/tailwindcss/src/lib/normalizeTailwindDirectives.js"],"sourcesContent":["import log from '../util/log'\n\nexport default function normalizeTailwindDirectives(root) {\n  let tailwindDirectives = new Set()\n  let layerDirectives = new Set()\n  let applyDirectives = new Set()\n\n  root.walkAtRules((atRule) => {\n    if (atRule.name === 'apply') {\n      applyDirectives.add(atRule)\n    }\n\n    if (atRule.name === 'import') {\n      if (atRule.params === '\"tailwindcss/base\"' || atRule.params === \"'tailwindcss/base'\") {\n        atRule.name = 'tailwind'\n        atRule.params = 'base'\n      } else if (\n        atRule.params === '\"tailwindcss/components\"' ||\n        atRule.params === \"'tailwindcss/components'\"\n      ) {\n        atRule.name = 'tailwind'\n        atRule.params = 'components'\n      } else if (\n        atRule.params === '\"tailwindcss/utilities\"' ||\n        atRule.params === \"'tailwindcss/utilities'\"\n      ) {\n        atRule.name = 'tailwind'\n        atRule.params = 'utilities'\n      } else if (\n        atRule.params === '\"tailwindcss/screens\"' ||\n        atRule.params === \"'tailwindcss/screens'\" ||\n        atRule.params === '\"tailwindcss/variants\"' ||\n        atRule.params === \"'tailwindcss/variants'\"\n      ) {\n        atRule.name = 'tailwind'\n        atRule.params = 'variants'\n      }\n    }\n\n    if (atRule.name === 'tailwind') {\n      if (atRule.params === 'screens') {\n        atRule.params = 'variants'\n      }\n      tailwindDirectives.add(atRule.params)\n    }\n\n    if (['layer', 'responsive', 'variants'].includes(atRule.name)) {\n      if (['responsive', 'variants'].includes(atRule.name)) {\n        log.warn(`${atRule.name}-at-rule-deprecated`, [\n          `The \\`@${atRule.name}\\` directive has been deprecated in Tailwind CSS v3.0.`,\n          `Use \\`@layer utilities\\` or \\`@layer components\\` instead.`,\n          'https://tailwindcss.com/docs/upgrade-guide#replace-variants-with-layer',\n        ])\n      }\n      layerDirectives.add(atRule)\n    }\n  })\n\n  if (\n    !tailwindDirectives.has('base') ||\n    !tailwindDirectives.has('components') ||\n    !tailwindDirectives.has('utilities')\n  ) {\n    for (let rule of layerDirectives) {\n      if (rule.name === 'layer' && ['base', 'components', 'utilities'].includes(rule.params)) {\n        if (!tailwindDirectives.has(rule.params)) {\n          throw rule.error(\n            `\\`@layer ${rule.params}\\` is used but no matching \\`@tailwind ${rule.params}\\` directive is present.`\n          )\n        }\n      } else if (rule.name === 'responsive') {\n        if (!tailwindDirectives.has('utilities')) {\n          throw rule.error('`@responsive` is used but `@tailwind utilities` is missing.')\n        }\n      } else if (rule.name === 'variants') {\n        if (!tailwindDirectives.has('utilities')) {\n          throw rule.error('`@variants` is used but `@tailwind utilities` is missing.')\n        }\n      }\n    }\n  }\n\n  return { tailwindDirectives, applyDirectives }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}