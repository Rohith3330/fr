{"ast":null,"code":"'use strict';\n\nvar isFinite = require('../helpers/isFinite');\n\nvar isNaN = require('../helpers/isNaN');\n\nvar IsStrictlyEqual = require('./IsStrictlyEqual');\n\nvar StringToBigInt = require('./StringToBigInt');\n\nvar ToNumber = require('./ToNumber');\n\nvar ToPrimitive = require('./ToPrimitive');\n\nvar Type = require('./Type'); // https://262.ecma-international.org/13.0/#sec-islooselyequal\n\n\nmodule.exports = function IsLooselyEqual(x, y) {\n  var xType = Type(x);\n  var yType = Type(y);\n\n  if (xType === yType) {\n    return IsStrictlyEqual(x, y);\n  }\n\n  if (x == null && y == null) {\n    return true;\n  }\n\n  if (xType === 'Number' && yType === 'String') {\n    return IsLooselyEqual(x, ToNumber(y));\n  }\n\n  if (xType === 'String' && yType === 'Number') {\n    return IsLooselyEqual(ToNumber(x), y);\n  }\n\n  if (xType === 'BigInt' && yType === 'String') {\n    var n = StringToBigInt(y);\n\n    if (isNaN(n)) {\n      return false;\n    }\n\n    return IsLooselyEqual(x, n);\n  }\n\n  if (xType === 'String' && yType === 'BigInt') {\n    return IsLooselyEqual(y, x);\n  }\n\n  if (xType === 'Boolean') {\n    return IsLooselyEqual(ToNumber(x), y);\n  }\n\n  if (yType === 'Boolean') {\n    return IsLooselyEqual(x, ToNumber(y));\n  }\n\n  if ((xType === 'String' || xType === 'Number' || xType === 'Symbol' || xType === 'BigInt') && yType === 'Object') {\n    return IsLooselyEqual(x, ToPrimitive(y));\n  }\n\n  if (xType === 'Object' && (yType === 'String' || yType === 'Number' || yType === 'Symbol' || yType === 'BigInt')) {\n    return IsLooselyEqual(ToPrimitive(x), y);\n  }\n\n  if (xType === 'BigInt' && yType === 'Number' || xType === 'Number' && yType === 'BigInt') {\n    if (!isFinite(x) || !isFinite(y)) {\n      return false;\n    } // eslint-disable-next-line eqeqeq\n\n\n    return x == y; // shortcut for step 13.b.\n  }\n\n  return false;\n};","map":{"version":3,"names":["isFinite","require","isNaN","IsStrictlyEqual","StringToBigInt","ToNumber","ToPrimitive","Type","module","exports","IsLooselyEqual","x","y","xType","yType","n"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/es-abstract/2022/IsLooselyEqual.js"],"sourcesContent":["'use strict';\n\nvar isFinite = require('../helpers/isFinite');\nvar isNaN = require('../helpers/isNaN');\n\nvar IsStrictlyEqual = require('./IsStrictlyEqual');\nvar StringToBigInt = require('./StringToBigInt');\nvar ToNumber = require('./ToNumber');\nvar ToPrimitive = require('./ToPrimitive');\nvar Type = require('./Type');\n\n// https://262.ecma-international.org/13.0/#sec-islooselyequal\n\nmodule.exports = function IsLooselyEqual(x, y) {\n\tvar xType = Type(x);\n\tvar yType = Type(y);\n\tif (xType === yType) {\n\t\treturn IsStrictlyEqual(x, y);\n\t}\n\tif (x == null && y == null) {\n\t\treturn true;\n\t}\n\tif (xType === 'Number' && yType === 'String') {\n\t\treturn IsLooselyEqual(x, ToNumber(y));\n\t}\n\tif (xType === 'String' && yType === 'Number') {\n\t\treturn IsLooselyEqual(ToNumber(x), y);\n\t}\n\tif (xType === 'BigInt' && yType === 'String') {\n\t\tvar n = StringToBigInt(y);\n\t\tif (isNaN(n)) {\n\t\t\treturn false;\n\t\t}\n\t\treturn IsLooselyEqual(x, n);\n\t}\n\tif (xType === 'String' && yType === 'BigInt') {\n\t\treturn IsLooselyEqual(y, x);\n\t}\n\tif (xType === 'Boolean') {\n\t\treturn IsLooselyEqual(ToNumber(x), y);\n\t}\n\tif (yType === 'Boolean') {\n\t\treturn IsLooselyEqual(x, ToNumber(y));\n\t}\n\tif ((xType === 'String' || xType === 'Number' || xType === 'Symbol' || xType === 'BigInt') && yType === 'Object') {\n\t\treturn IsLooselyEqual(x, ToPrimitive(y));\n\t}\n\tif (xType === 'Object' && (yType === 'String' || yType === 'Number' || yType === 'Symbol' || yType === 'BigInt')) {\n\t\treturn IsLooselyEqual(ToPrimitive(x), y);\n\t}\n\tif ((xType === 'BigInt' && yType === 'Number') || (xType === 'Number' && yType === 'BigInt')) {\n\t\tif (!isFinite(x) || !isFinite(y)) {\n\t\t\treturn false;\n\t\t}\n\t\t// eslint-disable-next-line eqeqeq\n\t\treturn x == y; // shortcut for step 13.b.\n\t}\n\treturn false;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}