{"ast":null,"code":"// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\nvar common = require('./common');\n\nvar assert = require('assert');\n\nvar events = require('../');\n\nvar test = require('tape');\n\nfunction expect(expected) {\n  var actual = [];\n  test.onFinish(function () {\n    var sortedActual = actual.sort();\n    var sortedExpected = expected.sort();\n    assert.strictEqual(sortedActual.length, sortedExpected.length);\n\n    for (var index = 0; index < sortedActual.length; index++) {\n      var value = sortedActual[index];\n      assert.strictEqual(value, sortedExpected[index]);\n    }\n  });\n\n  function listener(name) {\n    actual.push(name);\n  }\n\n  return common.mustCall(listener, expected.length);\n}\n\n{\n  var ee = new events.EventEmitter();\n  var noop = common.mustNotCall();\n  ee.on('foo', noop);\n  ee.on('bar', noop);\n  ee.on('baz', noop);\n  ee.on('baz', noop);\n  var fooListeners = ee.listeners('foo');\n  var barListeners = ee.listeners('bar');\n  var bazListeners = ee.listeners('baz');\n  ee.on('removeListener', expect(['bar', 'baz', 'baz']));\n  ee.removeAllListeners('bar');\n  ee.removeAllListeners('baz');\n  var listeners = ee.listeners('foo');\n  assert.ok(Array.isArray(listeners));\n  assert.strictEqual(listeners.length, 1);\n  assert.strictEqual(listeners[0], noop);\n  listeners = ee.listeners('bar');\n  assert.ok(Array.isArray(listeners));\n  assert.strictEqual(listeners.length, 0);\n  listeners = ee.listeners('baz');\n  assert.ok(Array.isArray(listeners));\n  assert.strictEqual(listeners.length, 0); // After calling removeAllListeners(),\n  // the old listeners array should stay unchanged.\n\n  assert.strictEqual(fooListeners.length, 1);\n  assert.strictEqual(fooListeners[0], noop);\n  assert.strictEqual(barListeners.length, 1);\n  assert.strictEqual(barListeners[0], noop);\n  assert.strictEqual(bazListeners.length, 2);\n  assert.strictEqual(bazListeners[0], noop);\n  assert.strictEqual(bazListeners[1], noop); // After calling removeAllListeners(),\n  // new listeners arrays is different from the old.\n\n  assert.notStrictEqual(ee.listeners('bar'), barListeners);\n  assert.notStrictEqual(ee.listeners('baz'), bazListeners);\n}\n{\n  var ee = new events.EventEmitter();\n  ee.on('foo', common.mustNotCall());\n  ee.on('bar', common.mustNotCall()); // Expect LIFO order\n\n  ee.on('removeListener', expect(['foo', 'bar', 'removeListener']));\n  ee.on('removeListener', expect(['foo', 'bar']));\n  ee.removeAllListeners();\n  var listeners = ee.listeners('foo');\n  assert.ok(Array.isArray(listeners));\n  assert.strictEqual(listeners.length, 0);\n  listeners = ee.listeners('bar');\n  assert.ok(Array.isArray(listeners));\n  assert.strictEqual(listeners.length, 0);\n}\n{\n  var ee = new events.EventEmitter();\n  ee.on('removeListener', common.mustNotCall()); // Check for regression where removeAllListeners() throws when\n  // there exists a 'removeListener' listener, but there exists\n  // no listeners for the provided event type.\n\n  assert.doesNotThrow(function () {\n    ee.removeAllListeners(ee, 'foo');\n  });\n}\n{\n  var ee = new events.EventEmitter();\n  var expectLength = 2;\n  ee.on('removeListener', function () {\n    assert.strictEqual(expectLength--, this.listeners('baz').length);\n  });\n  ee.on('baz', common.mustNotCall());\n  ee.on('baz', common.mustNotCall());\n  ee.on('baz', common.mustNotCall());\n  assert.strictEqual(ee.listeners('baz').length, expectLength + 1);\n  ee.removeAllListeners('baz');\n  assert.strictEqual(ee.listeners('baz').length, 0);\n}\n{\n  var ee = new events.EventEmitter();\n  assert.strictEqual(ee, ee.removeAllListeners());\n}\n{\n  var ee = new events.EventEmitter();\n  ee._events = undefined;\n  assert.strictEqual(ee, ee.removeAllListeners());\n}","map":{"version":3,"names":["common","require","assert","events","test","expect","expected","actual","onFinish","sortedActual","sort","sortedExpected","strictEqual","length","index","value","listener","name","push","mustCall","ee","EventEmitter","noop","mustNotCall","on","fooListeners","listeners","barListeners","bazListeners","removeAllListeners","ok","Array","isArray","notStrictEqual","doesNotThrow","expectLength","_events","undefined"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/events/tests/remove-all-listeners.js"],"sourcesContent":["// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar common = require('./common');\nvar assert = require('assert');\nvar events = require('../');\nvar test = require('tape');\n\nfunction expect(expected) {\n  var actual = [];\n  test.onFinish(function() {\n    var sortedActual = actual.sort();\n    var sortedExpected = expected.sort();\n    assert.strictEqual(sortedActual.length, sortedExpected.length);\n    for (var index = 0; index < sortedActual.length; index++) {\n      var value = sortedActual[index];\n      assert.strictEqual(value, sortedExpected[index]);\n    }\n  });\n  function listener(name) {\n    actual.push(name);\n  }\n  return common.mustCall(listener, expected.length);\n}\n\n{\n  var ee = new events.EventEmitter();\n  var noop = common.mustNotCall();\n  ee.on('foo', noop);\n  ee.on('bar', noop);\n  ee.on('baz', noop);\n  ee.on('baz', noop);\n  var fooListeners = ee.listeners('foo');\n  var barListeners = ee.listeners('bar');\n  var bazListeners = ee.listeners('baz');\n  ee.on('removeListener', expect(['bar', 'baz', 'baz']));\n  ee.removeAllListeners('bar');\n  ee.removeAllListeners('baz');\n\n  var listeners = ee.listeners('foo');\n  assert.ok(Array.isArray(listeners));\n  assert.strictEqual(listeners.length, 1);\n  assert.strictEqual(listeners[0], noop);\n\n  listeners = ee.listeners('bar');\n  assert.ok(Array.isArray(listeners));\n  assert.strictEqual(listeners.length, 0);\n  listeners = ee.listeners('baz');\n  assert.ok(Array.isArray(listeners));\n  assert.strictEqual(listeners.length, 0);\n  // After calling removeAllListeners(),\n  // the old listeners array should stay unchanged.\n  assert.strictEqual(fooListeners.length, 1);\n  assert.strictEqual(fooListeners[0], noop);\n  assert.strictEqual(barListeners.length, 1);\n  assert.strictEqual(barListeners[0], noop);\n  assert.strictEqual(bazListeners.length, 2);\n  assert.strictEqual(bazListeners[0], noop);\n  assert.strictEqual(bazListeners[1], noop);\n  // After calling removeAllListeners(),\n  // new listeners arrays is different from the old.\n  assert.notStrictEqual(ee.listeners('bar'), barListeners);\n  assert.notStrictEqual(ee.listeners('baz'), bazListeners);\n}\n\n{\n  var ee = new events.EventEmitter();\n  ee.on('foo', common.mustNotCall());\n  ee.on('bar', common.mustNotCall());\n  // Expect LIFO order\n  ee.on('removeListener', expect(['foo', 'bar', 'removeListener']));\n  ee.on('removeListener', expect(['foo', 'bar']));\n  ee.removeAllListeners();\n\n  var listeners = ee.listeners('foo');\n  assert.ok(Array.isArray(listeners));\n  assert.strictEqual(listeners.length, 0);\n  listeners = ee.listeners('bar');\n  assert.ok(Array.isArray(listeners));\n  assert.strictEqual(listeners.length, 0);\n}\n\n{\n  var ee = new events.EventEmitter();\n  ee.on('removeListener', common.mustNotCall());\n  // Check for regression where removeAllListeners() throws when\n  // there exists a 'removeListener' listener, but there exists\n  // no listeners for the provided event type.\n  assert.doesNotThrow(function () { ee.removeAllListeners(ee, 'foo') });\n}\n\n{\n  var ee = new events.EventEmitter();\n  var expectLength = 2;\n  ee.on('removeListener', function() {\n    assert.strictEqual(expectLength--, this.listeners('baz').length);\n  });\n  ee.on('baz', common.mustNotCall());\n  ee.on('baz', common.mustNotCall());\n  ee.on('baz', common.mustNotCall());\n  assert.strictEqual(ee.listeners('baz').length, expectLength + 1);\n  ee.removeAllListeners('baz');\n  assert.strictEqual(ee.listeners('baz').length, 0);\n}\n\n{\n  var ee = new events.EventEmitter();\n  assert.strictEqual(ee, ee.removeAllListeners());\n}\n\n{\n  var ee = new events.EventEmitter();\n  ee._events = undefined;\n  assert.strictEqual(ee, ee.removeAllListeners());\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}