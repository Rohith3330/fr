{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _rewriteStackTrace = require(\"./rewrite-stack-trace\");\n\nclass ConfigError extends Error {\n  constructor(message, filename) {\n    super(message);\n    (0, _rewriteStackTrace.expectedError)(this);\n    if (filename) (0, _rewriteStackTrace.injcectVirtualStackFrame)(this, filename);\n  }\n\n}\n\nexports.default = ConfigError;\n0 && 0;","map":{"version":3,"mappings":";;;;;;;AAAA;;AAEe,MAAMA,WAAN,SAA0BC,KAA1B,CAAgC;EAC7CC,WAAW,CAACC,OAAD,EAAkBC,QAAlB,EAAqC;IAC9C,MAAMD,OAAN;IACA,sCAAc,IAAd;IACA,IAAIC,QAAJ,EAAc,iDAAyB,IAAzB,EAA+BA,QAA/B;EACf;;AAL4C","names":["ConfigError","Error","constructor","message","filename"],"sources":["C:\\Users\\Rohith\\mern\\frontend\\node_modules\\@babel\\core\\src\\errors\\config-error.ts"],"sourcesContent":["import { injcectVirtualStackFrame, expectedError } from \"./rewrite-stack-trace\";\n\nexport default class ConfigError extends Error {\n  constructor(message: string, filename?: string) {\n    super(message);\n    expectedError(this);\n    if (filename) injcectVirtualStackFrame(this, filename);\n  }\n}\n"]},"metadata":{},"sourceType":"script"}