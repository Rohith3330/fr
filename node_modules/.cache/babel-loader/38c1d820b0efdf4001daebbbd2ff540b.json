{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isTypeTemplateLiteralType = exports.isTypeBigIntLiteralType = exports.typeIsOrHasBaseType = exports.isAnyOrAnyArrayTypeDiscriminated = exports.AnyType = exports.isTypeUnknownArrayType = exports.isTypeAnyArrayType = exports.isTypeAnyType = exports.isTypeReferenceType = exports.isTypeUnknownType = exports.isTypeNeverType = exports.isTypeArrayTypeOrUnionOfArrayTypes = exports.isNullableType = void 0;\n\nconst debug_1 = __importDefault(require(\"debug\"));\n\nconst tsutils_1 = require(\"tsutils\");\n\nconst ts = __importStar(require(\"typescript\"));\n\nconst getTypeArguments_1 = require(\"./getTypeArguments\");\n\nconst typeFlagUtils_1 = require(\"./typeFlagUtils\");\n\nconst log = (0, debug_1.default)('typescript-eslint:eslint-plugin:utils:types');\n/**\n * Checks if the given type is (or accepts) nullable\n * @param isReceiver true if the type is a receiving type (i.e. the type of a called function's parameter)\n */\n\nfunction isNullableType(type) {\n  let {\n    isReceiver = false,\n    allowUndefined = true\n  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const flags = (0, typeFlagUtils_1.getTypeFlags)(type);\n\n  if (isReceiver && flags & (ts.TypeFlags.Any | ts.TypeFlags.Unknown)) {\n    return true;\n  }\n\n  if (allowUndefined) {\n    return (flags & (ts.TypeFlags.Null | ts.TypeFlags.Undefined)) !== 0;\n  } else {\n    return (flags & ts.TypeFlags.Null) !== 0;\n  }\n}\n\nexports.isNullableType = isNullableType;\n/**\n * Checks if the given type is either an array type,\n * or a union made up solely of array types.\n */\n\nfunction isTypeArrayTypeOrUnionOfArrayTypes(type, checker) {\n  for (const t of (0, tsutils_1.unionTypeParts)(type)) {\n    if (!checker.isArrayType(t)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexports.isTypeArrayTypeOrUnionOfArrayTypes = isTypeArrayTypeOrUnionOfArrayTypes;\n/**\n * @returns true if the type is `never`\n */\n\nfunction isTypeNeverType(type) {\n  return (0, typeFlagUtils_1.isTypeFlagSet)(type, ts.TypeFlags.Never);\n}\n\nexports.isTypeNeverType = isTypeNeverType;\n/**\n * @returns true if the type is `unknown`\n */\n\nfunction isTypeUnknownType(type) {\n  return (0, typeFlagUtils_1.isTypeFlagSet)(type, ts.TypeFlags.Unknown);\n}\n\nexports.isTypeUnknownType = isTypeUnknownType; // https://github.com/microsoft/TypeScript/blob/42aa18bf442c4df147e30deaf27261a41cbdc617/src/compiler/types.ts#L5157\n\nconst Nullable = ts.TypeFlags.Undefined | ts.TypeFlags.Null; // https://github.com/microsoft/TypeScript/blob/42aa18bf442c4df147e30deaf27261a41cbdc617/src/compiler/types.ts#L5187\n\nconst ObjectFlagsType = ts.TypeFlags.Any | Nullable | ts.TypeFlags.Never | ts.TypeFlags.Object | ts.TypeFlags.Union | ts.TypeFlags.Intersection;\n\nfunction isTypeReferenceType(type) {\n  if ((type.flags & ObjectFlagsType) === 0) {\n    return false;\n  }\n\n  const objectTypeFlags = type.objectFlags;\n  return (objectTypeFlags & ts.ObjectFlags.Reference) !== 0;\n}\n\nexports.isTypeReferenceType = isTypeReferenceType;\n/**\n * @returns true if the type is `any`\n */\n\nfunction isTypeAnyType(type) {\n  if ((0, typeFlagUtils_1.isTypeFlagSet)(type, ts.TypeFlags.Any)) {\n    if (type.intrinsicName === 'error') {\n      log('Found an \"error\" any type');\n    }\n\n    return true;\n  }\n\n  return false;\n}\n\nexports.isTypeAnyType = isTypeAnyType;\n/**\n * @returns true if the type is `any[]`\n */\n\nfunction isTypeAnyArrayType(type, checker) {\n  return checker.isArrayType(type) && isTypeAnyType( // getTypeArguments was only added in TS3.7\n  (0, getTypeArguments_1.getTypeArguments)(type, checker)[0]);\n}\n\nexports.isTypeAnyArrayType = isTypeAnyArrayType;\n/**\n * @returns true if the type is `unknown[]`\n */\n\nfunction isTypeUnknownArrayType(type, checker) {\n  return checker.isArrayType(type) && isTypeUnknownType( // getTypeArguments was only added in TS3.7\n  (0, getTypeArguments_1.getTypeArguments)(type, checker)[0]);\n}\n\nexports.isTypeUnknownArrayType = isTypeUnknownArrayType;\nvar AnyType;\n\n(function (AnyType) {\n  AnyType[AnyType[\"Any\"] = 0] = \"Any\";\n  AnyType[AnyType[\"AnyArray\"] = 1] = \"AnyArray\";\n  AnyType[AnyType[\"Safe\"] = 2] = \"Safe\";\n})(AnyType = exports.AnyType || (exports.AnyType = {}));\n/**\n * @returns `AnyType.Any` if the type is `any`, `AnyType.AnyArray` if the type is `any[]` or `readonly any[]`,\n *          otherwise it returns `AnyType.Safe`.\n */\n\n\nfunction isAnyOrAnyArrayTypeDiscriminated(node, checker) {\n  const type = checker.getTypeAtLocation(node);\n\n  if (isTypeAnyType(type)) {\n    return AnyType.Any;\n  }\n\n  if (isTypeAnyArrayType(type, checker)) {\n    return AnyType.AnyArray;\n  }\n\n  return AnyType.Safe;\n}\n\nexports.isAnyOrAnyArrayTypeDiscriminated = isAnyOrAnyArrayTypeDiscriminated;\n/**\n * @returns Whether a type is an instance of the parent type, including for the parent's base types.\n */\n\nfunction typeIsOrHasBaseType(type, parentType) {\n  const parentSymbol = parentType.getSymbol();\n\n  if (!type.getSymbol() || !parentSymbol) {\n    return false;\n  }\n\n  const typeAndBaseTypes = [type];\n  const ancestorTypes = type.getBaseTypes();\n\n  if (ancestorTypes) {\n    typeAndBaseTypes.push(...ancestorTypes);\n  }\n\n  for (const baseType of typeAndBaseTypes) {\n    const baseSymbol = baseType.getSymbol();\n\n    if (baseSymbol && baseSymbol.name === parentSymbol.name) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nexports.typeIsOrHasBaseType = typeIsOrHasBaseType;\n\nfunction isTypeBigIntLiteralType(type) {\n  return (0, typeFlagUtils_1.isTypeFlagSet)(type, ts.TypeFlags.BigIntLiteral);\n}\n\nexports.isTypeBigIntLiteralType = isTypeBigIntLiteralType;\n\nfunction isTypeTemplateLiteralType(type) {\n  return (0, typeFlagUtils_1.isTypeFlagSet)(type, ts.TypeFlags.TemplateLiteral);\n}\n\nexports.isTypeTemplateLiteralType = isTypeTemplateLiteralType;","map":{"version":3,"mappings":"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","names":["log","isNullableType","type","isReceiver","allowUndefined","flags","ts","TypeFlags","Any","Unknown","Null","Undefined","exports","isTypeArrayTypeOrUnionOfArrayTypes","checker","t","isArrayType","isTypeNeverType","Never","isTypeUnknownType","Nullable","ObjectFlagsType","Object","Union","Intersection","isTypeReferenceType","objectTypeFlags","objectFlags","ObjectFlags","Reference","isTypeAnyType","intrinsicName","isTypeAnyArrayType","isTypeUnknownArrayType","AnyType","isAnyOrAnyArrayTypeDiscriminated","node","getTypeAtLocation","AnyArray","Safe","typeIsOrHasBaseType","parentType","parentSymbol","getSymbol","typeAndBaseTypes","ancestorTypes","getBaseTypes","push","baseType","baseSymbol","name","isTypeBigIntLiteralType","BigIntLiteral","isTypeTemplateLiteralType","TemplateLiteral"],"sources":["../src/predicates.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}