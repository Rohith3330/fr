{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst tsutils = __importStar(require(\"tsutils\"));\n\nconst util = __importStar(require(\"../util\"));\n\nexports.default = util.createRule({\n  name: 'await-thenable',\n  meta: {\n    docs: {\n      description: 'Disallow awaiting a value that is not a Thenable',\n      recommended: 'error',\n      requiresTypeChecking: true\n    },\n    messages: {\n      await: 'Unexpected `await` of a non-Promise (non-\"Thenable\") value.'\n    },\n    schema: [],\n    type: 'problem'\n  },\n  defaultOptions: [],\n\n  create(context) {\n    const parserServices = util.getParserServices(context);\n    const checker = parserServices.program.getTypeChecker();\n    return {\n      AwaitExpression(node) {\n        const originalNode = parserServices.esTreeNodeToTSNodeMap.get(node);\n        const type = checker.getTypeAtLocation(originalNode.expression);\n\n        if (!util.isTypeAnyType(type) && !util.isTypeUnknownType(type) && !tsutils.isThenableType(checker, originalNode.expression, type)) {\n          context.report({\n            messageId: 'await',\n            node\n          });\n        }\n      }\n\n    };\n  }\n\n});","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAEA;;AAEAA,kBAAeC,IAAI,CAACC,UAAL,CAAgB;EAC7BC,IAAI,EAAE,gBADuB;EAE7BC,IAAI,EAAE;IACJC,IAAI,EAAE;MACJC,WAAW,EAAE,kDADT;MAEJC,WAAW,EAAE,OAFT;MAGJC,oBAAoB,EAAE;IAHlB,CADF;IAMJC,QAAQ,EAAE;MACRC,KAAK,EAAE;IADC,CANN;IASJC,MAAM,EAAE,EATJ;IAUJC,IAAI,EAAE;EAVF,CAFuB;EAc7BC,cAAc,EAAE,EAda;;EAgB7BC,MAAM,CAACC,OAAD,EAAQ;IACZ,MAAMC,cAAc,GAAGf,IAAI,CAACgB,iBAAL,CAAuBF,OAAvB,CAAvB;IACA,MAAMG,OAAO,GAAGF,cAAc,CAACG,OAAf,CAAuBC,cAAvB,EAAhB;IAEA,OAAO;MACLC,eAAe,CAACC,IAAD,EAAK;QAClB,MAAMC,YAAY,GAAGP,cAAc,CAACQ,qBAAf,CAAqCC,GAArC,CAAyCH,IAAzC,CAArB;QACA,MAAMV,IAAI,GAAGM,OAAO,CAACQ,iBAAR,CAA0BH,YAAY,CAACI,UAAvC,CAAb;;QAEA,IACE,CAAC1B,IAAI,CAAC2B,aAAL,CAAmBhB,IAAnB,CAAD,IACA,CAACX,IAAI,CAAC4B,iBAAL,CAAuBjB,IAAvB,CADD,IAEA,CAACkB,OAAO,CAACC,cAAR,CAAuBb,OAAvB,EAAgCK,YAAY,CAACI,UAA7C,EAAyDf,IAAzD,CAHH,EAIE;UACAG,OAAO,CAACiB,MAAR,CAAe;YACbC,SAAS,EAAE,OADE;YAEbX;UAFa,CAAf;QAID;MACF;;IAfI,CAAP;EAiBD;;AArC4B,CAAhB,CAAf","names":["exports","util","createRule","name","meta","docs","description","recommended","requiresTypeChecking","messages","await","schema","type","defaultOptions","create","context","parserServices","getParserServices","checker","program","getTypeChecker","AwaitExpression","node","originalNode","esTreeNodeToTSNodeMap","get","getTypeAtLocation","expression","isTypeAnyType","isTypeUnknownType","tsutils","isThenableType","report","messageId"],"sources":["../../src/rules/await-thenable.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}