{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst utils_1 = require(\"@typescript-eslint/utils\");\n\nconst util_1 = require(\"../util\");\n\nexports.default = (0, util_1.createRule)({\n  name: 'default-param-last',\n  meta: {\n    type: 'suggestion',\n    docs: {\n      description: 'Enforce default parameters to be last',\n      recommended: false,\n      extendsBaseRule: true\n    },\n    schema: [],\n    messages: {\n      shouldBeLast: 'Default parameters should be last.'\n    }\n  },\n  defaultOptions: [],\n\n  create(context) {\n    /**\n     * checks if node is optional parameter\n     * @param node the node to be evaluated\n     * @private\n     */\n    function isOptionalParam(node) {\n      return 'optional' in node && node.optional === true;\n    }\n    /**\n     * checks if node is plain parameter\n     * @param node the node to be evaluated\n     * @private\n     */\n\n\n    function isPlainParam(node) {\n      return !(node.type === utils_1.AST_NODE_TYPES.AssignmentPattern || node.type === utils_1.AST_NODE_TYPES.RestElement || isOptionalParam(node));\n    }\n\n    function checkDefaultParamLast(node) {\n      let hasSeenPlainParam = false;\n\n      for (let i = node.params.length - 1; i >= 0; i--) {\n        const current = node.params[i];\n        const param = current.type === utils_1.AST_NODE_TYPES.TSParameterProperty ? current.parameter : current;\n\n        if (isPlainParam(param)) {\n          hasSeenPlainParam = true;\n          continue;\n        }\n\n        if (hasSeenPlainParam && (isOptionalParam(param) || param.type === utils_1.AST_NODE_TYPES.AssignmentPattern)) {\n          context.report({\n            node: current,\n            messageId: 'shouldBeLast'\n          });\n        }\n      }\n    }\n\n    return {\n      ArrowFunctionExpression: checkDefaultParamLast,\n      FunctionDeclaration: checkDefaultParamLast,\n      FunctionExpression: checkDefaultParamLast\n    };\n  }\n\n});","map":{"version":3,"mappings":";;;;;;AACA;;AAEA;;AAEAA,kBAAe,uBAAW;EACxBC,IAAI,EAAE,oBADkB;EAExBC,IAAI,EAAE;IACJC,IAAI,EAAE,YADF;IAEJC,IAAI,EAAE;MACJC,WAAW,EAAE,uCADT;MAEJC,WAAW,EAAE,KAFT;MAGJC,eAAe,EAAE;IAHb,CAFF;IAOJC,MAAM,EAAE,EAPJ;IAQJC,QAAQ,EAAE;MACRC,YAAY,EAAE;IADN;EARN,CAFkB;EAcxBC,cAAc,EAAE,EAdQ;;EAexBC,MAAM,CAACC,OAAD,EAAQ;IACZ;;;;;IAKA,SAASC,eAAT,CAAyBC,IAAzB,EAAiD;MAC/C,OAAO,cAAcA,IAAd,IAAsBA,IAAI,CAACC,QAAL,KAAkB,IAA/C;IACD;IAED;;;;;;;IAKA,SAASC,YAAT,CAAsBF,IAAtB,EAA8C;MAC5C,OAAO,EACLA,IAAI,CAACZ,IAAL,KAAce,uBAAeC,iBAA7B,IACAJ,IAAI,CAACZ,IAAL,KAAce,uBAAeE,WAD7B,IAEAN,eAAe,CAACC,IAAD,CAHV,CAAP;IAKD;;IAED,SAASM,qBAAT,CACEN,IADF,EAIiC;MAE/B,IAAIO,iBAAiB,GAAG,KAAxB;;MACA,KAAK,IAAIC,CAAC,GAAGR,IAAI,CAACS,MAAL,CAAYC,MAAZ,GAAqB,CAAlC,EAAqCF,CAAC,IAAI,CAA1C,EAA6CA,CAAC,EAA9C,EAAkD;QAChD,MAAMG,OAAO,GAAGX,IAAI,CAACS,MAAL,CAAYD,CAAZ,CAAhB;QACA,MAAMI,KAAK,GACTD,OAAO,CAACvB,IAAR,KAAiBe,uBAAeU,mBAAhC,GACIF,OAAO,CAACG,SADZ,GAEIH,OAHN;;QAKA,IAAIT,YAAY,CAACU,KAAD,CAAhB,EAAyB;UACvBL,iBAAiB,GAAG,IAApB;UACA;QACD;;QAED,IACEA,iBAAiB,KAChBR,eAAe,CAACa,KAAD,CAAf,IACCA,KAAK,CAACxB,IAAN,KAAee,uBAAeC,iBAFf,CADnB,EAIE;UACAN,OAAO,CAACiB,MAAR,CAAe;YAAEf,IAAI,EAAEW,OAAR;YAAiBK,SAAS,EAAE;UAA5B,CAAf;QACD;MACF;IACF;;IAED,OAAO;MACLC,uBAAuB,EAAEX,qBADpB;MAELY,mBAAmB,EAAEZ,qBAFhB;MAGLa,kBAAkB,EAAEb;IAHf,CAAP;EAKD;;AAxEuB,CAAX,CAAf","names":["exports","name","meta","type","docs","description","recommended","extendsBaseRule","schema","messages","shouldBeLast","defaultOptions","create","context","isOptionalParam","node","optional","isPlainParam","utils_1","AssignmentPattern","RestElement","checkDefaultParamLast","hasSeenPlainParam","i","params","length","current","param","TSParameterProperty","parameter","report","messageId","ArrowFunctionExpression","FunctionDeclaration","FunctionExpression"],"sources":["../../src/rules/default-param-last.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}