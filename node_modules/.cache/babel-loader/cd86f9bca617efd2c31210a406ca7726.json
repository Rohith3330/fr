{"ast":null,"code":"'use strict';\n\nvar TYPES = require('../parsers').TYPES;\n\nvar valueType = require('../parsers').valueType;\n\nvar shorthandParser = require('../parsers').shorthandParser;\n\nvar shorthandSetter = require('../parsers').shorthandSetter;\n\nvar shorthandGetter = require('../parsers').shorthandGetter;\n\nvar shorthand_for = {\n  'font-family': require('./fontFamily'),\n  'font-size': require('./fontSize'),\n  'font-style': require('./fontStyle'),\n  'font-variant': require('./fontVariant'),\n  'font-weight': require('./fontWeight'),\n  'line-height': require('./lineHeight')\n};\nvar static_fonts = ['caption', 'icon', 'menu', 'message-box', 'small-caption', 'status-bar', 'inherit'];\nvar setter = shorthandSetter('font', shorthand_for);\nmodule.exports.definition = {\n  set: function (v) {\n    var short = shorthandParser(v, shorthand_for);\n\n    if (short !== undefined) {\n      return setter.call(this, v);\n    }\n\n    if (valueType(v) === TYPES.KEYWORD && static_fonts.indexOf(v.toLowerCase()) !== -1) {\n      this._setProperty('font', v);\n    }\n  },\n  get: shorthandGetter('font', shorthand_for),\n  enumerable: true,\n  configurable: true\n};","map":{"version":3,"names":["TYPES","require","valueType","shorthandParser","shorthandSetter","shorthandGetter","shorthand_for","static_fonts","setter","module","exports","definition","set","v","short","undefined","call","KEYWORD","indexOf","toLowerCase","_setProperty","get","enumerable","configurable"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/cssstyle/lib/properties/font.js"],"sourcesContent":["'use strict';\n\nvar TYPES = require('../parsers').TYPES;\nvar valueType = require('../parsers').valueType;\nvar shorthandParser = require('../parsers').shorthandParser;\nvar shorthandSetter = require('../parsers').shorthandSetter;\nvar shorthandGetter = require('../parsers').shorthandGetter;\n\nvar shorthand_for = {\n  'font-family': require('./fontFamily'),\n  'font-size': require('./fontSize'),\n  'font-style': require('./fontStyle'),\n  'font-variant': require('./fontVariant'),\n  'font-weight': require('./fontWeight'),\n  'line-height': require('./lineHeight'),\n};\n\nvar static_fonts = [\n  'caption',\n  'icon',\n  'menu',\n  'message-box',\n  'small-caption',\n  'status-bar',\n  'inherit',\n];\n\nvar setter = shorthandSetter('font', shorthand_for);\n\nmodule.exports.definition = {\n  set: function(v) {\n    var short = shorthandParser(v, shorthand_for);\n    if (short !== undefined) {\n      return setter.call(this, v);\n    }\n    if (valueType(v) === TYPES.KEYWORD && static_fonts.indexOf(v.toLowerCase()) !== -1) {\n      this._setProperty('font', v);\n    }\n  },\n  get: shorthandGetter('font', shorthand_for),\n  enumerable: true,\n  configurable: true,\n};\n"],"mappings":"AAAA;;AAEA,IAAIA,KAAK,GAAGC,OAAO,CAAC,YAAD,CAAP,CAAsBD,KAAlC;;AACA,IAAIE,SAAS,GAAGD,OAAO,CAAC,YAAD,CAAP,CAAsBC,SAAtC;;AACA,IAAIC,eAAe,GAAGF,OAAO,CAAC,YAAD,CAAP,CAAsBE,eAA5C;;AACA,IAAIC,eAAe,GAAGH,OAAO,CAAC,YAAD,CAAP,CAAsBG,eAA5C;;AACA,IAAIC,eAAe,GAAGJ,OAAO,CAAC,YAAD,CAAP,CAAsBI,eAA5C;;AAEA,IAAIC,aAAa,GAAG;EAClB,eAAeL,OAAO,CAAC,cAAD,CADJ;EAElB,aAAaA,OAAO,CAAC,YAAD,CAFF;EAGlB,cAAcA,OAAO,CAAC,aAAD,CAHH;EAIlB,gBAAgBA,OAAO,CAAC,eAAD,CAJL;EAKlB,eAAeA,OAAO,CAAC,cAAD,CALJ;EAMlB,eAAeA,OAAO,CAAC,cAAD;AANJ,CAApB;AASA,IAAIM,YAAY,GAAG,CACjB,SADiB,EAEjB,MAFiB,EAGjB,MAHiB,EAIjB,aAJiB,EAKjB,eALiB,EAMjB,YANiB,EAOjB,SAPiB,CAAnB;AAUA,IAAIC,MAAM,GAAGJ,eAAe,CAAC,MAAD,EAASE,aAAT,CAA5B;AAEAG,MAAM,CAACC,OAAP,CAAeC,UAAf,GAA4B;EAC1BC,GAAG,EAAE,UAASC,CAAT,EAAY;IACf,IAAIC,KAAK,GAAGX,eAAe,CAACU,CAAD,EAAIP,aAAJ,CAA3B;;IACA,IAAIQ,KAAK,KAAKC,SAAd,EAAyB;MACvB,OAAOP,MAAM,CAACQ,IAAP,CAAY,IAAZ,EAAkBH,CAAlB,CAAP;IACD;;IACD,IAAIX,SAAS,CAACW,CAAD,CAAT,KAAiBb,KAAK,CAACiB,OAAvB,IAAkCV,YAAY,CAACW,OAAb,CAAqBL,CAAC,CAACM,WAAF,EAArB,MAA0C,CAAC,CAAjF,EAAoF;MAClF,KAAKC,YAAL,CAAkB,MAAlB,EAA0BP,CAA1B;IACD;EACF,CATyB;EAU1BQ,GAAG,EAAEhB,eAAe,CAAC,MAAD,EAASC,aAAT,CAVM;EAW1BgB,UAAU,EAAE,IAXc;EAY1BC,YAAY,EAAE;AAZY,CAA5B"},"metadata":{},"sourceType":"script"}