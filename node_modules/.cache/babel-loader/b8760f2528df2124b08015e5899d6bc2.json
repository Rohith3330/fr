{"ast":null,"code":"/**\n * @author Matthew Caruana Galizia <m@m.cg>\n * @license MIT: http://mattcg.mit-license.org/\n * @copyright Copyright (c) 2013, Matthew Caruana Galizia\n */\n\n/*jshint node:true*/\n\n/*global test, suite*/\n'use strict';\n\nvar assert = require('assert');\n\nvar Subtag = require(process.env.TEST_LIB_PATH + '/Subtag');\n\nsuite('Subtag', function () {\n  test('subtag.type() returns type', function () {\n    assert.equal(new Subtag('zh', 'language').type(), 'language');\n    assert.equal(new Subtag('IQ', 'region').type(), 'region');\n  });\n  test('subtag.descriptions() returns descriptions', function () {\n    assert.deepEqual(new Subtag('IQ', 'region').descriptions(), ['Iraq']);\n    assert.deepEqual(new Subtag('vsv', 'extlang').descriptions(), ['Valencian Sign Language', 'Llengua de signes valenciana']);\n  });\n  test('subtag.preferred() returns preferred subtag', function () {\n    var subtag, preferred; // Extlang\n\n    subtag = new Subtag('vsv', 'extlang');\n    preferred = subtag.preferred();\n    assert(preferred);\n    assert.equal(preferred.type(), 'language');\n    assert.equal(preferred.format(), 'vsv'); // Language\n    // Moldovan -> Romanian\n\n    subtag = new Subtag('mo', 'language');\n    preferred = subtag.preferred();\n    assert(preferred);\n    assert.equal(preferred.type(), 'language');\n    assert.equal(preferred.format(), 'ro'); // Region\n    // Burma -> Myanmar\n\n    subtag = new Subtag('BU', 'region');\n    preferred = subtag.preferred();\n    assert(preferred);\n    assert.equal(preferred.type(), 'region');\n    assert.equal(preferred.format(), 'MM'); // Variant\n\n    subtag = new Subtag('heploc', 'variant');\n    preferred = subtag.preferred();\n    assert(preferred);\n    assert.equal(preferred.type(), 'variant');\n    assert.equal(preferred.format(), 'alalc97'); // Should return null if no preferred value.\n    // Latin America and the Caribbean\n\n    subtag = new Subtag('419', 'region');\n    assert.equal(subtag.preferred(), null);\n  });\n  test('subtag.script() returns suppress-script as subtag', function () {\n    var subtag, script;\n    subtag = new Subtag('en', 'language');\n    script = subtag.script();\n    assert(script);\n    assert.equal(script.type(), 'script');\n    assert.equal(script.format(), 'Latn'); // Should return null if no script.\n    // A macrolanguage like 'zh' should have no suppress-script.\n\n    subtag = new Subtag('zh', 'language');\n    script = subtag.script();\n    assert.equal(script, null);\n  });\n  test('subtag.scope() returns scope', function () {\n    assert.equal(new Subtag('zh', 'language').scope(), 'macrolanguage');\n    assert.equal(new Subtag('nah', 'language').scope(), 'collection');\n    assert.equal(new Subtag('en', 'language').scope(), null);\n    assert.equal(new Subtag('IQ', 'region').scope(), null);\n  });\n  test('subtag.deprecated() returns deprecation date if available', function () {\n    // German Democratic Republic\n    assert.equal(new Subtag('DD', 'region').deprecated(), '1990-10-30');\n    assert.equal(new Subtag('DE', 'region').deprecated(), null);\n  });\n  test('subtag.added() returns date added', function () {\n    assert.equal(new Subtag('DD', 'region').added(), '2005-10-16');\n    assert.equal(new Subtag('DG', 'region').added(), '2009-07-29');\n  });\n  test('subtag.comments() returns comments', function () {\n    // Yugoslavia\n    assert.deepEqual(new Subtag('YU', 'region').comments(), ['see BA, HR, ME, MK, RS, or SI']);\n  });\n  test('subtag.format() formats subtag according to conventions', function () {\n    // Language\n    assert.equal(new Subtag('en', 'language').format(), 'en');\n    assert.equal(new Subtag('EN', 'language').format(), 'en'); // Region\n\n    assert.equal(new Subtag('GB', 'region').format(), 'GB');\n    assert.equal(new Subtag('gb', 'region').format(), 'GB'); // Script\n\n    assert.equal(new Subtag('Latn', 'script').format(), 'Latn');\n    assert.equal(new Subtag('latn', 'script').format(), 'Latn');\n  });\n});","map":{"version":3,"names":["assert","require","Subtag","process","env","TEST_LIB_PATH","suite","test","equal","type","deepEqual","descriptions","subtag","preferred","format","script","scope","deprecated","added","comments"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/language-tags/test/lib/SubtagTest.js"],"sourcesContent":["/**\n * @author Matthew Caruana Galizia <m@m.cg>\n * @license MIT: http://mattcg.mit-license.org/\n * @copyright Copyright (c) 2013, Matthew Caruana Galizia\n */\n\n/*jshint node:true*/\n/*global test, suite*/\n\n'use strict';\n\nvar assert = require('assert');\nvar Subtag = require(process.env.TEST_LIB_PATH + '/Subtag');\n\nsuite('Subtag', function() {\n\n\ttest('subtag.type() returns type', function() {\n\t\tassert.equal(new Subtag('zh', 'language').type(), 'language');\n\t\tassert.equal(new Subtag('IQ', 'region').type(), 'region');\n\t});\n\n\ttest('subtag.descriptions() returns descriptions', function() {\n\t\tassert.deepEqual(new Subtag('IQ', 'region').descriptions(), ['Iraq']);\n\t\tassert.deepEqual(new Subtag('vsv', 'extlang').descriptions(), ['Valencian Sign Language', 'Llengua de signes valenciana']);\n\t});\n\n\ttest('subtag.preferred() returns preferred subtag', function() {\n\t\tvar subtag, preferred;\n\n\t\t// Extlang\n\t\tsubtag = new Subtag('vsv', 'extlang');\n\t\tpreferred = subtag.preferred();\n\t\tassert(preferred);\n\t\tassert.equal(preferred.type(), 'language');\n\t\tassert.equal(preferred.format(), 'vsv');\n\n\t\t// Language\n\t\t// Moldovan -> Romanian\n\t\tsubtag = new Subtag('mo', 'language');\n\t\tpreferred = subtag.preferred();\n\t\tassert(preferred);\n\t\tassert.equal(preferred.type(), 'language');\n\t\tassert.equal(preferred.format(), 'ro');\n\n\t\t// Region\n\t\t// Burma -> Myanmar\n\t\tsubtag = new Subtag('BU', 'region');\n\t\tpreferred = subtag.preferred();\n\t\tassert(preferred);\n\t\tassert.equal(preferred.type(), 'region');\n\t\tassert.equal(preferred.format(), 'MM');\n\n\t\t// Variant\n\t\tsubtag = new Subtag('heploc', 'variant');\n\t\tpreferred = subtag.preferred();\n\t\tassert(preferred);\n\t\tassert.equal(preferred.type(), 'variant');\n\t\tassert.equal(preferred.format(), 'alalc97');\n\n\t\t// Should return null if no preferred value.\n\t\t// Latin America and the Caribbean\n\t\tsubtag = new Subtag('419', 'region');\n\t\tassert.equal(subtag.preferred(), null);\n\t});\n\n\ttest('subtag.script() returns suppress-script as subtag', function() {\n\t\tvar subtag, script;\n\n\t\tsubtag = new Subtag('en', 'language');\n\t\tscript = subtag.script();\n\t\tassert(script);\n\t\tassert.equal(script.type(), 'script');\n\t\tassert.equal(script.format(), 'Latn');\n\n\t\t// Should return null if no script.\n\t\t// A macrolanguage like 'zh' should have no suppress-script.\n\t\tsubtag = new Subtag('zh', 'language');\n\t\tscript = subtag.script();\n\t\tassert.equal(script, null);\n\t});\n\n\ttest('subtag.scope() returns scope', function() {\n\t\tassert.equal(new Subtag('zh', 'language').scope(), 'macrolanguage');\n\t\tassert.equal(new Subtag('nah', 'language').scope(), 'collection');\n\t\tassert.equal(new Subtag('en', 'language').scope(), null);\n\t\tassert.equal(new Subtag('IQ', 'region').scope(), null);\n\t});\n\n\ttest('subtag.deprecated() returns deprecation date if available', function() {\n\n\t\t// German Democratic Republic\n\t\tassert.equal(new Subtag('DD', 'region').deprecated(), '1990-10-30');\n\t\tassert.equal(new Subtag('DE', 'region').deprecated(), null);\n\t});\n\n\ttest('subtag.added() returns date added', function() {\n\t\tassert.equal(new Subtag('DD', 'region').added(), '2005-10-16');\n\t\tassert.equal(new Subtag('DG', 'region').added(), '2009-07-29');\n\t});\n\n\ttest('subtag.comments() returns comments', function() {\n\n\t\t// Yugoslavia\n\t\tassert.deepEqual(new Subtag('YU', 'region').comments(), ['see BA, HR, ME, MK, RS, or SI']);\n\t});\n\n\ttest('subtag.format() formats subtag according to conventions', function() {\n\n\t\t// Language\n\t\tassert.equal(new Subtag('en', 'language').format(), 'en');\n\t\tassert.equal(new Subtag('EN', 'language').format(), 'en');\n\n\t\t// Region\n\t\tassert.equal(new Subtag('GB', 'region').format(), 'GB');\n\t\tassert.equal(new Subtag('gb', 'region').format(), 'GB');\n\n\t\t// Script\n\t\tassert.equal(new Subtag('Latn', 'script').format(), 'Latn');\n\t\tassert.equal(new Subtag('latn', 'script').format(), 'Latn');\n\t});\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}