{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DequeIterator = void 0;\n\nconst index_1 = __importDefault(require(\"./Base/index\"));\n\nconst checkParams_1 = require(\"../../utils/checkParams\");\n\nconst index_2 = require(\"../ContainerBase/index\");\n\nconst RandomIterator_1 = require(\"./Base/RandomIterator\");\n\nclass DequeIterator extends RandomIterator_1.RandomIterator {\n  copy() {\n    return new DequeIterator(this.node, this.size, this.getElementByPos, this.setElementByPos, this.iteratorType);\n  }\n\n}\n\nexports.DequeIterator = DequeIterator;\n\nclass Deque extends index_1.default {\n  constructor() {\n    let container = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    let bucketSize = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1 << 12;\n    super();\n    this.first = 0;\n    this.curFirst = 0;\n    this.last = 0;\n    this.curLast = 0;\n    this.bucketNum = 0;\n    this.map = [];\n\n    let _length;\n\n    if ('size' in container) {\n      if (typeof container.size === 'number') {\n        _length = container.size;\n      } else {\n        _length = container.size();\n      }\n    } else if ('length' in container) {\n      _length = container.length;\n    } else {\n      throw new RangeError('Can\\'t get container\\'s size!');\n    }\n\n    this.bucketSize = bucketSize;\n    this.bucketNum = Math.max(Math.ceil(_length / this.bucketSize), 1);\n\n    for (let i = 0; i < this.bucketNum; ++i) {\n      this.map.push(new Array(this.bucketSize));\n    }\n\n    const needBucketNum = Math.ceil(_length / this.bucketSize);\n    this.first = this.last = (this.bucketNum >> 1) - (needBucketNum >> 1);\n    this.curFirst = this.curLast = this.bucketSize - _length % this.bucketSize >> 1;\n    container.forEach(element => this.pushBack(element));\n    this.size = this.size.bind(this);\n    this.getElementByPos = this.getElementByPos.bind(this);\n    this.setElementByPos = this.setElementByPos.bind(this);\n  }\n  /**\n   * @description Growth the Deque.\n   * @private\n   */\n\n\n  reAllocate() {\n    const newMap = [];\n    const addBucketNum = Math.max(this.bucketNum >> 1, 1);\n\n    for (let i = 0; i < addBucketNum; ++i) {\n      newMap[i] = new Array(this.bucketSize);\n    }\n\n    for (let i = this.first; i < this.bucketNum; ++i) {\n      newMap[newMap.length] = this.map[i];\n    }\n\n    for (let i = 0; i < this.last; ++i) {\n      newMap[newMap.length] = this.map[i];\n    }\n\n    newMap[newMap.length] = [...this.map[this.last]];\n    this.first = addBucketNum;\n    this.last = newMap.length - 1;\n\n    for (let i = 0; i < addBucketNum; ++i) {\n      newMap[newMap.length] = new Array(this.bucketSize);\n    }\n\n    this.map = newMap;\n    this.bucketNum = newMap.length;\n  }\n  /**\n   * @description Get the bucket position of the element and the pointer position by index.\n   * @param pos The element's index.\n   * @private\n   */\n\n\n  getElementIndex(pos) {\n    const offset = this.curFirst + pos + 1;\n    const offsetRemainder = offset % this.bucketSize;\n    let curNodePointerIndex = offsetRemainder - 1;\n    let curNodeBucketIndex = this.first + (offset - offsetRemainder) / this.bucketSize;\n    if (offsetRemainder === 0) curNodeBucketIndex -= 1;\n    curNodeBucketIndex %= this.bucketNum;\n    if (curNodePointerIndex < 0) curNodePointerIndex += this.bucketSize;\n    return {\n      curNodeBucketIndex,\n      curNodePointerIndex\n    };\n  }\n\n  clear() {\n    this.map = [[]];\n    this.bucketNum = 1;\n    this.first = this.last = this.length = 0;\n    this.curFirst = this.curLast = this.bucketSize >> 1;\n  }\n\n  front() {\n    return this.map[this.first][this.curFirst];\n  }\n\n  back() {\n    return this.map[this.last][this.curLast];\n  }\n\n  begin() {\n    return new DequeIterator(0, this.size, this.getElementByPos, this.setElementByPos);\n  }\n\n  end() {\n    return new DequeIterator(this.length, this.size, this.getElementByPos, this.setElementByPos);\n  }\n\n  rBegin() {\n    return new DequeIterator(this.length - 1, this.size, this.getElementByPos, this.setElementByPos, index_2.ContainerIterator.REVERSE);\n  }\n\n  rEnd() {\n    return new DequeIterator(-1, this.size, this.getElementByPos, this.setElementByPos, index_2.ContainerIterator.REVERSE);\n  }\n\n  pushBack(element) {\n    if (this.length) {\n      if (this.curLast < this.bucketSize - 1) {\n        this.curLast += 1;\n      } else if (this.last < this.bucketNum - 1) {\n        this.last += 1;\n        this.curLast = 0;\n      } else {\n        this.last = 0;\n        this.curLast = 0;\n      }\n\n      if (this.last === this.first && this.curLast === this.curFirst) this.reAllocate();\n    }\n\n    this.length += 1;\n    this.map[this.last][this.curLast] = element;\n  }\n\n  popBack() {\n    if (!this.length) return;\n    this.map[this.last][this.curLast] = undefined;\n\n    if (this.length !== 1) {\n      if (this.curLast > 0) {\n        this.curLast -= 1;\n      } else if (this.last > 0) {\n        this.last -= 1;\n        this.curLast = this.bucketSize - 1;\n      } else {\n        this.last = this.bucketNum - 1;\n        this.curLast = this.bucketSize - 1;\n      }\n    }\n\n    this.length -= 1;\n  }\n  /**\n   * @description Push the element to the front.\n   * @param element The element you want to push.\n   */\n\n\n  pushFront(element) {\n    if (this.length) {\n      if (this.curFirst > 0) {\n        this.curFirst -= 1;\n      } else if (this.first > 0) {\n        this.first -= 1;\n        this.curFirst = this.bucketSize - 1;\n      } else {\n        this.first = this.bucketNum - 1;\n        this.curFirst = this.bucketSize - 1;\n      }\n\n      if (this.first === this.last && this.curFirst === this.curLast) this.reAllocate();\n    }\n\n    this.length += 1;\n    this.map[this.first][this.curFirst] = element;\n  }\n  /**\n   * @description Remove the first element.\n   */\n\n\n  popFront() {\n    if (!this.length) return;\n    this.map[this.first][this.curFirst] = undefined;\n\n    if (this.length !== 1) {\n      if (this.curFirst < this.bucketSize - 1) {\n        this.curFirst += 1;\n      } else if (this.first < this.bucketNum - 1) {\n        this.first += 1;\n        this.curFirst = 0;\n      } else {\n        this.first = 0;\n        this.curFirst = 0;\n      }\n    }\n\n    this.length -= 1;\n  }\n\n  forEach(callback) {\n    for (let i = 0; i < this.length; ++i) {\n      callback(this.getElementByPos(i), i);\n    }\n  }\n\n  getElementByPos(pos) {\n    (0, checkParams_1.checkWithinAccessParams)(pos, 0, this.length - 1);\n    const {\n      curNodeBucketIndex,\n      curNodePointerIndex\n    } = this.getElementIndex(pos);\n    return this.map[curNodeBucketIndex][curNodePointerIndex];\n  }\n\n  setElementByPos(pos, element) {\n    (0, checkParams_1.checkWithinAccessParams)(pos, 0, this.length - 1);\n    const {\n      curNodeBucketIndex,\n      curNodePointerIndex\n    } = this.getElementIndex(pos);\n    this.map[curNodeBucketIndex][curNodePointerIndex] = element;\n  }\n\n  insert(pos, element) {\n    let num = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n    (0, checkParams_1.checkWithinAccessParams)(pos, 0, this.length);\n\n    if (pos === 0) {\n      while (num--) this.pushFront(element);\n    } else if (pos === this.length) {\n      while (num--) this.pushBack(element);\n    } else {\n      const arr = [];\n\n      for (let i = pos; i < this.length; ++i) {\n        arr.push(this.getElementByPos(i));\n      }\n\n      this.cut(pos - 1);\n\n      for (let i = 0; i < num; ++i) this.pushBack(element);\n\n      for (let i = 0; i < arr.length; ++i) this.pushBack(arr[i]);\n    }\n  }\n  /**\n   * @description Remove all elements after the specified position (excluding the specified position).\n   * @param pos The previous position of the first removed element.\n   * @example deque.cut(1); // Then deque's size will be 2. deque -> [0, 1]\n   */\n\n\n  cut(pos) {\n    if (pos < 0) {\n      this.clear();\n      return;\n    }\n\n    const {\n      curNodeBucketIndex,\n      curNodePointerIndex\n    } = this.getElementIndex(pos);\n    this.last = curNodeBucketIndex;\n    this.curLast = curNodePointerIndex;\n    this.length = pos + 1;\n  }\n\n  eraseElementByPos(pos) {\n    (0, checkParams_1.checkWithinAccessParams)(pos, 0, this.length - 1);\n    if (pos === 0) this.popFront();else if (pos === this.length - 1) this.popBack();else {\n      const arr = [];\n\n      for (let i = pos + 1; i < this.length; ++i) {\n        arr.push(this.getElementByPos(i));\n      }\n\n      this.cut(pos);\n      this.popBack();\n      arr.forEach(element => this.pushBack(element));\n    }\n  }\n\n  eraseElementByValue(value) {\n    if (!this.length) return;\n    const arr = [];\n\n    for (let i = 0; i < this.length; ++i) {\n      const element = this.getElementByPos(i);\n      if (element !== value) arr.push(element);\n    }\n\n    const _length = arr.length;\n\n    for (let i = 0; i < _length; ++i) this.setElementByPos(i, arr[i]);\n\n    this.cut(_length - 1);\n  }\n\n  eraseElementByIterator(iter) {\n    // @ts-ignore\n    const node = iter.node;\n    this.eraseElementByPos(node);\n    iter = iter.next();\n    return iter;\n  }\n\n  find(element) {\n    for (let i = 0; i < this.length; ++i) {\n      if (this.getElementByPos(i) === element) {\n        return new DequeIterator(i, this.size, this.getElementByPos, this.setElementByPos);\n      }\n    }\n\n    return this.end();\n  }\n\n  reverse() {\n    let l = 0;\n    let r = this.length - 1;\n\n    while (l < r) {\n      const tmp = this.getElementByPos(l);\n      this.setElementByPos(l, this.getElementByPos(r));\n      this.setElementByPos(r, tmp);\n      l += 1;\n      r -= 1;\n    }\n  }\n\n  unique() {\n    if (this.length <= 1) return;\n    let index = 1;\n    let pre = this.getElementByPos(0);\n\n    for (let i = 1; i < this.length; ++i) {\n      const cur = this.getElementByPos(i);\n\n      if (cur !== pre) {\n        pre = cur;\n        this.setElementByPos(index++, cur);\n      }\n    }\n\n    while (this.length > index) this.popBack();\n  }\n\n  sort(cmp) {\n    const arr = [];\n\n    for (let i = 0; i < this.length; ++i) {\n      arr.push(this.getElementByPos(i));\n    }\n\n    arr.sort(cmp);\n\n    for (let i = 0; i < this.length; ++i) this.setElementByPos(i, arr[i]);\n  }\n  /**\n   * @description Remove as much useless space as possible.\n   */\n\n\n  shrinkToFit() {\n    if (!this.length) return;\n    const arr = [];\n    this.forEach(element => arr.push(element));\n    this.bucketNum = Math.max(Math.ceil(this.length / this.bucketSize), 1);\n    this.length = this.first = this.last = this.curFirst = this.curLast = 0;\n    this.map = [];\n\n    for (let i = 0; i < this.bucketNum; ++i) {\n      this.map.push(new Array(this.bucketSize));\n    }\n\n    for (let i = 0; i < arr.length; ++i) this.pushBack(arr[i]);\n  }\n\n  [Symbol.iterator]() {\n    return function* () {\n      for (let i = 0; i < this.length; ++i) {\n        yield this.getElementByPos(i);\n      }\n    }.bind(this)();\n  }\n\n}\n\nexports.default = Deque;","map":{"version":3,"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","DequeIterator","index_1","require","checkParams_1","index_2","RandomIterator_1","RandomIterator","copy","node","size","getElementByPos","setElementByPos","iteratorType","Deque","default","constructor","container","bucketSize","first","curFirst","last","curLast","bucketNum","map","_length","length","RangeError","Math","max","ceil","i","push","Array","needBucketNum","forEach","element","pushBack","bind","reAllocate","newMap","addBucketNum","getElementIndex","pos","offset","offsetRemainder","curNodePointerIndex","curNodeBucketIndex","clear","front","back","begin","end","rBegin","ContainerIterator","REVERSE","rEnd","popBack","undefined","pushFront","popFront","callback","checkWithinAccessParams","insert","num","arr","cut","eraseElementByPos","eraseElementByValue","eraseElementByIterator","iter","next","find","reverse","l","r","tmp","unique","index","pre","cur","sort","cmp","shrinkToFit","Symbol","iterator"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/js-sdsl/dist/cjs/container/SequentialContainer/Deque.js"],"sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DequeIterator = void 0;\nconst index_1 = __importDefault(require(\"./Base/index\"));\nconst checkParams_1 = require(\"../../utils/checkParams\");\nconst index_2 = require(\"../ContainerBase/index\");\nconst RandomIterator_1 = require(\"./Base/RandomIterator\");\nclass DequeIterator extends RandomIterator_1.RandomIterator {\n    copy() {\n        return new DequeIterator(this.node, this.size, this.getElementByPos, this.setElementByPos, this.iteratorType);\n    }\n}\nexports.DequeIterator = DequeIterator;\nclass Deque extends index_1.default {\n    constructor(container = [], bucketSize = (1 << 12)) {\n        super();\n        this.first = 0;\n        this.curFirst = 0;\n        this.last = 0;\n        this.curLast = 0;\n        this.bucketNum = 0;\n        this.map = [];\n        let _length;\n        if ('size' in container) {\n            if (typeof container.size === 'number') {\n                _length = container.size;\n            }\n            else {\n                _length = container.size();\n            }\n        }\n        else if ('length' in container) {\n            _length = container.length;\n        }\n        else {\n            throw new RangeError('Can\\'t get container\\'s size!');\n        }\n        this.bucketSize = bucketSize;\n        this.bucketNum = Math.max(Math.ceil(_length / this.bucketSize), 1);\n        for (let i = 0; i < this.bucketNum; ++i) {\n            this.map.push(new Array(this.bucketSize));\n        }\n        const needBucketNum = Math.ceil(_length / this.bucketSize);\n        this.first = this.last = (this.bucketNum >> 1) - (needBucketNum >> 1);\n        this.curFirst = this.curLast = (this.bucketSize - _length % this.bucketSize) >> 1;\n        container.forEach(element => this.pushBack(element));\n        this.size = this.size.bind(this);\n        this.getElementByPos = this.getElementByPos.bind(this);\n        this.setElementByPos = this.setElementByPos.bind(this);\n    }\n    /**\n     * @description Growth the Deque.\n     * @private\n     */\n    reAllocate() {\n        const newMap = [];\n        const addBucketNum = Math.max(this.bucketNum >> 1, 1);\n        for (let i = 0; i < addBucketNum; ++i) {\n            newMap[i] = new Array(this.bucketSize);\n        }\n        for (let i = this.first; i < this.bucketNum; ++i) {\n            newMap[newMap.length] = this.map[i];\n        }\n        for (let i = 0; i < this.last; ++i) {\n            newMap[newMap.length] = this.map[i];\n        }\n        newMap[newMap.length] = [...this.map[this.last]];\n        this.first = addBucketNum;\n        this.last = newMap.length - 1;\n        for (let i = 0; i < addBucketNum; ++i) {\n            newMap[newMap.length] = new Array(this.bucketSize);\n        }\n        this.map = newMap;\n        this.bucketNum = newMap.length;\n    }\n    /**\n     * @description Get the bucket position of the element and the pointer position by index.\n     * @param pos The element's index.\n     * @private\n     */\n    getElementIndex(pos) {\n        const offset = this.curFirst + pos + 1;\n        const offsetRemainder = offset % this.bucketSize;\n        let curNodePointerIndex = offsetRemainder - 1;\n        let curNodeBucketIndex = this.first + (offset - offsetRemainder) / this.bucketSize;\n        if (offsetRemainder === 0)\n            curNodeBucketIndex -= 1;\n        curNodeBucketIndex %= this.bucketNum;\n        if (curNodePointerIndex < 0)\n            curNodePointerIndex += this.bucketSize;\n        return { curNodeBucketIndex, curNodePointerIndex };\n    }\n    clear() {\n        this.map = [[]];\n        this.bucketNum = 1;\n        this.first = this.last = this.length = 0;\n        this.curFirst = this.curLast = this.bucketSize >> 1;\n    }\n    front() {\n        return this.map[this.first][this.curFirst];\n    }\n    back() {\n        return this.map[this.last][this.curLast];\n    }\n    begin() {\n        return new DequeIterator(0, this.size, this.getElementByPos, this.setElementByPos);\n    }\n    end() {\n        return new DequeIterator(this.length, this.size, this.getElementByPos, this.setElementByPos);\n    }\n    rBegin() {\n        return new DequeIterator(this.length - 1, this.size, this.getElementByPos, this.setElementByPos, index_2.ContainerIterator.REVERSE);\n    }\n    rEnd() {\n        return new DequeIterator(-1, this.size, this.getElementByPos, this.setElementByPos, index_2.ContainerIterator.REVERSE);\n    }\n    pushBack(element) {\n        if (this.length) {\n            if (this.curLast < this.bucketSize - 1) {\n                this.curLast += 1;\n            }\n            else if (this.last < this.bucketNum - 1) {\n                this.last += 1;\n                this.curLast = 0;\n            }\n            else {\n                this.last = 0;\n                this.curLast = 0;\n            }\n            if (this.last === this.first &&\n                this.curLast === this.curFirst)\n                this.reAllocate();\n        }\n        this.length += 1;\n        this.map[this.last][this.curLast] = element;\n    }\n    popBack() {\n        if (!this.length)\n            return;\n        this.map[this.last][this.curLast] = undefined;\n        if (this.length !== 1) {\n            if (this.curLast > 0) {\n                this.curLast -= 1;\n            }\n            else if (this.last > 0) {\n                this.last -= 1;\n                this.curLast = this.bucketSize - 1;\n            }\n            else {\n                this.last = this.bucketNum - 1;\n                this.curLast = this.bucketSize - 1;\n            }\n        }\n        this.length -= 1;\n    }\n    /**\n     * @description Push the element to the front.\n     * @param element The element you want to push.\n     */\n    pushFront(element) {\n        if (this.length) {\n            if (this.curFirst > 0) {\n                this.curFirst -= 1;\n            }\n            else if (this.first > 0) {\n                this.first -= 1;\n                this.curFirst = this.bucketSize - 1;\n            }\n            else {\n                this.first = this.bucketNum - 1;\n                this.curFirst = this.bucketSize - 1;\n            }\n            if (this.first === this.last &&\n                this.curFirst === this.curLast)\n                this.reAllocate();\n        }\n        this.length += 1;\n        this.map[this.first][this.curFirst] = element;\n    }\n    /**\n     * @description Remove the first element.\n     */\n    popFront() {\n        if (!this.length)\n            return;\n        this.map[this.first][this.curFirst] = undefined;\n        if (this.length !== 1) {\n            if (this.curFirst < this.bucketSize - 1) {\n                this.curFirst += 1;\n            }\n            else if (this.first < this.bucketNum - 1) {\n                this.first += 1;\n                this.curFirst = 0;\n            }\n            else {\n                this.first = 0;\n                this.curFirst = 0;\n            }\n        }\n        this.length -= 1;\n    }\n    forEach(callback) {\n        for (let i = 0; i < this.length; ++i) {\n            callback(this.getElementByPos(i), i);\n        }\n    }\n    getElementByPos(pos) {\n        (0, checkParams_1.checkWithinAccessParams)(pos, 0, this.length - 1);\n        const { curNodeBucketIndex, curNodePointerIndex } = this.getElementIndex(pos);\n        return this.map[curNodeBucketIndex][curNodePointerIndex];\n    }\n    setElementByPos(pos, element) {\n        (0, checkParams_1.checkWithinAccessParams)(pos, 0, this.length - 1);\n        const { curNodeBucketIndex, curNodePointerIndex } = this.getElementIndex(pos);\n        this.map[curNodeBucketIndex][curNodePointerIndex] = element;\n    }\n    insert(pos, element, num = 1) {\n        (0, checkParams_1.checkWithinAccessParams)(pos, 0, this.length);\n        if (pos === 0) {\n            while (num--)\n                this.pushFront(element);\n        }\n        else if (pos === this.length) {\n            while (num--)\n                this.pushBack(element);\n        }\n        else {\n            const arr = [];\n            for (let i = pos; i < this.length; ++i) {\n                arr.push(this.getElementByPos(i));\n            }\n            this.cut(pos - 1);\n            for (let i = 0; i < num; ++i)\n                this.pushBack(element);\n            for (let i = 0; i < arr.length; ++i)\n                this.pushBack(arr[i]);\n        }\n    }\n    /**\n     * @description Remove all elements after the specified position (excluding the specified position).\n     * @param pos The previous position of the first removed element.\n     * @example deque.cut(1); // Then deque's size will be 2. deque -> [0, 1]\n     */\n    cut(pos) {\n        if (pos < 0) {\n            this.clear();\n            return;\n        }\n        const { curNodeBucketIndex, curNodePointerIndex } = this.getElementIndex(pos);\n        this.last = curNodeBucketIndex;\n        this.curLast = curNodePointerIndex;\n        this.length = pos + 1;\n    }\n    eraseElementByPos(pos) {\n        (0, checkParams_1.checkWithinAccessParams)(pos, 0, this.length - 1);\n        if (pos === 0)\n            this.popFront();\n        else if (pos === this.length - 1)\n            this.popBack();\n        else {\n            const arr = [];\n            for (let i = pos + 1; i < this.length; ++i) {\n                arr.push(this.getElementByPos(i));\n            }\n            this.cut(pos);\n            this.popBack();\n            arr.forEach(element => this.pushBack(element));\n        }\n    }\n    eraseElementByValue(value) {\n        if (!this.length)\n            return;\n        const arr = [];\n        for (let i = 0; i < this.length; ++i) {\n            const element = this.getElementByPos(i);\n            if (element !== value)\n                arr.push(element);\n        }\n        const _length = arr.length;\n        for (let i = 0; i < _length; ++i)\n            this.setElementByPos(i, arr[i]);\n        this.cut(_length - 1);\n    }\n    eraseElementByIterator(iter) {\n        // @ts-ignore\n        const node = iter.node;\n        this.eraseElementByPos(node);\n        iter = iter.next();\n        return iter;\n    }\n    find(element) {\n        for (let i = 0; i < this.length; ++i) {\n            if (this.getElementByPos(i) === element) {\n                return new DequeIterator(i, this.size, this.getElementByPos, this.setElementByPos);\n            }\n        }\n        return this.end();\n    }\n    reverse() {\n        let l = 0;\n        let r = this.length - 1;\n        while (l < r) {\n            const tmp = this.getElementByPos(l);\n            this.setElementByPos(l, this.getElementByPos(r));\n            this.setElementByPos(r, tmp);\n            l += 1;\n            r -= 1;\n        }\n    }\n    unique() {\n        if (this.length <= 1)\n            return;\n        let index = 1;\n        let pre = this.getElementByPos(0);\n        for (let i = 1; i < this.length; ++i) {\n            const cur = this.getElementByPos(i);\n            if (cur !== pre) {\n                pre = cur;\n                this.setElementByPos(index++, cur);\n            }\n        }\n        while (this.length > index)\n            this.popBack();\n    }\n    sort(cmp) {\n        const arr = [];\n        for (let i = 0; i < this.length; ++i) {\n            arr.push(this.getElementByPos(i));\n        }\n        arr.sort(cmp);\n        for (let i = 0; i < this.length; ++i)\n            this.setElementByPos(i, arr[i]);\n    }\n    /**\n     * @description Remove as much useless space as possible.\n     */\n    shrinkToFit() {\n        if (!this.length)\n            return;\n        const arr = [];\n        this.forEach(element => arr.push(element));\n        this.bucketNum = Math.max(Math.ceil(this.length / this.bucketSize), 1);\n        this.length = this.first = this.last = this.curFirst = this.curLast = 0;\n        this.map = [];\n        for (let i = 0; i < this.bucketNum; ++i) {\n            this.map.push(new Array(this.bucketSize));\n        }\n        for (let i = 0; i < arr.length; ++i)\n            this.pushBack(arr[i]);\n    }\n    [Symbol.iterator]() {\n        return function* () {\n            for (let i = 0; i < this.length; ++i) {\n                yield this.getElementByPos(i);\n            }\n        }.bind(this)();\n    }\n}\nexports.default = Deque;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}