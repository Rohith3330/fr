{"ast":null,"code":"/*\n * Jake JavaScript build tool\n * Copyright 2112 Matthew Eernisse (mde@fleegix.org)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n*/\nlet fs = require('fs');\n\nlet parseargs = require('./parseargs');\n\nlet utils = require('./utils');\n\nlet Program;\n\nlet usage = require('fs').readFileSync(`${__dirname}/../usage.txt`).toString();\n\nlet {\n  Task\n} = require('./task/task');\n\nfunction die(msg) {\n  console.log(msg);\n  process.stdout.write('', function () {\n    process.stderr.write('', function () {\n      process.exit();\n    });\n  });\n}\n\nlet preempts = {\n  version: function () {\n    die(jake.version);\n  },\n  help: function () {\n    die(usage);\n  }\n};\nlet AVAILABLE_OPTS = [{\n  full: 'jakefile',\n  abbr: 'f',\n  expectValue: true\n}, {\n  full: 'quiet',\n  abbr: 'q',\n  expectValue: false\n}, {\n  full: 'directory',\n  abbr: 'C',\n  expectValue: true\n}, {\n  full: 'always-make',\n  abbr: 'B',\n  expectValue: false\n}, {\n  full: 'tasks',\n  abbr: 'T',\n  expectValue: false,\n  allowValue: true\n}, // Alias t\n{\n  full: 'tasks',\n  abbr: 't',\n  expectValue: false,\n  allowValue: true\n}, // Alias ls\n{\n  full: 'tasks',\n  abbr: 'ls',\n  expectValue: false,\n  allowValue: true\n}, {\n  full: 'help',\n  abbr: 'h'\n}, {\n  full: 'version',\n  abbr: 'V'\n}, // Alias lowercase v\n{\n  full: 'version',\n  abbr: 'v'\n}, {\n  full: 'jakelibdir',\n  abbr: 'J',\n  expectValue: true\n}, {\n  full: 'allow-rejection',\n  abbr: 'ar',\n  expectValue: false\n}];\n\nProgram = function () {\n  this.availableOpts = AVAILABLE_OPTS;\n  this.opts = {};\n  this.taskNames = null;\n  this.taskArgs = null;\n  this.envVars = null;\n  this.die = die;\n};\n\nProgram.prototype = new function () {\n  this.handleErr = function (err) {\n    if (jake.listeners('error').length !== 0) {\n      jake.emit('error', err);\n      return;\n    }\n\n    if (jake.listeners('error').length) {\n      jake.emit('error', err);\n      return;\n    }\n\n    utils.logger.error('jake aborted.');\n\n    if (err.stack) {\n      utils.logger.error(err.stack);\n    } else {\n      utils.logger.error(err.message);\n    }\n\n    process.stdout.write('', function () {\n      process.stderr.write('', function () {\n        jake.errorCode = jake.errorCode || 1;\n        process.exit(jake.errorCode);\n      });\n    });\n  };\n\n  this.parseArgs = function (args) {\n    let result = new parseargs.Parser(this.availableOpts).parse(args);\n    this.setOpts(result.opts);\n    this.setTaskNames(result.taskNames);\n    this.setEnvVars(result.envVars);\n  };\n\n  this.setOpts = function (options) {\n    let opts = options || {};\n    Object.assign(this.opts, opts);\n  };\n\n  this.internalOpts = function (options) {\n    this.availableOpts = this.availableOpts.concat(options);\n  };\n\n  this.autocompletions = function (cur) {\n    let p;\n    let i;\n    let task;\n    let commonPrefix = '';\n    let matches = [];\n\n    for (p in jake.Task) {\n      task = jake.Task[p];\n\n      if ('fullName' in task && ( // if empty string, program converts to true\n      cur === true || task.fullName.indexOf(cur) === 0)) {\n        if (matches.length === 0) {\n          commonPrefix = task.fullName;\n        } else {\n          for (i = commonPrefix.length; i > -1; --i) {\n            commonPrefix = commonPrefix.substr(0, i);\n\n            if (task.fullName.indexOf(commonPrefix) === 0) {\n              break;\n            }\n          }\n        }\n\n        matches.push(task.fullName);\n      }\n    }\n\n    if (matches.length > 1 && commonPrefix === cur) {\n      matches.unshift('yes-space');\n    } else {\n      matches.unshift('no-space');\n    }\n\n    process.stdout.write(matches.join(' '));\n  };\n\n  this.setTaskNames = function (names) {\n    if (names && !Array.isArray(names)) {\n      throw new Error('Task names must be an array');\n    }\n\n    this.taskNames = names && names.length ? names : ['default'];\n  };\n\n  this.setEnvVars = function (vars) {\n    this.envVars = vars || null;\n  };\n\n  this.firstPreemptiveOption = function () {\n    let opts = this.opts;\n\n    for (let p in opts) {\n      if (preempts[p]) {\n        return preempts[p];\n      }\n    }\n\n    return false;\n  };\n\n  this.init = function (configuration) {\n    let self = this;\n    let config = configuration || {};\n\n    if (config.options) {\n      this.setOpts(config.options);\n    }\n\n    if (config.taskNames) {\n      this.setTaskNames(config.taskNames);\n    }\n\n    if (config.envVars) {\n      this.setEnvVars(config.envVars);\n    }\n\n    process.addListener('uncaughtException', function (err) {\n      self.handleErr(err);\n    });\n\n    if (!this.opts['allow-rejection']) {\n      process.addListener('unhandledRejection', (reason, promise) => {\n        utils.logger.error('Unhandled rejection at:', promise, 'reason:', reason);\n        self.handleErr(reason);\n      });\n    }\n\n    if (this.envVars) {\n      Object.assign(process.env, this.envVars);\n    }\n  };\n\n  this.run = function () {\n    let rootTask;\n    let taskNames;\n    let dirname;\n    let opts = this.opts;\n\n    if (opts.autocomplete) {\n      return this.autocompletions(opts['autocomplete-cur'], opts['autocomplete-prev']);\n    } // Run with `jake -T`, just show descriptions\n\n\n    if (opts.tasks) {\n      return jake.showAllTaskDescriptions(opts.tasks);\n    }\n\n    taskNames = this.taskNames;\n\n    if (!(Array.isArray(taskNames) && taskNames.length)) {\n      throw new Error('Please pass jake.runTasks an array of task-names');\n    } // Set working dir\n\n\n    dirname = opts.directory;\n\n    if (dirname) {\n      if (fs.existsSync(dirname) && fs.statSync(dirname).isDirectory()) {\n        process.chdir(dirname);\n      } else {\n        throw new Error(dirname + ' is not a valid directory path');\n      }\n    }\n\n    rootTask = task(Task.ROOT_TASK_NAME, taskNames, function () {});\n    rootTask._internal = true;\n    rootTask.once('complete', function () {\n      jake.emit('complete');\n    });\n    jake.emit('start');\n    rootTask.invoke();\n  };\n}();\nmodule.exports.Program = Program;","map":{"version":3,"names":["fs","require","parseargs","utils","Program","usage","readFileSync","__dirname","toString","Task","die","msg","console","log","process","stdout","write","stderr","exit","preempts","version","jake","help","AVAILABLE_OPTS","full","abbr","expectValue","allowValue","availableOpts","opts","taskNames","taskArgs","envVars","prototype","handleErr","err","listeners","length","emit","logger","error","stack","message","errorCode","parseArgs","args","result","Parser","parse","setOpts","setTaskNames","setEnvVars","options","Object","assign","internalOpts","concat","autocompletions","cur","p","i","task","commonPrefix","matches","fullName","indexOf","substr","push","unshift","join","names","Array","isArray","Error","vars","firstPreemptiveOption","init","configuration","self","config","addListener","reason","promise","env","run","rootTask","dirname","autocomplete","tasks","showAllTaskDescriptions","directory","existsSync","statSync","isDirectory","chdir","ROOT_TASK_NAME","_internal","once","invoke","module","exports"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/jake/lib/program.js"],"sourcesContent":["/*\n * Jake JavaScript build tool\n * Copyright 2112 Matthew Eernisse (mde@fleegix.org)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n*/\n\nlet fs = require('fs');\nlet parseargs = require('./parseargs');\nlet utils = require('./utils');\nlet Program;\nlet usage = require('fs').readFileSync(`${__dirname}/../usage.txt`).toString();\nlet { Task } = require('./task/task');\n\nfunction die(msg) {\n  console.log(msg);\n  process.stdout.write('', function () {\n    process.stderr.write('', function () {\n      process.exit();\n    });\n  });\n}\n\nlet preempts = {\n  version: function () {\n    die(jake.version);\n  },\n  help: function () {\n    die(usage);\n  }\n};\n\nlet AVAILABLE_OPTS = [\n  { full: 'jakefile',\n    abbr: 'f',\n    expectValue: true\n  },\n  { full: 'quiet',\n    abbr: 'q',\n    expectValue: false\n  },\n  { full: 'directory',\n    abbr: 'C',\n    expectValue: true\n  },\n  { full: 'always-make',\n    abbr: 'B',\n    expectValue: false\n  },\n  { full: 'tasks',\n    abbr: 'T',\n    expectValue: false,\n    allowValue: true\n  },\n  // Alias t\n  { full: 'tasks',\n    abbr: 't',\n    expectValue: false,\n    allowValue: true\n  },\n  // Alias ls\n  { full: 'tasks',\n    abbr: 'ls',\n    expectValue: false,\n    allowValue: true\n  },\n  { full: 'help',\n    abbr: 'h',\n  },\n  { full: 'version',\n    abbr: 'V',\n  },\n  // Alias lowercase v\n  { full: 'version',\n    abbr: 'v',\n  },\n  { full: 'jakelibdir',\n    abbr: 'J',\n    expectValue: true\n  },\n  { full: 'allow-rejection',\n    abbr: 'ar',\n    expectValue: false\n  }\n];\n\nProgram = function () {\n  this.availableOpts = AVAILABLE_OPTS;\n  this.opts = {};\n  this.taskNames = null;\n  this.taskArgs = null;\n  this.envVars = null;\n  this.die = die;\n};\n\nProgram.prototype = new (function () {\n\n  this.handleErr = function (err) {\n    if (jake.listeners('error').length !== 0) {\n      jake.emit('error', err);\n      return;\n    }\n\n    if (jake.listeners('error').length) {\n      jake.emit('error', err);\n      return;\n    }\n\n    utils.logger.error('jake aborted.');\n    if (err.stack) {\n      utils.logger.error(err.stack);\n    }\n    else {\n      utils.logger.error(err.message);\n    }\n\n    process.stdout.write('', function () {\n      process.stderr.write('', function () {\n        jake.errorCode = jake.errorCode || 1;\n        process.exit(jake.errorCode);\n      });\n    });\n  };\n\n  this.parseArgs = function (args) {\n    let result = (new parseargs.Parser(this.availableOpts)).parse(args);\n    this.setOpts(result.opts);\n    this.setTaskNames(result.taskNames);\n    this.setEnvVars(result.envVars);\n  };\n\n  this.setOpts = function (options) {\n    let opts = options || {};\n    Object.assign(this.opts, opts);\n  };\n\n  this.internalOpts = function (options) {\n    this.availableOpts = this.availableOpts.concat(options);\n  };\n\n  this.autocompletions = function (cur) {\n    let p; let i; let task;\n    let commonPrefix = '';\n    let matches = [];\n\n    for (p in jake.Task) {\n      task = jake.Task[p];\n      if (\n        'fullName' in task\n          && (\n            // if empty string, program converts to true\n            cur === true ||\n            task.fullName.indexOf(cur) === 0\n          )\n      ) {\n        if (matches.length === 0) {\n          commonPrefix = task.fullName;\n        }\n        else {\n          for (i = commonPrefix.length; i > -1; --i) {\n            commonPrefix = commonPrefix.substr(0, i);\n            if (task.fullName.indexOf(commonPrefix) === 0) {\n              break;\n            }\n          }\n        }\n        matches.push(task.fullName);\n      }\n    }\n\n    if (matches.length > 1 && commonPrefix === cur) {\n      matches.unshift('yes-space');\n    }\n    else {\n      matches.unshift('no-space');\n    }\n\n    process.stdout.write(matches.join(' '));\n  };\n\n  this.setTaskNames = function (names) {\n    if (names && !Array.isArray(names)) {\n      throw new Error('Task names must be an array');\n    }\n    this.taskNames = (names && names.length) ? names : ['default'];\n  };\n\n  this.setEnvVars = function (vars) {\n    this.envVars = vars || null;\n  };\n\n  this.firstPreemptiveOption = function () {\n    let opts = this.opts;\n    for (let p in opts) {\n      if (preempts[p]) {\n        return preempts[p];\n      }\n    }\n    return false;\n  };\n\n  this.init = function (configuration) {\n    let self = this;\n    let config = configuration || {};\n    if (config.options) {\n      this.setOpts(config.options);\n    }\n    if (config.taskNames) {\n      this.setTaskNames(config.taskNames);\n    }\n    if (config.envVars) {\n      this.setEnvVars(config.envVars);\n    }\n    process.addListener('uncaughtException', function (err) {\n      self.handleErr(err);\n    });\n    if (!this.opts['allow-rejection']) {\n      process.addListener('unhandledRejection', (reason, promise) => {\n        utils.logger.error('Unhandled rejection at:', promise, 'reason:', reason);\n        self.handleErr(reason);\n      });\n    }\n    if (this.envVars) {\n      Object.assign(process.env, this.envVars);\n    }\n  };\n\n  this.run = function () {\n    let rootTask;\n    let taskNames;\n    let dirname;\n    let opts = this.opts;\n\n    if (opts.autocomplete) {\n      return this.autocompletions(opts['autocomplete-cur'], opts['autocomplete-prev']);\n    }\n    // Run with `jake -T`, just show descriptions\n    if (opts.tasks) {\n      return jake.showAllTaskDescriptions(opts.tasks);\n    }\n\n    taskNames = this.taskNames;\n    if (!(Array.isArray(taskNames) && taskNames.length)) {\n      throw new Error('Please pass jake.runTasks an array of task-names');\n    }\n\n    // Set working dir\n    dirname = opts.directory;\n    if (dirname) {\n      if (fs.existsSync(dirname) &&\n        fs.statSync(dirname).isDirectory()) {\n        process.chdir(dirname);\n      }\n      else {\n        throw new Error(dirname + ' is not a valid directory path');\n      }\n    }\n\n    rootTask = task(Task.ROOT_TASK_NAME, taskNames, function () {});\n    rootTask._internal = true;\n\n    rootTask.once('complete', function () {\n      jake.emit('complete');\n    });\n    jake.emit('start');\n    rootTask.invoke();\n  };\n\n})();\n\nmodule.exports.Program = Program;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}