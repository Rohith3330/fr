{"ast":null,"code":"/**\n * @fileoverview Enforce label tags have an associated control.\n * @author Jesse Beach\n */\n// -----------------------------------------------------------------------------\n// Requirements\n// -----------------------------------------------------------------------------\nimport { RuleTester } from 'eslint';\nimport parserOptionsMapper from '../../__util__/parserOptionsMapper';\nimport rule from '../../../src/rules/label-has-associated-control';\nimport ruleOptionsMapperFactory from '../../__util__/ruleOptionsMapperFactory'; // -----------------------------------------------------------------------------\n// Tests\n// -----------------------------------------------------------------------------\n\nconst ruleTester = new RuleTester();\nconst ruleName = 'label-has-associated-control';\nconst expectedError = {\n  message: 'A form label must be associated with a control.',\n  type: 'JSXOpeningElement'\n};\nconst componentsSettings = {\n  'jsx-a11y': {\n    components: {\n      CustomInput: 'input',\n      CustomLabel: 'label'\n    }\n  }\n};\nconst htmlForValid = [{\n  code: '<label htmlFor=\"js_id\"><span><span><span>A label</span></span></span></label>',\n  options: [{\n    depth: 4\n  }]\n}, {\n  code: '<label htmlFor=\"js_id\" aria-label=\"A label\" />'\n}, {\n  code: '<label htmlFor=\"js_id\" aria-labelledby=\"A label\" />'\n}, {\n  code: '<div><label htmlFor=\"js_id\">A label</label><input id=\"js_id\" /></div>'\n}, // Custom label component.\n{\n  code: '<CustomLabel htmlFor=\"js_id\" aria-label=\"A label\" />',\n  options: [{\n    labelComponents: ['CustomLabel']\n  }]\n}, {\n  code: '<CustomLabel htmlFor=\"js_id\" label=\"A label\" />',\n  options: [{\n    labelAttributes: ['label'],\n    labelComponents: ['CustomLabel']\n  }]\n}, {\n  code: '<CustomLabel htmlFor=\"js_id\" aria-label=\"A label\" />',\n  settings: componentsSettings\n}, // Custom label attributes.\n{\n  code: '<label htmlFor=\"js_id\" label=\"A label\" />',\n  options: [{\n    labelAttributes: ['label']\n  }]\n}, // Glob support for controlComponents option.\n{\n  code: '<CustomLabel htmlFor=\"js_id\" aria-label=\"A label\" />',\n  options: [{\n    controlComponents: ['Custom*']\n  }]\n}, {\n  code: '<CustomLabel htmlFor=\"js_id\" aria-label=\"A label\" />',\n  options: [{\n    controlComponents: ['*Label']\n  }]\n}];\nconst nestingValid = [{\n  code: '<label>A label<input /></label>'\n}, {\n  code: '<label>A label<textarea /></label>'\n}, {\n  code: '<label><img alt=\"A label\" /><input /></label>'\n}, {\n  code: '<label><img aria-label=\"A label\" /><input /></label>'\n}, {\n  code: '<label><span>A label<input /></span></label>'\n}, {\n  code: '<label><span><span>A label<input /></span></span></label>',\n  options: [{\n    depth: 3\n  }]\n}, {\n  code: '<label><span><span><span>A label<input /></span></span></span></label>',\n  options: [{\n    depth: 4\n  }]\n}, {\n  code: '<label><span><span><span><span>A label</span><input /></span></span></span></label>',\n  options: [{\n    depth: 5\n  }]\n}, {\n  code: '<label><span><span><span><span aria-label=\"A label\" /><input /></span></span></span></label>',\n  options: [{\n    depth: 5\n  }]\n}, {\n  code: '<label><span><span><span><input aria-label=\"A label\" /></span></span></span></label>',\n  options: [{\n    depth: 5\n  }]\n}, // Other controls\n{\n  code: '<label>foo<meter /></label>'\n}, {\n  code: '<label>foo<output /></label>'\n}, {\n  code: '<label>foo<progress /></label>'\n}, {\n  code: '<label>foo<textarea /></label>'\n}, // Custom controlComponents.\n{\n  code: '<label><span>A label<CustomInput /></span></label>',\n  options: [{\n    controlComponents: ['CustomInput']\n  }]\n}, {\n  code: '<label><span>A label<CustomInput /></span></label>',\n  settings: componentsSettings\n}, {\n  code: '<CustomLabel><span>A label<CustomInput /></span></CustomLabel>',\n  options: [{\n    controlComponents: ['CustomInput'],\n    labelComponents: ['CustomLabel']\n  }]\n}, {\n  code: '<CustomLabel><span label=\"A label\"><CustomInput /></span></CustomLabel>',\n  options: [{\n    controlComponents: ['CustomInput'],\n    labelComponents: ['CustomLabel'],\n    labelAttributes: ['label']\n  }]\n}, // Glob support for controlComponents option.\n{\n  code: '<label><span>A label<CustomInput /></span></label>',\n  options: [{\n    controlComponents: ['Custom*']\n  }]\n}, {\n  code: '<label><span>A label<CustomInput /></span></label>',\n  options: [{\n    controlComponents: ['*Input']\n  }]\n}];\nconst bothValid = [{\n  code: '<label htmlFor=\"js_id\"><span><span><span>A label<input /></span></span></span></label>',\n  options: [{\n    depth: 4\n  }]\n}, {\n  code: '<label htmlFor=\"js_id\" aria-label=\"A label\"><input /></label>'\n}, {\n  code: '<label htmlFor=\"js_id\" aria-labelledby=\"A label\"><input /></label>'\n}, {\n  code: '<label htmlFor=\"js_id\" aria-labelledby=\"A label\"><textarea /></label>'\n}, // Custom label component.\n{\n  code: '<CustomLabel htmlFor=\"js_id\" aria-label=\"A label\"><input /></CustomLabel>',\n  options: [{\n    labelComponents: ['CustomLabel']\n  }]\n}, {\n  code: '<CustomLabel htmlFor=\"js_id\" label=\"A label\"><input /></CustomLabel>',\n  options: [{\n    labelAttributes: ['label'],\n    labelComponents: ['CustomLabel']\n  }]\n}, {\n  code: '<CustomLabel htmlFor=\"js_id\" aria-label=\"A label\"><input /></CustomLabel>',\n  settings: componentsSettings\n}, {\n  code: '<CustomLabel htmlFor=\"js_id\" aria-label=\"A label\"><CustomInput /></CustomLabel>',\n  settings: componentsSettings\n}, // Custom label attributes.\n{\n  code: '<label htmlFor=\"js_id\" label=\"A label\"><input /></label>',\n  options: [{\n    labelAttributes: ['label']\n  }]\n}, {\n  code: '<label htmlFor=\"selectInput\">Some text<select id=\"selectInput\" /></label>'\n}];\nconst alwaysValid = [{\n  code: '<div />'\n}, {\n  code: '<CustomElement />'\n}, {\n  code: '<input type=\"hidden\" />'\n}];\nconst htmlForInvalid = [{\n  code: '<label htmlFor=\"js_id\"><span><span><span>A label</span></span></span></label>',\n  options: [{\n    depth: 4\n  }],\n  errors: [expectedError]\n}, {\n  code: '<label htmlFor=\"js_id\" aria-label=\"A label\" />',\n  errors: [expectedError]\n}, {\n  code: '<label htmlFor=\"js_id\" aria-labelledby=\"A label\" />',\n  errors: [expectedError]\n}, // Custom label component.\n{\n  code: '<CustomLabel htmlFor=\"js_id\" aria-label=\"A label\" />',\n  options: [{\n    labelComponents: ['CustomLabel']\n  }],\n  errors: [expectedError]\n}, {\n  code: '<CustomLabel htmlFor=\"js_id\" label=\"A label\" />',\n  options: [{\n    labelAttributes: ['label'],\n    labelComponents: ['CustomLabel']\n  }],\n  errors: [expectedError]\n}, {\n  code: '<CustomLabel htmlFor=\"js_id\" aria-label=\"A label\" />',\n  settings: componentsSettings,\n  errors: [expectedError]\n}, // Custom label attributes.\n{\n  code: '<label htmlFor=\"js_id\" label=\"A label\" />',\n  options: [{\n    labelAttributes: ['label']\n  }],\n  errors: [expectedError]\n}];\nconst nestingInvalid = [{\n  code: '<label>A label<input /></label>',\n  errors: [expectedError]\n}, {\n  code: '<label>A label<textarea /></label>',\n  errors: [expectedError]\n}, {\n  code: '<label><img alt=\"A label\" /><input /></label>',\n  errors: [expectedError]\n}, {\n  code: '<label><img aria-label=\"A label\" /><input /></label>',\n  errors: [expectedError]\n}, {\n  code: '<label><span>A label<input /></span></label>',\n  errors: [expectedError]\n}, {\n  code: '<label><span><span>A label<input /></span></span></label>',\n  options: [{\n    depth: 3\n  }],\n  errors: [expectedError]\n}, {\n  code: '<label><span><span><span>A label<input /></span></span></span></label>',\n  options: [{\n    depth: 4\n  }],\n  errors: [expectedError]\n}, {\n  code: '<label><span><span><span><span>A label</span><input /></span></span></span></label>',\n  options: [{\n    depth: 5\n  }],\n  errors: [expectedError]\n}, {\n  code: '<label><span><span><span><span aria-label=\"A label\" /><input /></span></span></span></label>',\n  options: [{\n    depth: 5\n  }],\n  errors: [expectedError]\n}, {\n  code: '<label><span><span><span><input aria-label=\"A label\" /></span></span></span></label>',\n  options: [{\n    depth: 5\n  }],\n  errors: [expectedError]\n}, // Custom controlComponents.\n{\n  code: '<label><span>A label<CustomInput /></span></label>',\n  options: [{\n    controlComponents: ['CustomInput']\n  }],\n  errors: [expectedError]\n}, {\n  code: '<CustomLabel><span>A label<CustomInput /></span></CustomLabel>',\n  options: [{\n    controlComponents: ['CustomInput'],\n    labelComponents: ['CustomLabel']\n  }],\n  errors: [expectedError]\n}, {\n  code: '<CustomLabel><span label=\"A label\"><CustomInput /></span></CustomLabel>',\n  options: [{\n    controlComponents: ['CustomInput'],\n    labelComponents: ['CustomLabel'],\n    labelAttributes: ['label']\n  }],\n  errors: [expectedError]\n}, {\n  code: '<label><span>A label<CustomInput /></span></label>',\n  settings: componentsSettings,\n  errors: [expectedError]\n}, {\n  code: '<CustomLabel><span>A label<CustomInput /></span></CustomLabel>',\n  settings: componentsSettings,\n  errors: [expectedError]\n}];\nconst neverValid = [{\n  code: '<label htmlFor=\"js_id\" />',\n  errors: [expectedError]\n}, {\n  code: '<label htmlFor=\"js_id\"><input /></label>',\n  errors: [expectedError]\n}, {\n  code: '<label htmlFor=\"js_id\"><textarea /></label>',\n  errors: [expectedError]\n}, {\n  code: '<label></label>',\n  errors: [expectedError]\n}, {\n  code: '<label>A label</label>',\n  errors: [expectedError]\n}, {\n  code: '<div><label /><input /></div>',\n  errors: [expectedError]\n}, {\n  code: '<div><label>A label</label><input /></div>',\n  errors: [expectedError]\n}, // Custom label component.\n{\n  code: '<CustomLabel aria-label=\"A label\" />',\n  options: [{\n    labelComponents: ['CustomLabel']\n  }],\n  errors: [expectedError]\n}, {\n  code: '<CustomLabel label=\"A label\" />',\n  options: [{\n    labelAttributes: ['label'],\n    labelComponents: ['CustomLabel']\n  }],\n  errors: [expectedError]\n}, {\n  code: '<CustomLabel aria-label=\"A label\" />',\n  settings: componentsSettings,\n  errors: [expectedError]\n}, // Custom label attributes.\n{\n  code: '<label label=\"A label\" />',\n  options: [{\n    labelAttributes: ['label']\n  }],\n  errors: [expectedError]\n}, // Custom controlComponents.\n{\n  code: '<label><span><CustomInput /></span></label>',\n  options: [{\n    controlComponents: ['CustomInput']\n  }],\n  errors: [expectedError]\n}, {\n  code: '<CustomLabel><span><CustomInput /></span></CustomLabel>',\n  options: [{\n    controlComponents: ['CustomInput'],\n    labelComponents: ['CustomLabel']\n  }],\n  errors: [expectedError]\n}, {\n  code: '<CustomLabel><span><CustomInput /></span></CustomLabel>',\n  options: [{\n    controlComponents: ['CustomInput'],\n    labelComponents: ['CustomLabel'],\n    labelAttributes: ['label']\n  }],\n  errors: [expectedError]\n}, {\n  code: '<label><span><CustomInput /></span></label>',\n  settings: componentsSettings,\n  errors: [expectedError]\n}, {\n  code: '<CustomLabel><span><CustomInput /></span></CustomLabel>',\n  settings: componentsSettings,\n  errors: [expectedError]\n}]; // htmlFor valid\n\nruleTester.run(ruleName, rule, {\n  valid: [...alwaysValid, ...htmlForValid].map(ruleOptionsMapperFactory({\n    assert: 'htmlFor'\n  })).map(parserOptionsMapper),\n  invalid: [...neverValid, ...nestingInvalid].map(ruleOptionsMapperFactory({\n    assert: 'htmlFor'\n  })).map(parserOptionsMapper)\n}); // nesting valid\n\nruleTester.run(ruleName, rule, {\n  valid: [...alwaysValid, ...nestingValid].map(ruleOptionsMapperFactory({\n    assert: 'nesting'\n  })).map(parserOptionsMapper),\n  invalid: [...neverValid, ...htmlForInvalid].map(ruleOptionsMapperFactory({\n    assert: 'nesting'\n  })).map(parserOptionsMapper)\n}); // either valid\n\nruleTester.run(ruleName, rule, {\n  valid: [...alwaysValid, ...htmlForValid, ...nestingValid].map(ruleOptionsMapperFactory({\n    assert: 'either'\n  })).map(parserOptionsMapper),\n  invalid: [...neverValid].map(parserOptionsMapper)\n}); // both valid\n\nruleTester.run(ruleName, rule, {\n  valid: [...alwaysValid, ...bothValid].map(ruleOptionsMapperFactory({\n    assert: 'both'\n  })).map(parserOptionsMapper),\n  invalid: [...neverValid].map(parserOptionsMapper)\n});","map":{"version":3,"names":["RuleTester","parserOptionsMapper","rule","ruleOptionsMapperFactory","ruleTester","ruleName","expectedError","message","type","componentsSettings","components","CustomInput","CustomLabel","htmlForValid","code","options","depth","labelComponents","labelAttributes","settings","controlComponents","nestingValid","bothValid","alwaysValid","htmlForInvalid","errors","nestingInvalid","neverValid","run","valid","map","assert","invalid"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/eslint-plugin-jsx-a11y/__tests__/src/rules/label-has-associated-control-test.js"],"sourcesContent":["/**\n * @fileoverview Enforce label tags have an associated control.\n * @author Jesse Beach\n */\n\n// -----------------------------------------------------------------------------\n// Requirements\n// -----------------------------------------------------------------------------\n\nimport { RuleTester } from 'eslint';\nimport parserOptionsMapper from '../../__util__/parserOptionsMapper';\nimport rule from '../../../src/rules/label-has-associated-control';\nimport ruleOptionsMapperFactory from '../../__util__/ruleOptionsMapperFactory';\n\n// -----------------------------------------------------------------------------\n// Tests\n// -----------------------------------------------------------------------------\n\nconst ruleTester = new RuleTester();\n\nconst ruleName = 'label-has-associated-control';\n\nconst expectedError = {\n  message: 'A form label must be associated with a control.',\n  type: 'JSXOpeningElement',\n};\n\nconst componentsSettings = {\n  'jsx-a11y': {\n    components: {\n      CustomInput: 'input',\n      CustomLabel: 'label',\n    },\n  },\n};\n\nconst htmlForValid = [\n  { code: '<label htmlFor=\"js_id\"><span><span><span>A label</span></span></span></label>', options: [{ depth: 4 }] },\n  { code: '<label htmlFor=\"js_id\" aria-label=\"A label\" />' },\n  { code: '<label htmlFor=\"js_id\" aria-labelledby=\"A label\" />' },\n  { code: '<div><label htmlFor=\"js_id\">A label</label><input id=\"js_id\" /></div>' },\n  // Custom label component.\n  { code: '<CustomLabel htmlFor=\"js_id\" aria-label=\"A label\" />', options: [{ labelComponents: ['CustomLabel'] }] },\n  { code: '<CustomLabel htmlFor=\"js_id\" label=\"A label\" />', options: [{ labelAttributes: ['label'], labelComponents: ['CustomLabel'] }] },\n  { code: '<CustomLabel htmlFor=\"js_id\" aria-label=\"A label\" />', settings: componentsSettings },\n  // Custom label attributes.\n  { code: '<label htmlFor=\"js_id\" label=\"A label\" />', options: [{ labelAttributes: ['label'] }] },\n  // Glob support for controlComponents option.\n  { code: '<CustomLabel htmlFor=\"js_id\" aria-label=\"A label\" />', options: [{ controlComponents: ['Custom*'] }] },\n  { code: '<CustomLabel htmlFor=\"js_id\" aria-label=\"A label\" />', options: [{ controlComponents: ['*Label'] }] },\n];\nconst nestingValid = [\n  { code: '<label>A label<input /></label>' },\n  { code: '<label>A label<textarea /></label>' },\n  { code: '<label><img alt=\"A label\" /><input /></label>' },\n  { code: '<label><img aria-label=\"A label\" /><input /></label>' },\n  { code: '<label><span>A label<input /></span></label>' },\n  { code: '<label><span><span>A label<input /></span></span></label>', options: [{ depth: 3 }] },\n  { code: '<label><span><span><span>A label<input /></span></span></span></label>', options: [{ depth: 4 }] },\n  { code: '<label><span><span><span><span>A label</span><input /></span></span></span></label>', options: [{ depth: 5 }] },\n  { code: '<label><span><span><span><span aria-label=\"A label\" /><input /></span></span></span></label>', options: [{ depth: 5 }] },\n  { code: '<label><span><span><span><input aria-label=\"A label\" /></span></span></span></label>', options: [{ depth: 5 }] },\n  // Other controls\n  { code: '<label>foo<meter /></label>' },\n  { code: '<label>foo<output /></label>' },\n  { code: '<label>foo<progress /></label>' },\n  { code: '<label>foo<textarea /></label>' },\n  // Custom controlComponents.\n  { code: '<label><span>A label<CustomInput /></span></label>', options: [{ controlComponents: ['CustomInput'] }] },\n  { code: '<label><span>A label<CustomInput /></span></label>', settings: componentsSettings },\n  { code: '<CustomLabel><span>A label<CustomInput /></span></CustomLabel>', options: [{ controlComponents: ['CustomInput'], labelComponents: ['CustomLabel'] }] },\n  { code: '<CustomLabel><span label=\"A label\"><CustomInput /></span></CustomLabel>', options: [{ controlComponents: ['CustomInput'], labelComponents: ['CustomLabel'], labelAttributes: ['label'] }] },\n  // Glob support for controlComponents option.\n  { code: '<label><span>A label<CustomInput /></span></label>', options: [{ controlComponents: ['Custom*'] }] },\n  { code: '<label><span>A label<CustomInput /></span></label>', options: [{ controlComponents: ['*Input'] }] },\n];\n\nconst bothValid = [\n  { code: '<label htmlFor=\"js_id\"><span><span><span>A label<input /></span></span></span></label>', options: [{ depth: 4 }] },\n  { code: '<label htmlFor=\"js_id\" aria-label=\"A label\"><input /></label>' },\n  { code: '<label htmlFor=\"js_id\" aria-labelledby=\"A label\"><input /></label>' },\n  { code: '<label htmlFor=\"js_id\" aria-labelledby=\"A label\"><textarea /></label>' },\n  // Custom label component.\n  { code: '<CustomLabel htmlFor=\"js_id\" aria-label=\"A label\"><input /></CustomLabel>', options: [{ labelComponents: ['CustomLabel'] }] },\n  { code: '<CustomLabel htmlFor=\"js_id\" label=\"A label\"><input /></CustomLabel>', options: [{ labelAttributes: ['label'], labelComponents: ['CustomLabel'] }] },\n  { code: '<CustomLabel htmlFor=\"js_id\" aria-label=\"A label\"><input /></CustomLabel>', settings: componentsSettings },\n  { code: '<CustomLabel htmlFor=\"js_id\" aria-label=\"A label\"><CustomInput /></CustomLabel>', settings: componentsSettings },\n  // Custom label attributes.\n  { code: '<label htmlFor=\"js_id\" label=\"A label\"><input /></label>', options: [{ labelAttributes: ['label'] }] },\n  { code: '<label htmlFor=\"selectInput\">Some text<select id=\"selectInput\" /></label>' },\n];\n\nconst alwaysValid = [\n  { code: '<div />' },\n  { code: '<CustomElement />' },\n  { code: '<input type=\"hidden\" />' },\n];\n\nconst htmlForInvalid = [\n  { code: '<label htmlFor=\"js_id\"><span><span><span>A label</span></span></span></label>', options: [{ depth: 4 }], errors: [expectedError] },\n  { code: '<label htmlFor=\"js_id\" aria-label=\"A label\" />', errors: [expectedError] },\n  { code: '<label htmlFor=\"js_id\" aria-labelledby=\"A label\" />', errors: [expectedError] },\n  // Custom label component.\n  { code: '<CustomLabel htmlFor=\"js_id\" aria-label=\"A label\" />', options: [{ labelComponents: ['CustomLabel'] }], errors: [expectedError] },\n  { code: '<CustomLabel htmlFor=\"js_id\" label=\"A label\" />', options: [{ labelAttributes: ['label'], labelComponents: ['CustomLabel'] }], errors: [expectedError] },\n  { code: '<CustomLabel htmlFor=\"js_id\" aria-label=\"A label\" />', settings: componentsSettings, errors: [expectedError] },\n  // Custom label attributes.\n  { code: '<label htmlFor=\"js_id\" label=\"A label\" />', options: [{ labelAttributes: ['label'] }], errors: [expectedError] },\n];\nconst nestingInvalid = [\n  { code: '<label>A label<input /></label>', errors: [expectedError] },\n  { code: '<label>A label<textarea /></label>', errors: [expectedError] },\n  { code: '<label><img alt=\"A label\" /><input /></label>', errors: [expectedError] },\n  { code: '<label><img aria-label=\"A label\" /><input /></label>', errors: [expectedError] },\n  { code: '<label><span>A label<input /></span></label>', errors: [expectedError] },\n  { code: '<label><span><span>A label<input /></span></span></label>', options: [{ depth: 3 }], errors: [expectedError] },\n  { code: '<label><span><span><span>A label<input /></span></span></span></label>', options: [{ depth: 4 }], errors: [expectedError] },\n  { code: '<label><span><span><span><span>A label</span><input /></span></span></span></label>', options: [{ depth: 5 }], errors: [expectedError] },\n  { code: '<label><span><span><span><span aria-label=\"A label\" /><input /></span></span></span></label>', options: [{ depth: 5 }], errors: [expectedError] },\n  { code: '<label><span><span><span><input aria-label=\"A label\" /></span></span></span></label>', options: [{ depth: 5 }], errors: [expectedError] },\n  // Custom controlComponents.\n  { code: '<label><span>A label<CustomInput /></span></label>', options: [{ controlComponents: ['CustomInput'] }], errors: [expectedError] },\n  { code: '<CustomLabel><span>A label<CustomInput /></span></CustomLabel>', options: [{ controlComponents: ['CustomInput'], labelComponents: ['CustomLabel'] }], errors: [expectedError] },\n  { code: '<CustomLabel><span label=\"A label\"><CustomInput /></span></CustomLabel>', options: [{ controlComponents: ['CustomInput'], labelComponents: ['CustomLabel'], labelAttributes: ['label'] }], errors: [expectedError] },\n  { code: '<label><span>A label<CustomInput /></span></label>', settings: componentsSettings, errors: [expectedError] },\n  { code: '<CustomLabel><span>A label<CustomInput /></span></CustomLabel>', settings: componentsSettings, errors: [expectedError] },\n];\n\nconst neverValid = [\n  { code: '<label htmlFor=\"js_id\" />', errors: [expectedError] },\n  { code: '<label htmlFor=\"js_id\"><input /></label>', errors: [expectedError] },\n  { code: '<label htmlFor=\"js_id\"><textarea /></label>', errors: [expectedError] },\n  { code: '<label></label>', errors: [expectedError] },\n  { code: '<label>A label</label>', errors: [expectedError] },\n  { code: '<div><label /><input /></div>', errors: [expectedError] },\n  { code: '<div><label>A label</label><input /></div>', errors: [expectedError] },\n  // Custom label component.\n  { code: '<CustomLabel aria-label=\"A label\" />', options: [{ labelComponents: ['CustomLabel'] }], errors: [expectedError] },\n  { code: '<CustomLabel label=\"A label\" />', options: [{ labelAttributes: ['label'], labelComponents: ['CustomLabel'] }], errors: [expectedError] },\n  { code: '<CustomLabel aria-label=\"A label\" />', settings: componentsSettings, errors: [expectedError] },\n  // Custom label attributes.\n  { code: '<label label=\"A label\" />', options: [{ labelAttributes: ['label'] }], errors: [expectedError] },\n  // Custom controlComponents.\n  { code: '<label><span><CustomInput /></span></label>', options: [{ controlComponents: ['CustomInput'] }], errors: [expectedError] },\n  { code: '<CustomLabel><span><CustomInput /></span></CustomLabel>', options: [{ controlComponents: ['CustomInput'], labelComponents: ['CustomLabel'] }], errors: [expectedError] },\n  { code: '<CustomLabel><span><CustomInput /></span></CustomLabel>', options: [{ controlComponents: ['CustomInput'], labelComponents: ['CustomLabel'], labelAttributes: ['label'] }], errors: [expectedError] },\n  { code: '<label><span><CustomInput /></span></label>', settings: componentsSettings, errors: [expectedError] },\n  { code: '<CustomLabel><span><CustomInput /></span></CustomLabel>', settings: componentsSettings, errors: [expectedError] },\n];\n// htmlFor valid\nruleTester.run(ruleName, rule, {\n  valid: [\n    ...alwaysValid,\n    ...htmlForValid,\n  ]\n    .map(ruleOptionsMapperFactory({\n      assert: 'htmlFor',\n    }))\n    .map(parserOptionsMapper),\n  invalid: [\n    ...neverValid,\n    ...nestingInvalid,\n  ]\n    .map(ruleOptionsMapperFactory({\n      assert: 'htmlFor',\n    }))\n    .map(parserOptionsMapper),\n});\n\n// nesting valid\nruleTester.run(ruleName, rule, {\n  valid: [\n    ...alwaysValid,\n    ...nestingValid,\n  ]\n    .map(ruleOptionsMapperFactory({\n      assert: 'nesting',\n    }))\n    .map(parserOptionsMapper),\n  invalid: [\n    ...neverValid,\n    ...htmlForInvalid,\n  ]\n    .map(ruleOptionsMapperFactory({\n      assert: 'nesting',\n    }))\n    .map(parserOptionsMapper),\n});\n\n// either valid\nruleTester.run(ruleName, rule, {\n  valid: [\n    ...alwaysValid,\n    ...htmlForValid,\n    ...nestingValid,\n  ]\n    .map(ruleOptionsMapperFactory({\n      assert: 'either',\n    }))\n    .map(parserOptionsMapper),\n  invalid: [\n    ...neverValid,\n  ].map(parserOptionsMapper),\n});\n\n// both valid\nruleTester.run(ruleName, rule, {\n  valid: [\n    ...alwaysValid,\n    ...bothValid,\n  ]\n    .map(ruleOptionsMapperFactory({\n      assert: 'both',\n    }))\n    .map(parserOptionsMapper),\n  invalid: [\n    ...neverValid,\n  ].map(parserOptionsMapper),\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}