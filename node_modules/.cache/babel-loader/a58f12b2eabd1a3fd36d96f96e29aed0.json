{"ast":null,"code":"// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\nvar common = require('./common');\n\nvar assert = require('assert');\n\nvar events = require('../');\n\nvar e = new events.EventEmitter();\nvar hasDefineProperty = !!Object.defineProperty;\n\ntry {\n  Object.defineProperty({}, 'x', {\n    value: 0\n  });\n} catch (err) {\n  hasDefineProperty = false;\n}\n\ne.on('maxListeners', common.mustCall()); // Should not corrupt the 'maxListeners' queue.\n\ne.setMaxListeners(42);\nvar throwsObjs = [NaN, -1, 'and even this'];\nvar maxError = /^RangeError: The value of \"n\" is out of range\\. It must be a non-negative number\\./;\nvar defError = /^RangeError: The value of \"defaultMaxListeners\" is out of range\\. It must be a non-negative number\\./;\n\nfor (var i = 0; i < throwsObjs.length; i++) {\n  var obj = throwsObjs[i];\n  assert.throws(function () {\n    e.setMaxListeners(obj);\n  }, maxError);\n\n  if (hasDefineProperty) {\n    assert.throws(function () {\n      events.defaultMaxListeners = obj;\n    }, defError);\n  }\n}\n\ne.emit('maxListeners');","map":{"version":3,"names":["common","require","assert","events","e","EventEmitter","hasDefineProperty","Object","defineProperty","value","err","on","mustCall","setMaxListeners","throwsObjs","NaN","maxError","defError","i","length","obj","throws","defaultMaxListeners","emit"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/events/tests/max-listeners.js"],"sourcesContent":["// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar common = require('./common');\nvar assert = require('assert');\nvar events = require('../');\nvar e = new events.EventEmitter();\n\nvar hasDefineProperty = !!Object.defineProperty;\ntry { Object.defineProperty({}, 'x', { value: 0 }); } catch (err) { hasDefineProperty = false }\n\ne.on('maxListeners', common.mustCall());\n\n// Should not corrupt the 'maxListeners' queue.\ne.setMaxListeners(42);\n\nvar throwsObjs = [NaN, -1, 'and even this'];\nvar maxError = /^RangeError: The value of \"n\" is out of range\\. It must be a non-negative number\\./;\nvar defError = /^RangeError: The value of \"defaultMaxListeners\" is out of range\\. It must be a non-negative number\\./;\n\nfor (var i = 0; i < throwsObjs.length; i++) {\n  var obj = throwsObjs[i];\n  assert.throws(function() { e.setMaxListeners(obj); }, maxError);\n  if (hasDefineProperty) {\n    assert.throws(function() { events.defaultMaxListeners = obj; }, defError);\n  }\n}\n\ne.emit('maxListeners');\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAIA,MAAM,GAAGC,OAAO,CAAC,UAAD,CAApB;;AACA,IAAIC,MAAM,GAAGD,OAAO,CAAC,QAAD,CAApB;;AACA,IAAIE,MAAM,GAAGF,OAAO,CAAC,KAAD,CAApB;;AACA,IAAIG,CAAC,GAAG,IAAID,MAAM,CAACE,YAAX,EAAR;AAEA,IAAIC,iBAAiB,GAAG,CAAC,CAACC,MAAM,CAACC,cAAjC;;AACA,IAAI;EAAED,MAAM,CAACC,cAAP,CAAsB,EAAtB,EAA0B,GAA1B,EAA+B;IAAEC,KAAK,EAAE;EAAT,CAA/B;AAA+C,CAArD,CAAsD,OAAOC,GAAP,EAAY;EAAEJ,iBAAiB,GAAG,KAApB;AAA2B;;AAE/FF,CAAC,CAACO,EAAF,CAAK,cAAL,EAAqBX,MAAM,CAACY,QAAP,EAArB,E,CAEA;;AACAR,CAAC,CAACS,eAAF,CAAkB,EAAlB;AAEA,IAAIC,UAAU,GAAG,CAACC,GAAD,EAAM,CAAC,CAAP,EAAU,eAAV,CAAjB;AACA,IAAIC,QAAQ,GAAG,oFAAf;AACA,IAAIC,QAAQ,GAAG,sGAAf;;AAEA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,UAAU,CAACK,MAA/B,EAAuCD,CAAC,EAAxC,EAA4C;EAC1C,IAAIE,GAAG,GAAGN,UAAU,CAACI,CAAD,CAApB;EACAhB,MAAM,CAACmB,MAAP,CAAc,YAAW;IAAEjB,CAAC,CAACS,eAAF,CAAkBO,GAAlB;EAAyB,CAApD,EAAsDJ,QAAtD;;EACA,IAAIV,iBAAJ,EAAuB;IACrBJ,MAAM,CAACmB,MAAP,CAAc,YAAW;MAAElB,MAAM,CAACmB,mBAAP,GAA6BF,GAA7B;IAAmC,CAA9D,EAAgEH,QAAhE;EACD;AACF;;AAEDb,CAAC,CAACmB,IAAF,CAAO,cAAP"},"metadata":{},"sourceType":"script"}