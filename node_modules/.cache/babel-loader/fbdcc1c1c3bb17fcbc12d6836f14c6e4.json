{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _jsxAstUtils = require(\"jsx-ast-utils\");\n\nvar _schemas = require(\"../util/schemas\");\n\nvar _getElementType = _interopRequireDefault(require(\"../util/getElementType\"));\n\nvar _mayContainChildComponent = _interopRequireDefault(require(\"../util/mayContainChildComponent\"));\n\nvar _mayHaveAccessibleLabel = _interopRequireDefault(require(\"../util/mayHaveAccessibleLabel\"));\n/**\n * @fileoverview Enforce label tags have an associated control.\n * @author Jesse Beach\n *\n * \n */\n// ----------------------------------------------------------------------------\n// Rule Definition\n// ----------------------------------------------------------------------------\n\n\nvar errorMessage = 'A form label must be associated with a control.';\nvar schema = (0, _schemas.generateObjSchema)({\n  labelComponents: _schemas.arraySchema,\n  labelAttributes: _schemas.arraySchema,\n  controlComponents: _schemas.arraySchema,\n  assert: {\n    description: 'Assert that the label has htmlFor, a nested label, both or either',\n    type: 'string',\n    \"enum\": ['htmlFor', 'nesting', 'both', 'either']\n  },\n  depth: {\n    description: 'JSX tree depth limit to check for accessible label',\n    type: 'integer',\n    minimum: 0\n  }\n});\n\nvar validateId = function validateId(node) {\n  var htmlForAttr = (0, _jsxAstUtils.getProp)(node.attributes, 'htmlFor');\n  var htmlForValue = (0, _jsxAstUtils.getPropValue)(htmlForAttr);\n  return htmlForAttr !== false && !!htmlForValue;\n};\n\nvar _default = {\n  meta: {\n    docs: {\n      description: 'Enforce that a `label` tag has a text label and an associated control.',\n      url: 'https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/main/docs/rules/label-has-associated-control.md'\n    },\n    schema: [schema]\n  },\n  create: function create(context) {\n    var options = context.options[0] || {};\n    var labelComponents = options.labelComponents || [];\n    var assertType = options.assert || 'either';\n    var componentNames = ['label'].concat(labelComponents);\n    var elementType = (0, _getElementType[\"default\"])(context);\n\n    var rule = function rule(node) {\n      if (componentNames.indexOf(elementType(node.openingElement)) === -1) {\n        return;\n      }\n\n      var controlComponents = ['input', 'meter', 'output', 'progress', 'select', 'textarea'].concat(options.controlComponents || []); // Prevent crazy recursion.\n\n      var recursionDepth = Math.min(options.depth === undefined ? 2 : options.depth, 25);\n      var hasLabelId = validateId(node.openingElement); // Check for multiple control components.\n\n      var hasNestedControl = controlComponents.some(function (name) {\n        return (0, _mayContainChildComponent[\"default\"])(node, name, recursionDepth, elementType);\n      });\n      var hasAccessibleLabel = (0, _mayHaveAccessibleLabel[\"default\"])(node, recursionDepth, options.labelAttributes);\n\n      if (hasAccessibleLabel) {\n        switch (assertType) {\n          case 'htmlFor':\n            if (hasLabelId) {\n              return;\n            }\n\n            break;\n\n          case 'nesting':\n            if (hasNestedControl) {\n              return;\n            }\n\n            break;\n\n          case 'both':\n            if (hasLabelId && hasNestedControl) {\n              return;\n            }\n\n            break;\n\n          case 'either':\n            if (hasLabelId || hasNestedControl) {\n              return;\n            }\n\n            break;\n\n          default:\n            break;\n        }\n      } // htmlFor case\n\n\n      context.report({\n        node: node.openingElement,\n        message: errorMessage\n      });\n    }; // Create visitor selectors.\n\n\n    return {\n      JSXElement: rule\n    };\n  }\n};\nexports[\"default\"] = _default;\nmodule.exports = exports.default;","map":{"version":3,"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","_jsxAstUtils","_schemas","_getElementType","_mayContainChildComponent","_mayHaveAccessibleLabel","errorMessage","schema","generateObjSchema","labelComponents","arraySchema","labelAttributes","controlComponents","assert","description","type","depth","minimum","validateId","node","htmlForAttr","getProp","attributes","htmlForValue","getPropValue","_default","meta","docs","url","create","context","options","assertType","componentNames","concat","elementType","rule","indexOf","openingElement","recursionDepth","Math","min","undefined","hasLabelId","hasNestedControl","some","name","hasAccessibleLabel","report","message","JSXElement","module","default"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/eslint-plugin-jsx-a11y/lib/rules/label-has-associated-control.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _jsxAstUtils = require(\"jsx-ast-utils\");\n\nvar _schemas = require(\"../util/schemas\");\n\nvar _getElementType = _interopRequireDefault(require(\"../util/getElementType\"));\n\nvar _mayContainChildComponent = _interopRequireDefault(require(\"../util/mayContainChildComponent\"));\n\nvar _mayHaveAccessibleLabel = _interopRequireDefault(require(\"../util/mayHaveAccessibleLabel\"));\n\n/**\n * @fileoverview Enforce label tags have an associated control.\n * @author Jesse Beach\n *\n * \n */\n// ----------------------------------------------------------------------------\n// Rule Definition\n// ----------------------------------------------------------------------------\nvar errorMessage = 'A form label must be associated with a control.';\nvar schema = (0, _schemas.generateObjSchema)({\n  labelComponents: _schemas.arraySchema,\n  labelAttributes: _schemas.arraySchema,\n  controlComponents: _schemas.arraySchema,\n  assert: {\n    description: 'Assert that the label has htmlFor, a nested label, both or either',\n    type: 'string',\n    \"enum\": ['htmlFor', 'nesting', 'both', 'either']\n  },\n  depth: {\n    description: 'JSX tree depth limit to check for accessible label',\n    type: 'integer',\n    minimum: 0\n  }\n});\n\nvar validateId = function validateId(node) {\n  var htmlForAttr = (0, _jsxAstUtils.getProp)(node.attributes, 'htmlFor');\n  var htmlForValue = (0, _jsxAstUtils.getPropValue)(htmlForAttr);\n  return htmlForAttr !== false && !!htmlForValue;\n};\n\nvar _default = {\n  meta: {\n    docs: {\n      description: 'Enforce that a `label` tag has a text label and an associated control.',\n      url: 'https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/main/docs/rules/label-has-associated-control.md'\n    },\n    schema: [schema]\n  },\n  create: function create(context) {\n    var options = context.options[0] || {};\n    var labelComponents = options.labelComponents || [];\n    var assertType = options.assert || 'either';\n    var componentNames = ['label'].concat(labelComponents);\n    var elementType = (0, _getElementType[\"default\"])(context);\n\n    var rule = function rule(node) {\n      if (componentNames.indexOf(elementType(node.openingElement)) === -1) {\n        return;\n      }\n\n      var controlComponents = ['input', 'meter', 'output', 'progress', 'select', 'textarea'].concat(options.controlComponents || []); // Prevent crazy recursion.\n\n      var recursionDepth = Math.min(options.depth === undefined ? 2 : options.depth, 25);\n      var hasLabelId = validateId(node.openingElement); // Check for multiple control components.\n\n      var hasNestedControl = controlComponents.some(function (name) {\n        return (0, _mayContainChildComponent[\"default\"])(node, name, recursionDepth, elementType);\n      });\n      var hasAccessibleLabel = (0, _mayHaveAccessibleLabel[\"default\"])(node, recursionDepth, options.labelAttributes);\n\n      if (hasAccessibleLabel) {\n        switch (assertType) {\n          case 'htmlFor':\n            if (hasLabelId) {\n              return;\n            }\n\n            break;\n\n          case 'nesting':\n            if (hasNestedControl) {\n              return;\n            }\n\n            break;\n\n          case 'both':\n            if (hasLabelId && hasNestedControl) {\n              return;\n            }\n\n            break;\n\n          case 'either':\n            if (hasLabelId || hasNestedControl) {\n              return;\n            }\n\n            break;\n\n          default:\n            break;\n        }\n      } // htmlFor case\n\n\n      context.report({\n        node: node.openingElement,\n        message: errorMessage\n      });\n    }; // Create visitor selectors.\n\n\n    return {\n      JSXElement: rule\n    };\n  }\n};\nexports[\"default\"] = _default;\nmodule.exports = exports.default;"],"mappings":"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"},"metadata":{},"sourceType":"script"}