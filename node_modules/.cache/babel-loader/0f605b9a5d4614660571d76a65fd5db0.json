{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _utils = require(\"./utils\");\n\nconst newDescribeContext = () => ({\n  describeTitles: [],\n  testTitles: []\n});\n\nvar _default = (0, _utils.createRule)({\n  name: __filename,\n  meta: {\n    docs: {\n      category: 'Best Practices',\n      description: 'Disallow identical titles',\n      recommended: 'error'\n    },\n    messages: {\n      multipleTestTitle: 'Test title is used multiple times in the same describe block.',\n      multipleDescribeTitle: 'Describe block title is used multiple times in the same describe block.'\n    },\n    schema: [],\n    type: 'suggestion'\n  },\n  defaultOptions: [],\n\n  create(context) {\n    const contexts = [newDescribeContext()];\n    return {\n      CallExpression(node) {\n        var _getNodeName;\n\n        const currentLayer = contexts[contexts.length - 1];\n\n        if ((0, _utils.isDescribeCall)(node)) {\n          contexts.push(newDescribeContext());\n        }\n\n        if ((_getNodeName = (0, _utils.getNodeName)(node.callee)) !== null && _getNodeName !== void 0 && _getNodeName.endsWith('.each')) {\n          return;\n        }\n\n        const [argument] = node.arguments;\n\n        if (!argument || !(0, _utils.isStringNode)(argument)) {\n          return;\n        }\n\n        const title = (0, _utils.getStringValue)(argument);\n\n        if ((0, _utils.isTestCaseCall)(node)) {\n          if (currentLayer.testTitles.includes(title)) {\n            context.report({\n              messageId: 'multipleTestTitle',\n              node: argument\n            });\n          }\n\n          currentLayer.testTitles.push(title);\n        }\n\n        if (!(0, _utils.isDescribeCall)(node)) {\n          return;\n        }\n\n        if (currentLayer.describeTitles.includes(title)) {\n          context.report({\n            messageId: 'multipleDescribeTitle',\n            node: argument\n          });\n        }\n\n        currentLayer.describeTitles.push(title);\n      },\n\n      'CallExpression:exit'(node) {\n        if ((0, _utils.isDescribeCall)(node)) {\n          contexts.pop();\n        }\n      }\n\n    };\n  }\n\n});\n\nexports.default = _default;","map":{"version":3,"names":["Object","defineProperty","exports","value","default","_utils","require","newDescribeContext","describeTitles","testTitles","_default","createRule","name","__filename","meta","docs","category","description","recommended","messages","multipleTestTitle","multipleDescribeTitle","schema","type","defaultOptions","create","context","contexts","CallExpression","node","_getNodeName","currentLayer","length","isDescribeCall","push","getNodeName","callee","endsWith","argument","arguments","isStringNode","title","getStringValue","isTestCaseCall","includes","report","messageId","pop"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/eslint-plugin-jest/lib/rules/no-identical-title.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _utils = require(\"./utils\");\n\nconst newDescribeContext = () => ({\n  describeTitles: [],\n  testTitles: []\n});\n\nvar _default = (0, _utils.createRule)({\n  name: __filename,\n  meta: {\n    docs: {\n      category: 'Best Practices',\n      description: 'Disallow identical titles',\n      recommended: 'error'\n    },\n    messages: {\n      multipleTestTitle: 'Test title is used multiple times in the same describe block.',\n      multipleDescribeTitle: 'Describe block title is used multiple times in the same describe block.'\n    },\n    schema: [],\n    type: 'suggestion'\n  },\n  defaultOptions: [],\n\n  create(context) {\n    const contexts = [newDescribeContext()];\n    return {\n      CallExpression(node) {\n        var _getNodeName;\n\n        const currentLayer = contexts[contexts.length - 1];\n\n        if ((0, _utils.isDescribeCall)(node)) {\n          contexts.push(newDescribeContext());\n        }\n\n        if ((_getNodeName = (0, _utils.getNodeName)(node.callee)) !== null && _getNodeName !== void 0 && _getNodeName.endsWith('.each')) {\n          return;\n        }\n\n        const [argument] = node.arguments;\n\n        if (!argument || !(0, _utils.isStringNode)(argument)) {\n          return;\n        }\n\n        const title = (0, _utils.getStringValue)(argument);\n\n        if ((0, _utils.isTestCaseCall)(node)) {\n          if (currentLayer.testTitles.includes(title)) {\n            context.report({\n              messageId: 'multipleTestTitle',\n              node: argument\n            });\n          }\n\n          currentLayer.testTitles.push(title);\n        }\n\n        if (!(0, _utils.isDescribeCall)(node)) {\n          return;\n        }\n\n        if (currentLayer.describeTitles.includes(title)) {\n          context.report({\n            messageId: 'multipleDescribeTitle',\n            node: argument\n          });\n        }\n\n        currentLayer.describeTitles.push(title);\n      },\n\n      'CallExpression:exit'(node) {\n        if ((0, _utils.isDescribeCall)(node)) {\n          contexts.pop();\n        }\n      }\n\n    };\n  }\n\n});\n\nexports.default = _default;"],"mappings":"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"},"metadata":{},"sourceType":"script"}