{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"default\", {\n  enumerable: true,\n  get: () => processTailwindFeatures\n});\n\nconst _normalizeTailwindDirectives = /*#__PURE__*/_interopRequireDefault(require(\"./lib/normalizeTailwindDirectives\"));\n\nconst _expandTailwindAtRules = /*#__PURE__*/_interopRequireDefault(require(\"./lib/expandTailwindAtRules\"));\n\nconst _expandApplyAtRules = /*#__PURE__*/_interopRequireDefault(require(\"./lib/expandApplyAtRules\"));\n\nconst _evaluateTailwindFunctions = /*#__PURE__*/_interopRequireDefault(require(\"./lib/evaluateTailwindFunctions\"));\n\nconst _substituteScreenAtRules = /*#__PURE__*/_interopRequireDefault(require(\"./lib/substituteScreenAtRules\"));\n\nconst _resolveDefaultsAtRules = /*#__PURE__*/_interopRequireDefault(require(\"./lib/resolveDefaultsAtRules\"));\n\nconst _collapseAdjacentRules = /*#__PURE__*/_interopRequireDefault(require(\"./lib/collapseAdjacentRules\"));\n\nconst _collapseDuplicateDeclarations = /*#__PURE__*/_interopRequireDefault(require(\"./lib/collapseDuplicateDeclarations\"));\n\nconst _partitionApplyAtRules = /*#__PURE__*/_interopRequireDefault(require(\"./lib/partitionApplyAtRules\"));\n\nconst _detectNesting = /*#__PURE__*/_interopRequireDefault(require(\"./lib/detectNesting\"));\n\nconst _setupContextUtils = require(\"./lib/setupContextUtils\");\n\nconst _featureFlags = require(\"./featureFlags\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction processTailwindFeatures(setupContext) {\n  return function (root, result) {\n    let {\n      tailwindDirectives,\n      applyDirectives\n    } = (0, _normalizeTailwindDirectives.default)(root);\n    (0, _detectNesting.default)()(root, result); // Partition apply rules that are found in the css\n    // itself.\n\n    (0, _partitionApplyAtRules.default)()(root, result);\n    let context = setupContext({\n      tailwindDirectives,\n      applyDirectives,\n\n      registerDependency(dependency) {\n        result.messages.push({\n          plugin: \"tailwindcss\",\n          parent: result.opts.from,\n          ...dependency\n        });\n      },\n\n      createContext(tailwindConfig, changedContent) {\n        return (0, _setupContextUtils.createContext)(tailwindConfig, changedContent, root);\n      }\n\n    })(root, result);\n\n    if (context.tailwindConfig.separator === \"-\") {\n      throw new Error(\"The '-' character cannot be used as a custom separator in JIT mode due to parsing ambiguity. Please use another character like '_' instead.\");\n    }\n\n    (0, _featureFlags.issueFlagNotices)(context.tailwindConfig);\n    (0, _expandTailwindAtRules.default)(context)(root, result); // Partition apply rules that are generated by\n    // addComponents, addUtilities and so on.\n\n    (0, _partitionApplyAtRules.default)()(root, result);\n    (0, _expandApplyAtRules.default)(context)(root, result);\n    (0, _evaluateTailwindFunctions.default)(context)(root, result);\n    (0, _substituteScreenAtRules.default)(context)(root, result);\n    (0, _resolveDefaultsAtRules.default)(context)(root, result);\n    (0, _collapseAdjacentRules.default)(context)(root, result);\n    (0, _collapseDuplicateDeclarations.default)(context)(root, result);\n  };\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","enumerable","get","processTailwindFeatures","_normalizeTailwindDirectives","_interopRequireDefault","require","_expandTailwindAtRules","_expandApplyAtRules","_evaluateTailwindFunctions","_substituteScreenAtRules","_resolveDefaultsAtRules","_collapseAdjacentRules","_collapseDuplicateDeclarations","_partitionApplyAtRules","_detectNesting","_setupContextUtils","_featureFlags","obj","__esModule","default","setupContext","root","result","tailwindDirectives","applyDirectives","context","registerDependency","dependency","messages","push","plugin","parent","opts","from","createContext","tailwindConfig","changedContent","separator","Error","issueFlagNotices"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/tailwindcss/lib/processTailwindFeatures.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: ()=>processTailwindFeatures\n});\nconst _normalizeTailwindDirectives = /*#__PURE__*/ _interopRequireDefault(require(\"./lib/normalizeTailwindDirectives\"));\nconst _expandTailwindAtRules = /*#__PURE__*/ _interopRequireDefault(require(\"./lib/expandTailwindAtRules\"));\nconst _expandApplyAtRules = /*#__PURE__*/ _interopRequireDefault(require(\"./lib/expandApplyAtRules\"));\nconst _evaluateTailwindFunctions = /*#__PURE__*/ _interopRequireDefault(require(\"./lib/evaluateTailwindFunctions\"));\nconst _substituteScreenAtRules = /*#__PURE__*/ _interopRequireDefault(require(\"./lib/substituteScreenAtRules\"));\nconst _resolveDefaultsAtRules = /*#__PURE__*/ _interopRequireDefault(require(\"./lib/resolveDefaultsAtRules\"));\nconst _collapseAdjacentRules = /*#__PURE__*/ _interopRequireDefault(require(\"./lib/collapseAdjacentRules\"));\nconst _collapseDuplicateDeclarations = /*#__PURE__*/ _interopRequireDefault(require(\"./lib/collapseDuplicateDeclarations\"));\nconst _partitionApplyAtRules = /*#__PURE__*/ _interopRequireDefault(require(\"./lib/partitionApplyAtRules\"));\nconst _detectNesting = /*#__PURE__*/ _interopRequireDefault(require(\"./lib/detectNesting\"));\nconst _setupContextUtils = require(\"./lib/setupContextUtils\");\nconst _featureFlags = require(\"./featureFlags\");\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nfunction processTailwindFeatures(setupContext) {\n    return function(root, result) {\n        let { tailwindDirectives , applyDirectives  } = (0, _normalizeTailwindDirectives.default)(root);\n        (0, _detectNesting.default)()(root, result);\n        // Partition apply rules that are found in the css\n        // itself.\n        (0, _partitionApplyAtRules.default)()(root, result);\n        let context = setupContext({\n            tailwindDirectives,\n            applyDirectives,\n            registerDependency (dependency) {\n                result.messages.push({\n                    plugin: \"tailwindcss\",\n                    parent: result.opts.from,\n                    ...dependency\n                });\n            },\n            createContext (tailwindConfig, changedContent) {\n                return (0, _setupContextUtils.createContext)(tailwindConfig, changedContent, root);\n            }\n        })(root, result);\n        if (context.tailwindConfig.separator === \"-\") {\n            throw new Error(\"The '-' character cannot be used as a custom separator in JIT mode due to parsing ambiguity. Please use another character like '_' instead.\");\n        }\n        (0, _featureFlags.issueFlagNotices)(context.tailwindConfig);\n        (0, _expandTailwindAtRules.default)(context)(root, result);\n        // Partition apply rules that are generated by\n        // addComponents, addUtilities and so on.\n        (0, _partitionApplyAtRules.default)()(root, result);\n        (0, _expandApplyAtRules.default)(context)(root, result);\n        (0, _evaluateTailwindFunctions.default)(context)(root, result);\n        (0, _substituteScreenAtRules.default)(context)(root, result);\n        (0, _resolveDefaultsAtRules.default)(context)(root, result);\n        (0, _collapseAdjacentRules.default)(context)(root, result);\n        (0, _collapseDuplicateDeclarations.default)(context)(root, result);\n    };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}