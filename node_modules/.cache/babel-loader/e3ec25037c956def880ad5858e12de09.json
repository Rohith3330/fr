{"ast":null,"code":"const matchValueName = /[$]?[\\w-]+/g;\n\nconst replaceValueSymbols = (value, replacements) => {\n  let matches;\n\n  while (matches = matchValueName.exec(value)) {\n    const replacement = replacements[matches[0]];\n\n    if (replacement) {\n      value = value.slice(0, matches.index) + replacement + value.slice(matchValueName.lastIndex);\n      matchValueName.lastIndex -= matches[0].length - replacement.length;\n    }\n  }\n\n  return value;\n};\n\nmodule.exports = replaceValueSymbols;","map":{"version":3,"names":["matchValueName","replaceValueSymbols","value","replacements","matches","exec","replacement","slice","index","lastIndex","length","module","exports"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/icss-utils/src/replaceValueSymbols.js"],"sourcesContent":["const matchValueName = /[$]?[\\w-]+/g;\n\nconst replaceValueSymbols = (value, replacements) => {\n  let matches;\n\n  while ((matches = matchValueName.exec(value))) {\n    const replacement = replacements[matches[0]];\n\n    if (replacement) {\n      value =\n        value.slice(0, matches.index) +\n        replacement +\n        value.slice(matchValueName.lastIndex);\n\n      matchValueName.lastIndex -= matches[0].length - replacement.length;\n    }\n  }\n\n  return value;\n};\n\nmodule.exports = replaceValueSymbols;\n"],"mappings":"AAAA,MAAMA,cAAc,GAAG,aAAvB;;AAEA,MAAMC,mBAAmB,GAAG,CAACC,KAAD,EAAQC,YAAR,KAAyB;EACnD,IAAIC,OAAJ;;EAEA,OAAQA,OAAO,GAAGJ,cAAc,CAACK,IAAf,CAAoBH,KAApB,CAAlB,EAA+C;IAC7C,MAAMI,WAAW,GAAGH,YAAY,CAACC,OAAO,CAAC,CAAD,CAAR,CAAhC;;IAEA,IAAIE,WAAJ,EAAiB;MACfJ,KAAK,GACHA,KAAK,CAACK,KAAN,CAAY,CAAZ,EAAeH,OAAO,CAACI,KAAvB,IACAF,WADA,GAEAJ,KAAK,CAACK,KAAN,CAAYP,cAAc,CAACS,SAA3B,CAHF;MAKAT,cAAc,CAACS,SAAf,IAA4BL,OAAO,CAAC,CAAD,CAAP,CAAWM,MAAX,GAAoBJ,WAAW,CAACI,MAA5D;IACD;EACF;;EAED,OAAOR,KAAP;AACD,CAjBD;;AAmBAS,MAAM,CAACC,OAAP,GAAiBX,mBAAjB"},"metadata":{},"sourceType":"script"}