{"ast":null,"code":"'use strict';\n\nconst valueParser = require('postcss-value-parser');\n\nconst mappings = require('./lib/map.js');\n/**\n * @param {string} value\n * @return {string}\n */\n\n\nfunction transform(value) {\n  const {\n    nodes\n  } = valueParser(value);\n\n  if (nodes.length === 1) {\n    return value;\n  }\n\n  const values = nodes.filter((list, index) => index % 2 === 0).filter(node => node.type === 'word').map(n => n.value.toLowerCase());\n\n  if (values.length === 0) {\n    return value;\n  }\n\n  const match = mappings.get(values.toString());\n\n  if (!match) {\n    return value;\n  }\n\n  return match;\n}\n/**\n * @type {import('postcss').PluginCreator<void>}\n * @return {import('postcss').Plugin}\n */\n\n\nfunction pluginCreator() {\n  return {\n    postcssPlugin: 'postcss-normalize-display-values',\n\n    prepare() {\n      const cache = new Map();\n      return {\n        OnceExit(css) {\n          css.walkDecls(/^display$/i, decl => {\n            const value = decl.value;\n\n            if (!value) {\n              return;\n            }\n\n            if (cache.has(value)) {\n              decl.value = cache.get(value);\n              return;\n            }\n\n            const result = transform(value);\n            decl.value = result;\n            cache.set(value, result);\n          });\n        }\n\n      };\n    }\n\n  };\n}\n\npluginCreator.postcss = true;\nmodule.exports = pluginCreator;","map":{"version":3,"names":["valueParser","require","mappings","transform","value","nodes","length","values","filter","list","index","node","type","map","n","toLowerCase","match","get","toString","pluginCreator","postcssPlugin","prepare","cache","Map","OnceExit","css","walkDecls","decl","has","result","set","postcss","module","exports"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/postcss-normalize-display-values/src/index.js"],"sourcesContent":["'use strict';\nconst valueParser = require('postcss-value-parser');\nconst mappings = require('./lib/map.js');\n\n/**\n * @param {string} value\n * @return {string}\n */\nfunction transform(value) {\n  const { nodes } = valueParser(value);\n\n  if (nodes.length === 1) {\n    return value;\n  }\n\n  const values = nodes\n    .filter((list, index) => index % 2 === 0)\n    .filter((node) => node.type === 'word')\n    .map((n) => n.value.toLowerCase());\n\n  if (values.length === 0) {\n    return value;\n  }\n\n  const match = mappings.get(values.toString());\n\n  if (!match) {\n    return value;\n  }\n\n  return match;\n}\n\n/**\n * @type {import('postcss').PluginCreator<void>}\n * @return {import('postcss').Plugin}\n */\nfunction pluginCreator() {\n  return {\n    postcssPlugin: 'postcss-normalize-display-values',\n\n    prepare() {\n      const cache = new Map();\n      return {\n        OnceExit(css) {\n          css.walkDecls(/^display$/i, (decl) => {\n            const value = decl.value;\n\n            if (!value) {\n              return;\n            }\n\n            if (cache.has(value)) {\n              decl.value = cache.get(value);\n\n              return;\n            }\n\n            const result = transform(value);\n\n            decl.value = result;\n            cache.set(value, result);\n          });\n        },\n      };\n    },\n  };\n}\n\npluginCreator.postcss = true;\nmodule.exports = pluginCreator;\n"],"mappings":"AAAA;;AACA,MAAMA,WAAW,GAAGC,OAAO,CAAC,sBAAD,CAA3B;;AACA,MAAMC,QAAQ,GAAGD,OAAO,CAAC,cAAD,CAAxB;AAEA;AACA;AACA;AACA;;;AACA,SAASE,SAAT,CAAmBC,KAAnB,EAA0B;EACxB,MAAM;IAAEC;EAAF,IAAYL,WAAW,CAACI,KAAD,CAA7B;;EAEA,IAAIC,KAAK,CAACC,MAAN,KAAiB,CAArB,EAAwB;IACtB,OAAOF,KAAP;EACD;;EAED,MAAMG,MAAM,GAAGF,KAAK,CACjBG,MADY,CACL,CAACC,IAAD,EAAOC,KAAP,KAAiBA,KAAK,GAAG,CAAR,KAAc,CAD1B,EAEZF,MAFY,CAEJG,IAAD,IAAUA,IAAI,CAACC,IAAL,KAAc,MAFnB,EAGZC,GAHY,CAGPC,CAAD,IAAOA,CAAC,CAACV,KAAF,CAAQW,WAAR,EAHC,CAAf;;EAKA,IAAIR,MAAM,CAACD,MAAP,KAAkB,CAAtB,EAAyB;IACvB,OAAOF,KAAP;EACD;;EAED,MAAMY,KAAK,GAAGd,QAAQ,CAACe,GAAT,CAAaV,MAAM,CAACW,QAAP,EAAb,CAAd;;EAEA,IAAI,CAACF,KAAL,EAAY;IACV,OAAOZ,KAAP;EACD;;EAED,OAAOY,KAAP;AACD;AAED;AACA;AACA;AACA;;;AACA,SAASG,aAAT,GAAyB;EACvB,OAAO;IACLC,aAAa,EAAE,kCADV;;IAGLC,OAAO,GAAG;MACR,MAAMC,KAAK,GAAG,IAAIC,GAAJ,EAAd;MACA,OAAO;QACLC,QAAQ,CAACC,GAAD,EAAM;UACZA,GAAG,CAACC,SAAJ,CAAc,YAAd,EAA6BC,IAAD,IAAU;YACpC,MAAMvB,KAAK,GAAGuB,IAAI,CAACvB,KAAnB;;YAEA,IAAI,CAACA,KAAL,EAAY;cACV;YACD;;YAED,IAAIkB,KAAK,CAACM,GAAN,CAAUxB,KAAV,CAAJ,EAAsB;cACpBuB,IAAI,CAACvB,KAAL,GAAakB,KAAK,CAACL,GAAN,CAAUb,KAAV,CAAb;cAEA;YACD;;YAED,MAAMyB,MAAM,GAAG1B,SAAS,CAACC,KAAD,CAAxB;YAEAuB,IAAI,CAACvB,KAAL,GAAayB,MAAb;YACAP,KAAK,CAACQ,GAAN,CAAU1B,KAAV,EAAiByB,MAAjB;UACD,CAjBD;QAkBD;;MApBI,CAAP;IAsBD;;EA3BI,CAAP;AA6BD;;AAEDV,aAAa,CAACY,OAAd,GAAwB,IAAxB;AACAC,MAAM,CAACC,OAAP,GAAiBd,aAAjB"},"metadata":{},"sourceType":"script"}