{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.parseJsonString = exports.parseJsonNumber = exports.parseJson = void 0;\nconst rxParseJson = /position\\s(\\d+)$/;\n\nfunction parseJson(s, pos) {\n  let endPos;\n  parseJson.message = undefined;\n  let matches;\n  if (pos) s = s.slice(pos);\n\n  try {\n    parseJson.position = pos + s.length;\n    return JSON.parse(s);\n  } catch (e) {\n    matches = rxParseJson.exec(e.message);\n\n    if (!matches) {\n      parseJson.message = \"unexpected end\";\n      return undefined;\n    }\n\n    endPos = +matches[1];\n    const c = s[endPos];\n    s = s.slice(0, endPos);\n    parseJson.position = pos + endPos;\n\n    try {\n      return JSON.parse(s);\n    } catch (e1) {\n      parseJson.message = `unexpected token ${c}`;\n      return undefined;\n    }\n  }\n}\n\nexports.parseJson = parseJson;\nparseJson.message = undefined;\nparseJson.position = 0;\nparseJson.code = 'require(\"ajv/dist/runtime/parseJson\").parseJson';\n\nfunction parseJsonNumber(s, pos, maxDigits) {\n  let numStr = \"\";\n  let c;\n  parseJsonNumber.message = undefined;\n\n  if (s[pos] === \"-\") {\n    numStr += \"-\";\n    pos++;\n  }\n\n  if (s[pos] === \"0\") {\n    numStr += \"0\";\n    pos++;\n  } else {\n    if (!parseDigits(maxDigits)) {\n      errorMessage();\n      return undefined;\n    }\n  }\n\n  if (maxDigits) {\n    parseJsonNumber.position = pos;\n    return +numStr;\n  }\n\n  if (s[pos] === \".\") {\n    numStr += \".\";\n    pos++;\n\n    if (!parseDigits()) {\n      errorMessage();\n      return undefined;\n    }\n  }\n\n  if (c = s[pos], c === \"e\" || c === \"E\") {\n    numStr += \"e\";\n    pos++;\n\n    if (c = s[pos], c === \"+\" || c === \"-\") {\n      numStr += c;\n      pos++;\n    }\n\n    if (!parseDigits()) {\n      errorMessage();\n      return undefined;\n    }\n  }\n\n  parseJsonNumber.position = pos;\n  return +numStr;\n\n  function parseDigits(maxLen) {\n    let digit = false;\n\n    while (c = s[pos], c >= \"0\" && c <= \"9\" && (maxLen === undefined || maxLen-- > 0)) {\n      digit = true;\n      numStr += c;\n      pos++;\n    }\n\n    return digit;\n  }\n\n  function errorMessage() {\n    parseJsonNumber.position = pos;\n    parseJsonNumber.message = pos < s.length ? `unexpected token ${s[pos]}` : \"unexpected end\";\n  }\n}\n\nexports.parseJsonNumber = parseJsonNumber;\nparseJsonNumber.message = undefined;\nparseJsonNumber.position = 0;\nparseJsonNumber.code = 'require(\"ajv/dist/runtime/parseJson\").parseJsonNumber';\nconst escapedChars = {\n  b: \"\\b\",\n  f: \"\\f\",\n  n: \"\\n\",\n  r: \"\\r\",\n  t: \"\\t\",\n  '\"': '\"',\n  \"/\": \"/\",\n  \"\\\\\": \"\\\\\"\n};\nconst CODE_A = \"a\".charCodeAt(0);\nconst CODE_0 = \"0\".charCodeAt(0);\n\nfunction parseJsonString(s, pos) {\n  let str = \"\";\n  let c;\n  parseJsonString.message = undefined; // eslint-disable-next-line no-constant-condition, @typescript-eslint/no-unnecessary-condition\n\n  while (true) {\n    c = s[pos++];\n    if (c === '\"') break;\n\n    if (c === \"\\\\\") {\n      c = s[pos];\n\n      if (c in escapedChars) {\n        str += escapedChars[c];\n        pos++;\n      } else if (c === \"u\") {\n        pos++;\n        let count = 4;\n        let code = 0;\n\n        while (count--) {\n          code <<= 4;\n          c = s[pos];\n\n          if (c === undefined) {\n            errorMessage(\"unexpected end\");\n            return undefined;\n          }\n\n          c = c.toLowerCase();\n\n          if (c >= \"a\" && c <= \"f\") {\n            code += c.charCodeAt(0) - CODE_A + 10;\n          } else if (c >= \"0\" && c <= \"9\") {\n            code += c.charCodeAt(0) - CODE_0;\n          } else {\n            errorMessage(`unexpected token ${c}`);\n            return undefined;\n          }\n\n          pos++;\n        }\n\n        str += String.fromCharCode(code);\n      } else {\n        errorMessage(`unexpected token ${c}`);\n        return undefined;\n      } // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n\n    } else if (c === undefined) {\n      errorMessage(\"unexpected end\");\n      return undefined;\n    } else {\n      if (c.charCodeAt(0) >= 0x20) {\n        str += c;\n      } else {\n        errorMessage(`unexpected token ${c}`);\n        return undefined;\n      }\n    }\n  }\n\n  parseJsonString.position = pos;\n  return str;\n\n  function errorMessage(msg) {\n    parseJsonString.position = pos;\n    parseJsonString.message = msg;\n  }\n}\n\nexports.parseJsonString = parseJsonString;\nparseJsonString.message = undefined;\nparseJsonString.position = 0;\nparseJsonString.code = 'require(\"ajv/dist/runtime/parseJson\").parseJsonString';","map":{"version":3,"mappings":"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","names":["rxParseJson","parseJson","s","pos","endPos","message","undefined","matches","slice","position","length","JSON","parse","e","exec","c","e1","exports","code","parseJsonNumber","maxDigits","numStr","parseDigits","errorMessage","maxLen","digit","escapedChars","b","f","n","r","t","CODE_A","charCodeAt","CODE_0","parseJsonString","str","count","toLowerCase","String","fromCharCode","msg"],"sources":["C:\\Users\\Rohith\\mern\\frontend\\node_modules\\ajv-formats\\node_modules\\ajv\\lib\\runtime\\parseJson.ts"],"sourcesContent":["const rxParseJson = /position\\s(\\d+)$/\n\nexport function parseJson(s: string, pos: number): unknown {\n  let endPos: number | undefined\n  parseJson.message = undefined\n  let matches: RegExpExecArray | null\n  if (pos) s = s.slice(pos)\n  try {\n    parseJson.position = pos + s.length\n    return JSON.parse(s)\n  } catch (e) {\n    matches = rxParseJson.exec((e as Error).message)\n    if (!matches) {\n      parseJson.message = \"unexpected end\"\n      return undefined\n    }\n    endPos = +matches[1]\n    const c = s[endPos]\n    s = s.slice(0, endPos)\n    parseJson.position = pos + endPos\n    try {\n      return JSON.parse(s)\n    } catch (e1) {\n      parseJson.message = `unexpected token ${c}`\n      return undefined\n    }\n  }\n}\n\nparseJson.message = undefined as string | undefined\nparseJson.position = 0 as number\nparseJson.code = 'require(\"ajv/dist/runtime/parseJson\").parseJson'\n\nexport function parseJsonNumber(s: string, pos: number, maxDigits?: number): number | undefined {\n  let numStr = \"\"\n  let c: string\n  parseJsonNumber.message = undefined\n  if (s[pos] === \"-\") {\n    numStr += \"-\"\n    pos++\n  }\n  if (s[pos] === \"0\") {\n    numStr += \"0\"\n    pos++\n  } else {\n    if (!parseDigits(maxDigits)) {\n      errorMessage()\n      return undefined\n    }\n  }\n  if (maxDigits) {\n    parseJsonNumber.position = pos\n    return +numStr\n  }\n  if (s[pos] === \".\") {\n    numStr += \".\"\n    pos++\n    if (!parseDigits()) {\n      errorMessage()\n      return undefined\n    }\n  }\n  if (((c = s[pos]), c === \"e\" || c === \"E\")) {\n    numStr += \"e\"\n    pos++\n    if (((c = s[pos]), c === \"+\" || c === \"-\")) {\n      numStr += c\n      pos++\n    }\n    if (!parseDigits()) {\n      errorMessage()\n      return undefined\n    }\n  }\n  parseJsonNumber.position = pos\n  return +numStr\n\n  function parseDigits(maxLen?: number): boolean {\n    let digit = false\n    while (((c = s[pos]), c >= \"0\" && c <= \"9\" && (maxLen === undefined || maxLen-- > 0))) {\n      digit = true\n      numStr += c\n      pos++\n    }\n    return digit\n  }\n\n  function errorMessage(): void {\n    parseJsonNumber.position = pos\n    parseJsonNumber.message = pos < s.length ? `unexpected token ${s[pos]}` : \"unexpected end\"\n  }\n}\n\nparseJsonNumber.message = undefined as string | undefined\nparseJsonNumber.position = 0 as number\nparseJsonNumber.code = 'require(\"ajv/dist/runtime/parseJson\").parseJsonNumber'\n\nconst escapedChars: {[X in string]?: string} = {\n  b: \"\\b\",\n  f: \"\\f\",\n  n: \"\\n\",\n  r: \"\\r\",\n  t: \"\\t\",\n  '\"': '\"',\n  \"/\": \"/\",\n  \"\\\\\": \"\\\\\",\n}\n\nconst CODE_A: number = \"a\".charCodeAt(0)\nconst CODE_0: number = \"0\".charCodeAt(0)\n\nexport function parseJsonString(s: string, pos: number): string | undefined {\n  let str = \"\"\n  let c: string | undefined\n  parseJsonString.message = undefined\n  // eslint-disable-next-line no-constant-condition, @typescript-eslint/no-unnecessary-condition\n  while (true) {\n    c = s[pos++]\n    if (c === '\"') break\n    if (c === \"\\\\\") {\n      c = s[pos]\n      if (c in escapedChars) {\n        str += escapedChars[c]\n        pos++\n      } else if (c === \"u\") {\n        pos++\n        let count = 4\n        let code = 0\n        while (count--) {\n          code <<= 4\n          c = s[pos]\n          if (c === undefined) {\n            errorMessage(\"unexpected end\")\n            return undefined\n          }\n          c = c.toLowerCase()\n          if (c >= \"a\" && c <= \"f\") {\n            code += c.charCodeAt(0) - CODE_A + 10\n          } else if (c >= \"0\" && c <= \"9\") {\n            code += c.charCodeAt(0) - CODE_0\n          } else {\n            errorMessage(`unexpected token ${c}`)\n            return undefined\n          }\n          pos++\n        }\n        str += String.fromCharCode(code)\n      } else {\n        errorMessage(`unexpected token ${c}`)\n        return undefined\n      }\n      // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n    } else if (c === undefined) {\n      errorMessage(\"unexpected end\")\n      return undefined\n    } else {\n      if (c.charCodeAt(0) >= 0x20) {\n        str += c\n      } else {\n        errorMessage(`unexpected token ${c}`)\n        return undefined\n      }\n    }\n  }\n  parseJsonString.position = pos\n  return str\n\n  function errorMessage(msg: string): void {\n    parseJsonString.position = pos\n    parseJsonString.message = msg\n  }\n}\n\nparseJsonString.message = undefined as string | undefined\nparseJsonString.position = 0 as number\nparseJsonString.code = 'require(\"ajv/dist/runtime/parseJson\").parseJsonString'\n"]},"metadata":{},"sourceType":"script"}