{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.default = useFocusManager;\n\nvar _react = require(\"react\");\n\nvar _useEventCallback = _interopRequireDefault(require(\"./useEventCallback\"));\n\nvar _useMounted = _interopRequireDefault(require(\"./useMounted\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * useFocusManager provides a way to track and manage focus as it moves around\n * a container element. An `onChange` is fired when focus enters or leaves the\n * element, but not when it moves around inside the element, similar to\n * `pointerenter` and `pointerleave` DOM events.\n *\n * ```tsx\n * const [focused, setFocusState] = useState(false)\n *\n * const { onBlur, onFocus } = useFocusManager({\n *   onChange: nextFocused => setFocusState(nextFocused)\n * })\n *\n * return (\n *   <div tabIndex=\"-1\" onFocus={onFocus} onBlur={onBlur}>\n *     {String(focused)}\n *     <input />\n *     <input />\n *\n *     <button>A button</button>\n *   </div>\n * ```\n *\n * @returns a memoized FocusController containing event handlers\n */\n\n\nfunction useFocusManager(opts) {\n  var isMounted = (0, _useMounted.default)();\n  var lastFocused = (0, _react.useRef)();\n  var handle = (0, _react.useRef)();\n  var willHandle = (0, _useEventCallback.default)(opts.willHandle);\n  var didHandle = (0, _useEventCallback.default)(opts.didHandle);\n  var onChange = (0, _useEventCallback.default)(opts.onChange);\n  var isDisabled = (0, _useEventCallback.default)(opts.isDisabled);\n  var handleFocusChange = (0, _react.useCallback)(function (focused, event) {\n    if (event && event.persist) event.persist();\n    if (willHandle && willHandle(focused, event) === false) return;\n    clearTimeout(handle.current);\n    handle.current = window.setTimeout(function () {\n      if (focused !== lastFocused.current) {\n        if (didHandle) didHandle(focused, event); // only fire a change when unmounted if its a blur\n\n        if (isMounted() || !focused) {\n          lastFocused.current = focused;\n          onChange && onChange(focused, event);\n        }\n      }\n    });\n  }, [isMounted, willHandle, didHandle, onChange, lastFocused]);\n  var handleBlur = (0, _react.useCallback)(function (event) {\n    if (!isDisabled()) handleFocusChange(false, event);\n  }, [handleFocusChange, isDisabled]);\n  var handleFocus = (0, _react.useCallback)(function (event) {\n    if (!isDisabled()) handleFocusChange(true, event);\n  }, [handleFocusChange, isDisabled]);\n  return (0, _react.useMemo)(function () {\n    return {\n      onBlur: handleBlur,\n      onFocus: handleFocus\n    };\n  }, [handleBlur, handleFocus]);\n}","map":{"version":3,"names":["exports","__esModule","default","useFocusManager","_react","require","_useEventCallback","_interopRequireDefault","_useMounted","obj","opts","isMounted","lastFocused","useRef","handle","willHandle","didHandle","onChange","isDisabled","handleFocusChange","useCallback","focused","event","persist","clearTimeout","current","window","setTimeout","handleBlur","handleFocus","useMemo","onBlur","onFocus"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/@restart/hooks/cjs/useFocusManager.js"],"sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.default = useFocusManager;\n\nvar _react = require(\"react\");\n\nvar _useEventCallback = _interopRequireDefault(require(\"./useEventCallback\"));\n\nvar _useMounted = _interopRequireDefault(require(\"./useMounted\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * useFocusManager provides a way to track and manage focus as it moves around\n * a container element. An `onChange` is fired when focus enters or leaves the\n * element, but not when it moves around inside the element, similar to\n * `pointerenter` and `pointerleave` DOM events.\n *\n * ```tsx\n * const [focused, setFocusState] = useState(false)\n *\n * const { onBlur, onFocus } = useFocusManager({\n *   onChange: nextFocused => setFocusState(nextFocused)\n * })\n *\n * return (\n *   <div tabIndex=\"-1\" onFocus={onFocus} onBlur={onBlur}>\n *     {String(focused)}\n *     <input />\n *     <input />\n *\n *     <button>A button</button>\n *   </div>\n * ```\n *\n * @returns a memoized FocusController containing event handlers\n */\nfunction useFocusManager(opts) {\n  var isMounted = (0, _useMounted.default)();\n  var lastFocused = (0, _react.useRef)();\n  var handle = (0, _react.useRef)();\n  var willHandle = (0, _useEventCallback.default)(opts.willHandle);\n  var didHandle = (0, _useEventCallback.default)(opts.didHandle);\n  var onChange = (0, _useEventCallback.default)(opts.onChange);\n  var isDisabled = (0, _useEventCallback.default)(opts.isDisabled);\n  var handleFocusChange = (0, _react.useCallback)(function (focused, event) {\n    if (event && event.persist) event.persist();\n    if (willHandle && willHandle(focused, event) === false) return;\n    clearTimeout(handle.current);\n    handle.current = window.setTimeout(function () {\n      if (focused !== lastFocused.current) {\n        if (didHandle) didHandle(focused, event); // only fire a change when unmounted if its a blur\n\n        if (isMounted() || !focused) {\n          lastFocused.current = focused;\n          onChange && onChange(focused, event);\n        }\n      }\n    });\n  }, [isMounted, willHandle, didHandle, onChange, lastFocused]);\n  var handleBlur = (0, _react.useCallback)(function (event) {\n    if (!isDisabled()) handleFocusChange(false, event);\n  }, [handleFocusChange, isDisabled]);\n  var handleFocus = (0, _react.useCallback)(function (event) {\n    if (!isDisabled()) handleFocusChange(true, event);\n  }, [handleFocusChange, isDisabled]);\n  return (0, _react.useMemo)(function () {\n    return {\n      onBlur: handleBlur,\n      onFocus: handleFocus\n    };\n  }, [handleBlur, handleFocus]);\n}"],"mappings":"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"},"metadata":{},"sourceType":"script"}