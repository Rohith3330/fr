{"ast":null,"code":"// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\nvar common = require('./common');\n\nvar assert = require('assert');\n\nvar EventEmitter = require('../');\n\nvar e = new EventEmitter();\ne.once('hello', common.mustCall());\ne.emit('hello', 'a', 'b');\ne.emit('hello', 'a', 'b');\ne.emit('hello', 'a', 'b');\ne.emit('hello', 'a', 'b');\n\nfunction remove() {\n  assert.fail('once->foo should not be emitted');\n}\n\ne.once('foo', remove);\ne.removeListener('foo', remove);\ne.emit('foo');\ne.once('e', common.mustCall(function () {\n  e.emit('e');\n}));\ne.once('e', common.mustCall());\ne.emit('e'); // Verify that the listener must be a function\n\nassert.throws(function () {\n  var ee = new EventEmitter();\n  ee.once('foo', null);\n}, /^TypeError: The \"listener\" argument must be of type Function. Received type object$/);\n{\n  // once() has different code paths based on the number of arguments being\n  // emitted. Verify that all of the cases are covered.\n  var maxArgs = 4;\n\n  for (var i = 0; i <= maxArgs; ++i) {\n    var ee = new EventEmitter();\n    var args = ['foo'];\n\n    for (var j = 0; j < i; ++j) args.push(j);\n\n    ee.once('foo', common.mustCall(function () {\n      var params = Array.prototype.slice.call(arguments);\n      var restArgs = args.slice(1);\n      assert.ok(Array.isArray(params));\n      assert.strictEqual(params.length, restArgs.length);\n\n      for (var index = 0; index < params.length; index++) {\n        var param = params[index];\n        assert.strictEqual(param, restArgs[index]);\n      }\n    }));\n    EventEmitter.prototype.emit.apply(ee, args);\n  }\n}","map":{"version":3,"names":["common","require","assert","EventEmitter","e","once","mustCall","emit","remove","fail","removeListener","throws","ee","maxArgs","i","args","j","push","params","Array","prototype","slice","call","arguments","restArgs","ok","isArray","strictEqual","length","index","param","apply"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/events/tests/once.js"],"sourcesContent":["// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar common = require('./common');\nvar assert = require('assert');\nvar EventEmitter = require('../');\n\nvar e = new EventEmitter();\n\ne.once('hello', common.mustCall());\n\ne.emit('hello', 'a', 'b');\ne.emit('hello', 'a', 'b');\ne.emit('hello', 'a', 'b');\ne.emit('hello', 'a', 'b');\n\nfunction remove() {\n  assert.fail('once->foo should not be emitted');\n}\n\ne.once('foo', remove);\ne.removeListener('foo', remove);\ne.emit('foo');\n\ne.once('e', common.mustCall(function() {\n  e.emit('e');\n}));\n\ne.once('e', common.mustCall());\n\ne.emit('e');\n\n// Verify that the listener must be a function\nassert.throws(function() {\n  var ee = new EventEmitter();\n\n  ee.once('foo', null);\n}, /^TypeError: The \"listener\" argument must be of type Function. Received type object$/);\n\n{\n  // once() has different code paths based on the number of arguments being\n  // emitted. Verify that all of the cases are covered.\n  var maxArgs = 4;\n\n  for (var i = 0; i <= maxArgs; ++i) {\n    var ee = new EventEmitter();\n    var args = ['foo'];\n\n    for (var j = 0; j < i; ++j)\n      args.push(j);\n\n    ee.once('foo', common.mustCall(function() {\n      var params = Array.prototype.slice.call(arguments);\n      var restArgs = args.slice(1);\n      assert.ok(Array.isArray(params));\n      assert.strictEqual(params.length, restArgs.length);\n      for (var index = 0; index < params.length; index++) {\n        var param = params[index];\n        assert.strictEqual(param, restArgs[index]);\n      }\n  \t}));\n\n    EventEmitter.prototype.emit.apply(ee, args);\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}