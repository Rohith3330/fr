{"ast":null,"code":"/**\n * @fileOverview Enforce a defaultProps definition for every prop that is not a required prop.\n * @author Vitor Balocco\n */\n'use strict';\n\nconst entries = require('object.entries');\n\nconst values = require('object.values');\n\nconst Components = require('../util/Components');\n\nconst docsUrl = require('../util/docsUrl');\n\nconst astUtil = require('../util/ast');\n\nconst report = require('../util/report'); // ------------------------------------------------------------------------------\n// Rule Definition\n// ------------------------------------------------------------------------------\n\n\nconst messages = {\n  noDefaultWithRequired: 'propType \"{{name}}\" is required and should not have a defaultProps declaration.',\n  shouldHaveDefault: 'propType \"{{name}}\" is not required, but has no corresponding defaultProps declaration.',\n  noDefaultPropsWithFunction: 'Don’t use defaultProps with function components.',\n  shouldAssignObjectDefault: 'propType \"{{name}}\" is not required, but has no corresponding default argument value.',\n  destructureInSignature: 'Must destructure props in the function signature to initialize an optional prop.'\n};\nmodule.exports = {\n  meta: {\n    docs: {\n      description: 'Enforce a defaultProps definition for every prop that is not a required prop',\n      category: 'Best Practices',\n      url: docsUrl('require-default-props')\n    },\n    messages,\n    schema: [{\n      type: 'object',\n      properties: {\n        forbidDefaultForRequired: {\n          type: 'boolean'\n        },\n        classes: {\n          allow: {\n            enum: ['defaultProps', 'ignore']\n          }\n        },\n        functions: {\n          allow: {\n            enum: ['defaultArguments', 'defaultProps', 'ignore']\n          }\n        },\n\n        /**\n         * @deprecated\n         */\n        ignoreFunctionalComponents: {\n          type: 'boolean'\n        }\n      },\n      additionalProperties: false\n    }]\n  },\n  create: Components.detect((context, components) => {\n    const configuration = context.options[0] || {};\n    const forbidDefaultForRequired = configuration.forbidDefaultForRequired || false;\n    const classes = configuration.classes || 'defaultProps';\n    /**\n     * @todo\n     * - Remove ignoreFunctionalComponents\n     * - Change default to 'defaultArguments'\n     */\n\n    const functions = configuration.ignoreFunctionalComponents ? 'ignore' : configuration.functions || 'defaultProps';\n    /**\n     * Reports all propTypes passed in that don't have a defaultProps counterpart.\n     * @param  {Object[]} propTypes    List of propTypes to check.\n     * @param  {Object}   defaultProps Object of defaultProps to check. Keys are the props names.\n     * @return {void}\n     */\n\n    function reportPropTypesWithoutDefault(propTypes, defaultProps) {\n      entries(propTypes).forEach(propType => {\n        const propName = propType[0];\n        const prop = propType[1];\n\n        if (!prop.node) {\n          return;\n        }\n\n        if (prop.isRequired) {\n          if (forbidDefaultForRequired && defaultProps[propName]) {\n            report(context, messages.noDefaultWithRequired, 'noDefaultWithRequired', {\n              node: prop.node,\n              data: {\n                name: propName\n              }\n            });\n          }\n\n          return;\n        }\n\n        if (defaultProps[propName]) {\n          return;\n        }\n\n        report(context, messages.shouldHaveDefault, 'shouldHaveDefault', {\n          node: prop.node,\n          data: {\n            name: propName\n          }\n        });\n      });\n    }\n    /**\n     * If functions option is 'defaultArguments', reports defaultProps is used and all params that doesn't initialized.\n     * @param {Object} componentNode Node of component.\n     * @param {Object[]} declaredPropTypes List of propTypes to check `isRequired`.\n     * @param {Object} defaultProps Object of defaultProps to check used.\n     */\n\n\n    function reportFunctionComponent(componentNode, declaredPropTypes, defaultProps) {\n      if (defaultProps) {\n        report(context, messages.noDefaultPropsWithFunction, 'noDefaultPropsWithFunction', {\n          node: componentNode\n        });\n      }\n\n      const props = componentNode.params[0];\n      const propTypes = declaredPropTypes;\n\n      if (!props) {\n        return;\n      }\n\n      if (props.type === 'Identifier') {\n        const hasOptionalProp = values(propTypes).some(propType => !propType.isRequired);\n\n        if (hasOptionalProp) {\n          report(context, messages.destructureInSignature, 'destructureInSignature', {\n            node: props\n          });\n        }\n      } else if (props.type === 'ObjectPattern') {\n        props.properties.filter(prop => {\n          if (prop.type === 'RestElement' || prop.type === 'ExperimentalRestProperty') {\n            return false;\n          }\n\n          const propType = propTypes[prop.key.name];\n\n          if (!propType || propType.isRequired) {\n            return false;\n          }\n\n          return prop.value.type !== 'AssignmentPattern';\n        }).forEach(prop => {\n          report(context, messages.shouldAssignObjectDefault, 'shouldAssignObjectDefault', {\n            node: prop,\n            data: {\n              name: prop.key.name\n            }\n          });\n        });\n      }\n    } // --------------------------------------------------------------------------\n    // Public API\n    // --------------------------------------------------------------------------\n\n\n    return {\n      'Program:exit'() {\n        const list = components.list();\n        values(list).filter(component => {\n          if (functions === 'ignore' && astUtil.isFunctionLike(component.node)) {\n            return false;\n          }\n\n          if (classes === 'ignore' && astUtil.isClass(component.node)) {\n            return false;\n          } // If this defaultProps is \"unresolved\", then we should ignore this component and not report\n          // any errors for it, to avoid false-positives with e.g. external defaultProps declarations or spread operators.\n\n\n          if (component.defaultProps === 'unresolved') {\n            return false;\n          }\n\n          return component.declaredPropTypes !== undefined;\n        }).forEach(component => {\n          if (functions === 'defaultArguments' && astUtil.isFunctionLike(component.node)) {\n            reportFunctionComponent(component.node, component.declaredPropTypes, component.defaultProps);\n          } else {\n            reportPropTypesWithoutDefault(component.declaredPropTypes, component.defaultProps || {});\n          }\n        });\n      }\n\n    };\n  })\n};","map":{"version":3,"names":["entries","require","values","Components","docsUrl","astUtil","report","messages","noDefaultWithRequired","shouldHaveDefault","noDefaultPropsWithFunction","shouldAssignObjectDefault","destructureInSignature","module","exports","meta","docs","description","category","url","schema","type","properties","forbidDefaultForRequired","classes","allow","enum","functions","ignoreFunctionalComponents","additionalProperties","create","detect","context","components","configuration","options","reportPropTypesWithoutDefault","propTypes","defaultProps","forEach","propType","propName","prop","node","isRequired","data","name","reportFunctionComponent","componentNode","declaredPropTypes","props","params","hasOptionalProp","some","filter","key","value","list","component","isFunctionLike","isClass","undefined"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/eslint-plugin-react/lib/rules/require-default-props.js"],"sourcesContent":["/**\n * @fileOverview Enforce a defaultProps definition for every prop that is not a required prop.\n * @author Vitor Balocco\n */\n\n'use strict';\n\nconst entries = require('object.entries');\nconst values = require('object.values');\nconst Components = require('../util/Components');\nconst docsUrl = require('../util/docsUrl');\nconst astUtil = require('../util/ast');\nconst report = require('../util/report');\n\n// ------------------------------------------------------------------------------\n// Rule Definition\n// ------------------------------------------------------------------------------\n\nconst messages = {\n  noDefaultWithRequired: 'propType \"{{name}}\" is required and should not have a defaultProps declaration.',\n  shouldHaveDefault: 'propType \"{{name}}\" is not required, but has no corresponding defaultProps declaration.',\n  noDefaultPropsWithFunction: 'Don’t use defaultProps with function components.',\n  shouldAssignObjectDefault: 'propType \"{{name}}\" is not required, but has no corresponding default argument value.',\n  destructureInSignature: 'Must destructure props in the function signature to initialize an optional prop.',\n};\n\nmodule.exports = {\n  meta: {\n    docs: {\n      description: 'Enforce a defaultProps definition for every prop that is not a required prop',\n      category: 'Best Practices',\n      url: docsUrl('require-default-props'),\n    },\n\n    messages,\n\n    schema: [{\n      type: 'object',\n      properties: {\n        forbidDefaultForRequired: {\n          type: 'boolean',\n        },\n        classes: {\n          allow: {\n            enum: ['defaultProps', 'ignore'],\n          },\n        },\n        functions: {\n          allow: {\n            enum: ['defaultArguments', 'defaultProps', 'ignore'],\n          },\n        },\n        /**\n         * @deprecated\n         */\n        ignoreFunctionalComponents: {\n          type: 'boolean',\n        },\n      },\n      additionalProperties: false,\n    }],\n  },\n\n  create: Components.detect((context, components) => {\n    const configuration = context.options[0] || {};\n    const forbidDefaultForRequired = configuration.forbidDefaultForRequired || false;\n    const classes = configuration.classes || 'defaultProps';\n    /**\n     * @todo\n     * - Remove ignoreFunctionalComponents\n     * - Change default to 'defaultArguments'\n     */\n    const functions = configuration.ignoreFunctionalComponents\n      ? 'ignore'\n      : configuration.functions || 'defaultProps';\n\n    /**\n     * Reports all propTypes passed in that don't have a defaultProps counterpart.\n     * @param  {Object[]} propTypes    List of propTypes to check.\n     * @param  {Object}   defaultProps Object of defaultProps to check. Keys are the props names.\n     * @return {void}\n     */\n    function reportPropTypesWithoutDefault(propTypes, defaultProps) {\n      entries(propTypes).forEach((propType) => {\n        const propName = propType[0];\n        const prop = propType[1];\n\n        if (!prop.node) {\n          return;\n        }\n        if (prop.isRequired) {\n          if (forbidDefaultForRequired && defaultProps[propName]) {\n            report(context, messages.noDefaultWithRequired, 'noDefaultWithRequired', {\n              node: prop.node,\n              data: { name: propName },\n            });\n          }\n          return;\n        }\n\n        if (defaultProps[propName]) {\n          return;\n        }\n\n        report(context, messages.shouldHaveDefault, 'shouldHaveDefault', {\n          node: prop.node,\n          data: { name: propName },\n        });\n      });\n    }\n\n    /**\n     * If functions option is 'defaultArguments', reports defaultProps is used and all params that doesn't initialized.\n     * @param {Object} componentNode Node of component.\n     * @param {Object[]} declaredPropTypes List of propTypes to check `isRequired`.\n     * @param {Object} defaultProps Object of defaultProps to check used.\n     */\n    function reportFunctionComponent(componentNode, declaredPropTypes, defaultProps) {\n      if (defaultProps) {\n        report(context, messages.noDefaultPropsWithFunction, 'noDefaultPropsWithFunction', {\n          node: componentNode,\n        });\n      }\n\n      const props = componentNode.params[0];\n      const propTypes = declaredPropTypes;\n\n      if (!props) {\n        return;\n      }\n\n      if (props.type === 'Identifier') {\n        const hasOptionalProp = values(propTypes).some((propType) => !propType.isRequired);\n        if (hasOptionalProp) {\n          report(context, messages.destructureInSignature, 'destructureInSignature', {\n            node: props,\n          });\n        }\n      } else if (props.type === 'ObjectPattern') {\n        props.properties.filter((prop) => {\n          if (prop.type === 'RestElement' || prop.type === 'ExperimentalRestProperty') {\n            return false;\n          }\n          const propType = propTypes[prop.key.name];\n          if (!propType || propType.isRequired) {\n            return false;\n          }\n          return prop.value.type !== 'AssignmentPattern';\n        }).forEach((prop) => {\n          report(context, messages.shouldAssignObjectDefault, 'shouldAssignObjectDefault', {\n            node: prop,\n            data: { name: prop.key.name },\n          });\n        });\n      }\n    }\n\n    // --------------------------------------------------------------------------\n    // Public API\n    // --------------------------------------------------------------------------\n\n    return {\n      'Program:exit'() {\n        const list = components.list();\n\n        values(list).filter((component) => {\n          if (functions === 'ignore' && astUtil.isFunctionLike(component.node)) {\n            return false;\n          }\n          if (classes === 'ignore' && astUtil.isClass(component.node)) {\n            return false;\n          }\n\n          // If this defaultProps is \"unresolved\", then we should ignore this component and not report\n          // any errors for it, to avoid false-positives with e.g. external defaultProps declarations or spread operators.\n          if (component.defaultProps === 'unresolved') {\n            return false;\n          }\n          return component.declaredPropTypes !== undefined;\n        }).forEach((component) => {\n          if (functions === 'defaultArguments' && astUtil.isFunctionLike(component.node)) {\n            reportFunctionComponent(\n              component.node,\n              component.declaredPropTypes,\n              component.defaultProps\n            );\n          } else {\n            reportPropTypesWithoutDefault(\n              component.declaredPropTypes,\n              component.defaultProps || {}\n            );\n          }\n        });\n      },\n    };\n  }),\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}