{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _ariaQuery = require(\"aria-query\");\n\nvar _jsxAstUtils = require(\"jsx-ast-utils\");\n\nvar _getElementType = _interopRequireDefault(require(\"../util/getElementType\"));\n\nvar _schemas = require(\"../util/schemas\");\n/**\n * @fileoverview Enforce aria role attribute is valid.\n * @author Ethan Cohen\n */\n// ----------------------------------------------------------------------------\n// Rule Definition\n// ----------------------------------------------------------------------------\n\n\nvar errorMessage = 'Elements with ARIA roles must use a valid, non-abstract ARIA role.';\nvar schema = (0, _schemas.generateObjSchema)({\n  allowedInvalidRoles: {\n    items: {\n      type: 'string'\n    },\n    type: 'array',\n    uniqueItems: true\n  },\n  ignoreNonDOM: {\n    type: 'boolean',\n    \"default\": false\n  }\n});\nvar _default = {\n  meta: {\n    docs: {\n      url: 'https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/tree/HEAD/docs/rules/aria-role.md',\n      description: 'Enforce that elements with ARIA roles must use a valid, non-abstract ARIA role.'\n    },\n    schema: [schema]\n  },\n  create: function create(context) {\n    var options = context.options[0] || {};\n    var ignoreNonDOM = !!options.ignoreNonDOM;\n    var allowedInvalidRoles = new Set(options.allowedInvalidRoles || []);\n    var validRoles = new Set((0, _toConsumableArray2[\"default\"])(_ariaQuery.roles.keys()).filter(function (role) {\n      return _ariaQuery.roles.get(role)[\"abstract\"] === false;\n    }));\n    var elementType = (0, _getElementType[\"default\"])(context);\n    return {\n      JSXAttribute: function JSXAttribute(attribute) {\n        // If ignoreNonDOM and the parent isn't DOM, don't run rule.\n        if (ignoreNonDOM) {\n          var type = elementType(attribute.parent);\n\n          if (!_ariaQuery.dom.get(type)) {\n            return;\n          }\n        } // Get prop name\n\n\n        var name = (0, _jsxAstUtils.propName)(attribute).toUpperCase();\n\n        if (name !== 'ROLE') {\n          return;\n        }\n\n        var value = (0, _jsxAstUtils.getLiteralPropValue)(attribute); // If value is undefined, then the role attribute will be dropped in the DOM.\n        // If value is null, then getLiteralAttributeValue is telling us that the\n        // value isn't in the form of a literal.\n\n        if (value === undefined || value === null) {\n          return;\n        }\n\n        var values = String(value).split(' ');\n        var isValid = values.every(function (val) {\n          return allowedInvalidRoles.has(val) || validRoles.has(val);\n        });\n\n        if (isValid === true) {\n          return;\n        }\n\n        context.report({\n          node: attribute,\n          message: errorMessage\n        });\n      }\n    };\n  }\n};\nexports[\"default\"] = _default;\nmodule.exports = exports.default;","map":{"version":3,"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","_toConsumableArray2","_ariaQuery","_jsxAstUtils","_getElementType","_schemas","errorMessage","schema","generateObjSchema","allowedInvalidRoles","items","type","uniqueItems","ignoreNonDOM","_default","meta","docs","url","description","create","context","options","Set","validRoles","roles","keys","filter","role","get","elementType","JSXAttribute","attribute","parent","dom","name","propName","toUpperCase","getLiteralPropValue","undefined","values","String","split","isValid","every","val","has","report","node","message","module","default"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/eslint-plugin-jsx-a11y/lib/rules/aria-role.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _ariaQuery = require(\"aria-query\");\n\nvar _jsxAstUtils = require(\"jsx-ast-utils\");\n\nvar _getElementType = _interopRequireDefault(require(\"../util/getElementType\"));\n\nvar _schemas = require(\"../util/schemas\");\n\n/**\n * @fileoverview Enforce aria role attribute is valid.\n * @author Ethan Cohen\n */\n// ----------------------------------------------------------------------------\n// Rule Definition\n// ----------------------------------------------------------------------------\nvar errorMessage = 'Elements with ARIA roles must use a valid, non-abstract ARIA role.';\nvar schema = (0, _schemas.generateObjSchema)({\n  allowedInvalidRoles: {\n    items: {\n      type: 'string'\n    },\n    type: 'array',\n    uniqueItems: true\n  },\n  ignoreNonDOM: {\n    type: 'boolean',\n    \"default\": false\n  }\n});\nvar _default = {\n  meta: {\n    docs: {\n      url: 'https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/tree/HEAD/docs/rules/aria-role.md',\n      description: 'Enforce that elements with ARIA roles must use a valid, non-abstract ARIA role.'\n    },\n    schema: [schema]\n  },\n  create: function create(context) {\n    var options = context.options[0] || {};\n    var ignoreNonDOM = !!options.ignoreNonDOM;\n    var allowedInvalidRoles = new Set(options.allowedInvalidRoles || []);\n    var validRoles = new Set((0, _toConsumableArray2[\"default\"])(_ariaQuery.roles.keys()).filter(function (role) {\n      return _ariaQuery.roles.get(role)[\"abstract\"] === false;\n    }));\n    var elementType = (0, _getElementType[\"default\"])(context);\n    return {\n      JSXAttribute: function JSXAttribute(attribute) {\n        // If ignoreNonDOM and the parent isn't DOM, don't run rule.\n        if (ignoreNonDOM) {\n          var type = elementType(attribute.parent);\n\n          if (!_ariaQuery.dom.get(type)) {\n            return;\n          }\n        } // Get prop name\n\n\n        var name = (0, _jsxAstUtils.propName)(attribute).toUpperCase();\n\n        if (name !== 'ROLE') {\n          return;\n        }\n\n        var value = (0, _jsxAstUtils.getLiteralPropValue)(attribute); // If value is undefined, then the role attribute will be dropped in the DOM.\n        // If value is null, then getLiteralAttributeValue is telling us that the\n        // value isn't in the form of a literal.\n\n        if (value === undefined || value === null) {\n          return;\n        }\n\n        var values = String(value).split(' ');\n        var isValid = values.every(function (val) {\n          return allowedInvalidRoles.has(val) || validRoles.has(val);\n        });\n\n        if (isValid === true) {\n          return;\n        }\n\n        context.report({\n          node: attribute,\n          message: errorMessage\n        });\n      }\n    };\n  }\n};\nexports[\"default\"] = _default;\nmodule.exports = exports.default;"],"mappings":"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"},"metadata":{},"sourceType":"script"}