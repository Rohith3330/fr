{"ast":null,"code":"import { merge, subexp } from \"./util\";\nexport function buildExps(isIRI) {\n  const ALPHA$$ = \"[A-Za-z]\",\n        CR$ = \"[\\\\x0D]\",\n        DIGIT$$ = \"[0-9]\",\n        DQUOTE$$ = \"[\\\\x22]\",\n        HEXDIG$$ = merge(DIGIT$$, \"[A-Fa-f]\"),\n        //case-insensitive\n  LF$$ = \"[\\\\x0A]\",\n        SP$$ = \"[\\\\x20]\",\n        PCT_ENCODED$ = subexp(subexp(\"%[EFef]\" + HEXDIG$$ + \"%\" + HEXDIG$$ + HEXDIG$$ + \"%\" + HEXDIG$$ + HEXDIG$$) + \"|\" + subexp(\"%[89A-Fa-f]\" + HEXDIG$$ + \"%\" + HEXDIG$$ + HEXDIG$$) + \"|\" + subexp(\"%\" + HEXDIG$$ + HEXDIG$$)),\n        //expanded\n  GEN_DELIMS$$ = \"[\\\\:\\\\/\\\\?\\\\#\\\\[\\\\]\\\\@]\",\n        SUB_DELIMS$$ = \"[\\\\!\\\\$\\\\&\\\\'\\\\(\\\\)\\\\*\\\\+\\\\,\\\\;\\\\=]\",\n        RESERVED$$ = merge(GEN_DELIMS$$, SUB_DELIMS$$),\n        UCSCHAR$$ = isIRI ? \"[\\\\xA0-\\\\u200D\\\\u2010-\\\\u2029\\\\u202F-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFEF]\" : \"[]\",\n        //subset, excludes bidi control characters\n  IPRIVATE$$ = isIRI ? \"[\\\\uE000-\\\\uF8FF]\" : \"[]\",\n        //subset\n  UNRESERVED$$ = merge(ALPHA$$, DIGIT$$, \"[\\\\-\\\\.\\\\_\\\\~]\", UCSCHAR$$),\n        SCHEME$ = subexp(ALPHA$$ + merge(ALPHA$$, DIGIT$$, \"[\\\\+\\\\-\\\\.]\") + \"*\"),\n        USERINFO$ = subexp(subexp(PCT_ENCODED$ + \"|\" + merge(UNRESERVED$$, SUB_DELIMS$$, \"[\\\\:]\")) + \"*\"),\n        DEC_OCTET$ = subexp(subexp(\"25[0-5]\") + \"|\" + subexp(\"2[0-4]\" + DIGIT$$) + \"|\" + subexp(\"1\" + DIGIT$$ + DIGIT$$) + \"|\" + subexp(\"[1-9]\" + DIGIT$$) + \"|\" + DIGIT$$),\n        DEC_OCTET_RELAXED$ = subexp(subexp(\"25[0-5]\") + \"|\" + subexp(\"2[0-4]\" + DIGIT$$) + \"|\" + subexp(\"1\" + DIGIT$$ + DIGIT$$) + \"|\" + subexp(\"0?[1-9]\" + DIGIT$$) + \"|0?0?\" + DIGIT$$),\n        //relaxed parsing rules\n  IPV4ADDRESS$ = subexp(DEC_OCTET_RELAXED$ + \"\\\\.\" + DEC_OCTET_RELAXED$ + \"\\\\.\" + DEC_OCTET_RELAXED$ + \"\\\\.\" + DEC_OCTET_RELAXED$),\n        H16$ = subexp(HEXDIG$$ + \"{1,4}\"),\n        LS32$ = subexp(subexp(H16$ + \"\\\\:\" + H16$) + \"|\" + IPV4ADDRESS$),\n        IPV6ADDRESS1$ = subexp(subexp(H16$ + \"\\\\:\") + \"{6}\" + LS32$),\n        //                           6( h16 \":\" ) ls32\n  IPV6ADDRESS2$ = subexp(\"\\\\:\\\\:\" + subexp(H16$ + \"\\\\:\") + \"{5}\" + LS32$),\n        //                      \"::\" 5( h16 \":\" ) ls32\n  IPV6ADDRESS3$ = subexp(subexp(H16$) + \"?\\\\:\\\\:\" + subexp(H16$ + \"\\\\:\") + \"{4}\" + LS32$),\n        //[               h16 ] \"::\" 4( h16 \":\" ) ls32\n  IPV6ADDRESS4$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,1}\" + H16$) + \"?\\\\:\\\\:\" + subexp(H16$ + \"\\\\:\") + \"{3}\" + LS32$),\n        //[ *1( h16 \":\" ) h16 ] \"::\" 3( h16 \":\" ) ls32\n  IPV6ADDRESS5$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,2}\" + H16$) + \"?\\\\:\\\\:\" + subexp(H16$ + \"\\\\:\") + \"{2}\" + LS32$),\n        //[ *2( h16 \":\" ) h16 ] \"::\" 2( h16 \":\" ) ls32\n  IPV6ADDRESS6$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,3}\" + H16$) + \"?\\\\:\\\\:\" + H16$ + \"\\\\:\" + LS32$),\n        //[ *3( h16 \":\" ) h16 ] \"::\"    h16 \":\"   ls32\n  IPV6ADDRESS7$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,4}\" + H16$) + \"?\\\\:\\\\:\" + LS32$),\n        //[ *4( h16 \":\" ) h16 ] \"::\"              ls32\n  IPV6ADDRESS8$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,5}\" + H16$) + \"?\\\\:\\\\:\" + H16$),\n        //[ *5( h16 \":\" ) h16 ] \"::\"              h16\n  IPV6ADDRESS9$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,6}\" + H16$) + \"?\\\\:\\\\:\"),\n        //[ *6( h16 \":\" ) h16 ] \"::\"\n  IPV6ADDRESS$ = subexp([IPV6ADDRESS1$, IPV6ADDRESS2$, IPV6ADDRESS3$, IPV6ADDRESS4$, IPV6ADDRESS5$, IPV6ADDRESS6$, IPV6ADDRESS7$, IPV6ADDRESS8$, IPV6ADDRESS9$].join(\"|\")),\n        ZONEID$ = subexp(subexp(UNRESERVED$$ + \"|\" + PCT_ENCODED$) + \"+\"),\n        //RFC 6874\n  IPV6ADDRZ$ = subexp(IPV6ADDRESS$ + \"\\\\%25\" + ZONEID$),\n        //RFC 6874\n  IPV6ADDRZ_RELAXED$ = subexp(IPV6ADDRESS$ + subexp(\"\\\\%25|\\\\%(?!\" + HEXDIG$$ + \"{2})\") + ZONEID$),\n        //RFC 6874, with relaxed parsing rules\n  IPVFUTURE$ = subexp(\"[vV]\" + HEXDIG$$ + \"+\\\\.\" + merge(UNRESERVED$$, SUB_DELIMS$$, \"[\\\\:]\") + \"+\"),\n        IP_LITERAL$ = subexp(\"\\\\[\" + subexp(IPV6ADDRZ_RELAXED$ + \"|\" + IPV6ADDRESS$ + \"|\" + IPVFUTURE$) + \"\\\\]\"),\n        //RFC 6874\n  REG_NAME$ = subexp(subexp(PCT_ENCODED$ + \"|\" + merge(UNRESERVED$$, SUB_DELIMS$$)) + \"*\"),\n        HOST$ = subexp(IP_LITERAL$ + \"|\" + IPV4ADDRESS$ + \"(?!\" + REG_NAME$ + \")\" + \"|\" + REG_NAME$),\n        PORT$ = subexp(DIGIT$$ + \"*\"),\n        AUTHORITY$ = subexp(subexp(USERINFO$ + \"@\") + \"?\" + HOST$ + subexp(\"\\\\:\" + PORT$) + \"?\"),\n        PCHAR$ = subexp(PCT_ENCODED$ + \"|\" + merge(UNRESERVED$$, SUB_DELIMS$$, \"[\\\\:\\\\@]\")),\n        SEGMENT$ = subexp(PCHAR$ + \"*\"),\n        SEGMENT_NZ$ = subexp(PCHAR$ + \"+\"),\n        SEGMENT_NZ_NC$ = subexp(subexp(PCT_ENCODED$ + \"|\" + merge(UNRESERVED$$, SUB_DELIMS$$, \"[\\\\@]\")) + \"+\"),\n        PATH_ABEMPTY$ = subexp(subexp(\"\\\\/\" + SEGMENT$) + \"*\"),\n        PATH_ABSOLUTE$ = subexp(\"\\\\/\" + subexp(SEGMENT_NZ$ + PATH_ABEMPTY$) + \"?\"),\n        //simplified\n  PATH_NOSCHEME$ = subexp(SEGMENT_NZ_NC$ + PATH_ABEMPTY$),\n        //simplified\n  PATH_ROOTLESS$ = subexp(SEGMENT_NZ$ + PATH_ABEMPTY$),\n        //simplified\n  PATH_EMPTY$ = \"(?!\" + PCHAR$ + \")\",\n        PATH$ = subexp(PATH_ABEMPTY$ + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_NOSCHEME$ + \"|\" + PATH_ROOTLESS$ + \"|\" + PATH_EMPTY$),\n        QUERY$ = subexp(subexp(PCHAR$ + \"|\" + merge(\"[\\\\/\\\\?]\", IPRIVATE$$)) + \"*\"),\n        FRAGMENT$ = subexp(subexp(PCHAR$ + \"|[\\\\/\\\\?]\") + \"*\"),\n        HIER_PART$ = subexp(subexp(\"\\\\/\\\\/\" + AUTHORITY$ + PATH_ABEMPTY$) + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_ROOTLESS$ + \"|\" + PATH_EMPTY$),\n        URI$ = subexp(SCHEME$ + \"\\\\:\" + HIER_PART$ + subexp(\"\\\\?\" + QUERY$) + \"?\" + subexp(\"\\\\#\" + FRAGMENT$) + \"?\"),\n        RELATIVE_PART$ = subexp(subexp(\"\\\\/\\\\/\" + AUTHORITY$ + PATH_ABEMPTY$) + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_NOSCHEME$ + \"|\" + PATH_EMPTY$),\n        RELATIVE$ = subexp(RELATIVE_PART$ + subexp(\"\\\\?\" + QUERY$) + \"?\" + subexp(\"\\\\#\" + FRAGMENT$) + \"?\"),\n        URI_REFERENCE$ = subexp(URI$ + \"|\" + RELATIVE$),\n        ABSOLUTE_URI$ = subexp(SCHEME$ + \"\\\\:\" + HIER_PART$ + subexp(\"\\\\?\" + QUERY$) + \"?\"),\n        GENERIC_REF$ = \"^(\" + SCHEME$ + \")\\\\:\" + subexp(subexp(\"\\\\/\\\\/(\" + subexp(\"(\" + USERINFO$ + \")@\") + \"?(\" + HOST$ + \")\" + subexp(\"\\\\:(\" + PORT$ + \")\") + \"?)\") + \"?(\" + PATH_ABEMPTY$ + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_ROOTLESS$ + \"|\" + PATH_EMPTY$ + \")\") + subexp(\"\\\\?(\" + QUERY$ + \")\") + \"?\" + subexp(\"\\\\#(\" + FRAGMENT$ + \")\") + \"?$\",\n        RELATIVE_REF$ = \"^(){0}\" + subexp(subexp(\"\\\\/\\\\/(\" + subexp(\"(\" + USERINFO$ + \")@\") + \"?(\" + HOST$ + \")\" + subexp(\"\\\\:(\" + PORT$ + \")\") + \"?)\") + \"?(\" + PATH_ABEMPTY$ + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_NOSCHEME$ + \"|\" + PATH_EMPTY$ + \")\") + subexp(\"\\\\?(\" + QUERY$ + \")\") + \"?\" + subexp(\"\\\\#(\" + FRAGMENT$ + \")\") + \"?$\",\n        ABSOLUTE_REF$ = \"^(\" + SCHEME$ + \")\\\\:\" + subexp(subexp(\"\\\\/\\\\/(\" + subexp(\"(\" + USERINFO$ + \")@\") + \"?(\" + HOST$ + \")\" + subexp(\"\\\\:(\" + PORT$ + \")\") + \"?)\") + \"?(\" + PATH_ABEMPTY$ + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_ROOTLESS$ + \"|\" + PATH_EMPTY$ + \")\") + subexp(\"\\\\?(\" + QUERY$ + \")\") + \"?$\",\n        SAMEDOC_REF$ = \"^\" + subexp(\"\\\\#(\" + FRAGMENT$ + \")\") + \"?$\",\n        AUTHORITY_REF$ = \"^\" + subexp(\"(\" + USERINFO$ + \")@\") + \"?(\" + HOST$ + \")\" + subexp(\"\\\\:(\" + PORT$ + \")\") + \"?$\";\n  return {\n    NOT_SCHEME: new RegExp(merge(\"[^]\", ALPHA$$, DIGIT$$, \"[\\\\+\\\\-\\\\.]\"), \"g\"),\n    NOT_USERINFO: new RegExp(merge(\"[^\\\\%\\\\:]\", UNRESERVED$$, SUB_DELIMS$$), \"g\"),\n    NOT_HOST: new RegExp(merge(\"[^\\\\%\\\\[\\\\]\\\\:]\", UNRESERVED$$, SUB_DELIMS$$), \"g\"),\n    NOT_PATH: new RegExp(merge(\"[^\\\\%\\\\/\\\\:\\\\@]\", UNRESERVED$$, SUB_DELIMS$$), \"g\"),\n    NOT_PATH_NOSCHEME: new RegExp(merge(\"[^\\\\%\\\\/\\\\@]\", UNRESERVED$$, SUB_DELIMS$$), \"g\"),\n    NOT_QUERY: new RegExp(merge(\"[^\\\\%]\", UNRESERVED$$, SUB_DELIMS$$, \"[\\\\:\\\\@\\\\/\\\\?]\", IPRIVATE$$), \"g\"),\n    NOT_FRAGMENT: new RegExp(merge(\"[^\\\\%]\", UNRESERVED$$, SUB_DELIMS$$, \"[\\\\:\\\\@\\\\/\\\\?]\"), \"g\"),\n    ESCAPE: new RegExp(merge(\"[^]\", UNRESERVED$$, SUB_DELIMS$$), \"g\"),\n    UNRESERVED: new RegExp(UNRESERVED$$, \"g\"),\n    OTHER_CHARS: new RegExp(merge(\"[^\\\\%]\", UNRESERVED$$, RESERVED$$), \"g\"),\n    PCT_ENCODED: new RegExp(PCT_ENCODED$, \"g\"),\n    IPV4ADDRESS: new RegExp(\"^(\" + IPV4ADDRESS$ + \")$\"),\n    IPV6ADDRESS: new RegExp(\"^\\\\[?(\" + IPV6ADDRESS$ + \")\" + subexp(subexp(\"\\\\%25|\\\\%(?!\" + HEXDIG$$ + \"{2})\") + \"(\" + ZONEID$ + \")\") + \"?\\\\]?$\") //RFC 6874, with relaxed parsing rules\n\n  };\n}\nexport default buildExps(false);","map":{"version":3,"mappings":"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","names":["merge","subexp","isIRI","ALPHA$$","CR$","DIGIT$$","DQUOTE$$","HEXDIG$$","LF$$","SP$$","PCT_ENCODED$","GEN_DELIMS$$","SUB_DELIMS$$","RESERVED$$","UCSCHAR$$","IPRIVATE$$","UNRESERVED$$","SCHEME$","USERINFO$","DEC_OCTET$","DEC_OCTET_RELAXED$","IPV4ADDRESS$","H16$","LS32$","IPV6ADDRESS1$","IPV6ADDRESS2$","IPV6ADDRESS3$","IPV6ADDRESS4$","IPV6ADDRESS5$","IPV6ADDRESS6$","IPV6ADDRESS7$","IPV6ADDRESS8$","IPV6ADDRESS9$","IPV6ADDRESS$","join","ZONEID$","IPV6ADDRZ$","IPV6ADDRZ_RELAXED$","IPVFUTURE$","IP_LITERAL$","REG_NAME$","HOST$","PORT$","AUTHORITY$","PCHAR$","SEGMENT$","SEGMENT_NZ$","SEGMENT_NZ_NC$","PATH_ABEMPTY$","PATH_ABSOLUTE$","PATH_NOSCHEME$","PATH_ROOTLESS$","PATH_EMPTY$","PATH$","QUERY$","FRAGMENT$","HIER_PART$","URI$","RELATIVE_PART$","RELATIVE$","URI_REFERENCE$","ABSOLUTE_URI$","GENERIC_REF$","RELATIVE_REF$","ABSOLUTE_REF$","SAMEDOC_REF$","AUTHORITY_REF$","NOT_SCHEME","RegExp","NOT_USERINFO","NOT_HOST","NOT_PATH","NOT_PATH_NOSCHEME","NOT_QUERY","NOT_FRAGMENT","ESCAPE","UNRESERVED","OTHER_CHARS","PCT_ENCODED","IPV4ADDRESS","IPV6ADDRESS","buildExps"],"sources":["../../src/regexps-uri.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}