{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Variable = void 0;\n\nconst VariableBase_1 = require(\"./VariableBase\");\n/**\n * A Variable represents a locally scoped identifier. These include arguments to functions.\n */\n\n\nclass Variable extends VariableBase_1.VariableBase {\n  /**\n   * `true` if the variable is valid in a type context, false otherwise\n   * @public\n   */\n  get isTypeVariable() {\n    if (this.defs.length === 0) {\n      // we don't statically know whether this is a type or a value\n      return true;\n    }\n\n    return this.defs.some(def => def.isTypeDefinition);\n  }\n  /**\n   * `true` if the variable is valid in a value context, false otherwise\n   * @public\n   */\n\n\n  get isValueVariable() {\n    if (this.defs.length === 0) {\n      // we don't statically know whether this is a type or a value\n      return true;\n    }\n\n    return this.defs.some(def => def.isVariableDefinition);\n  }\n\n}\n\nexports.Variable = Variable;","map":{"version":3,"mappings":";;;;;;;AAAA;AAEA;;;;;AAGA,MAAMA,QAAN,SAAuBC,2BAAvB,CAAmC;EACjC;;;;EAIyB,IAAdC,cAAc;IACvB,IAAI,KAAKC,IAAL,CAAUC,MAAV,KAAqB,CAAzB,EAA4B;MAC1B;MACA,OAAO,IAAP;IACD;;IAED,OAAO,KAAKD,IAAL,CAAUE,IAAV,CAAeC,GAAG,IAAIA,GAAG,CAACC,gBAA1B,CAAP;EACD;EAED;;;;;;EAI0B,IAAfC,eAAe;IACxB,IAAI,KAAKL,IAAL,CAAUC,MAAV,KAAqB,CAAzB,EAA4B;MAC1B;MACA,OAAO,IAAP;IACD;;IAED,OAAO,KAAKD,IAAL,CAAUE,IAAV,CAAeC,GAAG,IAAIA,GAAG,CAACG,oBAA1B,CAAP;EACD;;AAzBgC;;AA4B1BC","names":["Variable","VariableBase_1","isTypeVariable","defs","length","some","def","isTypeDefinition","isValueVariable","isVariableDefinition","exports"],"sources":["../../src/variable/Variable.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}