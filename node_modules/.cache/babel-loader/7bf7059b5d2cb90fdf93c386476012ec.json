{"ast":null,"code":"'use strict';\n\nvar EOL = require('os').EOL,\n    textElem = require('../../plugins/_collections.js').elemsGroups.textContent.concat('title');\n\nvar defaults = {\n  doctypeStart: '<!DOCTYPE',\n  doctypeEnd: '>',\n  procInstStart: '<?',\n  procInstEnd: '?>',\n  tagOpenStart: '<',\n  tagOpenEnd: '>',\n  tagCloseStart: '</',\n  tagCloseEnd: '>',\n  tagShortStart: '<',\n  tagShortEnd: '/>',\n  attrStart: '=\"',\n  attrEnd: '\"',\n  commentStart: '<!--',\n  commentEnd: '-->',\n  cdataStart: '<![CDATA[',\n  cdataEnd: ']]>',\n  textStart: '',\n  textEnd: '',\n  indent: 4,\n  regEntities: /[&'\"<>]/g,\n  regValEntities: /[&\"<>]/g,\n  encodeEntity: encodeEntity,\n  pretty: false,\n  useShortTags: true\n};\nvar entities = {\n  '&': '&amp;',\n  '\\'': '&apos;',\n  '\"': '&quot;',\n  '>': '&gt;',\n  '<': '&lt;'\n};\n/**\n * Convert SVG-as-JS object to SVG (XML) string.\n *\n * @param {Object} data input data\n * @param {Object} config config\n *\n * @return {Object} output data\n */\n\nmodule.exports = function (data, config) {\n  return new JS2SVG(config).convert(data);\n};\n\nfunction JS2SVG(config) {\n  if (config) {\n    this.config = Object.assign({}, defaults, config);\n  } else {\n    this.config = Object.assign({}, defaults);\n  }\n\n  var indent = this.config.indent;\n\n  if (typeof indent == 'number' && !isNaN(indent)) {\n    this.config.indent = indent < 0 ? '\\t' : ' '.repeat(indent);\n  } else if (typeof indent != 'string') {\n    this.config.indent = '    ';\n  }\n\n  if (this.config.pretty) {\n    this.config.doctypeEnd += EOL;\n    this.config.procInstEnd += EOL;\n    this.config.commentEnd += EOL;\n    this.config.cdataEnd += EOL;\n    this.config.tagShortEnd += EOL;\n    this.config.tagOpenEnd += EOL;\n    this.config.tagCloseEnd += EOL;\n    this.config.textEnd += EOL;\n  }\n\n  this.indentLevel = 0;\n  this.textContext = null;\n}\n\nfunction encodeEntity(char) {\n  return entities[char];\n}\n/**\n * Start conversion.\n *\n * @param {Object} data input data\n *\n * @return {String}\n */\n\n\nJS2SVG.prototype.convert = function (data) {\n  var svg = '';\n\n  if (data.content) {\n    this.indentLevel++;\n    data.content.forEach(function (item) {\n      if (item.elem) {\n        svg += this.createElem(item);\n      } else if (item.text) {\n        svg += this.createText(item.text);\n      } else if (item.doctype) {\n        svg += this.createDoctype(item.doctype);\n      } else if (item.processinginstruction) {\n        svg += this.createProcInst(item.processinginstruction);\n      } else if (item.comment) {\n        svg += this.createComment(item.comment);\n      } else if (item.cdata) {\n        svg += this.createCDATA(item.cdata);\n      }\n    }, this);\n  }\n\n  this.indentLevel--;\n  return {\n    data: svg,\n    info: {\n      width: this.width,\n      height: this.height\n    }\n  };\n};\n/**\n * Create indent string in accordance with the current node level.\n *\n * @return {String}\n */\n\n\nJS2SVG.prototype.createIndent = function () {\n  var indent = '';\n\n  if (this.config.pretty && !this.textContext) {\n    indent = this.config.indent.repeat(this.indentLevel - 1);\n  }\n\n  return indent;\n};\n/**\n * Create doctype tag.\n *\n * @param {String} doctype doctype body string\n *\n * @return {String}\n */\n\n\nJS2SVG.prototype.createDoctype = function (doctype) {\n  return this.config.doctypeStart + doctype + this.config.doctypeEnd;\n};\n/**\n * Create XML Processing Instruction tag.\n *\n * @param {Object} instruction instruction object\n *\n * @return {String}\n */\n\n\nJS2SVG.prototype.createProcInst = function (instruction) {\n  return this.config.procInstStart + instruction.name + ' ' + instruction.body + this.config.procInstEnd;\n};\n/**\n * Create comment tag.\n *\n * @param {String} comment comment body\n *\n * @return {String}\n */\n\n\nJS2SVG.prototype.createComment = function (comment) {\n  return this.config.commentStart + comment + this.config.commentEnd;\n};\n/**\n * Create CDATA section.\n *\n * @param {String} cdata CDATA body\n *\n * @return {String}\n */\n\n\nJS2SVG.prototype.createCDATA = function (cdata) {\n  return this.createIndent() + this.config.cdataStart + cdata + this.config.cdataEnd;\n};\n/**\n * Create element tag.\n *\n * @param {Object} data element object\n *\n * @return {String}\n */\n\n\nJS2SVG.prototype.createElem = function (data) {\n  // beautiful injection for obtaining SVG information :)\n  if (data.isElem('svg') && data.hasAttr('width') && data.hasAttr('height')) {\n    this.width = data.attr('width').value;\n    this.height = data.attr('height').value;\n  } // empty element and short tag\n\n\n  if (data.isEmpty()) {\n    if (this.config.useShortTags) {\n      return this.createIndent() + this.config.tagShortStart + data.elem + this.createAttrs(data) + this.config.tagShortEnd;\n    } else {\n      return this.createIndent() + this.config.tagShortStart + data.elem + this.createAttrs(data) + this.config.tagOpenEnd + this.config.tagCloseStart + data.elem + this.config.tagCloseEnd;\n    } // non-empty element\n\n  } else {\n    var tagOpenStart = this.config.tagOpenStart,\n        tagOpenEnd = this.config.tagOpenEnd,\n        tagCloseStart = this.config.tagCloseStart,\n        tagCloseEnd = this.config.tagCloseEnd,\n        openIndent = this.createIndent(),\n        textIndent = '',\n        processedData = '',\n        dataEnd = '';\n\n    if (this.textContext) {\n      tagOpenStart = defaults.tagOpenStart;\n      tagOpenEnd = defaults.tagOpenEnd;\n      tagCloseStart = defaults.tagCloseStart;\n      tagCloseEnd = defaults.tagCloseEnd;\n      openIndent = '';\n    } else if (data.isElem(textElem)) {\n      if (this.config.pretty) {\n        textIndent += openIndent + this.config.indent;\n      }\n\n      this.textContext = data;\n    }\n\n    processedData += this.convert(data).data;\n\n    if (this.textContext == data) {\n      this.textContext = null;\n      if (this.config.pretty) dataEnd = EOL;\n    }\n\n    return openIndent + tagOpenStart + data.elem + this.createAttrs(data) + tagOpenEnd + textIndent + processedData + dataEnd + this.createIndent() + tagCloseStart + data.elem + tagCloseEnd;\n  }\n};\n/**\n * Create element attributes.\n *\n * @param {Object} elem attributes object\n *\n * @return {String}\n */\n\n\nJS2SVG.prototype.createAttrs = function (elem) {\n  var attrs = '';\n  elem.eachAttr(function (attr) {\n    if (attr.value !== undefined) {\n      attrs += ' ' + attr.name + this.config.attrStart + String(attr.value).replace(this.config.regValEntities, this.config.encodeEntity) + this.config.attrEnd;\n    } else {\n      attrs += ' ' + attr.name;\n    }\n  }, this);\n  return attrs;\n};\n/**\n * Create text node.\n *\n * @param {String} text text\n *\n * @return {String}\n */\n\n\nJS2SVG.prototype.createText = function (text) {\n  return this.createIndent() + this.config.textStart + text.replace(this.config.regEntities, this.config.encodeEntity) + (this.textContext ? '' : this.config.textEnd);\n};","map":{"version":3,"names":["EOL","require","textElem","elemsGroups","textContent","concat","defaults","doctypeStart","doctypeEnd","procInstStart","procInstEnd","tagOpenStart","tagOpenEnd","tagCloseStart","tagCloseEnd","tagShortStart","tagShortEnd","attrStart","attrEnd","commentStart","commentEnd","cdataStart","cdataEnd","textStart","textEnd","indent","regEntities","regValEntities","encodeEntity","pretty","useShortTags","entities","module","exports","data","config","JS2SVG","convert","Object","assign","isNaN","repeat","indentLevel","textContext","char","prototype","svg","content","forEach","item","elem","createElem","text","createText","doctype","createDoctype","processinginstruction","createProcInst","comment","createComment","cdata","createCDATA","info","width","height","createIndent","instruction","name","body","isElem","hasAttr","attr","value","isEmpty","createAttrs","openIndent","textIndent","processedData","dataEnd","attrs","eachAttr","undefined","String","replace"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/svgo/lib/svgo/js2svg.js"],"sourcesContent":["'use strict';\n\nvar EOL = require('os').EOL,\n    textElem = require('../../plugins/_collections.js').elemsGroups.textContent.concat('title');\n\nvar defaults = {\n    doctypeStart: '<!DOCTYPE',\n    doctypeEnd: '>',\n    procInstStart: '<?',\n    procInstEnd: '?>',\n    tagOpenStart: '<',\n    tagOpenEnd: '>',\n    tagCloseStart: '</',\n    tagCloseEnd: '>',\n    tagShortStart: '<',\n    tagShortEnd: '/>',\n    attrStart: '=\"',\n    attrEnd: '\"',\n    commentStart: '<!--',\n    commentEnd: '-->',\n    cdataStart: '<![CDATA[',\n    cdataEnd: ']]>',\n    textStart: '',\n    textEnd: '',\n    indent: 4,\n    regEntities: /[&'\"<>]/g,\n    regValEntities: /[&\"<>]/g,\n    encodeEntity: encodeEntity,\n    pretty: false,\n    useShortTags: true\n};\n\nvar entities = {\n      '&': '&amp;',\n      '\\'': '&apos;',\n      '\"': '&quot;',\n      '>': '&gt;',\n      '<': '&lt;',\n    };\n\n/**\n * Convert SVG-as-JS object to SVG (XML) string.\n *\n * @param {Object} data input data\n * @param {Object} config config\n *\n * @return {Object} output data\n */\nmodule.exports = function(data, config) {\n\n    return new JS2SVG(config).convert(data);\n\n};\n\nfunction JS2SVG(config) {\n\n    if (config) {\n        this.config = Object.assign({}, defaults, config);\n    } else {\n        this.config = Object.assign({}, defaults);\n    }\n\n    var indent = this.config.indent;\n    if (typeof indent == 'number' && !isNaN(indent)) {\n        this.config.indent = (indent < 0) ? '\\t' : ' '.repeat(indent);\n    } else if (typeof indent != 'string') {\n        this.config.indent = '    ';\n    }\n\n    if (this.config.pretty) {\n        this.config.doctypeEnd += EOL;\n        this.config.procInstEnd += EOL;\n        this.config.commentEnd += EOL;\n        this.config.cdataEnd += EOL;\n        this.config.tagShortEnd += EOL;\n        this.config.tagOpenEnd += EOL;\n        this.config.tagCloseEnd += EOL;\n        this.config.textEnd += EOL;\n    }\n\n    this.indentLevel = 0;\n    this.textContext = null;\n\n}\n\nfunction encodeEntity(char) {\n    return entities[char];\n}\n\n/**\n * Start conversion.\n *\n * @param {Object} data input data\n *\n * @return {String}\n */\nJS2SVG.prototype.convert = function(data) {\n\n    var svg = '';\n\n    if (data.content) {\n\n        this.indentLevel++;\n\n        data.content.forEach(function(item) {\n\n            if (item.elem) {\n               svg += this.createElem(item);\n            } else if (item.text) {\n               svg += this.createText(item.text);\n            } else if (item.doctype) {\n                svg += this.createDoctype(item.doctype);\n            } else if (item.processinginstruction) {\n                svg += this.createProcInst(item.processinginstruction);\n            } else if (item.comment) {\n                svg += this.createComment(item.comment);\n            } else if (item.cdata) {\n                svg += this.createCDATA(item.cdata);\n            }\n\n        }, this);\n\n    }\n\n    this.indentLevel--;\n\n    return {\n        data: svg,\n        info: {\n            width: this.width,\n            height: this.height\n        }\n    };\n\n};\n\n/**\n * Create indent string in accordance with the current node level.\n *\n * @return {String}\n */\nJS2SVG.prototype.createIndent = function() {\n\n    var indent = '';\n\n    if (this.config.pretty && !this.textContext) {\n        indent = this.config.indent.repeat(this.indentLevel - 1);\n    }\n\n    return indent;\n\n};\n\n/**\n * Create doctype tag.\n *\n * @param {String} doctype doctype body string\n *\n * @return {String}\n */\nJS2SVG.prototype.createDoctype = function(doctype) {\n\n    return  this.config.doctypeStart +\n            doctype +\n            this.config.doctypeEnd;\n\n};\n\n/**\n * Create XML Processing Instruction tag.\n *\n * @param {Object} instruction instruction object\n *\n * @return {String}\n */\nJS2SVG.prototype.createProcInst = function(instruction) {\n\n    return  this.config.procInstStart +\n            instruction.name +\n            ' ' +\n            instruction.body +\n            this.config.procInstEnd;\n\n};\n\n/**\n * Create comment tag.\n *\n * @param {String} comment comment body\n *\n * @return {String}\n */\nJS2SVG.prototype.createComment = function(comment) {\n\n    return  this.config.commentStart +\n            comment +\n            this.config.commentEnd;\n\n};\n\n/**\n * Create CDATA section.\n *\n * @param {String} cdata CDATA body\n *\n * @return {String}\n */\nJS2SVG.prototype.createCDATA = function(cdata) {\n\n    return  this.createIndent() +\n            this.config.cdataStart +\n            cdata +\n            this.config.cdataEnd;\n\n};\n\n/**\n * Create element tag.\n *\n * @param {Object} data element object\n *\n * @return {String}\n */\nJS2SVG.prototype.createElem = function(data) {\n\n    // beautiful injection for obtaining SVG information :)\n    if (\n        data.isElem('svg') &&\n        data.hasAttr('width') &&\n        data.hasAttr('height')\n    ) {\n        this.width = data.attr('width').value;\n        this.height = data.attr('height').value;\n    }\n\n    // empty element and short tag\n    if (data.isEmpty()) {\n        if (this.config.useShortTags) {\n            return this.createIndent() +\n                   this.config.tagShortStart +\n                   data.elem +\n                   this.createAttrs(data) +\n                   this.config.tagShortEnd;\n        } else {\n            return this.createIndent() +\n                   this.config.tagShortStart +\n                   data.elem +\n                   this.createAttrs(data) +\n                   this.config.tagOpenEnd +\n                   this.config.tagCloseStart +\n                   data.elem +\n                   this.config.tagCloseEnd;\n        }\n    // non-empty element\n    } else {\n        var tagOpenStart = this.config.tagOpenStart,\n            tagOpenEnd = this.config.tagOpenEnd,\n            tagCloseStart = this.config.tagCloseStart,\n            tagCloseEnd = this.config.tagCloseEnd,\n            openIndent = this.createIndent(),\n            textIndent = '',\n            processedData = '',\n            dataEnd = '';\n\n        if (this.textContext) {\n            tagOpenStart = defaults.tagOpenStart;\n            tagOpenEnd = defaults.tagOpenEnd;\n            tagCloseStart = defaults.tagCloseStart;\n            tagCloseEnd = defaults.tagCloseEnd;\n            openIndent = '';\n        } else if (data.isElem(textElem)) {\n            if (this.config.pretty) {\n                textIndent += openIndent + this.config.indent;\n            }\n            this.textContext = data;\n        }\n\n        processedData += this.convert(data).data;\n\n        if (this.textContext == data) {\n            this.textContext = null;\n            if (this.config.pretty) dataEnd = EOL;\n        }\n\n        return  openIndent +\n                tagOpenStart +\n                data.elem +\n                this.createAttrs(data) +\n                tagOpenEnd +\n                textIndent +\n                processedData +\n                dataEnd +\n                this.createIndent() +\n                tagCloseStart +\n                data.elem +\n                tagCloseEnd;\n\n    }\n\n};\n\n/**\n * Create element attributes.\n *\n * @param {Object} elem attributes object\n *\n * @return {String}\n */\nJS2SVG.prototype.createAttrs = function(elem) {\n\n    var attrs = '';\n\n    elem.eachAttr(function(attr) {\n\n        if (attr.value !== undefined) {\n            attrs +=    ' ' +\n                        attr.name +\n                        this.config.attrStart +\n                        String(attr.value).replace(this.config.regValEntities, this.config.encodeEntity) +\n                        this.config.attrEnd;\n        }\n        else {\n            attrs +=    ' ' +\n                        attr.name;\n        }\n\n\n    }, this);\n\n    return attrs;\n\n};\n\n/**\n * Create text node.\n *\n * @param {String} text text\n *\n * @return {String}\n */\nJS2SVG.prototype.createText = function(text) {\n\n    return  this.createIndent() +\n            this.config.textStart +\n            text.replace(this.config.regEntities, this.config.encodeEntity) +\n            (this.textContext ? '' : this.config.textEnd);\n\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}