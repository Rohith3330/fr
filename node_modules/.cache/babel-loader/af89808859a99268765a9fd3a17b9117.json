{"ast":null,"code":"'use strict';\n\nexports.name = 'cleanupAttrs';\nexports.type = 'visitor';\nexports.active = true;\nexports.description = 'cleanups attributes from newlines, trailing and repeating spaces';\nconst regNewlinesNeedSpace = /(\\S)\\r?\\n(\\S)/g;\nconst regNewlines = /\\r?\\n/g;\nconst regSpaces = /\\s{2,}/g;\n/**\n * Cleanup attributes values from newlines, trailing and repeating spaces.\n *\n * @author Kir Belevich\n *\n * @type {import('../lib/types').Plugin<{\n *   newlines?: boolean,\n *   trim?: boolean,\n *   spaces?: boolean\n * }>}\n */\n\nexports.fn = (root, params) => {\n  const {\n    newlines = true,\n    trim = true,\n    spaces = true\n  } = params;\n  return {\n    element: {\n      enter: node => {\n        for (const name of Object.keys(node.attributes)) {\n          if (newlines) {\n            // new line which requires a space instead of themselve\n            node.attributes[name] = node.attributes[name].replace(regNewlinesNeedSpace, (match, p1, p2) => p1 + ' ' + p2); // simple new line\n\n            node.attributes[name] = node.attributes[name].replace(regNewlines, '');\n          }\n\n          if (trim) {\n            node.attributes[name] = node.attributes[name].trim();\n          }\n\n          if (spaces) {\n            node.attributes[name] = node.attributes[name].replace(regSpaces, ' ');\n          }\n        }\n      }\n    }\n  };\n};","map":{"version":3,"names":["exports","name","type","active","description","regNewlinesNeedSpace","regNewlines","regSpaces","fn","root","params","newlines","trim","spaces","element","enter","node","Object","keys","attributes","replace","match","p1","p2"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/postcss-svgo/node_modules/svgo/plugins/cleanupAttrs.js"],"sourcesContent":["'use strict';\n\nexports.name = 'cleanupAttrs';\nexports.type = 'visitor';\nexports.active = true;\nexports.description =\n  'cleanups attributes from newlines, trailing and repeating spaces';\n\nconst regNewlinesNeedSpace = /(\\S)\\r?\\n(\\S)/g;\nconst regNewlines = /\\r?\\n/g;\nconst regSpaces = /\\s{2,}/g;\n\n/**\n * Cleanup attributes values from newlines, trailing and repeating spaces.\n *\n * @author Kir Belevich\n *\n * @type {import('../lib/types').Plugin<{\n *   newlines?: boolean,\n *   trim?: boolean,\n *   spaces?: boolean\n * }>}\n */\nexports.fn = (root, params) => {\n  const { newlines = true, trim = true, spaces = true } = params;\n  return {\n    element: {\n      enter: (node) => {\n        for (const name of Object.keys(node.attributes)) {\n          if (newlines) {\n            // new line which requires a space instead of themselve\n            node.attributes[name] = node.attributes[name].replace(\n              regNewlinesNeedSpace,\n              (match, p1, p2) => p1 + ' ' + p2\n            );\n            // simple new line\n            node.attributes[name] = node.attributes[name].replace(\n              regNewlines,\n              ''\n            );\n          }\n          if (trim) {\n            node.attributes[name] = node.attributes[name].trim();\n          }\n          if (spaces) {\n            node.attributes[name] = node.attributes[name].replace(\n              regSpaces,\n              ' '\n            );\n          }\n        }\n      },\n    },\n  };\n};\n"],"mappings":"AAAA;;AAEAA,OAAO,CAACC,IAAR,GAAe,cAAf;AACAD,OAAO,CAACE,IAAR,GAAe,SAAf;AACAF,OAAO,CAACG,MAAR,GAAiB,IAAjB;AACAH,OAAO,CAACI,WAAR,GACE,kEADF;AAGA,MAAMC,oBAAoB,GAAG,gBAA7B;AACA,MAAMC,WAAW,GAAG,QAApB;AACA,MAAMC,SAAS,GAAG,SAAlB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAP,OAAO,CAACQ,EAAR,GAAa,CAACC,IAAD,EAAOC,MAAP,KAAkB;EAC7B,MAAM;IAAEC,QAAQ,GAAG,IAAb;IAAmBC,IAAI,GAAG,IAA1B;IAAgCC,MAAM,GAAG;EAAzC,IAAkDH,MAAxD;EACA,OAAO;IACLI,OAAO,EAAE;MACPC,KAAK,EAAGC,IAAD,IAAU;QACf,KAAK,MAAMf,IAAX,IAAmBgB,MAAM,CAACC,IAAP,CAAYF,IAAI,CAACG,UAAjB,CAAnB,EAAiD;UAC/C,IAAIR,QAAJ,EAAc;YACZ;YACAK,IAAI,CAACG,UAAL,CAAgBlB,IAAhB,IAAwBe,IAAI,CAACG,UAAL,CAAgBlB,IAAhB,EAAsBmB,OAAtB,CACtBf,oBADsB,EAEtB,CAACgB,KAAD,EAAQC,EAAR,EAAYC,EAAZ,KAAmBD,EAAE,GAAG,GAAL,GAAWC,EAFR,CAAxB,CAFY,CAMZ;;YACAP,IAAI,CAACG,UAAL,CAAgBlB,IAAhB,IAAwBe,IAAI,CAACG,UAAL,CAAgBlB,IAAhB,EAAsBmB,OAAtB,CACtBd,WADsB,EAEtB,EAFsB,CAAxB;UAID;;UACD,IAAIM,IAAJ,EAAU;YACRI,IAAI,CAACG,UAAL,CAAgBlB,IAAhB,IAAwBe,IAAI,CAACG,UAAL,CAAgBlB,IAAhB,EAAsBW,IAAtB,EAAxB;UACD;;UACD,IAAIC,MAAJ,EAAY;YACVG,IAAI,CAACG,UAAL,CAAgBlB,IAAhB,IAAwBe,IAAI,CAACG,UAAL,CAAgBlB,IAAhB,EAAsBmB,OAAtB,CACtBb,SADsB,EAEtB,GAFsB,CAAxB;UAID;QACF;MACF;IAzBM;EADJ,CAAP;AA6BD,CA/BD"},"metadata":{},"sourceType":"script"}