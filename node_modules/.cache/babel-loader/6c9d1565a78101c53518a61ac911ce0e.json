{"ast":null,"code":"'use strict';\n\nconst os = require('os');\n\nconst tty = require('tty');\n\nconst hasFlag = require('has-flag');\n\nconst {\n  env\n} = process;\nlet forceColor;\n\nif (hasFlag('no-color') || hasFlag('no-colors') || hasFlag('color=false') || hasFlag('color=never')) {\n  forceColor = 0;\n} else if (hasFlag('color') || hasFlag('colors') || hasFlag('color=true') || hasFlag('color=always')) {\n  forceColor = 1;\n}\n\nif ('FORCE_COLOR' in env) {\n  if (env.FORCE_COLOR === 'true') {\n    forceColor = 1;\n  } else if (env.FORCE_COLOR === 'false') {\n    forceColor = 0;\n  } else {\n    forceColor = env.FORCE_COLOR.length === 0 ? 1 : Math.min(parseInt(env.FORCE_COLOR, 10), 3);\n  }\n}\n\nfunction translateLevel(level) {\n  if (level === 0) {\n    return false;\n  }\n\n  return {\n    level,\n    hasBasic: true,\n    has256: level >= 2,\n    has16m: level >= 3\n  };\n}\n\nfunction supportsColor(haveStream, streamIsTTY) {\n  if (forceColor === 0) {\n    return 0;\n  }\n\n  if (hasFlag('color=16m') || hasFlag('color=full') || hasFlag('color=truecolor')) {\n    return 3;\n  }\n\n  if (hasFlag('color=256')) {\n    return 2;\n  }\n\n  if (haveStream && !streamIsTTY && forceColor === undefined) {\n    return 0;\n  }\n\n  const min = forceColor || 0;\n\n  if (env.TERM === 'dumb') {\n    return min;\n  }\n\n  if (process.platform === 'win32') {\n    // Windows 10 build 10586 is the first Windows release that supports 256 colors.\n    // Windows 10 build 14931 is the first release that supports 16m/TrueColor.\n    const osRelease = os.release().split('.');\n\n    if (Number(osRelease[0]) >= 10 && Number(osRelease[2]) >= 10586) {\n      return Number(osRelease[2]) >= 14931 ? 3 : 2;\n    }\n\n    return 1;\n  }\n\n  if ('CI' in env) {\n    if (['TRAVIS', 'CIRCLECI', 'APPVEYOR', 'GITLAB_CI', 'GITHUB_ACTIONS', 'BUILDKITE'].some(sign => sign in env) || env.CI_NAME === 'codeship') {\n      return 1;\n    }\n\n    return min;\n  }\n\n  if ('TEAMCITY_VERSION' in env) {\n    return /^(9\\.(0*[1-9]\\d*)\\.|\\d{2,}\\.)/.test(env.TEAMCITY_VERSION) ? 1 : 0;\n  }\n\n  if (env.COLORTERM === 'truecolor') {\n    return 3;\n  }\n\n  if ('TERM_PROGRAM' in env) {\n    const version = parseInt((env.TERM_PROGRAM_VERSION || '').split('.')[0], 10);\n\n    switch (env.TERM_PROGRAM) {\n      case 'iTerm.app':\n        return version >= 3 ? 3 : 2;\n\n      case 'Apple_Terminal':\n        return 2;\n      // No default\n    }\n  }\n\n  if (/-256(color)?$/i.test(env.TERM)) {\n    return 2;\n  }\n\n  if (/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(env.TERM)) {\n    return 1;\n  }\n\n  if ('COLORTERM' in env) {\n    return 1;\n  }\n\n  return min;\n}\n\nfunction getSupportLevel(stream) {\n  const level = supportsColor(stream, stream && stream.isTTY);\n  return translateLevel(level);\n}\n\nmodule.exports = {\n  supportsColor: getSupportLevel,\n  stdout: translateLevel(supportsColor(true, tty.isatty(1))),\n  stderr: translateLevel(supportsColor(true, tty.isatty(2)))\n};","map":{"version":3,"names":["os","require","tty","hasFlag","env","process","forceColor","FORCE_COLOR","length","Math","min","parseInt","translateLevel","level","hasBasic","has256","has16m","supportsColor","haveStream","streamIsTTY","undefined","TERM","platform","osRelease","release","split","Number","some","sign","CI_NAME","test","TEAMCITY_VERSION","COLORTERM","version","TERM_PROGRAM_VERSION","TERM_PROGRAM","getSupportLevel","stream","isTTY","module","exports","stdout","isatty","stderr"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/@jest/types/node_modules/supports-color/index.js"],"sourcesContent":["'use strict';\nconst os = require('os');\nconst tty = require('tty');\nconst hasFlag = require('has-flag');\n\nconst {env} = process;\n\nlet forceColor;\nif (hasFlag('no-color') ||\n\thasFlag('no-colors') ||\n\thasFlag('color=false') ||\n\thasFlag('color=never')) {\n\tforceColor = 0;\n} else if (hasFlag('color') ||\n\thasFlag('colors') ||\n\thasFlag('color=true') ||\n\thasFlag('color=always')) {\n\tforceColor = 1;\n}\n\nif ('FORCE_COLOR' in env) {\n\tif (env.FORCE_COLOR === 'true') {\n\t\tforceColor = 1;\n\t} else if (env.FORCE_COLOR === 'false') {\n\t\tforceColor = 0;\n\t} else {\n\t\tforceColor = env.FORCE_COLOR.length === 0 ? 1 : Math.min(parseInt(env.FORCE_COLOR, 10), 3);\n\t}\n}\n\nfunction translateLevel(level) {\n\tif (level === 0) {\n\t\treturn false;\n\t}\n\n\treturn {\n\t\tlevel,\n\t\thasBasic: true,\n\t\thas256: level >= 2,\n\t\thas16m: level >= 3\n\t};\n}\n\nfunction supportsColor(haveStream, streamIsTTY) {\n\tif (forceColor === 0) {\n\t\treturn 0;\n\t}\n\n\tif (hasFlag('color=16m') ||\n\t\thasFlag('color=full') ||\n\t\thasFlag('color=truecolor')) {\n\t\treturn 3;\n\t}\n\n\tif (hasFlag('color=256')) {\n\t\treturn 2;\n\t}\n\n\tif (haveStream && !streamIsTTY && forceColor === undefined) {\n\t\treturn 0;\n\t}\n\n\tconst min = forceColor || 0;\n\n\tif (env.TERM === 'dumb') {\n\t\treturn min;\n\t}\n\n\tif (process.platform === 'win32') {\n\t\t// Windows 10 build 10586 is the first Windows release that supports 256 colors.\n\t\t// Windows 10 build 14931 is the first release that supports 16m/TrueColor.\n\t\tconst osRelease = os.release().split('.');\n\t\tif (\n\t\t\tNumber(osRelease[0]) >= 10 &&\n\t\t\tNumber(osRelease[2]) >= 10586\n\t\t) {\n\t\t\treturn Number(osRelease[2]) >= 14931 ? 3 : 2;\n\t\t}\n\n\t\treturn 1;\n\t}\n\n\tif ('CI' in env) {\n\t\tif (['TRAVIS', 'CIRCLECI', 'APPVEYOR', 'GITLAB_CI', 'GITHUB_ACTIONS', 'BUILDKITE'].some(sign => sign in env) || env.CI_NAME === 'codeship') {\n\t\t\treturn 1;\n\t\t}\n\n\t\treturn min;\n\t}\n\n\tif ('TEAMCITY_VERSION' in env) {\n\t\treturn /^(9\\.(0*[1-9]\\d*)\\.|\\d{2,}\\.)/.test(env.TEAMCITY_VERSION) ? 1 : 0;\n\t}\n\n\tif (env.COLORTERM === 'truecolor') {\n\t\treturn 3;\n\t}\n\n\tif ('TERM_PROGRAM' in env) {\n\t\tconst version = parseInt((env.TERM_PROGRAM_VERSION || '').split('.')[0], 10);\n\n\t\tswitch (env.TERM_PROGRAM) {\n\t\t\tcase 'iTerm.app':\n\t\t\t\treturn version >= 3 ? 3 : 2;\n\t\t\tcase 'Apple_Terminal':\n\t\t\t\treturn 2;\n\t\t\t// No default\n\t\t}\n\t}\n\n\tif (/-256(color)?$/i.test(env.TERM)) {\n\t\treturn 2;\n\t}\n\n\tif (/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(env.TERM)) {\n\t\treturn 1;\n\t}\n\n\tif ('COLORTERM' in env) {\n\t\treturn 1;\n\t}\n\n\treturn min;\n}\n\nfunction getSupportLevel(stream) {\n\tconst level = supportsColor(stream, stream && stream.isTTY);\n\treturn translateLevel(level);\n}\n\nmodule.exports = {\n\tsupportsColor: getSupportLevel,\n\tstdout: translateLevel(supportsColor(true, tty.isatty(1))),\n\tstderr: translateLevel(supportsColor(true, tty.isatty(2)))\n};\n"],"mappings":"AAAA;;AACA,MAAMA,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAlB;;AACA,MAAMC,GAAG,GAAGD,OAAO,CAAC,KAAD,CAAnB;;AACA,MAAME,OAAO,GAAGF,OAAO,CAAC,UAAD,CAAvB;;AAEA,MAAM;EAACG;AAAD,IAAQC,OAAd;AAEA,IAAIC,UAAJ;;AACA,IAAIH,OAAO,CAAC,UAAD,CAAP,IACHA,OAAO,CAAC,WAAD,CADJ,IAEHA,OAAO,CAAC,aAAD,CAFJ,IAGHA,OAAO,CAAC,aAAD,CAHR,EAGyB;EACxBG,UAAU,GAAG,CAAb;AACA,CALD,MAKO,IAAIH,OAAO,CAAC,OAAD,CAAP,IACVA,OAAO,CAAC,QAAD,CADG,IAEVA,OAAO,CAAC,YAAD,CAFG,IAGVA,OAAO,CAAC,cAAD,CAHD,EAGmB;EACzBG,UAAU,GAAG,CAAb;AACA;;AAED,IAAI,iBAAiBF,GAArB,EAA0B;EACzB,IAAIA,GAAG,CAACG,WAAJ,KAAoB,MAAxB,EAAgC;IAC/BD,UAAU,GAAG,CAAb;EACA,CAFD,MAEO,IAAIF,GAAG,CAACG,WAAJ,KAAoB,OAAxB,EAAiC;IACvCD,UAAU,GAAG,CAAb;EACA,CAFM,MAEA;IACNA,UAAU,GAAGF,GAAG,CAACG,WAAJ,CAAgBC,MAAhB,KAA2B,CAA3B,GAA+B,CAA/B,GAAmCC,IAAI,CAACC,GAAL,CAASC,QAAQ,CAACP,GAAG,CAACG,WAAL,EAAkB,EAAlB,CAAjB,EAAwC,CAAxC,CAAhD;EACA;AACD;;AAED,SAASK,cAAT,CAAwBC,KAAxB,EAA+B;EAC9B,IAAIA,KAAK,KAAK,CAAd,EAAiB;IAChB,OAAO,KAAP;EACA;;EAED,OAAO;IACNA,KADM;IAENC,QAAQ,EAAE,IAFJ;IAGNC,MAAM,EAAEF,KAAK,IAAI,CAHX;IAING,MAAM,EAAEH,KAAK,IAAI;EAJX,CAAP;AAMA;;AAED,SAASI,aAAT,CAAuBC,UAAvB,EAAmCC,WAAnC,EAAgD;EAC/C,IAAIb,UAAU,KAAK,CAAnB,EAAsB;IACrB,OAAO,CAAP;EACA;;EAED,IAAIH,OAAO,CAAC,WAAD,CAAP,IACHA,OAAO,CAAC,YAAD,CADJ,IAEHA,OAAO,CAAC,iBAAD,CAFR,EAE6B;IAC5B,OAAO,CAAP;EACA;;EAED,IAAIA,OAAO,CAAC,WAAD,CAAX,EAA0B;IACzB,OAAO,CAAP;EACA;;EAED,IAAIe,UAAU,IAAI,CAACC,WAAf,IAA8Bb,UAAU,KAAKc,SAAjD,EAA4D;IAC3D,OAAO,CAAP;EACA;;EAED,MAAMV,GAAG,GAAGJ,UAAU,IAAI,CAA1B;;EAEA,IAAIF,GAAG,CAACiB,IAAJ,KAAa,MAAjB,EAAyB;IACxB,OAAOX,GAAP;EACA;;EAED,IAAIL,OAAO,CAACiB,QAAR,KAAqB,OAAzB,EAAkC;IACjC;IACA;IACA,MAAMC,SAAS,GAAGvB,EAAE,CAACwB,OAAH,GAAaC,KAAb,CAAmB,GAAnB,CAAlB;;IACA,IACCC,MAAM,CAACH,SAAS,CAAC,CAAD,CAAV,CAAN,IAAwB,EAAxB,IACAG,MAAM,CAACH,SAAS,CAAC,CAAD,CAAV,CAAN,IAAwB,KAFzB,EAGE;MACD,OAAOG,MAAM,CAACH,SAAS,CAAC,CAAD,CAAV,CAAN,IAAwB,KAAxB,GAAgC,CAAhC,GAAoC,CAA3C;IACA;;IAED,OAAO,CAAP;EACA;;EAED,IAAI,QAAQnB,GAAZ,EAAiB;IAChB,IAAI,CAAC,QAAD,EAAW,UAAX,EAAuB,UAAvB,EAAmC,WAAnC,EAAgD,gBAAhD,EAAkE,WAAlE,EAA+EuB,IAA/E,CAAoFC,IAAI,IAAIA,IAAI,IAAIxB,GAApG,KAA4GA,GAAG,CAACyB,OAAJ,KAAgB,UAAhI,EAA4I;MAC3I,OAAO,CAAP;IACA;;IAED,OAAOnB,GAAP;EACA;;EAED,IAAI,sBAAsBN,GAA1B,EAA+B;IAC9B,OAAO,gCAAgC0B,IAAhC,CAAqC1B,GAAG,CAAC2B,gBAAzC,IAA6D,CAA7D,GAAiE,CAAxE;EACA;;EAED,IAAI3B,GAAG,CAAC4B,SAAJ,KAAkB,WAAtB,EAAmC;IAClC,OAAO,CAAP;EACA;;EAED,IAAI,kBAAkB5B,GAAtB,EAA2B;IAC1B,MAAM6B,OAAO,GAAGtB,QAAQ,CAAC,CAACP,GAAG,CAAC8B,oBAAJ,IAA4B,EAA7B,EAAiCT,KAAjC,CAAuC,GAAvC,EAA4C,CAA5C,CAAD,EAAiD,EAAjD,CAAxB;;IAEA,QAAQrB,GAAG,CAAC+B,YAAZ;MACC,KAAK,WAAL;QACC,OAAOF,OAAO,IAAI,CAAX,GAAe,CAAf,GAAmB,CAA1B;;MACD,KAAK,gBAAL;QACC,OAAO,CAAP;MACD;IALD;EAOA;;EAED,IAAI,iBAAiBH,IAAjB,CAAsB1B,GAAG,CAACiB,IAA1B,CAAJ,EAAqC;IACpC,OAAO,CAAP;EACA;;EAED,IAAI,8DAA8DS,IAA9D,CAAmE1B,GAAG,CAACiB,IAAvE,CAAJ,EAAkF;IACjF,OAAO,CAAP;EACA;;EAED,IAAI,eAAejB,GAAnB,EAAwB;IACvB,OAAO,CAAP;EACA;;EAED,OAAOM,GAAP;AACA;;AAED,SAAS0B,eAAT,CAAyBC,MAAzB,EAAiC;EAChC,MAAMxB,KAAK,GAAGI,aAAa,CAACoB,MAAD,EAASA,MAAM,IAAIA,MAAM,CAACC,KAA1B,CAA3B;EACA,OAAO1B,cAAc,CAACC,KAAD,CAArB;AACA;;AAED0B,MAAM,CAACC,OAAP,GAAiB;EAChBvB,aAAa,EAAEmB,eADC;EAEhBK,MAAM,EAAE7B,cAAc,CAACK,aAAa,CAAC,IAAD,EAAOf,GAAG,CAACwC,MAAJ,CAAW,CAAX,CAAP,CAAd,CAFN;EAGhBC,MAAM,EAAE/B,cAAc,CAACK,aAAa,CAAC,IAAD,EAAOf,GAAG,CAACwC,MAAJ,CAAW,CAAX,CAAP,CAAd;AAHN,CAAjB"},"metadata":{},"sourceType":"script"}