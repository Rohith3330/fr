{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _lodash = _interopRequireDefault(require(\"lodash\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar _default = (identifierNode, context) => {\n  if (_lodash.default.has(identifierNode, 'name')) {\n    return identifierNode.name;\n  }\n\n  if (_lodash.default.has(identifierNode, 'left.name')) {\n    return identifierNode.left.name;\n  }\n\n  if (_lodash.default.has(identifierNode, 'key.name')) {\n    return identifierNode.key.name;\n  }\n\n  if (identifierNode.type === 'RestElement') {\n    return identifierNode.argument.name;\n  }\n\n  if (identifierNode.type === 'ObjectTypeProperty') {\n    let tokenIndex;\n    tokenIndex = 0;\n\n    if (identifierNode.static) {\n      tokenIndex++;\n    }\n\n    if (identifierNode.variance) {\n      tokenIndex++;\n    }\n\n    if (identifierNode.kind === 'set' || identifierNode.kind === 'get') {\n      tokenIndex++;\n    }\n\n    return context.getSourceCode().getFirstToken(identifierNode, tokenIndex).value;\n  }\n\n  if (identifierNode.type === 'ObjectTypeIndexer') {\n    let tokenIndex;\n    tokenIndex = 0;\n\n    if (identifierNode.static) {\n      tokenIndex++;\n    }\n\n    if (identifierNode.variance) {\n      tokenIndex++;\n    }\n\n    tokenIndex++;\n    const id = context.getSourceCode().getFirstToken(identifierNode, tokenIndex);\n    const colonOrBrace = context.getSourceCode().getTokenAfter(id);\n\n    if (colonOrBrace.value === ':') {\n      return id.value;\n    }\n\n    return null;\n  }\n\n  if (identifierNode.type === 'FunctionTypeParam') {\n    return context.getSourceCode().getFirstToken(identifierNode).value;\n  }\n\n  if (identifierNode.type === 'ObjectPattern' || identifierNode.type === 'ArrayPattern') {\n    const text = context.getSourceCode().getText(identifierNode);\n\n    if (identifierNode.typeAnnotation) {\n      return text.replace(context.getSourceCode().getText(identifierNode.typeAnnotation), '').trim();\n    }\n\n    return text;\n  }\n\n  if (_lodash.default.get(identifierNode, 'left.type') === 'ObjectPattern') {\n    return context.getSourceCode().getText(identifierNode.left);\n  }\n\n  return null;\n};\n\nexports.default = _default;\nmodule.exports = exports.default;","map":{"version":3,"names":["Object","defineProperty","exports","value","default","_lodash","_interopRequireDefault","require","obj","__esModule","_default","identifierNode","context","has","name","left","key","type","argument","tokenIndex","static","variance","kind","getSourceCode","getFirstToken","id","colonOrBrace","getTokenAfter","text","getText","typeAnnotation","replace","trim","get","module"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/eslint-plugin-flowtype/dist/utilities/getParameterName.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _lodash = _interopRequireDefault(require(\"lodash\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar _default = (identifierNode, context) => {\n  if (_lodash.default.has(identifierNode, 'name')) {\n    return identifierNode.name;\n  }\n\n  if (_lodash.default.has(identifierNode, 'left.name')) {\n    return identifierNode.left.name;\n  }\n\n  if (_lodash.default.has(identifierNode, 'key.name')) {\n    return identifierNode.key.name;\n  }\n\n  if (identifierNode.type === 'RestElement') {\n    return identifierNode.argument.name;\n  }\n\n  if (identifierNode.type === 'ObjectTypeProperty') {\n    let tokenIndex;\n    tokenIndex = 0;\n\n    if (identifierNode.static) {\n      tokenIndex++;\n    }\n\n    if (identifierNode.variance) {\n      tokenIndex++;\n    }\n\n    if (identifierNode.kind === 'set' || identifierNode.kind === 'get') {\n      tokenIndex++;\n    }\n\n    return context.getSourceCode().getFirstToken(identifierNode, tokenIndex).value;\n  }\n\n  if (identifierNode.type === 'ObjectTypeIndexer') {\n    let tokenIndex;\n    tokenIndex = 0;\n\n    if (identifierNode.static) {\n      tokenIndex++;\n    }\n\n    if (identifierNode.variance) {\n      tokenIndex++;\n    }\n\n    tokenIndex++;\n    const id = context.getSourceCode().getFirstToken(identifierNode, tokenIndex);\n    const colonOrBrace = context.getSourceCode().getTokenAfter(id);\n\n    if (colonOrBrace.value === ':') {\n      return id.value;\n    }\n\n    return null;\n  }\n\n  if (identifierNode.type === 'FunctionTypeParam') {\n    return context.getSourceCode().getFirstToken(identifierNode).value;\n  }\n\n  if (identifierNode.type === 'ObjectPattern' || identifierNode.type === 'ArrayPattern') {\n    const text = context.getSourceCode().getText(identifierNode);\n\n    if (identifierNode.typeAnnotation) {\n      return text.replace(context.getSourceCode().getText(identifierNode.typeAnnotation), '').trim();\n    }\n\n    return text;\n  }\n\n  if (_lodash.default.get(identifierNode, 'left.type') === 'ObjectPattern') {\n    return context.getSourceCode().getText(identifierNode.left);\n  }\n\n  return null;\n};\n\nexports.default = _default;\nmodule.exports = exports.default;"],"mappings":"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"},"metadata":{},"sourceType":"script"}