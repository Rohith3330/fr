{"ast":null,"code":"var mergeAdjacent = require('./merge-adjacent');\n\nvar mergeMediaQueries = require('./merge-media-queries');\n\nvar mergeNonAdjacentByBody = require('./merge-non-adjacent-by-body');\n\nvar mergeNonAdjacentBySelector = require('./merge-non-adjacent-by-selector');\n\nvar reduceNonAdjacent = require('./reduce-non-adjacent');\n\nvar removeDuplicateFontAtRules = require('./remove-duplicate-font-at-rules');\n\nvar removeDuplicateMediaQueries = require('./remove-duplicate-media-queries');\n\nvar removeDuplicates = require('./remove-duplicates');\n\nvar removeUnusedAtRules = require('./remove-unused-at-rules');\n\nvar restructure = require('./restructure');\n\nvar optimizeProperties = require('./properties/optimize');\n\nvar OptimizationLevel = require('../../options/optimization-level').OptimizationLevel;\n\nvar Token = require('../../tokenizer/token');\n\nfunction removeEmpty(tokens) {\n  for (var i = 0, l = tokens.length; i < l; i++) {\n    var token = tokens[i];\n    var isEmpty = false;\n\n    switch (token[0]) {\n      case Token.RULE:\n        isEmpty = token[1].length === 0 || token[2].length === 0;\n        break;\n\n      case Token.NESTED_BLOCK:\n        removeEmpty(token[2]);\n        isEmpty = token[2].length === 0;\n        break;\n\n      case Token.AT_RULE:\n        isEmpty = token[1].length === 0;\n        break;\n\n      case Token.AT_RULE_BLOCK:\n        isEmpty = token[2].length === 0;\n    }\n\n    if (isEmpty) {\n      tokens.splice(i, 1);\n      i--;\n      l--;\n    }\n  }\n}\n\nfunction recursivelyOptimizeBlocks(tokens, context) {\n  for (var i = 0, l = tokens.length; i < l; i++) {\n    var token = tokens[i];\n\n    if (token[0] == Token.NESTED_BLOCK) {\n      var isKeyframes = /@(-moz-|-o-|-webkit-)?keyframes/.test(token[1][0][1]);\n      level2Optimize(token[2], context, !isKeyframes);\n    }\n  }\n}\n\nfunction recursivelyOptimizeProperties(tokens, context) {\n  for (var i = 0, l = tokens.length; i < l; i++) {\n    var token = tokens[i];\n\n    switch (token[0]) {\n      case Token.RULE:\n        optimizeProperties(token[2], true, true, context);\n        break;\n\n      case Token.NESTED_BLOCK:\n        recursivelyOptimizeProperties(token[2], context);\n    }\n  }\n}\n\nfunction level2Optimize(tokens, context, withRestructuring) {\n  var levelOptions = context.options.level[OptimizationLevel.Two];\n  var level2Plugins = context.options.plugins.level2Block;\n  var reduced;\n  var i;\n  recursivelyOptimizeBlocks(tokens, context);\n  recursivelyOptimizeProperties(tokens, context);\n\n  if (levelOptions.removeDuplicateRules) {\n    removeDuplicates(tokens, context);\n  }\n\n  if (levelOptions.mergeAdjacentRules) {\n    mergeAdjacent(tokens, context);\n  }\n\n  if (levelOptions.reduceNonAdjacentRules) {\n    reduceNonAdjacent(tokens, context);\n  }\n\n  if (levelOptions.mergeNonAdjacentRules && levelOptions.mergeNonAdjacentRules != 'body') {\n    mergeNonAdjacentBySelector(tokens, context);\n  }\n\n  if (levelOptions.mergeNonAdjacentRules && levelOptions.mergeNonAdjacentRules != 'selector') {\n    mergeNonAdjacentByBody(tokens, context);\n  }\n\n  if (levelOptions.restructureRules && levelOptions.mergeAdjacentRules && withRestructuring) {\n    restructure(tokens, context);\n    mergeAdjacent(tokens, context);\n  }\n\n  if (levelOptions.restructureRules && !levelOptions.mergeAdjacentRules && withRestructuring) {\n    restructure(tokens, context);\n  }\n\n  if (levelOptions.removeDuplicateFontRules) {\n    removeDuplicateFontAtRules(tokens, context);\n  }\n\n  if (levelOptions.removeDuplicateMediaBlocks) {\n    removeDuplicateMediaQueries(tokens, context);\n  }\n\n  if (levelOptions.removeUnusedAtRules) {\n    removeUnusedAtRules(tokens, context);\n  }\n\n  if (levelOptions.mergeMedia) {\n    reduced = mergeMediaQueries(tokens, context);\n\n    for (i = reduced.length - 1; i >= 0; i--) {\n      level2Optimize(reduced[i][2], context, false);\n    }\n  }\n\n  for (i = 0; i < level2Plugins.length; i++) {\n    level2Plugins[i](tokens);\n  }\n\n  if (levelOptions.removeEmpty) {\n    removeEmpty(tokens);\n  }\n\n  return tokens;\n}\n\nmodule.exports = level2Optimize;","map":{"version":3,"names":["mergeAdjacent","require","mergeMediaQueries","mergeNonAdjacentByBody","mergeNonAdjacentBySelector","reduceNonAdjacent","removeDuplicateFontAtRules","removeDuplicateMediaQueries","removeDuplicates","removeUnusedAtRules","restructure","optimizeProperties","OptimizationLevel","Token","removeEmpty","tokens","i","l","length","token","isEmpty","RULE","NESTED_BLOCK","AT_RULE","AT_RULE_BLOCK","splice","recursivelyOptimizeBlocks","context","isKeyframes","test","level2Optimize","recursivelyOptimizeProperties","withRestructuring","levelOptions","options","level","Two","level2Plugins","plugins","level2Block","reduced","removeDuplicateRules","mergeAdjacentRules","reduceNonAdjacentRules","mergeNonAdjacentRules","restructureRules","removeDuplicateFontRules","removeDuplicateMediaBlocks","mergeMedia","module","exports"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/clean-css/lib/optimizer/level-2/optimize.js"],"sourcesContent":["var mergeAdjacent = require('./merge-adjacent');\nvar mergeMediaQueries = require('./merge-media-queries');\nvar mergeNonAdjacentByBody = require('./merge-non-adjacent-by-body');\nvar mergeNonAdjacentBySelector = require('./merge-non-adjacent-by-selector');\nvar reduceNonAdjacent = require('./reduce-non-adjacent');\nvar removeDuplicateFontAtRules = require('./remove-duplicate-font-at-rules');\nvar removeDuplicateMediaQueries = require('./remove-duplicate-media-queries');\nvar removeDuplicates = require('./remove-duplicates');\nvar removeUnusedAtRules = require('./remove-unused-at-rules');\nvar restructure = require('./restructure');\n\nvar optimizeProperties = require('./properties/optimize');\n\nvar OptimizationLevel = require('../../options/optimization-level').OptimizationLevel;\n\nvar Token = require('../../tokenizer/token');\n\nfunction removeEmpty(tokens) {\n  for (var i = 0, l = tokens.length; i < l; i++) {\n    var token = tokens[i];\n    var isEmpty = false;\n\n    switch (token[0]) {\n    case Token.RULE:\n      isEmpty = token[1].length === 0 || token[2].length === 0;\n      break;\n    case Token.NESTED_BLOCK:\n      removeEmpty(token[2]);\n      isEmpty = token[2].length === 0;\n      break;\n    case Token.AT_RULE:\n      isEmpty = token[1].length === 0;\n      break;\n    case Token.AT_RULE_BLOCK:\n      isEmpty = token[2].length === 0;\n    }\n\n    if (isEmpty) {\n      tokens.splice(i, 1);\n      i--;\n      l--;\n    }\n  }\n}\n\nfunction recursivelyOptimizeBlocks(tokens, context) {\n  for (var i = 0, l = tokens.length; i < l; i++) {\n    var token = tokens[i];\n\n    if (token[0] == Token.NESTED_BLOCK) {\n      var isKeyframes = /@(-moz-|-o-|-webkit-)?keyframes/.test(token[1][0][1]);\n      level2Optimize(token[2], context, !isKeyframes);\n    }\n  }\n}\n\nfunction recursivelyOptimizeProperties(tokens, context) {\n  for (var i = 0, l = tokens.length; i < l; i++) {\n    var token = tokens[i];\n\n    switch (token[0]) {\n    case Token.RULE:\n      optimizeProperties(token[2], true, true, context);\n      break;\n    case Token.NESTED_BLOCK:\n      recursivelyOptimizeProperties(token[2], context);\n    }\n  }\n}\n\nfunction level2Optimize(tokens, context, withRestructuring) {\n  var levelOptions = context.options.level[OptimizationLevel.Two];\n  var level2Plugins = context.options.plugins.level2Block;\n  var reduced;\n  var i;\n\n  recursivelyOptimizeBlocks(tokens, context);\n  recursivelyOptimizeProperties(tokens, context);\n\n  if (levelOptions.removeDuplicateRules) {\n    removeDuplicates(tokens, context);\n  }\n\n  if (levelOptions.mergeAdjacentRules) {\n    mergeAdjacent(tokens, context);\n  }\n\n  if (levelOptions.reduceNonAdjacentRules) {\n    reduceNonAdjacent(tokens, context);\n  }\n\n  if (levelOptions.mergeNonAdjacentRules && levelOptions.mergeNonAdjacentRules != 'body') {\n    mergeNonAdjacentBySelector(tokens, context);\n  }\n\n  if (levelOptions.mergeNonAdjacentRules && levelOptions.mergeNonAdjacentRules != 'selector') {\n    mergeNonAdjacentByBody(tokens, context);\n  }\n\n  if (levelOptions.restructureRules && levelOptions.mergeAdjacentRules && withRestructuring) {\n    restructure(tokens, context);\n    mergeAdjacent(tokens, context);\n  }\n\n  if (levelOptions.restructureRules && !levelOptions.mergeAdjacentRules && withRestructuring) {\n    restructure(tokens, context);\n  }\n\n  if (levelOptions.removeDuplicateFontRules) {\n    removeDuplicateFontAtRules(tokens, context);\n  }\n\n  if (levelOptions.removeDuplicateMediaBlocks) {\n    removeDuplicateMediaQueries(tokens, context);\n  }\n\n  if (levelOptions.removeUnusedAtRules) {\n    removeUnusedAtRules(tokens, context);\n  }\n\n  if (levelOptions.mergeMedia) {\n    reduced = mergeMediaQueries(tokens, context);\n    for (i = reduced.length - 1; i >= 0; i--) {\n      level2Optimize(reduced[i][2], context, false);\n    }\n  }\n\n  for (i = 0; i < level2Plugins.length; i++) {\n    level2Plugins[i](tokens);\n  }\n\n  if (levelOptions.removeEmpty) {\n    removeEmpty(tokens);\n  }\n\n  return tokens;\n}\n\nmodule.exports = level2Optimize;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}