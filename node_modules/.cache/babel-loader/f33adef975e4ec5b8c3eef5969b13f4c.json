{"ast":null,"code":"\"use strict\";\n\nvar __classPrivateFieldSet = this && this.__classPrivateFieldSet || function (receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n};\n\nvar __classPrivateFieldGet = this && this.__classPrivateFieldGet || function (receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\n\nvar _VisitorBase_childVisitorKeys, _VisitorBase_visitChildrenEvenIfSelectorExists;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.VisitorBase = void 0;\n\nconst visitor_keys_1 = require(\"@typescript-eslint/visitor-keys\");\n\nfunction isObject(obj) {\n  return typeof obj === 'object' && obj != null;\n}\n\nfunction isNode(node) {\n  return isObject(node) && typeof node.type === 'string';\n}\n\nclass VisitorBase {\n  constructor(options) {\n    var _a, _b;\n\n    _VisitorBase_childVisitorKeys.set(this, void 0);\n\n    _VisitorBase_visitChildrenEvenIfSelectorExists.set(this, void 0);\n\n    __classPrivateFieldSet(this, _VisitorBase_childVisitorKeys, (_a = options.childVisitorKeys) !== null && _a !== void 0 ? _a : visitor_keys_1.visitorKeys, \"f\");\n\n    __classPrivateFieldSet(this, _VisitorBase_visitChildrenEvenIfSelectorExists, (_b = options.visitChildrenEvenIfSelectorExists) !== null && _b !== void 0 ? _b : false, \"f\");\n  }\n  /**\n   * Default method for visiting children.\n   * @param node the node whose children should be visited\n   * @param exclude a list of keys to not visit\n   */\n\n\n  visitChildren(node) {\n    let excludeArr = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n    var _a;\n\n    if (node == null || node.type == null) {\n      return;\n    }\n\n    const exclude = new Set(excludeArr.concat(['parent']));\n    const children = (_a = __classPrivateFieldGet(this, _VisitorBase_childVisitorKeys, \"f\")[node.type]) !== null && _a !== void 0 ? _a : Object.keys(node);\n\n    for (const key of children) {\n      if (exclude.has(key)) {\n        continue;\n      }\n\n      const child = node[key];\n\n      if (!child) {\n        continue;\n      }\n\n      if (Array.isArray(child)) {\n        for (const subChild of child) {\n          if (isNode(subChild)) {\n            this.visit(subChild);\n          }\n        }\n      } else if (isNode(child)) {\n        this.visit(child);\n      }\n    }\n  }\n  /**\n   * Dispatching node.\n   */\n\n\n  visit(node) {\n    if (node == null || node.type == null) {\n      return;\n    }\n\n    const visitor = this[node.type];\n\n    if (visitor) {\n      visitor.call(this, node);\n\n      if (!__classPrivateFieldGet(this, _VisitorBase_visitChildrenEvenIfSelectorExists, \"f\")) {\n        return;\n      }\n    }\n\n    this.visitChildren(node);\n  }\n\n}\n\nexports.VisitorBase = VisitorBase;\n_VisitorBase_childVisitorKeys = new WeakMap(), _VisitorBase_visitChildrenEvenIfSelectorExists = new WeakMap();","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;AACA;;AAOA,SAASA,QAAT,CAAkBC,GAAlB,EAA8B;EAC5B,OAAO,OAAOA,GAAP,KAAe,QAAf,IAA2BA,GAAG,IAAI,IAAzC;AACD;;AACD,SAASC,MAAT,CAAgBC,IAAhB,EAA6B;EAC3B,OAAOH,QAAQ,CAACG,IAAD,CAAR,IAAkB,OAAOA,IAAI,CAACC,IAAZ,KAAqB,QAA9C;AACD;;AAMD,MAAeC,WAAf,CAA0B;EAGxBC,YAAYC,OAAZ,EAAmC;;;IAFnCC;;IACAC;;IAEEC,6BAAIF,6BAAJ,EAAyB,aAAO,CAACG,gBAAR,MAAwB,IAAxB,IAAwBC,aAAxB,GAAwBA,EAAxB,GAA4BC,0BAArD,EAAgE,GAAhE;;IACAH,6BAAID,8CAAJ,EACE,aAAO,CAACK,iCAAR,MAAyC,IAAzC,IAAyCC,aAAzC,GAAyCA,EAAzC,GAA6C,KAD/C,EACoD,GADpD;EAED;EAED;;;;;;;EAKAC,aAAa,CACXb,IADW,EAEiB;IAAA,IAA5Bc,UAA4B,uEAAF,EAAE;;;;IAE5B,IAAId,IAAI,IAAI,IAAR,IAAgBA,IAAI,CAACC,IAAL,IAAa,IAAjC,EAAuC;MACrC;IACD;;IAED,MAAMc,OAAO,GAAG,IAAIC,GAAJ,CAAQF,UAAU,CAACG,MAAX,CAAkB,CAAC,QAAD,CAAlB,CAAR,CAAhB;IACA,MAAMC,QAAQ,GAAG,mCAAIb,6BAAJ,EAAI,GAAJ,EAAuBL,IAAI,CAACC,IAA5B,OAAiC,IAAjC,IAAiCQ,aAAjC,GAAiCA,EAAjC,GAAqCU,MAAM,CAACC,IAAP,CAAYpB,IAAZ,CAAtD;;IACA,KAAK,MAAMqB,GAAX,IAAkBH,QAAlB,EAA4B;MAC1B,IAAIH,OAAO,CAACO,GAAR,CAAYD,GAAZ,CAAJ,EAAsB;QACpB;MACD;;MAED,MAAME,KAAK,GAAGvB,IAAI,CAACqB,GAAD,CAAlB;;MACA,IAAI,CAACE,KAAL,EAAY;QACV;MACD;;MAED,IAAIC,KAAK,CAACC,OAAN,CAAcF,KAAd,CAAJ,EAA0B;QACxB,KAAK,MAAMG,QAAX,IAAuBH,KAAvB,EAA8B;UAC5B,IAAIxB,MAAM,CAAC2B,QAAD,CAAV,EAAsB;YACpB,KAAKC,KAAL,CAAWD,QAAX;UACD;QACF;MACF,CAND,MAMO,IAAI3B,MAAM,CAACwB,KAAD,CAAV,EAAmB;QACxB,KAAKI,KAAL,CAAWJ,KAAX;MACD;IACF;EACF;EAED;;;;;EAGAI,KAAK,CAAC3B,IAAD,EAAuC;IAC1C,IAAIA,IAAI,IAAI,IAAR,IAAgBA,IAAI,CAACC,IAAL,IAAa,IAAjC,EAAuC;MACrC;IACD;;IAED,MAAM2B,OAAO,GAAI,KAAqB5B,IAAI,CAACC,IAA1B,CAAjB;;IACA,IAAI2B,OAAJ,EAAa;MACXA,OAAO,CAACC,IAAR,CAAa,IAAb,EAAmB7B,IAAnB;;MACA,IAAI,CAAC8B,6BAAIxB,8CAAJ,EAAI,GAAJ,CAAL,EAA8C;QAC5C;MACD;IACF;;IAED,KAAKO,aAAL,CAAmBb,IAAnB;EACD;;AA/DuB;;AAkEjB+B","names":["isObject","obj","isNode","node","type","VisitorBase","constructor","options","_VisitorBase_childVisitorKeys","_VisitorBase_visitChildrenEvenIfSelectorExists","__classPrivateFieldSet","childVisitorKeys","_a","visitor_keys_1","visitChildrenEvenIfSelectorExists","_b","visitChildren","excludeArr","exclude","Set","concat","children","Object","keys","key","has","child","Array","isArray","subChild","visit","visitor","call","__classPrivateFieldGet","exports"],"sources":["../../src/referencer/VisitorBase.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}