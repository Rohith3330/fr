{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nfunction helpers() {\n  const data = require(\"@babel/helpers\");\n\n  helpers = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _traverse() {\n  const data = require(\"@babel/traverse\");\n\n  _traverse = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _codeFrame() {\n  const data = require(\"@babel/code-frame\");\n\n  _codeFrame = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _t() {\n  const data = require(\"@babel/types\");\n\n  _t = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _helperModuleTransforms() {\n  const data = require(\"@babel/helper-module-transforms\");\n\n  _helperModuleTransforms = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _semver() {\n  const data = require(\"semver\");\n\n  _semver = function () {\n    return data;\n  };\n\n  return data;\n}\n\nconst {\n  cloneNode,\n  interpreterDirective\n} = _t();\n\nconst errorVisitor = {\n  enter(path, state) {\n    const loc = path.node.loc;\n\n    if (loc) {\n      state.loc = loc;\n      path.stop();\n    }\n  }\n\n};\n\nclass File {\n  constructor(options, _ref) {\n    let {\n      code,\n      ast,\n      inputMap\n    } = _ref;\n    this._map = new Map();\n    this.opts = void 0;\n    this.declarations = {};\n    this.path = void 0;\n    this.ast = void 0;\n    this.scope = void 0;\n    this.metadata = {};\n    this.code = \"\";\n    this.inputMap = void 0;\n    this.hub = {\n      file: this,\n      getCode: () => this.code,\n      getScope: () => this.scope,\n      addHelper: this.addHelper.bind(this),\n      buildError: this.buildCodeFrameError.bind(this)\n    };\n    this.opts = options;\n    this.code = code;\n    this.ast = ast;\n    this.inputMap = inputMap;\n    this.path = _traverse().NodePath.get({\n      hub: this.hub,\n      parentPath: null,\n      parent: this.ast,\n      container: this.ast,\n      key: \"program\"\n    }).setContext();\n    this.scope = this.path.scope;\n  }\n\n  get shebang() {\n    const {\n      interpreter\n    } = this.path.node;\n    return interpreter ? interpreter.value : \"\";\n  }\n\n  set shebang(value) {\n    if (value) {\n      this.path.get(\"interpreter\").replaceWith(interpreterDirective(value));\n    } else {\n      this.path.get(\"interpreter\").remove();\n    }\n  }\n\n  set(key, val) {\n    if (key === \"helpersNamespace\") {\n      throw new Error(\"Babel 7.0.0-beta.56 has dropped support for the 'helpersNamespace' utility.\" + \"If you are using @babel/plugin-external-helpers you will need to use a newer \" + \"version than the one you currently have installed. \" + \"If you have your own implementation, you'll want to explore using 'helperGenerator' \" + \"alongside 'file.availableHelper()'.\");\n    }\n\n    this._map.set(key, val);\n  }\n\n  get(key) {\n    return this._map.get(key);\n  }\n\n  has(key) {\n    return this._map.has(key);\n  }\n\n  getModuleName() {\n    return (0, _helperModuleTransforms().getModuleName)(this.opts, this.opts);\n  }\n\n  addImport() {\n    throw new Error(\"This API has been removed. If you're looking for this \" + \"functionality in Babel 7, you should import the \" + \"'@babel/helper-module-imports' module and use the functions exposed \" + \" from that module, such as 'addNamed' or 'addDefault'.\");\n  }\n\n  availableHelper(name, versionRange) {\n    let minVersion;\n\n    try {\n      minVersion = helpers().minVersion(name);\n    } catch (err) {\n      if (err.code !== \"BABEL_HELPER_UNKNOWN\") throw err;\n      return false;\n    }\n\n    if (typeof versionRange !== \"string\") return true;\n    if (_semver().valid(versionRange)) versionRange = `^${versionRange}`;\n    return !_semver().intersects(`<${minVersion}`, versionRange) && !_semver().intersects(`>=8.0.0`, versionRange);\n  }\n\n  addHelper(name) {\n    const declar = this.declarations[name];\n    if (declar) return cloneNode(declar);\n    const generator = this.get(\"helperGenerator\");\n\n    if (generator) {\n      const res = generator(name);\n      if (res) return res;\n    }\n\n    helpers().ensure(name, File);\n    const uid = this.declarations[name] = this.scope.generateUidIdentifier(name);\n    const dependencies = {};\n\n    for (const dep of helpers().getDependencies(name)) {\n      dependencies[dep] = this.addHelper(dep);\n    }\n\n    const {\n      nodes,\n      globals\n    } = helpers().get(name, dep => dependencies[dep], uid, Object.keys(this.scope.getAllBindings()));\n    globals.forEach(name => {\n      if (this.path.scope.hasBinding(name, true)) {\n        this.path.scope.rename(name);\n      }\n    });\n    nodes.forEach(node => {\n      node._compact = true;\n    });\n    this.path.unshiftContainer(\"body\", nodes);\n    this.path.get(\"body\").forEach(path => {\n      if (nodes.indexOf(path.node) === -1) return;\n      if (path.isVariableDeclaration()) this.scope.registerDeclaration(path);\n    });\n    return uid;\n  }\n\n  addTemplateObject() {\n    throw new Error(\"This function has been moved into the template literal transform itself.\");\n  }\n\n  buildCodeFrameError(node, msg) {\n    let _Error = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : SyntaxError;\n\n    let loc = node && (node.loc || node._loc);\n\n    if (!loc && node) {\n      const state = {\n        loc: null\n      };\n      (0, _traverse().default)(node, errorVisitor, this.scope, state);\n      loc = state.loc;\n      let txt = \"This is an error on an internal node. Probably an internal error.\";\n      if (loc) txt += \" Location has been estimated.\";\n      msg += ` (${txt})`;\n    }\n\n    if (loc) {\n      const {\n        highlightCode = true\n      } = this.opts;\n      msg += \"\\n\" + (0, _codeFrame().codeFrameColumns)(this.code, {\n        start: {\n          line: loc.start.line,\n          column: loc.start.column + 1\n        },\n        end: loc.end && loc.start.line === loc.end.line ? {\n          line: loc.end.line,\n          column: loc.end.column + 1\n        } : undefined\n      }, {\n        highlightCode\n      });\n    }\n\n    return new _Error(msg);\n  }\n\n}\n\nexports.default = File;\n0 && 0;","map":{"version":3,"mappings":"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","names":["helpers","_traverse","_codeFrame","_t","_helperModuleTransforms","_semver","cloneNode","interpreterDirective","errorVisitor","enter","path","state","loc","node","stop","File","constructor","options","code","ast","inputMap","_map","Map","opts","declarations","scope","metadata","hub","file","getCode","getScope","addHelper","bind","buildError","buildCodeFrameError","NodePath","get","parentPath","parent","container","key","setContext","shebang","interpreter","value","replaceWith","remove","set","val","Error","has","getModuleName","addImport","availableHelper","name","versionRange","minVersion","err","semver","valid","intersects","declar","generator","res","ensure","uid","generateUidIdentifier","dependencies","dep","getDependencies","nodes","globals","Object","keys","getAllBindings","forEach","hasBinding","rename","_compact","unshiftContainer","indexOf","isVariableDeclaration","registerDeclaration","addTemplateObject","msg","_Error","SyntaxError","_loc","txt","highlightCode","start","line","column","end","undefined"],"sources":["C:\\Users\\Rohith\\mern\\frontend\\node_modules\\@babel\\core\\src\\transformation\\file\\file.ts"],"sourcesContent":["import * as helpers from \"@babel/helpers\";\nimport { NodePath } from \"@babel/traverse\";\nimport type { HubInterface, Visitor, Scope } from \"@babel/traverse\";\nimport { codeFrameColumns } from \"@babel/code-frame\";\nimport traverse from \"@babel/traverse\";\nimport { cloneNode, interpreterDirective } from \"@babel/types\";\nimport type * as t from \"@babel/types\";\nimport { getModuleName } from \"@babel/helper-module-transforms\";\nimport semver from \"semver\";\n\nimport type { NormalizedFile } from \"../normalize-file\";\n\nconst errorVisitor: Visitor<{ loc: NodeLocation[\"loc\"] | null }> = {\n  enter(path, state) {\n    const loc = path.node.loc;\n    if (loc) {\n      state.loc = loc;\n      path.stop();\n    }\n  },\n};\n\nexport type NodeLocation = {\n  loc?: {\n    end?: {\n      line: number;\n      column: number;\n    };\n    start: {\n      line: number;\n      column: number;\n    };\n  };\n  _loc?: {\n    end?: {\n      line: number;\n      column: number;\n    };\n    start: {\n      line: number;\n      column: number;\n    };\n  };\n};\n\nexport default class File {\n  _map: Map<unknown, unknown> = new Map();\n  opts: { [key: string]: any };\n  declarations: { [key: string]: t.Identifier } = {};\n  path: NodePath<t.Program>;\n  ast: t.File;\n  scope: Scope;\n  metadata: { [key: string]: any } = {};\n  code: string = \"\";\n  inputMap: any;\n\n  hub: HubInterface & { file: File } = {\n    // keep it for the usage in babel-core, ex: path.hub.file.opts.filename\n    file: this,\n    getCode: () => this.code,\n    getScope: () => this.scope,\n    addHelper: this.addHelper.bind(this),\n    buildError: this.buildCodeFrameError.bind(this),\n  };\n\n  constructor(options: {}, { code, ast, inputMap }: NormalizedFile) {\n    this.opts = options;\n    this.code = code;\n    this.ast = ast;\n    this.inputMap = inputMap;\n\n    this.path = NodePath.get({\n      hub: this.hub,\n      parentPath: null,\n      parent: this.ast,\n      container: this.ast,\n      key: \"program\",\n    }).setContext() as NodePath<t.Program>;\n    this.scope = this.path.scope;\n  }\n\n  /**\n   * Provide backward-compatible access to the interpreter directive handling\n   * in Babel 6.x. If you are writing a plugin for Babel 7.x, it would be\n   * best to use 'program.interpreter' directly.\n   */\n  get shebang(): string {\n    const { interpreter } = this.path.node;\n    return interpreter ? interpreter.value : \"\";\n  }\n  set shebang(value: string) {\n    if (value) {\n      this.path.get(\"interpreter\").replaceWith(interpreterDirective(value));\n    } else {\n      this.path.get(\"interpreter\").remove();\n    }\n  }\n\n  set(key: unknown, val: unknown) {\n    if (key === \"helpersNamespace\") {\n      throw new Error(\n        \"Babel 7.0.0-beta.56 has dropped support for the 'helpersNamespace' utility.\" +\n          \"If you are using @babel/plugin-external-helpers you will need to use a newer \" +\n          \"version than the one you currently have installed. \" +\n          \"If you have your own implementation, you'll want to explore using 'helperGenerator' \" +\n          \"alongside 'file.availableHelper()'.\",\n      );\n    }\n\n    this._map.set(key, val);\n  }\n\n  get(key: unknown): any {\n    return this._map.get(key);\n  }\n\n  has(key: unknown): boolean {\n    return this._map.has(key);\n  }\n\n  getModuleName(): string | undefined | null {\n    return getModuleName(this.opts, this.opts);\n  }\n\n  addImport() {\n    throw new Error(\n      \"This API has been removed. If you're looking for this \" +\n        \"functionality in Babel 7, you should import the \" +\n        \"'@babel/helper-module-imports' module and use the functions exposed \" +\n        \" from that module, such as 'addNamed' or 'addDefault'.\",\n    );\n  }\n\n  /**\n   * Check if a given helper is available in @babel/core's helper list.\n   *\n   * This _also_ allows you to pass a Babel version specifically. If the\n   * helper exists, but was not available for the full given range, it will be\n   * considered unavailable.\n   */\n  availableHelper(name: string, versionRange?: string | null): boolean {\n    let minVersion;\n    try {\n      minVersion = helpers.minVersion(name);\n    } catch (err) {\n      if (err.code !== \"BABEL_HELPER_UNKNOWN\") throw err;\n\n      return false;\n    }\n\n    if (typeof versionRange !== \"string\") return true;\n\n    // semver.intersects() has some surprising behavior with comparing ranges\n    // with pre-release versions. We add '^' to ensure that we are always\n    // comparing ranges with ranges, which sidesteps this logic.\n    // For example:\n    //\n    //   semver.intersects(`<7.0.1`, \"7.0.0-beta.0\") // false - surprising\n    //   semver.intersects(`<7.0.1`, \"^7.0.0-beta.0\") // true - expected\n    //\n    // This is because the first falls back to\n    //\n    //   semver.satisfies(\"7.0.0-beta.0\", `<7.0.1`) // false - surprising\n    //\n    // and this fails because a prerelease version can only satisfy a range\n    // if it is a prerelease within the same major/minor/patch range.\n    //\n    // Note: If this is found to have issues, please also revisit the logic in\n    // transform-runtime's definitions.js file.\n    if (semver.valid(versionRange)) versionRange = `^${versionRange}`;\n\n    return (\n      !semver.intersects(`<${minVersion}`, versionRange) &&\n      !semver.intersects(`>=8.0.0`, versionRange)\n    );\n  }\n\n  addHelper(name: string): t.Identifier {\n    const declar = this.declarations[name];\n    if (declar) return cloneNode(declar);\n\n    const generator = this.get(\"helperGenerator\");\n    if (generator) {\n      const res = generator(name);\n      if (res) return res;\n    }\n\n    // make sure that the helper exists\n    helpers.ensure(name, File);\n\n    const uid = (this.declarations[name] =\n      this.scope.generateUidIdentifier(name));\n\n    const dependencies: { [key: string]: t.Identifier } = {};\n    for (const dep of helpers.getDependencies(name)) {\n      dependencies[dep] = this.addHelper(dep);\n    }\n\n    const { nodes, globals } = helpers.get(\n      name,\n      dep => dependencies[dep],\n      uid,\n      Object.keys(this.scope.getAllBindings()),\n    );\n\n    globals.forEach(name => {\n      if (this.path.scope.hasBinding(name, true /* noGlobals */)) {\n        this.path.scope.rename(name);\n      }\n    });\n\n    nodes.forEach(node => {\n      // @ts-expect-error Fixeme: document _compact node property\n      node._compact = true;\n    });\n\n    this.path.unshiftContainer(\"body\", nodes);\n    // TODO: NodePath#unshiftContainer should automatically register new\n    // bindings.\n    this.path.get(\"body\").forEach(path => {\n      if (nodes.indexOf(path.node) === -1) return;\n      if (path.isVariableDeclaration()) this.scope.registerDeclaration(path);\n    });\n\n    return uid;\n  }\n\n  addTemplateObject() {\n    throw new Error(\n      \"This function has been moved into the template literal transform itself.\",\n    );\n  }\n\n  buildCodeFrameError(\n    node: NodeLocation | undefined | null,\n    msg: string,\n    _Error: typeof Error = SyntaxError,\n  ): Error {\n    let loc = node && (node.loc || node._loc);\n\n    if (!loc && node) {\n      const state: { loc?: NodeLocation[\"loc\"] | null } = {\n        loc: null,\n      };\n      traverse(node as t.Node, errorVisitor, this.scope, state);\n      loc = state.loc;\n\n      let txt =\n        \"This is an error on an internal node. Probably an internal error.\";\n      if (loc) txt += \" Location has been estimated.\";\n\n      msg += ` (${txt})`;\n    }\n\n    if (loc) {\n      const { highlightCode = true } = this.opts;\n\n      msg +=\n        \"\\n\" +\n        codeFrameColumns(\n          this.code,\n          {\n            start: {\n              line: loc.start.line,\n              column: loc.start.column + 1,\n            },\n            end:\n              loc.end && loc.start.line === loc.end.line\n                ? {\n                    line: loc.end.line,\n                    column: loc.end.column + 1,\n                  }\n                : undefined,\n          },\n          { highlightCode },\n        );\n    }\n\n    return new _Error(msg);\n  }\n}\n"]},"metadata":{},"sourceType":"script"}