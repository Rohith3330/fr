{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _jsxAstUtils = require(\"jsx-ast-utils\");\n\nvar _arrayIncludes = _interopRequireDefault(require(\"array-includes\"));\n\nvar _schemas = require(\"../util/schemas\");\n\nvar _getElementType = _interopRequireDefault(require(\"../util/getElementType\"));\n\nvar _isDOMElement = _interopRequireDefault(require(\"../util/isDOMElement\"));\n\nvar _isHiddenFromScreenReader = _interopRequireDefault(require(\"../util/isHiddenFromScreenReader\"));\n\nvar _isInteractiveElement = _interopRequireDefault(require(\"../util/isInteractiveElement\"));\n\nvar _isInteractiveRole = _interopRequireDefault(require(\"../util/isInteractiveRole\"));\n\nvar _mayHaveAccessibleLabel = _interopRequireDefault(require(\"../util/mayHaveAccessibleLabel\"));\n/**\n * @fileoverview Enforce controls are associated with a text label.\n * @author Jesse Beach\n *\n * \n */\n// ----------------------------------------------------------------------------\n// Rule Definition\n// ----------------------------------------------------------------------------\n\n\nvar errorMessage = 'A control must be associated with a text label.';\nvar ignoreList = ['link'];\nvar schema = (0, _schemas.generateObjSchema)({\n  labelAttributes: _schemas.arraySchema,\n  controlComponents: _schemas.arraySchema,\n  ignoreElements: _schemas.arraySchema,\n  ignoreRoles: _schemas.arraySchema,\n  depth: {\n    description: 'JSX tree depth limit to check for accessible label',\n    type: 'integer',\n    minimum: 0\n  }\n});\nvar _default = {\n  meta: {\n    docs: {},\n    schema: [schema]\n  },\n  create: function create(context) {\n    var elementType = (0, _getElementType[\"default\"])(context);\n    var options = context.options[0] || {};\n    var _options$labelAttribu = options.labelAttributes,\n        labelAttributes = _options$labelAttribu === void 0 ? [] : _options$labelAttribu,\n        _options$controlCompo = options.controlComponents,\n        controlComponents = _options$controlCompo === void 0 ? [] : _options$controlCompo,\n        _options$ignoreElemen = options.ignoreElements,\n        ignoreElements = _options$ignoreElemen === void 0 ? [] : _options$ignoreElemen,\n        _options$ignoreRoles = options.ignoreRoles,\n        ignoreRoles = _options$ignoreRoles === void 0 ? [] : _options$ignoreRoles;\n    var newIgnoreElements = new Set([].concat(ignoreElements, ignoreList));\n\n    var rule = function rule(node) {\n      var tag = elementType(node.openingElement);\n      var role = (0, _jsxAstUtils.getLiteralPropValue)((0, _jsxAstUtils.getProp)(node.openingElement.attributes, 'role')); // Ignore interactive elements that might get their label from a source\n      // that cannot be discerned from static analysis, like\n      // <label><input />Save</label>\n\n      if (newIgnoreElements.has(tag)) {\n        return;\n      } // Ignore roles that are \"interactive\" but should not require a label.\n\n\n      if ((0, _arrayIncludes[\"default\"])(ignoreRoles, role)) {\n        return;\n      }\n\n      var props = node.openingElement.attributes;\n      var nodeIsDOMElement = (0, _isDOMElement[\"default\"])(tag);\n      var nodeIsHiddenFromScreenReader = (0, _isHiddenFromScreenReader[\"default\"])(tag, props);\n      var nodeIsInteractiveElement = (0, _isInteractiveElement[\"default\"])(tag, props);\n      var nodeIsInteractiveRole = (0, _isInteractiveRole[\"default\"])(tag, props);\n      var nodeIsControlComponent = controlComponents.indexOf(tag) > -1;\n\n      if (nodeIsHiddenFromScreenReader) {\n        return;\n      }\n\n      var hasAccessibleLabel = true;\n\n      if (nodeIsInteractiveElement || nodeIsDOMElement && nodeIsInteractiveRole || nodeIsControlComponent) {\n        // Prevent crazy recursion.\n        var recursionDepth = Math.min(options.depth === undefined ? 2 : options.depth, 25);\n        hasAccessibleLabel = (0, _mayHaveAccessibleLabel[\"default\"])(node, recursionDepth, labelAttributes);\n      }\n\n      if (!hasAccessibleLabel) {\n        context.report({\n          node: node.openingElement,\n          message: errorMessage\n        });\n      }\n    }; // Create visitor selectors.\n\n\n    return {\n      JSXElement: rule\n    };\n  }\n};\nexports[\"default\"] = _default;\nmodule.exports = exports.default;","map":{"version":3,"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","_jsxAstUtils","_arrayIncludes","_schemas","_getElementType","_isDOMElement","_isHiddenFromScreenReader","_isInteractiveElement","_isInteractiveRole","_mayHaveAccessibleLabel","errorMessage","ignoreList","schema","generateObjSchema","labelAttributes","arraySchema","controlComponents","ignoreElements","ignoreRoles","depth","description","type","minimum","_default","meta","docs","create","context","elementType","options","_options$labelAttribu","_options$controlCompo","_options$ignoreElemen","_options$ignoreRoles","newIgnoreElements","Set","concat","rule","node","tag","openingElement","role","getLiteralPropValue","getProp","attributes","has","props","nodeIsDOMElement","nodeIsHiddenFromScreenReader","nodeIsInteractiveElement","nodeIsInteractiveRole","nodeIsControlComponent","indexOf","hasAccessibleLabel","recursionDepth","Math","min","undefined","report","message","JSXElement","module","default"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/eslint-plugin-jsx-a11y/lib/rules/control-has-associated-label.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _jsxAstUtils = require(\"jsx-ast-utils\");\n\nvar _arrayIncludes = _interopRequireDefault(require(\"array-includes\"));\n\nvar _schemas = require(\"../util/schemas\");\n\nvar _getElementType = _interopRequireDefault(require(\"../util/getElementType\"));\n\nvar _isDOMElement = _interopRequireDefault(require(\"../util/isDOMElement\"));\n\nvar _isHiddenFromScreenReader = _interopRequireDefault(require(\"../util/isHiddenFromScreenReader\"));\n\nvar _isInteractiveElement = _interopRequireDefault(require(\"../util/isInteractiveElement\"));\n\nvar _isInteractiveRole = _interopRequireDefault(require(\"../util/isInteractiveRole\"));\n\nvar _mayHaveAccessibleLabel = _interopRequireDefault(require(\"../util/mayHaveAccessibleLabel\"));\n\n/**\n * @fileoverview Enforce controls are associated with a text label.\n * @author Jesse Beach\n *\n * \n */\n// ----------------------------------------------------------------------------\n// Rule Definition\n// ----------------------------------------------------------------------------\nvar errorMessage = 'A control must be associated with a text label.';\nvar ignoreList = ['link'];\nvar schema = (0, _schemas.generateObjSchema)({\n  labelAttributes: _schemas.arraySchema,\n  controlComponents: _schemas.arraySchema,\n  ignoreElements: _schemas.arraySchema,\n  ignoreRoles: _schemas.arraySchema,\n  depth: {\n    description: 'JSX tree depth limit to check for accessible label',\n    type: 'integer',\n    minimum: 0\n  }\n});\nvar _default = {\n  meta: {\n    docs: {},\n    schema: [schema]\n  },\n  create: function create(context) {\n    var elementType = (0, _getElementType[\"default\"])(context);\n    var options = context.options[0] || {};\n    var _options$labelAttribu = options.labelAttributes,\n        labelAttributes = _options$labelAttribu === void 0 ? [] : _options$labelAttribu,\n        _options$controlCompo = options.controlComponents,\n        controlComponents = _options$controlCompo === void 0 ? [] : _options$controlCompo,\n        _options$ignoreElemen = options.ignoreElements,\n        ignoreElements = _options$ignoreElemen === void 0 ? [] : _options$ignoreElemen,\n        _options$ignoreRoles = options.ignoreRoles,\n        ignoreRoles = _options$ignoreRoles === void 0 ? [] : _options$ignoreRoles;\n    var newIgnoreElements = new Set([].concat(ignoreElements, ignoreList));\n\n    var rule = function rule(node) {\n      var tag = elementType(node.openingElement);\n      var role = (0, _jsxAstUtils.getLiteralPropValue)((0, _jsxAstUtils.getProp)(node.openingElement.attributes, 'role')); // Ignore interactive elements that might get their label from a source\n      // that cannot be discerned from static analysis, like\n      // <label><input />Save</label>\n\n      if (newIgnoreElements.has(tag)) {\n        return;\n      } // Ignore roles that are \"interactive\" but should not require a label.\n\n\n      if ((0, _arrayIncludes[\"default\"])(ignoreRoles, role)) {\n        return;\n      }\n\n      var props = node.openingElement.attributes;\n      var nodeIsDOMElement = (0, _isDOMElement[\"default\"])(tag);\n      var nodeIsHiddenFromScreenReader = (0, _isHiddenFromScreenReader[\"default\"])(tag, props);\n      var nodeIsInteractiveElement = (0, _isInteractiveElement[\"default\"])(tag, props);\n      var nodeIsInteractiveRole = (0, _isInteractiveRole[\"default\"])(tag, props);\n      var nodeIsControlComponent = controlComponents.indexOf(tag) > -1;\n\n      if (nodeIsHiddenFromScreenReader) {\n        return;\n      }\n\n      var hasAccessibleLabel = true;\n\n      if (nodeIsInteractiveElement || nodeIsDOMElement && nodeIsInteractiveRole || nodeIsControlComponent) {\n        // Prevent crazy recursion.\n        var recursionDepth = Math.min(options.depth === undefined ? 2 : options.depth, 25);\n        hasAccessibleLabel = (0, _mayHaveAccessibleLabel[\"default\"])(node, recursionDepth, labelAttributes);\n      }\n\n      if (!hasAccessibleLabel) {\n        context.report({\n          node: node.openingElement,\n          message: errorMessage\n        });\n      }\n    }; // Create visitor selectors.\n\n\n    return {\n      JSXElement: rule\n    };\n  }\n};\nexports[\"default\"] = _default;\nmodule.exports = exports.default;"],"mappings":"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"},"metadata":{},"sourceType":"script"}