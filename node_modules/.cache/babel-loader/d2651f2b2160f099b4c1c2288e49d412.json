{"ast":null,"code":"'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $TypeError = GetIntrinsic('%TypeError%');\n\nvar Type = require('./Type');\n\nvar assertRecord = require('../helpers/assertRecord'); // https://ecma-international.org/ecma-262/13.0/#sec-getmatchindexpair\n\n\nmodule.exports = function GetMatchIndexPair(S, match) {\n  if (Type(S) !== 'String') {\n    throw new $TypeError('Assertion failed: `S` must be a String');\n  }\n\n  assertRecord(Type, 'Match Record', 'match', match);\n\n  if (!(match['[[StartIndex]]'] <= S.length)) {\n    throw new $TypeError('`match` [[StartIndex]] must be a non-negative integer <= the length of S');\n  }\n\n  if (!(match['[[EndIndex]]'] <= S.length)) {\n    throw new $TypeError('`match` [[EndIndex]] must be an integer between [[StartIndex]] and the length of S, inclusive');\n  }\n\n  return [match['[[StartIndex]]'], match['[[EndIndex]]']];\n};","map":{"version":3,"names":["GetIntrinsic","require","$TypeError","Type","assertRecord","module","exports","GetMatchIndexPair","S","match","length"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/es-abstract/2022/GetMatchIndexPair.js"],"sourcesContent":["'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $TypeError = GetIntrinsic('%TypeError%');\n\nvar Type = require('./Type');\n\nvar assertRecord = require('../helpers/assertRecord');\n\n// https://ecma-international.org/ecma-262/13.0/#sec-getmatchindexpair\n\nmodule.exports = function GetMatchIndexPair(S, match) {\n\tif (Type(S) !== 'String') {\n\t\tthrow new $TypeError('Assertion failed: `S` must be a String');\n\t}\n\tassertRecord(Type, 'Match Record', 'match', match);\n\n\tif (!(match['[[StartIndex]]'] <= S.length)) {\n\t\tthrow new $TypeError('`match` [[StartIndex]] must be a non-negative integer <= the length of S');\n\t}\n\tif (!(match['[[EndIndex]]'] <= S.length)) {\n\t\tthrow new $TypeError('`match` [[EndIndex]] must be an integer between [[StartIndex]] and the length of S, inclusive');\n\t}\n\treturn [match['[[StartIndex]]'], match['[[EndIndex]]']];\n};\n"],"mappings":"AAAA;;AAEA,IAAIA,YAAY,GAAGC,OAAO,CAAC,eAAD,CAA1B;;AAEA,IAAIC,UAAU,GAAGF,YAAY,CAAC,aAAD,CAA7B;;AAEA,IAAIG,IAAI,GAAGF,OAAO,CAAC,QAAD,CAAlB;;AAEA,IAAIG,YAAY,GAAGH,OAAO,CAAC,yBAAD,CAA1B,C,CAEA;;;AAEAI,MAAM,CAACC,OAAP,GAAiB,SAASC,iBAAT,CAA2BC,CAA3B,EAA8BC,KAA9B,EAAqC;EACrD,IAAIN,IAAI,CAACK,CAAD,CAAJ,KAAY,QAAhB,EAA0B;IACzB,MAAM,IAAIN,UAAJ,CAAe,wCAAf,CAAN;EACA;;EACDE,YAAY,CAACD,IAAD,EAAO,cAAP,EAAuB,OAAvB,EAAgCM,KAAhC,CAAZ;;EAEA,IAAI,EAAEA,KAAK,CAAC,gBAAD,CAAL,IAA2BD,CAAC,CAACE,MAA/B,CAAJ,EAA4C;IAC3C,MAAM,IAAIR,UAAJ,CAAe,0EAAf,CAAN;EACA;;EACD,IAAI,EAAEO,KAAK,CAAC,cAAD,CAAL,IAAyBD,CAAC,CAACE,MAA7B,CAAJ,EAA0C;IACzC,MAAM,IAAIR,UAAJ,CAAe,+FAAf,CAAN;EACA;;EACD,OAAO,CAACO,KAAK,CAAC,gBAAD,CAAN,EAA0BA,KAAK,CAAC,cAAD,CAA/B,CAAP;AACA,CAbD"},"metadata":{},"sourceType":"script"}