{"ast":null,"code":"import parser from 'postcss-selector-parser';\nexport default function (prefix, selector) {\n  let prependNegative = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  return parser(selectors => {\n    selectors.walkClasses(classSelector => {\n      let baseClass = classSelector.value;\n      let shouldPlaceNegativeBeforePrefix = prependNegative && baseClass.startsWith('-');\n      classSelector.value = shouldPlaceNegativeBeforePrefix ? `-${prefix}${baseClass.slice(1)}` : `${prefix}${baseClass}`;\n    });\n  }).processSync(selector);\n}","map":{"version":3,"names":["parser","prefix","selector","prependNegative","selectors","walkClasses","classSelector","baseClass","value","shouldPlaceNegativeBeforePrefix","startsWith","slice","processSync"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/tailwindcss/src/util/prefixSelector.js"],"sourcesContent":["import parser from 'postcss-selector-parser'\n\nexport default function (prefix, selector, prependNegative = false) {\n  return parser((selectors) => {\n    selectors.walkClasses((classSelector) => {\n      let baseClass = classSelector.value\n      let shouldPlaceNegativeBeforePrefix = prependNegative && baseClass.startsWith('-')\n\n      classSelector.value = shouldPlaceNegativeBeforePrefix\n        ? `-${prefix}${baseClass.slice(1)}`\n        : `${prefix}${baseClass}`\n    })\n  }).processSync(selector)\n}\n"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,yBAAnB;AAEA,eAAe,UAAUC,MAAV,EAAkBC,QAAlB,EAAqD;EAAA,IAAzBC,eAAyB,uEAAP,KAAO;EAClE,OAAOH,MAAM,CAAEI,SAAD,IAAe;IAC3BA,SAAS,CAACC,WAAV,CAAuBC,aAAD,IAAmB;MACvC,IAAIC,SAAS,GAAGD,aAAa,CAACE,KAA9B;MACA,IAAIC,+BAA+B,GAAGN,eAAe,IAAII,SAAS,CAACG,UAAV,CAAqB,GAArB,CAAzD;MAEAJ,aAAa,CAACE,KAAd,GAAsBC,+BAA+B,GAChD,IAAGR,MAAO,GAAEM,SAAS,CAACI,KAAV,CAAgB,CAAhB,CAAmB,EADiB,GAEhD,GAAEV,MAAO,GAAEM,SAAU,EAF1B;IAGD,CAPD;EAQD,CATY,CAAN,CASJK,WATI,CASQV,QATR,CAAP;AAUD"},"metadata":{},"sourceType":"module"}