{"ast":null,"code":"/* global __webpack_dev_server_client__ */\nconst getSocketUrlParts = require('./utils/getSocketUrlParts.js');\n\nconst getUrlFromParts = require('./utils/getUrlFromParts');\n\nconst getWDSMetadata = require('./utils/getWDSMetadata');\n/**\n * Initializes a socket server for HMR for webpack-dev-server.\n * @param {function(*): void} messageHandler A handler to consume Webpack compilation messages.\n * @param {string} [resourceQuery] Webpack's `__resourceQuery` string.\n * @returns {void}\n */\n\n\nfunction initWDSSocket(messageHandler, resourceQuery) {\n  if (typeof __webpack_dev_server_client__ !== 'undefined') {\n    let SocketClient = __webpack_dev_server_client__;\n\n    if (typeof __webpack_dev_server_client__.default !== 'undefined') {\n      SocketClient = __webpack_dev_server_client__.default;\n    }\n\n    const wdsMeta = getWDSMetadata(SocketClient);\n    const urlParts = getSocketUrlParts(resourceQuery, wdsMeta);\n    const connection = new SocketClient(getUrlFromParts(urlParts, wdsMeta));\n    connection.onMessage(function onSocketMessage(data) {\n      const message = JSON.parse(data);\n      messageHandler(message);\n    });\n  }\n}\n\nmodule.exports = {\n  init: initWDSSocket\n};","map":{"version":3,"names":["getSocketUrlParts","require","getUrlFromParts","getWDSMetadata","initWDSSocket","messageHandler","resourceQuery","__webpack_dev_server_client__","SocketClient","default","wdsMeta","urlParts","connection","onMessage","onSocketMessage","data","message","JSON","parse","module","exports","init"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/@pmmmwh/react-refresh-webpack-plugin/sockets/WDSSocket.js"],"sourcesContent":["/* global __webpack_dev_server_client__ */\n\nconst getSocketUrlParts = require('./utils/getSocketUrlParts.js');\nconst getUrlFromParts = require('./utils/getUrlFromParts');\nconst getWDSMetadata = require('./utils/getWDSMetadata');\n\n/**\n * Initializes a socket server for HMR for webpack-dev-server.\n * @param {function(*): void} messageHandler A handler to consume Webpack compilation messages.\n * @param {string} [resourceQuery] Webpack's `__resourceQuery` string.\n * @returns {void}\n */\nfunction initWDSSocket(messageHandler, resourceQuery) {\n  if (typeof __webpack_dev_server_client__ !== 'undefined') {\n    let SocketClient = __webpack_dev_server_client__;\n    if (typeof __webpack_dev_server_client__.default !== 'undefined') {\n      SocketClient = __webpack_dev_server_client__.default;\n    }\n\n    const wdsMeta = getWDSMetadata(SocketClient);\n    const urlParts = getSocketUrlParts(resourceQuery, wdsMeta);\n\n    const connection = new SocketClient(getUrlFromParts(urlParts, wdsMeta));\n\n    connection.onMessage(function onSocketMessage(data) {\n      const message = JSON.parse(data);\n      messageHandler(message);\n    });\n  }\n}\n\nmodule.exports = { init: initWDSSocket };\n"],"mappings":"AAAA;AAEA,MAAMA,iBAAiB,GAAGC,OAAO,CAAC,8BAAD,CAAjC;;AACA,MAAMC,eAAe,GAAGD,OAAO,CAAC,yBAAD,CAA/B;;AACA,MAAME,cAAc,GAAGF,OAAO,CAAC,wBAAD,CAA9B;AAEA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASG,aAAT,CAAuBC,cAAvB,EAAuCC,aAAvC,EAAsD;EACpD,IAAI,OAAOC,6BAAP,KAAyC,WAA7C,EAA0D;IACxD,IAAIC,YAAY,GAAGD,6BAAnB;;IACA,IAAI,OAAOA,6BAA6B,CAACE,OAArC,KAAiD,WAArD,EAAkE;MAChED,YAAY,GAAGD,6BAA6B,CAACE,OAA7C;IACD;;IAED,MAAMC,OAAO,GAAGP,cAAc,CAACK,YAAD,CAA9B;IACA,MAAMG,QAAQ,GAAGX,iBAAiB,CAACM,aAAD,EAAgBI,OAAhB,CAAlC;IAEA,MAAME,UAAU,GAAG,IAAIJ,YAAJ,CAAiBN,eAAe,CAACS,QAAD,EAAWD,OAAX,CAAhC,CAAnB;IAEAE,UAAU,CAACC,SAAX,CAAqB,SAASC,eAAT,CAAyBC,IAAzB,EAA+B;MAClD,MAAMC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWH,IAAX,CAAhB;MACAV,cAAc,CAACW,OAAD,CAAd;IACD,CAHD;EAID;AACF;;AAEDG,MAAM,CAACC,OAAP,GAAiB;EAAEC,IAAI,EAAEjB;AAAR,CAAjB"},"metadata":{},"sourceType":"script"}