{"ast":null,"code":"self.cssBlankPseudo = function (e, t) {\n  var n = Object(t).className,\n      r = Object(t).attr || \"blank\",\n      o = Object(t).force;\n\n  try {\n    if (e.querySelector(\":blank\"), !o) return;\n  } catch (e) {}\n\n  var a,\n      i,\n      s,\n      c = (e.ownerDocument || e).defaultView;\n  d(c.HTMLInputElement), d(c.HTMLSelectElement), d(c.HTMLTextAreaElement), a = c.HTMLOptionElement, i = Object.getOwnPropertyDescriptor(a.prototype, \"selected\"), s = i.set, i.set = function (t) {\n    s.apply(this, arguments);\n    var n = e.createEvent(\"Event\");\n    n.initEvent(\"change\", !0, !0), this.dispatchEvent(n);\n  }, Object.defineProperty(a.prototype, \"selected\", i);\n  var l = /^(INPUT|SELECT|TEXTAREA)$/;\n\n  function p() {\n    this.value || \"SELECT\" === this.nodeName && this.options[this.selectedIndex].value ? (r && this.removeAttribute(r), n && this.classList.remove(n), this.removeAttribute(\"blank\")) : (r && this.setAttribute(\"blank\", r), n && this.classList.add(n));\n  }\n\n  function d(e) {\n    var t = Object.getOwnPropertyDescriptor(e.prototype, \"value\"),\n        n = t.set;\n    t.set = function (e) {\n      n.apply(this, arguments), p.apply(this);\n    }, Object.defineProperty(e.prototype, \"value\", t);\n  }\n\n  Array.prototype.forEach.call(e.querySelectorAll(\"INPUT,SELECT,TEXTAREA\"), function (e) {\n    \"SELECT\" === e.nodeName ? e.addEventListener(\"change\", p) : e.addEventListener(\"input\", p), p.call(e);\n  }), new MutationObserver(function (e) {\n    e.forEach(function (e) {\n      Array.prototype.forEach.call(e.addedNodes || [], function (e) {\n        1 === e.nodeType && l.test(e.nodeName) && (\"SELECT\" === e.nodeName ? e.addEventListener(\"change\", p) : e.addEventListener(\"input\", p), p.call(e));\n      }), Array.prototype.forEach.call(e.removedNodes || [], function (e) {\n        1 === e.nodeType && l.test(e.nodeName) && (\"SELECT\" === e.nodeName ? e.removeEventListener(\"change\", p) : e.removeEventListener(\"input\", p));\n      });\n    });\n  }).observe(e, {\n    childList: !0,\n    subtree: !0\n  });\n};","map":{"version":3,"mappings":"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","names":["self","cssBlankPseudo","document","opts","className","Object","attr","force","querySelector","ignoredError","HTMLElement","descriptor","nativeSet","window","ownerDocument","defaultView","observeValueOfHTMLElement","HTMLInputElement","HTMLSelectElement","HTMLTextAreaElement","HTMLOptionElement","getOwnPropertyDescriptor","prototype","set","value","apply","this","arguments","event","createEvent","initEvent","dispatchEvent","defineProperty","selectorRegExp","configureCssBlankAttribute","nodeName","options","selectedIndex","removeAttribute","classList","remove","setAttribute","add","Array","forEach","call","querySelectorAll","node","addEventListener","MutationObserver","mutationsList","mutation","addedNodes","nodeType","test","removedNodes","removeEventListener","observe","childList","subtree"],"sources":["C:\\Users\\Rohith\\mern\\frontend\\node_modules\\css-blank-pseudo\\src\\browser-global.js","C:\\Users\\Rohith\\mern\\frontend\\node_modules\\css-blank-pseudo\\src\\browser.js"],"sourcesContent":["/* global self */\nimport { default as cssBlankPseudo } from './browser';\nself.cssBlankPseudo = cssBlankPseudo;\n","/* global MutationObserver */\nexport default function cssBlankPseudo(document, opts) {\n\t// configuration\n\tconst className = Object(opts).className;\n\tconst attr = Object(opts).attr || 'blank';\n\tconst force = Object(opts).force;\n\n\ttry {\n\t\tdocument.querySelector(':blank');\n\n\t\tif (!force) {\n\t\t\treturn;\n\t\t}\n\t} catch (ignoredError) { /* do nothing and continue */ }\n\n\t// observe value changes on <input>, <select>, and <textarea>\n\tconst window = (document.ownerDocument || document).defaultView;\n\n\tobserveValueOfHTMLElement(window.HTMLInputElement);\n\tobserveValueOfHTMLElement(window.HTMLSelectElement);\n\tobserveValueOfHTMLElement(window.HTMLTextAreaElement);\n\tobserveSelectedOfHTMLElement(window.HTMLOptionElement);\n\n\t// form control elements selector\n\tconst selector = 'INPUT,SELECT,TEXTAREA';\n\tconst selectorRegExp = /^(INPUT|SELECT|TEXTAREA)$/;\n\n\t// conditionally update all form control elements\n\tArray.prototype.forEach.call(\n\t\tdocument.querySelectorAll(selector),\n\t\tnode => {\n\t\t\tif (node.nodeName === 'SELECT') {\n\t\t\t\tnode.addEventListener('change', configureCssBlankAttribute);\n\t\t\t} else {\n\t\t\t\tnode.addEventListener('input', configureCssBlankAttribute);\n\t\t\t}\n\n\t\t\tconfigureCssBlankAttribute.call(node);\n\t\t},\n\t);\n\n\t// conditionally observe added or unobserve removed form control elements\n\tnew MutationObserver(mutationsList => {\n\t\tmutationsList.forEach(mutation => {\n\t\t\tArray.prototype.forEach.call(\n\t\t\t\tmutation.addedNodes || [],\n\t\t\t\tnode => {\n\t\t\t\t\tif (node.nodeType === 1 && selectorRegExp.test(node.nodeName)) {\n\t\t\t\t\t\tif (node.nodeName === 'SELECT') {\n\t\t\t\t\t\t\tnode.addEventListener('change', configureCssBlankAttribute);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tnode.addEventListener('input', configureCssBlankAttribute);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconfigureCssBlankAttribute.call(node);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t);\n\n\t\t\tArray.prototype.forEach.call(\n\t\t\t\tmutation.removedNodes || [],\n\t\t\t\tnode => {\n\t\t\t\t\tif (node.nodeType === 1 && selectorRegExp.test(node.nodeName)) {\n\t\t\t\t\t\tif (node.nodeName === 'SELECT') {\n\t\t\t\t\t\t\tnode.removeEventListener('change', configureCssBlankAttribute);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tnode.removeEventListener('input', configureCssBlankAttribute);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t);\n\t\t});\n\t}).observe(document, { childList: true, subtree: true });\n\n\t// update a form control elementâ€™s css-blank attribute\n\tfunction configureCssBlankAttribute () {\n\t\tif (this.value || this.nodeName === 'SELECT' && this.options[this.selectedIndex].value) {\n\t\t\tif (attr) {\n\t\t\t\tthis.removeAttribute(attr);\n\t\t\t}\n\n\t\t\tif (className) {\n\t\t\t\tthis.classList.remove(className);\n\t\t\t}\n\t\t\tthis.removeAttribute('blank');\n\t\t} else {\n\t\t\tif (attr) {\n\t\t\t\tthis.setAttribute('blank', attr);\n\t\t\t}\n\n\t\t\tif (className) {\n\t\t\t\tthis.classList.add(className);\n\t\t\t}\n\t\t}\n\t}\n\n\t// observe changes to the \"value\" property on an HTML Element\n\tfunction observeValueOfHTMLElement (HTMLElement) {\n\t\tconst descriptor = Object.getOwnPropertyDescriptor(HTMLElement.prototype, 'value');\n\t\tconst nativeSet = descriptor.set;\n\n\t\tdescriptor.set = function set (value) { // eslint-disable-line no-unused-vars\n\t\t\tnativeSet.apply(this, arguments);\n\n\t\t\tconfigureCssBlankAttribute.apply(this);\n\t\t};\n\n\t\tObject.defineProperty(HTMLElement.prototype, 'value', descriptor);\n\t}\n\n\t// observe changes to the \"selected\" property on an HTML Element\n\tfunction observeSelectedOfHTMLElement (HTMLElement) {\n\t\tconst descriptor = Object.getOwnPropertyDescriptor(HTMLElement.prototype, 'selected');\n\t\tconst nativeSet = descriptor.set;\n\n\t\tdescriptor.set = function set (value) { // eslint-disable-line no-unused-vars\n\t\t\tnativeSet.apply(this, arguments);\n\n\t\t\tconst event = document.createEvent('Event');\n\t\t\tevent.initEvent('change', true, true);\n\t\t\tthis.dispatchEvent(event);\n\t\t};\n\n\t\tObject.defineProperty(HTMLElement.prototype, 'selected', descriptor);\n\t}\n}\n"]},"metadata":{},"sourceType":"script"}