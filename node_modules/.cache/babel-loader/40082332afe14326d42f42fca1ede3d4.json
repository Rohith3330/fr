{"ast":null,"code":"'use strict';\n\nvar util = require('util');\n\nvar net = require('net');\n\nfunction Socket(parent, options) {\n  net.Socket.call(this, options);\n  var state = {};\n  this._spdyState = state;\n  state.parent = parent;\n  this.servername = parent.servername;\n  this.npnProtocol = parent.npnProtocol;\n  this.alpnProtocol = parent.alpnProtocol;\n  this.authorized = parent.authorized;\n  this.authorizationError = parent.authorizationError;\n  this.encrypted = true;\n  this.allowHalfOpen = true;\n}\n\nutil.inherits(Socket, net.Socket);\nmodule.exports = Socket;\nvar methods = ['renegotiate', 'setMaxSendFragment', 'getTLSTicket', 'setServername', 'setSession', 'getPeerCertificate', 'getSession', 'isSessionReused', 'getCipher', 'getEphemeralKeyInfo'];\nmethods.forEach(function (method) {\n  Socket.prototype[method] = function methodWrap() {\n    var parent = this._spdyState.parent;\n    return parent[method].apply(parent, arguments);\n  };\n});","map":{"version":3,"names":["util","require","net","Socket","parent","options","call","state","_spdyState","servername","npnProtocol","alpnProtocol","authorized","authorizationError","encrypted","allowHalfOpen","inherits","module","exports","methods","forEach","method","prototype","methodWrap","apply","arguments"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/spdy/lib/spdy/socket.js"],"sourcesContent":["'use strict'\n\nvar util = require('util')\nvar net = require('net')\n\nfunction Socket (parent, options) {\n  net.Socket.call(this, options)\n\n  var state = {}\n\n  this._spdyState = state\n\n  state.parent = parent\n\n  this.servername = parent.servername\n  this.npnProtocol = parent.npnProtocol\n  this.alpnProtocol = parent.alpnProtocol\n  this.authorized = parent.authorized\n  this.authorizationError = parent.authorizationError\n  this.encrypted = true\n  this.allowHalfOpen = true\n}\n\nutil.inherits(Socket, net.Socket)\n\nmodule.exports = Socket\n\nvar methods = [\n  'renegotiate', 'setMaxSendFragment', 'getTLSTicket', 'setServername',\n  'setSession', 'getPeerCertificate', 'getSession', 'isSessionReused',\n  'getCipher', 'getEphemeralKeyInfo'\n]\n\nmethods.forEach(function (method) {\n  Socket.prototype[method] = function methodWrap () {\n    var parent = this._spdyState.parent\n    return parent[method].apply(parent, arguments)\n  }\n})\n"],"mappings":"AAAA;;AAEA,IAAIA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAAlB;;AACA,IAAIC,GAAG,GAAGD,OAAO,CAAC,KAAD,CAAjB;;AAEA,SAASE,MAAT,CAAiBC,MAAjB,EAAyBC,OAAzB,EAAkC;EAChCH,GAAG,CAACC,MAAJ,CAAWG,IAAX,CAAgB,IAAhB,EAAsBD,OAAtB;EAEA,IAAIE,KAAK,GAAG,EAAZ;EAEA,KAAKC,UAAL,GAAkBD,KAAlB;EAEAA,KAAK,CAACH,MAAN,GAAeA,MAAf;EAEA,KAAKK,UAAL,GAAkBL,MAAM,CAACK,UAAzB;EACA,KAAKC,WAAL,GAAmBN,MAAM,CAACM,WAA1B;EACA,KAAKC,YAAL,GAAoBP,MAAM,CAACO,YAA3B;EACA,KAAKC,UAAL,GAAkBR,MAAM,CAACQ,UAAzB;EACA,KAAKC,kBAAL,GAA0BT,MAAM,CAACS,kBAAjC;EACA,KAAKC,SAAL,GAAiB,IAAjB;EACA,KAAKC,aAAL,GAAqB,IAArB;AACD;;AAEDf,IAAI,CAACgB,QAAL,CAAcb,MAAd,EAAsBD,GAAG,CAACC,MAA1B;AAEAc,MAAM,CAACC,OAAP,GAAiBf,MAAjB;AAEA,IAAIgB,OAAO,GAAG,CACZ,aADY,EACG,oBADH,EACyB,cADzB,EACyC,eADzC,EAEZ,YAFY,EAEE,oBAFF,EAEwB,YAFxB,EAEsC,iBAFtC,EAGZ,WAHY,EAGC,qBAHD,CAAd;AAMAA,OAAO,CAACC,OAAR,CAAgB,UAAUC,MAAV,EAAkB;EAChClB,MAAM,CAACmB,SAAP,CAAiBD,MAAjB,IAA2B,SAASE,UAAT,GAAuB;IAChD,IAAInB,MAAM,GAAG,KAAKI,UAAL,CAAgBJ,MAA7B;IACA,OAAOA,MAAM,CAACiB,MAAD,CAAN,CAAeG,KAAf,CAAqBpB,MAArB,EAA6BqB,SAA7B,CAAP;EACD,CAHD;AAID,CALD"},"metadata":{},"sourceType":"script"}