{"ast":null,"code":"/**\n * @fileoverview Enforce explicit role property is not the\n * same as implicit default role property on element.\n * @author Ethan Cohen <@evcohen>\n */\n// -----------------------------------------------------------------------------\n// Requirements\n// -----------------------------------------------------------------------------\nimport { RuleTester } from 'eslint';\nimport parserOptionsMapper from '../../__util__/parserOptionsMapper';\nimport rule from '../../../src/rules/no-redundant-roles';\nimport ruleOptionsMapperFactory from '../../__util__/ruleOptionsMapperFactory'; // -----------------------------------------------------------------------------\n// Tests\n// -----------------------------------------------------------------------------\n\nconst ruleTester = new RuleTester();\n\nconst expectedError = (element, implicitRole) => ({\n  message: `The element ${element} has an implicit role of ${implicitRole}. Defining this explicitly is redundant and should be avoided.`,\n  type: 'JSXOpeningElement'\n});\n\nconst ruleName = 'jsx-a11y/no-redundant-roles';\nconst componentsSettings = {\n  'jsx-a11y': {\n    components: {\n      Button: 'button'\n    }\n  }\n};\nconst alwaysValid = [{\n  code: '<div />;'\n}, {\n  code: '<button role=\"main\" />'\n}, {\n  code: '<MyComponent role=\"button\" />'\n}, {\n  code: '<button role={`${foo}button`} />'\n}, {\n  code: '<Button role={`${foo}button`} />',\n  settings: componentsSettings\n}];\nconst neverValid = [{\n  code: '<button role=\"button\" />',\n  errors: [expectedError('button', 'button')]\n}, {\n  code: '<body role=\"DOCUMENT\" />',\n  errors: [expectedError('body', 'document')]\n}, {\n  code: '<Button role=\"button\" />',\n  settings: componentsSettings,\n  errors: [expectedError('button', 'button')]\n}];\nruleTester.run(`${ruleName}:recommended`, rule, {\n  valid: [...alwaysValid, {\n    code: '<nav role=\"navigation\" />'\n  }].map(parserOptionsMapper),\n  invalid: neverValid.map(parserOptionsMapper)\n});\nconst noNavExceptionsOptions = {\n  nav: []\n};\nconst listException = {\n  ul: ['list'],\n  ol: ['list']\n};\nruleTester.run(`${ruleName}:recommended`, rule, {\n  valid: alwaysValid.map(ruleOptionsMapperFactory(noNavExceptionsOptions)).map(parserOptionsMapper),\n  invalid: [...neverValid, {\n    code: '<nav role=\"navigation\" />',\n    errors: [expectedError('nav', 'navigation')]\n  }].map(ruleOptionsMapperFactory(noNavExceptionsOptions)).map(parserOptionsMapper)\n});\nruleTester.run(`${ruleName}:recommended (valid list role override)`, rule, {\n  valid: [{\n    code: '<ul role=\"list\" />'\n  }, {\n    code: '<ol role=\"list\" />'\n  }, {\n    code: '<dl role=\"list\" />'\n  }].map(ruleOptionsMapperFactory(listException)).map(parserOptionsMapper),\n  invalid: [{\n    code: '<ul role=\"list\" />',\n    errors: [expectedError('ul', 'list')]\n  }, {\n    code: '<ol role=\"list\" />',\n    errors: [expectedError('ol', 'list')]\n  }].map(parserOptionsMapper)\n});","map":{"version":3,"names":["RuleTester","parserOptionsMapper","rule","ruleOptionsMapperFactory","ruleTester","expectedError","element","implicitRole","message","type","ruleName","componentsSettings","components","Button","alwaysValid","code","settings","neverValid","errors","run","valid","map","invalid","noNavExceptionsOptions","nav","listException","ul","ol"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/eslint-plugin-jsx-a11y/__tests__/src/rules/no-redundant-roles-test.js"],"sourcesContent":["/**\n * @fileoverview Enforce explicit role property is not the\n * same as implicit default role property on element.\n * @author Ethan Cohen <@evcohen>\n */\n\n// -----------------------------------------------------------------------------\n// Requirements\n// -----------------------------------------------------------------------------\n\nimport { RuleTester } from 'eslint';\nimport parserOptionsMapper from '../../__util__/parserOptionsMapper';\nimport rule from '../../../src/rules/no-redundant-roles';\nimport ruleOptionsMapperFactory from '../../__util__/ruleOptionsMapperFactory';\n\n// -----------------------------------------------------------------------------\n// Tests\n// -----------------------------------------------------------------------------\n\nconst ruleTester = new RuleTester();\n\nconst expectedError = (element, implicitRole) => ({\n  message: `The element ${element} has an implicit role of ${implicitRole}. Defining this explicitly is redundant and should be avoided.`,\n  type: 'JSXOpeningElement',\n});\n\nconst ruleName = 'jsx-a11y/no-redundant-roles';\n\nconst componentsSettings = {\n  'jsx-a11y': {\n    components: {\n      Button: 'button',\n    },\n  },\n};\n\nconst alwaysValid = [\n  { code: '<div />;' },\n  { code: '<button role=\"main\" />' },\n  { code: '<MyComponent role=\"button\" />' },\n  { code: '<button role={`${foo}button`} />' },\n  { code: '<Button role={`${foo}button`} />', settings: componentsSettings },\n];\n\nconst neverValid = [\n  { code: '<button role=\"button\" />', errors: [expectedError('button', 'button')] },\n  { code: '<body role=\"DOCUMENT\" />', errors: [expectedError('body', 'document')] },\n  { code: '<Button role=\"button\" />', settings: componentsSettings, errors: [expectedError('button', 'button')] },\n];\n\nruleTester.run(`${ruleName}:recommended`, rule, {\n  valid: [\n    ...alwaysValid,\n    { code: '<nav role=\"navigation\" />' },\n  ]\n    .map(parserOptionsMapper),\n  invalid: neverValid\n    .map(parserOptionsMapper),\n});\n\nconst noNavExceptionsOptions = { nav: [] };\nconst listException = { ul: ['list'], ol: ['list'] };\n\nruleTester.run(`${ruleName}:recommended`, rule, {\n  valid: alwaysValid\n    .map(ruleOptionsMapperFactory(noNavExceptionsOptions))\n    .map(parserOptionsMapper),\n  invalid: [\n    ...neverValid,\n    { code: '<nav role=\"navigation\" />', errors: [expectedError('nav', 'navigation')] },\n  ]\n    .map(ruleOptionsMapperFactory(noNavExceptionsOptions))\n    .map(parserOptionsMapper),\n});\n\nruleTester.run(`${ruleName}:recommended (valid list role override)`, rule, {\n  valid: [\n    { code: '<ul role=\"list\" />' },\n    { code: '<ol role=\"list\" />' },\n    { code: '<dl role=\"list\" />' },\n  ]\n    .map(ruleOptionsMapperFactory(listException))\n    .map(parserOptionsMapper),\n  invalid: [\n    { code: '<ul role=\"list\" />', errors: [expectedError('ul', 'list')] },\n    { code: '<ol role=\"list\" />', errors: [expectedError('ol', 'list')] },\n  ]\n    .map(parserOptionsMapper),\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}