{"ast":null,"code":"function iterateProps(obj, iterator) {\n  Object.keys(obj).forEach(key => iterator({ ...obj[key],\n    name: key\n  }));\n}\n\nfunction mapProps(obj) {\n  return Object.keys(obj).map(key => ({ ...obj[key],\n    name: key\n  }));\n}\n\nfunction filterProps(obj, filter) {\n  const ret = {};\n  Object.keys(obj).forEach(key => {\n    if (filter(obj[key])) {\n      ret[key] = obj[key];\n    }\n  });\n  return ret;\n}\n\nfunction typeSignature(meta) {\n  const type = meta.array ? `Array<${meta.type}>` : meta.type;\n\n  if (meta.optional) {\n    return `${meta.name}?: ${type}`;\n  } else if (meta.maybe) {\n    return `${meta.name}: ?${type}`;\n  } else {\n    return `${meta.name}: ${type}`;\n  }\n}\n\nconst unique = items => Array.from(new Set(items));\n\nmodule.exports = {\n  iterateProps,\n  mapProps,\n  filterProps,\n  typeSignature,\n  unique\n};","map":{"version":3,"names":["iterateProps","obj","iterator","Object","keys","forEach","key","name","mapProps","map","filterProps","filter","ret","typeSignature","meta","type","array","optional","maybe","unique","items","Array","from","Set","module","exports"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/@webassemblyjs/ast/scripts/util.js"],"sourcesContent":["function iterateProps(obj, iterator) {\n  Object.keys(obj).forEach(key => iterator({ ...obj[key], name: key }));\n}\n\nfunction mapProps(obj) {\n  return Object.keys(obj).map(key => ({ ...obj[key], name: key }));\n}\n\nfunction filterProps(obj, filter) {\n  const ret = {};\n  Object.keys(obj).forEach(key => {\n    if (filter(obj[key])) {\n      ret[key] = obj[key];\n    }\n  });\n  return ret;\n}\n\nfunction typeSignature(meta) {\n  const type = meta.array ? `Array<${meta.type}>` : meta.type;\n  if (meta.optional) {\n    return `${meta.name}?: ${type}`;\n  } else if (meta.maybe) {\n    return `${meta.name}: ?${type}`;\n  } else {\n    return `${meta.name}: ${type}`;\n  }\n}\n\nconst unique = items => Array.from(new Set(items));\n\nmodule.exports = {\n  iterateProps,\n  mapProps,\n  filterProps,\n  typeSignature,\n  unique\n};\n"],"mappings":"AAAA,SAASA,YAAT,CAAsBC,GAAtB,EAA2BC,QAA3B,EAAqC;EACnCC,MAAM,CAACC,IAAP,CAAYH,GAAZ,EAAiBI,OAAjB,CAAyBC,GAAG,IAAIJ,QAAQ,CAAC,EAAE,GAAGD,GAAG,CAACK,GAAD,CAAR;IAAeC,IAAI,EAAED;EAArB,CAAD,CAAxC;AACD;;AAED,SAASE,QAAT,CAAkBP,GAAlB,EAAuB;EACrB,OAAOE,MAAM,CAACC,IAAP,CAAYH,GAAZ,EAAiBQ,GAAjB,CAAqBH,GAAG,KAAK,EAAE,GAAGL,GAAG,CAACK,GAAD,CAAR;IAAeC,IAAI,EAAED;EAArB,CAAL,CAAxB,CAAP;AACD;;AAED,SAASI,WAAT,CAAqBT,GAArB,EAA0BU,MAA1B,EAAkC;EAChC,MAAMC,GAAG,GAAG,EAAZ;EACAT,MAAM,CAACC,IAAP,CAAYH,GAAZ,EAAiBI,OAAjB,CAAyBC,GAAG,IAAI;IAC9B,IAAIK,MAAM,CAACV,GAAG,CAACK,GAAD,CAAJ,CAAV,EAAsB;MACpBM,GAAG,CAACN,GAAD,CAAH,GAAWL,GAAG,CAACK,GAAD,CAAd;IACD;EACF,CAJD;EAKA,OAAOM,GAAP;AACD;;AAED,SAASC,aAAT,CAAuBC,IAAvB,EAA6B;EAC3B,MAAMC,IAAI,GAAGD,IAAI,CAACE,KAAL,GAAc,SAAQF,IAAI,CAACC,IAAK,GAAhC,GAAqCD,IAAI,CAACC,IAAvD;;EACA,IAAID,IAAI,CAACG,QAAT,EAAmB;IACjB,OAAQ,GAAEH,IAAI,CAACP,IAAK,MAAKQ,IAAK,EAA9B;EACD,CAFD,MAEO,IAAID,IAAI,CAACI,KAAT,EAAgB;IACrB,OAAQ,GAAEJ,IAAI,CAACP,IAAK,MAAKQ,IAAK,EAA9B;EACD,CAFM,MAEA;IACL,OAAQ,GAAED,IAAI,CAACP,IAAK,KAAIQ,IAAK,EAA7B;EACD;AACF;;AAED,MAAMI,MAAM,GAAGC,KAAK,IAAIC,KAAK,CAACC,IAAN,CAAW,IAAIC,GAAJ,CAAQH,KAAR,CAAX,CAAxB;;AAEAI,MAAM,CAACC,OAAP,GAAiB;EACfzB,YADe;EAEfQ,QAFe;EAGfE,WAHe;EAIfG,aAJe;EAKfM;AALe,CAAjB"},"metadata":{},"sourceType":"script"}