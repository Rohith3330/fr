{"ast":null,"code":"/* eslint no-restricted-syntax: 0, no-with: 0, strict: 0 */\nvar test = require('tape');\n\nvar shimUnscopables = require('../');\n\ntest('`with` statement', {\n  skip: typeof Symbol !== 'function' || !Symbol.unscopables\n}, function (t) {\n  var entries;\n  var concat;\n  with ([]) {\n    t.equal(concat, Array.prototype.concat, 'concat is dynamically bound');\n    t.notEqual(entries, Array.prototype.entries, 'entries is not dynamically bound');\n  }\n  var obj = {\n    foo: 1,\n    bar: 2\n  };\n  var foo;\n  var bar;\n  obj[Symbol.unscopables] = {\n    foo: true\n  };\n  with (obj) {\n    t.equal(foo, undefined);\n    t.equal(bar, obj.bar);\n  }\n  shimUnscopables('concat');\n  with ([]) {\n    t.notEqual(concat, Array.prototype.concat, 'concat is no longer dynamically bound');\n    t.notEqual(entries, Array.prototype.entries, 'entries is still not dynamically bound');\n  }\n  t.end();\n});","map":{"version":3,"names":["test","require","shimUnscopables","skip","Symbol","unscopables","t","entries","concat","equal","Array","prototype","notEqual","obj","foo","bar","undefined","end"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/es-shim-unscopables/test/with.js"],"sourcesContent":["/* eslint no-restricted-syntax: 0, no-with: 0, strict: 0 */\n\nvar test = require('tape');\n\nvar shimUnscopables = require('../');\n\ntest('`with` statement', { skip: typeof Symbol !== 'function' || !Symbol.unscopables }, function (t) {\n\tvar entries;\n\tvar concat;\n\twith ([]) {\n\t\tt.equal(concat, Array.prototype.concat, 'concat is dynamically bound');\n\t\tt.notEqual(entries, Array.prototype.entries, 'entries is not dynamically bound');\n\t}\n\n\tvar obj = {\n\t\tfoo: 1,\n\t\tbar: 2\n\t};\n\tvar foo;\n\tvar bar;\n\tobj[Symbol.unscopables] = { foo: true };\n\twith (obj) {\n\t\tt.equal(foo, undefined);\n\t\tt.equal(bar, obj.bar);\n\t}\n\n\tshimUnscopables('concat');\n\n\twith ([]) {\n\t\tt.notEqual(concat, Array.prototype.concat, 'concat is no longer dynamically bound');\n\t\tt.notEqual(entries, Array.prototype.entries, 'entries is still not dynamically bound');\n\t}\n\n\tt.end();\n});\n"],"mappings":"AAAA;AAEA,IAAIA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAAlB;;AAEA,IAAIC,eAAe,GAAGD,OAAO,CAAC,KAAD,CAA7B;;AAEAD,IAAI,CAAC,kBAAD,EAAqB;EAAEG,IAAI,EAAE,OAAOC,MAAP,KAAkB,UAAlB,IAAgC,CAACA,MAAM,CAACC;AAAhD,CAArB,EAAoF,UAAUC,CAAV,EAAa;EACpG,IAAIC,OAAJ;EACA,IAAIC,MAAJ;EACA,MAAM,EAAN,EAAU;IACTF,CAAC,CAACG,KAAF,CAAQD,MAAR,EAAgBE,KAAK,CAACC,SAAN,CAAgBH,MAAhC,EAAwC,6BAAxC;IACAF,CAAC,CAACM,QAAF,CAAWL,OAAX,EAAoBG,KAAK,CAACC,SAAN,CAAgBJ,OAApC,EAA6C,kCAA7C;EACA;EAED,IAAIM,GAAG,GAAG;IACTC,GAAG,EAAE,CADI;IAETC,GAAG,EAAE;EAFI,CAAV;EAIA,IAAID,GAAJ;EACA,IAAIC,GAAJ;EACAF,GAAG,CAACT,MAAM,CAACC,WAAR,CAAH,GAA0B;IAAES,GAAG,EAAE;EAAP,CAA1B;EACA,MAAMD,GAAN,EAAW;IACVP,CAAC,CAACG,KAAF,CAAQK,GAAR,EAAaE,SAAb;IACAV,CAAC,CAACG,KAAF,CAAQM,GAAR,EAAaF,GAAG,CAACE,GAAjB;EACA;EAEDb,eAAe,CAAC,QAAD,CAAf;EAEA,MAAM,EAAN,EAAU;IACTI,CAAC,CAACM,QAAF,CAAWJ,MAAX,EAAmBE,KAAK,CAACC,SAAN,CAAgBH,MAAnC,EAA2C,uCAA3C;IACAF,CAAC,CAACM,QAAF,CAAWL,OAAX,EAAoBG,KAAK,CAACC,SAAN,CAAgBJ,OAApC,EAA6C,wCAA7C;EACA;EAEDD,CAAC,CAACW,GAAF;AACA,CA5BG,CAAJ"},"metadata":{},"sourceType":"script"}