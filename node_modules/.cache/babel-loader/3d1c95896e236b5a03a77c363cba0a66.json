{"ast":null,"code":"/**\n * @popperjs/core v2.11.6 - MIT License\n */\n!function (e, t) {\n  \"object\" == typeof exports && \"undefined\" != typeof module ? t(exports) : \"function\" == typeof define && define.amd ? define([\"exports\"], t) : t((e = \"undefined\" != typeof globalThis ? globalThis : e || self).Popper = {});\n}(this, function (e) {\n  \"use strict\";\n\n  var t = \"bottom\",\n      r = \"right\",\n      o = \"left\",\n      n = \"auto\",\n      a = [\"top\", t, r, o],\n      i = \"start\",\n      f = \"end\",\n      p = a.reduce(function (e, t) {\n    return e.concat([t + \"-\" + i, t + \"-\" + f]);\n  }, []),\n      c = [].concat(a, [n]).reduce(function (e, t) {\n    return e.concat([t, t + \"-\" + i, t + \"-\" + f]);\n  }, []),\n      d = \"beforeRead\",\n      s = \"read\",\n      u = \"afterRead\",\n      l = \"beforeMain\",\n      b = \"main\",\n      m = \"afterMain\",\n      P = \"beforeWrite\",\n      g = \"write\",\n      h = \"afterWrite\",\n      v = [d, s, u, l, b, m, P, g, h];\n  e.afterMain = m, e.afterRead = u, e.afterWrite = h, e.auto = n, e.basePlacements = a, e.beforeMain = l, e.beforeRead = d, e.beforeWrite = P, e.bottom = t, e.clippingParents = \"clippingParents\", e.end = f, e.left = o, e.main = b, e.modifierPhases = v, e.placements = c, e.popper = \"popper\", e.read = s, e.reference = \"reference\", e.right = r, e.start = i, e.top = \"top\", e.variationPlacements = p, e.viewport = \"viewport\", e.write = g, Object.defineProperty(e, \"__esModule\", {\n    value: !0\n  });\n});","map":{"version":3,"mappings":";;;;;;;;MAEaA,IAAmB;MACnBC,IAAiB;MACjBC,IAAe;MACfC,IAAe;MAMfC,IAAuC,CAV1B,KAU0B,EAAMJ,CAAN,EAAcC,CAAd,EAAqBC,CAArB;MAEvCG,IAAiB;MACjBC,IAAa;MAyBbC,IAAiDH,EAAeI,MAAfJ,CAC5D,UAACK,CAAD,EAAiCC,CAAjC,EAAiCA;IAAAA,OAC/BD,EAAIE,MAAJF,CAAW,CAAKC,UAAaL,CAAlB,EAAqCK,UAAaJ,CAAlD,CAAXG,CAD+BC;EAC8BJ,CAFHF,EAG5D,EAH4DA;MAKjDQ,IAA+B,UAAIR,CAAJ,EAAIA,CAAgBD,CAAhBC,CAAJ,EAA0BI,MAA1B,CAC1C,UACEC,CADF,EAEEC,CAFF,EAEEA;IAAAA,OAEAD,EAAIE,MAAJF,CAAW,CACTC,CADS,EAELA,UAAaL,CAFR,EAGLK,UAAaJ,CAHR,CAAXG,CAFAC;EAKmBJ,CARqB,EAU1C,EAV0C;MAc/BO,IAA2B;MAC3BC,IAAe;MACfC,IAAyB;MAEzBC,IAA2B;MAC3BC,IAAe;MACfC,IAAyB;MAEzBC,IAA6B;MAC7BC,IAAiB;MACjBC,IAA2B;MAC3BC,IAAwC,CACnDT,CADmD,EAEnDC,CAFmD,EAGnDC,CAHmD,EAInDC,CAJmD,EAKnDC,CALmD,EAMnDC,CANmD,EAOnDC,CAPmD,EAQnDC,CARmD,EASnDC,CATmD;EASnDA,+KA7DgD,iBA6DhDA,EA7DgDE,SA6DhDF,EA7DgDE,UA6DhDF,EA7DgDE,UA6DhDF,EA7DgDE,oBA6DhDF,EA7DgDE,gBA6DhDF,EA7DgDE,WAKlB,QAwD9BF,EAxD8BE,UAwD9BF,EAxD8BE,cACM,WAuDpCF,EAvDoCE,WAuDpCF,EAvDoCE,WAuDpCF,EAvDoCE,QAtBZ,KA6ExBF,EA7EwBE,yBA6ExBF,EA7EwBE,aAiBU,UA4DlCF,EA5DkCE,WA4DlCF,EA5DkCG;IAAAC;EAAA,EA4DlCJ;AA5DkC","names":["bottom","right","left","auto","basePlacements","start","end","variationPlacements","reduce","acc","placement","concat","placements","beforeRead","read","afterRead","beforeMain","main","afterMain","beforeWrite","write","afterWrite","modifierPhases","e","Object","value"],"sources":["C:\\Users\\Rohith\\mern\\frontend\\node_modules\\@popperjs\\core\\src\\enums.js"],"sourcesContent":["// @flow\nexport const top: 'top' = 'top';\nexport const bottom: 'bottom' = 'bottom';\nexport const right: 'right' = 'right';\nexport const left: 'left' = 'left';\nexport const auto: 'auto' = 'auto';\nexport type BasePlacement =\n  | typeof top\n  | typeof bottom\n  | typeof right\n  | typeof left;\nexport const basePlacements: Array<BasePlacement> = [top, bottom, right, left];\n\nexport const start: 'start' = 'start';\nexport const end: 'end' = 'end';\nexport type Variation = typeof start | typeof end;\n\nexport const clippingParents: 'clippingParents' = 'clippingParents';\nexport const viewport: 'viewport' = 'viewport';\nexport type Boundary = Element | Array<Element> | typeof clippingParents;\nexport type RootBoundary = typeof viewport | 'document';\n\nexport const popper: 'popper' = 'popper';\nexport const reference: 'reference' = 'reference';\nexport type Context = typeof popper | typeof reference;\n\nexport type VariationPlacement =\n  | 'top-start'\n  | 'top-end'\n  | 'bottom-start'\n  | 'bottom-end'\n  | 'right-start'\n  | 'right-end'\n  | 'left-start'\n  | 'left-end';\nexport type AutoPlacement = 'auto' | 'auto-start' | 'auto-end';\nexport type ComputedPlacement = VariationPlacement | BasePlacement;\nexport type Placement = AutoPlacement | BasePlacement | VariationPlacement;\n\nexport const variationPlacements: Array<VariationPlacement> = basePlacements.reduce(\n  (acc: Array<VariationPlacement>, placement: BasePlacement) =>\n    acc.concat([(`${placement}-${start}`: any), (`${placement}-${end}`: any)]),\n  []\n);\nexport const placements: Array<Placement> = [...basePlacements, auto].reduce(\n  (\n    acc: Array<Placement>,\n    placement: BasePlacement | typeof auto\n  ): Array<Placement> =>\n    acc.concat([\n      placement,\n      (`${placement}-${start}`: any),\n      (`${placement}-${end}`: any),\n    ]),\n  []\n);\n\n// modifiers that need to read the DOM\nexport const beforeRead: 'beforeRead' = 'beforeRead';\nexport const read: 'read' = 'read';\nexport const afterRead: 'afterRead' = 'afterRead';\n// pure-logic modifiers\nexport const beforeMain: 'beforeMain' = 'beforeMain';\nexport const main: 'main' = 'main';\nexport const afterMain: 'afterMain' = 'afterMain';\n// modifier with the purpose to write to the DOM (or write into a framework state)\nexport const beforeWrite: 'beforeWrite' = 'beforeWrite';\nexport const write: 'write' = 'write';\nexport const afterWrite: 'afterWrite' = 'afterWrite';\nexport const modifierPhases: Array<ModifierPhases> = [\n  beforeRead,\n  read,\n  afterRead,\n  beforeMain,\n  main,\n  afterMain,\n  beforeWrite,\n  write,\n  afterWrite,\n];\n\nexport type ModifierPhases =\n  | typeof beforeRead\n  | typeof read\n  | typeof afterRead\n  | typeof beforeMain\n  | typeof main\n  | typeof afterMain\n  | typeof beforeWrite\n  | typeof write\n  | typeof afterWrite;\n"]},"metadata":{},"sourceType":"script"}