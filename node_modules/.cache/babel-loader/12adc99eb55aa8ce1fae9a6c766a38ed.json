{"ast":null,"code":"/** @typedef {string | string[] | import('webpack').Entry} StaticEntry */\n\n/** @typedef {StaticEntry | import('webpack').EntryFunc} WebpackEntry */\nconst EntryParseError = new Error(['[ReactRefreshPlugin]', 'Failed to parse the Webpack `entry` object!', 'Please ensure the `entry` option in your Webpack config is specified.'].join(' '));\n/**\n * Webpack entries related to socket integrations.\n * They have to run before any code that sets up the error overlay.\n * @type {string[]}\n */\n\nconst socketEntries = ['webpack-dev-server/client', 'webpack-hot-middleware/client', 'webpack-plugin-serve/client', 'react-dev-utils/webpackHotDevClient'];\n/**\n * Checks if a Webpack entry string is related to socket integrations.\n * @param {string} entry A Webpack entry string.\n * @returns {boolean} Whether the entry is related to socket integrations.\n */\n\nfunction isSocketEntry(entry) {\n  return socketEntries.some(socketEntry => entry.includes(socketEntry));\n}\n/**\n * Injects an entry to the bundle for react-refresh.\n * @param {WebpackEntry} [originalEntry] A Webpack entry object.\n * @param {import('./getAdditionalEntries').AdditionalEntries} additionalEntries An object that contains the Webpack entries for prepending and the overlay feature\n * @returns {WebpackEntry} An injected entry object.\n */\n\n\nfunction injectRefreshEntry(originalEntry, additionalEntries) {\n  const {\n    prependEntries,\n    overlayEntries\n  } = additionalEntries; // Single string entry point\n\n  if (typeof originalEntry === 'string') {\n    if (isSocketEntry(originalEntry)) {\n      return [...prependEntries, originalEntry, ...overlayEntries];\n    }\n\n    return [...prependEntries, ...overlayEntries, originalEntry];\n  } // Single array entry point\n\n\n  if (Array.isArray(originalEntry)) {\n    if (originalEntry.length === 0) {\n      throw EntryParseError;\n    }\n\n    const socketEntryIndex = originalEntry.findIndex(isSocketEntry);\n    let socketAndPrecedingEntries = [];\n\n    if (socketEntryIndex !== -1) {\n      socketAndPrecedingEntries = originalEntry.splice(0, socketEntryIndex + 1);\n    }\n\n    return [...prependEntries, ...socketAndPrecedingEntries, ...overlayEntries, ...originalEntry];\n  } // Multiple entry points\n\n\n  if (typeof originalEntry === 'object') {\n    const entries = Object.entries(originalEntry);\n\n    if (entries.length === 0) {\n      throw EntryParseError;\n    }\n\n    return entries.reduce((acc, _ref) => {\n      let [curKey, curEntry] = _ref;\n      return { ...acc,\n        [curKey]: typeof curEntry === 'object' && curEntry.import ? { ...curEntry,\n          import: injectRefreshEntry(curEntry.import, additionalEntries)\n        } : injectRefreshEntry(curEntry, additionalEntries)\n      };\n    }, {});\n  } // Dynamic entry points\n\n\n  if (typeof originalEntry === 'function') {\n    return function () {\n      return Promise.resolve(originalEntry(...arguments)).then(resolvedEntry => injectRefreshEntry(resolvedEntry, additionalEntries));\n    };\n  }\n\n  throw EntryParseError;\n}\n\nmodule.exports = injectRefreshEntry;\nmodule.exports.socketEntries = socketEntries;","map":{"version":3,"names":["EntryParseError","Error","join","socketEntries","isSocketEntry","entry","some","socketEntry","includes","injectRefreshEntry","originalEntry","additionalEntries","prependEntries","overlayEntries","Array","isArray","length","socketEntryIndex","findIndex","socketAndPrecedingEntries","splice","entries","Object","reduce","acc","curKey","curEntry","import","Promise","resolve","then","resolvedEntry","module","exports"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/utils/injectRefreshEntry.js"],"sourcesContent":["/** @typedef {string | string[] | import('webpack').Entry} StaticEntry */\n/** @typedef {StaticEntry | import('webpack').EntryFunc} WebpackEntry */\n\nconst EntryParseError = new Error(\n  [\n    '[ReactRefreshPlugin]',\n    'Failed to parse the Webpack `entry` object!',\n    'Please ensure the `entry` option in your Webpack config is specified.',\n  ].join(' ')\n);\n\n/**\n * Webpack entries related to socket integrations.\n * They have to run before any code that sets up the error overlay.\n * @type {string[]}\n */\nconst socketEntries = [\n  'webpack-dev-server/client',\n  'webpack-hot-middleware/client',\n  'webpack-plugin-serve/client',\n  'react-dev-utils/webpackHotDevClient',\n];\n\n/**\n * Checks if a Webpack entry string is related to socket integrations.\n * @param {string} entry A Webpack entry string.\n * @returns {boolean} Whether the entry is related to socket integrations.\n */\nfunction isSocketEntry(entry) {\n  return socketEntries.some((socketEntry) => entry.includes(socketEntry));\n}\n\n/**\n * Injects an entry to the bundle for react-refresh.\n * @param {WebpackEntry} [originalEntry] A Webpack entry object.\n * @param {import('./getAdditionalEntries').AdditionalEntries} additionalEntries An object that contains the Webpack entries for prepending and the overlay feature\n * @returns {WebpackEntry} An injected entry object.\n */\nfunction injectRefreshEntry(originalEntry, additionalEntries) {\n  const { prependEntries, overlayEntries } = additionalEntries;\n\n  // Single string entry point\n  if (typeof originalEntry === 'string') {\n    if (isSocketEntry(originalEntry)) {\n      return [...prependEntries, originalEntry, ...overlayEntries];\n    }\n\n    return [...prependEntries, ...overlayEntries, originalEntry];\n  }\n  // Single array entry point\n  if (Array.isArray(originalEntry)) {\n    if (originalEntry.length === 0) {\n      throw EntryParseError;\n    }\n\n    const socketEntryIndex = originalEntry.findIndex(isSocketEntry);\n\n    let socketAndPrecedingEntries = [];\n    if (socketEntryIndex !== -1) {\n      socketAndPrecedingEntries = originalEntry.splice(0, socketEntryIndex + 1);\n    }\n\n    return [...prependEntries, ...socketAndPrecedingEntries, ...overlayEntries, ...originalEntry];\n  }\n  // Multiple entry points\n  if (typeof originalEntry === 'object') {\n    const entries = Object.entries(originalEntry);\n    if (entries.length === 0) {\n      throw EntryParseError;\n    }\n\n    return entries.reduce(\n      (acc, [curKey, curEntry]) => ({\n        ...acc,\n        [curKey]:\n          typeof curEntry === 'object' && curEntry.import\n            ? {\n                ...curEntry,\n                import: injectRefreshEntry(curEntry.import, additionalEntries),\n              }\n            : injectRefreshEntry(curEntry, additionalEntries),\n      }),\n      {}\n    );\n  }\n  // Dynamic entry points\n  if (typeof originalEntry === 'function') {\n    return (...args) =>\n      Promise.resolve(originalEntry(...args)).then((resolvedEntry) =>\n        injectRefreshEntry(resolvedEntry, additionalEntries)\n      );\n  }\n\n  throw EntryParseError;\n}\n\nmodule.exports = injectRefreshEntry;\nmodule.exports.socketEntries = socketEntries;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}