{"ast":null,"code":"var test = require('tap').test;\n\nvar detective = require('../');\n\nvar fs = require('fs');\n\nvar src = fs.readFileSync(__dirname + '/files/both.js');\ntest('nodes specified in opts and parseopts { range: true }', function (t) {\n  var modules = detective.find(src, {\n    nodes: true,\n    parse: {\n      range: true\n    }\n  });\n  t.deepEqual(modules.strings, ['a', 'b']);\n  t.deepEqual(modules.expressions, [\"'c' + x\", \"'d' + y\"]);\n  t.deepEqual(modules.nodes.map(function (n) {\n    var arg = n.arguments[0];\n    return arg.value || arg.left.value;\n  }), ['a', 'b', 'c', 'd'], 'has a node for each require');\n  var range = modules.nodes[0].range;\n  t.equal(range[0], 0, 'includes range start');\n  t.equal(range[1], 12, 'includes range end');\n  t.end();\n});\ntest('nodes specified in opts and parseopts { range: false }', function (t) {\n  var modules = detective.find(src, {\n    nodes: true,\n    parse: {\n      range: false\n    }\n  });\n  t.deepEqual(modules.strings, ['a', 'b']);\n  t.deepEqual(modules.expressions, [\"'c' + x\", \"'d' + y\"]);\n  t.deepEqual(modules.nodes.map(function (n) {\n    var arg = n.arguments[0];\n    return arg.value || arg.left.value;\n  }), ['a', 'b', 'c', 'd'], 'has a node for each require');\n  t.notOk(modules.nodes[0].range, 'includes no ranges');\n  t.end();\n});\ntest('nodes specified in opts and parseopts { range: true, loc: true }', function (t) {\n  var modules = detective.find(src, {\n    nodes: true,\n    parse: {\n      range: true,\n      loc: true\n    }\n  });\n  t.deepEqual(modules.strings, ['a', 'b']);\n  t.deepEqual(modules.expressions, [\"'c' + x\", \"'d' + y\"]);\n  t.deepEqual(modules.nodes.map(function (n) {\n    var arg = n.arguments[0];\n    return arg.value || arg.left.value;\n  }), ['a', 'b', 'c', 'd'], 'has a node for each require');\n  var range = modules.nodes[0].range;\n  t.equal(range[0], 0, 'includes range start');\n  t.equal(range[1], 12, 'includes range end');\n  var loc = modules.nodes[0].loc;\n  t.equal(loc.start.line, 1, 'includes start line');\n  t.equal(loc.start.column, 0, 'includes start column');\n  t.equal(loc.end.line, 1, 'includes end line');\n  t.equal(loc.end.column, 12, 'includes end column');\n  t.end();\n});","map":{"version":3,"names":["test","require","detective","fs","src","readFileSync","__dirname","t","modules","find","nodes","parse","range","deepEqual","strings","expressions","map","n","arg","arguments","value","left","equal","end","notOk","loc","start","line","column"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/detective/test/parseopts.js"],"sourcesContent":["var test = require('tap').test;\nvar detective = require('../');\nvar fs = require('fs');\nvar src = fs.readFileSync(__dirname + '/files/both.js');\n\ntest('nodes specified in opts and parseopts { range: true }', function (t) {\n    var modules = detective.find(src, { nodes: true, parse: { range: true } });\n    t.deepEqual(modules.strings, [ 'a', 'b' ]);\n    t.deepEqual(modules.expressions, [ \"'c' + x\", \"'d' + y\" ]);\n    t.deepEqual(\n      modules.nodes.map(function (n) { \n        var arg = n.arguments[0];\n        return arg.value || arg.left.value; \n      }),\n      [ 'a', 'b', 'c', 'd' ],\n      'has a node for each require');\n\n    var range = modules.nodes[0].range;\n    t.equal(range[0], 0, 'includes range start');\n    t.equal(range[1], 12, 'includes range end');\n    t.end();\n});\n\ntest('nodes specified in opts and parseopts { range: false }', function (t) {\n    var modules = detective.find(src, { nodes: true, parse: { range: false } });\n    t.deepEqual(modules.strings, [ 'a', 'b' ]);\n    t.deepEqual(modules.expressions, [ \"'c' + x\", \"'d' + y\" ]);\n    t.deepEqual(\n      modules.nodes.map(function (n) { \n        var arg = n.arguments[0];\n        return arg.value || arg.left.value; \n      }),\n      [ 'a', 'b', 'c', 'd' ],\n      'has a node for each require');\n\n    t.notOk(modules.nodes[0].range, 'includes no ranges');\n    t.end();\n});\n\ntest('nodes specified in opts and parseopts { range: true, loc: true }', function (t) {\n    var modules = detective.find(src, { nodes: true, parse: { range: true, loc: true } });\n    t.deepEqual(modules.strings, [ 'a', 'b' ]);\n    t.deepEqual(modules.expressions, [ \"'c' + x\", \"'d' + y\" ]);\n    t.deepEqual(\n      modules.nodes.map(function (n) { \n        var arg = n.arguments[0];\n        return arg.value || arg.left.value; \n      }),\n      [ 'a', 'b', 'c', 'd' ],\n      'has a node for each require');\n\n    var range = modules.nodes[0].range;\n    t.equal(range[0], 0, 'includes range start');\n    t.equal(range[1], 12, 'includes range end');\n\n    var loc = modules.nodes[0].loc;\n    t.equal(loc.start.line, 1, 'includes start line');\n    t.equal(loc.start.column, 0, 'includes start column');\n    t.equal(loc.end.line, 1, 'includes end line');\n    t.equal(loc.end.column, 12, 'includes end column');\n    t.end();\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}