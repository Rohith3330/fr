{"ast":null,"code":"/**\n * @fileoverview Disallow or enforce spaces around equal signs in JSX attributes.\n * @author ryym\n */\n'use strict';\n\nconst docsUrl = require('../util/docsUrl');\n\nconst report = require('../util/report'); // ------------------------------------------------------------------------------\n// Rule Definition\n// ------------------------------------------------------------------------------\n\n\nconst messages = {\n  noSpaceBefore: 'There should be no space before \\'=\\'',\n  noSpaceAfter: 'There should be no space after \\'=\\'',\n  needSpaceBefore: 'A space is required before \\'=\\'',\n  needSpaceAfter: 'A space is required after \\'=\\''\n};\nmodule.exports = {\n  meta: {\n    docs: {\n      description: 'Enforce or disallow spaces around equal signs in JSX attributes',\n      category: 'Stylistic Issues',\n      recommended: false,\n      url: docsUrl('jsx-equals-spacing')\n    },\n    fixable: 'code',\n    messages,\n    schema: [{\n      enum: ['always', 'never']\n    }]\n  },\n\n  create(context) {\n    const config = context.options[0] || 'never';\n    /**\n     * Determines a given attribute node has an equal sign.\n     * @param {ASTNode} attrNode - The attribute node.\n     * @returns {boolean} Whether or not the attriute node has an equal sign.\n     */\n\n    function hasEqual(attrNode) {\n      return attrNode.type !== 'JSXSpreadAttribute' && attrNode.value !== null;\n    } // --------------------------------------------------------------------------\n    // Public\n    // --------------------------------------------------------------------------\n\n\n    return {\n      JSXOpeningElement(node) {\n        node.attributes.forEach(attrNode => {\n          if (!hasEqual(attrNode)) {\n            return;\n          }\n\n          const sourceCode = context.getSourceCode();\n          const equalToken = sourceCode.getTokenAfter(attrNode.name);\n          const spacedBefore = sourceCode.isSpaceBetweenTokens(attrNode.name, equalToken);\n          const spacedAfter = sourceCode.isSpaceBetweenTokens(equalToken, attrNode.value);\n\n          if (config === 'never') {\n            if (spacedBefore) {\n              report(context, messages.noSpaceBefore, 'noSpaceBefore', {\n                node: attrNode,\n                loc: equalToken.loc.start,\n\n                fix(fixer) {\n                  return fixer.removeRange([attrNode.name.range[1], equalToken.range[0]]);\n                }\n\n              });\n            }\n\n            if (spacedAfter) {\n              report(context, messages.noSpaceAfter, 'noSpaceAfter', {\n                node: attrNode,\n                loc: equalToken.loc.start,\n\n                fix(fixer) {\n                  return fixer.removeRange([equalToken.range[1], attrNode.value.range[0]]);\n                }\n\n              });\n            }\n          } else if (config === 'always') {\n            if (!spacedBefore) {\n              report(context, messages.needSpaceBefore, 'needSpaceBefore', {\n                node: attrNode,\n                loc: equalToken.loc.start,\n\n                fix(fixer) {\n                  return fixer.insertTextBefore(equalToken, ' ');\n                }\n\n              });\n            }\n\n            if (!spacedAfter) {\n              report(context, messages.needSpaceAfter, 'needSpaceAfter', {\n                node: attrNode,\n                loc: equalToken.loc.start,\n\n                fix(fixer) {\n                  return fixer.insertTextAfter(equalToken, ' ');\n                }\n\n              });\n            }\n          }\n        });\n      }\n\n    };\n  }\n\n};","map":{"version":3,"names":["docsUrl","require","report","messages","noSpaceBefore","noSpaceAfter","needSpaceBefore","needSpaceAfter","module","exports","meta","docs","description","category","recommended","url","fixable","schema","enum","create","context","config","options","hasEqual","attrNode","type","value","JSXOpeningElement","node","attributes","forEach","sourceCode","getSourceCode","equalToken","getTokenAfter","name","spacedBefore","isSpaceBetweenTokens","spacedAfter","loc","start","fix","fixer","removeRange","range","insertTextBefore","insertTextAfter"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/eslint-plugin-react/lib/rules/jsx-equals-spacing.js"],"sourcesContent":["/**\n * @fileoverview Disallow or enforce spaces around equal signs in JSX attributes.\n * @author ryym\n */\n\n'use strict';\n\nconst docsUrl = require('../util/docsUrl');\nconst report = require('../util/report');\n\n// ------------------------------------------------------------------------------\n// Rule Definition\n// ------------------------------------------------------------------------------\n\nconst messages = {\n  noSpaceBefore: 'There should be no space before \\'=\\'',\n  noSpaceAfter: 'There should be no space after \\'=\\'',\n  needSpaceBefore: 'A space is required before \\'=\\'',\n  needSpaceAfter: 'A space is required after \\'=\\'',\n};\n\nmodule.exports = {\n  meta: {\n    docs: {\n      description: 'Enforce or disallow spaces around equal signs in JSX attributes',\n      category: 'Stylistic Issues',\n      recommended: false,\n      url: docsUrl('jsx-equals-spacing'),\n    },\n    fixable: 'code',\n\n    messages,\n\n    schema: [{\n      enum: ['always', 'never'],\n    }],\n  },\n\n  create(context) {\n    const config = context.options[0] || 'never';\n\n    /**\n     * Determines a given attribute node has an equal sign.\n     * @param {ASTNode} attrNode - The attribute node.\n     * @returns {boolean} Whether or not the attriute node has an equal sign.\n     */\n    function hasEqual(attrNode) {\n      return attrNode.type !== 'JSXSpreadAttribute' && attrNode.value !== null;\n    }\n\n    // --------------------------------------------------------------------------\n    // Public\n    // --------------------------------------------------------------------------\n\n    return {\n      JSXOpeningElement(node) {\n        node.attributes.forEach((attrNode) => {\n          if (!hasEqual(attrNode)) {\n            return;\n          }\n\n          const sourceCode = context.getSourceCode();\n          const equalToken = sourceCode.getTokenAfter(attrNode.name);\n          const spacedBefore = sourceCode.isSpaceBetweenTokens(attrNode.name, equalToken);\n          const spacedAfter = sourceCode.isSpaceBetweenTokens(equalToken, attrNode.value);\n\n          if (config === 'never') {\n            if (spacedBefore) {\n              report(context, messages.noSpaceBefore, 'noSpaceBefore', {\n                node: attrNode,\n                loc: equalToken.loc.start,\n                fix(fixer) {\n                  return fixer.removeRange([attrNode.name.range[1], equalToken.range[0]]);\n                },\n              });\n            }\n            if (spacedAfter) {\n              report(context, messages.noSpaceAfter, 'noSpaceAfter', {\n                node: attrNode,\n                loc: equalToken.loc.start,\n                fix(fixer) {\n                  return fixer.removeRange([equalToken.range[1], attrNode.value.range[0]]);\n                },\n              });\n            }\n          } else if (config === 'always') {\n            if (!spacedBefore) {\n              report(context, messages.needSpaceBefore, 'needSpaceBefore', {\n                node: attrNode,\n                loc: equalToken.loc.start,\n                fix(fixer) {\n                  return fixer.insertTextBefore(equalToken, ' ');\n                },\n              });\n            }\n            if (!spacedAfter) {\n              report(context, messages.needSpaceAfter, 'needSpaceAfter', {\n                node: attrNode,\n                loc: equalToken.loc.start,\n                fix(fixer) {\n                  return fixer.insertTextAfter(equalToken, ' ');\n                },\n              });\n            }\n          }\n        });\n      },\n    };\n  },\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}