{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst utils_1 = require(\"@typescript-eslint/utils\");\n\nconst util = __importStar(require(\"../util\")); // tslint regex\n// https://github.com/palantir/tslint/blob/95d9d958833fd9dc0002d18cbe34db20d0fbf437/src/enableDisableRules.ts#L32\n\n\nconst ENABLE_DISABLE_REGEX = /^\\s*tslint:(enable|disable)(?:-(line|next-line))?(:|\\s|$)/;\n\nconst toText = (text, type) => type === utils_1.AST_TOKEN_TYPES.Line ? ['//', text.trim()].join(' ') : ['/*', text.trim(), '*/'].join(' ');\n\nexports.default = util.createRule({\n  name: 'ban-tslint-comment',\n  meta: {\n    type: 'suggestion',\n    docs: {\n      description: 'Disallow `// tslint:<rule-flag>` comments',\n      recommended: 'strict'\n    },\n    messages: {\n      commentDetected: 'tslint comment detected: \"{{ text }}\"'\n    },\n    schema: [],\n    fixable: 'code'\n  },\n  defaultOptions: [],\n  create: context => {\n    const sourceCode = context.getSourceCode();\n    return {\n      Program() {\n        const comments = sourceCode.getAllComments();\n        comments.forEach(c => {\n          if (ENABLE_DISABLE_REGEX.test(c.value)) {\n            context.report({\n              data: {\n                text: toText(c.value, c.type)\n              },\n              node: c,\n              messageId: 'commentDetected',\n\n              fix(fixer) {\n                const rangeStart = sourceCode.getIndexFromLoc({\n                  column: c.loc.start.column > 0 ? c.loc.start.column - 1 : 0,\n                  line: c.loc.start.line\n                });\n                const rangeEnd = sourceCode.getIndexFromLoc({\n                  column: c.loc.end.column,\n                  line: c.loc.end.line\n                });\n                return fixer.removeRange([rangeStart, rangeEnd + 1]);\n              }\n\n            });\n          }\n        });\n      }\n\n    };\n  }\n});","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAEA,8C,CAEA;AACA;;;AACA,MAAMA,oBAAoB,GACxB,2DADF;;AAGA,MAAMC,MAAM,GAAG,CACbC,IADa,EAEbC,IAFa,KAIbA,IAAI,KAAKC,wBAAgBC,IAAzB,GACI,CAAC,IAAD,EAAOH,IAAI,CAACI,IAAL,EAAP,EAAoBC,IAApB,CAAyB,GAAzB,CADJ,GAEI,CAAC,IAAD,EAAOL,IAAI,CAACI,IAAL,EAAP,EAAoB,IAApB,EAA0BC,IAA1B,CAA+B,GAA/B,CANN;;AAQAC,kBAAeC,IAAI,CAACC,UAAL,CAAgB;EAC7BC,IAAI,EAAE,oBADuB;EAE7BC,IAAI,EAAE;IACJT,IAAI,EAAE,YADF;IAEJU,IAAI,EAAE;MACJC,WAAW,EAAE,2CADT;MAEJC,WAAW,EAAE;IAFT,CAFF;IAMJC,QAAQ,EAAE;MACRC,eAAe,EAAE;IADT,CANN;IASJC,MAAM,EAAE,EATJ;IAUJC,OAAO,EAAE;EAVL,CAFuB;EAc7BC,cAAc,EAAE,EAda;EAe7BC,MAAM,EAAEC,OAAO,IAAG;IAChB,MAAMC,UAAU,GAAGD,OAAO,CAACE,aAAR,EAAnB;IACA,OAAO;MACLC,OAAO;QACL,MAAMC,QAAQ,GAAGH,UAAU,CAACI,cAAX,EAAjB;QACAD,QAAQ,CAACE,OAAT,CAAiBC,CAAC,IAAG;UACnB,IAAI7B,oBAAoB,CAAC8B,IAArB,CAA0BD,CAAC,CAACE,KAA5B,CAAJ,EAAwC;YACtCT,OAAO,CAACU,MAAR,CAAe;cACbC,IAAI,EAAE;gBAAE/B,IAAI,EAAED,MAAM,CAAC4B,CAAC,CAACE,KAAH,EAAUF,CAAC,CAAC1B,IAAZ;cAAd,CADO;cAEb+B,IAAI,EAAEL,CAFO;cAGbM,SAAS,EAAE,iBAHE;;cAIbC,GAAG,CAACC,KAAD,EAAM;gBACP,MAAMC,UAAU,GAAGf,UAAU,CAACgB,eAAX,CAA2B;kBAC5CC,MAAM,EAAEX,CAAC,CAACY,GAAF,CAAMC,KAAN,CAAYF,MAAZ,GAAqB,CAArB,GAAyBX,CAAC,CAACY,GAAF,CAAMC,KAAN,CAAYF,MAAZ,GAAqB,CAA9C,GAAkD,CADd;kBAE5CG,IAAI,EAAEd,CAAC,CAACY,GAAF,CAAMC,KAAN,CAAYC;gBAF0B,CAA3B,CAAnB;gBAIA,MAAMC,QAAQ,GAAGrB,UAAU,CAACgB,eAAX,CAA2B;kBAC1CC,MAAM,EAAEX,CAAC,CAACY,GAAF,CAAMI,GAAN,CAAUL,MADwB;kBAE1CG,IAAI,EAAEd,CAAC,CAACY,GAAF,CAAMI,GAAN,CAAUF;gBAF0B,CAA3B,CAAjB;gBAIA,OAAON,KAAK,CAACS,WAAN,CAAkB,CAACR,UAAD,EAAaM,QAAQ,GAAG,CAAxB,CAAlB,CAAP;cACD;;YAdY,CAAf;UAgBD;QACF,CAnBD;MAoBD;;IAvBI,CAAP;EAyBD;AA1C4B,CAAhB,CAAf","names":["ENABLE_DISABLE_REGEX","toText","text","type","utils_1","Line","trim","join","exports","util","createRule","name","meta","docs","description","recommended","messages","commentDetected","schema","fixable","defaultOptions","create","context","sourceCode","getSourceCode","Program","comments","getAllComments","forEach","c","test","value","report","data","node","messageId","fix","fixer","rangeStart","getIndexFromLoc","column","loc","start","line","rangeEnd","end","removeRange"],"sources":["../../src/rules/ban-tslint-comment.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}