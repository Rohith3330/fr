{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.pluginsBugfixes = exports.plugins = void 0;\n\nvar _plugins = require(\"@babel/compat-data/plugins\");\n\nvar _pluginBugfixes = require(\"@babel/compat-data/plugin-bugfixes\");\n\nvar _availablePlugins = require(\"./available-plugins\");\n\nconst pluginsFiltered = {};\nexports.plugins = pluginsFiltered;\nconst bugfixPluginsFiltered = {};\nexports.pluginsBugfixes = bugfixPluginsFiltered;\n\nfor (const plugin of Object.keys(_plugins)) {\n  if (Object.hasOwnProperty.call(_availablePlugins.default, plugin)) {\n    pluginsFiltered[plugin] = _plugins[plugin];\n  }\n}\n\nfor (const plugin of Object.keys(_pluginBugfixes)) {\n  if (Object.hasOwnProperty.call(_availablePlugins.default, plugin)) {\n    bugfixPluginsFiltered[plugin] = _pluginBugfixes[plugin];\n  }\n}","map":{"version":3,"mappings":";;;;;;;AAAA;;AACA;;AACA;;AAEA,MAAMA,eAAe,GAAG,EAAxB;;AACA,MAAMC,qBAAqB,GAAG,EAA9B;;;AAEA,KAAK,MAAMC,MAAX,IAAqBC,MAAM,CAACC,IAAPD,CAAYE,QAAZF,CAArB,EAA2C;EACzC,IAAIA,MAAM,CAACG,cAAPH,CAAsBI,IAAtBJ,CAA2BK,yBAA3BL,EAA6CD,MAA7CC,CAAJ,EAA0D;IAExDH,eAAe,CAACE,MAAD,CAAfF,GAA0BK,QAAO,CAACH,MAAD,CAAjCF;EACD;AACF;;AAED,KAAK,MAAME,MAAX,IAAqBC,MAAM,CAACC,IAAPD,CAAYM,eAAZN,CAArB,EAAiD;EAC/C,IAAIA,MAAM,CAACG,cAAPH,CAAsBI,IAAtBJ,CAA2BK,yBAA3BL,EAA6CD,MAA7CC,CAAJ,EAA0D;IAExDF,qBAAqB,CAACC,MAAD,CAArBD,GAAgCQ,eAAa,CAACP,MAAD,CAA7CD;EACD;AACF","names":["pluginsFiltered","bugfixPluginsFiltered","plugin","Object","keys","plugins","hasOwnProperty","call","availablePlugins","bugfixPlugins"],"sources":["C:\\Users\\Rohith\\mern\\frontend\\node_modules\\@babel\\preset-env\\src\\plugins-compat-data.ts"],"sourcesContent":["import plugins from \"@babel/compat-data/plugins\";\nimport bugfixPlugins from \"@babel/compat-data/plugin-bugfixes\";\nimport availablePlugins from \"./available-plugins\";\n\nconst pluginsFiltered = {};\nconst bugfixPluginsFiltered = {};\n\nfor (const plugin of Object.keys(plugins)) {\n  if (Object.hasOwnProperty.call(availablePlugins, plugin)) {\n    // @ts-expect-error fixme: refine pluginsFiltered types\n    pluginsFiltered[plugin] = plugins[plugin];\n  }\n}\n\nfor (const plugin of Object.keys(bugfixPlugins)) {\n  if (Object.hasOwnProperty.call(availablePlugins, plugin)) {\n    // @ts-expect-error fixme: refine bugfixPluginsFiltered types\n    bugfixPluginsFiltered[plugin] = bugfixPlugins[plugin];\n  }\n}\n\nexport { pluginsFiltered as plugins, bugfixPluginsFiltered as pluginsBugfixes };\n"]},"metadata":{},"sourceType":"script"}