{"ast":null,"code":"/**\n * Extractor function for a TypeCastExpression type value node.\n * A type cast expression looks like `(this.handleClick: (event: MouseEvent) => void))`\n * This will return the expression `this.handleClick`.\n *\n * @param - value - AST Value object with type `TypeCastExpression`\n * @returns - The extracted value converted to correct type.\n */\nexport default function extractValueFromTypeCastExpression(value) {\n  // eslint-disable-next-line global-require\n  const getValue = require('.').default;\n\n  return getValue(value.expression);\n}","map":{"version":3,"names":["extractValueFromTypeCastExpression","value","getValue","require","default","expression"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/jsx-ast-utils/src/values/expressions/TypeCastExpression.js"],"sourcesContent":["/**\n * Extractor function for a TypeCastExpression type value node.\n * A type cast expression looks like `(this.handleClick: (event: MouseEvent) => void))`\n * This will return the expression `this.handleClick`.\n *\n * @param - value - AST Value object with type `TypeCastExpression`\n * @returns - The extracted value converted to correct type.\n */\nexport default function extractValueFromTypeCastExpression(value) {\n  // eslint-disable-next-line global-require\n  const getValue = require('.').default;\n  return getValue(value.expression);\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASA,kCAAT,CAA4CC,KAA5C,EAAmD;EAChE;EACA,MAAMC,QAAQ,GAAGC,OAAO,CAAC,GAAD,CAAP,CAAaC,OAA9B;;EACA,OAAOF,QAAQ,CAACD,KAAK,CAACI,UAAP,CAAf;AACD"},"metadata":{},"sourceType":"module"}