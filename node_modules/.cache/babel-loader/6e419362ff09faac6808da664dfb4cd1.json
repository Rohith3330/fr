{"ast":null,"code":"'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $TypeError = GetIntrinsic('%TypeError%');\n\nvar has = require('has');\n\nvar IsPropertyKey = require('./IsPropertyKey');\n\nvar Type = require('./Type'); // https://ecma-international.org/ecma-262/6.0/#sec-hasownproperty\n\n\nmodule.exports = function HasOwnProperty(O, P) {\n  if (Type(O) !== 'Object') {\n    throw new $TypeError('Assertion failed: `O` must be an Object');\n  }\n\n  if (!IsPropertyKey(P)) {\n    throw new $TypeError('Assertion failed: `P` must be a Property Key');\n  }\n\n  return has(O, P);\n};","map":{"version":3,"names":["GetIntrinsic","require","$TypeError","has","IsPropertyKey","Type","module","exports","HasOwnProperty","O","P"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/es-abstract/2022/HasOwnProperty.js"],"sourcesContent":["'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $TypeError = GetIntrinsic('%TypeError%');\n\nvar has = require('has');\n\nvar IsPropertyKey = require('./IsPropertyKey');\nvar Type = require('./Type');\n\n// https://ecma-international.org/ecma-262/6.0/#sec-hasownproperty\n\nmodule.exports = function HasOwnProperty(O, P) {\n\tif (Type(O) !== 'Object') {\n\t\tthrow new $TypeError('Assertion failed: `O` must be an Object');\n\t}\n\tif (!IsPropertyKey(P)) {\n\t\tthrow new $TypeError('Assertion failed: `P` must be a Property Key');\n\t}\n\treturn has(O, P);\n};\n"],"mappings":"AAAA;;AAEA,IAAIA,YAAY,GAAGC,OAAO,CAAC,eAAD,CAA1B;;AAEA,IAAIC,UAAU,GAAGF,YAAY,CAAC,aAAD,CAA7B;;AAEA,IAAIG,GAAG,GAAGF,OAAO,CAAC,KAAD,CAAjB;;AAEA,IAAIG,aAAa,GAAGH,OAAO,CAAC,iBAAD,CAA3B;;AACA,IAAII,IAAI,GAAGJ,OAAO,CAAC,QAAD,CAAlB,C,CAEA;;;AAEAK,MAAM,CAACC,OAAP,GAAiB,SAASC,cAAT,CAAwBC,CAAxB,EAA2BC,CAA3B,EAA8B;EAC9C,IAAIL,IAAI,CAACI,CAAD,CAAJ,KAAY,QAAhB,EAA0B;IACzB,MAAM,IAAIP,UAAJ,CAAe,yCAAf,CAAN;EACA;;EACD,IAAI,CAACE,aAAa,CAACM,CAAD,CAAlB,EAAuB;IACtB,MAAM,IAAIR,UAAJ,CAAe,8CAAf,CAAN;EACA;;EACD,OAAOC,GAAG,CAACM,CAAD,EAAIC,CAAJ,CAAV;AACA,CARD"},"metadata":{},"sourceType":"script"}