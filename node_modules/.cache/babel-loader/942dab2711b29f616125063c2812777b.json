{"ast":null,"code":"/**\n * Extractor function for a AssignmentExpression type value node.\n * An assignment expression looks like `x = y` or `x += y` in expression position.\n * This will return the assignment as the value.\n *\n * @param - value - AST Value object with type `AssignmentExpression`\n * @returns - The extracted value converted to correct type.\n */\nexport default function extractValueFromAssignmentExpression(value) {\n  // eslint-disable-next-line global-require\n  const getValue = require('.').default;\n\n  return `${getValue(value.left)} ${value.operator} ${getValue(value.right)}`;\n}","map":{"version":3,"names":["extractValueFromAssignmentExpression","value","getValue","require","default","left","operator","right"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/jsx-ast-utils/src/values/expressions/AssignmentExpression.js"],"sourcesContent":["/**\n * Extractor function for a AssignmentExpression type value node.\n * An assignment expression looks like `x = y` or `x += y` in expression position.\n * This will return the assignment as the value.\n *\n * @param - value - AST Value object with type `AssignmentExpression`\n * @returns - The extracted value converted to correct type.\n */\nexport default function extractValueFromAssignmentExpression(value) {\n  // eslint-disable-next-line global-require\n  const getValue = require('.').default;\n  return `${getValue(value.left)} ${value.operator} ${getValue(value.right)}`;\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASA,oCAAT,CAA8CC,KAA9C,EAAqD;EAClE;EACA,MAAMC,QAAQ,GAAGC,OAAO,CAAC,GAAD,CAAP,CAAaC,OAA9B;;EACA,OAAQ,GAAEF,QAAQ,CAACD,KAAK,CAACI,IAAP,CAAa,IAAGJ,KAAK,CAACK,QAAS,IAAGJ,QAAQ,CAACD,KAAK,CAACM,KAAP,CAAc,EAA1E;AACD"},"metadata":{},"sourceType":"module"}