{"ast":null,"code":"/* Generated by `npm run build`, do not edit! */\n\"use strict\";\n\nvar skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\n\nvar acorn = require(\"acorn\");\n\nvar tt = acorn.tokTypes;\n\nfunction maybeParseFieldValue(field) {\n  if (this.eat(tt.eq)) {\n    var oldInFieldValue = this._inStaticFieldValue;\n    this._inStaticFieldValue = true;\n    field.value = this.parseExpression();\n    this._inStaticFieldValue = oldInFieldValue;\n  } else {\n    field.value = null;\n  }\n}\n\nvar privateClassElements = require(\"../private-class-elements\");\n\nmodule.exports = function (Parser) {\n  var ExtendedParser = privateClassElements(Parser);\n  return /*@__PURE__*/function (ExtendedParser) {\n    function anonymous() {\n      ExtendedParser.apply(this, arguments);\n    }\n\n    if (ExtendedParser) anonymous.__proto__ = ExtendedParser;\n    anonymous.prototype = Object.create(ExtendedParser && ExtendedParser.prototype);\n    anonymous.prototype.constructor = anonymous;\n\n    anonymous.prototype.parseClassElement = function parseClassElement(_constructorAllowsSuper) {\n      var this$1 = this;\n\n      if (this.eat(tt.semi)) {\n        return null;\n      }\n\n      var node = this.startNode();\n\n      var tryContextual = function (k, noLineBreak) {\n        if (typeof noLineBreak == \"undefined\") {\n          noLineBreak = false;\n        }\n\n        var start = this$1.start,\n            startLoc = this$1.startLoc;\n\n        if (!this$1.eatContextual(k)) {\n          return false;\n        }\n\n        if (this$1.type !== tt.parenL && (!noLineBreak || !this$1.canInsertSemicolon())) {\n          return true;\n        }\n\n        if (node.key) {\n          this$1.unexpected();\n        }\n\n        node.computed = false;\n        node.key = this$1.startNodeAt(start, startLoc);\n        node.key.name = k;\n        this$1.finishNode(node.key, \"Identifier\");\n        return false;\n      };\n\n      node.static = tryContextual(\"static\");\n\n      if (!node.static) {\n        return ExtendedParser.prototype.parseClassElement.apply(this, arguments);\n      }\n\n      var isGenerator = this.eat(tt.star);\n      var isAsync = false;\n\n      if (!isGenerator) {\n        // Special-case for `async`, since `parseClassMember` currently looks\n        // for `(` to determine whether `async` is a method name\n        if (this.options.ecmaVersion >= 8 && this.isContextual(\"async\")) {\n          skipWhiteSpace.lastIndex = this.pos;\n          var skip = skipWhiteSpace.exec(this.input);\n          var next = this.input.charAt(this.pos + skip[0].length);\n\n          if (next === \";\" || next === \"=\") {\n            node.key = this.parseIdent(true);\n            node.computed = false;\n            maybeParseFieldValue.call(this, node);\n            this.finishNode(node, \"FieldDefinition\");\n            this.semicolon();\n            return node;\n          } else if (this.options.ecmaVersion >= 8 && tryContextual(\"async\", true)) {\n            isAsync = true;\n            isGenerator = this.options.ecmaVersion >= 9 && this.eat(tt.star);\n          }\n        } else if (tryContextual(\"get\")) {\n          node.kind = \"get\";\n        } else if (tryContextual(\"set\")) {\n          node.kind = \"set\";\n        }\n      }\n\n      if (this.type === this.privateNameToken) {\n        this.parsePrivateClassElementName(node);\n\n        if (this.type !== tt.parenL) {\n          if (node.key.name === \"prototype\") {\n            this.raise(node.key.start, \"Classes may not have a private static property named prototype\");\n          }\n\n          maybeParseFieldValue.call(this, node);\n          this.finishNode(node, \"FieldDefinition\");\n          this.semicolon();\n          return node;\n        }\n      } else if (!node.key) {\n        this.parsePropertyName(node);\n\n        if ((node.key.name || node.key.value) === \"prototype\" && !node.computed) {\n          this.raise(node.key.start, \"Classes may not have a static property named prototype\");\n        }\n      }\n\n      if (!node.kind) {\n        node.kind = \"method\";\n      }\n\n      this.parseClassMethod(node, isGenerator, isAsync);\n\n      if (!node.kind && (node.key.name || node.key.value) === \"constructor\" && !node.computed) {\n        this.raise(node.key.start, \"Classes may not have a static field named constructor\");\n      }\n\n      if (node.kind === \"get\" && node.value.params.length !== 0) {\n        this.raiseRecoverable(node.value.start, \"getter should have no params\");\n      }\n\n      if (node.kind === \"set\" && node.value.params.length !== 1) {\n        this.raiseRecoverable(node.value.start, \"setter should have exactly one param\");\n      }\n\n      if (node.kind === \"set\" && node.value.params[0].type === \"RestElement\") {\n        this.raiseRecoverable(node.value.params[0].start, \"Setter cannot use rest params\");\n      }\n\n      return node;\n    }; // Parse public static fields\n\n\n    anonymous.prototype.parseClassMethod = function parseClassMethod(method, isGenerator, isAsync, _allowsDirectSuper) {\n      if (isGenerator || isAsync || method.kind != \"method\" || !method.static || this.options.ecmaVersion < 8 || this.type == tt.parenL) {\n        return ExtendedParser.prototype.parseClassMethod.apply(this, arguments);\n      }\n\n      maybeParseFieldValue.call(this, method);\n      delete method.kind;\n      method = this.finishNode(method, \"FieldDefinition\");\n      this.semicolon();\n      return method;\n    }; // Prohibit arguments in class field initializers\n\n\n    anonymous.prototype.parseIdent = function parseIdent(liberal, isBinding) {\n      var ident = ExtendedParser.prototype.parseIdent.call(this, liberal, isBinding);\n\n      if (this._inStaticFieldValue && ident.name == \"arguments\") {\n        this.raise(ident.start, \"A static class field initializer may not contain arguments\");\n      }\n\n      return ident;\n    };\n\n    return anonymous;\n  }(ExtendedParser);\n};","map":{"version":3,"names":["skipWhiteSpace","acorn","require","tt","tokTypes","maybeParseFieldValue","field","eat","eq","oldInFieldValue","_inStaticFieldValue","value","parseExpression","privateClassElements","module","exports","Parser","ExtendedParser","anonymous","apply","arguments","__proto__","prototype","Object","create","constructor","parseClassElement","_constructorAllowsSuper","this$1","semi","node","startNode","tryContextual","k","noLineBreak","start","startLoc","eatContextual","type","parenL","canInsertSemicolon","key","unexpected","computed","startNodeAt","name","finishNode","static","isGenerator","star","isAsync","options","ecmaVersion","isContextual","lastIndex","pos","skip","exec","input","next","charAt","length","parseIdent","call","semicolon","kind","privateNameToken","parsePrivateClassElementName","raise","parsePropertyName","parseClassMethod","params","raiseRecoverable","method","_allowsDirectSuper","liberal","isBinding","ident"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/acorn-node/lib/static-class-features/index.js"],"sourcesContent":["/* Generated by `npm run build`, do not edit! */\n\n\"use strict\"\n\nvar skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g\n\nvar acorn = require(\"acorn\")\nvar tt = acorn.tokTypes\n\nfunction maybeParseFieldValue(field) {\n  if (this.eat(tt.eq)) {\n    var oldInFieldValue = this._inStaticFieldValue\n    this._inStaticFieldValue = true\n    field.value = this.parseExpression()\n    this._inStaticFieldValue = oldInFieldValue\n  } else { field.value = null }\n}\n\nvar privateClassElements = require(\"../private-class-elements\")\n\nmodule.exports = function(Parser) {\n  var ExtendedParser = privateClassElements(Parser)\n\n  return /*@__PURE__*/(function (ExtendedParser) {\n    function anonymous () {\n      ExtendedParser.apply(this, arguments);\n    }\n\n    if ( ExtendedParser ) anonymous.__proto__ = ExtendedParser;\n    anonymous.prototype = Object.create( ExtendedParser && ExtendedParser.prototype );\n    anonymous.prototype.constructor = anonymous;\n\n    anonymous.prototype.parseClassElement = function parseClassElement (_constructorAllowsSuper) {\n      var this$1 = this;\n\n      if (this.eat(tt.semi)) { return null }\n\n      var node = this.startNode()\n\n      var tryContextual = function (k, noLineBreak) {\n        if (typeof noLineBreak == \"undefined\") { noLineBreak = false }\n        var start = this$1.start, startLoc = this$1.startLoc\n        if (!this$1.eatContextual(k)) { return false }\n        if (this$1.type !== tt.parenL && (!noLineBreak || !this$1.canInsertSemicolon())) { return true }\n        if (node.key) { this$1.unexpected() }\n        node.computed = false\n        node.key = this$1.startNodeAt(start, startLoc)\n        node.key.name = k\n        this$1.finishNode(node.key, \"Identifier\")\n        return false\n      }\n\n      node.static = tryContextual(\"static\")\n      if (!node.static) { return ExtendedParser.prototype.parseClassElement.apply(this, arguments) }\n\n      var isGenerator = this.eat(tt.star)\n      var isAsync = false\n      if (!isGenerator) {\n        // Special-case for `async`, since `parseClassMember` currently looks\n        // for `(` to determine whether `async` is a method name\n        if (this.options.ecmaVersion >= 8 && this.isContextual(\"async\")) {\n          skipWhiteSpace.lastIndex = this.pos\n          var skip = skipWhiteSpace.exec(this.input)\n          var next = this.input.charAt(this.pos + skip[0].length)\n          if (next === \";\" || next === \"=\") {\n            node.key = this.parseIdent(true)\n            node.computed = false\n            maybeParseFieldValue.call(this, node)\n            this.finishNode(node, \"FieldDefinition\")\n            this.semicolon()\n            return node\n          } else if (this.options.ecmaVersion >= 8 && tryContextual(\"async\", true)) {\n            isAsync = true\n            isGenerator = this.options.ecmaVersion >= 9 && this.eat(tt.star)\n          }\n        } else if (tryContextual(\"get\")) {\n          node.kind = \"get\"\n        } else if (tryContextual(\"set\")) {\n          node.kind = \"set\"\n        }\n      }\n      if (this.type === this.privateNameToken) {\n        this.parsePrivateClassElementName(node)\n        if (this.type !== tt.parenL) {\n          if (node.key.name === \"prototype\") {\n            this.raise(node.key.start, \"Classes may not have a private static property named prototype\")\n          }\n          maybeParseFieldValue.call(this, node)\n          this.finishNode(node, \"FieldDefinition\")\n          this.semicolon()\n          return node\n        }\n      } else if (!node.key) {\n        this.parsePropertyName(node)\n        if ((node.key.name || node.key.value) === \"prototype\" && !node.computed) {\n          this.raise(node.key.start, \"Classes may not have a static property named prototype\")\n        }\n      }\n      if (!node.kind) { node.kind = \"method\" }\n      this.parseClassMethod(node, isGenerator, isAsync)\n      if (!node.kind && (node.key.name || node.key.value) === \"constructor\" && !node.computed) {\n        this.raise(node.key.start, \"Classes may not have a static field named constructor\")\n      }\n      if (node.kind === \"get\" && node.value.params.length !== 0) {\n        this.raiseRecoverable(node.value.start, \"getter should have no params\")\n      }\n      if (node.kind === \"set\" && node.value.params.length !== 1) {\n        this.raiseRecoverable(node.value.start, \"setter should have exactly one param\")\n      }\n      if (node.kind === \"set\" && node.value.params[0].type === \"RestElement\") {\n        this.raiseRecoverable(node.value.params[0].start, \"Setter cannot use rest params\")\n      }\n\n      return node\n\n    };\n\n    // Parse public static fields\n    anonymous.prototype.parseClassMethod = function parseClassMethod (method, isGenerator, isAsync, _allowsDirectSuper) {\n      if (isGenerator || isAsync || method.kind != \"method\" || !method.static || this.options.ecmaVersion < 8 || this.type == tt.parenL) {\n        return ExtendedParser.prototype.parseClassMethod.apply(this, arguments)\n      }\n      maybeParseFieldValue.call(this, method)\n      delete method.kind\n      method = this.finishNode(method, \"FieldDefinition\")\n      this.semicolon()\n      return method\n    };\n\n    // Prohibit arguments in class field initializers\n    anonymous.prototype.parseIdent = function parseIdent (liberal, isBinding) {\n      var ident = ExtendedParser.prototype.parseIdent.call(this, liberal, isBinding)\n      if (this._inStaticFieldValue && ident.name == \"arguments\") { this.raise(ident.start, \"A static class field initializer may not contain arguments\") }\n      return ident\n    };\n\n    return anonymous;\n  }(ExtendedParser))\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}