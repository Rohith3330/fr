{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isFile = exports.getRules = void 0;\n\nvar _fs = _interopRequireDefault(require(\"fs\"));\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nvar _glob = _interopRequireDefault(require(\"glob\"));\n\nvar _lodash = _interopRequireDefault(require(\"lodash\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n} // @flow\n\n\nconst getRules = () => {\n  const rulesFiles = _glob.default.sync(_path.default.resolve(__dirname, '../rules/*.js'));\n\n  const rulesNames = rulesFiles.map(file => {\n    return _path.default.basename(file, '.js');\n  }).map(name => {\n    return [name, _lodash.default.kebabCase(name)];\n  });\n  return rulesNames;\n};\n\nexports.getRules = getRules;\n\nconst isFile = filepath => {\n  try {\n    return _fs.default.statSync(filepath).isFile();\n  } catch {\n    return false;\n  }\n};\n\nexports.isFile = isFile;","map":{"version":3,"names":["Object","defineProperty","exports","value","isFile","getRules","_fs","_interopRequireDefault","require","_path","_glob","_lodash","obj","__esModule","default","rulesFiles","sync","resolve","__dirname","rulesNames","map","file","basename","name","kebabCase","filepath","statSync"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/eslint-plugin-flowtype/dist/bin/utilities.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isFile = exports.getRules = void 0;\n\nvar _fs = _interopRequireDefault(require(\"fs\"));\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nvar _glob = _interopRequireDefault(require(\"glob\"));\n\nvar _lodash = _interopRequireDefault(require(\"lodash\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// @flow\nconst getRules = () => {\n  const rulesFiles = _glob.default.sync(_path.default.resolve(__dirname, '../rules/*.js'));\n\n  const rulesNames = rulesFiles.map(file => {\n    return _path.default.basename(file, '.js');\n  }).map(name => {\n    return [name, _lodash.default.kebabCase(name)];\n  });\n  return rulesNames;\n};\n\nexports.getRules = getRules;\n\nconst isFile = filepath => {\n  try {\n    return _fs.default.statSync(filepath).isFile();\n  } catch {\n    return false;\n  }\n};\n\nexports.isFile = isFile;"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAC3CC,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,MAAR,GAAiBF,OAAO,CAACG,QAAR,GAAmB,KAAK,CAAzC;;AAEA,IAAIC,GAAG,GAAGC,sBAAsB,CAACC,OAAO,CAAC,IAAD,CAAR,CAAhC;;AAEA,IAAIC,KAAK,GAAGF,sBAAsB,CAACC,OAAO,CAAC,MAAD,CAAR,CAAlC;;AAEA,IAAIE,KAAK,GAAGH,sBAAsB,CAACC,OAAO,CAAC,MAAD,CAAR,CAAlC;;AAEA,IAAIG,OAAO,GAAGJ,sBAAsB,CAACC,OAAO,CAAC,QAAD,CAAR,CAApC;;AAEA,SAASD,sBAAT,CAAgCK,GAAhC,EAAqC;EAAE,OAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;IAAEE,OAAO,EAAEF;EAAX,CAArC;AAAwD,C,CAE/F;;;AACA,MAAMP,QAAQ,GAAG,MAAM;EACrB,MAAMU,UAAU,GAAGL,KAAK,CAACI,OAAN,CAAcE,IAAd,CAAmBP,KAAK,CAACK,OAAN,CAAcG,OAAd,CAAsBC,SAAtB,EAAiC,eAAjC,CAAnB,CAAnB;;EAEA,MAAMC,UAAU,GAAGJ,UAAU,CAACK,GAAX,CAAeC,IAAI,IAAI;IACxC,OAAOZ,KAAK,CAACK,OAAN,CAAcQ,QAAd,CAAuBD,IAAvB,EAA6B,KAA7B,CAAP;EACD,CAFkB,EAEhBD,GAFgB,CAEZG,IAAI,IAAI;IACb,OAAO,CAACA,IAAD,EAAOZ,OAAO,CAACG,OAAR,CAAgBU,SAAhB,CAA0BD,IAA1B,CAAP,CAAP;EACD,CAJkB,CAAnB;EAKA,OAAOJ,UAAP;AACD,CATD;;AAWAjB,OAAO,CAACG,QAAR,GAAmBA,QAAnB;;AAEA,MAAMD,MAAM,GAAGqB,QAAQ,IAAI;EACzB,IAAI;IACF,OAAOnB,GAAG,CAACQ,OAAJ,CAAYY,QAAZ,CAAqBD,QAArB,EAA+BrB,MAA/B,EAAP;EACD,CAFD,CAEE,MAAM;IACN,OAAO,KAAP;EACD;AACF,CAND;;AAQAF,OAAO,CAACE,MAAR,GAAiBA,MAAjB"},"metadata":{},"sourceType":"script"}