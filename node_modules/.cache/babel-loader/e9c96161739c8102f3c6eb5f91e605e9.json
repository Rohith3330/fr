{"ast":null,"code":"/**\n * @fileoverview Enforce heading (h1, h2, etc) elements contain accessible content.\n * @author Ethan Cohen\n */\n// -----------------------------------------------------------------------------\n// Requirements\n// -----------------------------------------------------------------------------\nimport { RuleTester } from 'eslint';\nimport parserOptionsMapper from '../../__util__/parserOptionsMapper';\nimport rule from '../../../src/rules/heading-has-content'; // -----------------------------------------------------------------------------\n// Tests\n// -----------------------------------------------------------------------------\n\nconst ruleTester = new RuleTester();\nconst expectedError = {\n  message: 'Headings must have content and the content must be accessible by a screen reader.',\n  type: 'JSXOpeningElement'\n};\nconst components = [{\n  components: ['Heading', 'Title']\n}];\nconst componentsSettings = {\n  'jsx-a11y': {\n    components: {\n      CustomInput: 'input',\n      Title: 'h1',\n      Heading: 'h2'\n    }\n  }\n};\nruleTester.run('heading-has-content', rule, {\n  valid: [// DEFAULT ELEMENT TESTS\n  {\n    code: '<div />;'\n  }, {\n    code: '<h1>Foo</h1>'\n  }, {\n    code: '<h2>Foo</h2>'\n  }, {\n    code: '<h3>Foo</h3>'\n  }, {\n    code: '<h4>Foo</h4>'\n  }, {\n    code: '<h5>Foo</h5>'\n  }, {\n    code: '<h6>Foo</h6>'\n  }, {\n    code: '<h6>123</h6>'\n  }, {\n    code: '<h1><Bar /></h1>'\n  }, {\n    code: '<h1>{foo}</h1>'\n  }, {\n    code: '<h1>{foo.bar}</h1>'\n  }, {\n    code: '<h1 dangerouslySetInnerHTML={{ __html: \"foo\" }} />'\n  }, {\n    code: '<h1 children={children} />'\n  }, // CUSTOM ELEMENT TESTS FOR COMPONENTS OPTION\n  {\n    code: '<Heading>Foo</Heading>',\n    options: components\n  }, {\n    code: '<Title>Foo</Title>',\n    options: components\n  }, {\n    code: '<Heading><Bar /></Heading>',\n    options: components\n  }, {\n    code: '<Heading>{foo}</Heading>',\n    options: components\n  }, {\n    code: '<Heading>{foo.bar}</Heading>',\n    options: components\n  }, {\n    code: '<Heading dangerouslySetInnerHTML={{ __html: \"foo\" }} />',\n    options: components\n  }, {\n    code: '<Heading children={children} />',\n    options: components\n  }, {\n    code: '<h1 aria-hidden />'\n  }, // CUSTOM ELEMENT TESTS FOR COMPONENTS SETTINGS\n  {\n    code: '<Heading>Foo</Heading>',\n    settings: componentsSettings\n  }, {\n    code: '<h1><CustomInput type=\"hidden\" /></h1>'\n  }].map(parserOptionsMapper),\n  invalid: [// DEFAULT ELEMENT TESTS\n  {\n    code: '<h1 />',\n    errors: [expectedError]\n  }, {\n    code: '<h1><Bar aria-hidden /></h1>',\n    errors: [expectedError]\n  }, {\n    code: '<h1>{undefined}</h1>',\n    errors: [expectedError]\n  }, {\n    code: '<h1><input type=\"hidden\" /></h1>',\n    errors: [expectedError]\n  }, // CUSTOM ELEMENT TESTS FOR COMPONENTS OPTION\n  {\n    code: '<Heading />',\n    errors: [expectedError],\n    options: components\n  }, {\n    code: '<Heading><Bar aria-hidden /></Heading>',\n    errors: [expectedError],\n    options: components\n  }, {\n    code: '<Heading>{undefined}</Heading>',\n    errors: [expectedError],\n    options: components\n  }, // CUSTOM ELEMENT TESTS FOR COMPONENTS SETTINGS\n  {\n    code: '<Heading />',\n    errors: [expectedError],\n    settings: componentsSettings\n  }, {\n    code: '<h1><CustomInput type=\"hidden\" /></h1>',\n    errors: [expectedError],\n    settings: componentsSettings\n  }].map(parserOptionsMapper)\n});","map":{"version":3,"names":["RuleTester","parserOptionsMapper","rule","ruleTester","expectedError","message","type","components","componentsSettings","CustomInput","Title","Heading","run","valid","code","options","settings","map","invalid","errors"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/eslint-plugin-jsx-a11y/__tests__/src/rules/heading-has-content-test.js"],"sourcesContent":["/**\n * @fileoverview Enforce heading (h1, h2, etc) elements contain accessible content.\n * @author Ethan Cohen\n */\n\n// -----------------------------------------------------------------------------\n// Requirements\n// -----------------------------------------------------------------------------\n\nimport { RuleTester } from 'eslint';\nimport parserOptionsMapper from '../../__util__/parserOptionsMapper';\nimport rule from '../../../src/rules/heading-has-content';\n\n// -----------------------------------------------------------------------------\n// Tests\n// -----------------------------------------------------------------------------\n\nconst ruleTester = new RuleTester();\n\nconst expectedError = {\n  message: 'Headings must have content and the content must be accessible by a screen reader.',\n  type: 'JSXOpeningElement',\n};\n\nconst components = [{\n  components: ['Heading', 'Title'],\n}];\n\nconst componentsSettings = {\n  'jsx-a11y': {\n    components: {\n      CustomInput: 'input',\n      Title: 'h1',\n      Heading: 'h2',\n    },\n  },\n};\n\nruleTester.run('heading-has-content', rule, {\n  valid: [\n    // DEFAULT ELEMENT TESTS\n    { code: '<div />;' },\n    { code: '<h1>Foo</h1>' },\n    { code: '<h2>Foo</h2>' },\n    { code: '<h3>Foo</h3>' },\n    { code: '<h4>Foo</h4>' },\n    { code: '<h5>Foo</h5>' },\n    { code: '<h6>Foo</h6>' },\n    { code: '<h6>123</h6>' },\n    { code: '<h1><Bar /></h1>' },\n    { code: '<h1>{foo}</h1>' },\n    { code: '<h1>{foo.bar}</h1>' },\n    { code: '<h1 dangerouslySetInnerHTML={{ __html: \"foo\" }} />' },\n    { code: '<h1 children={children} />' },\n    // CUSTOM ELEMENT TESTS FOR COMPONENTS OPTION\n    { code: '<Heading>Foo</Heading>', options: components },\n    { code: '<Title>Foo</Title>', options: components },\n    { code: '<Heading><Bar /></Heading>', options: components },\n    { code: '<Heading>{foo}</Heading>', options: components },\n    { code: '<Heading>{foo.bar}</Heading>', options: components },\n    { code: '<Heading dangerouslySetInnerHTML={{ __html: \"foo\" }} />', options: components },\n    { code: '<Heading children={children} />', options: components },\n    { code: '<h1 aria-hidden />' },\n    // CUSTOM ELEMENT TESTS FOR COMPONENTS SETTINGS\n    { code: '<Heading>Foo</Heading>', settings: componentsSettings },\n    { code: '<h1><CustomInput type=\"hidden\" /></h1>' },\n  ].map(parserOptionsMapper),\n  invalid: [\n    // DEFAULT ELEMENT TESTS\n    { code: '<h1 />', errors: [expectedError] },\n    { code: '<h1><Bar aria-hidden /></h1>', errors: [expectedError] },\n    { code: '<h1>{undefined}</h1>', errors: [expectedError] },\n    { code: '<h1><input type=\"hidden\" /></h1>', errors: [expectedError] },\n\n    // CUSTOM ELEMENT TESTS FOR COMPONENTS OPTION\n    { code: '<Heading />', errors: [expectedError], options: components },\n    { code: '<Heading><Bar aria-hidden /></Heading>', errors: [expectedError], options: components },\n    { code: '<Heading>{undefined}</Heading>', errors: [expectedError], options: components },\n\n    // CUSTOM ELEMENT TESTS FOR COMPONENTS SETTINGS\n    { code: '<Heading />', errors: [expectedError], settings: componentsSettings },\n    { code: '<h1><CustomInput type=\"hidden\" /></h1>', errors: [expectedError], settings: componentsSettings },\n  ].map(parserOptionsMapper),\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}