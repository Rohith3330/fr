{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.default = definePolyfillProvider;\n\nvar _helperPluginUtils = require(\"@babel/helper-plugin-utils\");\n\nvar _helperCompilationTargets = _interopRequireWildcard(require(\"@babel/helper-compilation-targets\"));\n\nvar _utils = require(\"./utils\");\n\nvar _importsCache = _interopRequireDefault(require(\"./imports-cache\"));\n\nvar _debugUtils = require(\"./debug-utils\");\n\nvar _normalizeOptions = require(\"./normalize-options\");\n\nvar v = _interopRequireWildcard(require(\"./visitors\"));\n\nvar deps = _interopRequireWildcard(require(\"./node/dependencies\"));\n\nvar _metaResolver = _interopRequireDefault(require(\"./meta-resolver\"));\n\nconst _excluded = [\"method\", \"targets\", \"ignoreBrowserslistConfig\", \"configPath\", \"debug\", \"shouldInjectPolyfill\", \"absoluteImports\"];\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function (nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\n\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache(nodeInterop);\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nconst getTargets = _helperCompilationTargets.default.default || _helperCompilationTargets.default;\n\nfunction resolveOptions(options, babelApi) {\n  const {\n    method,\n    targets: targetsOption,\n    ignoreBrowserslistConfig,\n    configPath,\n    debug,\n    shouldInjectPolyfill,\n    absoluteImports\n  } = options,\n        providerOptions = _objectWithoutPropertiesLoose(options, _excluded);\n\n  if (isEmpty(options)) {\n    throw new Error(`\\\nThis plugin requires options, for example:\n    {\n      \"plugins\": [\n        [\"<plugin name>\", { method: \"usage-pure\" }]\n      ]\n    }\n\nSee more options at https://github.com/babel/babel-polyfills/blob/main/docs/usage.md`);\n  }\n\n  let methodName;\n  if (method === \"usage-global\") methodName = \"usageGlobal\";else if (method === \"entry-global\") methodName = \"entryGlobal\";else if (method === \"usage-pure\") methodName = \"usagePure\";else if (typeof method !== \"string\") {\n    throw new Error(\".method must be a string\");\n  } else {\n    throw new Error(`.method must be one of \"entry-global\", \"usage-global\"` + ` or \"usage-pure\" (received ${JSON.stringify(method)})`);\n  }\n\n  if (typeof shouldInjectPolyfill === \"function\") {\n    if (options.include || options.exclude) {\n      throw new Error(`.include and .exclude are not supported when using the` + ` .shouldInjectPolyfill function.`);\n    }\n  } else if (shouldInjectPolyfill != null) {\n    throw new Error(`.shouldInjectPolyfill must be a function, or undefined` + ` (received ${JSON.stringify(shouldInjectPolyfill)})`);\n  }\n\n  if (absoluteImports != null && typeof absoluteImports !== \"boolean\" && typeof absoluteImports !== \"string\") {\n    throw new Error(`.absoluteImports must be a boolean, a string, or undefined` + ` (received ${JSON.stringify(absoluteImports)})`);\n  }\n\n  let targets;\n\n  if ( // If any browserslist-related option is specified, fallback to the old\n  // behavior of not using the targets specified in the top-level options.\n  targetsOption || configPath || ignoreBrowserslistConfig) {\n    const targetsObj = typeof targetsOption === \"string\" || Array.isArray(targetsOption) ? {\n      browsers: targetsOption\n    } : targetsOption;\n    targets = getTargets(targetsObj, {\n      ignoreBrowserslistConfig,\n      configPath\n    });\n  } else {\n    targets = babelApi.targets();\n  }\n\n  return {\n    method,\n    methodName,\n    targets,\n    absoluteImports: absoluteImports != null ? absoluteImports : false,\n    shouldInjectPolyfill,\n    debug: !!debug,\n    providerOptions: providerOptions\n  };\n}\n\nfunction instantiateProvider(factory, options, missingDependencies, dirname, debugLog, babelApi) {\n  const {\n    method,\n    methodName,\n    targets,\n    debug,\n    shouldInjectPolyfill,\n    providerOptions,\n    absoluteImports\n  } = resolveOptions(options, babelApi);\n  const getUtils = (0, _utils.createUtilsGetter)(new _importsCache.default(moduleName => deps.resolve(dirname, moduleName, absoluteImports))); // eslint-disable-next-line prefer-const\n\n  let include, exclude;\n  let polyfillsSupport;\n  let polyfillsNames;\n  let filterPolyfills;\n  const depsCache = new Map();\n  const api = {\n    babel: babelApi,\n    getUtils,\n    method: options.method,\n    targets,\n    createMetaResolver: _metaResolver.default,\n\n    shouldInjectPolyfill(name) {\n      if (polyfillsNames === undefined) {\n        throw new Error(`Internal error in the ${factory.name} provider: ` + `shouldInjectPolyfill() can't be called during initialization.`);\n      }\n\n      if (!polyfillsNames.has(name)) {\n        console.warn(`Internal error in the ${provider.name} provider: ` + `unknown polyfill \"${name}\".`);\n      }\n\n      if (filterPolyfills && !filterPolyfills(name)) return false;\n      let shouldInject = (0, _helperCompilationTargets.isRequired)(name, targets, {\n        compatData: polyfillsSupport,\n        includes: include,\n        excludes: exclude\n      });\n\n      if (shouldInjectPolyfill) {\n        shouldInject = shouldInjectPolyfill(name, shouldInject);\n\n        if (typeof shouldInject !== \"boolean\") {\n          throw new Error(`.shouldInjectPolyfill must return a boolean.`);\n        }\n      }\n\n      return shouldInject;\n    },\n\n    debug(name) {\n      var _debugLog, _debugLog$polyfillsSu;\n\n      debugLog().found = true;\n      if (!debug || !name) return;\n      if (debugLog().polyfills.has(provider.name)) return;\n      debugLog().polyfills.add(name);\n      (_debugLog$polyfillsSu = (_debugLog = debugLog()).polyfillsSupport) != null ? _debugLog$polyfillsSu : _debugLog.polyfillsSupport = polyfillsSupport;\n    },\n\n    assertDependency(name) {\n      let version = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"*\";\n      if (missingDependencies === false) return;\n\n      if (absoluteImports) {\n        // If absoluteImports is not false, we will try resolving\n        // the dependency and throw if it's not possible. We can\n        // skip the check here.\n        return;\n      }\n\n      const dep = version === \"*\" ? name : `${name}@^${version}`;\n      const found = missingDependencies.all ? false : mapGetOr(depsCache, `${name} :: ${dirname}`, () => deps.has(dirname, name));\n\n      if (!found) {\n        debugLog().missingDeps.add(dep);\n      }\n    }\n\n  };\n  const provider = factory(api, providerOptions, dirname);\n\n  if (typeof provider[methodName] !== \"function\") {\n    throw new Error(`The \"${provider.name || factory.name}\" provider doesn't ` + `support the \"${method}\" polyfilling method.`);\n  }\n\n  if (Array.isArray(provider.polyfills)) {\n    polyfillsNames = new Set(provider.polyfills);\n    filterPolyfills = provider.filterPolyfills;\n  } else if (provider.polyfills) {\n    polyfillsNames = new Set(Object.keys(provider.polyfills));\n    polyfillsSupport = provider.polyfills;\n    filterPolyfills = provider.filterPolyfills;\n  } else {\n    polyfillsNames = new Set();\n  }\n\n  ({\n    include,\n    exclude\n  } = (0, _normalizeOptions.validateIncludeExclude)(provider.name || factory.name, polyfillsNames, providerOptions.include || [], providerOptions.exclude || []));\n  return {\n    debug,\n    method,\n    targets,\n    provider,\n\n    callProvider(payload, path) {\n      const utils = getUtils(path);\n      provider[methodName](payload, utils, path);\n    }\n\n  };\n}\n\nfunction definePolyfillProvider(factory) {\n  return (0, _helperPluginUtils.declare)((babelApi, options, dirname) => {\n    babelApi.assertVersion(7);\n    const {\n      traverse\n    } = babelApi;\n    let debugLog;\n    const missingDependencies = (0, _normalizeOptions.applyMissingDependenciesDefaults)(options, babelApi);\n    const {\n      debug,\n      method,\n      targets,\n      provider,\n      callProvider\n    } = instantiateProvider(factory, options, missingDependencies, dirname, () => debugLog, babelApi);\n    const createVisitor = method === \"entry-global\" ? v.entry : v.usage;\n    const visitor = provider.visitor ? traverse.visitors.merge([createVisitor(callProvider), provider.visitor]) : createVisitor(callProvider);\n\n    if (debug && debug !== _debugUtils.presetEnvSilentDebugHeader) {\n      console.log(`${provider.name}: \\`DEBUG\\` option`);\n      console.log(`\\nUsing targets: ${(0, _debugUtils.stringifyTargetsMultiline)(targets)}`);\n      console.log(`\\nUsing polyfills with \\`${method}\\` method:`);\n    }\n\n    return {\n      name: \"inject-polyfills\",\n      visitor,\n\n      pre() {\n        var _provider$pre;\n\n        debugLog = {\n          polyfills: new Set(),\n          polyfillsSupport: undefined,\n          found: false,\n          providers: new Set(),\n          missingDeps: new Set()\n        };\n        (_provider$pre = provider.pre) == null ? void 0 : _provider$pre.apply(this, arguments);\n      },\n\n      post() {\n        var _provider$post;\n\n        (_provider$post = provider.post) == null ? void 0 : _provider$post.apply(this, arguments);\n\n        if (missingDependencies !== false) {\n          if (missingDependencies.log === \"per-file\") {\n            deps.logMissing(debugLog.missingDeps);\n          } else {\n            deps.laterLogMissing(debugLog.missingDeps);\n          }\n        }\n\n        if (!debug) return;\n        if (this.filename) console.log(`\\n[${this.filename}]`);\n\n        if (debugLog.polyfills.size === 0) {\n          console.log(method === \"entry-global\" ? debugLog.found ? `Based on your targets, the ${provider.name} polyfill did not add any polyfill.` : `The entry point for the ${provider.name} polyfill has not been found.` : `Based on your code and targets, the ${provider.name} polyfill did not add any polyfill.`);\n          return;\n        }\n\n        if (method === \"entry-global\") {\n          console.log(`The ${provider.name} polyfill entry has been replaced with ` + `the following polyfills:`);\n        } else {\n          console.log(`The ${provider.name} polyfill added the following polyfills:`);\n        }\n\n        for (const name of debugLog.polyfills) {\n          var _debugLog$polyfillsSu2;\n\n          if ((_debugLog$polyfillsSu2 = debugLog.polyfillsSupport) != null && _debugLog$polyfillsSu2[name]) {\n            const filteredTargets = (0, _helperCompilationTargets.getInclusionReasons)(name, targets, debugLog.polyfillsSupport);\n            const formattedTargets = JSON.stringify(filteredTargets).replace(/,/g, \", \").replace(/^\\{\"/, '{ \"').replace(/\"\\}$/, '\" }');\n            console.log(`  ${name} ${formattedTargets}`);\n          } else {\n            console.log(`  ${name}`);\n          }\n        }\n      }\n\n    };\n  });\n}\n\nfunction mapGetOr(map, key, getDefault) {\n  let val = map.get(key);\n\n  if (val === undefined) {\n    val = getDefault();\n    map.set(key, val);\n  }\n\n  return val;\n}\n\nfunction isEmpty(obj) {\n  return Object.keys(obj).length === 0;\n}","map":{"version":3,"names":["exports","__esModule","default","definePolyfillProvider","_helperPluginUtils","require","_helperCompilationTargets","_interopRequireWildcard","_utils","_importsCache","_interopRequireDefault","_debugUtils","_normalizeOptions","v","deps","_metaResolver","_excluded","obj","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_objectWithoutPropertiesLoose","source","excluded","target","sourceKeys","keys","i","length","indexOf","getTargets","resolveOptions","options","babelApi","method","targets","targetsOption","ignoreBrowserslistConfig","configPath","debug","shouldInjectPolyfill","absoluteImports","providerOptions","isEmpty","Error","methodName","JSON","stringify","include","exclude","targetsObj","Array","isArray","browsers","instantiateProvider","factory","missingDependencies","dirname","debugLog","getUtils","createUtilsGetter","moduleName","resolve","polyfillsSupport","polyfillsNames","filterPolyfills","depsCache","Map","api","babel","createMetaResolver","name","undefined","console","warn","provider","shouldInject","isRequired","compatData","includes","excludes","_debugLog","_debugLog$polyfillsSu","found","polyfills","add","assertDependency","version","dep","all","mapGetOr","missingDeps","Set","validateIncludeExclude","callProvider","payload","path","utils","declare","assertVersion","traverse","applyMissingDependenciesDefaults","createVisitor","entry","usage","visitor","visitors","merge","presetEnvSilentDebugHeader","log","stringifyTargetsMultiline","pre","_provider$pre","providers","apply","arguments","post","_provider$post","logMissing","laterLogMissing","filename","size","_debugLog$polyfillsSu2","filteredTargets","getInclusionReasons","formattedTargets","replace","map","getDefault","val"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/@babel/helper-define-polyfill-provider/lib/index.js"],"sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.default = definePolyfillProvider;\n\nvar _helperPluginUtils = require(\"@babel/helper-plugin-utils\");\n\nvar _helperCompilationTargets = _interopRequireWildcard(require(\"@babel/helper-compilation-targets\"));\n\nvar _utils = require(\"./utils\");\n\nvar _importsCache = _interopRequireDefault(require(\"./imports-cache\"));\n\nvar _debugUtils = require(\"./debug-utils\");\n\nvar _normalizeOptions = require(\"./normalize-options\");\n\nvar v = _interopRequireWildcard(require(\"./visitors\"));\n\nvar deps = _interopRequireWildcard(require(\"./node/dependencies\"));\n\nvar _metaResolver = _interopRequireDefault(require(\"./meta-resolver\"));\n\nconst _excluded = [\"method\", \"targets\", \"ignoreBrowserslistConfig\", \"configPath\", \"debug\", \"shouldInjectPolyfill\", \"absoluteImports\"];\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nconst getTargets = _helperCompilationTargets.default.default || _helperCompilationTargets.default;\n\nfunction resolveOptions(options, babelApi) {\n  const {\n    method,\n    targets: targetsOption,\n    ignoreBrowserslistConfig,\n    configPath,\n    debug,\n    shouldInjectPolyfill,\n    absoluteImports\n  } = options,\n        providerOptions = _objectWithoutPropertiesLoose(options, _excluded);\n\n  if (isEmpty(options)) {\n    throw new Error(`\\\nThis plugin requires options, for example:\n    {\n      \"plugins\": [\n        [\"<plugin name>\", { method: \"usage-pure\" }]\n      ]\n    }\n\nSee more options at https://github.com/babel/babel-polyfills/blob/main/docs/usage.md`);\n  }\n\n  let methodName;\n  if (method === \"usage-global\") methodName = \"usageGlobal\";else if (method === \"entry-global\") methodName = \"entryGlobal\";else if (method === \"usage-pure\") methodName = \"usagePure\";else if (typeof method !== \"string\") {\n    throw new Error(\".method must be a string\");\n  } else {\n    throw new Error(`.method must be one of \"entry-global\", \"usage-global\"` + ` or \"usage-pure\" (received ${JSON.stringify(method)})`);\n  }\n\n  if (typeof shouldInjectPolyfill === \"function\") {\n    if (options.include || options.exclude) {\n      throw new Error(`.include and .exclude are not supported when using the` + ` .shouldInjectPolyfill function.`);\n    }\n  } else if (shouldInjectPolyfill != null) {\n    throw new Error(`.shouldInjectPolyfill must be a function, or undefined` + ` (received ${JSON.stringify(shouldInjectPolyfill)})`);\n  }\n\n  if (absoluteImports != null && typeof absoluteImports !== \"boolean\" && typeof absoluteImports !== \"string\") {\n    throw new Error(`.absoluteImports must be a boolean, a string, or undefined` + ` (received ${JSON.stringify(absoluteImports)})`);\n  }\n\n  let targets;\n\n  if ( // If any browserslist-related option is specified, fallback to the old\n  // behavior of not using the targets specified in the top-level options.\n  targetsOption || configPath || ignoreBrowserslistConfig) {\n    const targetsObj = typeof targetsOption === \"string\" || Array.isArray(targetsOption) ? {\n      browsers: targetsOption\n    } : targetsOption;\n    targets = getTargets(targetsObj, {\n      ignoreBrowserslistConfig,\n      configPath\n    });\n  } else {\n    targets = babelApi.targets();\n  }\n\n  return {\n    method,\n    methodName,\n    targets,\n    absoluteImports: absoluteImports != null ? absoluteImports : false,\n    shouldInjectPolyfill,\n    debug: !!debug,\n    providerOptions: providerOptions\n  };\n}\n\nfunction instantiateProvider(factory, options, missingDependencies, dirname, debugLog, babelApi) {\n  const {\n    method,\n    methodName,\n    targets,\n    debug,\n    shouldInjectPolyfill,\n    providerOptions,\n    absoluteImports\n  } = resolveOptions(options, babelApi);\n  const getUtils = (0, _utils.createUtilsGetter)(new _importsCache.default(moduleName => deps.resolve(dirname, moduleName, absoluteImports))); // eslint-disable-next-line prefer-const\n\n  let include, exclude;\n  let polyfillsSupport;\n  let polyfillsNames;\n  let filterPolyfills;\n  const depsCache = new Map();\n  const api = {\n    babel: babelApi,\n    getUtils,\n    method: options.method,\n    targets,\n    createMetaResolver: _metaResolver.default,\n\n    shouldInjectPolyfill(name) {\n      if (polyfillsNames === undefined) {\n        throw new Error(`Internal error in the ${factory.name} provider: ` + `shouldInjectPolyfill() can't be called during initialization.`);\n      }\n\n      if (!polyfillsNames.has(name)) {\n        console.warn(`Internal error in the ${provider.name} provider: ` + `unknown polyfill \"${name}\".`);\n      }\n\n      if (filterPolyfills && !filterPolyfills(name)) return false;\n      let shouldInject = (0, _helperCompilationTargets.isRequired)(name, targets, {\n        compatData: polyfillsSupport,\n        includes: include,\n        excludes: exclude\n      });\n\n      if (shouldInjectPolyfill) {\n        shouldInject = shouldInjectPolyfill(name, shouldInject);\n\n        if (typeof shouldInject !== \"boolean\") {\n          throw new Error(`.shouldInjectPolyfill must return a boolean.`);\n        }\n      }\n\n      return shouldInject;\n    },\n\n    debug(name) {\n      var _debugLog, _debugLog$polyfillsSu;\n\n      debugLog().found = true;\n      if (!debug || !name) return;\n      if (debugLog().polyfills.has(provider.name)) return;\n      debugLog().polyfills.add(name);\n      (_debugLog$polyfillsSu = (_debugLog = debugLog()).polyfillsSupport) != null ? _debugLog$polyfillsSu : _debugLog.polyfillsSupport = polyfillsSupport;\n    },\n\n    assertDependency(name, version = \"*\") {\n      if (missingDependencies === false) return;\n\n      if (absoluteImports) {\n        // If absoluteImports is not false, we will try resolving\n        // the dependency and throw if it's not possible. We can\n        // skip the check here.\n        return;\n      }\n\n      const dep = version === \"*\" ? name : `${name}@^${version}`;\n      const found = missingDependencies.all ? false : mapGetOr(depsCache, `${name} :: ${dirname}`, () => deps.has(dirname, name));\n\n      if (!found) {\n        debugLog().missingDeps.add(dep);\n      }\n    }\n\n  };\n  const provider = factory(api, providerOptions, dirname);\n\n  if (typeof provider[methodName] !== \"function\") {\n    throw new Error(`The \"${provider.name || factory.name}\" provider doesn't ` + `support the \"${method}\" polyfilling method.`);\n  }\n\n  if (Array.isArray(provider.polyfills)) {\n    polyfillsNames = new Set(provider.polyfills);\n    filterPolyfills = provider.filterPolyfills;\n  } else if (provider.polyfills) {\n    polyfillsNames = new Set(Object.keys(provider.polyfills));\n    polyfillsSupport = provider.polyfills;\n    filterPolyfills = provider.filterPolyfills;\n  } else {\n    polyfillsNames = new Set();\n  }\n\n  ({\n    include,\n    exclude\n  } = (0, _normalizeOptions.validateIncludeExclude)(provider.name || factory.name, polyfillsNames, providerOptions.include || [], providerOptions.exclude || []));\n  return {\n    debug,\n    method,\n    targets,\n    provider,\n\n    callProvider(payload, path) {\n      const utils = getUtils(path);\n      provider[methodName](payload, utils, path);\n    }\n\n  };\n}\n\nfunction definePolyfillProvider(factory) {\n  return (0, _helperPluginUtils.declare)((babelApi, options, dirname) => {\n    babelApi.assertVersion(7);\n    const {\n      traverse\n    } = babelApi;\n    let debugLog;\n    const missingDependencies = (0, _normalizeOptions.applyMissingDependenciesDefaults)(options, babelApi);\n    const {\n      debug,\n      method,\n      targets,\n      provider,\n      callProvider\n    } = instantiateProvider(factory, options, missingDependencies, dirname, () => debugLog, babelApi);\n    const createVisitor = method === \"entry-global\" ? v.entry : v.usage;\n    const visitor = provider.visitor ? traverse.visitors.merge([createVisitor(callProvider), provider.visitor]) : createVisitor(callProvider);\n\n    if (debug && debug !== _debugUtils.presetEnvSilentDebugHeader) {\n      console.log(`${provider.name}: \\`DEBUG\\` option`);\n      console.log(`\\nUsing targets: ${(0, _debugUtils.stringifyTargetsMultiline)(targets)}`);\n      console.log(`\\nUsing polyfills with \\`${method}\\` method:`);\n    }\n\n    return {\n      name: \"inject-polyfills\",\n      visitor,\n\n      pre() {\n        var _provider$pre;\n\n        debugLog = {\n          polyfills: new Set(),\n          polyfillsSupport: undefined,\n          found: false,\n          providers: new Set(),\n          missingDeps: new Set()\n        };\n        (_provider$pre = provider.pre) == null ? void 0 : _provider$pre.apply(this, arguments);\n      },\n\n      post() {\n        var _provider$post;\n\n        (_provider$post = provider.post) == null ? void 0 : _provider$post.apply(this, arguments);\n\n        if (missingDependencies !== false) {\n          if (missingDependencies.log === \"per-file\") {\n            deps.logMissing(debugLog.missingDeps);\n          } else {\n            deps.laterLogMissing(debugLog.missingDeps);\n          }\n        }\n\n        if (!debug) return;\n        if (this.filename) console.log(`\\n[${this.filename}]`);\n\n        if (debugLog.polyfills.size === 0) {\n          console.log(method === \"entry-global\" ? debugLog.found ? `Based on your targets, the ${provider.name} polyfill did not add any polyfill.` : `The entry point for the ${provider.name} polyfill has not been found.` : `Based on your code and targets, the ${provider.name} polyfill did not add any polyfill.`);\n          return;\n        }\n\n        if (method === \"entry-global\") {\n          console.log(`The ${provider.name} polyfill entry has been replaced with ` + `the following polyfills:`);\n        } else {\n          console.log(`The ${provider.name} polyfill added the following polyfills:`);\n        }\n\n        for (const name of debugLog.polyfills) {\n          var _debugLog$polyfillsSu2;\n\n          if ((_debugLog$polyfillsSu2 = debugLog.polyfillsSupport) != null && _debugLog$polyfillsSu2[name]) {\n            const filteredTargets = (0, _helperCompilationTargets.getInclusionReasons)(name, targets, debugLog.polyfillsSupport);\n            const formattedTargets = JSON.stringify(filteredTargets).replace(/,/g, \", \").replace(/^\\{\"/, '{ \"').replace(/\"\\}$/, '\" }');\n            console.log(`  ${name} ${formattedTargets}`);\n          } else {\n            console.log(`  ${name}`);\n          }\n        }\n      }\n\n    };\n  });\n}\n\nfunction mapGetOr(map, key, getDefault) {\n  let val = map.get(key);\n\n  if (val === undefined) {\n    val = getDefault();\n    map.set(key, val);\n  }\n\n  return val;\n}\n\nfunction isEmpty(obj) {\n  return Object.keys(obj).length === 0;\n}"],"mappings":"AAAA;;AAEAA,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAACE,OAAR,GAAkBC,sBAAlB;;AAEA,IAAIC,kBAAkB,GAAGC,OAAO,CAAC,4BAAD,CAAhC;;AAEA,IAAIC,yBAAyB,GAAGC,uBAAuB,CAACF,OAAO,CAAC,mCAAD,CAAR,CAAvD;;AAEA,IAAIG,MAAM,GAAGH,OAAO,CAAC,SAAD,CAApB;;AAEA,IAAII,aAAa,GAAGC,sBAAsB,CAACL,OAAO,CAAC,iBAAD,CAAR,CAA1C;;AAEA,IAAIM,WAAW,GAAGN,OAAO,CAAC,eAAD,CAAzB;;AAEA,IAAIO,iBAAiB,GAAGP,OAAO,CAAC,qBAAD,CAA/B;;AAEA,IAAIQ,CAAC,GAAGN,uBAAuB,CAACF,OAAO,CAAC,YAAD,CAAR,CAA/B;;AAEA,IAAIS,IAAI,GAAGP,uBAAuB,CAACF,OAAO,CAAC,qBAAD,CAAR,CAAlC;;AAEA,IAAIU,aAAa,GAAGL,sBAAsB,CAACL,OAAO,CAAC,iBAAD,CAAR,CAA1C;;AAEA,MAAMW,SAAS,GAAG,CAAC,QAAD,EAAW,SAAX,EAAsB,0BAAtB,EAAkD,YAAlD,EAAgE,OAAhE,EAAyE,sBAAzE,EAAiG,iBAAjG,CAAlB;;AAEA,SAASN,sBAAT,CAAgCO,GAAhC,EAAqC;EAAE,OAAOA,GAAG,IAAIA,GAAG,CAAChB,UAAX,GAAwBgB,GAAxB,GAA8B;IAAEf,OAAO,EAAEe;EAAX,CAArC;AAAwD;;AAE/F,SAASC,wBAAT,CAAkCC,WAAlC,EAA+C;EAAE,IAAI,OAAOC,OAAP,KAAmB,UAAvB,EAAmC,OAAO,IAAP;EAAa,IAAIC,iBAAiB,GAAG,IAAID,OAAJ,EAAxB;EAAuC,IAAIE,gBAAgB,GAAG,IAAIF,OAAJ,EAAvB;EAAsC,OAAO,CAACF,wBAAwB,GAAG,UAAUC,WAAV,EAAuB;IAAE,OAAOA,WAAW,GAAGG,gBAAH,GAAsBD,iBAAxC;EAA4D,CAAjH,EAAmHF,WAAnH,CAAP;AAAyI;;AAEvT,SAASZ,uBAAT,CAAiCU,GAAjC,EAAsCE,WAAtC,EAAmD;EAAE,IAAI,CAACA,WAAD,IAAgBF,GAAhB,IAAuBA,GAAG,CAAChB,UAA/B,EAA2C;IAAE,OAAOgB,GAAP;EAAa;;EAAC,IAAIA,GAAG,KAAK,IAAR,IAAgB,OAAOA,GAAP,KAAe,QAAf,IAA2B,OAAOA,GAAP,KAAe,UAA9D,EAA0E;IAAE,OAAO;MAAEf,OAAO,EAAEe;IAAX,CAAP;EAA0B;;EAAC,IAAIM,KAAK,GAAGL,wBAAwB,CAACC,WAAD,CAApC;;EAAmD,IAAII,KAAK,IAAIA,KAAK,CAACC,GAAN,CAAUP,GAAV,CAAb,EAA6B;IAAE,OAAOM,KAAK,CAACE,GAAN,CAAUR,GAAV,CAAP;EAAwB;;EAAC,IAAIS,MAAM,GAAG,EAAb;EAAiB,IAAIC,qBAAqB,GAAGC,MAAM,CAACC,cAAP,IAAyBD,MAAM,CAACE,wBAA5D;;EAAsF,KAAK,IAAIC,GAAT,IAAgBd,GAAhB,EAAqB;IAAE,IAAIc,GAAG,KAAK,SAAR,IAAqBH,MAAM,CAACI,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCjB,GAArC,EAA0Cc,GAA1C,CAAzB,EAAyE;MAAE,IAAII,IAAI,GAAGR,qBAAqB,GAAGC,MAAM,CAACE,wBAAP,CAAgCb,GAAhC,EAAqCc,GAArC,CAAH,GAA+C,IAA/E;;MAAqF,IAAII,IAAI,KAAKA,IAAI,CAACV,GAAL,IAAYU,IAAI,CAACC,GAAtB,CAAR,EAAoC;QAAER,MAAM,CAACC,cAAP,CAAsBH,MAAtB,EAA8BK,GAA9B,EAAmCI,IAAnC;MAA2C,CAAjF,MAAuF;QAAET,MAAM,CAACK,GAAD,CAAN,GAAcd,GAAG,CAACc,GAAD,CAAjB;MAAyB;IAAE;EAAE;;EAACL,MAAM,CAACxB,OAAP,GAAiBe,GAAjB;;EAAsB,IAAIM,KAAJ,EAAW;IAAEA,KAAK,CAACa,GAAN,CAAUnB,GAAV,EAAeS,MAAf;EAAyB;;EAAC,OAAOA,MAAP;AAAgB;;AAEpyB,SAASW,6BAAT,CAAuCC,MAAvC,EAA+CC,QAA/C,EAAyD;EAAE,IAAID,MAAM,IAAI,IAAd,EAAoB,OAAO,EAAP;EAAW,IAAIE,MAAM,GAAG,EAAb;EAAiB,IAAIC,UAAU,GAAGb,MAAM,CAACc,IAAP,CAAYJ,MAAZ,CAAjB;EAAsC,IAAIP,GAAJ,EAASY,CAAT;;EAAY,KAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGF,UAAU,CAACG,MAA3B,EAAmCD,CAAC,EAApC,EAAwC;IAAEZ,GAAG,GAAGU,UAAU,CAACE,CAAD,CAAhB;IAAqB,IAAIJ,QAAQ,CAACM,OAAT,CAAiBd,GAAjB,KAAyB,CAA7B,EAAgC;IAAUS,MAAM,CAACT,GAAD,CAAN,GAAcO,MAAM,CAACP,GAAD,CAApB;EAA4B;;EAAC,OAAOS,MAAP;AAAgB;;AAEnT,MAAMM,UAAU,GAAGxC,yBAAyB,CAACJ,OAA1B,CAAkCA,OAAlC,IAA6CI,yBAAyB,CAACJ,OAA1F;;AAEA,SAAS6C,cAAT,CAAwBC,OAAxB,EAAiCC,QAAjC,EAA2C;EACzC,MAAM;IACJC,MADI;IAEJC,OAAO,EAAEC,aAFL;IAGJC,wBAHI;IAIJC,UAJI;IAKJC,KALI;IAMJC,oBANI;IAOJC;EAPI,IAQFT,OARJ;EAAA,MASMU,eAAe,GAAGrB,6BAA6B,CAACW,OAAD,EAAUhC,SAAV,CATrD;;EAWA,IAAI2C,OAAO,CAACX,OAAD,CAAX,EAAsB;IACpB,MAAM,IAAIY,KAAJ,CAAW;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qFARU,CAAN;EASD;;EAED,IAAIC,UAAJ;EACA,IAAIX,MAAM,KAAK,cAAf,EAA+BW,UAAU,GAAG,aAAb,CAA/B,KAA+D,IAAIX,MAAM,KAAK,cAAf,EAA+BW,UAAU,GAAG,aAAb,CAA/B,KAA+D,IAAIX,MAAM,KAAK,YAAf,EAA6BW,UAAU,GAAG,WAAb,CAA7B,KAA2D,IAAI,OAAOX,MAAP,KAAkB,QAAtB,EAAgC;IACvN,MAAM,IAAIU,KAAJ,CAAU,0BAAV,CAAN;EACD,CAFwL,MAElL;IACL,MAAM,IAAIA,KAAJ,CAAW,uDAAD,GAA2D,8BAA6BE,IAAI,CAACC,SAAL,CAAeb,MAAf,CAAuB,GAAzH,CAAN;EACD;;EAED,IAAI,OAAOM,oBAAP,KAAgC,UAApC,EAAgD;IAC9C,IAAIR,OAAO,CAACgB,OAAR,IAAmBhB,OAAO,CAACiB,OAA/B,EAAwC;MACtC,MAAM,IAAIL,KAAJ,CAAW,wDAAD,GAA4D,kCAAtE,CAAN;IACD;EACF,CAJD,MAIO,IAAIJ,oBAAoB,IAAI,IAA5B,EAAkC;IACvC,MAAM,IAAII,KAAJ,CAAW,wDAAD,GAA4D,cAAaE,IAAI,CAACC,SAAL,CAAeP,oBAAf,CAAqC,GAAxH,CAAN;EACD;;EAED,IAAIC,eAAe,IAAI,IAAnB,IAA2B,OAAOA,eAAP,KAA2B,SAAtD,IAAmE,OAAOA,eAAP,KAA2B,QAAlG,EAA4G;IAC1G,MAAM,IAAIG,KAAJ,CAAW,4DAAD,GAAgE,cAAaE,IAAI,CAACC,SAAL,CAAeN,eAAf,CAAgC,GAAvH,CAAN;EACD;;EAED,IAAIN,OAAJ;;EAEA,KAAK;EACL;EACAC,aAAa,IAAIE,UAAjB,IAA+BD,wBAF/B,EAEyD;IACvD,MAAMa,UAAU,GAAG,OAAOd,aAAP,KAAyB,QAAzB,IAAqCe,KAAK,CAACC,OAAN,CAAchB,aAAd,CAArC,GAAoE;MACrFiB,QAAQ,EAAEjB;IAD2E,CAApE,GAEfA,aAFJ;IAGAD,OAAO,GAAGL,UAAU,CAACoB,UAAD,EAAa;MAC/Bb,wBAD+B;MAE/BC;IAF+B,CAAb,CAApB;EAID,CAVD,MAUO;IACLH,OAAO,GAAGF,QAAQ,CAACE,OAAT,EAAV;EACD;;EAED,OAAO;IACLD,MADK;IAELW,UAFK;IAGLV,OAHK;IAILM,eAAe,EAAEA,eAAe,IAAI,IAAnB,GAA0BA,eAA1B,GAA4C,KAJxD;IAKLD,oBALK;IAMLD,KAAK,EAAE,CAAC,CAACA,KANJ;IAOLG,eAAe,EAAEA;EAPZ,CAAP;AASD;;AAED,SAASY,mBAAT,CAA6BC,OAA7B,EAAsCvB,OAAtC,EAA+CwB,mBAA/C,EAAoEC,OAApE,EAA6EC,QAA7E,EAAuFzB,QAAvF,EAAiG;EAC/F,MAAM;IACJC,MADI;IAEJW,UAFI;IAGJV,OAHI;IAIJI,KAJI;IAKJC,oBALI;IAMJE,eANI;IAOJD;EAPI,IAQFV,cAAc,CAACC,OAAD,EAAUC,QAAV,CARlB;EASA,MAAM0B,QAAQ,GAAG,CAAC,GAAGnE,MAAM,CAACoE,iBAAX,EAA8B,IAAInE,aAAa,CAACP,OAAlB,CAA0B2E,UAAU,IAAI/D,IAAI,CAACgE,OAAL,CAAaL,OAAb,EAAsBI,UAAtB,EAAkCpB,eAAlC,CAAxC,CAA9B,CAAjB,CAV+F,CAU8C;;EAE7I,IAAIO,OAAJ,EAAaC,OAAb;EACA,IAAIc,gBAAJ;EACA,IAAIC,cAAJ;EACA,IAAIC,eAAJ;EACA,MAAMC,SAAS,GAAG,IAAIC,GAAJ,EAAlB;EACA,MAAMC,GAAG,GAAG;IACVC,KAAK,EAAEpC,QADG;IAEV0B,QAFU;IAGVzB,MAAM,EAAEF,OAAO,CAACE,MAHN;IAIVC,OAJU;IAKVmC,kBAAkB,EAAEvE,aAAa,CAACb,OALxB;;IAOVsD,oBAAoB,CAAC+B,IAAD,EAAO;MACzB,IAAIP,cAAc,KAAKQ,SAAvB,EAAkC;QAChC,MAAM,IAAI5B,KAAJ,CAAW,yBAAwBW,OAAO,CAACgB,IAAK,aAAtC,GAAsD,+DAAhE,CAAN;MACD;;MAED,IAAI,CAACP,cAAc,CAACxD,GAAf,CAAmB+D,IAAnB,CAAL,EAA+B;QAC7BE,OAAO,CAACC,IAAR,CAAc,yBAAwBC,QAAQ,CAACJ,IAAK,aAAvC,GAAuD,qBAAoBA,IAAK,IAA7F;MACD;;MAED,IAAIN,eAAe,IAAI,CAACA,eAAe,CAACM,IAAD,CAAvC,EAA+C,OAAO,KAAP;MAC/C,IAAIK,YAAY,GAAG,CAAC,GAAGtF,yBAAyB,CAACuF,UAA9B,EAA0CN,IAA1C,EAAgDpC,OAAhD,EAAyD;QAC1E2C,UAAU,EAAEf,gBAD8D;QAE1EgB,QAAQ,EAAE/B,OAFgE;QAG1EgC,QAAQ,EAAE/B;MAHgE,CAAzD,CAAnB;;MAMA,IAAIT,oBAAJ,EAA0B;QACxBoC,YAAY,GAAGpC,oBAAoB,CAAC+B,IAAD,EAAOK,YAAP,CAAnC;;QAEA,IAAI,OAAOA,YAAP,KAAwB,SAA5B,EAAuC;UACrC,MAAM,IAAIhC,KAAJ,CAAW,8CAAX,CAAN;QACD;MACF;;MAED,OAAOgC,YAAP;IACD,CAhCS;;IAkCVrC,KAAK,CAACgC,IAAD,EAAO;MACV,IAAIU,SAAJ,EAAeC,qBAAf;;MAEAxB,QAAQ,GAAGyB,KAAX,GAAmB,IAAnB;MACA,IAAI,CAAC5C,KAAD,IAAU,CAACgC,IAAf,EAAqB;MACrB,IAAIb,QAAQ,GAAG0B,SAAX,CAAqB5E,GAArB,CAAyBmE,QAAQ,CAACJ,IAAlC,CAAJ,EAA6C;MAC7Cb,QAAQ,GAAG0B,SAAX,CAAqBC,GAArB,CAAyBd,IAAzB;MACA,CAACW,qBAAqB,GAAG,CAACD,SAAS,GAAGvB,QAAQ,EAArB,EAAyBK,gBAAlD,KAAuE,IAAvE,GAA8EmB,qBAA9E,GAAsGD,SAAS,CAAClB,gBAAV,GAA6BA,gBAAnI;IACD,CA1CS;;IA4CVuB,gBAAgB,CAACf,IAAD,EAAsB;MAAA,IAAfgB,OAAe,uEAAL,GAAK;MACpC,IAAI/B,mBAAmB,KAAK,KAA5B,EAAmC;;MAEnC,IAAIf,eAAJ,EAAqB;QACnB;QACA;QACA;QACA;MACD;;MAED,MAAM+C,GAAG,GAAGD,OAAO,KAAK,GAAZ,GAAkBhB,IAAlB,GAA0B,GAAEA,IAAK,KAAIgB,OAAQ,EAAzD;MACA,MAAMJ,KAAK,GAAG3B,mBAAmB,CAACiC,GAApB,GAA0B,KAA1B,GAAkCC,QAAQ,CAACxB,SAAD,EAAa,GAAEK,IAAK,OAAMd,OAAQ,EAAlC,EAAqC,MAAM3D,IAAI,CAACU,GAAL,CAASiD,OAAT,EAAkBc,IAAlB,CAA3C,CAAxD;;MAEA,IAAI,CAACY,KAAL,EAAY;QACVzB,QAAQ,GAAGiC,WAAX,CAAuBN,GAAvB,CAA2BG,GAA3B;MACD;IACF;;EA5DS,CAAZ;EA+DA,MAAMb,QAAQ,GAAGpB,OAAO,CAACa,GAAD,EAAM1B,eAAN,EAAuBe,OAAvB,CAAxB;;EAEA,IAAI,OAAOkB,QAAQ,CAAC9B,UAAD,CAAf,KAAgC,UAApC,EAAgD;IAC9C,MAAM,IAAID,KAAJ,CAAW,QAAO+B,QAAQ,CAACJ,IAAT,IAAiBhB,OAAO,CAACgB,IAAK,qBAAtC,GAA8D,gBAAerC,MAAO,uBAA9F,CAAN;EACD;;EAED,IAAIiB,KAAK,CAACC,OAAN,CAAcuB,QAAQ,CAACS,SAAvB,CAAJ,EAAuC;IACrCpB,cAAc,GAAG,IAAI4B,GAAJ,CAAQjB,QAAQ,CAACS,SAAjB,CAAjB;IACAnB,eAAe,GAAGU,QAAQ,CAACV,eAA3B;EACD,CAHD,MAGO,IAAIU,QAAQ,CAACS,SAAb,EAAwB;IAC7BpB,cAAc,GAAG,IAAI4B,GAAJ,CAAQhF,MAAM,CAACc,IAAP,CAAYiD,QAAQ,CAACS,SAArB,CAAR,CAAjB;IACArB,gBAAgB,GAAGY,QAAQ,CAACS,SAA5B;IACAnB,eAAe,GAAGU,QAAQ,CAACV,eAA3B;EACD,CAJM,MAIA;IACLD,cAAc,GAAG,IAAI4B,GAAJ,EAAjB;EACD;;EAED,CAAC;IACC5C,OADD;IAECC;EAFD,IAGG,CAAC,GAAGrD,iBAAiB,CAACiG,sBAAtB,EAA8ClB,QAAQ,CAACJ,IAAT,IAAiBhB,OAAO,CAACgB,IAAvE,EAA6EP,cAA7E,EAA6FtB,eAAe,CAACM,OAAhB,IAA2B,EAAxH,EAA4HN,eAAe,CAACO,OAAhB,IAA2B,EAAvJ,CAHJ;EAIA,OAAO;IACLV,KADK;IAELL,MAFK;IAGLC,OAHK;IAILwC,QAJK;;IAMLmB,YAAY,CAACC,OAAD,EAAUC,IAAV,EAAgB;MAC1B,MAAMC,KAAK,GAAGtC,QAAQ,CAACqC,IAAD,CAAtB;MACArB,QAAQ,CAAC9B,UAAD,CAAR,CAAqBkD,OAArB,EAA8BE,KAA9B,EAAqCD,IAArC;IACD;;EATI,CAAP;AAYD;;AAED,SAAS7G,sBAAT,CAAgCoE,OAAhC,EAAyC;EACvC,OAAO,CAAC,GAAGnE,kBAAkB,CAAC8G,OAAvB,EAAgC,CAACjE,QAAD,EAAWD,OAAX,EAAoByB,OAApB,KAAgC;IACrExB,QAAQ,CAACkE,aAAT,CAAuB,CAAvB;IACA,MAAM;MACJC;IADI,IAEFnE,QAFJ;IAGA,IAAIyB,QAAJ;IACA,MAAMF,mBAAmB,GAAG,CAAC,GAAG5D,iBAAiB,CAACyG,gCAAtB,EAAwDrE,OAAxD,EAAiEC,QAAjE,CAA5B;IACA,MAAM;MACJM,KADI;MAEJL,MAFI;MAGJC,OAHI;MAIJwC,QAJI;MAKJmB;IALI,IAMFxC,mBAAmB,CAACC,OAAD,EAAUvB,OAAV,EAAmBwB,mBAAnB,EAAwCC,OAAxC,EAAiD,MAAMC,QAAvD,EAAiEzB,QAAjE,CANvB;IAOA,MAAMqE,aAAa,GAAGpE,MAAM,KAAK,cAAX,GAA4BrC,CAAC,CAAC0G,KAA9B,GAAsC1G,CAAC,CAAC2G,KAA9D;IACA,MAAMC,OAAO,GAAG9B,QAAQ,CAAC8B,OAAT,GAAmBL,QAAQ,CAACM,QAAT,CAAkBC,KAAlB,CAAwB,CAACL,aAAa,CAACR,YAAD,CAAd,EAA8BnB,QAAQ,CAAC8B,OAAvC,CAAxB,CAAnB,GAA8FH,aAAa,CAACR,YAAD,CAA3H;;IAEA,IAAIvD,KAAK,IAAIA,KAAK,KAAK5C,WAAW,CAACiH,0BAAnC,EAA+D;MAC7DnC,OAAO,CAACoC,GAAR,CAAa,GAAElC,QAAQ,CAACJ,IAAK,oBAA7B;MACAE,OAAO,CAACoC,GAAR,CAAa,oBAAmB,CAAC,GAAGlH,WAAW,CAACmH,yBAAhB,EAA2C3E,OAA3C,CAAoD,EAApF;MACAsC,OAAO,CAACoC,GAAR,CAAa,4BAA2B3E,MAAO,YAA/C;IACD;;IAED,OAAO;MACLqC,IAAI,EAAE,kBADD;MAELkC,OAFK;;MAILM,GAAG,GAAG;QACJ,IAAIC,aAAJ;;QAEAtD,QAAQ,GAAG;UACT0B,SAAS,EAAE,IAAIQ,GAAJ,EADF;UAET7B,gBAAgB,EAAES,SAFT;UAGTW,KAAK,EAAE,KAHE;UAIT8B,SAAS,EAAE,IAAIrB,GAAJ,EAJF;UAKTD,WAAW,EAAE,IAAIC,GAAJ;QALJ,CAAX;QAOA,CAACoB,aAAa,GAAGrC,QAAQ,CAACoC,GAA1B,KAAkC,IAAlC,GAAyC,KAAK,CAA9C,GAAkDC,aAAa,CAACE,KAAd,CAAoB,IAApB,EAA0BC,SAA1B,CAAlD;MACD,CAfI;;MAiBLC,IAAI,GAAG;QACL,IAAIC,cAAJ;;QAEA,CAACA,cAAc,GAAG1C,QAAQ,CAACyC,IAA3B,KAAoC,IAApC,GAA2C,KAAK,CAAhD,GAAoDC,cAAc,CAACH,KAAf,CAAqB,IAArB,EAA2BC,SAA3B,CAApD;;QAEA,IAAI3D,mBAAmB,KAAK,KAA5B,EAAmC;UACjC,IAAIA,mBAAmB,CAACqD,GAApB,KAA4B,UAAhC,EAA4C;YAC1C/G,IAAI,CAACwH,UAAL,CAAgB5D,QAAQ,CAACiC,WAAzB;UACD,CAFD,MAEO;YACL7F,IAAI,CAACyH,eAAL,CAAqB7D,QAAQ,CAACiC,WAA9B;UACD;QACF;;QAED,IAAI,CAACpD,KAAL,EAAY;QACZ,IAAI,KAAKiF,QAAT,EAAmB/C,OAAO,CAACoC,GAAR,CAAa,MAAK,KAAKW,QAAS,GAAhC;;QAEnB,IAAI9D,QAAQ,CAAC0B,SAAT,CAAmBqC,IAAnB,KAA4B,CAAhC,EAAmC;UACjChD,OAAO,CAACoC,GAAR,CAAY3E,MAAM,KAAK,cAAX,GAA4BwB,QAAQ,CAACyB,KAAT,GAAkB,8BAA6BR,QAAQ,CAACJ,IAAK,qCAA7D,GAAqG,2BAA0BI,QAAQ,CAACJ,IAAK,+BAAzK,GAA2M,uCAAsCI,QAAQ,CAACJ,IAAK,qCAA3Q;UACA;QACD;;QAED,IAAIrC,MAAM,KAAK,cAAf,EAA+B;UAC7BuC,OAAO,CAACoC,GAAR,CAAa,OAAMlC,QAAQ,CAACJ,IAAK,yCAArB,GAAiE,0BAA7E;QACD,CAFD,MAEO;UACLE,OAAO,CAACoC,GAAR,CAAa,OAAMlC,QAAQ,CAACJ,IAAK,0CAAjC;QACD;;QAED,KAAK,MAAMA,IAAX,IAAmBb,QAAQ,CAAC0B,SAA5B,EAAuC;UACrC,IAAIsC,sBAAJ;;UAEA,IAAI,CAACA,sBAAsB,GAAGhE,QAAQ,CAACK,gBAAnC,KAAwD,IAAxD,IAAgE2D,sBAAsB,CAACnD,IAAD,CAA1F,EAAkG;YAChG,MAAMoD,eAAe,GAAG,CAAC,GAAGrI,yBAAyB,CAACsI,mBAA9B,EAAmDrD,IAAnD,EAAyDpC,OAAzD,EAAkEuB,QAAQ,CAACK,gBAA3E,CAAxB;YACA,MAAM8D,gBAAgB,GAAG/E,IAAI,CAACC,SAAL,CAAe4E,eAAf,EAAgCG,OAAhC,CAAwC,IAAxC,EAA8C,IAA9C,EAAoDA,OAApD,CAA4D,MAA5D,EAAoE,KAApE,EAA2EA,OAA3E,CAAmF,MAAnF,EAA2F,KAA3F,CAAzB;YACArD,OAAO,CAACoC,GAAR,CAAa,KAAItC,IAAK,IAAGsD,gBAAiB,EAA1C;UACD,CAJD,MAIO;YACLpD,OAAO,CAACoC,GAAR,CAAa,KAAItC,IAAK,EAAtB;UACD;QACF;MACF;;IAvDI,CAAP;EA0DD,CAjFM,CAAP;AAkFD;;AAED,SAASmB,QAAT,CAAkBqC,GAAlB,EAAuBhH,GAAvB,EAA4BiH,UAA5B,EAAwC;EACtC,IAAIC,GAAG,GAAGF,GAAG,CAACtH,GAAJ,CAAQM,GAAR,CAAV;;EAEA,IAAIkH,GAAG,KAAKzD,SAAZ,EAAuB;IACrByD,GAAG,GAAGD,UAAU,EAAhB;IACAD,GAAG,CAAC3G,GAAJ,CAAQL,GAAR,EAAakH,GAAb;EACD;;EAED,OAAOA,GAAP;AACD;;AAED,SAAStF,OAAT,CAAiB1C,GAAjB,EAAsB;EACpB,OAAOW,MAAM,CAACc,IAAP,CAAYzB,GAAZ,EAAiB2B,MAAjB,KAA4B,CAAnC;AACD"},"metadata":{},"sourceType":"script"}