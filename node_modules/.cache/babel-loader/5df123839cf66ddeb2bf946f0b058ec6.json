{"ast":null,"code":"import { r as replaceTraps, a as reverseTransformCache, u as unwrap, i as instanceOfAny } from './wrap-idb-value.js';\nconst advanceMethodProps = ['continue', 'continuePrimaryKey', 'advance'];\nconst methodMap = {};\nconst advanceResults = new WeakMap();\nconst ittrProxiedCursorToOriginalProxy = new WeakMap();\nconst cursorIteratorTraps = {\n  get(target, prop) {\n    if (!advanceMethodProps.includes(prop)) return target[prop];\n    let cachedFunc = methodMap[prop];\n\n    if (!cachedFunc) {\n      cachedFunc = methodMap[prop] = function () {\n        advanceResults.set(this, ittrProxiedCursorToOriginalProxy.get(this)[prop](...arguments));\n      };\n    }\n\n    return cachedFunc;\n  }\n\n};\n\nasync function* iterate() {\n  // tslint:disable-next-line:no-this-assignment\n  let cursor = this;\n\n  if (!(cursor instanceof IDBCursor)) {\n    cursor = await cursor.openCursor(...arguments);\n  }\n\n  if (!cursor) return;\n  cursor = cursor;\n  const proxiedCursor = new Proxy(cursor, cursorIteratorTraps);\n  ittrProxiedCursorToOriginalProxy.set(proxiedCursor, cursor); // Map this double-proxy back to the original, so other cursor methods work.\n\n  reverseTransformCache.set(proxiedCursor, unwrap(cursor));\n\n  while (cursor) {\n    yield proxiedCursor; // If one of the advancing methods was not called, call continue().\n\n    cursor = await (advanceResults.get(proxiedCursor) || cursor.continue());\n    advanceResults.delete(proxiedCursor);\n  }\n}\n\nfunction isIteratorProp(target, prop) {\n  return prop === Symbol.asyncIterator && instanceOfAny(target, [IDBIndex, IDBObjectStore, IDBCursor]) || prop === 'iterate' && instanceOfAny(target, [IDBIndex, IDBObjectStore]);\n}\n\nreplaceTraps(oldTraps => ({ ...oldTraps,\n\n  get(target, prop, receiver) {\n    if (isIteratorProp(target, prop)) return iterate;\n    return oldTraps.get(target, prop, receiver);\n  },\n\n  has(target, prop) {\n    return isIteratorProp(target, prop) || oldTraps.has(target, prop);\n  }\n\n}));","map":{"version":3,"names":["r","replaceTraps","a","reverseTransformCache","u","unwrap","i","instanceOfAny","advanceMethodProps","methodMap","advanceResults","WeakMap","ittrProxiedCursorToOriginalProxy","cursorIteratorTraps","get","target","prop","includes","cachedFunc","set","iterate","cursor","IDBCursor","openCursor","proxiedCursor","Proxy","continue","delete","isIteratorProp","Symbol","asyncIterator","IDBIndex","IDBObjectStore","oldTraps","receiver","has"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/idb/build/async-iterators.js"],"sourcesContent":["import { r as replaceTraps, a as reverseTransformCache, u as unwrap, i as instanceOfAny } from './wrap-idb-value.js';\n\nconst advanceMethodProps = ['continue', 'continuePrimaryKey', 'advance'];\nconst methodMap = {};\nconst advanceResults = new WeakMap();\nconst ittrProxiedCursorToOriginalProxy = new WeakMap();\nconst cursorIteratorTraps = {\n    get(target, prop) {\n        if (!advanceMethodProps.includes(prop))\n            return target[prop];\n        let cachedFunc = methodMap[prop];\n        if (!cachedFunc) {\n            cachedFunc = methodMap[prop] = function (...args) {\n                advanceResults.set(this, ittrProxiedCursorToOriginalProxy.get(this)[prop](...args));\n            };\n        }\n        return cachedFunc;\n    },\n};\nasync function* iterate(...args) {\n    // tslint:disable-next-line:no-this-assignment\n    let cursor = this;\n    if (!(cursor instanceof IDBCursor)) {\n        cursor = await cursor.openCursor(...args);\n    }\n    if (!cursor)\n        return;\n    cursor = cursor;\n    const proxiedCursor = new Proxy(cursor, cursorIteratorTraps);\n    ittrProxiedCursorToOriginalProxy.set(proxiedCursor, cursor);\n    // Map this double-proxy back to the original, so other cursor methods work.\n    reverseTransformCache.set(proxiedCursor, unwrap(cursor));\n    while (cursor) {\n        yield proxiedCursor;\n        // If one of the advancing methods was not called, call continue().\n        cursor = await (advanceResults.get(proxiedCursor) || cursor.continue());\n        advanceResults.delete(proxiedCursor);\n    }\n}\nfunction isIteratorProp(target, prop) {\n    return ((prop === Symbol.asyncIterator &&\n        instanceOfAny(target, [IDBIndex, IDBObjectStore, IDBCursor])) ||\n        (prop === 'iterate' && instanceOfAny(target, [IDBIndex, IDBObjectStore])));\n}\nreplaceTraps((oldTraps) => ({\n    ...oldTraps,\n    get(target, prop, receiver) {\n        if (isIteratorProp(target, prop))\n            return iterate;\n        return oldTraps.get(target, prop, receiver);\n    },\n    has(target, prop) {\n        return isIteratorProp(target, prop) || oldTraps.has(target, prop);\n    },\n}));\n"],"mappings":"AAAA,SAASA,CAAC,IAAIC,YAAd,EAA4BC,CAAC,IAAIC,qBAAjC,EAAwDC,CAAC,IAAIC,MAA7D,EAAqEC,CAAC,IAAIC,aAA1E,QAA+F,qBAA/F;AAEA,MAAMC,kBAAkB,GAAG,CAAC,UAAD,EAAa,oBAAb,EAAmC,SAAnC,CAA3B;AACA,MAAMC,SAAS,GAAG,EAAlB;AACA,MAAMC,cAAc,GAAG,IAAIC,OAAJ,EAAvB;AACA,MAAMC,gCAAgC,GAAG,IAAID,OAAJ,EAAzC;AACA,MAAME,mBAAmB,GAAG;EACxBC,GAAG,CAACC,MAAD,EAASC,IAAT,EAAe;IACd,IAAI,CAACR,kBAAkB,CAACS,QAAnB,CAA4BD,IAA5B,CAAL,EACI,OAAOD,MAAM,CAACC,IAAD,CAAb;IACJ,IAAIE,UAAU,GAAGT,SAAS,CAACO,IAAD,CAA1B;;IACA,IAAI,CAACE,UAAL,EAAiB;MACbA,UAAU,GAAGT,SAAS,CAACO,IAAD,CAAT,GAAkB,YAAmB;QAC9CN,cAAc,CAACS,GAAf,CAAmB,IAAnB,EAAyBP,gCAAgC,CAACE,GAAjC,CAAqC,IAArC,EAA2CE,IAA3C,EAAiD,YAAjD,CAAzB;MACH,CAFD;IAGH;;IACD,OAAOE,UAAP;EACH;;AAXuB,CAA5B;;AAaA,gBAAgBE,OAAhB,GAAiC;EAC7B;EACA,IAAIC,MAAM,GAAG,IAAb;;EACA,IAAI,EAAEA,MAAM,YAAYC,SAApB,CAAJ,EAAoC;IAChCD,MAAM,GAAG,MAAMA,MAAM,CAACE,UAAP,CAAkB,YAAlB,CAAf;EACH;;EACD,IAAI,CAACF,MAAL,EACI;EACJA,MAAM,GAAGA,MAAT;EACA,MAAMG,aAAa,GAAG,IAAIC,KAAJ,CAAUJ,MAAV,EAAkBR,mBAAlB,CAAtB;EACAD,gCAAgC,CAACO,GAAjC,CAAqCK,aAArC,EAAoDH,MAApD,EAV6B,CAW7B;;EACAlB,qBAAqB,CAACgB,GAAtB,CAA0BK,aAA1B,EAAyCnB,MAAM,CAACgB,MAAD,CAA/C;;EACA,OAAOA,MAAP,EAAe;IACX,MAAMG,aAAN,CADW,CAEX;;IACAH,MAAM,GAAG,OAAOX,cAAc,CAACI,GAAf,CAAmBU,aAAnB,KAAqCH,MAAM,CAACK,QAAP,EAA5C,CAAT;IACAhB,cAAc,CAACiB,MAAf,CAAsBH,aAAtB;EACH;AACJ;;AACD,SAASI,cAAT,CAAwBb,MAAxB,EAAgCC,IAAhC,EAAsC;EAClC,OAASA,IAAI,KAAKa,MAAM,CAACC,aAAhB,IACLvB,aAAa,CAACQ,MAAD,EAAS,CAACgB,QAAD,EAAWC,cAAX,EAA2BV,SAA3B,CAAT,CADT,IAEHN,IAAI,KAAK,SAAT,IAAsBT,aAAa,CAACQ,MAAD,EAAS,CAACgB,QAAD,EAAWC,cAAX,CAAT,CAFxC;AAGH;;AACD/B,YAAY,CAAEgC,QAAD,KAAe,EACxB,GAAGA,QADqB;;EAExBnB,GAAG,CAACC,MAAD,EAASC,IAAT,EAAekB,QAAf,EAAyB;IACxB,IAAIN,cAAc,CAACb,MAAD,EAASC,IAAT,CAAlB,EACI,OAAOI,OAAP;IACJ,OAAOa,QAAQ,CAACnB,GAAT,CAAaC,MAAb,EAAqBC,IAArB,EAA2BkB,QAA3B,CAAP;EACH,CANuB;;EAOxBC,GAAG,CAACpB,MAAD,EAASC,IAAT,EAAe;IACd,OAAOY,cAAc,CAACb,MAAD,EAASC,IAAT,CAAd,IAAgCiB,QAAQ,CAACE,GAAT,CAAapB,MAAb,EAAqBC,IAArB,CAAvC;EACH;;AATuB,CAAf,CAAD,CAAZ"},"metadata":{},"sourceType":"module"}