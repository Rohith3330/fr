{"ast":null,"code":"'use strict';\n\nvar common = require('../common');\n\nvar Type = require('../type');\n\nfunction isHexCode(c) {\n  return 0x30\n  /* 0 */\n  <= c && c <= 0x39\n  /* 9 */\n  || 0x41\n  /* A */\n  <= c && c <= 0x46\n  /* F */\n  || 0x61\n  /* a */\n  <= c && c <= 0x66\n  /* f */\n  ;\n}\n\nfunction isOctCode(c) {\n  return 0x30\n  /* 0 */\n  <= c && c <= 0x37\n  /* 7 */\n  ;\n}\n\nfunction isDecCode(c) {\n  return 0x30\n  /* 0 */\n  <= c && c <= 0x39\n  /* 9 */\n  ;\n}\n\nfunction resolveYamlInteger(data) {\n  if (data === null) return false;\n  var max = data.length,\n      index = 0,\n      hasDigits = false,\n      ch;\n  if (!max) return false;\n  ch = data[index]; // sign\n\n  if (ch === '-' || ch === '+') {\n    ch = data[++index];\n  }\n\n  if (ch === '0') {\n    // 0\n    if (index + 1 === max) return true;\n    ch = data[++index]; // base 2, base 8, base 16\n\n    if (ch === 'b') {\n      // base 2\n      index++;\n\n      for (; index < max; index++) {\n        ch = data[index];\n        if (ch === '_') continue;\n        if (ch !== '0' && ch !== '1') return false;\n        hasDigits = true;\n      }\n\n      return hasDigits && ch !== '_';\n    }\n\n    if (ch === 'x') {\n      // base 16\n      index++;\n\n      for (; index < max; index++) {\n        ch = data[index];\n        if (ch === '_') continue;\n        if (!isHexCode(data.charCodeAt(index))) return false;\n        hasDigits = true;\n      }\n\n      return hasDigits && ch !== '_';\n    }\n\n    if (ch === 'o') {\n      // base 8\n      index++;\n\n      for (; index < max; index++) {\n        ch = data[index];\n        if (ch === '_') continue;\n        if (!isOctCode(data.charCodeAt(index))) return false;\n        hasDigits = true;\n      }\n\n      return hasDigits && ch !== '_';\n    }\n  } // base 10 (except 0)\n  // value should not start with `_`;\n\n\n  if (ch === '_') return false;\n\n  for (; index < max; index++) {\n    ch = data[index];\n    if (ch === '_') continue;\n\n    if (!isDecCode(data.charCodeAt(index))) {\n      return false;\n    }\n\n    hasDigits = true;\n  } // Should have digits and should not end with `_`\n\n\n  if (!hasDigits || ch === '_') return false;\n  return true;\n}\n\nfunction constructYamlInteger(data) {\n  var value = data,\n      sign = 1,\n      ch;\n\n  if (value.indexOf('_') !== -1) {\n    value = value.replace(/_/g, '');\n  }\n\n  ch = value[0];\n\n  if (ch === '-' || ch === '+') {\n    if (ch === '-') sign = -1;\n    value = value.slice(1);\n    ch = value[0];\n  }\n\n  if (value === '0') return 0;\n\n  if (ch === '0') {\n    if (value[1] === 'b') return sign * parseInt(value.slice(2), 2);\n    if (value[1] === 'x') return sign * parseInt(value.slice(2), 16);\n    if (value[1] === 'o') return sign * parseInt(value.slice(2), 8);\n  }\n\n  return sign * parseInt(value, 10);\n}\n\nfunction isInteger(object) {\n  return Object.prototype.toString.call(object) === '[object Number]' && object % 1 === 0 && !common.isNegativeZero(object);\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:int', {\n  kind: 'scalar',\n  resolve: resolveYamlInteger,\n  construct: constructYamlInteger,\n  predicate: isInteger,\n  represent: {\n    binary: function (obj) {\n      return obj >= 0 ? '0b' + obj.toString(2) : '-0b' + obj.toString(2).slice(1);\n    },\n    octal: function (obj) {\n      return obj >= 0 ? '0o' + obj.toString(8) : '-0o' + obj.toString(8).slice(1);\n    },\n    decimal: function (obj) {\n      return obj.toString(10);\n    },\n\n    /* eslint-disable max-len */\n    hexadecimal: function (obj) {\n      return obj >= 0 ? '0x' + obj.toString(16).toUpperCase() : '-0x' + obj.toString(16).toUpperCase().slice(1);\n    }\n  },\n  defaultStyle: 'decimal',\n  styleAliases: {\n    binary: [2, 'bin'],\n    octal: [8, 'oct'],\n    decimal: [10, 'dec'],\n    hexadecimal: [16, 'hex']\n  }\n});","map":{"version":3,"names":["common","require","Type","isHexCode","c","isOctCode","isDecCode","resolveYamlInteger","data","max","length","index","hasDigits","ch","charCodeAt","constructYamlInteger","value","sign","indexOf","replace","slice","parseInt","isInteger","object","Object","prototype","toString","call","isNegativeZero","module","exports","kind","resolve","construct","predicate","represent","binary","obj","octal","decimal","hexadecimal","toUpperCase","defaultStyle","styleAliases"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/@eslint/eslintrc/node_modules/js-yaml/lib/type/int.js"],"sourcesContent":["'use strict';\n\nvar common = require('../common');\nvar Type   = require('../type');\n\nfunction isHexCode(c) {\n  return ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */)) ||\n         ((0x41/* A */ <= c) && (c <= 0x46/* F */)) ||\n         ((0x61/* a */ <= c) && (c <= 0x66/* f */));\n}\n\nfunction isOctCode(c) {\n  return ((0x30/* 0 */ <= c) && (c <= 0x37/* 7 */));\n}\n\nfunction isDecCode(c) {\n  return ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */));\n}\n\nfunction resolveYamlInteger(data) {\n  if (data === null) return false;\n\n  var max = data.length,\n      index = 0,\n      hasDigits = false,\n      ch;\n\n  if (!max) return false;\n\n  ch = data[index];\n\n  // sign\n  if (ch === '-' || ch === '+') {\n    ch = data[++index];\n  }\n\n  if (ch === '0') {\n    // 0\n    if (index + 1 === max) return true;\n    ch = data[++index];\n\n    // base 2, base 8, base 16\n\n    if (ch === 'b') {\n      // base 2\n      index++;\n\n      for (; index < max; index++) {\n        ch = data[index];\n        if (ch === '_') continue;\n        if (ch !== '0' && ch !== '1') return false;\n        hasDigits = true;\n      }\n      return hasDigits && ch !== '_';\n    }\n\n\n    if (ch === 'x') {\n      // base 16\n      index++;\n\n      for (; index < max; index++) {\n        ch = data[index];\n        if (ch === '_') continue;\n        if (!isHexCode(data.charCodeAt(index))) return false;\n        hasDigits = true;\n      }\n      return hasDigits && ch !== '_';\n    }\n\n\n    if (ch === 'o') {\n      // base 8\n      index++;\n\n      for (; index < max; index++) {\n        ch = data[index];\n        if (ch === '_') continue;\n        if (!isOctCode(data.charCodeAt(index))) return false;\n        hasDigits = true;\n      }\n      return hasDigits && ch !== '_';\n    }\n  }\n\n  // base 10 (except 0)\n\n  // value should not start with `_`;\n  if (ch === '_') return false;\n\n  for (; index < max; index++) {\n    ch = data[index];\n    if (ch === '_') continue;\n    if (!isDecCode(data.charCodeAt(index))) {\n      return false;\n    }\n    hasDigits = true;\n  }\n\n  // Should have digits and should not end with `_`\n  if (!hasDigits || ch === '_') return false;\n\n  return true;\n}\n\nfunction constructYamlInteger(data) {\n  var value = data, sign = 1, ch;\n\n  if (value.indexOf('_') !== -1) {\n    value = value.replace(/_/g, '');\n  }\n\n  ch = value[0];\n\n  if (ch === '-' || ch === '+') {\n    if (ch === '-') sign = -1;\n    value = value.slice(1);\n    ch = value[0];\n  }\n\n  if (value === '0') return 0;\n\n  if (ch === '0') {\n    if (value[1] === 'b') return sign * parseInt(value.slice(2), 2);\n    if (value[1] === 'x') return sign * parseInt(value.slice(2), 16);\n    if (value[1] === 'o') return sign * parseInt(value.slice(2), 8);\n  }\n\n  return sign * parseInt(value, 10);\n}\n\nfunction isInteger(object) {\n  return (Object.prototype.toString.call(object)) === '[object Number]' &&\n         (object % 1 === 0 && !common.isNegativeZero(object));\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:int', {\n  kind: 'scalar',\n  resolve: resolveYamlInteger,\n  construct: constructYamlInteger,\n  predicate: isInteger,\n  represent: {\n    binary:      function (obj) { return obj >= 0 ? '0b' + obj.toString(2) : '-0b' + obj.toString(2).slice(1); },\n    octal:       function (obj) { return obj >= 0 ? '0o'  + obj.toString(8) : '-0o'  + obj.toString(8).slice(1); },\n    decimal:     function (obj) { return obj.toString(10); },\n    /* eslint-disable max-len */\n    hexadecimal: function (obj) { return obj >= 0 ? '0x' + obj.toString(16).toUpperCase() :  '-0x' + obj.toString(16).toUpperCase().slice(1); }\n  },\n  defaultStyle: 'decimal',\n  styleAliases: {\n    binary:      [ 2,  'bin' ],\n    octal:       [ 8,  'oct' ],\n    decimal:     [ 10, 'dec' ],\n    hexadecimal: [ 16, 'hex' ]\n  }\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}