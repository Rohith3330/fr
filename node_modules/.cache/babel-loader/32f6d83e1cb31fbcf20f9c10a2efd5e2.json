{"ast":null,"code":"namespace('concurrent', function () {\n  task('A', function () {\n    console.log('Started A');\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        console.log('Finished A');\n        resolve();\n      }, 200);\n    });\n  });\n  task('B', function () {\n    console.log('Started B');\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        console.log('Finished B');\n        resolve();\n      }, 50);\n    });\n  });\n  task('C', function () {\n    console.log('Started C');\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        console.log('Finished C');\n        resolve();\n      }, 100);\n    });\n  });\n  task('D', function () {\n    console.log('Started D');\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        console.log('Finished D');\n        resolve();\n      }, 300);\n    });\n  });\n  task('Ba', ['A'], function () {\n    console.log('Started Ba');\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        console.log('Finished Ba');\n        resolve();\n      }, 50);\n    });\n  });\n  task('Afail', function () {\n    console.log('Started failing task');\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        console.log('Failing B with error');\n        throw new Error('I failed');\n      }, 50);\n    });\n  });\n  task('simple1', ['A', 'B'], {\n    concurrency: 2\n  }, function () {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        resolve();\n      }, 50);\n    });\n  });\n  task('simple2', ['C', 'D'], {\n    concurrency: 2\n  }, function () {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        resolve();\n      }, 50);\n    });\n  });\n  task('seqconcurrent', ['simple1', 'simple2'], function () {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        resolve();\n      }, 50);\n    });\n  });\n  task('concurrentconcurrent', ['simple1', 'simple2'], {\n    concurrency: 2\n  }, function () {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        resolve();\n      }, 50);\n    });\n  });\n  task('subdep', ['A', 'Ba'], {\n    concurrency: 2\n  }, function () {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        resolve();\n      }, 50);\n    });\n  });\n  task('fail', ['A', 'B', 'Afail'], {\n    concurrency: 3\n  }, function () {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        resolve();\n      }, 50);\n    });\n  });\n});","map":{"version":3,"names":["namespace","task","console","log","Promise","resolve","reject","setTimeout","Error","concurrency"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/jake/test/integration/jakelib/concurrent.jake.js"],"sourcesContent":["\nnamespace('concurrent', function () {\n  task('A', function () {\n    console.log('Started A');\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        console.log('Finished A');\n        resolve();\n      }, 200);\n    });\n  });\n\n  task('B', function () {\n    console.log('Started B');\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        console.log('Finished B');\n        resolve();\n      }, 50);\n    });\n  });\n\n  task('C', function () {\n    console.log('Started C');\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        console.log('Finished C');\n        resolve();\n      }, 100);\n    });\n  });\n\n  task('D', function () {\n    console.log('Started D');\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        console.log('Finished D');\n        resolve();\n      }, 300);\n    });\n  });\n\n  task('Ba', ['A'], function () {\n    console.log('Started Ba');\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        console.log('Finished Ba');\n        resolve();\n      }, 50);\n    });\n  });\n\n  task('Afail', function () {\n    console.log('Started failing task');\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        console.log('Failing B with error');\n        throw new Error('I failed');\n      }, 50);\n    });\n  });\n\n  task('simple1', ['A','B'], {concurrency: 2}, function () {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        resolve();\n      }, 50);\n    });\n  });\n\n  task('simple2', ['C','D'], {concurrency: 2}, function () {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        resolve();\n      }, 50);\n    });\n  });\n\n  task('seqconcurrent', ['simple1','simple2'], function () {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        resolve();\n      }, 50);\n    });\n  });\n\n  task('concurrentconcurrent', ['simple1','simple2'], {concurrency: 2}, function () {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        resolve();\n      }, 50);\n    });\n  });\n\n  task('subdep', ['A','Ba'], {concurrency: 2}, function () {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        resolve();\n      }, 50);\n    });\n  });\n\n  task('fail', ['A', 'B', 'Afail'], {concurrency: 3}, function () {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        resolve();\n      }, 50);\n    });\n  });\n\n});\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}