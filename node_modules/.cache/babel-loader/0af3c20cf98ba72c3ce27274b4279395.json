{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst chokidar_1 = __importDefault(require(\"chokidar\"));\n\nconst path_1 = require(\"path\");\n\nconst reporter_1 = require(\"../reporter\");\n\nconst minimatch_1 = __importDefault(require(\"minimatch\"));\n\nconst BUILTIN_IGNORED_DIRS = ['node_modules', '.git', '.yarn', '.pnp'];\n\nfunction createIsIgnored(ignored, excluded) {\n  const ignoredPatterns = ignored ? Array.isArray(ignored) ? ignored : [ignored] : [];\n  const ignoredFunctions = ignoredPatterns.map(pattern => {\n    // ensure patterns are valid - see https://github.com/TypeStrong/fork-ts-checker-webpack-plugin/issues/594\n    if (typeof pattern === 'string') {\n      return path => minimatch_1.default(path, pattern);\n    } else if (typeof pattern === 'function') {\n      return pattern;\n    } else if (pattern instanceof RegExp) {\n      return path => pattern.test(path);\n    } else {\n      // fallback to no-ignore function\n      return () => false;\n    }\n  });\n  ignoredFunctions.push(path => excluded.some(excludedPath => path.startsWith(excludedPath)));\n  ignoredFunctions.push(path => BUILTIN_IGNORED_DIRS.some(ignoredDir => path.includes(`/${ignoredDir}/`) || path.includes(`\\\\${ignoredDir}\\\\`)));\n  return function isIgnored(path) {\n    return ignoredFunctions.some(ignoredFunction => ignoredFunction(path));\n  };\n}\n\nclass InclusiveNodeWatchFileSystem {\n  constructor(watchFileSystem, compiler, pluginState) {\n    this.watchFileSystem = watchFileSystem;\n    this.compiler = compiler;\n    this.pluginState = pluginState;\n    this.paused = true;\n    this.dirsWatchers = new Map();\n  }\n\n  get watcher() {\n    var _a;\n\n    return this.watchFileSystem.watcher || ((_a = this.watchFileSystem.wfs) === null || _a === void 0 ? void 0 : _a.watcher);\n  }\n\n  watch(files, dirs, missing, startTime, options, callback, callbackUndelayed) {\n    var _a, _b, _c, _d;\n\n    reporter_1.clearFilesChange(this.compiler);\n    const isIgnored = createIsIgnored(options === null || options === void 0 ? void 0 : options.ignored, ((_a = this.pluginState.lastDependencies) === null || _a === void 0 ? void 0 : _a.excluded) || []); // use standard watch file system for files and missing\n\n    const standardWatcher = this.watchFileSystem.watch(files, dirs, missing, startTime, options, callback, callbackUndelayed);\n    (_b = this.watcher) === null || _b === void 0 ? void 0 : _b.on('change', file => {\n      if (typeof file === 'string' && !isIgnored(file)) {\n        reporter_1.updateFilesChange(this.compiler, {\n          changedFiles: [file]\n        });\n      }\n    });\n    (_c = this.watcher) === null || _c === void 0 ? void 0 : _c.on('remove', file => {\n      if (typeof file === 'string' && !isIgnored(file)) {\n        reporter_1.updateFilesChange(this.compiler, {\n          deletedFiles: [file]\n        });\n      }\n    }); // calculate what to change\n\n    const prevDirs = Array.from(this.dirsWatchers.keys());\n    const nextDirs = Array.from(((_d = this.pluginState.lastDependencies) === null || _d === void 0 ? void 0 : _d.dirs) || []);\n    const dirsToUnwatch = prevDirs.filter(prevDir => !nextDirs.includes(prevDir));\n    const dirsToWatch = nextDirs.filter(nextDir => !prevDirs.includes(nextDir) && !isIgnored(nextDir)); // update dirs watcher\n\n    dirsToUnwatch.forEach(dirToUnwatch => {\n      var _a;\n\n      (_a = this.dirsWatchers.get(dirToUnwatch)) === null || _a === void 0 ? void 0 : _a.close();\n      this.dirsWatchers.delete(dirToUnwatch);\n    });\n    dirsToWatch.forEach(dirToWatch => {\n      const interval = typeof (options === null || options === void 0 ? void 0 : options.poll) === 'number' ? options.poll : undefined;\n      const dirWatcher = chokidar_1.default.watch(dirToWatch, {\n        ignoreInitial: true,\n        ignorePermissionErrors: true,\n        ignored: path => isIgnored(path),\n        usePolling: (options === null || options === void 0 ? void 0 : options.poll) ? true : undefined,\n        interval: interval,\n        binaryInterval: interval,\n        alwaysStat: true,\n        atomic: true,\n        awaitWriteFinish: true\n      });\n      dirWatcher.on('add', (file, stats) => {\n        var _a, _b;\n\n        if (this.paused) {\n          return;\n        }\n\n        const extension = path_1.extname(file);\n        const supportedExtensions = ((_a = this.pluginState.lastDependencies) === null || _a === void 0 ? void 0 : _a.extensions) || [];\n\n        if (!supportedExtensions.includes(extension)) {\n          return;\n        }\n\n        reporter_1.updateFilesChange(this.compiler, {\n          changedFiles: [file]\n        });\n        const mtime = (stats === null || stats === void 0 ? void 0 : stats.mtimeMs) || (stats === null || stats === void 0 ? void 0 : stats.ctimeMs) || 1;\n        (_b = this.watcher) === null || _b === void 0 ? void 0 : _b._onChange(dirToWatch, mtime, file, 'rename');\n      });\n      dirWatcher.on('unlink', file => {\n        var _a, _b;\n\n        if (this.paused) {\n          return;\n        }\n\n        const extension = path_1.extname(file);\n        const supportedExtensions = ((_a = this.pluginState.lastDependencies) === null || _a === void 0 ? void 0 : _a.extensions) || [];\n\n        if (!supportedExtensions.includes(extension)) {\n          return;\n        }\n\n        reporter_1.updateFilesChange(this.compiler, {\n          deletedFiles: [file]\n        });\n        (_b = this.watcher) === null || _b === void 0 ? void 0 : _b._onRemove(dirToWatch, file, 'rename');\n      });\n      this.dirsWatchers.set(dirToWatch, dirWatcher);\n    });\n    this.paused = false;\n    return Object.assign(Object.assign({}, standardWatcher), {\n      close: () => {\n        reporter_1.clearFilesChange(this.compiler);\n\n        if (standardWatcher) {\n          standardWatcher.close();\n        }\n\n        this.dirsWatchers.forEach(dirWatcher => {\n          dirWatcher === null || dirWatcher === void 0 ? void 0 : dirWatcher.close();\n        });\n        this.dirsWatchers.clear();\n        this.paused = true;\n      },\n      pause: () => {\n        if (standardWatcher) {\n          standardWatcher.pause();\n        }\n\n        this.paused = true;\n      }\n    });\n  }\n\n}\n\nexports.InclusiveNodeWatchFileSystem = InclusiveNodeWatchFileSystem;","map":{"version":3,"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","chokidar_1","require","path_1","reporter_1","minimatch_1","BUILTIN_IGNORED_DIRS","createIsIgnored","ignored","excluded","ignoredPatterns","Array","isArray","ignoredFunctions","map","pattern","path","default","RegExp","test","push","some","excludedPath","startsWith","ignoredDir","includes","isIgnored","ignoredFunction","InclusiveNodeWatchFileSystem","constructor","watchFileSystem","compiler","pluginState","paused","dirsWatchers","Map","watcher","_a","wfs","watch","files","dirs","missing","startTime","options","callback","callbackUndelayed","_b","_c","_d","clearFilesChange","lastDependencies","standardWatcher","on","file","updateFilesChange","changedFiles","deletedFiles","prevDirs","from","keys","nextDirs","dirsToUnwatch","filter","prevDir","dirsToWatch","nextDir","forEach","dirToUnwatch","get","close","delete","dirToWatch","interval","poll","undefined","dirWatcher","ignoreInitial","ignorePermissionErrors","usePolling","binaryInterval","alwaysStat","atomic","awaitWriteFinish","stats","extension","extname","supportedExtensions","extensions","mtime","mtimeMs","ctimeMs","_onChange","_onRemove","set","assign","clear","pause"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/fork-ts-checker-webpack-plugin/lib/watch/InclusiveNodeWatchFileSystem.js"],"sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst chokidar_1 = __importDefault(require(\"chokidar\"));\nconst path_1 = require(\"path\");\nconst reporter_1 = require(\"../reporter\");\nconst minimatch_1 = __importDefault(require(\"minimatch\"));\nconst BUILTIN_IGNORED_DIRS = ['node_modules', '.git', '.yarn', '.pnp'];\nfunction createIsIgnored(ignored, excluded) {\n    const ignoredPatterns = ignored ? (Array.isArray(ignored) ? ignored : [ignored]) : [];\n    const ignoredFunctions = ignoredPatterns.map((pattern) => {\n        // ensure patterns are valid - see https://github.com/TypeStrong/fork-ts-checker-webpack-plugin/issues/594\n        if (typeof pattern === 'string') {\n            return (path) => minimatch_1.default(path, pattern);\n        }\n        else if (typeof pattern === 'function') {\n            return pattern;\n        }\n        else if (pattern instanceof RegExp) {\n            return (path) => pattern.test(path);\n        }\n        else {\n            // fallback to no-ignore function\n            return () => false;\n        }\n    });\n    ignoredFunctions.push((path) => excluded.some((excludedPath) => path.startsWith(excludedPath)));\n    ignoredFunctions.push((path) => BUILTIN_IGNORED_DIRS.some((ignoredDir) => path.includes(`/${ignoredDir}/`) || path.includes(`\\\\${ignoredDir}\\\\`)));\n    return function isIgnored(path) {\n        return ignoredFunctions.some((ignoredFunction) => ignoredFunction(path));\n    };\n}\nclass InclusiveNodeWatchFileSystem {\n    constructor(watchFileSystem, compiler, pluginState) {\n        this.watchFileSystem = watchFileSystem;\n        this.compiler = compiler;\n        this.pluginState = pluginState;\n        this.paused = true;\n        this.dirsWatchers = new Map();\n    }\n    get watcher() {\n        var _a;\n        return this.watchFileSystem.watcher || ((_a = this.watchFileSystem.wfs) === null || _a === void 0 ? void 0 : _a.watcher);\n    }\n    watch(files, dirs, missing, startTime, options, callback, callbackUndelayed) {\n        var _a, _b, _c, _d;\n        reporter_1.clearFilesChange(this.compiler);\n        const isIgnored = createIsIgnored(options === null || options === void 0 ? void 0 : options.ignored, ((_a = this.pluginState.lastDependencies) === null || _a === void 0 ? void 0 : _a.excluded) || []);\n        // use standard watch file system for files and missing\n        const standardWatcher = this.watchFileSystem.watch(files, dirs, missing, startTime, options, callback, callbackUndelayed);\n        (_b = this.watcher) === null || _b === void 0 ? void 0 : _b.on('change', (file) => {\n            if (typeof file === 'string' && !isIgnored(file)) {\n                reporter_1.updateFilesChange(this.compiler, { changedFiles: [file] });\n            }\n        });\n        (_c = this.watcher) === null || _c === void 0 ? void 0 : _c.on('remove', (file) => {\n            if (typeof file === 'string' && !isIgnored(file)) {\n                reporter_1.updateFilesChange(this.compiler, { deletedFiles: [file] });\n            }\n        });\n        // calculate what to change\n        const prevDirs = Array.from(this.dirsWatchers.keys());\n        const nextDirs = Array.from(((_d = this.pluginState.lastDependencies) === null || _d === void 0 ? void 0 : _d.dirs) || []);\n        const dirsToUnwatch = prevDirs.filter((prevDir) => !nextDirs.includes(prevDir));\n        const dirsToWatch = nextDirs.filter((nextDir) => !prevDirs.includes(nextDir) && !isIgnored(nextDir));\n        // update dirs watcher\n        dirsToUnwatch.forEach((dirToUnwatch) => {\n            var _a;\n            (_a = this.dirsWatchers.get(dirToUnwatch)) === null || _a === void 0 ? void 0 : _a.close();\n            this.dirsWatchers.delete(dirToUnwatch);\n        });\n        dirsToWatch.forEach((dirToWatch) => {\n            const interval = typeof (options === null || options === void 0 ? void 0 : options.poll) === 'number' ? options.poll : undefined;\n            const dirWatcher = chokidar_1.default.watch(dirToWatch, {\n                ignoreInitial: true,\n                ignorePermissionErrors: true,\n                ignored: (path) => isIgnored(path),\n                usePolling: (options === null || options === void 0 ? void 0 : options.poll) ? true : undefined,\n                interval: interval,\n                binaryInterval: interval,\n                alwaysStat: true,\n                atomic: true,\n                awaitWriteFinish: true,\n            });\n            dirWatcher.on('add', (file, stats) => {\n                var _a, _b;\n                if (this.paused) {\n                    return;\n                }\n                const extension = path_1.extname(file);\n                const supportedExtensions = ((_a = this.pluginState.lastDependencies) === null || _a === void 0 ? void 0 : _a.extensions) || [];\n                if (!supportedExtensions.includes(extension)) {\n                    return;\n                }\n                reporter_1.updateFilesChange(this.compiler, { changedFiles: [file] });\n                const mtime = (stats === null || stats === void 0 ? void 0 : stats.mtimeMs) || (stats === null || stats === void 0 ? void 0 : stats.ctimeMs) || 1;\n                (_b = this.watcher) === null || _b === void 0 ? void 0 : _b._onChange(dirToWatch, mtime, file, 'rename');\n            });\n            dirWatcher.on('unlink', (file) => {\n                var _a, _b;\n                if (this.paused) {\n                    return;\n                }\n                const extension = path_1.extname(file);\n                const supportedExtensions = ((_a = this.pluginState.lastDependencies) === null || _a === void 0 ? void 0 : _a.extensions) || [];\n                if (!supportedExtensions.includes(extension)) {\n                    return;\n                }\n                reporter_1.updateFilesChange(this.compiler, { deletedFiles: [file] });\n                (_b = this.watcher) === null || _b === void 0 ? void 0 : _b._onRemove(dirToWatch, file, 'rename');\n            });\n            this.dirsWatchers.set(dirToWatch, dirWatcher);\n        });\n        this.paused = false;\n        return Object.assign(Object.assign({}, standardWatcher), { close: () => {\n                reporter_1.clearFilesChange(this.compiler);\n                if (standardWatcher) {\n                    standardWatcher.close();\n                }\n                this.dirsWatchers.forEach((dirWatcher) => {\n                    dirWatcher === null || dirWatcher === void 0 ? void 0 : dirWatcher.close();\n                });\n                this.dirsWatchers.clear();\n                this.paused = true;\n            }, pause: () => {\n                if (standardWatcher) {\n                    standardWatcher.pause();\n                }\n                this.paused = true;\n            } });\n    }\n}\nexports.InclusiveNodeWatchFileSystem = InclusiveNodeWatchFileSystem;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}