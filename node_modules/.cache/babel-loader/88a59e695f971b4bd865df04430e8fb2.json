{"ast":null,"code":"/**\n * @fileoverview Forbid target='_blank' attribute\n * @author Kevin Miller\n */\n'use strict';\n\nconst docsUrl = require('../util/docsUrl');\n\nconst linkComponentsUtil = require('../util/linkComponents');\n\nconst report = require('../util/report'); // ------------------------------------------------------------------------------\n// Rule Definition\n// ------------------------------------------------------------------------------\n\n\nfunction findLastIndex(arr, condition) {\n  for (let i = arr.length - 1; i >= 0; i -= 1) {\n    if (condition(arr[i])) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n\nfunction attributeValuePossiblyBlank(attribute) {\n  if (!attribute || !attribute.value) {\n    return false;\n  }\n\n  const value = attribute.value;\n\n  if (value.type === 'Literal') {\n    return typeof value.value === 'string' && value.value.toLowerCase() === '_blank';\n  }\n\n  if (value.type === 'JSXExpressionContainer') {\n    const expr = value.expression;\n\n    if (expr.type === 'Literal') {\n      return typeof expr.value === 'string' && expr.value.toLowerCase() === '_blank';\n    }\n\n    if (expr.type === 'ConditionalExpression') {\n      if (expr.alternate.type === 'Literal' && expr.alternate.value && expr.alternate.value.toLowerCase() === '_blank') {\n        return true;\n      }\n\n      if (expr.consequent.type === 'Literal' && expr.consequent.value && expr.consequent.value.toLowerCase() === '_blank') {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n\nfunction hasExternalLink(node, linkAttribute, warnOnSpreadAttributes, spreadAttributeIndex) {\n  const linkIndex = findLastIndex(node.attributes, attr => attr.name && attr.name.name === linkAttribute);\n\n  const foundExternalLink = linkIndex !== -1 && (attr => attr.value && attr.value.type === 'Literal' && /^(?:\\w+:|\\/\\/)/.test(attr.value.value))(node.attributes[linkIndex]);\n\n  return foundExternalLink || warnOnSpreadAttributes && linkIndex < spreadAttributeIndex;\n}\n\nfunction hasDynamicLink(node, linkAttribute) {\n  const dynamicLinkIndex = findLastIndex(node.attributes, attr => attr.name && attr.name.name === linkAttribute && attr.value && attr.value.type === 'JSXExpressionContainer');\n\n  if (dynamicLinkIndex !== -1) {\n    return true;\n  }\n}\n\nfunction getStringFromValue(value) {\n  if (value) {\n    if (value.type === 'Literal') {\n      return value.value;\n    }\n\n    if (value.type === 'JSXExpressionContainer') {\n      if (value.expression.type === 'TemplateLiteral') {\n        return value.expression.quasis[0].value.cooked;\n      }\n\n      const expr = value.expression;\n      return expr && (expr.type === 'ConditionalExpression' ? [expr.consequent.value, expr.alternate.value] : expr.value);\n    }\n  }\n\n  return null;\n}\n\nfunction hasSecureRel(node, allowReferrer, warnOnSpreadAttributes, spreadAttributeIndex) {\n  const relIndex = findLastIndex(node.attributes, attr => attr.type === 'JSXAttribute' && attr.name.name === 'rel');\n\n  if (relIndex === -1 || warnOnSpreadAttributes && relIndex < spreadAttributeIndex) {\n    return false;\n  }\n\n  const relAttribute = node.attributes[relIndex];\n  const value = getStringFromValue(relAttribute.value);\n  return [].concat(value).every(item => {\n    const tags = typeof item === 'string' ? item.toLowerCase().split(' ') : false;\n    const noreferrer = tags && tags.indexOf('noreferrer') >= 0;\n\n    if (noreferrer) {\n      return true;\n    }\n\n    const noopener = tags && tags.indexOf('noopener') >= 0;\n    return allowReferrer && noopener;\n  });\n}\n\nconst messages = {\n  noTargetBlankWithoutNoreferrer: 'Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations',\n  noTargetBlankWithoutNoopener: 'Using target=\"_blank\" without rel=\"noreferrer\" or rel=\"noopener\" (the former implies the latter and is preferred due to wider support) is a security risk: see https://mathiasbynens.github.io/rel-noopener/#recommendations'\n};\nmodule.exports = {\n  meta: {\n    fixable: 'code',\n    docs: {\n      description: 'Disallow `target=\"_blank\"` attribute without `rel=\"noreferrer\"`',\n      category: 'Best Practices',\n      recommended: true,\n      url: docsUrl('jsx-no-target-blank')\n    },\n    messages,\n    schema: [{\n      type: 'object',\n      properties: {\n        allowReferrer: {\n          type: 'boolean'\n        },\n        enforceDynamicLinks: {\n          enum: ['always', 'never']\n        },\n        warnOnSpreadAttributes: {\n          type: 'boolean'\n        },\n        links: {\n          type: 'boolean',\n          default: true\n        },\n        forms: {\n          type: 'boolean',\n          default: false\n        }\n      },\n      additionalProperties: false\n    }]\n  },\n\n  create(context) {\n    const configuration = Object.assign({\n      allowReferrer: false,\n      warnOnSpreadAttributes: false,\n      links: true,\n      forms: false\n    }, context.options[0]);\n    const allowReferrer = configuration.allowReferrer;\n    const warnOnSpreadAttributes = configuration.warnOnSpreadAttributes;\n    const enforceDynamicLinks = configuration.enforceDynamicLinks || 'always';\n    const linkComponents = linkComponentsUtil.getLinkComponents(context);\n    const formComponents = linkComponentsUtil.getFormComponents(context);\n    return {\n      JSXOpeningElement(node) {\n        const targetIndex = findLastIndex(node.attributes, attr => attr.name && attr.name.name === 'target');\n        const spreadAttributeIndex = findLastIndex(node.attributes, attr => attr.type === 'JSXSpreadAttribute');\n\n        if (linkComponents.has(node.name.name)) {\n          if (!attributeValuePossiblyBlank(node.attributes[targetIndex])) {\n            const hasSpread = spreadAttributeIndex >= 0;\n\n            if (warnOnSpreadAttributes && hasSpread) {// continue to check below\n            } else if (hasSpread && targetIndex < spreadAttributeIndex || !hasSpread || !warnOnSpreadAttributes) {\n              return;\n            }\n          }\n\n          const linkAttribute = linkComponents.get(node.name.name);\n          const hasDangerousLink = hasExternalLink(node, linkAttribute, warnOnSpreadAttributes, spreadAttributeIndex) || enforceDynamicLinks === 'always' && hasDynamicLink(node, linkAttribute);\n\n          if (hasDangerousLink && !hasSecureRel(node, allowReferrer, warnOnSpreadAttributes, spreadAttributeIndex)) {\n            const messageId = allowReferrer ? 'noTargetBlankWithoutNoopener' : 'noTargetBlankWithoutNoreferrer';\n            const relValue = allowReferrer ? 'noopener' : 'noreferrer';\n            report(context, messages[messageId], messageId, {\n              node,\n\n              fix(fixer) {\n                // eslint 5 uses `node.attributes`; eslint 6+ uses `node.parent.attributes`\n                const nodeWithAttrs = node.parent.attributes ? node.parent : node; // eslint 5 does not provide a `name` property on JSXSpreadElements\n\n                const relAttribute = nodeWithAttrs.attributes.find(attr => attr.name && attr.name.name === 'rel');\n\n                if (targetIndex < spreadAttributeIndex || spreadAttributeIndex >= 0 && !relAttribute) {\n                  return null;\n                }\n\n                if (!relAttribute) {\n                  return fixer.insertTextAfter(nodeWithAttrs.attributes.slice(-1)[0], ` rel=\"${relValue}\"`);\n                }\n\n                if (!relAttribute.value) {\n                  return fixer.insertTextAfter(relAttribute, `=\"${relValue}\"`);\n                }\n\n                if (relAttribute.value.type === 'Literal') {\n                  const parts = relAttribute.value.value.split('noreferrer').filter(Boolean);\n                  return fixer.replaceText(relAttribute.value, `\"${parts.concat('noreferrer').join(' ')}\"`);\n                }\n\n                if (relAttribute.value.type === 'JSXExpressionContainer') {\n                  if (relAttribute.value.expression.type === 'Literal') {\n                    if (typeof relAttribute.value.expression.value === 'string') {\n                      const parts = relAttribute.value.expression.value.split('noreferrer').filter(Boolean);\n                      return fixer.replaceText(relAttribute.value.expression, `\"${parts.concat('noreferrer').join(' ')}\"`);\n                    } // for undefined, boolean, number, symbol, bigint, and null\n\n\n                    return fixer.replaceText(relAttribute.value, '\"noreferrer\"');\n                  }\n                }\n\n                return null;\n              }\n\n            });\n          }\n        }\n\n        if (formComponents.has(node.name.name)) {\n          if (!attributeValuePossiblyBlank(node.attributes[targetIndex])) {\n            const hasSpread = spreadAttributeIndex >= 0;\n\n            if (warnOnSpreadAttributes && hasSpread) {// continue to check below\n            } else if (hasSpread && targetIndex < spreadAttributeIndex || !hasSpread || !warnOnSpreadAttributes) {\n              return;\n            }\n          }\n\n          if (!configuration.forms || hasSecureRel(node)) {\n            return;\n          }\n\n          const formAttribute = formComponents.get(node.name.name);\n\n          if (hasExternalLink(node, formAttribute) || enforceDynamicLinks === 'always' && hasDynamicLink(node, formAttribute)) {\n            const messageId = allowReferrer ? 'noTargetBlankWithoutNoopener' : 'noTargetBlankWithoutNoreferrer';\n            report(context, messages[messageId], messageId, {\n              node\n            });\n          }\n        }\n      }\n\n    };\n  }\n\n};","map":{"version":3,"names":["docsUrl","require","linkComponentsUtil","report","findLastIndex","arr","condition","i","length","attributeValuePossiblyBlank","attribute","value","type","toLowerCase","expr","expression","alternate","consequent","hasExternalLink","node","linkAttribute","warnOnSpreadAttributes","spreadAttributeIndex","linkIndex","attributes","attr","name","foundExternalLink","test","hasDynamicLink","dynamicLinkIndex","getStringFromValue","quasis","cooked","hasSecureRel","allowReferrer","relIndex","relAttribute","concat","every","item","tags","split","noreferrer","indexOf","noopener","messages","noTargetBlankWithoutNoreferrer","noTargetBlankWithoutNoopener","module","exports","meta","fixable","docs","description","category","recommended","url","schema","properties","enforceDynamicLinks","enum","links","default","forms","additionalProperties","create","context","configuration","Object","assign","options","linkComponents","getLinkComponents","formComponents","getFormComponents","JSXOpeningElement","targetIndex","has","hasSpread","get","hasDangerousLink","messageId","relValue","fix","fixer","nodeWithAttrs","parent","find","insertTextAfter","slice","parts","filter","Boolean","replaceText","join","formAttribute"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/eslint-plugin-react/lib/rules/jsx-no-target-blank.js"],"sourcesContent":["/**\n * @fileoverview Forbid target='_blank' attribute\n * @author Kevin Miller\n */\n\n'use strict';\n\nconst docsUrl = require('../util/docsUrl');\nconst linkComponentsUtil = require('../util/linkComponents');\nconst report = require('../util/report');\n\n// ------------------------------------------------------------------------------\n// Rule Definition\n// ------------------------------------------------------------------------------\n\nfunction findLastIndex(arr, condition) {\n  for (let i = arr.length - 1; i >= 0; i -= 1) {\n    if (condition(arr[i])) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n\nfunction attributeValuePossiblyBlank(attribute) {\n  if (!attribute || !attribute.value) {\n    return false;\n  }\n  const value = attribute.value;\n  if (value.type === 'Literal') {\n    return typeof value.value === 'string' && value.value.toLowerCase() === '_blank';\n  }\n  if (value.type === 'JSXExpressionContainer') {\n    const expr = value.expression;\n    if (expr.type === 'Literal') {\n      return typeof expr.value === 'string' && expr.value.toLowerCase() === '_blank';\n    }\n    if (expr.type === 'ConditionalExpression') {\n      if (expr.alternate.type === 'Literal' && expr.alternate.value && expr.alternate.value.toLowerCase() === '_blank') {\n        return true;\n      }\n      if (expr.consequent.type === 'Literal' && expr.consequent.value && expr.consequent.value.toLowerCase() === '_blank') {\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\nfunction hasExternalLink(node, linkAttribute, warnOnSpreadAttributes, spreadAttributeIndex) {\n  const linkIndex = findLastIndex(node.attributes, (attr) => attr.name && attr.name.name === linkAttribute);\n  const foundExternalLink = linkIndex !== -1 && ((attr) => attr.value && attr.value.type === 'Literal' && /^(?:\\w+:|\\/\\/)/.test(attr.value.value))(\n    node.attributes[linkIndex]);\n  return foundExternalLink || (warnOnSpreadAttributes && linkIndex < spreadAttributeIndex);\n}\n\nfunction hasDynamicLink(node, linkAttribute) {\n  const dynamicLinkIndex = findLastIndex(node.attributes, (attr) => attr.name\n    && attr.name.name === linkAttribute\n    && attr.value\n    && attr.value.type === 'JSXExpressionContainer');\n  if (dynamicLinkIndex !== -1) {\n    return true;\n  }\n}\n\nfunction getStringFromValue(value) {\n  if (value) {\n    if (value.type === 'Literal') {\n      return value.value;\n    }\n    if (value.type === 'JSXExpressionContainer') {\n      if (value.expression.type === 'TemplateLiteral') {\n        return value.expression.quasis[0].value.cooked;\n      }\n      const expr = value.expression;\n      return expr && (\n        expr.type === 'ConditionalExpression'\n          ? [expr.consequent.value, expr.alternate.value]\n          : expr.value\n      );\n    }\n  }\n  return null;\n}\n\nfunction hasSecureRel(node, allowReferrer, warnOnSpreadAttributes, spreadAttributeIndex) {\n  const relIndex = findLastIndex(node.attributes, (attr) => (attr.type === 'JSXAttribute' && attr.name.name === 'rel'));\n  if (relIndex === -1 || (warnOnSpreadAttributes && relIndex < spreadAttributeIndex)) {\n    return false;\n  }\n\n  const relAttribute = node.attributes[relIndex];\n  const value = getStringFromValue(relAttribute.value);\n  return [].concat(value).every((item) => {\n    const tags = typeof item === 'string' ? item.toLowerCase().split(' ') : false;\n    const noreferrer = tags && tags.indexOf('noreferrer') >= 0;\n    if (noreferrer) {\n      return true;\n    }\n    const noopener = tags && tags.indexOf('noopener') >= 0;\n    return allowReferrer && noopener;\n  });\n}\n\nconst messages = {\n  noTargetBlankWithoutNoreferrer: 'Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations',\n  noTargetBlankWithoutNoopener: 'Using target=\"_blank\" without rel=\"noreferrer\" or rel=\"noopener\" (the former implies the latter and is preferred due to wider support) is a security risk: see https://mathiasbynens.github.io/rel-noopener/#recommendations',\n};\n\nmodule.exports = {\n  meta: {\n    fixable: 'code',\n    docs: {\n      description: 'Disallow `target=\"_blank\"` attribute without `rel=\"noreferrer\"`',\n      category: 'Best Practices',\n      recommended: true,\n      url: docsUrl('jsx-no-target-blank'),\n    },\n\n    messages,\n\n    schema: [{\n      type: 'object',\n      properties: {\n        allowReferrer: {\n          type: 'boolean',\n        },\n        enforceDynamicLinks: {\n          enum: ['always', 'never'],\n        },\n        warnOnSpreadAttributes: {\n          type: 'boolean',\n        },\n        links: {\n          type: 'boolean',\n          default: true,\n        },\n        forms: {\n          type: 'boolean',\n          default: false,\n        },\n      },\n      additionalProperties: false,\n    }],\n  },\n\n  create(context) {\n    const configuration = Object.assign(\n      {\n        allowReferrer: false,\n        warnOnSpreadAttributes: false,\n        links: true,\n        forms: false,\n      },\n      context.options[0]\n    );\n    const allowReferrer = configuration.allowReferrer;\n    const warnOnSpreadAttributes = configuration.warnOnSpreadAttributes;\n    const enforceDynamicLinks = configuration.enforceDynamicLinks || 'always';\n    const linkComponents = linkComponentsUtil.getLinkComponents(context);\n    const formComponents = linkComponentsUtil.getFormComponents(context);\n\n    return {\n      JSXOpeningElement(node) {\n        const targetIndex = findLastIndex(node.attributes, (attr) => attr.name && attr.name.name === 'target');\n        const spreadAttributeIndex = findLastIndex(node.attributes, (attr) => (attr.type === 'JSXSpreadAttribute'));\n\n        if (linkComponents.has(node.name.name)) {\n          if (!attributeValuePossiblyBlank(node.attributes[targetIndex])) {\n            const hasSpread = spreadAttributeIndex >= 0;\n\n            if (warnOnSpreadAttributes && hasSpread) {\n              // continue to check below\n            } else if ((hasSpread && targetIndex < spreadAttributeIndex) || !hasSpread || !warnOnSpreadAttributes) {\n              return;\n            }\n          }\n\n          const linkAttribute = linkComponents.get(node.name.name);\n          const hasDangerousLink = hasExternalLink(node, linkAttribute, warnOnSpreadAttributes, spreadAttributeIndex)\n            || (enforceDynamicLinks === 'always' && hasDynamicLink(node, linkAttribute));\n          if (hasDangerousLink && !hasSecureRel(node, allowReferrer, warnOnSpreadAttributes, spreadAttributeIndex)) {\n            const messageId = allowReferrer ? 'noTargetBlankWithoutNoopener' : 'noTargetBlankWithoutNoreferrer';\n            const relValue = allowReferrer ? 'noopener' : 'noreferrer';\n            report(context, messages[messageId], messageId, {\n              node,\n              fix(fixer) {\n                // eslint 5 uses `node.attributes`; eslint 6+ uses `node.parent.attributes`\n                const nodeWithAttrs = node.parent.attributes ? node.parent : node;\n                // eslint 5 does not provide a `name` property on JSXSpreadElements\n                const relAttribute = nodeWithAttrs.attributes.find((attr) => attr.name && attr.name.name === 'rel');\n\n                if (targetIndex < spreadAttributeIndex || (spreadAttributeIndex >= 0 && !relAttribute)) {\n                  return null;\n                }\n\n                if (!relAttribute) {\n                  return fixer.insertTextAfter(nodeWithAttrs.attributes.slice(-1)[0], ` rel=\"${relValue}\"`);\n                }\n\n                if (!relAttribute.value) {\n                  return fixer.insertTextAfter(relAttribute, `=\"${relValue}\"`);\n                }\n\n                if (relAttribute.value.type === 'Literal') {\n                  const parts = relAttribute.value.value\n                    .split('noreferrer')\n                    .filter(Boolean);\n                  return fixer.replaceText(relAttribute.value, `\"${parts.concat('noreferrer').join(' ')}\"`);\n                }\n\n                if (relAttribute.value.type === 'JSXExpressionContainer') {\n                  if (relAttribute.value.expression.type === 'Literal') {\n                    if (typeof relAttribute.value.expression.value === 'string') {\n                      const parts = relAttribute.value.expression.value\n                        .split('noreferrer')\n                        .filter(Boolean);\n                      return fixer.replaceText(relAttribute.value.expression, `\"${parts.concat('noreferrer').join(' ')}\"`);\n                    }\n\n                    // for undefined, boolean, number, symbol, bigint, and null\n                    return fixer.replaceText(relAttribute.value, '\"noreferrer\"');\n                  }\n                }\n\n                return null;\n              },\n            });\n          }\n        }\n        if (formComponents.has(node.name.name)) {\n          if (!attributeValuePossiblyBlank(node.attributes[targetIndex])) {\n            const hasSpread = spreadAttributeIndex >= 0;\n\n            if (warnOnSpreadAttributes && hasSpread) {\n              // continue to check below\n            } else if (\n              (hasSpread && targetIndex < spreadAttributeIndex)\n              || !hasSpread\n              || !warnOnSpreadAttributes\n            ) {\n              return;\n            }\n          }\n\n          if (!configuration.forms || hasSecureRel(node)) {\n            return;\n          }\n\n          const formAttribute = formComponents.get(node.name.name);\n\n          if (\n            hasExternalLink(node, formAttribute)\n            || (enforceDynamicLinks === 'always' && hasDynamicLink(node, formAttribute))\n          ) {\n            const messageId = allowReferrer ? 'noTargetBlankWithoutNoopener' : 'noTargetBlankWithoutNoreferrer';\n            report(context, messages[messageId], messageId, {\n              node,\n            });\n          }\n        }\n      },\n    };\n  },\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}