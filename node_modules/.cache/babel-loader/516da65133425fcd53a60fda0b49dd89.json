{"ast":null,"code":"'use strict';\n\nvar $ = require('../internals/export');\n\nvar NumericRangeIterator = require('../internals/numeric-range-iterator'); // `Number.range` method\n// https://github.com/tc39/proposal-Number.range\n\n\n$({\n  target: 'Number',\n  stat: true,\n  forced: true\n}, {\n  range: function range(start, end, option) {\n    return new NumericRangeIterator(start, end, option, 'number', 0, 1);\n  }\n});","map":{"version":3,"names":["$","require","NumericRangeIterator","target","stat","forced","range","start","end","option"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/core-js-pure/modules/esnext.number.range.js"],"sourcesContent":["'use strict';\nvar $ = require('../internals/export');\nvar NumericRangeIterator = require('../internals/numeric-range-iterator');\n\n// `Number.range` method\n// https://github.com/tc39/proposal-Number.range\n$({ target: 'Number', stat: true, forced: true }, {\n  range: function range(start, end, option) {\n    return new NumericRangeIterator(start, end, option, 'number', 0, 1);\n  }\n});\n"],"mappings":"AAAA;;AACA,IAAIA,CAAC,GAAGC,OAAO,CAAC,qBAAD,CAAf;;AACA,IAAIC,oBAAoB,GAAGD,OAAO,CAAC,qCAAD,CAAlC,C,CAEA;AACA;;;AACAD,CAAC,CAAC;EAAEG,MAAM,EAAE,QAAV;EAAoBC,IAAI,EAAE,IAA1B;EAAgCC,MAAM,EAAE;AAAxC,CAAD,EAAiD;EAChDC,KAAK,EAAE,SAASA,KAAT,CAAeC,KAAf,EAAsBC,GAAtB,EAA2BC,MAA3B,EAAmC;IACxC,OAAO,IAAIP,oBAAJ,CAAyBK,KAAzB,EAAgCC,GAAhC,EAAqCC,MAArC,EAA6C,QAA7C,EAAuD,CAAvD,EAA0D,CAA1D,CAAP;EACD;AAH+C,CAAjD,CAAD"},"metadata":{},"sourceType":"script"}