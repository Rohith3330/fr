{"ast":null,"code":"/**\n * @fileoverview unix-style formatter.\n * @author oshi-shinobu\n */\n\"use strict\"; //------------------------------------------------------------------------------\n// Helper Functions\n//------------------------------------------------------------------------------\n\n/**\n * Returns a canonical error level string based upon the error message passed in.\n * @param {Object} message Individual error message provided by eslint\n * @returns {string} Error level string\n */\n\nfunction getMessageType(message) {\n  if (message.fatal || message.severity === 2) {\n    return \"Error\";\n  }\n\n  return \"Warning\";\n} //------------------------------------------------------------------------------\n// Public Interface\n//------------------------------------------------------------------------------\n\n\nmodule.exports = function (results) {\n  let output = \"\",\n      total = 0;\n  results.forEach(result => {\n    const messages = result.messages;\n    total += messages.length;\n    messages.forEach(message => {\n      output += `${result.filePath}:`;\n      output += `${message.line || 0}:`;\n      output += `${message.column || 0}:`;\n      output += ` ${message.message} `;\n      output += `[${getMessageType(message)}${message.ruleId ? `/${message.ruleId}` : \"\"}]`;\n      output += \"\\n\";\n    });\n  });\n\n  if (total > 0) {\n    output += `\\n${total} problem${total !== 1 ? \"s\" : \"\"}`;\n  }\n\n  return output;\n};","map":{"version":3,"names":["getMessageType","message","fatal","severity","module","exports","results","output","total","forEach","result","messages","length","filePath","line","column","ruleId"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/eslint/lib/cli-engine/formatters/unix.js"],"sourcesContent":["/**\n * @fileoverview unix-style formatter.\n * @author oshi-shinobu\n */\n\"use strict\";\n\n//------------------------------------------------------------------------------\n// Helper Functions\n//------------------------------------------------------------------------------\n\n/**\n * Returns a canonical error level string based upon the error message passed in.\n * @param {Object} message Individual error message provided by eslint\n * @returns {string} Error level string\n */\nfunction getMessageType(message) {\n    if (message.fatal || message.severity === 2) {\n        return \"Error\";\n    }\n    return \"Warning\";\n\n}\n\n\n//------------------------------------------------------------------------------\n// Public Interface\n//------------------------------------------------------------------------------\n\nmodule.exports = function(results) {\n\n    let output = \"\",\n        total = 0;\n\n    results.forEach(result => {\n\n        const messages = result.messages;\n\n        total += messages.length;\n\n        messages.forEach(message => {\n\n            output += `${result.filePath}:`;\n            output += `${message.line || 0}:`;\n            output += `${message.column || 0}:`;\n            output += ` ${message.message} `;\n            output += `[${getMessageType(message)}${message.ruleId ? `/${message.ruleId}` : \"\"}]`;\n            output += \"\\n\";\n\n        });\n\n    });\n\n    if (total > 0) {\n        output += `\\n${total} problem${total !== 1 ? \"s\" : \"\"}`;\n    }\n\n    return output;\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,a,CAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AACA,SAASA,cAAT,CAAwBC,OAAxB,EAAiC;EAC7B,IAAIA,OAAO,CAACC,KAAR,IAAiBD,OAAO,CAACE,QAAR,KAAqB,CAA1C,EAA6C;IACzC,OAAO,OAAP;EACH;;EACD,OAAO,SAAP;AAEH,C,CAGD;AACA;AACA;;;AAEAC,MAAM,CAACC,OAAP,GAAiB,UAASC,OAAT,EAAkB;EAE/B,IAAIC,MAAM,GAAG,EAAb;EAAA,IACIC,KAAK,GAAG,CADZ;EAGAF,OAAO,CAACG,OAAR,CAAgBC,MAAM,IAAI;IAEtB,MAAMC,QAAQ,GAAGD,MAAM,CAACC,QAAxB;IAEAH,KAAK,IAAIG,QAAQ,CAACC,MAAlB;IAEAD,QAAQ,CAACF,OAAT,CAAiBR,OAAO,IAAI;MAExBM,MAAM,IAAK,GAAEG,MAAM,CAACG,QAAS,GAA7B;MACAN,MAAM,IAAK,GAAEN,OAAO,CAACa,IAAR,IAAgB,CAAE,GAA/B;MACAP,MAAM,IAAK,GAAEN,OAAO,CAACc,MAAR,IAAkB,CAAE,GAAjC;MACAR,MAAM,IAAK,IAAGN,OAAO,CAACA,OAAQ,GAA9B;MACAM,MAAM,IAAK,IAAGP,cAAc,CAACC,OAAD,CAAU,GAAEA,OAAO,CAACe,MAAR,GAAkB,IAAGf,OAAO,CAACe,MAAO,EAApC,GAAwC,EAAG,GAAnF;MACAT,MAAM,IAAI,IAAV;IAEH,CATD;EAWH,CAjBD;;EAmBA,IAAIC,KAAK,GAAG,CAAZ,EAAe;IACXD,MAAM,IAAK,KAAIC,KAAM,WAAUA,KAAK,KAAK,CAAV,GAAc,GAAd,GAAoB,EAAG,EAAtD;EACH;;EAED,OAAOD,MAAP;AACH,CA7BD"},"metadata":{},"sourceType":"script"}