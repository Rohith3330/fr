{"ast":null,"code":"var test = require('tap').test;\n\nvar detective = require('../');\n\nvar fs = require('fs'); // in order to use detective to find any function\n// it needs to properly handle functions called without args\n\n\nvar src = ['fn();', 'otherfn();', 'fn();'].join('\\n');\ntest('noargs', function (t) {\n  t.plan(1);\n  t.deepEqual(detective(src, {\n    word: 'fn'\n  }).length, 0, 'finds no arg id');\n});\ntest('find noargs with nodes', function (t) {\n  t.plan(4);\n  var modules = detective.find(src, {\n    word: 'fn',\n    nodes: true\n  });\n  t.equal(modules.strings.length, 0, 'finds no arg id');\n  t.equal(modules.expressions.length, 0, 'finds no expressions');\n  t.equal(modules.nodes.length, 2, 'finds a node for each matching function call');\n  t.equal(modules.nodes.filter(function (x) {\n    return x.callee.name === 'fn';\n  }).length, 2, 'all matches are correct');\n});","map":{"version":3,"names":["test","require","detective","fs","src","join","t","plan","deepEqual","word","length","modules","find","nodes","equal","strings","expressions","filter","x","callee","name"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/detective/test/noargs.js"],"sourcesContent":["var test = require('tap').test;\nvar detective = require('../');\nvar fs = require('fs');\n\n// in order to use detective to find any function\n// it needs to properly handle functions called without args\nvar src = [ 'fn();', 'otherfn();', 'fn();' ].join('\\n')\n\ntest('noargs', function (t) {\n    t.plan(1);\n    t.deepEqual(detective(src, { word: 'fn' }).length, 0, 'finds no arg id');\n});\n\ntest('find noargs with nodes', function (t) {\n    t.plan(4);\n    var modules = detective.find(src, { word: 'fn', nodes: true });\n    t.equal(modules.strings.length, 0, 'finds no arg id');\n    t.equal(modules.expressions.length, 0, 'finds no expressions');\n    t.equal(modules.nodes.length, 2, 'finds a node for each matching function call');\n    t.equal(\n      modules.nodes.filter(function (x) { \n        return x.callee.name === 'fn' \n      }).length, 2, \n      'all matches are correct'\n    );\n});\n"],"mappings":"AAAA,IAAIA,IAAI,GAAGC,OAAO,CAAC,KAAD,CAAP,CAAeD,IAA1B;;AACA,IAAIE,SAAS,GAAGD,OAAO,CAAC,KAAD,CAAvB;;AACA,IAAIE,EAAE,GAAGF,OAAO,CAAC,IAAD,CAAhB,C,CAEA;AACA;;;AACA,IAAIG,GAAG,GAAG,CAAE,OAAF,EAAW,YAAX,EAAyB,OAAzB,EAAmCC,IAAnC,CAAwC,IAAxC,CAAV;AAEAL,IAAI,CAAC,QAAD,EAAW,UAAUM,CAAV,EAAa;EACxBA,CAAC,CAACC,IAAF,CAAO,CAAP;EACAD,CAAC,CAACE,SAAF,CAAYN,SAAS,CAACE,GAAD,EAAM;IAAEK,IAAI,EAAE;EAAR,CAAN,CAAT,CAA+BC,MAA3C,EAAmD,CAAnD,EAAsD,iBAAtD;AACH,CAHG,CAAJ;AAKAV,IAAI,CAAC,wBAAD,EAA2B,UAAUM,CAAV,EAAa;EACxCA,CAAC,CAACC,IAAF,CAAO,CAAP;EACA,IAAII,OAAO,GAAGT,SAAS,CAACU,IAAV,CAAeR,GAAf,EAAoB;IAAEK,IAAI,EAAE,IAAR;IAAcI,KAAK,EAAE;EAArB,CAApB,CAAd;EACAP,CAAC,CAACQ,KAAF,CAAQH,OAAO,CAACI,OAAR,CAAgBL,MAAxB,EAAgC,CAAhC,EAAmC,iBAAnC;EACAJ,CAAC,CAACQ,KAAF,CAAQH,OAAO,CAACK,WAAR,CAAoBN,MAA5B,EAAoC,CAApC,EAAuC,sBAAvC;EACAJ,CAAC,CAACQ,KAAF,CAAQH,OAAO,CAACE,KAAR,CAAcH,MAAtB,EAA8B,CAA9B,EAAiC,8CAAjC;EACAJ,CAAC,CAACQ,KAAF,CACEH,OAAO,CAACE,KAAR,CAAcI,MAAd,CAAqB,UAAUC,CAAV,EAAa;IAChC,OAAOA,CAAC,CAACC,MAAF,CAASC,IAAT,KAAkB,IAAzB;EACD,CAFD,EAEGV,MAHL,EAGa,CAHb,EAIE,yBAJF;AAMH,CAZG,CAAJ"},"metadata":{},"sourceType":"script"}