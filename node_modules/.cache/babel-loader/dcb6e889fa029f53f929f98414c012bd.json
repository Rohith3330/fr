{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst tapable_1 = require(\"tapable\");\n\nconst compilerHookMap = new WeakMap();\n\nfunction createForkTsCheckerWebpackPluginHooks() {\n  return {\n    start: new tapable_1.AsyncSeriesWaterfallHook(['change', 'compilation']),\n    waiting: new tapable_1.SyncHook(['compilation']),\n    canceled: new tapable_1.SyncHook(['compilation']),\n    error: new tapable_1.SyncHook(['error', 'compilation']),\n    issues: new tapable_1.SyncWaterfallHook(['issues', 'compilation'])\n  };\n}\n\nfunction forwardForkTsCheckerWebpackPluginHooks(source, target) {\n  source.start.tapPromise('ForkTsCheckerWebpackPlugin', target.start.promise);\n  source.waiting.tap('ForkTsCheckerWebpackPlugin', target.waiting.call);\n  source.canceled.tap('ForkTsCheckerWebpackPlugin', target.canceled.call);\n  source.error.tap('ForkTsCheckerWebpackPlugin', target.error.call);\n  source.issues.tap('ForkTsCheckerWebpackPlugin', target.issues.call);\n}\n\nfunction getForkTsCheckerWebpackPluginHooks(compiler) {\n  let hooks = compilerHookMap.get(compiler);\n\n  if (hooks === undefined) {\n    hooks = createForkTsCheckerWebpackPluginHooks();\n    compilerHookMap.set(compiler, hooks); // proxy hooks for multi-compiler\n\n    if ('compilers' in compiler) {\n      compiler.compilers.forEach(childCompiler => {\n        const childHooks = getForkTsCheckerWebpackPluginHooks(childCompiler);\n\n        if (hooks) {\n          forwardForkTsCheckerWebpackPluginHooks(childHooks, hooks);\n        }\n      });\n    }\n  }\n\n  return hooks;\n}\n\nexports.getForkTsCheckerWebpackPluginHooks = getForkTsCheckerWebpackPluginHooks;","map":{"version":3,"names":["Object","defineProperty","exports","value","tapable_1","require","compilerHookMap","WeakMap","createForkTsCheckerWebpackPluginHooks","start","AsyncSeriesWaterfallHook","waiting","SyncHook","canceled","error","issues","SyncWaterfallHook","forwardForkTsCheckerWebpackPluginHooks","source","target","tapPromise","promise","tap","call","getForkTsCheckerWebpackPluginHooks","compiler","hooks","get","undefined","set","compilers","forEach","childCompiler","childHooks"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/fork-ts-checker-webpack-plugin/lib/hooks/pluginHooks.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tapable_1 = require(\"tapable\");\nconst compilerHookMap = new WeakMap();\nfunction createForkTsCheckerWebpackPluginHooks() {\n    return {\n        start: new tapable_1.AsyncSeriesWaterfallHook([\n            'change',\n            'compilation',\n        ]),\n        waiting: new tapable_1.SyncHook(['compilation']),\n        canceled: new tapable_1.SyncHook(['compilation']),\n        error: new tapable_1.SyncHook(['error', 'compilation']),\n        issues: new tapable_1.SyncWaterfallHook([\n            'issues',\n            'compilation',\n        ]),\n    };\n}\nfunction forwardForkTsCheckerWebpackPluginHooks(source, target) {\n    source.start.tapPromise('ForkTsCheckerWebpackPlugin', target.start.promise);\n    source.waiting.tap('ForkTsCheckerWebpackPlugin', target.waiting.call);\n    source.canceled.tap('ForkTsCheckerWebpackPlugin', target.canceled.call);\n    source.error.tap('ForkTsCheckerWebpackPlugin', target.error.call);\n    source.issues.tap('ForkTsCheckerWebpackPlugin', target.issues.call);\n}\nfunction getForkTsCheckerWebpackPluginHooks(compiler) {\n    let hooks = compilerHookMap.get(compiler);\n    if (hooks === undefined) {\n        hooks = createForkTsCheckerWebpackPluginHooks();\n        compilerHookMap.set(compiler, hooks);\n        // proxy hooks for multi-compiler\n        if ('compilers' in compiler) {\n            compiler.compilers.forEach((childCompiler) => {\n                const childHooks = getForkTsCheckerWebpackPluginHooks(childCompiler);\n                if (hooks) {\n                    forwardForkTsCheckerWebpackPluginHooks(childHooks, hooks);\n                }\n            });\n        }\n    }\n    return hooks;\n}\nexports.getForkTsCheckerWebpackPluginHooks = getForkTsCheckerWebpackPluginHooks;\n"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;;AACA,MAAMC,SAAS,GAAGC,OAAO,CAAC,SAAD,CAAzB;;AACA,MAAMC,eAAe,GAAG,IAAIC,OAAJ,EAAxB;;AACA,SAASC,qCAAT,GAAiD;EAC7C,OAAO;IACHC,KAAK,EAAE,IAAIL,SAAS,CAACM,wBAAd,CAAuC,CAC1C,QAD0C,EAE1C,aAF0C,CAAvC,CADJ;IAKHC,OAAO,EAAE,IAAIP,SAAS,CAACQ,QAAd,CAAuB,CAAC,aAAD,CAAvB,CALN;IAMHC,QAAQ,EAAE,IAAIT,SAAS,CAACQ,QAAd,CAAuB,CAAC,aAAD,CAAvB,CANP;IAOHE,KAAK,EAAE,IAAIV,SAAS,CAACQ,QAAd,CAAuB,CAAC,OAAD,EAAU,aAAV,CAAvB,CAPJ;IAQHG,MAAM,EAAE,IAAIX,SAAS,CAACY,iBAAd,CAAgC,CACpC,QADoC,EAEpC,aAFoC,CAAhC;EARL,CAAP;AAaH;;AACD,SAASC,sCAAT,CAAgDC,MAAhD,EAAwDC,MAAxD,EAAgE;EAC5DD,MAAM,CAACT,KAAP,CAAaW,UAAb,CAAwB,4BAAxB,EAAsDD,MAAM,CAACV,KAAP,CAAaY,OAAnE;EACAH,MAAM,CAACP,OAAP,CAAeW,GAAf,CAAmB,4BAAnB,EAAiDH,MAAM,CAACR,OAAP,CAAeY,IAAhE;EACAL,MAAM,CAACL,QAAP,CAAgBS,GAAhB,CAAoB,4BAApB,EAAkDH,MAAM,CAACN,QAAP,CAAgBU,IAAlE;EACAL,MAAM,CAACJ,KAAP,CAAaQ,GAAb,CAAiB,4BAAjB,EAA+CH,MAAM,CAACL,KAAP,CAAaS,IAA5D;EACAL,MAAM,CAACH,MAAP,CAAcO,GAAd,CAAkB,4BAAlB,EAAgDH,MAAM,CAACJ,MAAP,CAAcQ,IAA9D;AACH;;AACD,SAASC,kCAAT,CAA4CC,QAA5C,EAAsD;EAClD,IAAIC,KAAK,GAAGpB,eAAe,CAACqB,GAAhB,CAAoBF,QAApB,CAAZ;;EACA,IAAIC,KAAK,KAAKE,SAAd,EAAyB;IACrBF,KAAK,GAAGlB,qCAAqC,EAA7C;IACAF,eAAe,CAACuB,GAAhB,CAAoBJ,QAApB,EAA8BC,KAA9B,EAFqB,CAGrB;;IACA,IAAI,eAAeD,QAAnB,EAA6B;MACzBA,QAAQ,CAACK,SAAT,CAAmBC,OAAnB,CAA4BC,aAAD,IAAmB;QAC1C,MAAMC,UAAU,GAAGT,kCAAkC,CAACQ,aAAD,CAArD;;QACA,IAAIN,KAAJ,EAAW;UACPT,sCAAsC,CAACgB,UAAD,EAAaP,KAAb,CAAtC;QACH;MACJ,CALD;IAMH;EACJ;;EACD,OAAOA,KAAP;AACH;;AACDxB,OAAO,CAACsB,kCAAR,GAA6CA,kCAA7C"},"metadata":{},"sourceType":"script"}