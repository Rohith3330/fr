{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst RpcMessage_1 = require(\"./RpcMessage\");\n\nconst RpcRemoteError_1 = require(\"./error/RpcRemoteError\");\n/* eslint-enable @typescript-eslint/no-explicit-any */\n\n\nfunction createRpcClient(port) {\n  let callIndex = 0;\n  const callbacks = new Map();\n  let isListenerRegistered = false;\n\n  const returnOrThrowListener = message => __awaiter(this, void 0, void 0, function* () {\n    if (RpcMessage_1.isRpcReturnMessage(message)) {\n      const key = RpcMessage_1.getRpcMessageKey(message);\n      const callback = callbacks.get(key);\n\n      if (callback) {\n        callback.return(message.payload);\n        callbacks.delete(key);\n      }\n    }\n\n    if (RpcMessage_1.isRpcThrowMessage(message)) {\n      const key = RpcMessage_1.getRpcMessageKey(message);\n      const callback = callbacks.get(key);\n\n      if (callback) {\n        callback.throw(new RpcRemoteError_1.RpcRemoteError(message.payload.message, message.payload.stack));\n        callbacks.delete(key);\n      }\n    }\n  });\n\n  const errorListener = error => __awaiter(this, void 0, void 0, function* () {\n    callbacks.forEach((callback, key) => {\n      callback.throw(error);\n      callbacks.delete(key);\n    });\n  });\n\n  return {\n    isConnected: () => port.isOpen() && isListenerRegistered,\n    connect: () => __awaiter(this, void 0, void 0, function* () {\n      if (!port.isOpen()) {\n        yield port.open();\n      }\n\n      if (!isListenerRegistered) {\n        port.addMessageListener(returnOrThrowListener);\n        port.addErrorListener(errorListener);\n        isListenerRegistered = true;\n      }\n    }),\n    disconnect: () => __awaiter(this, void 0, void 0, function* () {\n      if (isListenerRegistered) {\n        port.removeMessageListener(returnOrThrowListener);\n        port.removeErrorListener(errorListener);\n        isListenerRegistered = false;\n      }\n\n      if (port.isOpen()) {\n        yield port.close();\n      }\n    }),\n    dispatchCall: (procedure, payload) => __awaiter(this, void 0, void 0, function* () {\n      return new Promise((resolve, reject) => {\n        const call = RpcMessage_1.createRpcCall(procedure, callIndex++, payload);\n        const key = RpcMessage_1.getRpcMessageKey(call);\n        callbacks.set(key, {\n          return: resolve,\n          throw: reject\n        });\n        port.dispatchMessage(call).catch(error => {\n          callbacks.delete(key);\n          reject(error);\n        });\n      });\n    })\n  };\n}\n\nexports.createRpcClient = createRpcClient;","map":{"version":3,"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","Object","defineProperty","exports","RpcMessage_1","require","RpcRemoteError_1","createRpcClient","port","callIndex","callbacks","Map","isListenerRegistered","returnOrThrowListener","message","isRpcReturnMessage","key","getRpcMessageKey","callback","get","return","payload","delete","isRpcThrowMessage","throw","RpcRemoteError","stack","errorListener","error","forEach","isConnected","isOpen","connect","open","addMessageListener","addErrorListener","disconnect","removeMessageListener","removeErrorListener","close","dispatchCall","procedure","call","createRpcCall","set","dispatchMessage","catch"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/fork-ts-checker-webpack-plugin/lib/rpc/RpcClient.js"],"sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst RpcMessage_1 = require(\"./RpcMessage\");\nconst RpcRemoteError_1 = require(\"./error/RpcRemoteError\");\n/* eslint-enable @typescript-eslint/no-explicit-any */\nfunction createRpcClient(port) {\n    let callIndex = 0;\n    const callbacks = new Map();\n    let isListenerRegistered = false;\n    const returnOrThrowListener = (message) => __awaiter(this, void 0, void 0, function* () {\n        if (RpcMessage_1.isRpcReturnMessage(message)) {\n            const key = RpcMessage_1.getRpcMessageKey(message);\n            const callback = callbacks.get(key);\n            if (callback) {\n                callback.return(message.payload);\n                callbacks.delete(key);\n            }\n        }\n        if (RpcMessage_1.isRpcThrowMessage(message)) {\n            const key = RpcMessage_1.getRpcMessageKey(message);\n            const callback = callbacks.get(key);\n            if (callback) {\n                callback.throw(new RpcRemoteError_1.RpcRemoteError(message.payload.message, message.payload.stack));\n                callbacks.delete(key);\n            }\n        }\n    });\n    const errorListener = (error) => __awaiter(this, void 0, void 0, function* () {\n        callbacks.forEach((callback, key) => {\n            callback.throw(error);\n            callbacks.delete(key);\n        });\n    });\n    return {\n        isConnected: () => port.isOpen() && isListenerRegistered,\n        connect: () => __awaiter(this, void 0, void 0, function* () {\n            if (!port.isOpen()) {\n                yield port.open();\n            }\n            if (!isListenerRegistered) {\n                port.addMessageListener(returnOrThrowListener);\n                port.addErrorListener(errorListener);\n                isListenerRegistered = true;\n            }\n        }),\n        disconnect: () => __awaiter(this, void 0, void 0, function* () {\n            if (isListenerRegistered) {\n                port.removeMessageListener(returnOrThrowListener);\n                port.removeErrorListener(errorListener);\n                isListenerRegistered = false;\n            }\n            if (port.isOpen()) {\n                yield port.close();\n            }\n        }),\n        dispatchCall: (procedure, payload) => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                const call = RpcMessage_1.createRpcCall(procedure, callIndex++, payload);\n                const key = RpcMessage_1.getRpcMessageKey(call);\n                callbacks.set(key, { return: resolve, throw: reject });\n                port.dispatchMessage(call).catch((error) => {\n                    callbacks.delete(key);\n                    reject(error);\n                });\n            });\n        }),\n    };\n}\nexports.createRpcClient = createRpcClient;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}