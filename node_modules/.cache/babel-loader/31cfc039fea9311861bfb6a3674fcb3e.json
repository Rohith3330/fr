{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.addProposalSyntaxPlugins = addProposalSyntaxPlugins;\nexports.removeUnnecessaryItems = removeUnnecessaryItems;\nexports.removeUnsupportedItems = removeUnsupportedItems;\n\nvar _semver = require(\"semver\");\n\nvar _availablePlugins = require(\"./available-plugins\");\n\nconst has = Function.call.bind(Object.hasOwnProperty);\n\nfunction addProposalSyntaxPlugins(items, proposalSyntaxPlugins) {\n  proposalSyntaxPlugins.forEach(plugin => {\n    items.add(plugin);\n  });\n}\n\nfunction removeUnnecessaryItems(items, overlapping) {\n  items.forEach(item => {\n    var _overlapping$item;\n\n    (_overlapping$item = overlapping[item]) == null ? void 0 : _overlapping$item.forEach(name => items.delete(name));\n  });\n}\n\nfunction removeUnsupportedItems(items, babelVersion) {\n  items.forEach(item => {\n    if (has(_availablePlugins.minVersions, item) && _semver.lt(babelVersion, _availablePlugins.minVersions[item])) {\n      items.delete(item);\n    }\n  });\n}","map":{"version":3,"mappings":";;;;;;;;;AAAA;;AACA;;AAEA,MAAMA,GAAG,GAAGC,QAAQ,CAACC,IAATD,CAAcE,IAAdF,CAAmBG,MAAM,CAACC,cAA1BJ,CAAZ;;AAEO,SAASK,wBAAT,CACLC,KADK,EAELC,qBAFK,EAGL;EACAA,qBAAqB,CAACC,OAAtBD,CAA8BE,MAAM,IAAI;IACtCH,KAAK,CAACI,GAANJ,CAAUG,MAAVH;EADF;AAGD;;AACM,SAASK,sBAAT,CACLL,KADK,EAELM,WAFK,EAGL;EACAN,KAAK,CAACE,OAANF,CAAcO,IAAI,IAAI;IAAA;;IACpB,gCAAW,CAACA,IAAD,CAAX,uCAAmBL,OAAnB,CAA2BM,IAAI,IAAIR,KAAK,CAACS,MAANT,CAAaQ,IAAbR,CAAnC;EADF;AAGD;;AACM,SAASU,sBAAT,CACLV,KADK,EAELW,YAFK,EAGL;EACAX,KAAK,CAACE,OAANF,CAAcO,IAAI,IAAI;IACpB,IACEd,GAAG,CAACmB,6BAAD,EAAcL,IAAd,CAAHd,IACAoB,OAAM,CAACC,EAAPD,CACEF,YADFE,EAGED,8BAAYL,IAAZK,CAHFC,CAFF,EAOE;MACAb,KAAK,CAACS,MAANT,CAAaO,IAAbP;IACD;EAVH;AAYD","names":["has","Function","call","bind","Object","hasOwnProperty","addProposalSyntaxPlugins","items","proposalSyntaxPlugins","forEach","plugin","add","removeUnnecessaryItems","overlapping","item","name","delete","removeUnsupportedItems","babelVersion","minVersions","semver","lt"],"sources":["C:\\Users\\Rohith\\mern\\frontend\\node_modules\\@babel\\preset-env\\src\\filter-items.ts"],"sourcesContent":["import semver from \"semver\";\nimport { minVersions } from \"./available-plugins\";\n\nconst has = Function.call.bind(Object.hasOwnProperty);\n\nexport function addProposalSyntaxPlugins(\n  items: Set<string>,\n  proposalSyntaxPlugins: readonly string[],\n) {\n  proposalSyntaxPlugins.forEach(plugin => {\n    items.add(plugin);\n  });\n}\nexport function removeUnnecessaryItems(\n  items: Set<string>,\n  overlapping: { [name: string]: string[] },\n) {\n  items.forEach(item => {\n    overlapping[item]?.forEach(name => items.delete(name));\n  });\n}\nexport function removeUnsupportedItems(\n  items: Set<string>,\n  babelVersion: string,\n) {\n  items.forEach(item => {\n    if (\n      has(minVersions, item) &&\n      semver.lt(\n        babelVersion,\n        // @ts-expect-error we have checked minVersions[item] in has call\n        minVersions[item],\n      )\n    ) {\n      items.delete(item);\n    }\n  });\n}\n"]},"metadata":{},"sourceType":"script"}