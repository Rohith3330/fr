{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = transformWithoutHelper;\n\nvar _core = require(\"@babel/core\");\n\nfunction transformWithoutHelper(loose, path, state) {\n  const pushComputedProps = loose ? pushComputedPropsLoose : pushComputedPropsSpec;\n  const {\n    node\n  } = path;\n  const build = pushComputedProps(path, state);\n  const declar = build.declar;\n  const loop = build.loop;\n  const block = loop.body;\n  path.ensureBlock();\n\n  if (declar) {\n    block.body.push(declar);\n  }\n\n  block.body.push(...node.body.body);\n\n  _core.types.inherits(loop, node);\n\n  _core.types.inherits(loop.body, node.body);\n\n  if (build.replaceParent) {\n    path.parentPath.replaceWithMultiple(build.node);\n    path.remove();\n  } else {\n    path.replaceWithMultiple(build.node);\n  }\n}\n\nconst buildForOfLoose = _core.template.statement(`\n  for (var LOOP_OBJECT = OBJECT,\n          IS_ARRAY = Array.isArray(LOOP_OBJECT),\n          INDEX = 0,\n          LOOP_OBJECT = IS_ARRAY ? LOOP_OBJECT : LOOP_OBJECT[Symbol.iterator]();;) {\n    INTERMEDIATE;\n    if (IS_ARRAY) {\n      if (INDEX >= LOOP_OBJECT.length) break;\n      ID = LOOP_OBJECT[INDEX++];\n    } else {\n      INDEX = LOOP_OBJECT.next();\n      if (INDEX.done) break;\n      ID = INDEX.value;\n    }\n  }\n`);\n\nconst buildForOf = _core.template.statements(`\n  var ITERATOR_COMPLETION = true;\n  var ITERATOR_HAD_ERROR_KEY = false;\n  var ITERATOR_ERROR_KEY = undefined;\n  try {\n    for (\n      var ITERATOR_KEY = OBJECT[Symbol.iterator](), STEP_KEY;\n      !(ITERATOR_COMPLETION = (STEP_KEY = ITERATOR_KEY.next()).done);\n      ITERATOR_COMPLETION = true\n    ) {}\n  } catch (err) {\n    ITERATOR_HAD_ERROR_KEY = true;\n    ITERATOR_ERROR_KEY = err;\n  } finally {\n    try {\n      if (!ITERATOR_COMPLETION && ITERATOR_KEY.return != null) {\n        ITERATOR_KEY.return();\n      }\n    } finally {\n      if (ITERATOR_HAD_ERROR_KEY) {\n        throw ITERATOR_ERROR_KEY;\n      }\n    }\n  }\n`);\n\nfunction pushComputedPropsLoose(path, state) {\n  const {\n    node,\n    scope,\n    parent\n  } = path;\n  const {\n    left\n  } = node;\n  let declar, id, intermediate;\n\n  if (_core.types.isIdentifier(left) || _core.types.isPattern(left) || _core.types.isMemberExpression(left)) {\n    id = left;\n    intermediate = null;\n  } else if (_core.types.isVariableDeclaration(left)) {\n    id = scope.generateUidIdentifier(\"ref\");\n    declar = _core.types.variableDeclaration(left.kind, [_core.types.variableDeclarator(left.declarations[0].id, _core.types.identifier(id.name))]);\n    intermediate = _core.types.variableDeclaration(\"var\", [_core.types.variableDeclarator(_core.types.identifier(id.name))]);\n  } else {\n    throw state.buildCodeFrameError(left, `Unknown node type ${left.type} in ForStatement`);\n  }\n\n  const iteratorKey = scope.generateUidIdentifier(\"iterator\");\n  const isArrayKey = scope.generateUidIdentifier(\"isArray\");\n  const loop = buildForOfLoose({\n    LOOP_OBJECT: iteratorKey,\n    IS_ARRAY: isArrayKey,\n    OBJECT: node.right,\n    INDEX: scope.generateUidIdentifier(\"i\"),\n    ID: id,\n    INTERMEDIATE: intermediate\n  });\n\n  const isLabeledParent = _core.types.isLabeledStatement(parent);\n\n  let labeled;\n\n  if (isLabeledParent) {\n    labeled = _core.types.labeledStatement(parent.label, loop);\n  }\n\n  return {\n    replaceParent: isLabeledParent,\n    declar: declar,\n    node: labeled || loop,\n    loop: loop\n  };\n}\n\nfunction pushComputedPropsSpec(path, state) {\n  const {\n    node,\n    scope,\n    parent\n  } = path;\n  const left = node.left;\n  let declar;\n  const stepKey = scope.generateUid(\"step\");\n\n  const stepValue = _core.types.memberExpression(_core.types.identifier(stepKey), _core.types.identifier(\"value\"));\n\n  if (_core.types.isIdentifier(left) || _core.types.isPattern(left) || _core.types.isMemberExpression(left)) {\n    declar = _core.types.expressionStatement(_core.types.assignmentExpression(\"=\", left, stepValue));\n  } else if (_core.types.isVariableDeclaration(left)) {\n    declar = _core.types.variableDeclaration(left.kind, [_core.types.variableDeclarator(left.declarations[0].id, stepValue)]);\n  } else {\n    throw state.buildCodeFrameError(left, `Unknown node type ${left.type} in ForStatement`);\n  }\n\n  const template = buildForOf({\n    ITERATOR_HAD_ERROR_KEY: scope.generateUidIdentifier(\"didIteratorError\"),\n    ITERATOR_COMPLETION: scope.generateUidIdentifier(\"iteratorNormalCompletion\"),\n    ITERATOR_ERROR_KEY: scope.generateUidIdentifier(\"iteratorError\"),\n    ITERATOR_KEY: scope.generateUidIdentifier(\"iterator\"),\n    STEP_KEY: _core.types.identifier(stepKey),\n    OBJECT: node.right\n  });\n\n  const isLabeledParent = _core.types.isLabeledStatement(parent);\n\n  const tryBody = template[3].block.body;\n  const loop = tryBody[0];\n\n  if (isLabeledParent) {\n    tryBody[0] = _core.types.labeledStatement(parent.label, loop);\n  }\n\n  return {\n    replaceParent: isLabeledParent,\n    declar: declar,\n    loop: loop,\n    node: template\n  };\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","default","transformWithoutHelper","_core","require","loose","path","state","pushComputedProps","pushComputedPropsLoose","pushComputedPropsSpec","node","build","declar","loop","block","body","ensureBlock","push","types","inherits","replaceParent","parentPath","replaceWithMultiple","remove","buildForOfLoose","template","statement","buildForOf","statements","scope","parent","left","id","intermediate","isIdentifier","isPattern","isMemberExpression","isVariableDeclaration","generateUidIdentifier","variableDeclaration","kind","variableDeclarator","declarations","identifier","name","buildCodeFrameError","type","iteratorKey","isArrayKey","LOOP_OBJECT","IS_ARRAY","OBJECT","right","INDEX","ID","INTERMEDIATE","isLabeledParent","isLabeledStatement","labeled","labeledStatement","label","stepKey","generateUid","stepValue","memberExpression","expressionStatement","assignmentExpression","ITERATOR_HAD_ERROR_KEY","ITERATOR_COMPLETION","ITERATOR_ERROR_KEY","ITERATOR_KEY","STEP_KEY","tryBody"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/@babel/plugin-transform-for-of/lib/no-helper-implementation.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = transformWithoutHelper;\n\nvar _core = require(\"@babel/core\");\n\nfunction transformWithoutHelper(loose, path, state) {\n  const pushComputedProps = loose ? pushComputedPropsLoose : pushComputedPropsSpec;\n  const {\n    node\n  } = path;\n  const build = pushComputedProps(path, state);\n  const declar = build.declar;\n  const loop = build.loop;\n  const block = loop.body;\n  path.ensureBlock();\n\n  if (declar) {\n    block.body.push(declar);\n  }\n\n  block.body.push(...node.body.body);\n\n  _core.types.inherits(loop, node);\n\n  _core.types.inherits(loop.body, node.body);\n\n  if (build.replaceParent) {\n    path.parentPath.replaceWithMultiple(build.node);\n    path.remove();\n  } else {\n    path.replaceWithMultiple(build.node);\n  }\n}\n\nconst buildForOfLoose = _core.template.statement(`\n  for (var LOOP_OBJECT = OBJECT,\n          IS_ARRAY = Array.isArray(LOOP_OBJECT),\n          INDEX = 0,\n          LOOP_OBJECT = IS_ARRAY ? LOOP_OBJECT : LOOP_OBJECT[Symbol.iterator]();;) {\n    INTERMEDIATE;\n    if (IS_ARRAY) {\n      if (INDEX >= LOOP_OBJECT.length) break;\n      ID = LOOP_OBJECT[INDEX++];\n    } else {\n      INDEX = LOOP_OBJECT.next();\n      if (INDEX.done) break;\n      ID = INDEX.value;\n    }\n  }\n`);\n\nconst buildForOf = _core.template.statements(`\n  var ITERATOR_COMPLETION = true;\n  var ITERATOR_HAD_ERROR_KEY = false;\n  var ITERATOR_ERROR_KEY = undefined;\n  try {\n    for (\n      var ITERATOR_KEY = OBJECT[Symbol.iterator](), STEP_KEY;\n      !(ITERATOR_COMPLETION = (STEP_KEY = ITERATOR_KEY.next()).done);\n      ITERATOR_COMPLETION = true\n    ) {}\n  } catch (err) {\n    ITERATOR_HAD_ERROR_KEY = true;\n    ITERATOR_ERROR_KEY = err;\n  } finally {\n    try {\n      if (!ITERATOR_COMPLETION && ITERATOR_KEY.return != null) {\n        ITERATOR_KEY.return();\n      }\n    } finally {\n      if (ITERATOR_HAD_ERROR_KEY) {\n        throw ITERATOR_ERROR_KEY;\n      }\n    }\n  }\n`);\n\nfunction pushComputedPropsLoose(path, state) {\n  const {\n    node,\n    scope,\n    parent\n  } = path;\n  const {\n    left\n  } = node;\n  let declar, id, intermediate;\n\n  if (_core.types.isIdentifier(left) || _core.types.isPattern(left) || _core.types.isMemberExpression(left)) {\n    id = left;\n    intermediate = null;\n  } else if (_core.types.isVariableDeclaration(left)) {\n    id = scope.generateUidIdentifier(\"ref\");\n    declar = _core.types.variableDeclaration(left.kind, [_core.types.variableDeclarator(left.declarations[0].id, _core.types.identifier(id.name))]);\n    intermediate = _core.types.variableDeclaration(\"var\", [_core.types.variableDeclarator(_core.types.identifier(id.name))]);\n  } else {\n    throw state.buildCodeFrameError(left, `Unknown node type ${left.type} in ForStatement`);\n  }\n\n  const iteratorKey = scope.generateUidIdentifier(\"iterator\");\n  const isArrayKey = scope.generateUidIdentifier(\"isArray\");\n  const loop = buildForOfLoose({\n    LOOP_OBJECT: iteratorKey,\n    IS_ARRAY: isArrayKey,\n    OBJECT: node.right,\n    INDEX: scope.generateUidIdentifier(\"i\"),\n    ID: id,\n    INTERMEDIATE: intermediate\n  });\n\n  const isLabeledParent = _core.types.isLabeledStatement(parent);\n\n  let labeled;\n\n  if (isLabeledParent) {\n    labeled = _core.types.labeledStatement(parent.label, loop);\n  }\n\n  return {\n    replaceParent: isLabeledParent,\n    declar: declar,\n    node: labeled || loop,\n    loop: loop\n  };\n}\n\nfunction pushComputedPropsSpec(path, state) {\n  const {\n    node,\n    scope,\n    parent\n  } = path;\n  const left = node.left;\n  let declar;\n  const stepKey = scope.generateUid(\"step\");\n\n  const stepValue = _core.types.memberExpression(_core.types.identifier(stepKey), _core.types.identifier(\"value\"));\n\n  if (_core.types.isIdentifier(left) || _core.types.isPattern(left) || _core.types.isMemberExpression(left)) {\n    declar = _core.types.expressionStatement(_core.types.assignmentExpression(\"=\", left, stepValue));\n  } else if (_core.types.isVariableDeclaration(left)) {\n    declar = _core.types.variableDeclaration(left.kind, [_core.types.variableDeclarator(left.declarations[0].id, stepValue)]);\n  } else {\n    throw state.buildCodeFrameError(left, `Unknown node type ${left.type} in ForStatement`);\n  }\n\n  const template = buildForOf({\n    ITERATOR_HAD_ERROR_KEY: scope.generateUidIdentifier(\"didIteratorError\"),\n    ITERATOR_COMPLETION: scope.generateUidIdentifier(\"iteratorNormalCompletion\"),\n    ITERATOR_ERROR_KEY: scope.generateUidIdentifier(\"iteratorError\"),\n    ITERATOR_KEY: scope.generateUidIdentifier(\"iterator\"),\n    STEP_KEY: _core.types.identifier(stepKey),\n    OBJECT: node.right\n  });\n\n  const isLabeledParent = _core.types.isLabeledStatement(parent);\n\n  const tryBody = template[3].block.body;\n  const loop = tryBody[0];\n\n  if (isLabeledParent) {\n    tryBody[0] = _core.types.labeledStatement(parent.label, loop);\n  }\n\n  return {\n    replaceParent: isLabeledParent,\n    declar: declar,\n    loop: loop,\n    node: template\n  };\n}"],"mappings":"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"},"metadata":{},"sourceType":"script"}