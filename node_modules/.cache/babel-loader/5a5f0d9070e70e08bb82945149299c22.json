{"ast":null,"code":"\"use strict\";\n/** @typedef {import(\"./index.js\").MinimizedResult} MinimizedResult */\n\n/** @typedef {import(\"source-map\").RawSourceMap} RawSourceMap */\n\n/** @typedef {import(\"./index.js\").InternalResult} InternalResult */\n\n/**\n * @template T\n * @param {import(\"./index.js\").InternalOptions<T>} options\n * @returns {Promise<InternalResult>}\n */\n\nconst minify = async options => {\n  const minifyFns = Array.isArray(options.minimizer.implementation) ? options.minimizer.implementation : [options.minimizer.implementation];\n  /** @type {InternalResult} */\n\n  const result = {\n    outputs: [],\n    warnings: [],\n    errors: []\n  };\n  let needSourceMap = false;\n\n  for (let i = 0; i <= minifyFns.length - 1; i++) {\n    const minifyFn = minifyFns[i];\n    const minifyOptions = Array.isArray(options.minimizer.options) ? options.minimizer.options[i] : options.minimizer.options;\n    const prevResult = result.outputs.length > 0 ? result.outputs[result.outputs.length - 1] : {\n      code: options.input,\n      map: options.inputSourceMap\n    };\n    const {\n      code,\n      map\n    } = prevResult; // eslint-disable-next-line no-await-in-loop\n\n    const minifyResult = await minifyFn({\n      [options.name]: code\n    }, map, minifyOptions);\n\n    if (typeof minifyResult.code !== \"string\") {\n      throw new Error(\"minimizer function doesn't return the 'code' property or result is not a string value\");\n    }\n\n    if (minifyResult.map) {\n      needSourceMap = true;\n    }\n\n    if (minifyResult.errors) {\n      result.errors = result.errors.concat(minifyResult.errors);\n    }\n\n    if (minifyResult.warnings) {\n      result.warnings = result.warnings.concat(minifyResult.warnings);\n    }\n\n    result.outputs.push({\n      code: minifyResult.code,\n      map: minifyResult.map\n    });\n  }\n\n  if (!needSourceMap) {\n    result.outputs = [result.outputs[result.outputs.length - 1]];\n  }\n\n  return result;\n};\n/**\n * @param {string} options\n * @returns {Promise<InternalResult>}\n */\n\n\nasync function transform(options) {\n  // 'use strict' => this === undefined (Clean Scope)\n  // Safer for possible security issues, albeit not critical at all here\n  // eslint-disable-next-line no-new-func, no-param-reassign\n  const evaluatedOptions = new Function(\"exports\", \"require\", \"module\", \"__filename\", \"__dirname\", `'use strict'\\nreturn ${options}`)(exports, require, module, __filename, __dirname);\n  return minify(evaluatedOptions);\n}\n\nmodule.exports = {\n  minify,\n  transform\n};","map":{"version":3,"names":["minify","options","minifyFns","Array","isArray","minimizer","implementation","result","outputs","warnings","errors","needSourceMap","i","length","minifyFn","minifyOptions","prevResult","code","input","map","inputSourceMap","minifyResult","name","Error","concat","push","transform","evaluatedOptions","Function","exports","require","module","__filename","__dirname"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/css-minimizer-webpack-plugin/dist/minify.js"],"sourcesContent":["\"use strict\";\n\n/** @typedef {import(\"./index.js\").MinimizedResult} MinimizedResult */\n\n/** @typedef {import(\"source-map\").RawSourceMap} RawSourceMap */\n\n/** @typedef {import(\"./index.js\").InternalResult} InternalResult */\n\n/**\n * @template T\n * @param {import(\"./index.js\").InternalOptions<T>} options\n * @returns {Promise<InternalResult>}\n */\nconst minify = async options => {\n  const minifyFns = Array.isArray(options.minimizer.implementation) ? options.minimizer.implementation : [options.minimizer.implementation];\n  /** @type {InternalResult} */\n\n  const result = {\n    outputs: [],\n    warnings: [],\n    errors: []\n  };\n  let needSourceMap = false;\n\n  for (let i = 0; i <= minifyFns.length - 1; i++) {\n    const minifyFn = minifyFns[i];\n    const minifyOptions = Array.isArray(options.minimizer.options) ? options.minimizer.options[i] : options.minimizer.options;\n    const prevResult = result.outputs.length > 0 ? result.outputs[result.outputs.length - 1] : {\n      code: options.input,\n      map: options.inputSourceMap\n    };\n    const {\n      code,\n      map\n    } = prevResult; // eslint-disable-next-line no-await-in-loop\n\n    const minifyResult = await minifyFn({\n      [options.name]: code\n    }, map, minifyOptions);\n\n    if (typeof minifyResult.code !== \"string\") {\n      throw new Error(\"minimizer function doesn't return the 'code' property or result is not a string value\");\n    }\n\n    if (minifyResult.map) {\n      needSourceMap = true;\n    }\n\n    if (minifyResult.errors) {\n      result.errors = result.errors.concat(minifyResult.errors);\n    }\n\n    if (minifyResult.warnings) {\n      result.warnings = result.warnings.concat(minifyResult.warnings);\n    }\n\n    result.outputs.push({\n      code: minifyResult.code,\n      map: minifyResult.map\n    });\n  }\n\n  if (!needSourceMap) {\n    result.outputs = [result.outputs[result.outputs.length - 1]];\n  }\n\n  return result;\n};\n/**\n * @param {string} options\n * @returns {Promise<InternalResult>}\n */\n\n\nasync function transform(options) {\n  // 'use strict' => this === undefined (Clean Scope)\n  // Safer for possible security issues, albeit not critical at all here\n  // eslint-disable-next-line no-new-func, no-param-reassign\n  const evaluatedOptions = new Function(\"exports\", \"require\", \"module\", \"__filename\", \"__dirname\", `'use strict'\\nreturn ${options}`)(exports, require, module, __filename, __dirname);\n  return minify(evaluatedOptions);\n}\n\nmodule.exports = {\n  minify,\n  transform\n};"],"mappings":"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"},"metadata":{},"sourceType":"script"}