{"ast":null,"code":"const {\n  d,\n  n\n} = require('../../options');\n/**\n * Normalizes the options for the plugin.\n * @param {import('../types').ReactRefreshPluginOptions} options Non-normalized plugin options.\n * @returns {import('../types').NormalizedPluginOptions} Normalized plugin options.\n */\n\n\nconst normalizeOptions = options => {\n  d(options, 'exclude', /node_modules/i);\n  d(options, 'include', /\\.([cm]js|[jt]sx?|flow)$/i);\n  d(options, 'forceEnable');\n  d(options, 'library');\n  n(options, 'overlay', overlay => {\n    /** @type {import('../types').NormalizedErrorOverlayOptions} */\n    const defaults = {\n      entry: require.resolve('../../client/ErrorOverlayEntry'),\n      module: require.resolve('../../overlay'),\n      sockIntegration: 'wds'\n    };\n\n    if (overlay === false) {\n      return false;\n    }\n\n    if (typeof overlay === 'undefined' || overlay === true) {\n      return defaults;\n    }\n\n    d(overlay, 'entry', defaults.entry);\n    d(overlay, 'module', defaults.module);\n    d(overlay, 'sockIntegration', defaults.sockIntegration);\n    d(overlay, 'sockHost');\n    d(overlay, 'sockPath');\n    d(overlay, 'sockPort');\n    d(overlay, 'sockProtocol');\n    d(options, 'useURLPolyfill');\n    return overlay;\n  });\n  return options;\n};\n\nmodule.exports = normalizeOptions;","map":{"version":3,"names":["d","n","require","normalizeOptions","options","overlay","defaults","entry","resolve","module","sockIntegration","exports"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/utils/normalizeOptions.js"],"sourcesContent":["const { d, n } = require('../../options');\n\n/**\n * Normalizes the options for the plugin.\n * @param {import('../types').ReactRefreshPluginOptions} options Non-normalized plugin options.\n * @returns {import('../types').NormalizedPluginOptions} Normalized plugin options.\n */\nconst normalizeOptions = (options) => {\n  d(options, 'exclude', /node_modules/i);\n  d(options, 'include', /\\.([cm]js|[jt]sx?|flow)$/i);\n  d(options, 'forceEnable');\n  d(options, 'library');\n\n  n(options, 'overlay', (overlay) => {\n    /** @type {import('../types').NormalizedErrorOverlayOptions} */\n    const defaults = {\n      entry: require.resolve('../../client/ErrorOverlayEntry'),\n      module: require.resolve('../../overlay'),\n      sockIntegration: 'wds',\n    };\n\n    if (overlay === false) {\n      return false;\n    }\n    if (typeof overlay === 'undefined' || overlay === true) {\n      return defaults;\n    }\n\n    d(overlay, 'entry', defaults.entry);\n    d(overlay, 'module', defaults.module);\n    d(overlay, 'sockIntegration', defaults.sockIntegration);\n    d(overlay, 'sockHost');\n    d(overlay, 'sockPath');\n    d(overlay, 'sockPort');\n    d(overlay, 'sockProtocol');\n    d(options, 'useURLPolyfill');\n\n    return overlay;\n  });\n\n  return options;\n};\n\nmodule.exports = normalizeOptions;\n"],"mappings":"AAAA,MAAM;EAAEA,CAAF;EAAKC;AAAL,IAAWC,OAAO,CAAC,eAAD,CAAxB;AAEA;AACA;AACA;AACA;AACA;;;AACA,MAAMC,gBAAgB,GAAIC,OAAD,IAAa;EACpCJ,CAAC,CAACI,OAAD,EAAU,SAAV,EAAqB,eAArB,CAAD;EACAJ,CAAC,CAACI,OAAD,EAAU,SAAV,EAAqB,2BAArB,CAAD;EACAJ,CAAC,CAACI,OAAD,EAAU,aAAV,CAAD;EACAJ,CAAC,CAACI,OAAD,EAAU,SAAV,CAAD;EAEAH,CAAC,CAACG,OAAD,EAAU,SAAV,EAAsBC,OAAD,IAAa;IACjC;IACA,MAAMC,QAAQ,GAAG;MACfC,KAAK,EAAEL,OAAO,CAACM,OAAR,CAAgB,gCAAhB,CADQ;MAEfC,MAAM,EAAEP,OAAO,CAACM,OAAR,CAAgB,eAAhB,CAFO;MAGfE,eAAe,EAAE;IAHF,CAAjB;;IAMA,IAAIL,OAAO,KAAK,KAAhB,EAAuB;MACrB,OAAO,KAAP;IACD;;IACD,IAAI,OAAOA,OAAP,KAAmB,WAAnB,IAAkCA,OAAO,KAAK,IAAlD,EAAwD;MACtD,OAAOC,QAAP;IACD;;IAEDN,CAAC,CAACK,OAAD,EAAU,OAAV,EAAmBC,QAAQ,CAACC,KAA5B,CAAD;IACAP,CAAC,CAACK,OAAD,EAAU,QAAV,EAAoBC,QAAQ,CAACG,MAA7B,CAAD;IACAT,CAAC,CAACK,OAAD,EAAU,iBAAV,EAA6BC,QAAQ,CAACI,eAAtC,CAAD;IACAV,CAAC,CAACK,OAAD,EAAU,UAAV,CAAD;IACAL,CAAC,CAACK,OAAD,EAAU,UAAV,CAAD;IACAL,CAAC,CAACK,OAAD,EAAU,UAAV,CAAD;IACAL,CAAC,CAACK,OAAD,EAAU,cAAV,CAAD;IACAL,CAAC,CAACI,OAAD,EAAU,gBAAV,CAAD;IAEA,OAAOC,OAAP;EACD,CAzBA,CAAD;EA2BA,OAAOD,OAAP;AACD,CAlCD;;AAoCAK,MAAM,CAACE,OAAP,GAAiBR,gBAAjB"},"metadata":{},"sourceType":"script"}