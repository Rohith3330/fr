{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.decode = decode;\n\nvar decoder = _interopRequireWildcard(require(\"./decoder\"));\n\nvar t = _interopRequireWildcard(require(\"@webassemblyjs/ast\"));\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n\n          if (desc.get || desc.set) {\n            Object.defineProperty(newObj, key, desc);\n          } else {\n            newObj[key] = obj[key];\n          }\n        }\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n/**\n * TODO(sven): I added initial props, but we should rather fix\n * https://github.com/xtuc/webassemblyjs/issues/405\n */\n\n\nvar defaultDecoderOpts = {\n  dump: false,\n  ignoreCodeSection: false,\n  ignoreDataSection: false,\n  ignoreCustomNameSection: false\n}; // traverses the AST, locating function name metadata, which is then\n// used to update index-based identifiers with function names\n\nfunction restoreFunctionNames(ast) {\n  var functionNames = [];\n  t.traverse(ast, {\n    FunctionNameMetadata: function FunctionNameMetadata(_ref) {\n      var node = _ref.node;\n      functionNames.push({\n        name: node.value,\n        index: node.index\n      });\n    }\n  });\n\n  if (functionNames.length === 0) {\n    return;\n  }\n\n  t.traverse(ast, {\n    Func: function (_Func) {\n      function Func(_x) {\n        return _Func.apply(this, arguments);\n      }\n\n      Func.toString = function () {\n        return _Func.toString();\n      };\n\n      return Func;\n    }(function (_ref2) {\n      var node = _ref2.node; // $FlowIgnore\n\n      var nodeName = node.name;\n      var indexBasedFunctionName = nodeName.value;\n      var index = Number(indexBasedFunctionName.replace(\"func_\", \"\"));\n      var functionName = functionNames.find(function (f) {\n        return f.index === index;\n      });\n\n      if (functionName) {\n        var oldValue = nodeName.value;\n        nodeName.value = functionName.name;\n        nodeName.numeric = oldValue; // $FlowIgnore\n\n        delete nodeName.raw;\n      }\n    }),\n    // Also update the reference in the export\n    ModuleExport: function (_ModuleExport) {\n      function ModuleExport(_x2) {\n        return _ModuleExport.apply(this, arguments);\n      }\n\n      ModuleExport.toString = function () {\n        return _ModuleExport.toString();\n      };\n\n      return ModuleExport;\n    }(function (_ref3) {\n      var node = _ref3.node;\n\n      if (node.descr.exportType === \"Func\") {\n        // $FlowIgnore\n        var nodeName = node.descr.id;\n        var index = nodeName.value;\n        var functionName = functionNames.find(function (f) {\n          return f.index === index;\n        });\n\n        if (functionName) {\n          node.descr.id = t.identifier(functionName.name);\n        }\n      }\n    }),\n    ModuleImport: function (_ModuleImport) {\n      function ModuleImport(_x3) {\n        return _ModuleImport.apply(this, arguments);\n      }\n\n      ModuleImport.toString = function () {\n        return _ModuleImport.toString();\n      };\n\n      return ModuleImport;\n    }(function (_ref4) {\n      var node = _ref4.node;\n\n      if (node.descr.type === \"FuncImportDescr\") {\n        // $FlowIgnore\n        var indexBasedFunctionName = node.descr.id;\n        var index = Number(indexBasedFunctionName.replace(\"func_\", \"\"));\n        var functionName = functionNames.find(function (f) {\n          return f.index === index;\n        });\n\n        if (functionName) {\n          // $FlowIgnore\n          node.descr.id = t.identifier(functionName.name);\n        }\n      }\n    }),\n    CallInstruction: function (_CallInstruction) {\n      function CallInstruction(_x4) {\n        return _CallInstruction.apply(this, arguments);\n      }\n\n      CallInstruction.toString = function () {\n        return _CallInstruction.toString();\n      };\n\n      return CallInstruction;\n    }(function (nodePath) {\n      var node = nodePath.node;\n      var index = node.index.value;\n      var functionName = functionNames.find(function (f) {\n        return f.index === index;\n      });\n\n      if (functionName) {\n        var oldValue = node.index;\n        node.index = t.identifier(functionName.name);\n        node.numeric = oldValue; // $FlowIgnore\n\n        delete node.raw;\n      }\n    })\n  });\n}\n\nfunction restoreLocalNames(ast) {\n  var localNames = [];\n  t.traverse(ast, {\n    LocalNameMetadata: function LocalNameMetadata(_ref5) {\n      var node = _ref5.node;\n      localNames.push({\n        name: node.value,\n        localIndex: node.localIndex,\n        functionIndex: node.functionIndex\n      });\n    }\n  });\n\n  if (localNames.length === 0) {\n    return;\n  }\n\n  t.traverse(ast, {\n    Func: function (_Func2) {\n      function Func(_x5) {\n        return _Func2.apply(this, arguments);\n      }\n\n      Func.toString = function () {\n        return _Func2.toString();\n      };\n\n      return Func;\n    }(function (_ref6) {\n      var node = _ref6.node;\n      var signature = node.signature;\n\n      if (signature.type !== \"Signature\") {\n        return;\n      } // $FlowIgnore\n\n\n      var nodeName = node.name;\n      var indexBasedFunctionName = nodeName.value;\n      var functionIndex = Number(indexBasedFunctionName.replace(\"func_\", \"\"));\n      signature.params.forEach(function (param, paramIndex) {\n        var paramName = localNames.find(function (f) {\n          return f.localIndex === paramIndex && f.functionIndex === functionIndex;\n        });\n\n        if (paramName && paramName.name !== \"\") {\n          param.id = paramName.name;\n        }\n      });\n    })\n  });\n}\n\nfunction restoreModuleName(ast) {\n  t.traverse(ast, {\n    ModuleNameMetadata: function (_ModuleNameMetadata) {\n      function ModuleNameMetadata(_x6) {\n        return _ModuleNameMetadata.apply(this, arguments);\n      }\n\n      ModuleNameMetadata.toString = function () {\n        return _ModuleNameMetadata.toString();\n      };\n\n      return ModuleNameMetadata;\n    }(function (moduleNameMetadataPath) {\n      // update module\n      t.traverse(ast, {\n        Module: function (_Module) {\n          function Module(_x7) {\n            return _Module.apply(this, arguments);\n          }\n\n          Module.toString = function () {\n            return _Module.toString();\n          };\n\n          return Module;\n        }(function (_ref7) {\n          var node = _ref7.node;\n          var name = moduleNameMetadataPath.node.value; // compatiblity with wast-parser\n\n          if (name === \"\") {\n            name = null;\n          }\n\n          node.id = name;\n        })\n      });\n    })\n  });\n}\n\nfunction decode(buf, customOpts) {\n  var opts = Object.assign({}, defaultDecoderOpts, customOpts);\n  var ast = decoder.decode(buf, opts);\n\n  if (opts.ignoreCustomNameSection === false) {\n    restoreFunctionNames(ast);\n    restoreLocalNames(ast);\n    restoreModuleName(ast);\n  }\n\n  return ast;\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","decode","decoder","_interopRequireWildcard","require","t","obj","__esModule","newObj","key","prototype","hasOwnProperty","call","desc","getOwnPropertyDescriptor","get","set","default","defaultDecoderOpts","dump","ignoreCodeSection","ignoreDataSection","ignoreCustomNameSection","restoreFunctionNames","ast","functionNames","traverse","FunctionNameMetadata","_ref","node","push","name","index","length","Func","_Func","_x","apply","arguments","toString","_ref2","nodeName","indexBasedFunctionName","Number","replace","functionName","find","f","oldValue","numeric","raw","ModuleExport","_ModuleExport","_x2","_ref3","descr","exportType","id","identifier","ModuleImport","_ModuleImport","_x3","_ref4","type","CallInstruction","_CallInstruction","_x4","nodePath","restoreLocalNames","localNames","LocalNameMetadata","_ref5","localIndex","functionIndex","_Func2","_x5","_ref6","signature","params","forEach","param","paramIndex","paramName","restoreModuleName","ModuleNameMetadata","_ModuleNameMetadata","_x6","moduleNameMetadataPath","Module","_Module","_x7","_ref7","buf","customOpts","opts","assign"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/@webassemblyjs/wasm-parser/lib/index.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.decode = decode;\n\nvar decoder = _interopRequireWildcard(require(\"./decoder\"));\n\nvar t = _interopRequireWildcard(require(\"@webassemblyjs/ast\"));\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\n/**\n * TODO(sven): I added initial props, but we should rather fix\n * https://github.com/xtuc/webassemblyjs/issues/405\n */\nvar defaultDecoderOpts = {\n  dump: false,\n  ignoreCodeSection: false,\n  ignoreDataSection: false,\n  ignoreCustomNameSection: false\n}; // traverses the AST, locating function name metadata, which is then\n// used to update index-based identifiers with function names\n\nfunction restoreFunctionNames(ast) {\n  var functionNames = [];\n  t.traverse(ast, {\n    FunctionNameMetadata: function FunctionNameMetadata(_ref) {\n      var node = _ref.node;\n      functionNames.push({\n        name: node.value,\n        index: node.index\n      });\n    }\n  });\n\n  if (functionNames.length === 0) {\n    return;\n  }\n\n  t.traverse(ast, {\n    Func: function (_Func) {\n      function Func(_x) {\n        return _Func.apply(this, arguments);\n      }\n\n      Func.toString = function () {\n        return _Func.toString();\n      };\n\n      return Func;\n    }(function (_ref2) {\n      var node = _ref2.node;\n      // $FlowIgnore\n      var nodeName = node.name;\n      var indexBasedFunctionName = nodeName.value;\n      var index = Number(indexBasedFunctionName.replace(\"func_\", \"\"));\n      var functionName = functionNames.find(function (f) {\n        return f.index === index;\n      });\n\n      if (functionName) {\n        var oldValue = nodeName.value;\n        nodeName.value = functionName.name;\n        nodeName.numeric = oldValue; // $FlowIgnore\n\n        delete nodeName.raw;\n      }\n    }),\n    // Also update the reference in the export\n    ModuleExport: function (_ModuleExport) {\n      function ModuleExport(_x2) {\n        return _ModuleExport.apply(this, arguments);\n      }\n\n      ModuleExport.toString = function () {\n        return _ModuleExport.toString();\n      };\n\n      return ModuleExport;\n    }(function (_ref3) {\n      var node = _ref3.node;\n\n      if (node.descr.exportType === \"Func\") {\n        // $FlowIgnore\n        var nodeName = node.descr.id;\n        var index = nodeName.value;\n        var functionName = functionNames.find(function (f) {\n          return f.index === index;\n        });\n\n        if (functionName) {\n          node.descr.id = t.identifier(functionName.name);\n        }\n      }\n    }),\n    ModuleImport: function (_ModuleImport) {\n      function ModuleImport(_x3) {\n        return _ModuleImport.apply(this, arguments);\n      }\n\n      ModuleImport.toString = function () {\n        return _ModuleImport.toString();\n      };\n\n      return ModuleImport;\n    }(function (_ref4) {\n      var node = _ref4.node;\n\n      if (node.descr.type === \"FuncImportDescr\") {\n        // $FlowIgnore\n        var indexBasedFunctionName = node.descr.id;\n        var index = Number(indexBasedFunctionName.replace(\"func_\", \"\"));\n        var functionName = functionNames.find(function (f) {\n          return f.index === index;\n        });\n\n        if (functionName) {\n          // $FlowIgnore\n          node.descr.id = t.identifier(functionName.name);\n        }\n      }\n    }),\n    CallInstruction: function (_CallInstruction) {\n      function CallInstruction(_x4) {\n        return _CallInstruction.apply(this, arguments);\n      }\n\n      CallInstruction.toString = function () {\n        return _CallInstruction.toString();\n      };\n\n      return CallInstruction;\n    }(function (nodePath) {\n      var node = nodePath.node;\n      var index = node.index.value;\n      var functionName = functionNames.find(function (f) {\n        return f.index === index;\n      });\n\n      if (functionName) {\n        var oldValue = node.index;\n        node.index = t.identifier(functionName.name);\n        node.numeric = oldValue; // $FlowIgnore\n\n        delete node.raw;\n      }\n    })\n  });\n}\n\nfunction restoreLocalNames(ast) {\n  var localNames = [];\n  t.traverse(ast, {\n    LocalNameMetadata: function LocalNameMetadata(_ref5) {\n      var node = _ref5.node;\n      localNames.push({\n        name: node.value,\n        localIndex: node.localIndex,\n        functionIndex: node.functionIndex\n      });\n    }\n  });\n\n  if (localNames.length === 0) {\n    return;\n  }\n\n  t.traverse(ast, {\n    Func: function (_Func2) {\n      function Func(_x5) {\n        return _Func2.apply(this, arguments);\n      }\n\n      Func.toString = function () {\n        return _Func2.toString();\n      };\n\n      return Func;\n    }(function (_ref6) {\n      var node = _ref6.node;\n      var signature = node.signature;\n\n      if (signature.type !== \"Signature\") {\n        return;\n      } // $FlowIgnore\n\n\n      var nodeName = node.name;\n      var indexBasedFunctionName = nodeName.value;\n      var functionIndex = Number(indexBasedFunctionName.replace(\"func_\", \"\"));\n      signature.params.forEach(function (param, paramIndex) {\n        var paramName = localNames.find(function (f) {\n          return f.localIndex === paramIndex && f.functionIndex === functionIndex;\n        });\n\n        if (paramName && paramName.name !== \"\") {\n          param.id = paramName.name;\n        }\n      });\n    })\n  });\n}\n\nfunction restoreModuleName(ast) {\n  t.traverse(ast, {\n    ModuleNameMetadata: function (_ModuleNameMetadata) {\n      function ModuleNameMetadata(_x6) {\n        return _ModuleNameMetadata.apply(this, arguments);\n      }\n\n      ModuleNameMetadata.toString = function () {\n        return _ModuleNameMetadata.toString();\n      };\n\n      return ModuleNameMetadata;\n    }(function (moduleNameMetadataPath) {\n      // update module\n      t.traverse(ast, {\n        Module: function (_Module) {\n          function Module(_x7) {\n            return _Module.apply(this, arguments);\n          }\n\n          Module.toString = function () {\n            return _Module.toString();\n          };\n\n          return Module;\n        }(function (_ref7) {\n          var node = _ref7.node;\n          var name = moduleNameMetadataPath.node.value; // compatiblity with wast-parser\n\n          if (name === \"\") {\n            name = null;\n          }\n\n          node.id = name;\n        })\n      });\n    })\n  });\n}\n\nfunction decode(buf, customOpts) {\n  var opts = Object.assign({}, defaultDecoderOpts, customOpts);\n  var ast = decoder.decode(buf, opts);\n\n  if (opts.ignoreCustomNameSection === false) {\n    restoreFunctionNames(ast);\n    restoreLocalNames(ast);\n    restoreModuleName(ast);\n  }\n\n  return ast;\n}"],"mappings":"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"},"metadata":{},"sourceType":"script"}