{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _jsxAstUtils = require(\"jsx-ast-utils\");\n\nvar _getElementType = _interopRequireDefault(require(\"../util/getElementType\"));\n\nvar _schemas = require(\"../util/schemas\");\n/**\n * @fileoverview Enforce iframe elements have a title attribute.\n * @author Ethan Cohen\n */\n// ----------------------------------------------------------------------------\n// Rule Definition\n// ----------------------------------------------------------------------------\n\n\nvar errorMessage = '<iframe> elements must have a unique title property.';\nvar schema = (0, _schemas.generateObjSchema)();\nvar _default = {\n  meta: {\n    docs: {\n      url: 'https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/tree/HEAD/docs/rules/iframe-has-title.md',\n      description: 'Enforce iframe elements have a title attribute.'\n    },\n    schema: [schema]\n  },\n  create: function create(context) {\n    var elementType = (0, _getElementType[\"default\"])(context);\n    return {\n      JSXOpeningElement: function JSXOpeningElement(node) {\n        var type = elementType(node);\n\n        if (type && type !== 'iframe') {\n          return;\n        }\n\n        var title = (0, _jsxAstUtils.getPropValue)((0, _jsxAstUtils.getProp)(node.attributes, 'title'));\n\n        if (title && typeof title === 'string') {\n          return;\n        }\n\n        context.report({\n          node,\n          message: errorMessage\n        });\n      }\n    };\n  }\n};\nexports[\"default\"] = _default;\nmodule.exports = exports.default;","map":{"version":3,"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","_jsxAstUtils","_getElementType","_schemas","errorMessage","schema","generateObjSchema","_default","meta","docs","url","description","create","context","elementType","JSXOpeningElement","node","type","title","getPropValue","getProp","attributes","report","message","module","default"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/eslint-plugin-jsx-a11y/lib/rules/iframe-has-title.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _jsxAstUtils = require(\"jsx-ast-utils\");\n\nvar _getElementType = _interopRequireDefault(require(\"../util/getElementType\"));\n\nvar _schemas = require(\"../util/schemas\");\n\n/**\n * @fileoverview Enforce iframe elements have a title attribute.\n * @author Ethan Cohen\n */\n// ----------------------------------------------------------------------------\n// Rule Definition\n// ----------------------------------------------------------------------------\nvar errorMessage = '<iframe> elements must have a unique title property.';\nvar schema = (0, _schemas.generateObjSchema)();\nvar _default = {\n  meta: {\n    docs: {\n      url: 'https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/tree/HEAD/docs/rules/iframe-has-title.md',\n      description: 'Enforce iframe elements have a title attribute.'\n    },\n    schema: [schema]\n  },\n  create: function create(context) {\n    var elementType = (0, _getElementType[\"default\"])(context);\n    return {\n      JSXOpeningElement: function JSXOpeningElement(node) {\n        var type = elementType(node);\n\n        if (type && type !== 'iframe') {\n          return;\n        }\n\n        var title = (0, _jsxAstUtils.getPropValue)((0, _jsxAstUtils.getProp)(node.attributes, 'title'));\n\n        if (title && typeof title === 'string') {\n          return;\n        }\n\n        context.report({\n          node,\n          message: errorMessage\n        });\n      }\n    };\n  }\n};\nexports[\"default\"] = _default;\nmodule.exports = exports.default;"],"mappings":"AAAA;;AAEA,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAAD,CAApC;;AAEAC,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAC3CC,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAAC,SAAD,CAAP,GAAqB,KAAK,CAA1B;;AAEA,IAAIE,YAAY,GAAGL,OAAO,CAAC,eAAD,CAA1B;;AAEA,IAAIM,eAAe,GAAGP,sBAAsB,CAACC,OAAO,CAAC,wBAAD,CAAR,CAA5C;;AAEA,IAAIO,QAAQ,GAAGP,OAAO,CAAC,iBAAD,CAAtB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIQ,YAAY,GAAG,sDAAnB;AACA,IAAIC,MAAM,GAAG,CAAC,GAAGF,QAAQ,CAACG,iBAAb,GAAb;AACA,IAAIC,QAAQ,GAAG;EACbC,IAAI,EAAE;IACJC,IAAI,EAAE;MACJC,GAAG,EAAE,+FADD;MAEJC,WAAW,EAAE;IAFT,CADF;IAKJN,MAAM,EAAE,CAACA,MAAD;EALJ,CADO;EAQbO,MAAM,EAAE,SAASA,MAAT,CAAgBC,OAAhB,EAAyB;IAC/B,IAAIC,WAAW,GAAG,CAAC,GAAGZ,eAAe,CAAC,SAAD,CAAnB,EAAgCW,OAAhC,CAAlB;IACA,OAAO;MACLE,iBAAiB,EAAE,SAASA,iBAAT,CAA2BC,IAA3B,EAAiC;QAClD,IAAIC,IAAI,GAAGH,WAAW,CAACE,IAAD,CAAtB;;QAEA,IAAIC,IAAI,IAAIA,IAAI,KAAK,QAArB,EAA+B;UAC7B;QACD;;QAED,IAAIC,KAAK,GAAG,CAAC,GAAGjB,YAAY,CAACkB,YAAjB,EAA+B,CAAC,GAAGlB,YAAY,CAACmB,OAAjB,EAA0BJ,IAAI,CAACK,UAA/B,EAA2C,OAA3C,CAA/B,CAAZ;;QAEA,IAAIH,KAAK,IAAI,OAAOA,KAAP,KAAiB,QAA9B,EAAwC;UACtC;QACD;;QAEDL,OAAO,CAACS,MAAR,CAAe;UACbN,IADa;UAEbO,OAAO,EAAEnB;QAFI,CAAf;MAID;IAlBI,CAAP;EAoBD;AA9BY,CAAf;AAgCAL,OAAO,CAAC,SAAD,CAAP,GAAqBQ,QAArB;AACAiB,MAAM,CAACzB,OAAP,GAAiBA,OAAO,CAAC0B,OAAzB"},"metadata":{},"sourceType":"script"}