{"ast":null,"code":"'use strict';\n\nconst OVERRIDABLE_RULES = new Set(['keyframes', 'counter-style']);\nconst SCOPE_RULES = new Set(['media', 'supports']);\n/**\n * @param {string} prop\n * @return {string}\n */\n\nfunction vendorUnprefixed(prop) {\n  return prop.replace(/^-\\w+-/, '');\n}\n/**\n * @param {string} name\n * @return {boolean}\n */\n\n\nfunction isOverridable(name) {\n  return OVERRIDABLE_RULES.has(vendorUnprefixed(name.toLowerCase()));\n}\n/**\n * @param {string} name\n * @return {boolean}\n */\n\n\nfunction isScope(name) {\n  return SCOPE_RULES.has(vendorUnprefixed(name.toLowerCase()));\n}\n/**\n * @param {import('postcss').AtRule} node\n * @return {string}\n */\n\n\nfunction getScope(node) {\n  /** @type {import('postcss').Container<import('postcss').ChildNode> | import('postcss').Document | undefined} */\n  let current = node.parent;\n  const chain = [node.name.toLowerCase(), node.params];\n\n  while (current) {\n    if (current.type === 'atrule' && isScope(\n    /** @type import('postcss').AtRule */\n    current.name)) {\n      chain.unshift(\n      /** @type import('postcss').AtRule */\n      current.name + ' ' +\n      /** @type import('postcss').AtRule */\n      current.params);\n    }\n\n    current = current.parent;\n  }\n\n  return chain.join('|');\n}\n/**\n * @type {import('postcss').PluginCreator<void>}\n * @return {import('postcss').Plugin}\n */\n\n\nfunction pluginCreator() {\n  return {\n    postcssPlugin: 'postcss-discard-overridden',\n\n    prepare() {\n      const cache = new Map();\n      /** @type {{node: import('postcss').AtRule, scope: string}[]} */\n\n      const rules = [];\n      return {\n        OnceExit(css) {\n          css.walkAtRules(node => {\n            if (isOverridable(node.name)) {\n              const scope = getScope(node);\n              cache.set(scope, node);\n              rules.push({\n                node,\n                scope\n              });\n            }\n          });\n          rules.forEach(rule => {\n            if (cache.get(rule.scope) !== rule.node) {\n              rule.node.remove();\n            }\n          });\n        }\n\n      };\n    }\n\n  };\n}\n\npluginCreator.postcss = true;\nmodule.exports = pluginCreator;","map":{"version":3,"names":["OVERRIDABLE_RULES","Set","SCOPE_RULES","vendorUnprefixed","prop","replace","isOverridable","name","has","toLowerCase","isScope","getScope","node","current","parent","chain","params","type","unshift","join","pluginCreator","postcssPlugin","prepare","cache","Map","rules","OnceExit","css","walkAtRules","scope","set","push","forEach","rule","get","remove","postcss","module","exports"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/postcss-discard-overridden/src/index.js"],"sourcesContent":["'use strict';\nconst OVERRIDABLE_RULES = new Set(['keyframes', 'counter-style']);\nconst SCOPE_RULES = new Set(['media', 'supports']);\n\n/**\n * @param {string} prop\n * @return {string}\n */\nfunction vendorUnprefixed(prop) {\n  return prop.replace(/^-\\w+-/, '');\n}\n\n/**\n * @param {string} name\n * @return {boolean}\n */\nfunction isOverridable(name) {\n  return OVERRIDABLE_RULES.has(vendorUnprefixed(name.toLowerCase()));\n}\n\n/**\n * @param {string} name\n * @return {boolean}\n */\nfunction isScope(name) {\n  return SCOPE_RULES.has(vendorUnprefixed(name.toLowerCase()));\n}\n\n/**\n * @param {import('postcss').AtRule} node\n * @return {string}\n */\nfunction getScope(node) {\n  /** @type {import('postcss').Container<import('postcss').ChildNode> | import('postcss').Document | undefined} */\n  let current = node.parent;\n\n  const chain = [node.name.toLowerCase(), node.params];\n\n  while (current) {\n    if (\n      current.type === 'atrule' &&\n      isScope(/** @type import('postcss').AtRule */ (current).name)\n    ) {\n      chain.unshift(\n        /** @type import('postcss').AtRule */ (current).name +\n          ' ' +\n          /** @type import('postcss').AtRule */ (current).params\n      );\n    }\n    current = current.parent;\n  }\n\n  return chain.join('|');\n}\n\n/**\n * @type {import('postcss').PluginCreator<void>}\n * @return {import('postcss').Plugin}\n */\nfunction pluginCreator() {\n  return {\n    postcssPlugin: 'postcss-discard-overridden',\n    prepare() {\n      const cache = new Map();\n      /** @type {{node: import('postcss').AtRule, scope: string}[]} */\n      const rules = [];\n\n      return {\n        OnceExit(css) {\n          css.walkAtRules((node) => {\n            if (isOverridable(node.name)) {\n              const scope = getScope(node);\n\n              cache.set(scope, node);\n              rules.push({\n                node,\n                scope,\n              });\n            }\n          });\n\n          rules.forEach((rule) => {\n            if (cache.get(rule.scope) !== rule.node) {\n              rule.node.remove();\n            }\n          });\n        },\n      };\n    },\n  };\n}\n\npluginCreator.postcss = true;\nmodule.exports = pluginCreator;\n"],"mappings":"AAAA;;AACA,MAAMA,iBAAiB,GAAG,IAAIC,GAAJ,CAAQ,CAAC,WAAD,EAAc,eAAd,CAAR,CAA1B;AACA,MAAMC,WAAW,GAAG,IAAID,GAAJ,CAAQ,CAAC,OAAD,EAAU,UAAV,CAAR,CAApB;AAEA;AACA;AACA;AACA;;AACA,SAASE,gBAAT,CAA0BC,IAA1B,EAAgC;EAC9B,OAAOA,IAAI,CAACC,OAAL,CAAa,QAAb,EAAuB,EAAvB,CAAP;AACD;AAED;AACA;AACA;AACA;;;AACA,SAASC,aAAT,CAAuBC,IAAvB,EAA6B;EAC3B,OAAOP,iBAAiB,CAACQ,GAAlB,CAAsBL,gBAAgB,CAACI,IAAI,CAACE,WAAL,EAAD,CAAtC,CAAP;AACD;AAED;AACA;AACA;AACA;;;AACA,SAASC,OAAT,CAAiBH,IAAjB,EAAuB;EACrB,OAAOL,WAAW,CAACM,GAAZ,CAAgBL,gBAAgB,CAACI,IAAI,CAACE,WAAL,EAAD,CAAhC,CAAP;AACD;AAED;AACA;AACA;AACA;;;AACA,SAASE,QAAT,CAAkBC,IAAlB,EAAwB;EACtB;EACA,IAAIC,OAAO,GAAGD,IAAI,CAACE,MAAnB;EAEA,MAAMC,KAAK,GAAG,CAACH,IAAI,CAACL,IAAL,CAAUE,WAAV,EAAD,EAA0BG,IAAI,CAACI,MAA/B,CAAd;;EAEA,OAAOH,OAAP,EAAgB;IACd,IACEA,OAAO,CAACI,IAAR,KAAiB,QAAjB,IACAP,OAAO;IAAC;IAAuCG,OAAD,CAAUN,IAAjD,CAFT,EAGE;MACAQ,KAAK,CAACG,OAAN;MACE;MAAuCL,OAAD,CAAUN,IAAV,GACpC,GADoC;MAEpC;MAAuCM,OAAD,CAAUG,MAHpD;IAKD;;IACDH,OAAO,GAAGA,OAAO,CAACC,MAAlB;EACD;;EAED,OAAOC,KAAK,CAACI,IAAN,CAAW,GAAX,CAAP;AACD;AAED;AACA;AACA;AACA;;;AACA,SAASC,aAAT,GAAyB;EACvB,OAAO;IACLC,aAAa,EAAE,4BADV;;IAELC,OAAO,GAAG;MACR,MAAMC,KAAK,GAAG,IAAIC,GAAJ,EAAd;MACA;;MACA,MAAMC,KAAK,GAAG,EAAd;MAEA,OAAO;QACLC,QAAQ,CAACC,GAAD,EAAM;UACZA,GAAG,CAACC,WAAJ,CAAiBhB,IAAD,IAAU;YACxB,IAAIN,aAAa,CAACM,IAAI,CAACL,IAAN,CAAjB,EAA8B;cAC5B,MAAMsB,KAAK,GAAGlB,QAAQ,CAACC,IAAD,CAAtB;cAEAW,KAAK,CAACO,GAAN,CAAUD,KAAV,EAAiBjB,IAAjB;cACAa,KAAK,CAACM,IAAN,CAAW;gBACTnB,IADS;gBAETiB;cAFS,CAAX;YAID;UACF,CAVD;UAYAJ,KAAK,CAACO,OAAN,CAAeC,IAAD,IAAU;YACtB,IAAIV,KAAK,CAACW,GAAN,CAAUD,IAAI,CAACJ,KAAf,MAA0BI,IAAI,CAACrB,IAAnC,EAAyC;cACvCqB,IAAI,CAACrB,IAAL,CAAUuB,MAAV;YACD;UACF,CAJD;QAKD;;MAnBI,CAAP;IAqBD;;EA5BI,CAAP;AA8BD;;AAEDf,aAAa,CAACgB,OAAd,GAAwB,IAAxB;AACAC,MAAM,CAACC,OAAP,GAAiBlB,aAAjB"},"metadata":{},"sourceType":"script"}