{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _ariaQuery = require(\"aria-query\");\n\nvar _jsxAstUtils = require(\"jsx-ast-utils\");\n\nvar abstractRoles = new Set((0, _toConsumableArray2[\"default\"])(_ariaQuery.roles.keys()).filter(function (role) {\n  return _ariaQuery.roles.get(role)[\"abstract\"];\n}));\nvar DOMElements = (0, _toConsumableArray2[\"default\"])(_ariaQuery.dom.keys());\n\nvar isAbstractRole = function isAbstractRole(tagName, attributes) {\n  // Do not test higher level JSX components, as we do not know what\n  // low-level DOM element this maps to.\n  if (DOMElements.indexOf(tagName) === -1) {\n    return false;\n  }\n\n  var role = (0, _jsxAstUtils.getLiteralPropValue)((0, _jsxAstUtils.getProp)(attributes, 'role'));\n  return abstractRoles.has(role);\n};\n\nvar _default = isAbstractRole;\nexports[\"default\"] = _default;\nmodule.exports = exports.default;","map":{"version":3,"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","_toConsumableArray2","_ariaQuery","_jsxAstUtils","abstractRoles","Set","roles","keys","filter","role","get","DOMElements","dom","isAbstractRole","tagName","attributes","indexOf","getLiteralPropValue","getProp","has","_default","module","default"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/eslint-plugin-jsx-a11y/lib/util/isAbstractRole.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _ariaQuery = require(\"aria-query\");\n\nvar _jsxAstUtils = require(\"jsx-ast-utils\");\n\nvar abstractRoles = new Set((0, _toConsumableArray2[\"default\"])(_ariaQuery.roles.keys()).filter(function (role) {\n  return _ariaQuery.roles.get(role)[\"abstract\"];\n}));\nvar DOMElements = (0, _toConsumableArray2[\"default\"])(_ariaQuery.dom.keys());\n\nvar isAbstractRole = function isAbstractRole(tagName, attributes) {\n  // Do not test higher level JSX components, as we do not know what\n  // low-level DOM element this maps to.\n  if (DOMElements.indexOf(tagName) === -1) {\n    return false;\n  }\n\n  var role = (0, _jsxAstUtils.getLiteralPropValue)((0, _jsxAstUtils.getProp)(attributes, 'role'));\n  return abstractRoles.has(role);\n};\n\nvar _default = isAbstractRole;\nexports[\"default\"] = _default;\nmodule.exports = exports.default;"],"mappings":"AAAA;;AAEA,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAAD,CAApC;;AAEAC,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAC3CC,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAAC,SAAD,CAAP,GAAqB,KAAK,CAA1B;;AAEA,IAAIE,mBAAmB,GAAGN,sBAAsB,CAACC,OAAO,CAAC,0CAAD,CAAR,CAAhD;;AAEA,IAAIM,UAAU,GAAGN,OAAO,CAAC,YAAD,CAAxB;;AAEA,IAAIO,YAAY,GAAGP,OAAO,CAAC,eAAD,CAA1B;;AAEA,IAAIQ,aAAa,GAAG,IAAIC,GAAJ,CAAQ,CAAC,GAAGJ,mBAAmB,CAAC,SAAD,CAAvB,EAAoCC,UAAU,CAACI,KAAX,CAAiBC,IAAjB,EAApC,EAA6DC,MAA7D,CAAoE,UAAUC,IAAV,EAAgB;EAC9G,OAAOP,UAAU,CAACI,KAAX,CAAiBI,GAAjB,CAAqBD,IAArB,EAA2B,UAA3B,CAAP;AACD,CAF2B,CAAR,CAApB;AAGA,IAAIE,WAAW,GAAG,CAAC,GAAGV,mBAAmB,CAAC,SAAD,CAAvB,EAAoCC,UAAU,CAACU,GAAX,CAAeL,IAAf,EAApC,CAAlB;;AAEA,IAAIM,cAAc,GAAG,SAASA,cAAT,CAAwBC,OAAxB,EAAiCC,UAAjC,EAA6C;EAChE;EACA;EACA,IAAIJ,WAAW,CAACK,OAAZ,CAAoBF,OAApB,MAAiC,CAAC,CAAtC,EAAyC;IACvC,OAAO,KAAP;EACD;;EAED,IAAIL,IAAI,GAAG,CAAC,GAAGN,YAAY,CAACc,mBAAjB,EAAsC,CAAC,GAAGd,YAAY,CAACe,OAAjB,EAA0BH,UAA1B,EAAsC,MAAtC,CAAtC,CAAX;EACA,OAAOX,aAAa,CAACe,GAAd,CAAkBV,IAAlB,CAAP;AACD,CATD;;AAWA,IAAIW,QAAQ,GAAGP,cAAf;AACAd,OAAO,CAAC,SAAD,CAAP,GAAqBqB,QAArB;AACAC,MAAM,CAACtB,OAAP,GAAiBA,OAAO,CAACuB,OAAzB"},"metadata":{},"sourceType":"script"}