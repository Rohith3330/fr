{"ast":null,"code":"var test = require('tape');\n\nvar stringify = require('../');\n\ntest('nested', function (t) {\n  t.plan(1);\n  var obj = {\n    c: 8,\n    b: [{\n      z: 6,\n      y: 5,\n      x: 4\n    }, 7],\n    a: 3\n  };\n  t.equal(stringify(obj), '{\"a\":3,\"b\":[{\"x\":4,\"y\":5,\"z\":6},7],\"c\":8}');\n});\ntest('cyclic (default)', function (t) {\n  t.plan(1);\n  var one = {\n    a: 1\n  };\n  var two = {\n    a: 2,\n    one: one\n  };\n  one.two = two;\n\n  try {\n    stringify(one);\n  } catch (ex) {\n    t.equal(ex.toString(), 'TypeError: Converting circular structure to JSON');\n  }\n});\ntest('cyclic (specifically allowed)', function (t) {\n  t.plan(1);\n  var one = {\n    a: 1\n  };\n  var two = {\n    a: 2,\n    one: one\n  };\n  one.two = two;\n  t.equal(stringify(one, {\n    cycles: true\n  }), '{\"a\":1,\"two\":{\"a\":2,\"one\":\"__cycle__\"}}');\n});\ntest('repeated non-cyclic value', function (t) {\n  t.plan(1);\n  var one = {\n    x: 1\n  };\n  var two = {\n    a: one,\n    b: one\n  };\n  t.equal(stringify(two), '{\"a\":{\"x\":1},\"b\":{\"x\":1}}');\n});\ntest('acyclic but with reused obj-property pointers', function (t) {\n  t.plan(1);\n  var x = {\n    a: 1\n  };\n  var y = {\n    b: x,\n    c: x\n  };\n  t.equal(stringify(y), '{\"b\":{\"a\":1},\"c\":{\"a\":1}}');\n});","map":{"version":3,"names":["test","require","stringify","t","plan","obj","c","b","z","y","x","a","equal","one","two","ex","toString","cycles"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/json-stable-stringify-without-jsonify/test/nested.js"],"sourcesContent":["var test = require('tape');\nvar stringify = require('../');\n\ntest('nested', function (t) {\n    t.plan(1);\n    var obj = { c: 8, b: [{z:6,y:5,x:4},7], a: 3 };\n    t.equal(stringify(obj), '{\"a\":3,\"b\":[{\"x\":4,\"y\":5,\"z\":6},7],\"c\":8}');\n});\n\ntest('cyclic (default)', function (t) {\n    t.plan(1);\n    var one = { a: 1 };\n    var two = { a: 2, one: one };\n    one.two = two;\n    try {\n    \tstringify(one);\n    } catch (ex) {\n    \tt.equal(ex.toString(), 'TypeError: Converting circular structure to JSON');\n    }\n});\n\ntest('cyclic (specifically allowed)', function (t) {\n    t.plan(1);\n    var one = { a: 1 };\n    var two = { a: 2, one: one };\n    one.two = two;\n    t.equal(stringify(one, {cycles:true}), '{\"a\":1,\"two\":{\"a\":2,\"one\":\"__cycle__\"}}');\n});\n\ntest('repeated non-cyclic value', function(t) {\n    t.plan(1);\n    var one = { x: 1 };\n    var two = { a: one, b: one };\n    t.equal(stringify(two), '{\"a\":{\"x\":1},\"b\":{\"x\":1}}');\n});\n\ntest('acyclic but with reused obj-property pointers', function (t) {\n    t.plan(1);\n    var x = { a: 1 }\n    var y = { b: x, c: x }\n    t.equal(stringify(y), '{\"b\":{\"a\":1},\"c\":{\"a\":1}}');\n});\n"],"mappings":"AAAA,IAAIA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAAlB;;AACA,IAAIC,SAAS,GAAGD,OAAO,CAAC,KAAD,CAAvB;;AAEAD,IAAI,CAAC,QAAD,EAAW,UAAUG,CAAV,EAAa;EACxBA,CAAC,CAACC,IAAF,CAAO,CAAP;EACA,IAAIC,GAAG,GAAG;IAAEC,CAAC,EAAE,CAAL;IAAQC,CAAC,EAAE,CAAC;MAACC,CAAC,EAAC,CAAH;MAAKC,CAAC,EAAC,CAAP;MAASC,CAAC,EAAC;IAAX,CAAD,EAAe,CAAf,CAAX;IAA8BC,CAAC,EAAE;EAAjC,CAAV;EACAR,CAAC,CAACS,KAAF,CAAQV,SAAS,CAACG,GAAD,CAAjB,EAAwB,2CAAxB;AACH,CAJG,CAAJ;AAMAL,IAAI,CAAC,kBAAD,EAAqB,UAAUG,CAAV,EAAa;EAClCA,CAAC,CAACC,IAAF,CAAO,CAAP;EACA,IAAIS,GAAG,GAAG;IAAEF,CAAC,EAAE;EAAL,CAAV;EACA,IAAIG,GAAG,GAAG;IAAEH,CAAC,EAAE,CAAL;IAAQE,GAAG,EAAEA;EAAb,CAAV;EACAA,GAAG,CAACC,GAAJ,GAAUA,GAAV;;EACA,IAAI;IACHZ,SAAS,CAACW,GAAD,CAAT;EACA,CAFD,CAEE,OAAOE,EAAP,EAAW;IACZZ,CAAC,CAACS,KAAF,CAAQG,EAAE,CAACC,QAAH,EAAR,EAAuB,kDAAvB;EACA;AACJ,CAVG,CAAJ;AAYAhB,IAAI,CAAC,+BAAD,EAAkC,UAAUG,CAAV,EAAa;EAC/CA,CAAC,CAACC,IAAF,CAAO,CAAP;EACA,IAAIS,GAAG,GAAG;IAAEF,CAAC,EAAE;EAAL,CAAV;EACA,IAAIG,GAAG,GAAG;IAAEH,CAAC,EAAE,CAAL;IAAQE,GAAG,EAAEA;EAAb,CAAV;EACAA,GAAG,CAACC,GAAJ,GAAUA,GAAV;EACAX,CAAC,CAACS,KAAF,CAAQV,SAAS,CAACW,GAAD,EAAM;IAACI,MAAM,EAAC;EAAR,CAAN,CAAjB,EAAuC,yCAAvC;AACH,CANG,CAAJ;AAQAjB,IAAI,CAAC,2BAAD,EAA8B,UAASG,CAAT,EAAY;EAC1CA,CAAC,CAACC,IAAF,CAAO,CAAP;EACA,IAAIS,GAAG,GAAG;IAAEH,CAAC,EAAE;EAAL,CAAV;EACA,IAAII,GAAG,GAAG;IAAEH,CAAC,EAAEE,GAAL;IAAUN,CAAC,EAAEM;EAAb,CAAV;EACAV,CAAC,CAACS,KAAF,CAAQV,SAAS,CAACY,GAAD,CAAjB,EAAwB,2BAAxB;AACH,CALG,CAAJ;AAOAd,IAAI,CAAC,+CAAD,EAAkD,UAAUG,CAAV,EAAa;EAC/DA,CAAC,CAACC,IAAF,CAAO,CAAP;EACA,IAAIM,CAAC,GAAG;IAAEC,CAAC,EAAE;EAAL,CAAR;EACA,IAAIF,CAAC,GAAG;IAAEF,CAAC,EAAEG,CAAL;IAAQJ,CAAC,EAAEI;EAAX,CAAR;EACAP,CAAC,CAACS,KAAF,CAAQV,SAAS,CAACO,CAAD,CAAjB,EAAsB,2BAAtB;AACH,CALG,CAAJ"},"metadata":{},"sourceType":"script"}