{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.computeAriaChecked = computeAriaChecked;\nexports.computeAriaCurrent = computeAriaCurrent;\nexports.computeAriaExpanded = computeAriaExpanded;\nexports.computeAriaPressed = computeAriaPressed;\nexports.computeAriaSelected = computeAriaSelected;\nexports.computeHeadingLevel = computeHeadingLevel;\nexports.getImplicitAriaRoles = getImplicitAriaRoles;\nexports.getRoles = getRoles;\nexports.isInaccessible = isInaccessible;\nexports.isSubtreeInaccessible = isSubtreeInaccessible;\nexports.logRoles = void 0;\nexports.prettyRoles = prettyRoles;\n\nvar _ariaQuery = require(\"aria-query\");\n\nvar _domAccessibilityApi = require(\"dom-accessibility-api\");\n\nvar _prettyDom = require(\"./pretty-dom\");\n\nvar _config = require(\"./config\");\n\nconst elementRoleList = buildElementRoleList(_ariaQuery.elementRoles);\n/**\n * @param {Element} element -\n * @returns {boolean} - `true` if `element` and its subtree are inaccessible\n */\n\nfunction isSubtreeInaccessible(element) {\n  if (element.hidden === true) {\n    return true;\n  }\n\n  if (element.getAttribute('aria-hidden') === 'true') {\n    return true;\n  }\n\n  const window = element.ownerDocument.defaultView;\n\n  if (window.getComputedStyle(element).display === 'none') {\n    return true;\n  }\n\n  return false;\n}\n/**\n * Partial implementation https://www.w3.org/TR/wai-aria-1.2/#tree_exclusion\n * which should only be used for elements with a non-presentational role i.e.\n * `role=\"none\"` and `role=\"presentation\"` will not be excluded.\n *\n * Implements aria-hidden semantics (i.e. parent overrides child)\n * Ignores \"Child Presentational: True\" characteristics\n *\n * @param {Element} element -\n * @param {object} [options] -\n * @param {function (element: Element): boolean} options.isSubtreeInaccessible -\n * can be used to return cached results from previous isSubtreeInaccessible calls\n * @returns {boolean} true if excluded, otherwise false\n */\n\n\nfunction isInaccessible(element) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const {\n    isSubtreeInaccessible: isSubtreeInaccessibleImpl = isSubtreeInaccessible\n  } = options;\n  const window = element.ownerDocument.defaultView; // since visibility is inherited we can exit early\n\n  if (window.getComputedStyle(element).visibility === 'hidden') {\n    return true;\n  }\n\n  let currentElement = element;\n\n  while (currentElement) {\n    if (isSubtreeInaccessibleImpl(currentElement)) {\n      return true;\n    }\n\n    currentElement = currentElement.parentElement;\n  }\n\n  return false;\n}\n\nfunction getImplicitAriaRoles(currentNode) {\n  // eslint bug here:\n  // eslint-disable-next-line no-unused-vars\n  for (const {\n    match,\n    roles\n  } of elementRoleList) {\n    if (match(currentNode)) {\n      return [...roles];\n    }\n  }\n\n  return [];\n}\n\nfunction buildElementRoleList(elementRolesMap) {\n  function makeElementSelector(_ref2) {\n    let {\n      name,\n      attributes\n    } = _ref2;\n    return `${name}${attributes.map(_ref3 => {\n      let {\n        name: attributeName,\n        value,\n        constraints = []\n      } = _ref3;\n      const shouldNotExist = constraints.indexOf('undefined') !== -1;\n\n      if (shouldNotExist) {\n        return `:not([${attributeName}])`;\n      } else if (value) {\n        return `[${attributeName}=\"${value}\"]`;\n      } else {\n        return `[${attributeName}]`;\n      }\n    }).join('')}`;\n  }\n\n  function getSelectorSpecificity(_ref4) {\n    let {\n      attributes = []\n    } = _ref4;\n    return attributes.length;\n  }\n\n  function bySelectorSpecificity(_ref5, _ref6) {\n    let {\n      specificity: leftSpecificity\n    } = _ref5;\n    let {\n      specificity: rightSpecificity\n    } = _ref6;\n    return rightSpecificity - leftSpecificity;\n  }\n\n  function match(element) {\n    let {\n      attributes = []\n    } = element; // https://github.com/testing-library/dom-testing-library/issues/814\n\n    const typeTextIndex = attributes.findIndex(attribute => attribute.value && attribute.name === 'type' && attribute.value === 'text');\n\n    if (typeTextIndex >= 0) {\n      // not using splice to not mutate the attributes array\n      attributes = [...attributes.slice(0, typeTextIndex), ...attributes.slice(typeTextIndex + 1)];\n    }\n\n    const selector = makeElementSelector({ ...element,\n      attributes\n    });\n    return node => {\n      if (typeTextIndex >= 0 && node.type !== 'text') {\n        return false;\n      }\n\n      return node.matches(selector);\n    };\n  }\n\n  let result = []; // eslint bug here:\n  // eslint-disable-next-line no-unused-vars\n\n  for (const [element, roles] of elementRolesMap.entries()) {\n    result = [...result, {\n      match: match(element),\n      roles: Array.from(roles),\n      specificity: getSelectorSpecificity(element)\n    }];\n  }\n\n  return result.sort(bySelectorSpecificity);\n}\n\nfunction getRoles(container) {\n  let {\n    hidden = false\n  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  function flattenDOM(node) {\n    return [node, ...Array.from(node.children).reduce((acc, child) => [...acc, ...flattenDOM(child)], [])];\n  }\n\n  return flattenDOM(container).filter(element => {\n    return hidden === false ? isInaccessible(element) === false : true;\n  }).reduce((acc, node) => {\n    let roles = []; // TODO: This violates html-aria which does not allow any role on every element\n\n    if (node.hasAttribute('role')) {\n      roles = node.getAttribute('role').split(' ').slice(0, 1);\n    } else {\n      roles = getImplicitAriaRoles(node);\n    }\n\n    return roles.reduce((rolesAcc, role) => Array.isArray(rolesAcc[role]) ? { ...rolesAcc,\n      [role]: [...rolesAcc[role], node]\n    } : { ...rolesAcc,\n      [role]: [node]\n    }, acc);\n  }, {});\n}\n\nfunction prettyRoles(dom, _ref7) {\n  let {\n    hidden,\n    includeDescription\n  } = _ref7;\n  const roles = getRoles(dom, {\n    hidden\n  }); // We prefer to skip generic role, we don't recommend it\n\n  return Object.entries(roles).filter(_ref8 => {\n    let [role] = _ref8;\n    return role !== 'generic';\n  }).map(_ref9 => {\n    let [role, elements] = _ref9;\n    const delimiterBar = '-'.repeat(50);\n    const elementsString = elements.map(el => {\n      const nameString = `Name \"${(0, _domAccessibilityApi.computeAccessibleName)(el, {\n        computedStyleSupportsPseudoElements: (0, _config.getConfig)().computedStyleSupportsPseudoElements\n      })}\":\\n`;\n      const domString = (0, _prettyDom.prettyDOM)(el.cloneNode(false));\n\n      if (includeDescription) {\n        const descriptionString = `Description \"${(0, _domAccessibilityApi.computeAccessibleDescription)(el, {\n          computedStyleSupportsPseudoElements: (0, _config.getConfig)().computedStyleSupportsPseudoElements\n        })}\":\\n`;\n        return `${nameString}${descriptionString}${domString}`;\n      }\n\n      return `${nameString}${domString}`;\n    }).join('\\n\\n');\n    return `${role}:\\n\\n${elementsString}\\n\\n${delimiterBar}`;\n  }).join('\\n');\n}\n\nconst logRoles = function (dom) {\n  let {\n    hidden = false\n  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return console.log(prettyRoles(dom, {\n    hidden\n  }));\n};\n/**\n * @param {Element} element -\n * @returns {boolean | undefined} - false/true if (not)selected, undefined if not selectable\n */\n\n\nexports.logRoles = logRoles;\n\nfunction computeAriaSelected(element) {\n  // implicit value from html-aam mappings: https://www.w3.org/TR/html-aam-1.0/#html-attribute-state-and-property-mappings\n  // https://www.w3.org/TR/html-aam-1.0/#details-id-97\n  if (element.tagName === 'OPTION') {\n    return element.selected;\n  } // explicit value\n\n\n  return checkBooleanAttribute(element, 'aria-selected');\n}\n/**\n * @param {Element} element -\n * @returns {boolean | undefined} - false/true if (not)checked, undefined if not checked-able\n */\n\n\nfunction computeAriaChecked(element) {\n  // implicit value from html-aam mappings: https://www.w3.org/TR/html-aam-1.0/#html-attribute-state-and-property-mappings\n  // https://www.w3.org/TR/html-aam-1.0/#details-id-56\n  // https://www.w3.org/TR/html-aam-1.0/#details-id-67\n  if ('indeterminate' in element && element.indeterminate) {\n    return undefined;\n  }\n\n  if ('checked' in element) {\n    return element.checked;\n  } // explicit value\n\n\n  return checkBooleanAttribute(element, 'aria-checked');\n}\n/**\n * @param {Element} element -\n * @returns {boolean | undefined} - false/true if (not)pressed, undefined if not press-able\n */\n\n\nfunction computeAriaPressed(element) {\n  // https://www.w3.org/TR/wai-aria-1.1/#aria-pressed\n  return checkBooleanAttribute(element, 'aria-pressed');\n}\n/**\n * @param {Element} element -\n * @returns {boolean | string | null} -\n */\n\n\nfunction computeAriaCurrent(element) {\n  var _ref, _checkBooleanAttribut; // https://www.w3.org/TR/wai-aria-1.1/#aria-current\n\n\n  return (_ref = (_checkBooleanAttribut = checkBooleanAttribute(element, 'aria-current')) != null ? _checkBooleanAttribut : element.getAttribute('aria-current')) != null ? _ref : false;\n}\n/**\n * @param {Element} element -\n * @returns {boolean | undefined} - false/true if (not)expanded, undefined if not expand-able\n */\n\n\nfunction computeAriaExpanded(element) {\n  // https://www.w3.org/TR/wai-aria-1.1/#aria-expanded\n  return checkBooleanAttribute(element, 'aria-expanded');\n}\n\nfunction checkBooleanAttribute(element, attribute) {\n  const attributeValue = element.getAttribute(attribute);\n\n  if (attributeValue === 'true') {\n    return true;\n  }\n\n  if (attributeValue === 'false') {\n    return false;\n  }\n\n  return undefined;\n}\n/**\n * @param {Element} element -\n * @returns {number | undefined} - number if implicit heading or aria-level present, otherwise undefined\n */\n\n\nfunction computeHeadingLevel(element) {\n  // https://w3c.github.io/html-aam/#el-h1-h6\n  // https://w3c.github.io/html-aam/#el-h1-h6\n  const implicitHeadingLevels = {\n    H1: 1,\n    H2: 2,\n    H3: 3,\n    H4: 4,\n    H5: 5,\n    H6: 6\n  }; // explicit aria-level value\n  // https://www.w3.org/TR/wai-aria-1.2/#aria-level\n\n  const ariaLevelAttribute = element.getAttribute('aria-level') && Number(element.getAttribute('aria-level'));\n  return ariaLevelAttribute || implicitHeadingLevels[element.tagName];\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","computeAriaChecked","computeAriaCurrent","computeAriaExpanded","computeAriaPressed","computeAriaSelected","computeHeadingLevel","getImplicitAriaRoles","getRoles","isInaccessible","isSubtreeInaccessible","logRoles","prettyRoles","_ariaQuery","require","_domAccessibilityApi","_prettyDom","_config","elementRoleList","buildElementRoleList","elementRoles","element","hidden","getAttribute","window","ownerDocument","defaultView","getComputedStyle","display","options","isSubtreeInaccessibleImpl","visibility","currentElement","parentElement","currentNode","match","roles","elementRolesMap","makeElementSelector","name","attributes","map","attributeName","constraints","shouldNotExist","indexOf","join","getSelectorSpecificity","length","bySelectorSpecificity","specificity","leftSpecificity","rightSpecificity","typeTextIndex","findIndex","attribute","slice","selector","node","type","matches","result","entries","Array","from","sort","container","flattenDOM","children","reduce","acc","child","filter","hasAttribute","split","rolesAcc","role","isArray","dom","includeDescription","elements","delimiterBar","repeat","elementsString","el","nameString","computeAccessibleName","computedStyleSupportsPseudoElements","getConfig","domString","prettyDOM","cloneNode","descriptionString","computeAccessibleDescription","console","log","tagName","selected","checkBooleanAttribute","indeterminate","undefined","checked","_ref","_checkBooleanAttribut","attributeValue","implicitHeadingLevels","H1","H2","H3","H4","H5","H6","ariaLevelAttribute","Number"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/@testing-library/dom/dist/role-helpers.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.computeAriaChecked = computeAriaChecked;\nexports.computeAriaCurrent = computeAriaCurrent;\nexports.computeAriaExpanded = computeAriaExpanded;\nexports.computeAriaPressed = computeAriaPressed;\nexports.computeAriaSelected = computeAriaSelected;\nexports.computeHeadingLevel = computeHeadingLevel;\nexports.getImplicitAriaRoles = getImplicitAriaRoles;\nexports.getRoles = getRoles;\nexports.isInaccessible = isInaccessible;\nexports.isSubtreeInaccessible = isSubtreeInaccessible;\nexports.logRoles = void 0;\nexports.prettyRoles = prettyRoles;\n\nvar _ariaQuery = require(\"aria-query\");\n\nvar _domAccessibilityApi = require(\"dom-accessibility-api\");\n\nvar _prettyDom = require(\"./pretty-dom\");\n\nvar _config = require(\"./config\");\n\nconst elementRoleList = buildElementRoleList(_ariaQuery.elementRoles);\n/**\n * @param {Element} element -\n * @returns {boolean} - `true` if `element` and its subtree are inaccessible\n */\n\nfunction isSubtreeInaccessible(element) {\n  if (element.hidden === true) {\n    return true;\n  }\n\n  if (element.getAttribute('aria-hidden') === 'true') {\n    return true;\n  }\n\n  const window = element.ownerDocument.defaultView;\n\n  if (window.getComputedStyle(element).display === 'none') {\n    return true;\n  }\n\n  return false;\n}\n/**\n * Partial implementation https://www.w3.org/TR/wai-aria-1.2/#tree_exclusion\n * which should only be used for elements with a non-presentational role i.e.\n * `role=\"none\"` and `role=\"presentation\"` will not be excluded.\n *\n * Implements aria-hidden semantics (i.e. parent overrides child)\n * Ignores \"Child Presentational: True\" characteristics\n *\n * @param {Element} element -\n * @param {object} [options] -\n * @param {function (element: Element): boolean} options.isSubtreeInaccessible -\n * can be used to return cached results from previous isSubtreeInaccessible calls\n * @returns {boolean} true if excluded, otherwise false\n */\n\n\nfunction isInaccessible(element, options = {}) {\n  const {\n    isSubtreeInaccessible: isSubtreeInaccessibleImpl = isSubtreeInaccessible\n  } = options;\n  const window = element.ownerDocument.defaultView; // since visibility is inherited we can exit early\n\n  if (window.getComputedStyle(element).visibility === 'hidden') {\n    return true;\n  }\n\n  let currentElement = element;\n\n  while (currentElement) {\n    if (isSubtreeInaccessibleImpl(currentElement)) {\n      return true;\n    }\n\n    currentElement = currentElement.parentElement;\n  }\n\n  return false;\n}\n\nfunction getImplicitAriaRoles(currentNode) {\n  // eslint bug here:\n  // eslint-disable-next-line no-unused-vars\n  for (const {\n    match,\n    roles\n  } of elementRoleList) {\n    if (match(currentNode)) {\n      return [...roles];\n    }\n  }\n\n  return [];\n}\n\nfunction buildElementRoleList(elementRolesMap) {\n  function makeElementSelector({\n    name,\n    attributes\n  }) {\n    return `${name}${attributes.map(({\n      name: attributeName,\n      value,\n      constraints = []\n    }) => {\n      const shouldNotExist = constraints.indexOf('undefined') !== -1;\n\n      if (shouldNotExist) {\n        return `:not([${attributeName}])`;\n      } else if (value) {\n        return `[${attributeName}=\"${value}\"]`;\n      } else {\n        return `[${attributeName}]`;\n      }\n    }).join('')}`;\n  }\n\n  function getSelectorSpecificity({\n    attributes = []\n  }) {\n    return attributes.length;\n  }\n\n  function bySelectorSpecificity({\n    specificity: leftSpecificity\n  }, {\n    specificity: rightSpecificity\n  }) {\n    return rightSpecificity - leftSpecificity;\n  }\n\n  function match(element) {\n    let {\n      attributes = []\n    } = element; // https://github.com/testing-library/dom-testing-library/issues/814\n\n    const typeTextIndex = attributes.findIndex(attribute => attribute.value && attribute.name === 'type' && attribute.value === 'text');\n\n    if (typeTextIndex >= 0) {\n      // not using splice to not mutate the attributes array\n      attributes = [...attributes.slice(0, typeTextIndex), ...attributes.slice(typeTextIndex + 1)];\n    }\n\n    const selector = makeElementSelector({ ...element,\n      attributes\n    });\n    return node => {\n      if (typeTextIndex >= 0 && node.type !== 'text') {\n        return false;\n      }\n\n      return node.matches(selector);\n    };\n  }\n\n  let result = []; // eslint bug here:\n  // eslint-disable-next-line no-unused-vars\n\n  for (const [element, roles] of elementRolesMap.entries()) {\n    result = [...result, {\n      match: match(element),\n      roles: Array.from(roles),\n      specificity: getSelectorSpecificity(element)\n    }];\n  }\n\n  return result.sort(bySelectorSpecificity);\n}\n\nfunction getRoles(container, {\n  hidden = false\n} = {}) {\n  function flattenDOM(node) {\n    return [node, ...Array.from(node.children).reduce((acc, child) => [...acc, ...flattenDOM(child)], [])];\n  }\n\n  return flattenDOM(container).filter(element => {\n    return hidden === false ? isInaccessible(element) === false : true;\n  }).reduce((acc, node) => {\n    let roles = []; // TODO: This violates html-aria which does not allow any role on every element\n\n    if (node.hasAttribute('role')) {\n      roles = node.getAttribute('role').split(' ').slice(0, 1);\n    } else {\n      roles = getImplicitAriaRoles(node);\n    }\n\n    return roles.reduce((rolesAcc, role) => Array.isArray(rolesAcc[role]) ? { ...rolesAcc,\n      [role]: [...rolesAcc[role], node]\n    } : { ...rolesAcc,\n      [role]: [node]\n    }, acc);\n  }, {});\n}\n\nfunction prettyRoles(dom, {\n  hidden,\n  includeDescription\n}) {\n  const roles = getRoles(dom, {\n    hidden\n  }); // We prefer to skip generic role, we don't recommend it\n\n  return Object.entries(roles).filter(([role]) => role !== 'generic').map(([role, elements]) => {\n    const delimiterBar = '-'.repeat(50);\n    const elementsString = elements.map(el => {\n      const nameString = `Name \"${(0, _domAccessibilityApi.computeAccessibleName)(el, {\n        computedStyleSupportsPseudoElements: (0, _config.getConfig)().computedStyleSupportsPseudoElements\n      })}\":\\n`;\n      const domString = (0, _prettyDom.prettyDOM)(el.cloneNode(false));\n\n      if (includeDescription) {\n        const descriptionString = `Description \"${(0, _domAccessibilityApi.computeAccessibleDescription)(el, {\n          computedStyleSupportsPseudoElements: (0, _config.getConfig)().computedStyleSupportsPseudoElements\n        })}\":\\n`;\n        return `${nameString}${descriptionString}${domString}`;\n      }\n\n      return `${nameString}${domString}`;\n    }).join('\\n\\n');\n    return `${role}:\\n\\n${elementsString}\\n\\n${delimiterBar}`;\n  }).join('\\n');\n}\n\nconst logRoles = (dom, {\n  hidden = false\n} = {}) => console.log(prettyRoles(dom, {\n  hidden\n}));\n/**\n * @param {Element} element -\n * @returns {boolean | undefined} - false/true if (not)selected, undefined if not selectable\n */\n\n\nexports.logRoles = logRoles;\n\nfunction computeAriaSelected(element) {\n  // implicit value from html-aam mappings: https://www.w3.org/TR/html-aam-1.0/#html-attribute-state-and-property-mappings\n  // https://www.w3.org/TR/html-aam-1.0/#details-id-97\n  if (element.tagName === 'OPTION') {\n    return element.selected;\n  } // explicit value\n\n\n  return checkBooleanAttribute(element, 'aria-selected');\n}\n/**\n * @param {Element} element -\n * @returns {boolean | undefined} - false/true if (not)checked, undefined if not checked-able\n */\n\n\nfunction computeAriaChecked(element) {\n  // implicit value from html-aam mappings: https://www.w3.org/TR/html-aam-1.0/#html-attribute-state-and-property-mappings\n  // https://www.w3.org/TR/html-aam-1.0/#details-id-56\n  // https://www.w3.org/TR/html-aam-1.0/#details-id-67\n  if ('indeterminate' in element && element.indeterminate) {\n    return undefined;\n  }\n\n  if ('checked' in element) {\n    return element.checked;\n  } // explicit value\n\n\n  return checkBooleanAttribute(element, 'aria-checked');\n}\n/**\n * @param {Element} element -\n * @returns {boolean | undefined} - false/true if (not)pressed, undefined if not press-able\n */\n\n\nfunction computeAriaPressed(element) {\n  // https://www.w3.org/TR/wai-aria-1.1/#aria-pressed\n  return checkBooleanAttribute(element, 'aria-pressed');\n}\n/**\n * @param {Element} element -\n * @returns {boolean | string | null} -\n */\n\n\nfunction computeAriaCurrent(element) {\n  var _ref, _checkBooleanAttribut;\n\n  // https://www.w3.org/TR/wai-aria-1.1/#aria-current\n  return (_ref = (_checkBooleanAttribut = checkBooleanAttribute(element, 'aria-current')) != null ? _checkBooleanAttribut : element.getAttribute('aria-current')) != null ? _ref : false;\n}\n/**\n * @param {Element} element -\n * @returns {boolean | undefined} - false/true if (not)expanded, undefined if not expand-able\n */\n\n\nfunction computeAriaExpanded(element) {\n  // https://www.w3.org/TR/wai-aria-1.1/#aria-expanded\n  return checkBooleanAttribute(element, 'aria-expanded');\n}\n\nfunction checkBooleanAttribute(element, attribute) {\n  const attributeValue = element.getAttribute(attribute);\n\n  if (attributeValue === 'true') {\n    return true;\n  }\n\n  if (attributeValue === 'false') {\n    return false;\n  }\n\n  return undefined;\n}\n/**\n * @param {Element} element -\n * @returns {number | undefined} - number if implicit heading or aria-level present, otherwise undefined\n */\n\n\nfunction computeHeadingLevel(element) {\n  // https://w3c.github.io/html-aam/#el-h1-h6\n  // https://w3c.github.io/html-aam/#el-h1-h6\n  const implicitHeadingLevels = {\n    H1: 1,\n    H2: 2,\n    H3: 3,\n    H4: 4,\n    H5: 5,\n    H6: 6\n  }; // explicit aria-level value\n  // https://www.w3.org/TR/wai-aria-1.2/#aria-level\n\n  const ariaLevelAttribute = element.getAttribute('aria-level') && Number(element.getAttribute('aria-level'));\n  return ariaLevelAttribute || implicitHeadingLevels[element.tagName];\n}"],"mappings":"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"},"metadata":{},"sourceType":"script"}