{"ast":null,"code":"/**\n * @fileoverview Disallow the use of process.env()\n * @author Vignesh Anand\n * @deprecated in ESLint v7.0.0\n */\n\"use strict\"; //------------------------------------------------------------------------------\n// Rule Definition\n//------------------------------------------------------------------------------\n\n/** @type {import('../shared/types').Rule} */\n\nmodule.exports = {\n  meta: {\n    deprecated: true,\n    replacedBy: [],\n    type: \"suggestion\",\n    docs: {\n      description: \"Disallow the use of `process.env`\",\n      recommended: false,\n      url: \"https://eslint.org/docs/rules/no-process-env\"\n    },\n    schema: [],\n    messages: {\n      unexpectedProcessEnv: \"Unexpected use of process.env.\"\n    }\n  },\n\n  create(context) {\n    return {\n      MemberExpression(node) {\n        const objectName = node.object.name,\n              propertyName = node.property.name;\n\n        if (objectName === \"process\" && !node.computed && propertyName && propertyName === \"env\") {\n          context.report({\n            node,\n            messageId: \"unexpectedProcessEnv\"\n          });\n        }\n      }\n\n    };\n  }\n\n};","map":{"version":3,"names":["module","exports","meta","deprecated","replacedBy","type","docs","description","recommended","url","schema","messages","unexpectedProcessEnv","create","context","MemberExpression","node","objectName","object","name","propertyName","property","computed","report","messageId"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/eslint/lib/rules/no-process-env.js"],"sourcesContent":["/**\n * @fileoverview Disallow the use of process.env()\n * @author Vignesh Anand\n * @deprecated in ESLint v7.0.0\n */\n\"use strict\";\n\n//------------------------------------------------------------------------------\n// Rule Definition\n//------------------------------------------------------------------------------\n\n/** @type {import('../shared/types').Rule} */\nmodule.exports = {\n    meta: {\n        deprecated: true,\n\n        replacedBy: [],\n\n        type: \"suggestion\",\n\n        docs: {\n            description: \"Disallow the use of `process.env`\",\n            recommended: false,\n            url: \"https://eslint.org/docs/rules/no-process-env\"\n        },\n\n        schema: [],\n\n        messages: {\n            unexpectedProcessEnv: \"Unexpected use of process.env.\"\n        }\n    },\n\n    create(context) {\n\n        return {\n\n            MemberExpression(node) {\n                const objectName = node.object.name,\n                    propertyName = node.property.name;\n\n                if (objectName === \"process\" && !node.computed && propertyName && propertyName === \"env\") {\n                    context.report({ node, messageId: \"unexpectedProcessEnv\" });\n                }\n\n            }\n\n        };\n\n    }\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,a,CAEA;AACA;AACA;;AAEA;;AACAA,MAAM,CAACC,OAAP,GAAiB;EACbC,IAAI,EAAE;IACFC,UAAU,EAAE,IADV;IAGFC,UAAU,EAAE,EAHV;IAKFC,IAAI,EAAE,YALJ;IAOFC,IAAI,EAAE;MACFC,WAAW,EAAE,mCADX;MAEFC,WAAW,EAAE,KAFX;MAGFC,GAAG,EAAE;IAHH,CAPJ;IAaFC,MAAM,EAAE,EAbN;IAeFC,QAAQ,EAAE;MACNC,oBAAoB,EAAE;IADhB;EAfR,CADO;;EAqBbC,MAAM,CAACC,OAAD,EAAU;IAEZ,OAAO;MAEHC,gBAAgB,CAACC,IAAD,EAAO;QACnB,MAAMC,UAAU,GAAGD,IAAI,CAACE,MAAL,CAAYC,IAA/B;QAAA,MACIC,YAAY,GAAGJ,IAAI,CAACK,QAAL,CAAcF,IADjC;;QAGA,IAAIF,UAAU,KAAK,SAAf,IAA4B,CAACD,IAAI,CAACM,QAAlC,IAA8CF,YAA9C,IAA8DA,YAAY,KAAK,KAAnF,EAA0F;UACtFN,OAAO,CAACS,MAAR,CAAe;YAAEP,IAAF;YAAQQ,SAAS,EAAE;UAAnB,CAAf;QACH;MAEJ;;IAVE,CAAP;EAcH;;AArCY,CAAjB"},"metadata":{},"sourceType":"script"}