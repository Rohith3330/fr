{"ast":null,"code":"/**\n * @fileoverview Validate spacing before closing bracket in JSX.\n * @author ryym\n * @deprecated\n */\n'use strict';\n\nconst getTokenBeforeClosingBracket = require('../util/getTokenBeforeClosingBracket');\n\nconst docsUrl = require('../util/docsUrl');\n\nconst log = require('../util/log');\n\nconst report = require('../util/report');\n\nlet isWarnedForDeprecation = false; // ------------------------------------------------------------------------------\n// Rule Definition\n// ------------------------------------------------------------------------------\n\nconst messages = {\n  noSpaceBeforeClose: 'A space is forbidden before closing bracket',\n  needSpaceBeforeClose: 'A space is required before closing bracket'\n};\nmodule.exports = {\n  meta: {\n    deprecated: true,\n    docs: {\n      description: 'Enforce spacing before closing bracket in JSX',\n      category: 'Stylistic Issues',\n      recommended: false,\n      url: docsUrl('jsx-space-before-closing')\n    },\n    fixable: 'code',\n    messages,\n    schema: [{\n      enum: ['always', 'never']\n    }]\n  },\n\n  create(context) {\n    const configuration = context.options[0] || 'always'; // --------------------------------------------------------------------------\n    // Public\n    // --------------------------------------------------------------------------\n\n    return {\n      JSXOpeningElement(node) {\n        if (!node.selfClosing) {\n          return;\n        }\n\n        const sourceCode = context.getSourceCode();\n        const leftToken = getTokenBeforeClosingBracket(node);\n        const closingSlash = sourceCode.getTokenAfter(leftToken);\n\n        if (leftToken.loc.end.line !== closingSlash.loc.start.line) {\n          return;\n        }\n\n        if (configuration === 'always' && !sourceCode.isSpaceBetweenTokens(leftToken, closingSlash)) {\n          report(context, messages.needSpaceBeforeClose, 'needSpaceBeforeClose', {\n            loc: closingSlash.loc.start,\n\n            fix(fixer) {\n              return fixer.insertTextBefore(closingSlash, ' ');\n            }\n\n          });\n        } else if (configuration === 'never' && sourceCode.isSpaceBetweenTokens(leftToken, closingSlash)) {\n          report(context, messages.noSpaceBeforeClose, 'noSpaceBeforeClose', {\n            loc: closingSlash.loc.start,\n\n            fix(fixer) {\n              const previousToken = sourceCode.getTokenBefore(closingSlash);\n              return fixer.removeRange([previousToken.range[1], closingSlash.range[0]]);\n            }\n\n          });\n        }\n      },\n\n      Program() {\n        if (isWarnedForDeprecation) {\n          return;\n        }\n\n        log('The react/jsx-space-before-closing rule is deprecated. ' + 'Please use the react/jsx-tag-spacing rule with the ' + '\"beforeSelfClosing\" option instead.');\n        isWarnedForDeprecation = true;\n      }\n\n    };\n  }\n\n};","map":{"version":3,"names":["getTokenBeforeClosingBracket","require","docsUrl","log","report","isWarnedForDeprecation","messages","noSpaceBeforeClose","needSpaceBeforeClose","module","exports","meta","deprecated","docs","description","category","recommended","url","fixable","schema","enum","create","context","configuration","options","JSXOpeningElement","node","selfClosing","sourceCode","getSourceCode","leftToken","closingSlash","getTokenAfter","loc","end","line","start","isSpaceBetweenTokens","fix","fixer","insertTextBefore","previousToken","getTokenBefore","removeRange","range","Program"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/eslint-plugin-react/lib/rules/jsx-space-before-closing.js"],"sourcesContent":["/**\n * @fileoverview Validate spacing before closing bracket in JSX.\n * @author ryym\n * @deprecated\n */\n\n'use strict';\n\nconst getTokenBeforeClosingBracket = require('../util/getTokenBeforeClosingBracket');\nconst docsUrl = require('../util/docsUrl');\nconst log = require('../util/log');\nconst report = require('../util/report');\n\nlet isWarnedForDeprecation = false;\n\n// ------------------------------------------------------------------------------\n// Rule Definition\n// ------------------------------------------------------------------------------\n\nconst messages = {\n  noSpaceBeforeClose: 'A space is forbidden before closing bracket',\n  needSpaceBeforeClose: 'A space is required before closing bracket',\n};\n\nmodule.exports = {\n  meta: {\n    deprecated: true,\n    docs: {\n      description: 'Enforce spacing before closing bracket in JSX',\n      category: 'Stylistic Issues',\n      recommended: false,\n      url: docsUrl('jsx-space-before-closing'),\n    },\n    fixable: 'code',\n\n    messages,\n\n    schema: [{\n      enum: ['always', 'never'],\n    }],\n  },\n\n  create(context) {\n    const configuration = context.options[0] || 'always';\n\n    // --------------------------------------------------------------------------\n    // Public\n    // --------------------------------------------------------------------------\n\n    return {\n      JSXOpeningElement(node) {\n        if (!node.selfClosing) {\n          return;\n        }\n\n        const sourceCode = context.getSourceCode();\n\n        const leftToken = getTokenBeforeClosingBracket(node);\n        const closingSlash = sourceCode.getTokenAfter(leftToken);\n\n        if (leftToken.loc.end.line !== closingSlash.loc.start.line) {\n          return;\n        }\n\n        if (configuration === 'always' && !sourceCode.isSpaceBetweenTokens(leftToken, closingSlash)) {\n          report(context, messages.needSpaceBeforeClose, 'needSpaceBeforeClose', {\n            loc: closingSlash.loc.start,\n            fix(fixer) {\n              return fixer.insertTextBefore(closingSlash, ' ');\n            },\n          });\n        } else if (configuration === 'never' && sourceCode.isSpaceBetweenTokens(leftToken, closingSlash)) {\n          report(context, messages.noSpaceBeforeClose, 'noSpaceBeforeClose', {\n            loc: closingSlash.loc.start,\n            fix(fixer) {\n              const previousToken = sourceCode.getTokenBefore(closingSlash);\n              return fixer.removeRange([previousToken.range[1], closingSlash.range[0]]);\n            },\n          });\n        }\n      },\n\n      Program() {\n        if (isWarnedForDeprecation) {\n          return;\n        }\n\n        log('The react/jsx-space-before-closing rule is deprecated. '\n            + 'Please use the react/jsx-tag-spacing rule with the '\n            + '\"beforeSelfClosing\" option instead.');\n        isWarnedForDeprecation = true;\n      },\n    };\n  },\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}