{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.default = useGlobalListener;\n\nvar _useEventListener = _interopRequireDefault(require(\"./useEventListener\"));\n\nvar _react = require(\"react\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * Attaches an event handler outside directly to the `document`,\n * bypassing the react synthetic event system.\n *\n * ```ts\n * useGlobalListener('keydown', (event) => {\n *  console.log(event.key)\n * })\n * ```\n *\n * @param event The DOM event name\n * @param handler An event handler\n * @param capture Whether or not to listen during the capture event phase\n */\n\n\nfunction useGlobalListener(event, handler, capture) {\n  if (capture === void 0) {\n    capture = false;\n  }\n\n  var documentTarget = (0, _react.useCallback)(function () {\n    return document;\n  }, []);\n  return (0, _useEventListener.default)(documentTarget, event, handler, capture);\n}","map":{"version":3,"names":["exports","__esModule","default","useGlobalListener","_useEventListener","_interopRequireDefault","require","_react","obj","event","handler","capture","documentTarget","useCallback","document"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/@restart/hooks/cjs/useGlobalListener.js"],"sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.default = useGlobalListener;\n\nvar _useEventListener = _interopRequireDefault(require(\"./useEventListener\"));\n\nvar _react = require(\"react\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Attaches an event handler outside directly to the `document`,\n * bypassing the react synthetic event system.\n *\n * ```ts\n * useGlobalListener('keydown', (event) => {\n *  console.log(event.key)\n * })\n * ```\n *\n * @param event The DOM event name\n * @param handler An event handler\n * @param capture Whether or not to listen during the capture event phase\n */\nfunction useGlobalListener(event, handler, capture) {\n  if (capture === void 0) {\n    capture = false;\n  }\n\n  var documentTarget = (0, _react.useCallback)(function () {\n    return document;\n  }, []);\n  return (0, _useEventListener.default)(documentTarget, event, handler, capture);\n}"],"mappings":"AAAA;;AAEAA,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAACE,OAAR,GAAkBC,iBAAlB;;AAEA,IAAIC,iBAAiB,GAAGC,sBAAsB,CAACC,OAAO,CAAC,oBAAD,CAAR,CAA9C;;AAEA,IAAIC,MAAM,GAAGD,OAAO,CAAC,OAAD,CAApB;;AAEA,SAASD,sBAAT,CAAgCG,GAAhC,EAAqC;EAAE,OAAOA,GAAG,IAAIA,GAAG,CAACP,UAAX,GAAwBO,GAAxB,GAA8B;IAAEN,OAAO,EAAEM;EAAX,CAArC;AAAwD;AAE/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASL,iBAAT,CAA2BM,KAA3B,EAAkCC,OAAlC,EAA2CC,OAA3C,EAAoD;EAClD,IAAIA,OAAO,KAAK,KAAK,CAArB,EAAwB;IACtBA,OAAO,GAAG,KAAV;EACD;;EAED,IAAIC,cAAc,GAAG,CAAC,GAAGL,MAAM,CAACM,WAAX,EAAwB,YAAY;IACvD,OAAOC,QAAP;EACD,CAFoB,EAElB,EAFkB,CAArB;EAGA,OAAO,CAAC,GAAGV,iBAAiB,CAACF,OAAtB,EAA+BU,cAA/B,EAA+CH,KAA/C,EAAsDC,OAAtD,EAA+DC,OAA/D,CAAP;AACD"},"metadata":{},"sourceType":"script"}