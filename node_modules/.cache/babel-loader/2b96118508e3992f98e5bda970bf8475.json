{"ast":null,"code":"import e from \"postcss-selector-parser\";\n\nconst s = s => {\n  s = Object(s);\n  const r = Boolean(!(\"preserve\" in s) || s.preserve),\n        t = String(s.replaceWith || \".focus-visible\"),\n        o = e().astSync(t);\n  return {\n    postcssPlugin: \"postcss-focus-visible\",\n\n    Rule(s, _ref) {\n      let {\n        result: t\n      } = _ref;\n      if (!s.selector.includes(\":focus-visible\")) return;\n      let c;\n\n      try {\n        const r = e(e => {\n          e.walkPseudos(e => {\n            \":focus-visible\" === e.value && (e.nodes && e.nodes.length || e.replaceWith(o.clone({})));\n          });\n        }).processSync(s.selector);\n        c = String(r);\n      } catch (e) {\n        return void s.warn(t, `Failed to parse selector : ${s.selector}`);\n      }\n\n      if (void 0 === c) return;\n      if (c === s.selector) return;\n      const l = s.clone({\n        selector: c\n      });\n      r ? s.before(l) : s.replaceWith(l);\n    }\n\n  };\n};\n\ns.postcss = !0;\nexport { s as default };","map":{"version":3,"names":["e","s","Object","r","Boolean","preserve","t","String","replaceWith","o","astSync","postcssPlugin","Rule","result","selector","includes","c","walkPseudos","value","nodes","length","clone","processSync","warn","l","before","postcss","default"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/postcss-focus-visible/dist/index.mjs"],"sourcesContent":["import e from\"postcss-selector-parser\";const s=s=>{s=Object(s);const r=Boolean(!(\"preserve\"in s)||s.preserve),t=String(s.replaceWith||\".focus-visible\"),o=e().astSync(t);return{postcssPlugin:\"postcss-focus-visible\",Rule(s,{result:t}){if(!s.selector.includes(\":focus-visible\"))return;let c;try{const r=e((e=>{e.walkPseudos((e=>{\":focus-visible\"===e.value&&(e.nodes&&e.nodes.length||e.replaceWith(o.clone({})))}))})).processSync(s.selector);c=String(r)}catch(e){return void s.warn(t,`Failed to parse selector : ${s.selector}`)}if(void 0===c)return;if(c===s.selector)return;const l=s.clone({selector:c});r?s.before(l):s.replaceWith(l)}}};s.postcss=!0;export{s as default};\n"],"mappings":"AAAA,OAAOA,CAAP,MAAa,yBAAb;;AAAuC,MAAMC,CAAC,GAACA,CAAC,IAAE;EAACA,CAAC,GAACC,MAAM,CAACD,CAAD,CAAR;EAAY,MAAME,CAAC,GAACC,OAAO,CAAC,EAAE,cAAaH,CAAf,KAAmBA,CAAC,CAACI,QAAtB,CAAf;EAAA,MAA+CC,CAAC,GAACC,MAAM,CAACN,CAAC,CAACO,WAAF,IAAe,gBAAhB,CAAvD;EAAA,MAAyFC,CAAC,GAACT,CAAC,GAAGU,OAAJ,CAAYJ,CAAZ,CAA3F;EAA0G,OAAM;IAACK,aAAa,EAAC,uBAAf;;IAAuCC,IAAI,CAACX,CAAD,QAAc;MAAA,IAAX;QAACY,MAAM,EAACP;MAAR,CAAW;MAAC,IAAG,CAACL,CAAC,CAACa,QAAF,CAAWC,QAAX,CAAoB,gBAApB,CAAJ,EAA0C;MAAO,IAAIC,CAAJ;;MAAM,IAAG;QAAC,MAAMb,CAAC,GAACH,CAAC,CAAEA,CAAC,IAAE;UAACA,CAAC,CAACiB,WAAF,CAAejB,CAAC,IAAE;YAAC,qBAAmBA,CAAC,CAACkB,KAArB,KAA6BlB,CAAC,CAACmB,KAAF,IAASnB,CAAC,CAACmB,KAAF,CAAQC,MAAjB,IAAyBpB,CAAC,CAACQ,WAAF,CAAcC,CAAC,CAACY,KAAF,CAAQ,EAAR,CAAd,CAAtD;UAAkF,CAArG;QAAwG,CAA9G,CAAD,CAAkHC,WAAlH,CAA8HrB,CAAC,CAACa,QAAhI,CAAR;QAAkJE,CAAC,GAACT,MAAM,CAACJ,CAAD,CAAR;MAAY,CAAlK,CAAkK,OAAMH,CAAN,EAAQ;QAAC,OAAO,KAAKC,CAAC,CAACsB,IAAF,CAAOjB,CAAP,EAAU,8BAA6BL,CAAC,CAACa,QAAS,EAAlD,CAAZ;MAAiE;;MAAA,IAAG,KAAK,CAAL,KAASE,CAAZ,EAAc;MAAO,IAAGA,CAAC,KAAGf,CAAC,CAACa,QAAT,EAAkB;MAAO,MAAMU,CAAC,GAACvB,CAAC,CAACoB,KAAF,CAAQ;QAACP,QAAQ,EAACE;MAAV,CAAR,CAAR;MAA8Bb,CAAC,GAACF,CAAC,CAACwB,MAAF,CAASD,CAAT,CAAD,GAAavB,CAAC,CAACO,WAAF,CAAcgB,CAAd,CAAd;IAA+B;;EAAxc,CAAN;AAAgd,CAAllB;;AAAmlBvB,CAAC,CAACyB,OAAF,GAAU,CAAC,CAAX;AAAa,SAAOzB,CAAC,IAAI0B,OAAZ"},"metadata":{},"sourceType":"module"}