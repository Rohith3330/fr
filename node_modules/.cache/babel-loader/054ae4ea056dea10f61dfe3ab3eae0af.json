{"ast":null,"code":"/**\n * @fileoverview CheckStyle XML reporter\n * @author Ian Christian Myers\n */\n\"use strict\";\n\nconst xmlEscape = require(\"../xml-escape\"); //------------------------------------------------------------------------------\n// Helper Functions\n//------------------------------------------------------------------------------\n\n/**\n * Returns the severity of warning or error\n * @param {Object} message message object to examine\n * @returns {string} severity level\n * @private\n */\n\n\nfunction getMessageType(message) {\n  if (message.fatal || message.severity === 2) {\n    return \"error\";\n  }\n\n  return \"warning\";\n} //------------------------------------------------------------------------------\n// Public Interface\n//------------------------------------------------------------------------------\n\n\nmodule.exports = function (results) {\n  let output = \"\";\n  output += \"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?>\";\n  output += \"<checkstyle version=\\\"4.3\\\">\";\n  results.forEach(result => {\n    const messages = result.messages;\n    output += `<file name=\"${xmlEscape(result.filePath)}\">`;\n    messages.forEach(message => {\n      output += [`<error line=\"${xmlEscape(message.line || 0)}\"`, `column=\"${xmlEscape(message.column || 0)}\"`, `severity=\"${xmlEscape(getMessageType(message))}\"`, `message=\"${xmlEscape(message.message)}${message.ruleId ? ` (${message.ruleId})` : \"\"}\"`, `source=\"${message.ruleId ? xmlEscape(`eslint.rules.${message.ruleId}`) : \"\"}\" />`].join(\" \");\n    });\n    output += \"</file>\";\n  });\n  output += \"</checkstyle>\";\n  return output;\n};","map":{"version":3,"names":["xmlEscape","require","getMessageType","message","fatal","severity","module","exports","results","output","forEach","result","messages","filePath","line","column","ruleId","join"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/eslint/lib/cli-engine/formatters/checkstyle.js"],"sourcesContent":["/**\n * @fileoverview CheckStyle XML reporter\n * @author Ian Christian Myers\n */\n\"use strict\";\n\nconst xmlEscape = require(\"../xml-escape\");\n\n//------------------------------------------------------------------------------\n// Helper Functions\n//------------------------------------------------------------------------------\n\n/**\n * Returns the severity of warning or error\n * @param {Object} message message object to examine\n * @returns {string} severity level\n * @private\n */\nfunction getMessageType(message) {\n    if (message.fatal || message.severity === 2) {\n        return \"error\";\n    }\n    return \"warning\";\n\n}\n\n//------------------------------------------------------------------------------\n// Public Interface\n//------------------------------------------------------------------------------\n\nmodule.exports = function(results) {\n\n    let output = \"\";\n\n    output += \"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?>\";\n    output += \"<checkstyle version=\\\"4.3\\\">\";\n\n    results.forEach(result => {\n        const messages = result.messages;\n\n        output += `<file name=\"${xmlEscape(result.filePath)}\">`;\n\n        messages.forEach(message => {\n            output += [\n                `<error line=\"${xmlEscape(message.line || 0)}\"`,\n                `column=\"${xmlEscape(message.column || 0)}\"`,\n                `severity=\"${xmlEscape(getMessageType(message))}\"`,\n                `message=\"${xmlEscape(message.message)}${message.ruleId ? ` (${message.ruleId})` : \"\"}\"`,\n                `source=\"${message.ruleId ? xmlEscape(`eslint.rules.${message.ruleId}`) : \"\"}\" />`\n            ].join(\" \");\n        });\n\n        output += \"</file>\";\n\n    });\n\n    output += \"</checkstyle>\";\n\n    return output;\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA,MAAMA,SAAS,GAAGC,OAAO,CAAC,eAAD,CAAzB,C,CAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASC,cAAT,CAAwBC,OAAxB,EAAiC;EAC7B,IAAIA,OAAO,CAACC,KAAR,IAAiBD,OAAO,CAACE,QAAR,KAAqB,CAA1C,EAA6C;IACzC,OAAO,OAAP;EACH;;EACD,OAAO,SAAP;AAEH,C,CAED;AACA;AACA;;;AAEAC,MAAM,CAACC,OAAP,GAAiB,UAASC,OAAT,EAAkB;EAE/B,IAAIC,MAAM,GAAG,EAAb;EAEAA,MAAM,IAAI,4CAAV;EACAA,MAAM,IAAI,8BAAV;EAEAD,OAAO,CAACE,OAAR,CAAgBC,MAAM,IAAI;IACtB,MAAMC,QAAQ,GAAGD,MAAM,CAACC,QAAxB;IAEAH,MAAM,IAAK,eAAcT,SAAS,CAACW,MAAM,CAACE,QAAR,CAAkB,IAApD;IAEAD,QAAQ,CAACF,OAAT,CAAiBP,OAAO,IAAI;MACxBM,MAAM,IAAI,CACL,gBAAeT,SAAS,CAACG,OAAO,CAACW,IAAR,IAAgB,CAAjB,CAAoB,GADvC,EAEL,WAAUd,SAAS,CAACG,OAAO,CAACY,MAAR,IAAkB,CAAnB,CAAsB,GAFpC,EAGL,aAAYf,SAAS,CAACE,cAAc,CAACC,OAAD,CAAf,CAA0B,GAH1C,EAIL,YAAWH,SAAS,CAACG,OAAO,CAACA,OAAT,CAAkB,GAAEA,OAAO,CAACa,MAAR,GAAkB,KAAIb,OAAO,CAACa,MAAO,GAArC,GAA0C,EAAG,GAJhF,EAKL,WAAUb,OAAO,CAACa,MAAR,GAAiBhB,SAAS,CAAE,gBAAeG,OAAO,CAACa,MAAO,EAAhC,CAA1B,GAA+D,EAAG,MALvE,EAMRC,IANQ,CAMH,GANG,CAAV;IAOH,CARD;IAUAR,MAAM,IAAI,SAAV;EAEH,CAjBD;EAmBAA,MAAM,IAAI,eAAV;EAEA,OAAOA,MAAP;AACH,CA7BD"},"metadata":{},"sourceType":"script"}