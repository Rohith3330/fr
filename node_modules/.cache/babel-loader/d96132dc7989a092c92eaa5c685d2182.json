{"ast":null,"code":"'use strict';\n\nconst fs = require('fs');\n\nconst stream = require('stream');\n\nconst zlib = require('zlib');\n\nconst {\n  promisify\n} = require('util');\n\nconst duplexer = require('duplexer');\n\nconst getOptions = options => ({\n  level: 9,\n  ...options\n});\n\nconst gzip = promisify(zlib.gzip);\n\nmodule.exports = async (input, options) => {\n  if (!input) {\n    return 0;\n  }\n\n  const data = await gzip(input, getOptions(options));\n  return data.length;\n};\n\nmodule.exports.sync = (input, options) => zlib.gzipSync(input, getOptions(options)).length;\n\nmodule.exports.stream = options => {\n  const input = new stream.PassThrough();\n  const output = new stream.PassThrough();\n  const wrapper = duplexer(input, output);\n  let gzipSize = 0;\n  const gzip = zlib.createGzip(getOptions(options)).on('data', buf => {\n    gzipSize += buf.length;\n  }).on('error', () => {\n    wrapper.gzipSize = 0;\n  }).on('end', () => {\n    wrapper.gzipSize = gzipSize;\n    wrapper.emit('gzip-size', gzipSize);\n    output.end();\n  });\n  input.pipe(gzip);\n  input.pipe(output, {\n    end: false\n  });\n  return wrapper;\n};\n\nmodule.exports.file = (path, options) => {\n  return new Promise((resolve, reject) => {\n    const stream = fs.createReadStream(path);\n    stream.on('error', reject);\n    const gzipStream = stream.pipe(module.exports.stream(options));\n    gzipStream.on('error', reject);\n    gzipStream.on('gzip-size', resolve);\n  });\n};\n\nmodule.exports.fileSync = (path, options) => module.exports.sync(fs.readFileSync(path), options);","map":{"version":3,"names":["fs","require","stream","zlib","promisify","duplexer","getOptions","options","level","gzip","module","exports","input","data","length","sync","gzipSync","PassThrough","output","wrapper","gzipSize","createGzip","on","buf","emit","end","pipe","file","path","Promise","resolve","reject","createReadStream","gzipStream","fileSync","readFileSync"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/gzip-size/index.js"],"sourcesContent":["'use strict';\nconst fs = require('fs');\nconst stream = require('stream');\nconst zlib = require('zlib');\nconst {promisify} = require('util');\nconst duplexer = require('duplexer');\n\nconst getOptions = options => ({level: 9, ...options});\nconst gzip = promisify(zlib.gzip);\n\nmodule.exports = async (input, options) => {\n\tif (!input) {\n\t\treturn 0;\n\t}\n\n\tconst data = await gzip(input, getOptions(options));\n\treturn data.length;\n};\n\nmodule.exports.sync = (input, options) => zlib.gzipSync(input, getOptions(options)).length;\n\nmodule.exports.stream = options => {\n\tconst input = new stream.PassThrough();\n\tconst output = new stream.PassThrough();\n\tconst wrapper = duplexer(input, output);\n\n\tlet gzipSize = 0;\n\tconst gzip = zlib.createGzip(getOptions(options))\n\t\t.on('data', buf => {\n\t\t\tgzipSize += buf.length;\n\t\t})\n\t\t.on('error', () => {\n\t\t\twrapper.gzipSize = 0;\n\t\t})\n\t\t.on('end', () => {\n\t\t\twrapper.gzipSize = gzipSize;\n\t\t\twrapper.emit('gzip-size', gzipSize);\n\t\t\toutput.end();\n\t\t});\n\n\tinput.pipe(gzip);\n\tinput.pipe(output, {end: false});\n\n\treturn wrapper;\n};\n\nmodule.exports.file = (path, options) => {\n\treturn new Promise((resolve, reject) => {\n\t\tconst stream = fs.createReadStream(path);\n\t\tstream.on('error', reject);\n\n\t\tconst gzipStream = stream.pipe(module.exports.stream(options));\n\t\tgzipStream.on('error', reject);\n\t\tgzipStream.on('gzip-size', resolve);\n\t});\n};\n\nmodule.exports.fileSync = (path, options) => module.exports.sync(fs.readFileSync(path), options);\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}