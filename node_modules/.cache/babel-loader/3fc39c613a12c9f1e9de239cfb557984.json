{"ast":null,"code":"/**\n * @fileoverview Enforce autoFocus prop is not used.\n * @author Ethan Cohen <@evcohen>\n */\n// -----------------------------------------------------------------------------\n// Requirements\n// -----------------------------------------------------------------------------\nimport { RuleTester } from 'eslint';\nimport parserOptionsMapper from '../../__util__/parserOptionsMapper';\nimport rule from '../../../src/rules/no-autofocus'; // -----------------------------------------------------------------------------\n// Tests\n// -----------------------------------------------------------------------------\n\nconst ruleTester = new RuleTester();\nconst expectedError = {\n  message: 'The autoFocus prop should not be used, as it can reduce usability and accessibility for users.',\n  type: 'JSXAttribute'\n};\nconst ignoreNonDOMSchema = [{\n  ignoreNonDOM: true\n}];\nconst componentsSettings = {\n  'jsx-a11y': {\n    components: {\n      Button: 'button'\n    }\n  }\n};\nruleTester.run('no-autofocus', rule, {\n  valid: [{\n    code: '<div />;'\n  }, {\n    code: '<div autofocus />;'\n  }, {\n    code: '<input autofocus=\"true\" />;'\n  }, {\n    code: '<Foo bar />'\n  }, {\n    code: '<Foo autoFocus />',\n    options: ignoreNonDOMSchema\n  }, {\n    code: '<div><div autofocus /></div>',\n    options: ignoreNonDOMSchema\n  }, {\n    code: '<Button />',\n    settings: componentsSettings\n  }, {\n    code: '<Button />',\n    options: ignoreNonDOMSchema,\n    settings: componentsSettings\n  }].map(parserOptionsMapper),\n  invalid: [{\n    code: '<div autoFocus />',\n    errors: [expectedError]\n  }, {\n    code: '<div autoFocus={true} />',\n    errors: [expectedError]\n  }, {\n    code: '<div autoFocus={false} />',\n    errors: [expectedError]\n  }, {\n    code: '<div autoFocus={undefined} />',\n    errors: [expectedError]\n  }, {\n    code: '<div autoFocus=\"true\" />',\n    errors: [expectedError]\n  }, {\n    code: '<div autoFocus=\"false\" />',\n    errors: [expectedError]\n  }, {\n    code: '<input autoFocus />',\n    errors: [expectedError]\n  }, {\n    code: '<Foo autoFocus />',\n    errors: [expectedError]\n  }, {\n    code: '<Button autoFocus />',\n    errors: [expectedError],\n    settings: componentsSettings\n  }, {\n    code: '<Button autoFocus />',\n    errors: [expectedError],\n    options: ignoreNonDOMSchema,\n    settings: componentsSettings\n  }].map(parserOptionsMapper)\n});","map":{"version":3,"names":["RuleTester","parserOptionsMapper","rule","ruleTester","expectedError","message","type","ignoreNonDOMSchema","ignoreNonDOM","componentsSettings","components","Button","run","valid","code","options","settings","map","invalid","errors"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/eslint-plugin-jsx-a11y/__tests__/src/rules/no-autofocus-test.js"],"sourcesContent":["/**\n * @fileoverview Enforce autoFocus prop is not used.\n * @author Ethan Cohen <@evcohen>\n */\n\n// -----------------------------------------------------------------------------\n// Requirements\n// -----------------------------------------------------------------------------\n\nimport { RuleTester } from 'eslint';\nimport parserOptionsMapper from '../../__util__/parserOptionsMapper';\nimport rule from '../../../src/rules/no-autofocus';\n\n// -----------------------------------------------------------------------------\n// Tests\n// -----------------------------------------------------------------------------\n\nconst ruleTester = new RuleTester();\n\nconst expectedError = {\n  message: 'The autoFocus prop should not be used, as it can reduce usability and accessibility for users.',\n  type: 'JSXAttribute',\n};\n\nconst ignoreNonDOMSchema = [\n  {\n    ignoreNonDOM: true,\n  },\n];\n\nconst componentsSettings = {\n  'jsx-a11y': {\n    components: {\n      Button: 'button',\n    },\n  },\n};\n\nruleTester.run('no-autofocus', rule, {\n  valid: [\n    { code: '<div />;' },\n    { code: '<div autofocus />;' },\n    { code: '<input autofocus=\"true\" />;' },\n    { code: '<Foo bar />' },\n    { code: '<Foo autoFocus />', options: ignoreNonDOMSchema },\n    { code: '<div><div autofocus /></div>', options: ignoreNonDOMSchema },\n    { code: '<Button />', settings: componentsSettings },\n    { code: '<Button />', options: ignoreNonDOMSchema, settings: componentsSettings },\n  ].map(parserOptionsMapper),\n  invalid: [\n    { code: '<div autoFocus />', errors: [expectedError] },\n    { code: '<div autoFocus={true} />', errors: [expectedError] },\n    { code: '<div autoFocus={false} />', errors: [expectedError] },\n    { code: '<div autoFocus={undefined} />', errors: [expectedError] },\n    { code: '<div autoFocus=\"true\" />', errors: [expectedError] },\n    { code: '<div autoFocus=\"false\" />', errors: [expectedError] },\n    { code: '<input autoFocus />', errors: [expectedError] },\n    { code: '<Foo autoFocus />', errors: [expectedError] },\n    { code: '<Button autoFocus />', errors: [expectedError], settings: componentsSettings },\n    {\n      code: '<Button autoFocus />',\n      errors: [expectedError],\n      options: ignoreNonDOMSchema,\n      settings: componentsSettings,\n    },\n  ].map(parserOptionsMapper),\n});\n"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA,SAASA,UAAT,QAA2B,QAA3B;AACA,OAAOC,mBAAP,MAAgC,oCAAhC;AACA,OAAOC,IAAP,MAAiB,iCAAjB,C,CAEA;AACA;AACA;;AAEA,MAAMC,UAAU,GAAG,IAAIH,UAAJ,EAAnB;AAEA,MAAMI,aAAa,GAAG;EACpBC,OAAO,EAAE,gGADW;EAEpBC,IAAI,EAAE;AAFc,CAAtB;AAKA,MAAMC,kBAAkB,GAAG,CACzB;EACEC,YAAY,EAAE;AADhB,CADyB,CAA3B;AAMA,MAAMC,kBAAkB,GAAG;EACzB,YAAY;IACVC,UAAU,EAAE;MACVC,MAAM,EAAE;IADE;EADF;AADa,CAA3B;AAQAR,UAAU,CAACS,GAAX,CAAe,cAAf,EAA+BV,IAA/B,EAAqC;EACnCW,KAAK,EAAE,CACL;IAAEC,IAAI,EAAE;EAAR,CADK,EAEL;IAAEA,IAAI,EAAE;EAAR,CAFK,EAGL;IAAEA,IAAI,EAAE;EAAR,CAHK,EAIL;IAAEA,IAAI,EAAE;EAAR,CAJK,EAKL;IAAEA,IAAI,EAAE,mBAAR;IAA6BC,OAAO,EAAER;EAAtC,CALK,EAML;IAAEO,IAAI,EAAE,8BAAR;IAAwCC,OAAO,EAAER;EAAjD,CANK,EAOL;IAAEO,IAAI,EAAE,YAAR;IAAsBE,QAAQ,EAAEP;EAAhC,CAPK,EAQL;IAAEK,IAAI,EAAE,YAAR;IAAsBC,OAAO,EAAER,kBAA/B;IAAmDS,QAAQ,EAAEP;EAA7D,CARK,EASLQ,GATK,CASDhB,mBATC,CAD4B;EAWnCiB,OAAO,EAAE,CACP;IAAEJ,IAAI,EAAE,mBAAR;IAA6BK,MAAM,EAAE,CAACf,aAAD;EAArC,CADO,EAEP;IAAEU,IAAI,EAAE,0BAAR;IAAoCK,MAAM,EAAE,CAACf,aAAD;EAA5C,CAFO,EAGP;IAAEU,IAAI,EAAE,2BAAR;IAAqCK,MAAM,EAAE,CAACf,aAAD;EAA7C,CAHO,EAIP;IAAEU,IAAI,EAAE,+BAAR;IAAyCK,MAAM,EAAE,CAACf,aAAD;EAAjD,CAJO,EAKP;IAAEU,IAAI,EAAE,0BAAR;IAAoCK,MAAM,EAAE,CAACf,aAAD;EAA5C,CALO,EAMP;IAAEU,IAAI,EAAE,2BAAR;IAAqCK,MAAM,EAAE,CAACf,aAAD;EAA7C,CANO,EAOP;IAAEU,IAAI,EAAE,qBAAR;IAA+BK,MAAM,EAAE,CAACf,aAAD;EAAvC,CAPO,EAQP;IAAEU,IAAI,EAAE,mBAAR;IAA6BK,MAAM,EAAE,CAACf,aAAD;EAArC,CARO,EASP;IAAEU,IAAI,EAAE,sBAAR;IAAgCK,MAAM,EAAE,CAACf,aAAD,CAAxC;IAAyDY,QAAQ,EAAEP;EAAnE,CATO,EAUP;IACEK,IAAI,EAAE,sBADR;IAEEK,MAAM,EAAE,CAACf,aAAD,CAFV;IAGEW,OAAO,EAAER,kBAHX;IAIES,QAAQ,EAAEP;EAJZ,CAVO,EAgBPQ,GAhBO,CAgBHhB,mBAhBG;AAX0B,CAArC"},"metadata":{},"sourceType":"module"}