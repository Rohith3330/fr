{"ast":null,"code":"/**\n * Extractor function for an ArrayExpression type value node.\n * An array expression is an expression with [] syntax.\n *\n * @returns - An array of the extracted elements.\n */\nexport default function extractValueFromArrayExpression(value) {\n  // eslint-disable-next-line global-require\n  const getValue = require('.').default;\n\n  return value.elements.map(element => {\n    if (element === null) return undefined;\n    return getValue(element);\n  });\n}","map":{"version":3,"names":["extractValueFromArrayExpression","value","getValue","require","default","elements","map","element","undefined"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/jsx-ast-utils/src/values/expressions/ArrayExpression.js"],"sourcesContent":["/**\n * Extractor function for an ArrayExpression type value node.\n * An array expression is an expression with [] syntax.\n *\n * @returns - An array of the extracted elements.\n */\nexport default function extractValueFromArrayExpression(value) {\n  // eslint-disable-next-line global-require\n  const getValue = require('.').default;\n  return value.elements.map((element) => {\n    if (element === null) return undefined;\n    return getValue(element);\n  });\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASA,+BAAT,CAAyCC,KAAzC,EAAgD;EAC7D;EACA,MAAMC,QAAQ,GAAGC,OAAO,CAAC,GAAD,CAAP,CAAaC,OAA9B;;EACA,OAAOH,KAAK,CAACI,QAAN,CAAeC,GAAf,CAAoBC,OAAD,IAAa;IACrC,IAAIA,OAAO,KAAK,IAAhB,EAAsB,OAAOC,SAAP;IACtB,OAAON,QAAQ,CAACK,OAAD,CAAf;EACD,CAHM,CAAP;AAID"},"metadata":{},"sourceType":"module"}