{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar helperPluginUtils = require('@babel/helper-plugin-utils');\n\nvar syntaxObjectRestSpread = require('@babel/plugin-syntax-object-rest-spread');\n\nvar core = require('@babel/core');\n\nvar pluginTransformParameters = require('@babel/plugin-transform-parameters');\n\nvar helperCompilationTargets = require('@babel/helper-compilation-targets');\n\nfunction _interopDefaultLegacy(e) {\n  return e && typeof e === 'object' && 'default' in e ? e : {\n    'default': e\n  };\n}\n\nvar syntaxObjectRestSpread__default = /*#__PURE__*/_interopDefaultLegacy(syntaxObjectRestSpread);\n\nvar require$$0 = {\n  \"es6.array.copy-within\": {\n    chrome: \"45\",\n    opera: \"32\",\n    edge: \"12\",\n    firefox: \"32\",\n    safari: \"9\",\n    node: \"4\",\n    ios: \"9\",\n    samsung: \"5\",\n    rhino: \"1.7.13\",\n    electron: \"0.31\"\n  },\n  \"es6.array.every\": {\n    chrome: \"5\",\n    opera: \"10.10\",\n    edge: \"12\",\n    firefox: \"2\",\n    safari: \"3.1\",\n    node: \"0.4\",\n    ie: \"9\",\n    android: \"4\",\n    ios: \"6\",\n    phantom: \"1.9\",\n    samsung: \"1\",\n    rhino: \"1.7.13\",\n    electron: \"0.20\"\n  },\n  \"es6.array.fill\": {\n    chrome: \"45\",\n    opera: \"32\",\n    edge: \"12\",\n    firefox: \"31\",\n    safari: \"7.1\",\n    node: \"4\",\n    ios: \"8\",\n    samsung: \"5\",\n    rhino: \"1.7.13\",\n    electron: \"0.31\"\n  },\n  \"es6.array.filter\": {\n    chrome: \"51\",\n    opera: \"38\",\n    edge: \"13\",\n    firefox: \"48\",\n    safari: \"10\",\n    node: \"6.5\",\n    ios: \"10\",\n    samsung: \"5\",\n    electron: \"1.2\"\n  },\n  \"es6.array.find\": {\n    chrome: \"45\",\n    opera: \"32\",\n    edge: \"12\",\n    firefox: \"25\",\n    safari: \"7.1\",\n    node: \"4\",\n    ios: \"8\",\n    samsung: \"5\",\n    rhino: \"1.7.13\",\n    electron: \"0.31\"\n  },\n  \"es6.array.find-index\": {\n    chrome: \"45\",\n    opera: \"32\",\n    edge: \"12\",\n    firefox: \"25\",\n    safari: \"7.1\",\n    node: \"4\",\n    ios: \"8\",\n    samsung: \"5\",\n    rhino: \"1.7.13\",\n    electron: \"0.31\"\n  },\n  \"es7.array.flat-map\": {\n    chrome: \"69\",\n    opera: \"56\",\n    edge: \"79\",\n    firefox: \"62\",\n    safari: \"12\",\n    node: \"11\",\n    ios: \"12\",\n    samsung: \"10\",\n    electron: \"4.0\"\n  },\n  \"es6.array.for-each\": {\n    chrome: \"5\",\n    opera: \"10.10\",\n    edge: \"12\",\n    firefox: \"2\",\n    safari: \"3.1\",\n    node: \"0.4\",\n    ie: \"9\",\n    android: \"4\",\n    ios: \"6\",\n    phantom: \"1.9\",\n    samsung: \"1\",\n    rhino: \"1.7.13\",\n    electron: \"0.20\"\n  },\n  \"es6.array.from\": {\n    chrome: \"51\",\n    opera: \"38\",\n    edge: \"15\",\n    firefox: \"36\",\n    safari: \"10\",\n    node: \"6.5\",\n    ios: \"10\",\n    samsung: \"5\",\n    electron: \"1.2\"\n  },\n  \"es7.array.includes\": {\n    chrome: \"47\",\n    opera: \"34\",\n    edge: \"14\",\n    firefox: \"102\",\n    safari: \"10\",\n    node: \"6\",\n    ios: \"10\",\n    samsung: \"5\",\n    electron: \"0.36\"\n  },\n  \"es6.array.index-of\": {\n    chrome: \"5\",\n    opera: \"10.10\",\n    edge: \"12\",\n    firefox: \"2\",\n    safari: \"3.1\",\n    node: \"0.4\",\n    ie: \"9\",\n    android: \"4\",\n    ios: \"6\",\n    phantom: \"1.9\",\n    samsung: \"1\",\n    rhino: \"1.7.13\",\n    electron: \"0.20\"\n  },\n  \"es6.array.is-array\": {\n    chrome: \"5\",\n    opera: \"10.50\",\n    edge: \"12\",\n    firefox: \"4\",\n    safari: \"4\",\n    node: \"0.4\",\n    ie: \"9\",\n    android: \"4\",\n    ios: \"6\",\n    phantom: \"1.9\",\n    samsung: \"1\",\n    rhino: \"1.7.13\",\n    electron: \"0.20\"\n  },\n  \"es6.array.iterator\": {\n    chrome: \"66\",\n    opera: \"53\",\n    edge: \"12\",\n    firefox: \"60\",\n    safari: \"9\",\n    node: \"10\",\n    ios: \"9\",\n    samsung: \"9\",\n    rhino: \"1.7.13\",\n    electron: \"3.0\"\n  },\n  \"es6.array.last-index-of\": {\n    chrome: \"5\",\n    opera: \"10.10\",\n    edge: \"12\",\n    firefox: \"2\",\n    safari: \"3.1\",\n    node: \"0.4\",\n    ie: \"9\",\n    android: \"4\",\n    ios: \"6\",\n    phantom: \"1.9\",\n    samsung: \"1\",\n    rhino: \"1.7.13\",\n    electron: \"0.20\"\n  },\n  \"es6.array.map\": {\n    chrome: \"51\",\n    opera: \"38\",\n    edge: \"13\",\n    firefox: \"48\",\n    safari: \"10\",\n    node: \"6.5\",\n    ios: \"10\",\n    samsung: \"5\",\n    electron: \"1.2\"\n  },\n  \"es6.array.of\": {\n    chrome: \"45\",\n    opera: \"32\",\n    edge: \"12\",\n    firefox: \"25\",\n    safari: \"9\",\n    node: \"4\",\n    ios: \"9\",\n    samsung: \"5\",\n    rhino: \"1.7.13\",\n    electron: \"0.31\"\n  },\n  \"es6.array.reduce\": {\n    chrome: \"5\",\n    opera: \"10.50\",\n    edge: \"12\",\n    firefox: \"3\",\n    safari: \"4\",\n    node: \"0.4\",\n    ie: \"9\",\n    android: \"4\",\n    ios: \"6\",\n    phantom: \"1.9\",\n    samsung: \"1\",\n    rhino: \"1.7.13\",\n    electron: \"0.20\"\n  },\n  \"es6.array.reduce-right\": {\n    chrome: \"5\",\n    opera: \"10.50\",\n    edge: \"12\",\n    firefox: \"3\",\n    safari: \"4\",\n    node: \"0.4\",\n    ie: \"9\",\n    android: \"4\",\n    ios: \"6\",\n    phantom: \"1.9\",\n    samsung: \"1\",\n    rhino: \"1.7.13\",\n    electron: \"0.20\"\n  },\n  \"es6.array.slice\": {\n    chrome: \"51\",\n    opera: \"38\",\n    edge: \"13\",\n    firefox: \"48\",\n    safari: \"10\",\n    node: \"6.5\",\n    ios: \"10\",\n    samsung: \"5\",\n    electron: \"1.2\"\n  },\n  \"es6.array.some\": {\n    chrome: \"5\",\n    opera: \"10.10\",\n    edge: \"12\",\n    firefox: \"2\",\n    safari: \"3.1\",\n    node: \"0.4\",\n    ie: \"9\",\n    android: \"4\",\n    ios: \"6\",\n    phantom: \"1.9\",\n    samsung: \"1\",\n    rhino: \"1.7.13\",\n    electron: \"0.20\"\n  },\n  \"es6.array.sort\": {\n    chrome: \"63\",\n    opera: \"50\",\n    edge: \"12\",\n    firefox: \"5\",\n    safari: \"12\",\n    node: \"10\",\n    ie: \"9\",\n    ios: \"12\",\n    samsung: \"8\",\n    rhino: \"1.7.13\",\n    electron: \"3.0\"\n  },\n  \"es6.array.species\": {\n    chrome: \"51\",\n    opera: \"38\",\n    edge: \"13\",\n    firefox: \"48\",\n    safari: \"10\",\n    node: \"6.5\",\n    ios: \"10\",\n    samsung: \"5\",\n    electron: \"1.2\"\n  },\n  \"es6.date.now\": {\n    chrome: \"5\",\n    opera: \"10.50\",\n    edge: \"12\",\n    firefox: \"2\",\n    safari: \"4\",\n    node: \"0.4\",\n    ie: \"9\",\n    android: \"4\",\n    ios: \"6\",\n    phantom: \"1.9\",\n    samsung: \"1\",\n    rhino: \"1.7.13\",\n    electron: \"0.20\"\n  },\n  \"es6.date.to-iso-string\": {\n    chrome: \"5\",\n    opera: \"10.50\",\n    edge: \"12\",\n    firefox: \"3.5\",\n    safari: \"4\",\n    node: \"0.4\",\n    ie: \"9\",\n    android: \"4\",\n    ios: \"6\",\n    phantom: \"1.9\",\n    samsung: \"1\",\n    rhino: \"1.7.13\",\n    electron: \"0.20\"\n  },\n  \"es6.date.to-json\": {\n    chrome: \"5\",\n    opera: \"12.10\",\n    edge: \"12\",\n    firefox: \"4\",\n    safari: \"10\",\n    node: \"0.4\",\n    ie: \"9\",\n    android: \"4\",\n    ios: \"10\",\n    samsung: \"1\",\n    rhino: \"1.7.13\",\n    electron: \"0.20\"\n  },\n  \"es6.date.to-primitive\": {\n    chrome: \"47\",\n    opera: \"34\",\n    edge: \"15\",\n    firefox: \"44\",\n    safari: \"10\",\n    node: \"6\",\n    ios: \"10\",\n    samsung: \"5\",\n    electron: \"0.36\"\n  },\n  \"es6.date.to-string\": {\n    chrome: \"5\",\n    opera: \"10.50\",\n    edge: \"12\",\n    firefox: \"2\",\n    safari: \"3.1\",\n    node: \"0.4\",\n    ie: \"10\",\n    android: \"4\",\n    ios: \"6\",\n    phantom: \"1.9\",\n    samsung: \"1\",\n    rhino: \"1.7.13\",\n    electron: \"0.20\"\n  },\n  \"es6.function.bind\": {\n    chrome: \"7\",\n    opera: \"12\",\n    edge: \"12\",\n    firefox: \"4\",\n    safari: \"5.1\",\n    node: \"0.4\",\n    ie: \"9\",\n    android: \"4\",\n    ios: \"6\",\n    phantom: \"1.9\",\n    samsung: \"1\",\n    rhino: \"1.7.13\",\n    electron: \"0.20\"\n  },\n  \"es6.function.has-instance\": {\n    chrome: \"51\",\n    opera: \"38\",\n    edge: \"15\",\n    firefox: \"50\",\n    safari: \"10\",\n    node: \"6.5\",\n    ios: \"10\",\n    samsung: \"5\",\n    electron: \"1.2\"\n  },\n  \"es6.function.name\": {\n    chrome: \"5\",\n    opera: \"10.50\",\n    edge: \"14\",\n    firefox: \"2\",\n    safari: \"4\",\n    node: \"0.4\",\n    android: \"4\",\n    ios: \"6\",\n    phantom: \"1.9\",\n    samsung: \"1\",\n    rhino: \"1.7.13\",\n    electron: \"0.20\"\n  },\n  \"es6.map\": {\n    chrome: \"51\",\n    opera: \"38\",\n    edge: \"15\",\n    firefox: \"53\",\n    safari: \"10\",\n    node: \"6.5\",\n    ios: \"10\",\n    samsung: \"5\",\n    electron: \"1.2\"\n  },\n  \"es6.math.acosh\": {\n    chrome: \"38\",\n    opera: \"25\",\n    edge: \"12\",\n    firefox: \"25\",\n    safari: \"7.1\",\n    node: \"0.12\",\n    ios: \"8\",\n    samsung: \"3\",\n    rhino: \"1.7.13\",\n    electron: \"0.20\"\n  },\n  \"es6.math.asinh\": {\n    chrome: \"38\",\n    opera: \"25\",\n    edge: \"12\",\n    firefox: \"25\",\n    safari: \"7.1\",\n    node: \"0.12\",\n    ios: \"8\",\n    samsung: \"3\",\n    rhino: \"1.7.13\",\n    electron: \"0.20\"\n  },\n  \"es6.math.atanh\": {\n    chrome: \"38\",\n    opera: \"25\",\n    edge: \"12\",\n    firefox: \"25\",\n    safari: \"7.1\",\n    node: \"0.12\",\n    ios: \"8\",\n    samsung: \"3\",\n    rhino: \"1.7.13\",\n    electron: \"0.20\"\n  },\n  \"es6.math.cbrt\": {\n    chrome: \"38\",\n    opera: \"25\",\n    edge: \"12\",\n    firefox: \"25\",\n    safari: \"7.1\",\n    node: \"0.12\",\n    ios: \"8\",\n    samsung: \"3\",\n    rhino: \"1.7.13\",\n    electron: \"0.20\"\n  },\n  \"es6.math.clz32\": {\n    chrome: \"38\",\n    opera: \"25\",\n    edge: \"12\",\n    firefox: \"31\",\n    safari: \"9\",\n    node: \"0.12\",\n    ios: \"9\",\n    samsung: \"3\",\n    rhino: \"1.7.13\",\n    electron: \"0.20\"\n  },\n  \"es6.math.cosh\": {\n    chrome: \"38\",\n    opera: \"25\",\n    edge: \"12\",\n    firefox: \"25\",\n    safari: \"7.1\",\n    node: \"0.12\",\n    ios: \"8\",\n    samsung: \"3\",\n    rhino: \"1.7.13\",\n    electron: \"0.20\"\n  },\n  \"es6.math.expm1\": {\n    chrome: \"38\",\n    opera: \"25\",\n    edge: \"12\",\n    firefox: \"25\",\n    safari: \"7.1\",\n    node: \"0.12\",\n    ios: \"8\",\n    samsung: \"3\",\n    rhino: \"1.7.13\",\n    electron: \"0.20\"\n  },\n  \"es6.math.fround\": {\n    chrome: \"38\",\n    opera: \"25\",\n    edge: \"12\",\n    firefox: \"26\",\n    safari: \"7.1\",\n    node: \"0.12\",\n    ios: \"8\",\n    samsung: \"3\",\n    rhino: \"1.7.13\",\n    electron: \"0.20\"\n  },\n  \"es6.math.hypot\": {\n    chrome: \"38\",\n    opera: \"25\",\n    edge: \"12\",\n    firefox: \"27\",\n    safari: \"7.1\",\n    node: \"0.12\",\n    ios: \"8\",\n    samsung: \"3\",\n    rhino: \"1.7.13\",\n    electron: \"0.20\"\n  },\n  \"es6.math.imul\": {\n    chrome: \"30\",\n    opera: \"17\",\n    edge: \"12\",\n    firefox: \"23\",\n    safari: \"7\",\n    node: \"0.12\",\n    android: \"4.4\",\n    ios: \"7\",\n    samsung: \"2\",\n    rhino: \"1.7.13\",\n    electron: \"0.20\"\n  },\n  \"es6.math.log1p\": {\n    chrome: \"38\",\n    opera: \"25\",\n    edge: \"12\",\n    firefox: \"25\",\n    safari: \"7.1\",\n    node: \"0.12\",\n    ios: \"8\",\n    samsung: \"3\",\n    rhino: \"1.7.13\",\n    electron: \"0.20\"\n  },\n  \"es6.math.log10\": {\n    chrome: \"38\",\n    opera: \"25\",\n    edge: \"12\",\n    firefox: \"25\",\n    safari: \"7.1\",\n    node: \"0.12\",\n    ios: \"8\",\n    samsung: \"3\",\n    rhino: \"1.7.13\",\n    electron: \"0.20\"\n  },\n  \"es6.math.log2\": {\n    chrome: \"38\",\n    opera: \"25\",\n    edge: \"12\",\n    firefox: \"25\",\n    safari: \"7.1\",\n    node: \"0.12\",\n    ios: \"8\",\n    samsung: \"3\",\n    rhino: \"1.7.13\",\n    electron: \"0.20\"\n  },\n  \"es6.math.sign\": {\n    chrome: \"38\",\n    opera: \"25\",\n    edge: \"12\",\n    firefox: \"25\",\n    safari: \"9\",\n    node: \"0.12\",\n    ios: \"9\",\n    samsung: \"3\",\n    rhino: \"1.7.13\",\n    electron: \"0.20\"\n  },\n  \"es6.math.sinh\": {\n    chrome: \"38\",\n    opera: \"25\",\n    edge: \"12\",\n    firefox: \"25\",\n    safari: \"7.1\",\n    node: \"0.12\",\n    ios: \"8\",\n    samsung: \"3\",\n    rhino: \"1.7.13\",\n    electron: \"0.20\"\n  },\n  \"es6.math.tanh\": {\n    chrome: \"38\",\n    opera: \"25\",\n    edge: \"12\",\n    firefox: \"25\",\n    safari: \"7.1\",\n    node: \"0.12\",\n    ios: \"8\",\n    samsung: \"3\",\n    rhino: \"1.7.13\",\n    electron: \"0.20\"\n  },\n  \"es6.math.trunc\": {\n    chrome: \"38\",\n    opera: \"25\",\n    edge: \"12\",\n    firefox: \"25\",\n    safari: \"7.1\",\n    node: \"0.12\",\n    ios: \"8\",\n    samsung: \"3\",\n    rhino: \"1.7.13\",\n    electron: \"0.20\"\n  },\n  \"es6.number.constructor\": {\n    chrome: \"41\",\n    opera: \"28\",\n    edge: \"12\",\n    firefox: \"36\",\n    safari: \"9\",\n    node: \"4\",\n    ios: \"9\",\n    samsung: \"3.4\",\n    rhino: \"1.7.13\",\n    electron: \"0.21\"\n  },\n  \"es6.number.epsilon\": {\n    chrome: \"34\",\n    opera: \"21\",\n    edge: \"12\",\n    firefox: \"25\",\n    safari: \"9\",\n    node: \"0.12\",\n    ios: \"9\",\n    samsung: \"2\",\n    rhino: \"1.7.14\",\n    electron: \"0.20\"\n  },\n  \"es6.number.is-finite\": {\n    chrome: \"19\",\n    opera: \"15\",\n    edge: \"12\",\n    firefox: \"16\",\n    safari: \"9\",\n    node: \"0.8\",\n    android: \"4.1\",\n    ios: \"9\",\n    samsung: \"1.5\",\n    rhino: \"1.7.13\",\n    electron: \"0.20\"\n  },\n  \"es6.number.is-integer\": {\n    chrome: \"34\",\n    opera: \"21\",\n    edge: \"12\",\n    firefox: \"16\",\n    safari: \"9\",\n    node: \"0.12\",\n    ios: \"9\",\n    samsung: \"2\",\n    rhino: \"1.7.13\",\n    electron: \"0.20\"\n  },\n  \"es6.number.is-nan\": {\n    chrome: \"19\",\n    opera: \"15\",\n    edge: \"12\",\n    firefox: \"15\",\n    safari: \"9\",\n    node: \"0.8\",\n    android: \"4.1\",\n    ios: \"9\",\n    samsung: \"1.5\",\n    rhino: \"1.7.13\",\n    electron: \"0.20\"\n  },\n  \"es6.number.is-safe-integer\": {\n    chrome: \"34\",\n    opera: \"21\",\n    edge: \"12\",\n    firefox: \"32\",\n    safari: \"9\",\n    node: \"0.12\",\n    ios: \"9\",\n    samsung: \"2\",\n    rhino: \"1.7.13\",\n    electron: \"0.20\"\n  },\n  \"es6.number.max-safe-integer\": {\n    chrome: \"34\",\n    opera: \"21\",\n    edge: \"12\",\n    firefox: \"31\",\n    safari: \"9\",\n    node: \"0.12\",\n    ios: \"9\",\n    samsung: \"2\",\n    rhino: \"1.7.13\",\n    electron: \"0.20\"\n  },\n  \"es6.number.min-safe-integer\": {\n    chrome: \"34\",\n    opera: \"21\",\n    edge: \"12\",\n    firefox: \"31\",\n    safari: \"9\",\n    node: \"0.12\",\n    ios: \"9\",\n    samsung: \"2\",\n    rhino: \"1.7.13\",\n    electron: \"0.20\"\n  },\n  \"es6.number.parse-float\": {\n    chrome: \"34\",\n    opera: \"21\",\n    edge: \"12\",\n    firefox: \"25\",\n    safari: \"9\",\n    node: \"0.12\",\n    ios: \"9\",\n    samsung: \"2\",\n    rhino: \"1.7.14\",\n    electron: \"0.20\"\n  },\n  \"es6.number.parse-int\": {\n    chrome: \"34\",\n    opera: \"21\",\n    edge: \"12\",\n    firefox: \"25\",\n    safari: \"9\",\n    node: \"0.12\",\n    ios: \"9\",\n    samsung: \"2\",\n    rhino: \"1.7.14\",\n    electron: \"0.20\"\n  },\n  \"es6.object.assign\": {\n    chrome: \"49\",\n    opera: \"36\",\n    edge: \"13\",\n    firefox: \"36\",\n    safari: \"10\",\n    node: \"6\",\n    ios: \"10\",\n    samsung: \"5\",\n    electron: \"0.37\"\n  },\n  \"es6.object.create\": {\n    chrome: \"5\",\n    opera: \"12\",\n    edge: \"12\",\n    firefox: \"4\",\n    safari: \"4\",\n    node: \"0.4\",\n    ie: \"9\",\n    android: \"4\",\n    ios: \"6\",\n    phantom: \"1.9\",\n    samsung: \"1\",\n    rhino: \"1.7.13\",\n    electron: \"0.20\"\n  },\n  \"es7.object.define-getter\": {\n    chrome: \"62\",\n    opera: \"49\",\n    edge: \"16\",\n    firefox: \"48\",\n    safari: \"9\",\n    node: \"8.10\",\n    ios: \"9\",\n    samsung: \"8\",\n    electron: \"3.0\"\n  },\n  \"es7.object.define-setter\": {\n    chrome: \"62\",\n    opera: \"49\",\n    edge: \"16\",\n    firefox: \"48\",\n    safari: \"9\",\n    node: \"8.10\",\n    ios: \"9\",\n    samsung: \"8\",\n    electron: \"3.0\"\n  },\n  \"es6.object.define-property\": {\n    chrome: \"5\",\n    opera: \"12\",\n    edge: \"12\",\n    firefox: \"4\",\n    safari: \"5.1\",\n    node: \"0.4\",\n    ie: \"9\",\n    android: \"4\",\n    ios: \"6\",\n    phantom: \"1.9\",\n    samsung: \"1\",\n    rhino: \"1.7.13\",\n    electron: \"0.20\"\n  },\n  \"es6.object.define-properties\": {\n    chrome: \"5\",\n    opera: \"12\",\n    edge: \"12\",\n    firefox: \"4\",\n    safari: \"4\",\n    node: \"0.4\",\n    ie: \"9\",\n    android: \"4\",\n    ios: \"6\",\n    phantom: \"1.9\",\n    samsung: \"1\",\n    rhino: \"1.7.13\",\n    electron: \"0.20\"\n  },\n  \"es7.object.entries\": {\n    chrome: \"54\",\n    opera: \"41\",\n    edge: \"14\",\n    firefox: \"47\",\n    safari: \"10.1\",\n    node: \"7\",\n    ios: \"10.3\",\n    samsung: \"6\",\n    rhino: \"1.7.14\",\n    electron: \"1.4\"\n  },\n  \"es6.object.freeze\": {\n    chrome: \"44\",\n    opera: \"31\",\n    edge: \"12\",\n    firefox: \"35\",\n    safari: \"9\",\n    node: \"4\",\n    ios: \"9\",\n    samsung: \"4\",\n    rhino: \"1.7.13\",\n    electron: \"0.30\"\n  },\n  \"es6.object.get-own-property-descriptor\": {\n    chrome: \"44\",\n    opera: \"31\",\n    edge: \"12\",\n    firefox: \"35\",\n    safari: \"9\",\n    node: \"4\",\n    ios: \"9\",\n    samsung: \"4\",\n    rhino: \"1.7.13\",\n    electron: \"0.30\"\n  },\n  \"es7.object.get-own-property-descriptors\": {\n    chrome: \"54\",\n    opera: \"41\",\n    edge: \"15\",\n    firefox: \"50\",\n    safari: \"10.1\",\n    node: \"7\",\n    ios: \"10.3\",\n    samsung: \"6\",\n    electron: \"1.4\"\n  },\n  \"es6.object.get-own-property-names\": {\n    chrome: \"40\",\n    opera: \"27\",\n    edge: \"12\",\n    firefox: \"33\",\n    safari: \"9\",\n    node: \"4\",\n    ios: \"9\",\n    samsung: \"3.4\",\n    rhino: \"1.7.13\",\n    electron: \"0.21\"\n  },\n  \"es6.object.get-prototype-of\": {\n    chrome: \"44\",\n    opera: \"31\",\n    edge: \"12\",\n    firefox: \"35\",\n    safari: \"9\",\n    node: \"4\",\n    ios: \"9\",\n    samsung: \"4\",\n    rhino: \"1.7.13\",\n    electron: \"0.30\"\n  },\n  \"es7.object.lookup-getter\": {\n    chrome: \"62\",\n    opera: \"49\",\n    edge: \"79\",\n    firefox: \"36\",\n    safari: \"9\",\n    node: \"8.10\",\n    ios: \"9\",\n    samsung: \"8\",\n    electron: \"3.0\"\n  },\n  \"es7.object.lookup-setter\": {\n    chrome: \"62\",\n    opera: \"49\",\n    edge: \"79\",\n    firefox: \"36\",\n    safari: \"9\",\n    node: \"8.10\",\n    ios: \"9\",\n    samsung: \"8\",\n    electron: \"3.0\"\n  },\n  \"es6.object.prevent-extensions\": {\n    chrome: \"44\",\n    opera: \"31\",\n    edge: \"12\",\n    firefox: \"35\",\n    safari: \"9\",\n    node: \"4\",\n    ios: \"9\",\n    samsung: \"4\",\n    rhino: \"1.7.13\",\n    electron: \"0.30\"\n  },\n  \"es6.object.to-string\": {\n    chrome: \"57\",\n    opera: \"44\",\n    edge: \"15\",\n    firefox: \"51\",\n    safari: \"10\",\n    node: \"8\",\n    ios: \"10\",\n    samsung: \"7\",\n    electron: \"1.7\"\n  },\n  \"es6.object.is\": {\n    chrome: \"19\",\n    opera: \"15\",\n    edge: \"12\",\n    firefox: \"22\",\n    safari: \"9\",\n    node: \"0.8\",\n    android: \"4.1\",\n    ios: \"9\",\n    samsung: \"1.5\",\n    rhino: \"1.7.13\",\n    electron: \"0.20\"\n  },\n  \"es6.object.is-frozen\": {\n    chrome: \"44\",\n    opera: \"31\",\n    edge: \"12\",\n    firefox: \"35\",\n    safari: \"9\",\n    node: \"4\",\n    ios: \"9\",\n    samsung: \"4\",\n    rhino: \"1.7.13\",\n    electron: \"0.30\"\n  },\n  \"es6.object.is-sealed\": {\n    chrome: \"44\",\n    opera: \"31\",\n    edge: \"12\",\n    firefox: \"35\",\n    safari: \"9\",\n    node: \"4\",\n    ios: \"9\",\n    samsung: \"4\",\n    rhino: \"1.7.13\",\n    electron: \"0.30\"\n  },\n  \"es6.object.is-extensible\": {\n    chrome: \"44\",\n    opera: \"31\",\n    edge: \"12\",\n    firefox: \"35\",\n    safari: \"9\",\n    node: \"4\",\n    ios: \"9\",\n    samsung: \"4\",\n    rhino: \"1.7.13\",\n    electron: \"0.30\"\n  },\n  \"es6.object.keys\": {\n    chrome: \"40\",\n    opera: \"27\",\n    edge: \"12\",\n    firefox: \"35\",\n    safari: \"9\",\n    node: \"4\",\n    ios: \"9\",\n    samsung: \"3.4\",\n    rhino: \"1.7.13\",\n    electron: \"0.21\"\n  },\n  \"es6.object.seal\": {\n    chrome: \"44\",\n    opera: \"31\",\n    edge: \"12\",\n    firefox: \"35\",\n    safari: \"9\",\n    node: \"4\",\n    ios: \"9\",\n    samsung: \"4\",\n    rhino: \"1.7.13\",\n    electron: \"0.30\"\n  },\n  \"es6.object.set-prototype-of\": {\n    chrome: \"34\",\n    opera: \"21\",\n    edge: \"12\",\n    firefox: \"31\",\n    safari: \"9\",\n    node: \"0.12\",\n    ie: \"11\",\n    ios: \"9\",\n    samsung: \"2\",\n    rhino: \"1.7.13\",\n    electron: \"0.20\"\n  },\n  \"es7.object.values\": {\n    chrome: \"54\",\n    opera: \"41\",\n    edge: \"14\",\n    firefox: \"47\",\n    safari: \"10.1\",\n    node: \"7\",\n    ios: \"10.3\",\n    samsung: \"6\",\n    rhino: \"1.7.14\",\n    electron: \"1.4\"\n  },\n  \"es6.promise\": {\n    chrome: \"51\",\n    opera: \"38\",\n    edge: \"14\",\n    firefox: \"45\",\n    safari: \"10\",\n    node: \"6.5\",\n    ios: \"10\",\n    samsung: \"5\",\n    electron: \"1.2\"\n  },\n  \"es7.promise.finally\": {\n    chrome: \"63\",\n    opera: \"50\",\n    edge: \"18\",\n    firefox: \"58\",\n    safari: \"11.1\",\n    node: \"10\",\n    ios: \"11.3\",\n    samsung: \"8\",\n    electron: \"3.0\"\n  },\n  \"es6.reflect.apply\": {\n    chrome: \"49\",\n    opera: \"36\",\n    edge: \"12\",\n    firefox: \"42\",\n    safari: \"10\",\n    node: \"6\",\n    ios: \"10\",\n    samsung: \"5\",\n    electron: \"0.37\"\n  },\n  \"es6.reflect.construct\": {\n    chrome: \"49\",\n    opera: \"36\",\n    edge: \"13\",\n    firefox: \"49\",\n    safari: \"10\",\n    node: \"6\",\n    ios: \"10\",\n    samsung: \"5\",\n    electron: \"0.37\"\n  },\n  \"es6.reflect.define-property\": {\n    chrome: \"49\",\n    opera: \"36\",\n    edge: \"13\",\n    firefox: \"42\",\n    safari: \"10\",\n    node: \"6\",\n    ios: \"10\",\n    samsung: \"5\",\n    electron: \"0.37\"\n  },\n  \"es6.reflect.delete-property\": {\n    chrome: \"49\",\n    opera: \"36\",\n    edge: \"12\",\n    firefox: \"42\",\n    safari: \"10\",\n    node: \"6\",\n    ios: \"10\",\n    samsung: \"5\",\n    electron: \"0.37\"\n  },\n  \"es6.reflect.get\": {\n    chrome: \"49\",\n    opera: \"36\",\n    edge: \"12\",\n    firefox: \"42\",\n    safari: \"10\",\n    node: \"6\",\n    ios: \"10\",\n    samsung: \"5\",\n    electron: \"0.37\"\n  },\n  \"es6.reflect.get-own-property-descriptor\": {\n    chrome: \"49\",\n    opera: \"36\",\n    edge: \"12\",\n    firefox: \"42\",\n    safari: \"10\",\n    node: \"6\",\n    ios: \"10\",\n    samsung: \"5\",\n    electron: \"0.37\"\n  },\n  \"es6.reflect.get-prototype-of\": {\n    chrome: \"49\",\n    opera: \"36\",\n    edge: \"12\",\n    firefox: \"42\",\n    safari: \"10\",\n    node: \"6\",\n    ios: \"10\",\n    samsung: \"5\",\n    electron: \"0.37\"\n  },\n  \"es6.reflect.has\": {\n    chrome: \"49\",\n    opera: \"36\",\n    edge: \"12\",\n    firefox: \"42\",\n    safari: \"10\",\n    node: \"6\",\n    ios: \"10\",\n    samsung: \"5\",\n    electron: \"0.37\"\n  },\n  \"es6.reflect.is-extensible\": {\n    chrome: \"49\",\n    opera: \"36\",\n    edge: \"12\",\n    firefox: \"42\",\n    safari: \"10\",\n    node: \"6\",\n    ios: \"10\",\n    samsung: \"5\",\n    electron: \"0.37\"\n  },\n  \"es6.reflect.own-keys\": {\n    chrome: \"49\",\n    opera: \"36\",\n    edge: \"12\",\n    firefox: \"42\",\n    safari: \"10\",\n    node: \"6\",\n    ios: \"10\",\n    samsung: \"5\",\n    electron: \"0.37\"\n  },\n  \"es6.reflect.prevent-extensions\": {\n    chrome: \"49\",\n    opera: \"36\",\n    edge: \"12\",\n    firefox: \"42\",\n    safari: \"10\",\n    node: \"6\",\n    ios: \"10\",\n    samsung: \"5\",\n    electron: \"0.37\"\n  },\n  \"es6.reflect.set\": {\n    chrome: \"49\",\n    opera: \"36\",\n    edge: \"12\",\n    firefox: \"42\",\n    safari: \"10\",\n    node: \"6\",\n    ios: \"10\",\n    samsung: \"5\",\n    electron: \"0.37\"\n  },\n  \"es6.reflect.set-prototype-of\": {\n    chrome: \"49\",\n    opera: \"36\",\n    edge: \"12\",\n    firefox: \"42\",\n    safari: \"10\",\n    node: \"6\",\n    ios: \"10\",\n    samsung: \"5\",\n    electron: \"0.37\"\n  },\n  \"es6.regexp.constructor\": {\n    chrome: \"50\",\n    opera: \"37\",\n    edge: \"79\",\n    firefox: \"40\",\n    safari: \"10\",\n    node: \"6\",\n    ios: \"10\",\n    samsung: \"5\",\n    electron: \"1.1\"\n  },\n  \"es6.regexp.flags\": {\n    chrome: \"49\",\n    opera: \"36\",\n    edge: \"79\",\n    firefox: \"37\",\n    safari: \"9\",\n    node: \"6\",\n    ios: \"9\",\n    samsung: \"5\",\n    electron: \"0.37\"\n  },\n  \"es6.regexp.match\": {\n    chrome: \"50\",\n    opera: \"37\",\n    edge: \"79\",\n    firefox: \"49\",\n    safari: \"10\",\n    node: \"6\",\n    ios: \"10\",\n    samsung: \"5\",\n    rhino: \"1.7.13\",\n    electron: \"1.1\"\n  },\n  \"es6.regexp.replace\": {\n    chrome: \"50\",\n    opera: \"37\",\n    edge: \"79\",\n    firefox: \"49\",\n    safari: \"10\",\n    node: \"6\",\n    ios: \"10\",\n    samsung: \"5\",\n    electron: \"1.1\"\n  },\n  \"es6.regexp.split\": {\n    chrome: \"50\",\n    opera: \"37\",\n    edge: \"79\",\n    firefox: \"49\",\n    safari: \"10\",\n    node: \"6\",\n    ios: \"10\",\n    samsung: \"5\",\n    electron: \"1.1\"\n  },\n  \"es6.regexp.search\": {\n    chrome: \"50\",\n    opera: \"37\",\n    edge: \"79\",\n    firefox: \"49\",\n    safari: \"10\",\n    node: \"6\",\n    ios: \"10\",\n    samsung: \"5\",\n    rhino: \"1.7.13\",\n    electron: \"1.1\"\n  },\n  \"es6.regexp.to-string\": {\n    chrome: \"50\",\n    opera: \"37\",\n    edge: \"79\",\n    firefox: \"39\",\n    safari: \"10\",\n    node: \"6\",\n    ios: \"10\",\n    samsung: \"5\",\n    electron: \"1.1\"\n  },\n  \"es6.set\": {\n    chrome: \"51\",\n    opera: \"38\",\n    edge: \"15\",\n    firefox: \"53\",\n    safari: \"10\",\n    node: \"6.5\",\n    ios: \"10\",\n    samsung: \"5\",\n    electron: \"1.2\"\n  },\n  \"es6.symbol\": {\n    chrome: \"51\",\n    opera: \"38\",\n    edge: \"79\",\n    firefox: \"51\",\n    safari: \"10\",\n    node: \"6.5\",\n    ios: \"10\",\n    samsung: \"5\",\n    electron: \"1.2\"\n  },\n  \"es7.symbol.async-iterator\": {\n    chrome: \"63\",\n    opera: \"50\",\n    edge: \"79\",\n    firefox: \"57\",\n    safari: \"12\",\n    node: \"10\",\n    ios: \"12\",\n    samsung: \"8\",\n    electron: \"3.0\"\n  },\n  \"es6.string.anchor\": {\n    chrome: \"5\",\n    opera: \"15\",\n    edge: \"12\",\n    firefox: \"17\",\n    safari: \"6\",\n    node: \"0.4\",\n    android: \"4\",\n    ios: \"7\",\n    phantom: \"1.9\",\n    samsung: \"1\",\n    rhino: \"1.7.14\",\n    electron: \"0.20\"\n  },\n  \"es6.string.big\": {\n    chrome: \"5\",\n    opera: \"15\",\n    edge: \"12\",\n    firefox: \"17\",\n    safari: \"6\",\n    node: \"0.4\",\n    android: \"4\",\n    ios: \"7\",\n    phantom: \"1.9\",\n    samsung: \"1\",\n    rhino: \"1.7.14\",\n    electron: \"0.20\"\n  },\n  \"es6.string.blink\": {\n    chrome: \"5\",\n    opera: \"15\",\n    edge: \"12\",\n    firefox: \"17\",\n    safari: \"6\",\n    node: \"0.4\",\n    android: \"4\",\n    ios: \"7\",\n    phantom: \"1.9\",\n    samsung: \"1\",\n    rhino: \"1.7.14\",\n    electron: \"0.20\"\n  },\n  \"es6.string.bold\": {\n    chrome: \"5\",\n    opera: \"15\",\n    edge: \"12\",\n    firefox: \"17\",\n    safari: \"6\",\n    node: \"0.4\",\n    android: \"4\",\n    ios: \"7\",\n    phantom: \"1.9\",\n    samsung: \"1\",\n    rhino: \"1.7.14\",\n    electron: \"0.20\"\n  },\n  \"es6.string.code-point-at\": {\n    chrome: \"41\",\n    opera: \"28\",\n    edge: \"12\",\n    firefox: \"29\",\n    safari: \"9\",\n    node: \"4\",\n    ios: \"9\",\n    samsung: \"3.4\",\n    rhino: \"1.7.13\",\n    electron: \"0.21\"\n  },\n  \"es6.string.ends-with\": {\n    chrome: \"41\",\n    opera: \"28\",\n    edge: \"12\",\n    firefox: \"29\",\n    safari: \"9\",\n    node: \"4\",\n    ios: \"9\",\n    samsung: \"3.4\",\n    rhino: \"1.7.13\",\n    electron: \"0.21\"\n  },\n  \"es6.string.fixed\": {\n    chrome: \"5\",\n    opera: \"15\",\n    edge: \"12\",\n    firefox: \"17\",\n    safari: \"6\",\n    node: \"0.4\",\n    android: \"4\",\n    ios: \"7\",\n    phantom: \"1.9\",\n    samsung: \"1\",\n    rhino: \"1.7.14\",\n    electron: \"0.20\"\n  },\n  \"es6.string.fontcolor\": {\n    chrome: \"5\",\n    opera: \"15\",\n    edge: \"12\",\n    firefox: \"17\",\n    safari: \"6\",\n    node: \"0.4\",\n    android: \"4\",\n    ios: \"7\",\n    phantom: \"1.9\",\n    samsung: \"1\",\n    rhino: \"1.7.14\",\n    electron: \"0.20\"\n  },\n  \"es6.string.fontsize\": {\n    chrome: \"5\",\n    opera: \"15\",\n    edge: \"12\",\n    firefox: \"17\",\n    safari: \"6\",\n    node: \"0.4\",\n    android: \"4\",\n    ios: \"7\",\n    phantom: \"1.9\",\n    samsung: \"1\",\n    rhino: \"1.7.14\",\n    electron: \"0.20\"\n  },\n  \"es6.string.from-code-point\": {\n    chrome: \"41\",\n    opera: \"28\",\n    edge: \"12\",\n    firefox: \"29\",\n    safari: \"9\",\n    node: \"4\",\n    ios: \"9\",\n    samsung: \"3.4\",\n    rhino: \"1.7.13\",\n    electron: \"0.21\"\n  },\n  \"es6.string.includes\": {\n    chrome: \"41\",\n    opera: \"28\",\n    edge: \"12\",\n    firefox: \"40\",\n    safari: \"9\",\n    node: \"4\",\n    ios: \"9\",\n    samsung: \"3.4\",\n    rhino: \"1.7.13\",\n    electron: \"0.21\"\n  },\n  \"es6.string.italics\": {\n    chrome: \"5\",\n    opera: \"15\",\n    edge: \"12\",\n    firefox: \"17\",\n    safari: \"6\",\n    node: \"0.4\",\n    android: \"4\",\n    ios: \"7\",\n    phantom: \"1.9\",\n    samsung: \"1\",\n    rhino: \"1.7.14\",\n    electron: \"0.20\"\n  },\n  \"es6.string.iterator\": {\n    chrome: \"38\",\n    opera: \"25\",\n    edge: \"12\",\n    firefox: \"36\",\n    safari: \"9\",\n    node: \"0.12\",\n    ios: \"9\",\n    samsung: \"3\",\n    rhino: \"1.7.13\",\n    electron: \"0.20\"\n  },\n  \"es6.string.link\": {\n    chrome: \"5\",\n    opera: \"15\",\n    edge: \"12\",\n    firefox: \"17\",\n    safari: \"6\",\n    node: \"0.4\",\n    android: \"4\",\n    ios: \"7\",\n    phantom: \"1.9\",\n    samsung: \"1\",\n    rhino: \"1.7.14\",\n    electron: \"0.20\"\n  },\n  \"es7.string.pad-start\": {\n    chrome: \"57\",\n    opera: \"44\",\n    edge: \"15\",\n    firefox: \"48\",\n    safari: \"10\",\n    node: \"8\",\n    ios: \"10\",\n    samsung: \"7\",\n    rhino: \"1.7.13\",\n    electron: \"1.7\"\n  },\n  \"es7.string.pad-end\": {\n    chrome: \"57\",\n    opera: \"44\",\n    edge: \"15\",\n    firefox: \"48\",\n    safari: \"10\",\n    node: \"8\",\n    ios: \"10\",\n    samsung: \"7\",\n    rhino: \"1.7.13\",\n    electron: \"1.7\"\n  },\n  \"es6.string.raw\": {\n    chrome: \"41\",\n    opera: \"28\",\n    edge: \"12\",\n    firefox: \"34\",\n    safari: \"9\",\n    node: \"4\",\n    ios: \"9\",\n    samsung: \"3.4\",\n    rhino: \"1.7.14\",\n    electron: \"0.21\"\n  },\n  \"es6.string.repeat\": {\n    chrome: \"41\",\n    opera: \"28\",\n    edge: \"12\",\n    firefox: \"24\",\n    safari: \"9\",\n    node: \"4\",\n    ios: \"9\",\n    samsung: \"3.4\",\n    rhino: \"1.7.13\",\n    electron: \"0.21\"\n  },\n  \"es6.string.small\": {\n    chrome: \"5\",\n    opera: \"15\",\n    edge: \"12\",\n    firefox: \"17\",\n    safari: \"6\",\n    node: \"0.4\",\n    android: \"4\",\n    ios: \"7\",\n    phantom: \"1.9\",\n    samsung: \"1\",\n    rhino: \"1.7.14\",\n    electron: \"0.20\"\n  },\n  \"es6.string.starts-with\": {\n    chrome: \"41\",\n    opera: \"28\",\n    edge: \"12\",\n    firefox: \"29\",\n    safari: \"9\",\n    node: \"4\",\n    ios: \"9\",\n    samsung: \"3.4\",\n    rhino: \"1.7.13\",\n    electron: \"0.21\"\n  },\n  \"es6.string.strike\": {\n    chrome: \"5\",\n    opera: \"15\",\n    edge: \"12\",\n    firefox: \"17\",\n    safari: \"6\",\n    node: \"0.4\",\n    android: \"4\",\n    ios: \"7\",\n    phantom: \"1.9\",\n    samsung: \"1\",\n    rhino: \"1.7.14\",\n    electron: \"0.20\"\n  },\n  \"es6.string.sub\": {\n    chrome: \"5\",\n    opera: \"15\",\n    edge: \"12\",\n    firefox: \"17\",\n    safari: \"6\",\n    node: \"0.4\",\n    android: \"4\",\n    ios: \"7\",\n    phantom: \"1.9\",\n    samsung: \"1\",\n    rhino: \"1.7.14\",\n    electron: \"0.20\"\n  },\n  \"es6.string.sup\": {\n    chrome: \"5\",\n    opera: \"15\",\n    edge: \"12\",\n    firefox: \"17\",\n    safari: \"6\",\n    node: \"0.4\",\n    android: \"4\",\n    ios: \"7\",\n    phantom: \"1.9\",\n    samsung: \"1\",\n    rhino: \"1.7.14\",\n    electron: \"0.20\"\n  },\n  \"es6.string.trim\": {\n    chrome: \"5\",\n    opera: \"10.50\",\n    edge: \"12\",\n    firefox: \"3.5\",\n    safari: \"4\",\n    node: \"0.4\",\n    ie: \"9\",\n    android: \"4\",\n    ios: \"6\",\n    phantom: \"1.9\",\n    samsung: \"1\",\n    rhino: \"1.7.13\",\n    electron: \"0.20\"\n  },\n  \"es7.string.trim-left\": {\n    chrome: \"66\",\n    opera: \"53\",\n    edge: \"79\",\n    firefox: \"61\",\n    safari: \"12\",\n    node: \"10\",\n    ios: \"12\",\n    samsung: \"9\",\n    rhino: \"1.7.13\",\n    electron: \"3.0\"\n  },\n  \"es7.string.trim-right\": {\n    chrome: \"66\",\n    opera: \"53\",\n    edge: \"79\",\n    firefox: \"61\",\n    safari: \"12\",\n    node: \"10\",\n    ios: \"12\",\n    samsung: \"9\",\n    rhino: \"1.7.13\",\n    electron: \"3.0\"\n  },\n  \"es6.typed.array-buffer\": {\n    chrome: \"51\",\n    opera: \"38\",\n    edge: \"13\",\n    firefox: \"48\",\n    safari: \"10\",\n    node: \"6.5\",\n    ios: \"10\",\n    samsung: \"5\",\n    electron: \"1.2\"\n  },\n  \"es6.typed.data-view\": {\n    chrome: \"5\",\n    opera: \"12\",\n    edge: \"12\",\n    firefox: \"15\",\n    safari: \"5.1\",\n    node: \"0.4\",\n    ie: \"10\",\n    android: \"4\",\n    ios: \"6\",\n    phantom: \"1.9\",\n    samsung: \"1\",\n    rhino: \"1.7.13\",\n    electron: \"0.20\"\n  },\n  \"es6.typed.int8-array\": {\n    chrome: \"51\",\n    opera: \"38\",\n    edge: \"13\",\n    firefox: \"48\",\n    safari: \"10\",\n    node: \"6.5\",\n    ios: \"10\",\n    samsung: \"5\",\n    electron: \"1.2\"\n  },\n  \"es6.typed.uint8-array\": {\n    chrome: \"51\",\n    opera: \"38\",\n    edge: \"13\",\n    firefox: \"48\",\n    safari: \"10\",\n    node: \"6.5\",\n    ios: \"10\",\n    samsung: \"5\",\n    electron: \"1.2\"\n  },\n  \"es6.typed.uint8-clamped-array\": {\n    chrome: \"51\",\n    opera: \"38\",\n    edge: \"13\",\n    firefox: \"48\",\n    safari: \"10\",\n    node: \"6.5\",\n    ios: \"10\",\n    samsung: \"5\",\n    electron: \"1.2\"\n  },\n  \"es6.typed.int16-array\": {\n    chrome: \"51\",\n    opera: \"38\",\n    edge: \"13\",\n    firefox: \"48\",\n    safari: \"10\",\n    node: \"6.5\",\n    ios: \"10\",\n    samsung: \"5\",\n    electron: \"1.2\"\n  },\n  \"es6.typed.uint16-array\": {\n    chrome: \"51\",\n    opera: \"38\",\n    edge: \"13\",\n    firefox: \"48\",\n    safari: \"10\",\n    node: \"6.5\",\n    ios: \"10\",\n    samsung: \"5\",\n    electron: \"1.2\"\n  },\n  \"es6.typed.int32-array\": {\n    chrome: \"51\",\n    opera: \"38\",\n    edge: \"13\",\n    firefox: \"48\",\n    safari: \"10\",\n    node: \"6.5\",\n    ios: \"10\",\n    samsung: \"5\",\n    electron: \"1.2\"\n  },\n  \"es6.typed.uint32-array\": {\n    chrome: \"51\",\n    opera: \"38\",\n    edge: \"13\",\n    firefox: \"48\",\n    safari: \"10\",\n    node: \"6.5\",\n    ios: \"10\",\n    samsung: \"5\",\n    electron: \"1.2\"\n  },\n  \"es6.typed.float32-array\": {\n    chrome: \"51\",\n    opera: \"38\",\n    edge: \"13\",\n    firefox: \"48\",\n    safari: \"10\",\n    node: \"6.5\",\n    ios: \"10\",\n    samsung: \"5\",\n    electron: \"1.2\"\n  },\n  \"es6.typed.float64-array\": {\n    chrome: \"51\",\n    opera: \"38\",\n    edge: \"13\",\n    firefox: \"48\",\n    safari: \"10\",\n    node: \"6.5\",\n    ios: \"10\",\n    samsung: \"5\",\n    electron: \"1.2\"\n  },\n  \"es6.weak-map\": {\n    chrome: \"51\",\n    opera: \"38\",\n    edge: \"15\",\n    firefox: \"53\",\n    safari: \"9\",\n    node: \"6.5\",\n    ios: \"9\",\n    samsung: \"5\",\n    electron: \"1.2\"\n  },\n  \"es6.weak-set\": {\n    chrome: \"51\",\n    opera: \"38\",\n    edge: \"15\",\n    firefox: \"53\",\n    safari: \"9\",\n    node: \"6.5\",\n    ios: \"9\",\n    samsung: \"5\",\n    electron: \"1.2\"\n  }\n};\nvar corejs2BuiltIns = require$$0;\nconst {\n  isObjectProperty: isObjectProperty$1,\n  isArrayPattern,\n  isObjectPattern,\n  isAssignmentPattern: isAssignmentPattern$1,\n  isRestElement,\n  isIdentifier\n} = core.types;\n\nfunction shouldStoreRHSInTemporaryVariable(node) {\n  if (isArrayPattern(node)) {\n    const nonNullElements = node.elements.filter(element => element !== null);\n    if (nonNullElements.length > 1) return true;else return shouldStoreRHSInTemporaryVariable(nonNullElements[0]);\n  } else if (isObjectPattern(node)) {\n    const {\n      properties\n    } = node;\n    if (properties.length > 1) return true;else if (properties.length === 0) return false;else {\n      const firstProperty = properties[0];\n\n      if (isObjectProperty$1(firstProperty)) {\n        return shouldStoreRHSInTemporaryVariable(firstProperty.value);\n      } else {\n        return shouldStoreRHSInTemporaryVariable(firstProperty);\n      }\n    }\n  } else if (isAssignmentPattern$1(node)) {\n    return shouldStoreRHSInTemporaryVariable(node.left);\n  } else if (isRestElement(node)) {\n    if (isIdentifier(node.argument)) return true;\n    return shouldStoreRHSInTemporaryVariable(node.argument);\n  } else {\n    return false;\n  }\n}\n\nconst {\n  isAssignmentPattern,\n  isObjectProperty\n} = core.types;\n{\n  const node = core.types.identifier(\"a\");\n  const property = core.types.objectProperty(core.types.identifier(\"key\"), node);\n  const pattern = core.types.objectPattern([property]);\n  var ZERO_REFS = core.types.isReferenced(node, property, pattern) ? 1 : 0;\n}\nvar index = helperPluginUtils.declare((api, opts) => {\n  var _api$assumption, _api$assumption2, _api$assumption3, _api$assumption4;\n\n  api.assertVersion(7);\n  const targets = api.targets();\n  const supportsObjectAssign = !helperCompilationTargets.isRequired(\"es6.object.assign\", targets, {\n    compatData: corejs2BuiltIns\n  });\n  const {\n    useBuiltIns = supportsObjectAssign,\n    loose = false\n  } = opts;\n\n  if (typeof loose !== \"boolean\") {\n    throw new Error(\".loose must be a boolean, or undefined\");\n  }\n\n  const ignoreFunctionLength = (_api$assumption = api.assumption(\"ignoreFunctionLength\")) != null ? _api$assumption : loose;\n  const objectRestNoSymbols = (_api$assumption2 = api.assumption(\"objectRestNoSymbols\")) != null ? _api$assumption2 : loose;\n  const pureGetters = (_api$assumption3 = api.assumption(\"pureGetters\")) != null ? _api$assumption3 : loose;\n  const setSpreadProperties = (_api$assumption4 = api.assumption(\"setSpreadProperties\")) != null ? _api$assumption4 : loose;\n\n  function getExtendsHelper(file) {\n    return useBuiltIns ? core.types.memberExpression(core.types.identifier(\"Object\"), core.types.identifier(\"assign\")) : file.addHelper(\"extends\");\n  }\n\n  function hasRestElement(path) {\n    let foundRestElement = false;\n    visitRestElements(path, restElement => {\n      foundRestElement = true;\n      restElement.stop();\n    });\n    return foundRestElement;\n  }\n\n  function hasObjectPatternRestElement(path) {\n    let foundRestElement = false;\n    visitRestElements(path, restElement => {\n      if (restElement.parentPath.isObjectPattern()) {\n        foundRestElement = true;\n        restElement.stop();\n      }\n    });\n    return foundRestElement;\n  }\n\n  function visitRestElements(path, visitor) {\n    path.traverse({\n      Expression(path) {\n        const {\n          parent,\n          key\n        } = path;\n\n        if (isAssignmentPattern(parent) && key === \"right\" || isObjectProperty(parent) && parent.computed && key === \"key\") {\n          path.skip();\n        }\n      },\n\n      RestElement: visitor\n    });\n  }\n\n  function hasSpread(node) {\n    for (const prop of node.properties) {\n      if (core.types.isSpreadElement(prop)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  function extractNormalizedKeys(node) {\n    const props = node.properties;\n    const keys = [];\n    let allLiteral = true;\n    let hasTemplateLiteral = false;\n\n    for (const prop of props) {\n      if (core.types.isIdentifier(prop.key) && !prop.computed) {\n        keys.push(core.types.stringLiteral(prop.key.name));\n      } else if (core.types.isTemplateLiteral(prop.key)) {\n        keys.push(core.types.cloneNode(prop.key));\n        hasTemplateLiteral = true;\n      } else if (core.types.isLiteral(prop.key)) {\n        keys.push(core.types.stringLiteral(String(prop.key.value)));\n      } else {\n        keys.push(core.types.cloneNode(prop.key));\n        allLiteral = false;\n      }\n    }\n\n    return {\n      keys,\n      allLiteral,\n      hasTemplateLiteral\n    };\n  }\n\n  function replaceImpureComputedKeys(properties, scope) {\n    const impureComputedPropertyDeclarators = [];\n\n    for (const propPath of properties) {\n      const key = propPath.get(\"key\");\n\n      if (propPath.node.computed && !key.isPure()) {\n        const name = scope.generateUidBasedOnNode(key.node);\n        const declarator = core.types.variableDeclarator(core.types.identifier(name), key.node);\n        impureComputedPropertyDeclarators.push(declarator);\n        key.replaceWith(core.types.identifier(name));\n      }\n    }\n\n    return impureComputedPropertyDeclarators;\n  }\n\n  function removeUnusedExcludedKeys(path) {\n    const bindings = path.getOuterBindingIdentifierPaths();\n    Object.keys(bindings).forEach(bindingName => {\n      const bindingParentPath = bindings[bindingName].parentPath;\n\n      if (path.scope.getBinding(bindingName).references > ZERO_REFS || !bindingParentPath.isObjectProperty()) {\n        return;\n      }\n\n      bindingParentPath.remove();\n    });\n  }\n\n  function createObjectRest(path, file, objRef) {\n    const props = path.get(\"properties\");\n    const last = props[props.length - 1];\n    core.types.assertRestElement(last.node);\n    const restElement = core.types.cloneNode(last.node);\n    last.remove();\n    const impureComputedPropertyDeclarators = replaceImpureComputedKeys(path.get(\"properties\"), path.scope);\n    const {\n      keys,\n      allLiteral,\n      hasTemplateLiteral\n    } = extractNormalizedKeys(path.node);\n\n    if (keys.length === 0) {\n      return [impureComputedPropertyDeclarators, restElement.argument, core.types.callExpression(getExtendsHelper(file), [core.types.objectExpression([]), core.types.cloneNode(objRef)])];\n    }\n\n    let keyExpression;\n\n    if (!allLiteral) {\n      keyExpression = core.types.callExpression(core.types.memberExpression(core.types.arrayExpression(keys), core.types.identifier(\"map\")), [file.addHelper(\"toPropertyKey\")]);\n    } else {\n      keyExpression = core.types.arrayExpression(keys);\n\n      if (!hasTemplateLiteral && !core.types.isProgram(path.scope.block)) {\n        const program = path.findParent(path => path.isProgram());\n        const id = path.scope.generateUidIdentifier(\"excluded\");\n        program.scope.push({\n          id,\n          init: keyExpression,\n          kind: \"const\"\n        });\n        keyExpression = core.types.cloneNode(id);\n      }\n    }\n\n    return [impureComputedPropertyDeclarators, restElement.argument, core.types.callExpression(file.addHelper(`objectWithoutProperties${objectRestNoSymbols ? \"Loose\" : \"\"}`), [core.types.cloneNode(objRef), keyExpression])];\n  }\n\n  function replaceRestElement(parentPath, paramPath, container) {\n    if (paramPath.isAssignmentPattern()) {\n      replaceRestElement(parentPath, paramPath.get(\"left\"), container);\n      return;\n    }\n\n    if (paramPath.isArrayPattern() && hasRestElement(paramPath)) {\n      const elements = paramPath.get(\"elements\");\n\n      for (let i = 0; i < elements.length; i++) {\n        replaceRestElement(parentPath, elements[i], container);\n      }\n    }\n\n    if (paramPath.isObjectPattern() && hasRestElement(paramPath)) {\n      const uid = parentPath.scope.generateUidIdentifier(\"ref\");\n      const declar = core.types.variableDeclaration(\"let\", [core.types.variableDeclarator(paramPath.node, uid)]);\n\n      if (container) {\n        container.push(declar);\n      } else {\n        parentPath.ensureBlock();\n        parentPath.get(\"body\").unshiftContainer(\"body\", declar);\n      }\n\n      paramPath.replaceWith(core.types.cloneNode(uid));\n    }\n  }\n\n  return {\n    name: \"proposal-object-rest-spread\",\n    inherits: syntaxObjectRestSpread__default[\"default\"].default,\n    visitor: {\n      Function(path) {\n        const params = path.get(\"params\");\n        const paramsWithRestElement = new Set();\n        const idsInRestParams = new Set();\n\n        for (let i = 0; i < params.length; ++i) {\n          const param = params[i];\n\n          if (hasRestElement(param)) {\n            paramsWithRestElement.add(i);\n\n            for (const name of Object.keys(param.getBindingIdentifiers())) {\n              idsInRestParams.add(name);\n            }\n          }\n        }\n\n        let idInRest = false;\n\n        const IdentifierHandler = function (path, functionScope) {\n          const name = path.node.name;\n\n          if (path.scope.getBinding(name) === functionScope.getBinding(name) && idsInRestParams.has(name)) {\n            idInRest = true;\n            path.stop();\n          }\n        };\n\n        let i;\n\n        for (i = 0; i < params.length && !idInRest; ++i) {\n          const param = params[i];\n\n          if (!paramsWithRestElement.has(i)) {\n            if (param.isReferencedIdentifier() || param.isBindingIdentifier()) {\n              IdentifierHandler(param, path.scope);\n            } else {\n              param.traverse({\n                \"Scope|TypeAnnotation|TSTypeAnnotation\": path => path.skip(),\n                \"ReferencedIdentifier|BindingIdentifier\": IdentifierHandler\n              }, path.scope);\n            }\n          }\n        }\n\n        if (!idInRest) {\n          for (let i = 0; i < params.length; ++i) {\n            const param = params[i];\n\n            if (paramsWithRestElement.has(i)) {\n              replaceRestElement(path, param);\n            }\n          }\n        } else {\n          const shouldTransformParam = idx => idx >= i - 1 || paramsWithRestElement.has(idx);\n\n          pluginTransformParameters.convertFunctionParams(path, ignoreFunctionLength, shouldTransformParam, replaceRestElement);\n        }\n      },\n\n      VariableDeclarator(path, file) {\n        if (!path.get(\"id\").isObjectPattern()) {\n          return;\n        }\n\n        let insertionPath = path;\n        const originalPath = path;\n        visitRestElements(path.get(\"id\"), path => {\n          if (!path.parentPath.isObjectPattern()) {\n            return;\n          }\n\n          if (shouldStoreRHSInTemporaryVariable(originalPath.node.id) && !core.types.isIdentifier(originalPath.node.init)) {\n            const initRef = path.scope.generateUidIdentifierBasedOnNode(originalPath.node.init, \"ref\");\n            originalPath.insertBefore(core.types.variableDeclarator(initRef, originalPath.node.init));\n            originalPath.replaceWith(core.types.variableDeclarator(originalPath.node.id, core.types.cloneNode(initRef)));\n            return;\n          }\n\n          let ref = originalPath.node.init;\n          const refPropertyPath = [];\n          let kind;\n          path.findParent(path => {\n            if (path.isObjectProperty()) {\n              refPropertyPath.unshift(path);\n            } else if (path.isVariableDeclarator()) {\n              kind = path.parentPath.node.kind;\n              return true;\n            }\n          });\n          const impureObjRefComputedDeclarators = replaceImpureComputedKeys(refPropertyPath, path.scope);\n          refPropertyPath.forEach(prop => {\n            const {\n              node\n            } = prop;\n            ref = core.types.memberExpression(ref, core.types.cloneNode(node.key), node.computed || core.types.isLiteral(node.key));\n          });\n          const objectPatternPath = path.findParent(path => path.isObjectPattern());\n          const [impureComputedPropertyDeclarators, argument, callExpression] = createObjectRest(objectPatternPath, file, ref);\n\n          if (pureGetters) {\n            removeUnusedExcludedKeys(objectPatternPath);\n          }\n\n          core.types.assertIdentifier(argument);\n          insertionPath.insertBefore(impureComputedPropertyDeclarators);\n          insertionPath.insertBefore(impureObjRefComputedDeclarators);\n          insertionPath = insertionPath.insertAfter(core.types.variableDeclarator(argument, callExpression))[0];\n          path.scope.registerBinding(kind, insertionPath);\n\n          if (objectPatternPath.node.properties.length === 0) {\n            objectPatternPath.findParent(path => path.isObjectProperty() || path.isVariableDeclarator()).remove();\n          }\n        });\n      },\n\n      ExportNamedDeclaration(path) {\n        const declaration = path.get(\"declaration\");\n        if (!declaration.isVariableDeclaration()) return;\n        const hasRest = declaration.get(\"declarations\").some(path => hasObjectPatternRestElement(path.get(\"id\")));\n        if (!hasRest) return;\n        const specifiers = [];\n\n        for (const name of Object.keys(path.getOuterBindingIdentifiers(true))) {\n          specifiers.push(core.types.exportSpecifier(core.types.identifier(name), core.types.identifier(name)));\n        }\n\n        path.replaceWith(declaration.node);\n        path.insertAfter(core.types.exportNamedDeclaration(null, specifiers));\n      },\n\n      CatchClause(path) {\n        const paramPath = path.get(\"param\");\n        replaceRestElement(path, paramPath);\n      },\n\n      AssignmentExpression(path, file) {\n        const leftPath = path.get(\"left\");\n\n        if (leftPath.isObjectPattern() && hasRestElement(leftPath)) {\n          const nodes = [];\n          const refName = path.scope.generateUidBasedOnNode(path.node.right, \"ref\");\n          nodes.push(core.types.variableDeclaration(\"var\", [core.types.variableDeclarator(core.types.identifier(refName), path.node.right)]));\n          const [impureComputedPropertyDeclarators, argument, callExpression] = createObjectRest(leftPath, file, core.types.identifier(refName));\n\n          if (impureComputedPropertyDeclarators.length > 0) {\n            nodes.push(core.types.variableDeclaration(\"var\", impureComputedPropertyDeclarators));\n          }\n\n          const nodeWithoutSpread = core.types.cloneNode(path.node);\n          nodeWithoutSpread.right = core.types.identifier(refName);\n          nodes.push(core.types.expressionStatement(nodeWithoutSpread));\n          nodes.push(core.types.toStatement(core.types.assignmentExpression(\"=\", argument, callExpression)));\n          nodes.push(core.types.expressionStatement(core.types.identifier(refName)));\n          path.replaceWithMultiple(nodes);\n        }\n      },\n\n      ForXStatement(path) {\n        const {\n          node,\n          scope\n        } = path;\n        const leftPath = path.get(\"left\");\n        const left = node.left;\n\n        if (!hasObjectPatternRestElement(leftPath)) {\n          return;\n        }\n\n        if (!core.types.isVariableDeclaration(left)) {\n          const temp = scope.generateUidIdentifier(\"ref\");\n          node.left = core.types.variableDeclaration(\"var\", [core.types.variableDeclarator(temp)]);\n          path.ensureBlock();\n          const body = path.node.body;\n\n          if (body.body.length === 0 && path.isCompletionRecord()) {\n            body.body.unshift(core.types.expressionStatement(scope.buildUndefinedNode()));\n          }\n\n          body.body.unshift(core.types.expressionStatement(core.types.assignmentExpression(\"=\", left, core.types.cloneNode(temp))));\n        } else {\n          const pattern = left.declarations[0].id;\n          const key = scope.generateUidIdentifier(\"ref\");\n          node.left = core.types.variableDeclaration(left.kind, [core.types.variableDeclarator(key, null)]);\n          path.ensureBlock();\n          const body = node.body;\n          body.body.unshift(core.types.variableDeclaration(node.left.kind, [core.types.variableDeclarator(pattern, core.types.cloneNode(key))]));\n        }\n      },\n\n      ArrayPattern(path) {\n        const objectPatterns = [];\n        visitRestElements(path, path => {\n          if (!path.parentPath.isObjectPattern()) {\n            return;\n          }\n\n          const objectPattern = path.parentPath;\n          const uid = path.scope.generateUidIdentifier(\"ref\");\n          objectPatterns.push(core.types.variableDeclarator(objectPattern.node, uid));\n          objectPattern.replaceWith(core.types.cloneNode(uid));\n          path.skip();\n        });\n\n        if (objectPatterns.length > 0) {\n          const statementPath = path.getStatementParent();\n          const statementNode = statementPath.node;\n          const kind = statementNode.type === \"VariableDeclaration\" ? statementNode.kind : \"var\";\n          statementPath.insertAfter(core.types.variableDeclaration(kind, objectPatterns));\n        }\n      },\n\n      ObjectExpression(path, file) {\n        if (!hasSpread(path.node)) return;\n        let helper;\n\n        if (setSpreadProperties) {\n          helper = getExtendsHelper(file);\n        } else {\n          try {\n            helper = file.addHelper(\"objectSpread2\");\n          } catch (_unused) {\n            this.file.declarations[\"objectSpread2\"] = null;\n            helper = file.addHelper(\"objectSpread\");\n          }\n        }\n\n        let exp = null;\n        let props = [];\n\n        function make() {\n          const hadProps = props.length > 0;\n          const obj = core.types.objectExpression(props);\n          props = [];\n\n          if (!exp) {\n            exp = core.types.callExpression(helper, [obj]);\n            return;\n          }\n\n          if (pureGetters) {\n            if (hadProps) {\n              exp.arguments.push(obj);\n            }\n\n            return;\n          }\n\n          exp = core.types.callExpression(core.types.cloneNode(helper), [exp, ...(hadProps ? [core.types.objectExpression([]), obj] : [])]);\n        }\n\n        for (const prop of path.node.properties) {\n          if (core.types.isSpreadElement(prop)) {\n            make();\n            exp.arguments.push(prop.argument);\n          } else {\n            props.push(prop);\n          }\n        }\n\n        if (props.length) make();\n        path.replaceWith(exp);\n      }\n\n    }\n  };\n});\nexports[\"default\"] = index;","map":{"version":3,"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","names":["require$$0","isObjectProperty","isArrayPattern","isObjectPattern","isAssignmentPattern","isRestElement","isIdentifier","t","shouldStoreRHSInTemporaryVariable","node","nonNullElements","elements","filter","element","length","properties","firstProperty","value","left","argument","identifier","property","objectProperty","pattern","objectPattern","ZERO_REFS","isReferenced","declare","api","opts","assertVersion","targets","supportsObjectAssign","isRequired","compatData","useBuiltIns","loose","Error","ignoreFunctionLength","assumption","objectRestNoSymbols","pureGetters","setSpreadProperties","getExtendsHelper","file","memberExpression","addHelper","hasRestElement","path","foundRestElement","visitRestElements","restElement","stop","hasObjectPatternRestElement","parentPath","visitor","traverse","Expression","parent","key","computed","skip","RestElement","hasSpread","prop","isSpreadElement","extractNormalizedKeys","props","keys","allLiteral","hasTemplateLiteral","push","stringLiteral","name","isTemplateLiteral","cloneNode","isLiteral","String","replaceImpureComputedKeys","scope","impureComputedPropertyDeclarators","propPath","get","isPure","generateUidBasedOnNode","declarator","variableDeclarator","replaceWith","removeUnusedExcludedKeys","bindings","getOuterBindingIdentifierPaths","Object","forEach","bindingName","bindingParentPath","getBinding","references","remove","createObjectRest","objRef","last","assertRestElement","callExpression","objectExpression","keyExpression","arrayExpression","isProgram","block","program","findParent","id","generateUidIdentifier","init","kind","replaceRestElement","paramPath","container","i","uid","declar","variableDeclaration","ensureBlock","unshiftContainer","inherits","syntaxObjectRestSpread","default","Function","params","paramsWithRestElement","Set","idsInRestParams","param","add","getBindingIdentifiers","idInRest","IdentifierHandler","functionScope","has","isReferencedIdentifier","isBindingIdentifier","shouldTransformParam","idx","convertFunctionParams","VariableDeclarator","insertionPath","originalPath","initRef","generateUidIdentifierBasedOnNode","insertBefore","ref","refPropertyPath","unshift","isVariableDeclarator","impureObjRefComputedDeclarators","objectPatternPath","assertIdentifier","insertAfter","registerBinding","ExportNamedDeclaration","declaration","isVariableDeclaration","hasRest","some","specifiers","getOuterBindingIdentifiers","exportSpecifier","exportNamedDeclaration","CatchClause","AssignmentExpression","leftPath","nodes","refName","right","nodeWithoutSpread","expressionStatement","toStatement","assignmentExpression","replaceWithMultiple","ForXStatement","temp","body","isCompletionRecord","buildUndefinedNode","declarations","ArrayPattern","objectPatterns","statementPath","getStatementParent","statementNode","type","ObjectExpression","helper","_unused","exp","make","hadProps","obj","arguments"],"sources":["C:\\Users\\Rohith\\mern\\frontend\\node_modules\\@babel\\babel-compat-data\\corejs2-built-ins.js","C:\\Users\\Rohith\\mern\\frontend\\node_modules\\@babel\\plugin-proposal-object-rest-spread\\src\\shouldStoreRHSInTemporaryVariable.ts","C:\\Users\\Rohith\\mern\\frontend\\node_modules\\@babel\\plugin-proposal-object-rest-spread\\src\\index.ts"],"sourcesContent":["module.exports = require(\"./data/corejs2-built-ins.json\");\n","import { types as t } from \"@babel/core\";\n\nconst {\n  isObjectProperty,\n  isArrayPattern,\n  isObjectPattern,\n  isAssignmentPattern,\n  isRestElement,\n  isIdentifier,\n} = t;\n/**\n * This is a helper function to determine if we should create an intermediate variable\n * such that the RHS of an assignment is not duplicated.\n *\n * See https://github.com/babel/babel/pull/13711#issuecomment-914388382 for discussion\n * on further optimizations.\n */\nexport default function shouldStoreRHSInTemporaryVariable(\n  node: t.LVal,\n): boolean {\n  if (isArrayPattern(node)) {\n    const nonNullElements = node.elements.filter(element => element !== null);\n    if (nonNullElements.length > 1) return true;\n    else return shouldStoreRHSInTemporaryVariable(nonNullElements[0]);\n  } else if (isObjectPattern(node)) {\n    const { properties } = node;\n    if (properties.length > 1) return true;\n    else if (properties.length === 0) return false;\n    else {\n      const firstProperty = properties[0];\n      if (isObjectProperty(firstProperty)) {\n        // the value of the property must be an LVal\n        return shouldStoreRHSInTemporaryVariable(firstProperty.value as t.LVal);\n      } else {\n        return shouldStoreRHSInTemporaryVariable(firstProperty);\n      }\n    }\n  } else if (isAssignmentPattern(node)) {\n    return shouldStoreRHSInTemporaryVariable(node.left);\n  } else if (isRestElement(node)) {\n    if (isIdentifier(node.argument)) return true;\n    return shouldStoreRHSInTemporaryVariable(node.argument);\n  } else {\n    // node is Identifier or MemberExpression\n    return false;\n  }\n}\n","import { declare } from \"@babel/helper-plugin-utils\";\nimport syntaxObjectRestSpread from \"@babel/plugin-syntax-object-rest-spread\";\nimport { types as t } from \"@babel/core\";\nimport type { PluginPass } from \"@babel/core\";\nimport type { NodePath, Scope } from \"@babel/traverse\";\nimport { convertFunctionParams } from \"@babel/plugin-transform-parameters\";\nimport { isRequired } from \"@babel/helper-compilation-targets\";\nimport compatData from \"@babel/compat-data/corejs2-built-ins\";\nimport shouldStoreRHSInTemporaryVariable from \"./shouldStoreRHSInTemporaryVariable\";\n\nconst { isAssignmentPattern, isObjectProperty } = t;\n// @babel/types <=7.3.3 counts FOO as referenced in var { x: FOO }.\n// We need to detect this bug to know if \"unused\" means 0 or 1 references.\nif (!process.env.BABEL_8_BREAKING) {\n  const node = t.identifier(\"a\");\n  const property = t.objectProperty(t.identifier(\"key\"), node);\n  const pattern = t.objectPattern([property]);\n\n  // eslint-disable-next-line no-var\n  var ZERO_REFS = t.isReferenced(node, property, pattern) ? 1 : 0;\n}\n\ntype Param = NodePath<t.Function[\"params\"][number]>;\nexport interface Options {\n  useBuiltIns?: boolean;\n  loose?: boolean;\n}\n\nexport default declare((api, opts: Options) => {\n  api.assertVersion(7);\n\n  const targets = api.targets();\n  const supportsObjectAssign = !isRequired(\"es6.object.assign\", targets, {\n    compatData,\n  });\n\n  const { useBuiltIns = supportsObjectAssign, loose = false } = opts;\n\n  if (typeof loose !== \"boolean\") {\n    throw new Error(\".loose must be a boolean, or undefined\");\n  }\n\n  const ignoreFunctionLength = api.assumption(\"ignoreFunctionLength\") ?? loose;\n  const objectRestNoSymbols = api.assumption(\"objectRestNoSymbols\") ?? loose;\n  const pureGetters = api.assumption(\"pureGetters\") ?? loose;\n  const setSpreadProperties = api.assumption(\"setSpreadProperties\") ?? loose;\n\n  function getExtendsHelper(\n    file: PluginPass,\n  ): t.MemberExpression | t.Identifier {\n    return useBuiltIns\n      ? t.memberExpression(t.identifier(\"Object\"), t.identifier(\"assign\"))\n      : file.addHelper(\"extends\");\n  }\n\n  function hasRestElement(path: Param) {\n    let foundRestElement = false;\n    visitRestElements(path, restElement => {\n      foundRestElement = true;\n      restElement.stop();\n    });\n    return foundRestElement;\n  }\n\n  function hasObjectPatternRestElement(path: NodePath): boolean {\n    let foundRestElement = false;\n    visitRestElements(path, restElement => {\n      if (restElement.parentPath.isObjectPattern()) {\n        foundRestElement = true;\n        restElement.stop();\n      }\n    });\n    return foundRestElement;\n  }\n\n  function visitRestElements(\n    path: NodePath,\n    visitor: (path: NodePath<t.RestElement>) => any,\n  ) {\n    path.traverse({\n      Expression(path) {\n        const { parent, key } = path;\n        if (\n          (isAssignmentPattern(parent) && key === \"right\") ||\n          (isObjectProperty(parent) && parent.computed && key === \"key\")\n        ) {\n          path.skip();\n        }\n      },\n      RestElement: visitor,\n    });\n  }\n\n  function hasSpread(node: t.ObjectExpression): boolean {\n    for (const prop of node.properties) {\n      if (t.isSpreadElement(prop)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  // returns an array of all keys of an object, and a status flag indicating if all extracted keys\n  // were converted to stringLiterals or not\n  // e.g. extracts {keys: [\"a\", \"b\", \"3\", ++x], allLiteral: false }\n  // from ast of {a: \"foo\", b, 3: \"bar\", [++x]: \"baz\"}\n  function extractNormalizedKeys(node: t.ObjectPattern) {\n    // RestElement has been removed in createObjectRest\n    const props = node.properties as t.ObjectProperty[];\n    const keys: t.Expression[] = [];\n    let allLiteral = true;\n    let hasTemplateLiteral = false;\n\n    for (const prop of props) {\n      if (t.isIdentifier(prop.key) && !prop.computed) {\n        // since a key {a: 3} is equivalent to {\"a\": 3}, use the latter\n        keys.push(t.stringLiteral(prop.key.name));\n      } else if (t.isTemplateLiteral(prop.key)) {\n        keys.push(t.cloneNode(prop.key));\n        hasTemplateLiteral = true;\n      } else if (t.isLiteral(prop.key)) {\n        keys.push(\n          t.stringLiteral(\n            String(\n              // @ts-expect-error prop.key can not be a NullLiteral\n              prop.key.value,\n            ),\n          ),\n        );\n      } else {\n        // @ts-expect-error private name has been handled by destructuring-private\n        keys.push(t.cloneNode(prop.key));\n        allLiteral = false;\n      }\n    }\n\n    return { keys, allLiteral, hasTemplateLiteral };\n  }\n\n  // replaces impure computed keys with new identifiers\n  // and returns variable declarators of these new identifiers\n  function replaceImpureComputedKeys(\n    properties: NodePath<t.ObjectProperty>[],\n    scope: Scope,\n  ) {\n    const impureComputedPropertyDeclarators: t.VariableDeclarator[] = [];\n    for (const propPath of properties) {\n      // PrivateName is handled in destructuring-private plugin\n      const key = propPath.get(\"key\") as NodePath<t.Expression>;\n      if (propPath.node.computed && !key.isPure()) {\n        const name = scope.generateUidBasedOnNode(key.node);\n        const declarator = t.variableDeclarator(t.identifier(name), key.node);\n        impureComputedPropertyDeclarators.push(declarator);\n        key.replaceWith(t.identifier(name));\n      }\n    }\n    return impureComputedPropertyDeclarators;\n  }\n\n  function removeUnusedExcludedKeys(path: NodePath<t.ObjectPattern>): void {\n    const bindings = path.getOuterBindingIdentifierPaths();\n\n    Object.keys(bindings).forEach(bindingName => {\n      const bindingParentPath = bindings[bindingName].parentPath;\n      if (\n        path.scope.getBinding(bindingName).references >\n          (process.env.BABEL_8_BREAKING ? 0 : ZERO_REFS) ||\n        !bindingParentPath.isObjectProperty()\n      ) {\n        return;\n      }\n      bindingParentPath.remove();\n    });\n  }\n\n  //expects path to an object pattern\n  function createObjectRest(\n    path: NodePath<t.ObjectPattern>,\n    file: PluginPass,\n    objRef: t.Identifier | t.MemberExpression,\n  ): [t.VariableDeclarator[], t.LVal, t.CallExpression] {\n    const props = path.get(\"properties\");\n    const last = props[props.length - 1];\n    t.assertRestElement(last.node);\n    const restElement = t.cloneNode(last.node);\n    last.remove();\n\n    const impureComputedPropertyDeclarators = replaceImpureComputedKeys(\n      path.get(\"properties\") as NodePath<t.ObjectProperty>[],\n      path.scope,\n    );\n    const { keys, allLiteral, hasTemplateLiteral } = extractNormalizedKeys(\n      path.node,\n    );\n\n    if (keys.length === 0) {\n      return [\n        impureComputedPropertyDeclarators,\n        restElement.argument,\n        t.callExpression(getExtendsHelper(file), [\n          t.objectExpression([]),\n          t.cloneNode(objRef),\n        ]),\n      ];\n    }\n\n    let keyExpression;\n    if (!allLiteral) {\n      // map to toPropertyKey to handle the possible non-string values\n      keyExpression = t.callExpression(\n        t.memberExpression(t.arrayExpression(keys), t.identifier(\"map\")),\n        [file.addHelper(\"toPropertyKey\")],\n      );\n    } else {\n      keyExpression = t.arrayExpression(keys);\n\n      if (!hasTemplateLiteral && !t.isProgram(path.scope.block)) {\n        // Hoist definition of excluded keys, so that it's not created each time.\n        const program = path.findParent(path => path.isProgram());\n        const id = path.scope.generateUidIdentifier(\"excluded\");\n\n        program.scope.push({\n          id,\n          init: keyExpression,\n          kind: \"const\",\n        });\n\n        keyExpression = t.cloneNode(id);\n      }\n    }\n\n    return [\n      impureComputedPropertyDeclarators,\n      restElement.argument,\n      t.callExpression(\n        file.addHelper(\n          `objectWithoutProperties${objectRestNoSymbols ? \"Loose\" : \"\"}`,\n        ),\n        [t.cloneNode(objRef), keyExpression],\n      ),\n    ];\n  }\n\n  function replaceRestElement(\n    parentPath: NodePath<t.Function | t.CatchClause>,\n    paramPath: NodePath<\n      t.Function[\"params\"][number] | t.AssignmentPattern[\"left\"]\n    >,\n    container?: t.VariableDeclaration[],\n  ): void {\n    if (paramPath.isAssignmentPattern()) {\n      replaceRestElement(parentPath, paramPath.get(\"left\"), container);\n      return;\n    }\n\n    if (paramPath.isArrayPattern() && hasRestElement(paramPath)) {\n      const elements = paramPath.get(\"elements\");\n\n      for (let i = 0; i < elements.length; i++) {\n        replaceRestElement(parentPath, elements[i], container);\n      }\n    }\n\n    if (paramPath.isObjectPattern() && hasRestElement(paramPath)) {\n      const uid = parentPath.scope.generateUidIdentifier(\"ref\");\n\n      const declar = t.variableDeclaration(\"let\", [\n        t.variableDeclarator(paramPath.node, uid),\n      ]);\n\n      if (container) {\n        container.push(declar);\n      } else {\n        parentPath.ensureBlock();\n        parentPath.get(\"body\").unshiftContainer(\"body\", declar);\n      }\n      paramPath.replaceWith(t.cloneNode(uid));\n    }\n  }\n\n  return {\n    name: \"proposal-object-rest-spread\",\n    inherits: syntaxObjectRestSpread.default,\n\n    visitor: {\n      // function a({ b, ...c }) {}\n      Function(path) {\n        const params = path.get(\"params\");\n        const paramsWithRestElement = new Set<number>();\n        const idsInRestParams = new Set();\n        for (let i = 0; i < params.length; ++i) {\n          const param = params[i];\n          if (hasRestElement(param)) {\n            paramsWithRestElement.add(i);\n            for (const name of Object.keys(param.getBindingIdentifiers())) {\n              idsInRestParams.add(name);\n            }\n          }\n        }\n\n        // if true, a parameter exists that has an id in its initializer\n        // that is also an id bound in a rest parameter\n        // example: f({...R}, a = R)\n        let idInRest = false;\n\n        const IdentifierHandler = function (\n          path: NodePath<t.Identifier>,\n          functionScope: Scope,\n        ) {\n          const name = path.node.name;\n          if (\n            path.scope.getBinding(name) === functionScope.getBinding(name) &&\n            idsInRestParams.has(name)\n          ) {\n            idInRest = true;\n            path.stop();\n          }\n        };\n\n        let i: number;\n        for (i = 0; i < params.length && !idInRest; ++i) {\n          const param = params[i];\n          if (!paramsWithRestElement.has(i)) {\n            if (param.isReferencedIdentifier() || param.isBindingIdentifier()) {\n              IdentifierHandler(param, path.scope);\n            } else {\n              param.traverse(\n                {\n                  \"Scope|TypeAnnotation|TSTypeAnnotation\": path => path.skip(),\n                  \"ReferencedIdentifier|BindingIdentifier\": IdentifierHandler,\n                },\n                path.scope,\n              );\n            }\n          }\n        }\n\n        if (!idInRest) {\n          for (let i = 0; i < params.length; ++i) {\n            const param = params[i];\n            if (paramsWithRestElement.has(i)) {\n              replaceRestElement(path, param);\n            }\n          }\n        } else {\n          const shouldTransformParam = (idx: number) =>\n            idx >= i - 1 || paramsWithRestElement.has(idx);\n          convertFunctionParams(\n            path,\n            ignoreFunctionLength,\n            shouldTransformParam,\n            replaceRestElement,\n          );\n        }\n      },\n\n      // adapted from transform-destructuring/src/index.js#pushObjectRest\n      // const { a, ...b } = c;\n      VariableDeclarator(path, file) {\n        if (!path.get(\"id\").isObjectPattern()) {\n          return;\n        }\n\n        let insertionPath = path;\n        const originalPath = path;\n\n        visitRestElements(path.get(\"id\"), path => {\n          if (!path.parentPath.isObjectPattern()) {\n            // Return early if the parent is not an ObjectPattern, but\n            // (for example) an ArrayPattern or Function, because that\n            // means this RestElement is an not an object property.\n            return;\n          }\n\n          if (\n            // skip single-property case, e.g.\n            // const { ...x } = foo();\n            // since the RHS will not be duplicated\n            shouldStoreRHSInTemporaryVariable(originalPath.node.id) &&\n            !t.isIdentifier(originalPath.node.init)\n          ) {\n            // const { a, ...b } = foo();\n            // to avoid calling foo() twice, as a first step convert it to:\n            // const _foo = foo(),\n            //       { a, ...b } = _foo;\n            const initRef = path.scope.generateUidIdentifierBasedOnNode(\n              originalPath.node.init,\n              \"ref\",\n            );\n            // insert _foo = foo()\n            originalPath.insertBefore(\n              t.variableDeclarator(initRef, originalPath.node.init),\n            );\n            // replace foo() with _foo\n            originalPath.replaceWith(\n              t.variableDeclarator(originalPath.node.id, t.cloneNode(initRef)),\n            );\n\n            return;\n          }\n\n          let ref = originalPath.node.init;\n          const refPropertyPath: NodePath<t.ObjectProperty>[] = [];\n          let kind;\n\n          path.findParent((path: NodePath): boolean => {\n            if (path.isObjectProperty()) {\n              refPropertyPath.unshift(path);\n            } else if (path.isVariableDeclarator()) {\n              kind = (path.parentPath as NodePath<t.VariableDeclaration>).node\n                .kind;\n              return true;\n            }\n          });\n\n          const impureObjRefComputedDeclarators = replaceImpureComputedKeys(\n            refPropertyPath,\n            path.scope,\n          );\n          refPropertyPath.forEach(prop => {\n            const { node } = prop;\n            ref = t.memberExpression(\n              ref,\n              t.cloneNode(node.key),\n              node.computed || t.isLiteral(node.key),\n            );\n          });\n\n          //@ts-expect-error: findParent can not apply assertions on result shape\n          const objectPatternPath: NodePath<t.ObjectPattern> = path.findParent(\n            path => path.isObjectPattern(),\n          );\n\n          const [impureComputedPropertyDeclarators, argument, callExpression] =\n            createObjectRest(\n              objectPatternPath,\n              file,\n              ref as t.MemberExpression,\n            );\n\n          if (pureGetters) {\n            removeUnusedExcludedKeys(objectPatternPath);\n          }\n\n          t.assertIdentifier(argument);\n\n          insertionPath.insertBefore(impureComputedPropertyDeclarators);\n\n          insertionPath.insertBefore(impureObjRefComputedDeclarators);\n\n          insertionPath = insertionPath.insertAfter(\n            t.variableDeclarator(argument, callExpression),\n          )[0] as NodePath<t.VariableDeclarator>;\n\n          path.scope.registerBinding(kind, insertionPath);\n\n          if (objectPatternPath.node.properties.length === 0) {\n            objectPatternPath\n              .findParent(\n                path => path.isObjectProperty() || path.isVariableDeclarator(),\n              )\n              .remove();\n          }\n        });\n      },\n\n      // taken from transform-destructuring/src/index.js#visitor\n      // export var { a, ...b } = c;\n      ExportNamedDeclaration(path) {\n        const declaration = path.get(\"declaration\");\n        if (!declaration.isVariableDeclaration()) return;\n\n        const hasRest = declaration\n          .get(\"declarations\")\n          .some(path => hasObjectPatternRestElement(path.get(\"id\")));\n        if (!hasRest) return;\n\n        const specifiers = [];\n\n        for (const name of Object.keys(path.getOuterBindingIdentifiers(true))) {\n          specifiers.push(\n            t.exportSpecifier(t.identifier(name), t.identifier(name)),\n          );\n        }\n\n        // Split the declaration and export list into two declarations so that the variable\n        // declaration can be split up later without needing to worry about not being a\n        // top-level statement.\n        path.replaceWith(declaration.node);\n        path.insertAfter(t.exportNamedDeclaration(null, specifiers));\n      },\n\n      // try {} catch ({a, ...b}) {}\n      CatchClause(path) {\n        const paramPath = path.get(\"param\");\n        replaceRestElement(path, paramPath);\n      },\n\n      // ({a, ...b} = c);\n      AssignmentExpression(path, file) {\n        const leftPath = path.get(\"left\");\n        if (leftPath.isObjectPattern() && hasRestElement(leftPath)) {\n          const nodes = [];\n\n          const refName = path.scope.generateUidBasedOnNode(\n            path.node.right,\n            \"ref\",\n          );\n\n          nodes.push(\n            t.variableDeclaration(\"var\", [\n              t.variableDeclarator(t.identifier(refName), path.node.right),\n            ]),\n          );\n\n          const [impureComputedPropertyDeclarators, argument, callExpression] =\n            createObjectRest(leftPath, file, t.identifier(refName));\n\n          if (impureComputedPropertyDeclarators.length > 0) {\n            nodes.push(\n              t.variableDeclaration(\"var\", impureComputedPropertyDeclarators),\n            );\n          }\n\n          const nodeWithoutSpread = t.cloneNode(path.node);\n          nodeWithoutSpread.right = t.identifier(refName);\n          nodes.push(t.expressionStatement(nodeWithoutSpread));\n          nodes.push(\n            t.toStatement(\n              t.assignmentExpression(\"=\", argument, callExpression),\n            ),\n          );\n          nodes.push(t.expressionStatement(t.identifier(refName)));\n\n          path.replaceWithMultiple(nodes);\n        }\n      },\n\n      // taken from transform-destructuring/src/index.js#visitor\n      ForXStatement(path: NodePath<t.ForXStatement>) {\n        const { node, scope } = path;\n        const leftPath = path.get(\"left\");\n        const left = node.left;\n\n        if (!hasObjectPatternRestElement(leftPath)) {\n          return;\n        }\n\n        if (!t.isVariableDeclaration(left)) {\n          // for ({a, ...b} of []) {}\n          const temp = scope.generateUidIdentifier(\"ref\");\n\n          node.left = t.variableDeclaration(\"var\", [\n            t.variableDeclarator(temp),\n          ]);\n\n          path.ensureBlock();\n          const body = path.node.body;\n\n          if (body.body.length === 0 && path.isCompletionRecord()) {\n            body.body.unshift(\n              t.expressionStatement(scope.buildUndefinedNode()),\n            );\n          }\n\n          body.body.unshift(\n            t.expressionStatement(\n              t.assignmentExpression(\"=\", left, t.cloneNode(temp)),\n            ),\n          );\n        } else {\n          // for (var {a, ...b} of []) {}\n          const pattern = left.declarations[0].id;\n\n          const key = scope.generateUidIdentifier(\"ref\");\n          node.left = t.variableDeclaration(left.kind, [\n            t.variableDeclarator(key, null),\n          ]);\n\n          path.ensureBlock();\n          const body = node.body as t.BlockStatement;\n\n          body.body.unshift(\n            t.variableDeclaration(node.left.kind, [\n              t.variableDeclarator(pattern, t.cloneNode(key)),\n            ]),\n          );\n        }\n      },\n\n      // [{a, ...b}] = c;\n      ArrayPattern(path) {\n        const objectPatterns: t.VariableDeclarator[] = [];\n\n        visitRestElements(path, path => {\n          if (!path.parentPath.isObjectPattern()) {\n            // Return early if the parent is not an ObjectPattern, but\n            // (for example) an ArrayPattern or Function, because that\n            // means this RestElement is an not an object property.\n            return;\n          }\n\n          const objectPattern = path.parentPath;\n\n          const uid = path.scope.generateUidIdentifier(\"ref\");\n          objectPatterns.push(t.variableDeclarator(objectPattern.node, uid));\n\n          objectPattern.replaceWith(t.cloneNode(uid));\n          path.skip();\n        });\n\n        if (objectPatterns.length > 0) {\n          const statementPath = path.getStatementParent();\n          const statementNode = statementPath.node;\n          const kind =\n            statementNode.type === \"VariableDeclaration\"\n              ? statementNode.kind\n              : \"var\";\n          statementPath.insertAfter(\n            t.variableDeclaration(kind, objectPatterns),\n          );\n        }\n      },\n\n      // var a = { ...b, ...c }\n      ObjectExpression(path, file) {\n        if (!hasSpread(path.node)) return;\n\n        let helper: t.Identifier | t.MemberExpression;\n        if (setSpreadProperties) {\n          helper = getExtendsHelper(file);\n        } else {\n          try {\n            helper = file.addHelper(\"objectSpread2\");\n          } catch {\n            // TODO: This is needed to workaround https://github.com/babel/babel/issues/10187\n            // and https://github.com/babel/babel/issues/10179 for older @babel/core versions\n            // where #10187 isn't fixed.\n            this.file.declarations[\"objectSpread2\"] = null;\n\n            // objectSpread2 has been introduced in v7.5.0\n            // We have to maintain backward compatibility.\n            helper = file.addHelper(\"objectSpread\");\n          }\n        }\n\n        let exp: t.CallExpression = null;\n        let props: t.ObjectMember[] = [];\n\n        function make() {\n          const hadProps = props.length > 0;\n          const obj = t.objectExpression(props);\n          props = [];\n\n          if (!exp) {\n            exp = t.callExpression(helper, [obj]);\n            return;\n          }\n\n          // When we can assume that getters are pure and don't depend on\n          // the order of evaluation, we can avoid making multiple calls.\n          if (pureGetters) {\n            if (hadProps) {\n              exp.arguments.push(obj);\n            }\n            return;\n          }\n\n          exp = t.callExpression(t.cloneNode(helper), [\n            exp,\n            // If we have static props, we need to insert an empty object\n            // because the odd arguments are copied with [[Get]], not\n            // [[GetOwnProperty]]\n            ...(hadProps ? [t.objectExpression([]), obj] : []),\n          ]);\n        }\n\n        for (const prop of path.node.properties) {\n          if (t.isSpreadElement(prop)) {\n            make();\n            exp.arguments.push(prop.argument);\n          } else {\n            props.push(prop);\n          }\n        }\n\n        if (props.length) make();\n\n        path.replaceWith(exp);\n      },\n    },\n  };\n});\n"]},"metadata":{},"sourceType":"script"}