{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _utils = require(\"./utils\");\n\nconst toThrowMatchers = ['toThrow', 'toThrowError', 'toThrowErrorMatchingSnapshot', 'toThrowErrorMatchingInlineSnapshot'];\n\nconst isJestExpectToThrowCall = node => {\n  if (!(0, _utils.isExpectCall)(node)) {\n    return false;\n  }\n\n  const {\n    matcher\n  } = (0, _utils.parseExpectCall)(node);\n\n  if (!matcher) {\n    return false;\n  }\n\n  return !toThrowMatchers.includes(matcher.name);\n};\n\nconst baseRule = (() => {\n  try {\n    // eslint-disable-next-line @typescript-eslint/no-require-imports\n    const TSESLintPlugin = require('@typescript-eslint/eslint-plugin');\n\n    return TSESLintPlugin.rules['unbound-method'];\n  } catch (e) {\n    const error = e;\n\n    if (error.code === 'MODULE_NOT_FOUND') {\n      return null;\n    }\n\n    throw error;\n  }\n})();\n\nconst tryCreateBaseRule = context => {\n  try {\n    return baseRule === null || baseRule === void 0 ? void 0 : baseRule.create(context);\n  } catch {\n    return null;\n  }\n};\n\nconst DEFAULT_MESSAGE = 'This rule requires `@typescript-eslint/eslint-plugin`';\n\nvar _default = (0, _utils.createRule)({\n  defaultOptions: [{\n    ignoreStatic: false\n  }],\n  ...baseRule,\n  name: __filename,\n  meta: {\n    messages: {\n      unbound: DEFAULT_MESSAGE,\n      unboundWithoutThisAnnotation: DEFAULT_MESSAGE\n    },\n    schema: [],\n    type: 'problem',\n    ...(baseRule === null || baseRule === void 0 ? void 0 : baseRule.meta),\n    docs: {\n      category: 'Best Practices',\n      description: 'Enforces unbound methods are called with their expected scope',\n      requiresTypeChecking: true,\n      ...(baseRule === null || baseRule === void 0 ? void 0 : baseRule.meta.docs),\n      recommended: false\n    }\n  },\n\n  create(context) {\n    const baseSelectors = tryCreateBaseRule(context);\n\n    if (!baseSelectors) {\n      return {};\n    }\n\n    let inExpectToThrowCall = false;\n    return { ...baseSelectors,\n\n      CallExpression(node) {\n        inExpectToThrowCall = isJestExpectToThrowCall(node);\n      },\n\n      'CallExpression:exit'(node) {\n        if (inExpectToThrowCall && isJestExpectToThrowCall(node)) {\n          inExpectToThrowCall = false;\n        }\n      },\n\n      MemberExpression(node) {\n        var _baseSelectors$Member;\n\n        if (inExpectToThrowCall) {\n          return;\n        }\n\n        (_baseSelectors$Member = baseSelectors.MemberExpression) === null || _baseSelectors$Member === void 0 ? void 0 : _baseSelectors$Member.call(baseSelectors, node);\n      }\n\n    };\n  }\n\n});\n\nexports.default = _default;","map":{"version":3,"names":["Object","defineProperty","exports","value","default","_utils","require","toThrowMatchers","isJestExpectToThrowCall","node","isExpectCall","matcher","parseExpectCall","includes","name","baseRule","TSESLintPlugin","rules","e","error","code","tryCreateBaseRule","context","create","DEFAULT_MESSAGE","_default","createRule","defaultOptions","ignoreStatic","__filename","meta","messages","unbound","unboundWithoutThisAnnotation","schema","type","docs","category","description","requiresTypeChecking","recommended","baseSelectors","inExpectToThrowCall","CallExpression","MemberExpression","_baseSelectors$Member","call"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/eslint-plugin-jest/lib/rules/unbound-method.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _utils = require(\"./utils\");\n\nconst toThrowMatchers = ['toThrow', 'toThrowError', 'toThrowErrorMatchingSnapshot', 'toThrowErrorMatchingInlineSnapshot'];\n\nconst isJestExpectToThrowCall = node => {\n  if (!(0, _utils.isExpectCall)(node)) {\n    return false;\n  }\n\n  const {\n    matcher\n  } = (0, _utils.parseExpectCall)(node);\n\n  if (!matcher) {\n    return false;\n  }\n\n  return !toThrowMatchers.includes(matcher.name);\n};\n\nconst baseRule = (() => {\n  try {\n    // eslint-disable-next-line @typescript-eslint/no-require-imports\n    const TSESLintPlugin = require('@typescript-eslint/eslint-plugin');\n\n    return TSESLintPlugin.rules['unbound-method'];\n  } catch (e) {\n    const error = e;\n\n    if (error.code === 'MODULE_NOT_FOUND') {\n      return null;\n    }\n\n    throw error;\n  }\n})();\n\nconst tryCreateBaseRule = context => {\n  try {\n    return baseRule === null || baseRule === void 0 ? void 0 : baseRule.create(context);\n  } catch {\n    return null;\n  }\n};\n\nconst DEFAULT_MESSAGE = 'This rule requires `@typescript-eslint/eslint-plugin`';\n\nvar _default = (0, _utils.createRule)({\n  defaultOptions: [{\n    ignoreStatic: false\n  }],\n  ...baseRule,\n  name: __filename,\n  meta: {\n    messages: {\n      unbound: DEFAULT_MESSAGE,\n      unboundWithoutThisAnnotation: DEFAULT_MESSAGE\n    },\n    schema: [],\n    type: 'problem',\n    ...(baseRule === null || baseRule === void 0 ? void 0 : baseRule.meta),\n    docs: {\n      category: 'Best Practices',\n      description: 'Enforces unbound methods are called with their expected scope',\n      requiresTypeChecking: true,\n      ...(baseRule === null || baseRule === void 0 ? void 0 : baseRule.meta.docs),\n      recommended: false\n    }\n  },\n\n  create(context) {\n    const baseSelectors = tryCreateBaseRule(context);\n\n    if (!baseSelectors) {\n      return {};\n    }\n\n    let inExpectToThrowCall = false;\n    return { ...baseSelectors,\n\n      CallExpression(node) {\n        inExpectToThrowCall = isJestExpectToThrowCall(node);\n      },\n\n      'CallExpression:exit'(node) {\n        if (inExpectToThrowCall && isJestExpectToThrowCall(node)) {\n          inExpectToThrowCall = false;\n        }\n      },\n\n      MemberExpression(node) {\n        var _baseSelectors$Member;\n\n        if (inExpectToThrowCall) {\n          return;\n        }\n\n        (_baseSelectors$Member = baseSelectors.MemberExpression) === null || _baseSelectors$Member === void 0 ? void 0 : _baseSelectors$Member.call(baseSelectors, node);\n      }\n\n    };\n  }\n\n});\n\nexports.default = _default;"],"mappings":"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"},"metadata":{},"sourceType":"script"}