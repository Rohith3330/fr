{"ast":null,"code":"\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"C:/Users/Rohith/mern/frontend/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\n\nvar _toConsumableArray = require(\"C:/Users/Rohith/mern/frontend/node_modules/@babel/runtime/helpers/toConsumableArray.js\").default;\n\nvar _regeneratorRuntime = require(\"C:/Users/Rohith/mern/frontend/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime().mark(buildPresetChain),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime().mark(buildRootChain),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime().mark(loadFileChain),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime().mark(mergeExtendsChain),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime().mark(mergeChainOpts);\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.buildPresetChain = buildPresetChain;\nexports.buildPresetChainWalker = void 0;\nexports.buildRootChain = buildRootChain;\n\nfunction _path() {\n  var data = require(\"path\");\n\n  _path = function _path() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _debug() {\n  var data = require(\"debug\");\n\n  _debug = function _debug() {\n    return data;\n  };\n\n  return data;\n}\n\nvar _options = require(\"./validation/options\");\n\nvar _patternToRegex = require(\"./pattern-to-regex\");\n\nvar _printer = require(\"./printer\");\n\nvar _rewriteStackTrace = require(\"../errors/rewrite-stack-trace\");\n\nvar _configError = require(\"../errors/config-error\");\n\nvar _files = require(\"./files\");\n\nvar _caching = require(\"./caching\");\n\nvar _configDescriptors = require(\"./config-descriptors\");\n\nvar debug = _debug()(\"babel:config:config-chain\");\n\nfunction buildPresetChain(arg, context) {\n  var chain;\n  return _regeneratorRuntime().wrap(function buildPresetChain$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          return _context.delegateYield(buildPresetChainWalker(arg, context), \"t0\", 1);\n\n        case 1:\n          chain = _context.t0;\n\n          if (chain) {\n            _context.next = 4;\n            break;\n          }\n\n          return _context.abrupt(\"return\", null);\n\n        case 4:\n          return _context.abrupt(\"return\", {\n            plugins: dedupDescriptors(chain.plugins),\n            presets: dedupDescriptors(chain.presets),\n            options: chain.options.map(function (o) {\n              return normalizeOptions(o);\n            }),\n            files: new Set()\n          });\n\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}\n\nvar buildPresetChainWalker = makeChainWalker({\n  root: function root(preset) {\n    return loadPresetDescriptors(preset);\n  },\n  env: function env(preset, envName) {\n    return loadPresetEnvDescriptors(preset)(envName);\n  },\n  overrides: function overrides(preset, index) {\n    return loadPresetOverridesDescriptors(preset)(index);\n  },\n  overridesEnv: function overridesEnv(preset, index, envName) {\n    return loadPresetOverridesEnvDescriptors(preset)(index)(envName);\n  },\n  createLogger: function createLogger() {\n    return function () {};\n  }\n});\nexports.buildPresetChainWalker = buildPresetChainWalker;\nvar loadPresetDescriptors = (0, _caching.makeWeakCacheSync)(function (preset) {\n  return buildRootDescriptors(preset, preset.alias, _configDescriptors.createUncachedDescriptors);\n});\nvar loadPresetEnvDescriptors = (0, _caching.makeWeakCacheSync)(function (preset) {\n  return (0, _caching.makeStrongCacheSync)(function (envName) {\n    return buildEnvDescriptors(preset, preset.alias, _configDescriptors.createUncachedDescriptors, envName);\n  });\n});\nvar loadPresetOverridesDescriptors = (0, _caching.makeWeakCacheSync)(function (preset) {\n  return (0, _caching.makeStrongCacheSync)(function (index) {\n    return buildOverrideDescriptors(preset, preset.alias, _configDescriptors.createUncachedDescriptors, index);\n  });\n});\nvar loadPresetOverridesEnvDescriptors = (0, _caching.makeWeakCacheSync)(function (preset) {\n  return (0, _caching.makeStrongCacheSync)(function (index) {\n    return (0, _caching.makeStrongCacheSync)(function (envName) {\n      return buildOverrideEnvDescriptors(preset, preset.alias, _configDescriptors.createUncachedDescriptors, index, envName);\n    });\n  });\n});\n\nfunction buildRootChain(opts, context) {\n  var configReport, babelRcReport, programmaticLogger, programmaticChain, programmaticReport, configFile, babelrc, babelrcRoots, babelrcRootsDirectory, configFileChain, configFileLogger, validatedFile, result, ignoreFile, babelrcFile, isIgnored, fileChain, pkgData, _yield, _validatedFile, babelrcLogger, _result, chain;\n\n  return _regeneratorRuntime().wrap(function buildRootChain$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          programmaticLogger = new _printer.ConfigPrinter();\n          return _context2.delegateYield(loadProgrammaticChain({\n            options: opts,\n            dirname: context.cwd\n          }, context, undefined, programmaticLogger), \"t0\", 2);\n\n        case 2:\n          programmaticChain = _context2.t0;\n\n          if (programmaticChain) {\n            _context2.next = 5;\n            break;\n          }\n\n          return _context2.abrupt(\"return\", null);\n\n        case 5:\n          return _context2.delegateYield(programmaticLogger.output(), \"t1\", 6);\n\n        case 6:\n          programmaticReport = _context2.t1;\n\n          if (!(typeof opts.configFile === \"string\")) {\n            _context2.next = 12;\n            break;\n          }\n\n          return _context2.delegateYield((0, _files.loadConfig)(opts.configFile, context.cwd, context.envName, context.caller), \"t2\", 9);\n\n        case 9:\n          configFile = _context2.t2;\n          _context2.next = 15;\n          break;\n\n        case 12:\n          if (!(opts.configFile !== false)) {\n            _context2.next = 15;\n            break;\n          }\n\n          return _context2.delegateYield((0, _files.findRootConfig)(context.root, context.envName, context.caller), \"t3\", 14);\n\n        case 14:\n          configFile = _context2.t3;\n\n        case 15:\n          babelrc = opts.babelrc, babelrcRoots = opts.babelrcRoots;\n          babelrcRootsDirectory = context.cwd;\n          configFileChain = emptyChain();\n          configFileLogger = new _printer.ConfigPrinter();\n\n          if (!configFile) {\n            _context2.next = 30;\n            break;\n          }\n\n          validatedFile = validateConfigFile(configFile);\n          return _context2.delegateYield(loadFileChain(validatedFile, context, undefined, configFileLogger), \"t4\", 22);\n\n        case 22:\n          result = _context2.t4;\n\n          if (result) {\n            _context2.next = 25;\n            break;\n          }\n\n          return _context2.abrupt(\"return\", null);\n\n        case 25:\n          return _context2.delegateYield(configFileLogger.output(), \"t5\", 26);\n\n        case 26:\n          configReport = _context2.t5;\n\n          if (babelrc === undefined) {\n            babelrc = validatedFile.options.babelrc;\n          }\n\n          if (babelrcRoots === undefined) {\n            babelrcRootsDirectory = validatedFile.dirname;\n            babelrcRoots = validatedFile.options.babelrcRoots;\n          }\n\n          mergeChain(configFileChain, result);\n\n        case 30:\n          isIgnored = false;\n          fileChain = emptyChain();\n\n          if (!((babelrc === true || babelrc === undefined) && typeof context.filename === \"string\")) {\n            _context2.next = 55;\n            break;\n          }\n\n          return _context2.delegateYield((0, _files.findPackageData)(context.filename), \"t6\", 34);\n\n        case 34:\n          pkgData = _context2.t6;\n\n          if (!(pkgData && babelrcLoadEnabled(context, pkgData, babelrcRoots, babelrcRootsDirectory))) {\n            _context2.next = 55;\n            break;\n          }\n\n          return _context2.delegateYield((0, _files.findRelativeConfig)(pkgData, context.envName, context.caller), \"t7\", 37);\n\n        case 37:\n          _yield = _context2.t7;\n          ignoreFile = _yield.ignore;\n          babelrcFile = _yield.config;\n\n          if (ignoreFile) {\n            fileChain.files.add(ignoreFile.filepath);\n          }\n\n          if (ignoreFile && shouldIgnore(context, ignoreFile.ignore, null, ignoreFile.dirname)) {\n            isIgnored = true;\n          }\n\n          if (!(babelrcFile && !isIgnored)) {\n            _context2.next = 54;\n            break;\n          }\n\n          _validatedFile = validateBabelrcFile(babelrcFile);\n          babelrcLogger = new _printer.ConfigPrinter();\n          return _context2.delegateYield(loadFileChain(_validatedFile, context, undefined, babelrcLogger), \"t8\", 46);\n\n        case 46:\n          _result = _context2.t8;\n\n          if (_result) {\n            _context2.next = 51;\n            break;\n          }\n\n          isIgnored = true;\n          _context2.next = 54;\n          break;\n\n        case 51:\n          return _context2.delegateYield(babelrcLogger.output(), \"t9\", 52);\n\n        case 52:\n          babelRcReport = _context2.t9;\n          mergeChain(fileChain, _result);\n\n        case 54:\n          if (babelrcFile && isIgnored) {\n            fileChain.files.add(babelrcFile.filepath);\n          }\n\n        case 55:\n          if (context.showConfig) {\n            console.log(\"Babel configs on \\\"\".concat(context.filename, \"\\\" (ascending priority):\\n\") + [configReport, babelRcReport, programmaticReport].filter(function (x) {\n              return !!x;\n            }).join(\"\\n\\n\") + \"\\n-----End Babel configs-----\");\n          }\n\n          chain = mergeChain(mergeChain(mergeChain(emptyChain(), configFileChain), fileChain), programmaticChain);\n          return _context2.abrupt(\"return\", {\n            plugins: isIgnored ? [] : dedupDescriptors(chain.plugins),\n            presets: isIgnored ? [] : dedupDescriptors(chain.presets),\n            options: isIgnored ? [] : chain.options.map(function (o) {\n              return normalizeOptions(o);\n            }),\n            fileHandling: isIgnored ? \"ignored\" : \"transpile\",\n            ignore: ignoreFile || undefined,\n            babelrc: babelrcFile || undefined,\n            config: configFile || undefined,\n            files: chain.files\n          });\n\n        case 58:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\n\nfunction babelrcLoadEnabled(context, pkgData, babelrcRoots, babelrcRootsDirectory) {\n  if (typeof babelrcRoots === \"boolean\") return babelrcRoots;\n  var absoluteRoot = context.root;\n\n  if (babelrcRoots === undefined) {\n    return pkgData.directories.indexOf(absoluteRoot) !== -1;\n  }\n\n  var babelrcPatterns = babelrcRoots;\n\n  if (!Array.isArray(babelrcPatterns)) {\n    babelrcPatterns = [babelrcPatterns];\n  }\n\n  babelrcPatterns = babelrcPatterns.map(function (pat) {\n    return typeof pat === \"string\" ? _path().resolve(babelrcRootsDirectory, pat) : pat;\n  });\n\n  if (babelrcPatterns.length === 1 && babelrcPatterns[0] === absoluteRoot) {\n    return pkgData.directories.indexOf(absoluteRoot) !== -1;\n  }\n\n  return babelrcPatterns.some(function (pat) {\n    if (typeof pat === \"string\") {\n      pat = (0, _patternToRegex.default)(pat, babelrcRootsDirectory);\n    }\n\n    return pkgData.directories.some(function (directory) {\n      return matchPattern(pat, babelrcRootsDirectory, directory, context);\n    });\n  });\n}\n\nvar validateConfigFile = (0, _caching.makeWeakCacheSync)(function (file) {\n  return {\n    filepath: file.filepath,\n    dirname: file.dirname,\n    options: (0, _options.validate)(\"configfile\", file.options, file.filepath)\n  };\n});\nvar validateBabelrcFile = (0, _caching.makeWeakCacheSync)(function (file) {\n  return {\n    filepath: file.filepath,\n    dirname: file.dirname,\n    options: (0, _options.validate)(\"babelrcfile\", file.options, file.filepath)\n  };\n});\nvar validateExtendFile = (0, _caching.makeWeakCacheSync)(function (file) {\n  return {\n    filepath: file.filepath,\n    dirname: file.dirname,\n    options: (0, _options.validate)(\"extendsfile\", file.options, file.filepath)\n  };\n});\nvar loadProgrammaticChain = makeChainWalker({\n  root: function root(input) {\n    return buildRootDescriptors(input, \"base\", _configDescriptors.createCachedDescriptors);\n  },\n  env: function env(input, envName) {\n    return buildEnvDescriptors(input, \"base\", _configDescriptors.createCachedDescriptors, envName);\n  },\n  overrides: function overrides(input, index) {\n    return buildOverrideDescriptors(input, \"base\", _configDescriptors.createCachedDescriptors, index);\n  },\n  overridesEnv: function overridesEnv(input, index, envName) {\n    return buildOverrideEnvDescriptors(input, \"base\", _configDescriptors.createCachedDescriptors, index, envName);\n  },\n  createLogger: function createLogger(input, context, baseLogger) {\n    return buildProgrammaticLogger(input, context, baseLogger);\n  }\n});\nvar loadFileChainWalker = makeChainWalker({\n  root: function root(file) {\n    return loadFileDescriptors(file);\n  },\n  env: function env(file, envName) {\n    return loadFileEnvDescriptors(file)(envName);\n  },\n  overrides: function overrides(file, index) {\n    return loadFileOverridesDescriptors(file)(index);\n  },\n  overridesEnv: function overridesEnv(file, index, envName) {\n    return loadFileOverridesEnvDescriptors(file)(index)(envName);\n  },\n  createLogger: function createLogger(file, context, baseLogger) {\n    return buildFileLogger(file.filepath, context, baseLogger);\n  }\n});\n\nfunction loadFileChain(input, context, files, baseLogger) {\n  var chain;\n  return _regeneratorRuntime().wrap(function loadFileChain$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          return _context3.delegateYield(loadFileChainWalker(input, context, files, baseLogger), \"t0\", 1);\n\n        case 1:\n          chain = _context3.t0;\n\n          if (chain) {\n            chain.files.add(input.filepath);\n          }\n\n          return _context3.abrupt(\"return\", chain);\n\n        case 4:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3);\n}\n\nvar loadFileDescriptors = (0, _caching.makeWeakCacheSync)(function (file) {\n  return buildRootDescriptors(file, file.filepath, _configDescriptors.createUncachedDescriptors);\n});\nvar loadFileEnvDescriptors = (0, _caching.makeWeakCacheSync)(function (file) {\n  return (0, _caching.makeStrongCacheSync)(function (envName) {\n    return buildEnvDescriptors(file, file.filepath, _configDescriptors.createUncachedDescriptors, envName);\n  });\n});\nvar loadFileOverridesDescriptors = (0, _caching.makeWeakCacheSync)(function (file) {\n  return (0, _caching.makeStrongCacheSync)(function (index) {\n    return buildOverrideDescriptors(file, file.filepath, _configDescriptors.createUncachedDescriptors, index);\n  });\n});\nvar loadFileOverridesEnvDescriptors = (0, _caching.makeWeakCacheSync)(function (file) {\n  return (0, _caching.makeStrongCacheSync)(function (index) {\n    return (0, _caching.makeStrongCacheSync)(function (envName) {\n      return buildOverrideEnvDescriptors(file, file.filepath, _configDescriptors.createUncachedDescriptors, index, envName);\n    });\n  });\n});\n\nfunction buildFileLogger(filepath, context, baseLogger) {\n  if (!baseLogger) {\n    return function () {};\n  }\n\n  return baseLogger.configure(context.showConfig, _printer.ChainFormatter.Config, {\n    filepath: filepath\n  });\n}\n\nfunction buildRootDescriptors(_ref, alias, descriptors) {\n  var dirname = _ref.dirname,\n      options = _ref.options;\n  return descriptors(dirname, options, alias);\n}\n\nfunction buildProgrammaticLogger(_, context, baseLogger) {\n  var _context$caller;\n\n  if (!baseLogger) {\n    return function () {};\n  }\n\n  return baseLogger.configure(context.showConfig, _printer.ChainFormatter.Programmatic, {\n    callerName: (_context$caller = context.caller) == null ? void 0 : _context$caller.name\n  });\n}\n\nfunction buildEnvDescriptors(_ref2, alias, descriptors, envName) {\n  var dirname = _ref2.dirname,\n      options = _ref2.options;\n  var opts = options.env && options.env[envName];\n  return opts ? descriptors(dirname, opts, \"\".concat(alias, \".env[\\\"\").concat(envName, \"\\\"]\")) : null;\n}\n\nfunction buildOverrideDescriptors(_ref3, alias, descriptors, index) {\n  var dirname = _ref3.dirname,\n      options = _ref3.options;\n  var opts = options.overrides && options.overrides[index];\n  if (!opts) throw new Error(\"Assertion failure - missing override\");\n  return descriptors(dirname, opts, \"\".concat(alias, \".overrides[\").concat(index, \"]\"));\n}\n\nfunction buildOverrideEnvDescriptors(_ref4, alias, descriptors, index, envName) {\n  var dirname = _ref4.dirname,\n      options = _ref4.options;\n  var override = options.overrides && options.overrides[index];\n  if (!override) throw new Error(\"Assertion failure - missing override\");\n  var opts = override.env && override.env[envName];\n  return opts ? descriptors(dirname, opts, \"\".concat(alias, \".overrides[\").concat(index, \"].env[\\\"\").concat(envName, \"\\\"]\")) : null;\n}\n\nfunction makeChainWalker(_ref5) {\n  var root = _ref5.root,\n      env = _ref5.env,\n      overrides = _ref5.overrides,\n      overridesEnv = _ref5.overridesEnv,\n      createLogger = _ref5.createLogger;\n  return /*#__PURE__*/_regeneratorRuntime().mark(function chainWalker(input, context) {\n    var files,\n        baseLogger,\n        dirname,\n        flattenedConfigs,\n        rootOpts,\n        envOpts,\n        chain,\n        logger,\n        _i,\n        _flattenedConfigs,\n        _flattenedConfigs$_i,\n        config,\n        index,\n        envName,\n        _args4 = arguments;\n\n    return _regeneratorRuntime().wrap(function chainWalker$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            files = _args4.length > 2 && _args4[2] !== undefined ? _args4[2] : new Set();\n            baseLogger = _args4.length > 3 ? _args4[3] : undefined;\n            dirname = input.dirname;\n            flattenedConfigs = [];\n            rootOpts = root(input);\n\n            if (configIsApplicable(rootOpts, dirname, context, input.filepath)) {\n              flattenedConfigs.push({\n                config: rootOpts,\n                envName: undefined,\n                index: undefined\n              });\n              envOpts = env(input, context.envName);\n\n              if (envOpts && configIsApplicable(envOpts, dirname, context, input.filepath)) {\n                flattenedConfigs.push({\n                  config: envOpts,\n                  envName: context.envName,\n                  index: undefined\n                });\n              }\n\n              (rootOpts.options.overrides || []).forEach(function (_, index) {\n                var overrideOps = overrides(input, index);\n\n                if (configIsApplicable(overrideOps, dirname, context, input.filepath)) {\n                  flattenedConfigs.push({\n                    config: overrideOps,\n                    index: index,\n                    envName: undefined\n                  });\n                  var overrideEnvOpts = overridesEnv(input, index, context.envName);\n\n                  if (overrideEnvOpts && configIsApplicable(overrideEnvOpts, dirname, context, input.filepath)) {\n                    flattenedConfigs.push({\n                      config: overrideEnvOpts,\n                      index: index,\n                      envName: context.envName\n                    });\n                  }\n                }\n              });\n            }\n\n            if (!flattenedConfigs.some(function (_ref6) {\n              var _ref6$config$options = _ref6.config.options,\n                  ignore = _ref6$config$options.ignore,\n                  only = _ref6$config$options.only;\n              return shouldIgnore(context, ignore, only, dirname);\n            })) {\n              _context4.next = 8;\n              break;\n            }\n\n            return _context4.abrupt(\"return\", null);\n\n          case 8:\n            chain = emptyChain();\n            logger = createLogger(input, context, baseLogger);\n            _i = 0, _flattenedConfigs = flattenedConfigs;\n\n          case 11:\n            if (!(_i < _flattenedConfigs.length)) {\n              _context4.next = 21;\n              break;\n            }\n\n            _flattenedConfigs$_i = _flattenedConfigs[_i], config = _flattenedConfigs$_i.config, index = _flattenedConfigs$_i.index, envName = _flattenedConfigs$_i.envName;\n            return _context4.delegateYield(mergeExtendsChain(chain, config.options, dirname, context, files, baseLogger), \"t0\", 14);\n\n          case 14:\n            if (_context4.t0) {\n              _context4.next = 16;\n              break;\n            }\n\n            return _context4.abrupt(\"return\", null);\n\n          case 16:\n            logger(config, index, envName);\n            return _context4.delegateYield(mergeChainOpts(chain, config), \"t1\", 18);\n\n          case 18:\n            _i++;\n            _context4.next = 11;\n            break;\n\n          case 21:\n            return _context4.abrupt(\"return\", chain);\n\n          case 22:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, chainWalker);\n  });\n}\n\nfunction mergeExtendsChain(chain, opts, dirname, context, files, baseLogger) {\n  var file, fileChain;\n  return _regeneratorRuntime().wrap(function mergeExtendsChain$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          if (!(opts.extends === undefined)) {\n            _context5.next = 2;\n            break;\n          }\n\n          return _context5.abrupt(\"return\", true);\n\n        case 2:\n          return _context5.delegateYield((0, _files.loadConfig)(opts.extends, dirname, context.envName, context.caller), \"t0\", 3);\n\n        case 3:\n          file = _context5.t0;\n\n          if (!files.has(file)) {\n            _context5.next = 6;\n            break;\n          }\n\n          throw new Error(\"Configuration cycle detected loading \".concat(file.filepath, \".\\n\") + \"File already loaded following the config chain:\\n\" + Array.from(files, function (file) {\n            return \" - \".concat(file.filepath);\n          }).join(\"\\n\"));\n\n        case 6:\n          files.add(file);\n          return _context5.delegateYield(loadFileChain(validateExtendFile(file), context, files, baseLogger), \"t1\", 8);\n\n        case 8:\n          fileChain = _context5.t1;\n          files.delete(file);\n\n          if (fileChain) {\n            _context5.next = 12;\n            break;\n          }\n\n          return _context5.abrupt(\"return\", false);\n\n        case 12:\n          mergeChain(chain, fileChain);\n          return _context5.abrupt(\"return\", true);\n\n        case 14:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked4);\n}\n\nfunction mergeChain(target, source) {\n  var _target$options, _target$plugins, _target$presets;\n\n  (_target$options = target.options).push.apply(_target$options, _toConsumableArray(source.options));\n\n  (_target$plugins = target.plugins).push.apply(_target$plugins, _toConsumableArray(source.plugins));\n\n  (_target$presets = target.presets).push.apply(_target$presets, _toConsumableArray(source.presets));\n\n  var _iterator = _createForOfIteratorHelper(source.files),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var file = _step.value;\n      target.files.add(file);\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return target;\n}\n\nfunction mergeChainOpts(target, _ref7) {\n  var _target$plugins2, _target$presets2;\n\n  var options, plugins, presets;\n  return _regeneratorRuntime().wrap(function mergeChainOpts$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          options = _ref7.options, plugins = _ref7.plugins, presets = _ref7.presets;\n          target.options.push(options);\n          _context6.t0 = (_target$plugins2 = target.plugins).push;\n          _context6.t1 = _target$plugins2;\n          _context6.t2 = _toConsumableArray;\n          return _context6.delegateYield(plugins(), \"t3\", 6);\n\n        case 6:\n          _context6.t4 = _context6.t3;\n          _context6.t5 = (0, _context6.t2)(_context6.t4);\n\n          _context6.t0.apply.call(_context6.t0, _context6.t1, _context6.t5);\n\n          _context6.t6 = (_target$presets2 = target.presets).push;\n          _context6.t7 = _target$presets2;\n          _context6.t8 = _toConsumableArray;\n          return _context6.delegateYield(presets(), \"t9\", 13);\n\n        case 13:\n          _context6.t10 = _context6.t9;\n          _context6.t11 = (0, _context6.t8)(_context6.t10);\n\n          _context6.t6.apply.call(_context6.t6, _context6.t7, _context6.t11);\n\n          return _context6.abrupt(\"return\", target);\n\n        case 17:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked5);\n}\n\nfunction emptyChain() {\n  return {\n    options: [],\n    presets: [],\n    plugins: [],\n    files: new Set()\n  };\n}\n\nfunction normalizeOptions(opts) {\n  var options = Object.assign({}, opts);\n  delete options.extends;\n  delete options.env;\n  delete options.overrides;\n  delete options.plugins;\n  delete options.presets;\n  delete options.passPerPreset;\n  delete options.ignore;\n  delete options.only;\n  delete options.test;\n  delete options.include;\n  delete options.exclude;\n\n  if (Object.prototype.hasOwnProperty.call(options, \"sourceMap\")) {\n    options.sourceMaps = options.sourceMap;\n    delete options.sourceMap;\n  }\n\n  return options;\n}\n\nfunction dedupDescriptors(items) {\n  var map = new Map();\n  var descriptors = [];\n\n  var _iterator2 = _createForOfIteratorHelper(items),\n      _step2;\n\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var item = _step2.value;\n\n      if (typeof item.value === \"function\") {\n        var fnKey = item.value;\n        var nameMap = map.get(fnKey);\n\n        if (!nameMap) {\n          nameMap = new Map();\n          map.set(fnKey, nameMap);\n        }\n\n        var desc = nameMap.get(item.name);\n\n        if (!desc) {\n          desc = {\n            value: item\n          };\n          descriptors.push(desc);\n          if (!item.ownPass) nameMap.set(item.name, desc);\n        } else {\n          desc.value = item;\n        }\n      } else {\n        descriptors.push({\n          value: item\n        });\n      }\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n\n  return descriptors.reduce(function (acc, desc) {\n    acc.push(desc.value);\n    return acc;\n  }, []);\n}\n\nfunction configIsApplicable(_ref8, dirname, context, configName) {\n  var options = _ref8.options;\n  return (options.test === undefined || configFieldIsApplicable(context, options.test, dirname, configName)) && (options.include === undefined || configFieldIsApplicable(context, options.include, dirname, configName)) && (options.exclude === undefined || !configFieldIsApplicable(context, options.exclude, dirname, configName));\n}\n\nfunction configFieldIsApplicable(context, test, dirname, configName) {\n  var patterns = Array.isArray(test) ? test : [test];\n  return matchesPatterns(context, patterns, dirname, configName);\n}\n\nfunction ignoreListReplacer(_key, value) {\n  if (value instanceof RegExp) {\n    return String(value);\n  }\n\n  return value;\n}\n\nfunction shouldIgnore(context, ignore, only, dirname) {\n  if (ignore && matchesPatterns(context, ignore, dirname)) {\n    var _context$filename;\n\n    var message = \"No config is applied to \\\"\".concat((_context$filename = context.filename) != null ? _context$filename : \"(unknown)\", \"\\\" because it matches one of `ignore: \").concat(JSON.stringify(ignore, ignoreListReplacer), \"` from \\\"\").concat(dirname, \"\\\"\");\n    debug(message);\n\n    if (context.showConfig) {\n      console.log(message);\n    }\n\n    return true;\n  }\n\n  if (only && !matchesPatterns(context, only, dirname)) {\n    var _context$filename2;\n\n    var _message = \"No config is applied to \\\"\".concat((_context$filename2 = context.filename) != null ? _context$filename2 : \"(unknown)\", \"\\\" because it fails to match one of `only: \").concat(JSON.stringify(only, ignoreListReplacer), \"` from \\\"\").concat(dirname, \"\\\"\");\n\n    debug(_message);\n\n    if (context.showConfig) {\n      console.log(_message);\n    }\n\n    return true;\n  }\n\n  return false;\n}\n\nfunction matchesPatterns(context, patterns, dirname, configName) {\n  return patterns.some(function (pattern) {\n    return matchPattern(pattern, dirname, context.filename, context, configName);\n  });\n}\n\nfunction matchPattern(pattern, dirname, pathToTest, context, configName) {\n  if (typeof pattern === \"function\") {\n    return !!(0, _rewriteStackTrace.endHiddenCallStack)(pattern)(pathToTest, {\n      dirname: dirname,\n      envName: context.envName,\n      caller: context.caller\n    });\n  }\n\n  if (typeof pathToTest !== \"string\") {\n    throw new _configError.default(\"Configuration contains string/RegExp pattern, but no filename was passed to Babel\", configName);\n  }\n\n  if (typeof pattern === \"string\") {\n    pattern = (0, _patternToRegex.default)(pattern, dirname);\n  }\n\n  return pattern.test(pathToTest);\n}\n\n0 && 0;","map":{"version":3,"mappings":";;;;;;;;sDAmEiBA,gB;uDA0EAC,c;uDAuPPC,a;uDAqRAC,iB;uDAoDAC,c;;;;;;;;;AA7sBV;EAAA;;EAAAC;IAAA;EAAA;;EAAA;AAAA;;AACA;EAAA;;EAAAC;IAAA;EAAA;;EAAA;AAAA;;AAEA;;AASA;;AACA;;AAGA;;AACA;;AAIA;;AAQA;;AAEA;;AAZA,IAAMC,KAAK,GAAGC,SAAW,2BAAXA,CAAd;;AAgDO,SAAUR,gBAAV,CACLS,GADK,EAELC,OAFK;EAAA;EAAA;IAAA;MAAA;QAAA;UAIS,8BAAOC,sBAAsB,CAACF,GAAD,EAAMC,OAAN,CAA7B;;QAJT;UAICE,KAJD;;UAAA,IAKAA,KALA;YAAA;YAAA;UAAA;;UAAA,iCAKc,IALd;;QAAA;UAAA,iCAOE;YACLC,OAAO,EAAEC,gBAAgB,CAACF,KAAK,CAACC,OAAP,CADpB;YAELE,OAAO,EAAED,gBAAgB,CAACF,KAAK,CAACG,OAAP,CAFpB;YAGLC,OAAO,EAAEJ,KAAK,CAACI,OAANJ,CAAcK,GAAdL,CAAkBM,WAAC;cAAA,OAAIC,gBAAgB,CAACD,CAAD,CAApB;YAAA,CAAnBN,CAHJ;YAILQ,KAAK,EAAE,IAAIC,GAAJ;UAJF,CAPF;;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA;;AAeA,IAAMV,sBAAsB,GAAGW,eAAe,CAAiB;EACpEC,IAAI,EAAEC,oBAAM;IAAA,OAAIC,qBAAqB,CAACD,MAAD,CAAzB;EAAA,CADwD;EAEpEE,GAAG,EAAE,aAACF,MAAD,EAASG,OAAT;IAAA,OAAqBC,wBAAwB,CAACJ,MAAD,CAAxBI,CAAiCD,OAAjCC,CAArB;EAAA,CAF+D;EAGpEC,SAAS,EAAE,mBAACL,MAAD,EAASM,KAAT;IAAA,OAAmBC,8BAA8B,CAACP,MAAD,CAA9BO,CAAuCD,KAAvCC,CAAnB;EAAA,CAHyD;EAIpEC,YAAY,EAAE,sBAACR,MAAD,EAASM,KAAT,EAAgBH,OAAhB;IAAA,OACZM,iCAAiC,CAACT,MAAD,CAAjCS,CAA0CH,KAA1CG,EAAiDN,OAAjDM,CADY;EAAA,CAJsD;EAMpEC,YAAY,EAAE;IAAA,OAAM,YAAM,CAAE,CAAd;EAAA;AANsD,CAAjB,CAA9C;;AAQP,IAAMT,qBAAqB,GAAG,gCAAmBD,gBAAD;EAAA,OAC9CW,oBAAoB,CAACX,MAAD,EAASA,MAAM,CAACY,KAAhB,EAAuBC,4CAAvB,CAD0B;AAAA,CAAlB,CAA9B;AAGA,IAAMT,wBAAwB,GAAG,gCAAmBJ,gBAAD;EAAA,OACjD,kCAAqBG,iBAAD;IAAA,OAClBW,mBAAmB,CACjBd,MADiB,EAEjBA,MAAM,CAACY,KAFU,EAGjBC,4CAHiB,EAIjBV,OAJiB,CADD;EAAA,CAApB,CADiD;AAAA,CAAlB,CAAjC;AAUA,IAAMI,8BAA8B,GAAG,gCACpCP,gBAAD;EAAA,OACE,kCAAqBM,eAAD;IAAA,OAClBS,wBAAwB,CACtBf,MADsB,EAEtBA,MAAM,CAACY,KAFe,EAGtBC,4CAHsB,EAItBP,KAJsB,CADN;EAAA,CAApB,CADF;AAAA,CADqC,CAAvC;AAWA,IAAMG,iCAAiC,GAAG,gCACvCT,gBAAD;EAAA,OACE,kCAAqBM,eAAD;IAAA,OAClB,kCAAqBH,iBAAD;MAAA,OAClBa,2BAA2B,CACzBhB,MADyB,EAEzBA,MAAM,CAACY,KAFkB,EAGzBC,4CAHyB,EAIzBP,KAJyB,EAKzBH,OALyB,CADT;IAAA,CAApB,CADkB;EAAA,CAApB,CADF;AAAA,CADwC,CAA1C;;AA2BO,SAAU1B,cAAV,CACLwC,IADK,EAEL/B,OAFK;EAAA;;EAAA;IAAA;MAAA;QAAA;UAKCgC,kBALD,GAKsB,IAAIC,sBAAJ,EALtB;UAMqB,+BAAOC,qBAAqB,CACpD;YACE5B,OAAO,EAAEyB,IADX;YAEEI,OAAO,EAAEnC,OAAO,CAACoC;UAFnB,CADoD,EAKpDpC,OALoD,EAMpDqC,SANoD,EAOpDL,kBAPoD,CAA5B;;QANrB;UAMCM,iBAND;;UAAA,IAeAA,iBAfA;YAAA;YAAA;UAAA;;UAAA,kCAe0B,IAf1B;;QAAA;UAgBsB,+BAAON,kBAAkB,CAACO,MAAnBP,EAAP;;QAhBtB;UAgBCQ,kBAhBD;;UAAA,MAmBD,OAAOT,IAAI,CAACU,UAAZ,KAA2B,QAnB1B;YAAA;YAAA;UAAA;;UAoBU,+BAAO,uBAClBV,IAAI,CAACU,UADa,EAElBzC,OAAO,CAACoC,GAFU,EAGlBpC,OAAO,CAACiB,OAHU,EAIlBjB,OAAO,CAAC0C,MAJU,CAAP;;QApBV;UAoBHD,UApBG;UAAA;UAAA;;QAAA;UAAA,MA0BMV,IAAI,CAACU,UAALV,KAAoB,KA1B1B;YAAA;YAAA;UAAA;;UA2BU,+BAAO,2BAClB/B,OAAO,CAACa,IADU,EAElBb,OAAO,CAACiB,OAFU,EAGlBjB,OAAO,CAAC0C,MAHU,CAAP;;QA3BV;UA2BHD,UA3BG;;QAAA;UAkCCE,OAlCD,GAkC2BZ,IAlC3B,CAkCCY,OAlCD,EAkCUC,YAlCV,GAkC2Bb,IAlC3B,CAkCUa,YAlCV;UAmCDC,qBAnCC,GAmCuB7C,OAAO,CAACoC,GAnC/B;UAqCCU,eArCD,GAqCmBC,UAAU,EArC7B;UAsCCC,gBAtCD,GAsCoB,IAAIf,sBAAJ,EAtCpB;;UAAA,KAuCDQ,UAvCC;YAAA;YAAA;UAAA;;UAwCGQ,aAxCH,GAwCmBC,kBAAkB,CAACT,UAAD,CAxCrC;UAyCY,+BAAOjD,aAAa,CACjCyD,aADiC,EAEjCjD,OAFiC,EAGjCqC,SAHiC,EAIjCW,gBAJiC,CAApB;;QAzCZ;UAyCGG,MAzCH;;UAAA,IA+CEA,MA/CF;YAAA;YAAA;UAAA;;UAAA,kCA+CiB,IA/CjB;;QAAA;UAgDY,+BAAOH,gBAAgB,CAACT,MAAjBS,EAAP;;QAhDZ;UAgDHI,YAhDG;;UAoDH,IAAIT,OAAO,KAAKN,SAAhB,EAA2B;YACzBM,OAAO,GAAGM,aAAa,CAAC3C,OAAd2C,CAAsBN,OAAhCA;UACD;;UACD,IAAIC,YAAY,KAAKP,SAArB,EAAgC;YAC9BQ,qBAAqB,GAAGI,aAAa,CAACd,OAAtCU;YACAD,YAAY,GAAGK,aAAa,CAAC3C,OAAd2C,CAAsBL,YAArCA;UACD;;UAEDS,UAAU,CAACP,eAAD,EAAkBK,MAAlB,CAAVE;;QA5DG;UAgEDC,SAhEC,GAgEW,KAhEX;UAiECC,SAjED,GAiEaR,UAAU,EAjEvB;;UAAA,MAoEH,CAACJ,OAAO,KAAK,IAAZA,IAAoBA,OAAO,KAAKN,SAAjC,KACA,OAAOrC,OAAO,CAACwD,QAAf,KAA4B,QArEzB;YAAA;YAAA;UAAA;;UAuEa,+BAAO,4BAAgBxD,OAAO,CAACwD,QAAxB,CAAP;;QAvEb;UAuEGC,OAvEH;;UAAA,MA0EDA,OAAO,IACPC,kBAAkB,CAAC1D,OAAD,EAAUyD,OAAV,EAAmBb,YAAnB,EAAiCC,qBAAjC,CA3EjB;YAAA;YAAA;UAAA;;UA6E8C,+BAAO,+BACpDY,OADoD,EAEpDzD,OAAO,CAACiB,OAF4C,EAGpDjB,OAAO,CAAC0C,MAH4C,CAAP;;QA7E9C;UAAA;UA6EUiB,UA7EV,UA6EEC,MA7EF;UA6E8BC,WA7E9B,UA6EsBC,MA7EtB;;UAmFD,IAAIH,UAAJ,EAAgB;YACdJ,SAAS,CAAC7C,KAAV6C,CAAgBQ,GAAhBR,CAAoBI,UAAU,CAACK,QAA/BT;UACD;;UAED,IACEI,UAAU,IACVM,YAAY,CAACjE,OAAD,EAAU2D,UAAU,CAACC,MAArB,EAA6B,IAA7B,EAAmCD,UAAU,CAACxB,OAA9C,CAFd,EAGE;YACAmB,SAAS,GAAG,IAAZA;UACD;;UA5FA,MA8FGO,WAAW,IAAI,CAACP,SA9FnB;YAAA;YAAA;UAAA;;UA+FOL,cA/FP,GA+FuBiB,mBAAmB,CAACL,WAAD,CA/F1C;UAgGOM,aAhGP,GAgGuB,IAAIlC,sBAAJ,EAhGvB;UAiGgB,+BAAOzC,aAAa,CACjCyD,cADiC,EAEjCjD,OAFiC,EAGjCqC,SAHiC,EAIjC8B,aAJiC,CAApB;;QAjGhB;UAiGOhB,OAjGP;;UAAA,IAuGMA,OAvGN;YAAA;YAAA;UAAA;;UAwGGG,SAAS,GAAG,IAAZA;UAxGH;UAAA;;QAAA;UA0GmB,+BAAOa,aAAa,CAAC5B,MAAd4B,EAAP;;QA1GnB;UA0GGC,aA1GH;UA2GGf,UAAU,CAACE,SAAD,EAAYJ,OAAZ,CAAVE;;QA3GH;UA+GD,IAAIQ,WAAW,IAAIP,SAAnB,EAA8B;YAC5BC,SAAS,CAAC7C,KAAV6C,CAAgBQ,GAAhBR,CAAoBM,WAAW,CAACG,QAAhCT;UACD;;QAjHA;UAqHL,IAAIvD,OAAO,CAACqE,UAAZ,EAAwB;YACtBC,OAAO,CAACC,GAARD,CACG,6BAAoBtE,OAAO,CAACwD,QAA5B,kCAEC,CAACJ,YAAD,EAAegB,aAAf,EAA8B5B,kBAA9B,EACGgC,MADH,CACUC,WAAC;cAAA,OAAI,CAAC,CAACA,CAAN;YAAA,CADX,EAEGC,IAFH,CAEQ,MAFR,CAFD,GAKC,+BANJJ;UAQD;;UAGKpE,KAjID,GAiISmD,UAAU,CACtBA,UAAU,CAACA,UAAU,CAACN,UAAU,EAAX,EAAeD,eAAf,CAAX,EAA4CS,SAA5C,CADY,EAEtBjB,iBAFsB,CAjInB;UAAA,kCAsIE;YACLnC,OAAO,EAAEmD,SAAS,GAAG,EAAH,GAAQlD,gBAAgB,CAACF,KAAK,CAACC,OAAP,CADrC;YAELE,OAAO,EAAEiD,SAAS,GAAG,EAAH,GAAQlD,gBAAgB,CAACF,KAAK,CAACG,OAAP,CAFrC;YAGLC,OAAO,EAAEgD,SAAS,GAAG,EAAH,GAAQpD,KAAK,CAACI,OAANJ,CAAcK,GAAdL,CAAkBM,WAAC;cAAA,OAAIC,gBAAgB,CAACD,CAAD,CAApB;YAAA,CAAnBN,CAHrB;YAILyE,YAAY,EAAErB,SAAS,GAAG,SAAH,GAAe,WAJjC;YAKLM,MAAM,EAAED,UAAU,IAAItB,SALjB;YAMLM,OAAO,EAAEkB,WAAW,IAAIxB,SANnB;YAOLyB,MAAM,EAAErB,UAAU,IAAIJ,SAPjB;YAQL3B,KAAK,EAAER,KAAK,CAACQ;UARR,CAtIF;;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA;;AAkJP,SAASgD,kBAAT,CACE1D,OADF,EAEEyD,OAFF,EAGEb,YAHF,EAIEC,qBAJF,EAKW;EACT,IAAI,OAAOD,YAAP,KAAwB,SAA5B,EAAuC,OAAOA,YAAP;EAEvC,IAAMgC,YAAY,GAAG5E,OAAO,CAACa,IAA7B;;EAIA,IAAI+B,YAAY,KAAKP,SAArB,EAAgC;IAC9B,OAAOoB,OAAO,CAACoB,WAARpB,CAAoBqB,OAApBrB,CAA4BmB,YAA5BnB,MAA8C,CAAC,CAAtD;EACD;;EAED,IAAIsB,eAAe,GAAGnC,YAAtB;;EACA,IAAI,CAACoC,KAAK,CAACC,OAAND,CAAcD,eAAdC,CAAL,EAAqC;IACnCD,eAAe,GAAG,CAACA,eAAD,CAAlBA;EACD;;EACDA,eAAe,GAAGA,eAAe,CAACxE,GAAhBwE,CAAoBG,aAAG,EAAI;IAC3C,OAAO,OAAOA,GAAP,KAAe,QAAf,GACHC,QAAKC,OAALD,CAAatC,qBAAbsC,EAAoCD,GAApCC,CADG,GAEHD,GAFJ;EADgB,EAAlBH;;EAQA,IAAIA,eAAe,CAACM,MAAhBN,KAA2B,CAA3BA,IAAgCA,eAAe,CAAC,CAAD,CAAfA,KAAuBH,YAA3D,EAAyE;IACvE,OAAOnB,OAAO,CAACoB,WAARpB,CAAoBqB,OAApBrB,CAA4BmB,YAA5BnB,MAA8C,CAAC,CAAtD;EACD;;EAED,OAAOsB,eAAe,CAACO,IAAhBP,CAAqBG,aAAG,EAAI;IACjC,IAAI,OAAOA,GAAP,KAAe,QAAnB,EAA6B;MAC3BA,GAAG,GAAG,6BAAmBA,GAAnB,EAAwBrC,qBAAxB,CAANqC;IACD;;IAED,OAAOzB,OAAO,CAACoB,WAARpB,CAAoB6B,IAApB7B,CAAyB8B,mBAAS,EAAI;MAC3C,OAAOC,YAAY,CAACN,GAAD,EAAMrC,qBAAN,EAA6B0C,SAA7B,EAAwCvF,OAAxC,CAAnB;IADK,EAAP;EALK,EAAP;AASD;;AAED,IAAMkD,kBAAkB,GAAG,gCACxBuC,cAAD;EAAA,OAAsC;IACpCzB,QAAQ,EAAEyB,IAAI,CAACzB,QADqB;IAEpC7B,OAAO,EAAEsD,IAAI,CAACtD,OAFsB;IAGpC7B,OAAO,EAAE,uBAAS,YAAT,EAAuBmF,IAAI,CAACnF,OAA5B,EAAqCmF,IAAI,CAACzB,QAA1C;EAH2B,CAAtC;AAAA,CADyB,CAA3B;AAQA,IAAME,mBAAmB,GAAG,gCACzBuB,cAAD;EAAA,OAAsC;IACpCzB,QAAQ,EAAEyB,IAAI,CAACzB,QADqB;IAEpC7B,OAAO,EAAEsD,IAAI,CAACtD,OAFsB;IAGpC7B,OAAO,EAAE,uBAAS,aAAT,EAAwBmF,IAAI,CAACnF,OAA7B,EAAsCmF,IAAI,CAACzB,QAA3C;EAH2B,CAAtC;AAAA,CAD0B,CAA5B;AAQA,IAAM0B,kBAAkB,GAAG,gCACxBD,cAAD;EAAA,OAAsC;IACpCzB,QAAQ,EAAEyB,IAAI,CAACzB,QADqB;IAEpC7B,OAAO,EAAEsD,IAAI,CAACtD,OAFsB;IAGpC7B,OAAO,EAAE,uBAAS,aAAT,EAAwBmF,IAAI,CAACnF,OAA7B,EAAsCmF,IAAI,CAACzB,QAA3C;EAH2B,CAAtC;AAAA,CADyB,CAA3B;AAWA,IAAM9B,qBAAqB,GAAGtB,eAAe,CAAC;EAC5CC,IAAI,EAAE8E,mBAAK;IAAA,OAAIlE,oBAAoB,CAACkE,KAAD,EAAQ,MAAR,EAAgBC,0CAAhB,CAAxB;EAAA,CADiC;EAE5C5E,GAAG,EAAE,aAAC2E,KAAD,EAAQ1E,OAAR;IAAA,OACHW,mBAAmB,CAAC+D,KAAD,EAAQ,MAAR,EAAgBC,0CAAhB,EAAyC3E,OAAzC,CADhB;EAAA,CAFuC;EAI5CE,SAAS,EAAE,mBAACwE,KAAD,EAAQvE,KAAR;IAAA,OACTS,wBAAwB,CAAC8D,KAAD,EAAQ,MAAR,EAAgBC,0CAAhB,EAAyCxE,KAAzC,CADf;EAAA,CAJiC;EAM5CE,YAAY,EAAE,sBAACqE,KAAD,EAAQvE,KAAR,EAAeH,OAAf;IAAA,OACZa,2BAA2B,CACzB6D,KADyB,EAEzB,MAFyB,EAGzBC,0CAHyB,EAIzBxE,KAJyB,EAKzBH,OALyB,CADf;EAAA,CAN8B;EAc5CO,YAAY,EAAE,sBAACmE,KAAD,EAAQ3F,OAAR,EAAiB6F,UAAjB;IAAA,OACZC,uBAAuB,CAACH,KAAD,EAAQ3F,OAAR,EAAiB6F,UAAjB,CADX;EAAA;AAd8B,CAAD,CAA7C;AAqBA,IAAME,mBAAmB,GAAGnF,eAAe,CAAgB;EACzDC,IAAI,EAAE4E,kBAAI;IAAA,OAAIO,mBAAmB,CAACP,IAAD,CAAvB;EAAA,CAD+C;EAEzDzE,GAAG,EAAE,aAACyE,IAAD,EAAOxE,OAAP;IAAA,OAAmBgF,sBAAsB,CAACR,IAAD,CAAtBQ,CAA6BhF,OAA7BgF,CAAnB;EAAA,CAFoD;EAGzD9E,SAAS,EAAE,mBAACsE,IAAD,EAAOrE,KAAP;IAAA,OAAiB8E,4BAA4B,CAACT,IAAD,CAA5BS,CAAmC9E,KAAnC8E,CAAjB;EAAA,CAH8C;EAIzD5E,YAAY,EAAE,sBAACmE,IAAD,EAAOrE,KAAP,EAAcH,OAAd;IAAA,OACZkF,+BAA+B,CAACV,IAAD,CAA/BU,CAAsC/E,KAAtC+E,EAA6ClF,OAA7CkF,CADY;EAAA,CAJ2C;EAMzD3E,YAAY,EAAE,sBAACiE,IAAD,EAAOzF,OAAP,EAAgB6F,UAAhB;IAAA,OACZO,eAAe,CAACX,IAAI,CAACzB,QAAN,EAAgBhE,OAAhB,EAAyB6F,UAAzB,CADH;EAAA;AAN2C,CAAhB,CAA3C;;AAUA,SAAUrG,aAAV,CACEmG,KADF,EAEE3F,OAFF,EAGEU,KAHF,EAIEmF,UAJF;EAAA;EAAA;IAAA;MAAA;QAAA;UAMgB,+BAAOE,mBAAmB,CAACJ,KAAD,EAAQ3F,OAAR,EAAiBU,KAAjB,EAAwBmF,UAAxB,CAA1B;;QANhB;UAMQ3F,KANR;;UAOE,IAAIA,KAAJ,EAAW;YACTA,KAAK,CAACQ,KAANR,CAAY6D,GAAZ7D,CAAgByF,KAAK,CAAC3B,QAAtB9D;UACD;;UATH,kCAWSA,KAXT;;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA;;AAcA,IAAM8F,mBAAmB,GAAG,gCAAmBP,cAAD;EAAA,OAC5ChE,oBAAoB,CAACgE,IAAD,EAAOA,IAAI,CAACzB,QAAZ,EAAsBrC,4CAAtB,CADwB;AAAA,CAAlB,CAA5B;AAGA,IAAMsE,sBAAsB,GAAG,gCAAmBR,cAAD;EAAA,OAC/C,kCAAqBxE,iBAAD;IAAA,OAClBW,mBAAmB,CACjB6D,IADiB,EAEjBA,IAAI,CAACzB,QAFY,EAGjBrC,4CAHiB,EAIjBV,OAJiB,CADD;EAAA,CAApB,CAD+C;AAAA,CAAlB,CAA/B;AAUA,IAAMiF,4BAA4B,GAAG,gCAAmBT,cAAD;EAAA,OACrD,kCAAqBrE,eAAD;IAAA,OAClBS,wBAAwB,CACtB4D,IADsB,EAEtBA,IAAI,CAACzB,QAFiB,EAGtBrC,4CAHsB,EAItBP,KAJsB,CADN;EAAA,CAApB,CADqD;AAAA,CAAlB,CAArC;AAUA,IAAM+E,+BAA+B,GAAG,gCACrCV,cAAD;EAAA,OACE,kCAAqBrE,eAAD;IAAA,OAClB,kCAAqBH,iBAAD;MAAA,OAClBa,2BAA2B,CACzB2D,IADyB,EAEzBA,IAAI,CAACzB,QAFoB,EAGzBrC,4CAHyB,EAIzBP,KAJyB,EAKzBH,OALyB,CADT;IAAA,CAApB,CADkB;EAAA,CAApB,CADF;AAAA,CADsC,CAAxC;;AAeA,SAASmF,eAAT,CACEpC,QADF,EAEEhE,OAFF,EAGE6F,UAHF,EAIE;EACA,IAAI,CAACA,UAAL,EAAiB;IACf,OAAO,YAAM,CAAb;EACD;;EACD,OAAOA,UAAU,CAACQ,SAAXR,CAAqB7F,OAAO,CAACqE,UAA7BwB,EAAyCS,wBAAeC,MAAxDV,EAAgE;IACrE7B;EADqE,CAAhE6B,CAAP;AAGD;;AAED,SAASpE,oBAAT,OAEEC,KAFF,EAGE8E,WAHF,EAQE;EAAA,IAPErE,OAOF,QAPEA,OAOF;EAAA,IAPW7B,OAOX,QAPWA,OAOX;EACA,OAAOkG,WAAW,CAACrE,OAAD,EAAU7B,OAAV,EAAmBoB,KAAnB,CAAlB;AACD;;AAED,SAASoE,uBAAT,CACEW,CADF,EAEEzG,OAFF,EAGE6F,UAHF,EAIE;EAAA;;EACA,IAAI,CAACA,UAAL,EAAiB;IACf,OAAO,YAAM,CAAb;EACD;;EACD,OAAOA,UAAU,CAACQ,SAAXR,CAAqB7F,OAAO,CAACqE,UAA7BwB,EAAyCS,wBAAeI,YAAxDb,EAAsE;IAC3Ec,UAAU,qBAAE3G,OAAO,CAAC0C,MAAV,qBAAEkE,gBAAgBC;EAD+C,CAAtEhB,CAAP;AAGD;;AAED,SAASjE,mBAAT,QAEEF,KAFF,EAGE8E,WAHF,EAQEvF,OARF,EASE;EAAA,IAREkB,OAQF,SAREA,OAQF;EAAA,IARW7B,OAQX,SARWA,OAQX;EACA,IAAMyB,IAAI,GAAGzB,OAAO,CAACU,GAARV,IAAeA,OAAO,CAACU,GAARV,CAAYW,OAAZX,CAA5B;EACA,OAAOyB,IAAI,GAAGyE,WAAW,CAACrE,OAAD,EAAUJ,IAAV,YAAmBL,KAAnB,oBAAiCT,OAAjC,SAAd,GAA8D,IAAzE;AACD;;AAED,SAASY,wBAAT,QAEEH,KAFF,EAGE8E,WAHF,EAQEpF,KARF,EASE;EAAA,IAREe,OAQF,SAREA,OAQF;EAAA,IARW7B,OAQX,SARWA,OAQX;EACA,IAAMyB,IAAI,GAAGzB,OAAO,CAACa,SAARb,IAAqBA,OAAO,CAACa,SAARb,CAAkBc,KAAlBd,CAAlC;EACA,IAAI,CAACyB,IAAL,EAAW,MAAM,IAAI+E,KAAJ,CAAU,sCAAV,CAAN;EAEX,OAAON,WAAW,CAACrE,OAAD,EAAUJ,IAAV,YAAmBL,KAAnB,wBAAsCN,KAAtC,OAAlB;AACD;;AAED,SAASU,2BAAT,QAEEJ,KAFF,EAGE8E,WAHF,EAQEpF,KARF,EASEH,OATF,EAUE;EAAA,IATEkB,OASF,SATEA,OASF;EAAA,IATW7B,OASX,SATWA,OASX;EACA,IAAMyG,QAAQ,GAAGzG,OAAO,CAACa,SAARb,IAAqBA,OAAO,CAACa,SAARb,CAAkBc,KAAlBd,CAAtC;EACA,IAAI,CAACyG,QAAL,EAAe,MAAM,IAAID,KAAJ,CAAU,sCAAV,CAAN;EAEf,IAAM/E,IAAI,GAAGgF,QAAQ,CAAC/F,GAAT+F,IAAgBA,QAAQ,CAAC/F,GAAT+F,CAAa9F,OAAb8F,CAA7B;EACA,OAAOhF,IAAI,GACPyE,WAAW,CACTrE,OADS,EAETJ,IAFS,YAGNL,KAHM,wBAGaN,KAHb,qBAG4BH,OAH5B,SADJ,GAMP,IANJ;AAOD;;AAED,SAASL,eAAT,QAmCiC;EAAA,IA5B/BC,IA4B+B,SA5B/BA,IA4B+B;EAAA,IA3B/BG,GA2B+B,SA3B/BA,GA2B+B;EAAA,IA1B/BG,SA0B+B,SA1B/BA,SA0B+B;EAAA,IAzB/BG,YAyB+B,SAzB/BA,YAyB+B;EAAA,IAxB/BE,YAwB+B,SAxB/BA,YAwB+B;EAC/B,+CAAO,SAAUwF,WAAV,CAAsBrB,KAAtB,EAA6B3F,OAA7B;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;;IAAA;MAAA;QAAA;UAAA;YAAsCU,KAAtC,8DAA8C,IAAIC,GAAJ,EAA9C;YAAyDkF,UAAzD;YACG1D,OADH,GACewD,KADf,CACGxD,OADH;YAGC8E,gBAHD,GAOA,EAPA;YASCC,QATD,GASYrG,IAAI,CAAC8E,KAAD,CAThB;;YAUL,IAAIwB,kBAAkB,CAACD,QAAD,EAAW/E,OAAX,EAAoBnC,OAApB,EAA6B2F,KAAK,CAAC3B,QAAnC,CAAtB,EAAoE;cAClEiD,gBAAgB,CAACG,IAAjBH,CAAsB;gBACpBnD,MAAM,EAAEoD,QADY;gBAEpBjG,OAAO,EAAEoB,SAFW;gBAGpBjB,KAAK,EAAEiB;cAHa,CAAtB4E;cAMMI,OAP4D,GAOlDrG,GAAG,CAAC2E,KAAD,EAAQ3F,OAAO,CAACiB,OAAhB,CAP+C;;cAQlE,IACEoG,OAAO,IACPF,kBAAkB,CAACE,OAAD,EAAUlF,OAAV,EAAmBnC,OAAnB,EAA4B2F,KAAK,CAAC3B,QAAlC,CAFpB,EAGE;gBACAiD,gBAAgB,CAACG,IAAjBH,CAAsB;kBACpBnD,MAAM,EAAEuD,OADY;kBAEpBpG,OAAO,EAAEjB,OAAO,CAACiB,OAFG;kBAGpBG,KAAK,EAAEiB;gBAHa,CAAtB4E;cAKD;;cAED,CAACC,QAAQ,CAAC5G,OAAT4G,CAAiB/F,SAAjB+F,IAA8B,EAA/B,EAAmCI,OAAnC,CAA2C,UAACb,CAAD,EAAIrF,KAAJ,EAAc;gBACvD,IAAMmG,WAAW,GAAGpG,SAAS,CAACwE,KAAD,EAAQvE,KAAR,CAA7B;;gBACA,IAAI+F,kBAAkB,CAACI,WAAD,EAAcpF,OAAd,EAAuBnC,OAAvB,EAAgC2F,KAAK,CAAC3B,QAAtC,CAAtB,EAAuE;kBACrEiD,gBAAgB,CAACG,IAAjBH,CAAsB;oBACpBnD,MAAM,EAAEyD,WADY;oBAEpBnG,KAFoB,EAEpBA,KAFoB;oBAGpBH,OAAO,EAAEoB;kBAHW,CAAtB4E;kBAMA,IAAMO,eAAe,GAAGlG,YAAY,CAACqE,KAAD,EAAQvE,KAAR,EAAepB,OAAO,CAACiB,OAAvB,CAApC;;kBACA,IACEuG,eAAe,IACfL,kBAAkB,CAChBK,eADgB,EAEhBrF,OAFgB,EAGhBnC,OAHgB,EAIhB2F,KAAK,CAAC3B,QAJU,CAFpB,EAQE;oBACAiD,gBAAgB,CAACG,IAAjBH,CAAsB;sBACpBnD,MAAM,EAAE0D,eADY;sBAEpBpG,KAFoB,EAEpBA,KAFoB;sBAGpBH,OAAO,EAAEjB,OAAO,CAACiB;oBAHG,CAAtBgG;kBAKD;gBACF;cAzBH;YA2BD;;YAxDI,KA8DHA,gBAAgB,CAAC3B,IAAjB2B,CACE;cAAA,iCACEnD,MADF,CAEIxD,OAFJ;cAAA,IAEesD,MAFf,wBAEeA,MAFf;cAAA,IAEuB6D,IAFvB,wBAEuBA,IAFvB;cAAA,OAIMxD,YAAY,CAACjE,OAAD,EAAU4D,MAAV,EAAkB6D,IAAlB,EAAwBtF,OAAxB,CAJlB;YAAA,CADF8E,CA9DG;cAAA;cAAA;YAAA;;YAAA,kCAsEI,IAtEJ;;UAAA;YAyEC/G,KAzED,GAyES6C,UAAU,EAzEnB;YA0EC2E,MA1ED,GA0EUlG,YAAY,CAACmE,KAAD,EAAQ3F,OAAR,EAAiB6F,UAAjB,CA1EtB;YAAA,4BA4EoCoB,gBA5EpC;;UAAA;YAAA;cAAA;cAAA;YAAA;;YAAA,8CA4EQnD,MA5ER,wBA4EQA,MA5ER,EA4EgB1C,KA5EhB,wBA4EgBA,KA5EhB,EA4EuBH,OA5EvB,wBA4EuBA,OA5EvB;YA8EC,+BAAOxB,iBAAiB,CACxBS,KADwB,EAExB4D,MAAM,CAACxD,OAFiB,EAGxB6B,OAHwB,EAIxBnC,OAJwB,EAKxBU,KALwB,EAMxBmF,UANwB,CAAxB;;UA9ED;YAAA;cAAA;cAAA;YAAA;;YAAA,kCAuFM,IAvFN;;UAAA;YA0FH6B,MAAM,CAAC5D,MAAD,EAAS1C,KAAT,EAAgBH,OAAhB,CAANyG;YACA,+BAAOhI,cAAc,CAACQ,KAAD,EAAQ4D,MAAR,CAArB;;UA3FG;YAAA;YAAA;YAAA;;UAAA;YAAA,kCA6FE5D,KA7FF;;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA,GAAU8G,WAAV;EAAA,CAAP;AA+FD;;AAED,SAAUvH,iBAAV,CACES,KADF,EAEE6B,IAFF,EAGEI,OAHF,EAIEnC,OAJF,EAKEU,KALF,EAMEmF,UANF;EAAA;EAAA;IAAA;MAAA;QAAA;UAAA,MAQM9D,IAAI,CAAC4F,OAAL5F,KAAiBM,SARvB;YAAA;YAAA;UAAA;;UAAA,kCAQyC,IARzC;;QAAA;UAUe,+BAAO,uBAClBN,IAAI,CAAC4F,OADa,EAElBxF,OAFkB,EAGlBnC,OAAO,CAACiB,OAHU,EAIlBjB,OAAO,CAAC0C,MAJU,CAAP;;QAVf;UAUQ+C,IAVR;;UAAA,KAiBM/E,KAAK,CAACkH,GAANlH,CAAU+E,IAAV/E,CAjBN;YAAA;YAAA;UAAA;;UAAA,MAkBU,IAAIoG,KAAJ,CACH,+CAAuCrB,IAAI,CAACzB,QAA5C,iEAECgB,KAAK,CAAC6C,IAAN7C,CAAWtE,KAAXsE,EAAkBS,cAAI;YAAA,oBAAUA,IAAI,CAACzB,QAAf;UAAA,CAAtBgB,EAAiDN,IAAjDM,CAAsD,IAAtDA,CAHE,CAlBV;;QAAA;UAyBEtE,KAAK,CAACqD,GAANrD,CAAU+E,IAAV/E;UACkB,+BAAOlB,aAAa,CACpCkG,kBAAkB,CAACD,IAAD,CADkB,EAEpCzF,OAFoC,EAGpCU,KAHoC,EAIpCmF,UAJoC,CAApB;;QA1BpB;UA0BQtC,SA1BR;UAgCE7C,KAAK,CAACoH,MAANpH,CAAa+E,IAAb/E;;UAhCF,IAkCO6C,SAlCP;YAAA;YAAA;UAAA;;UAAA,kCAkCyB,KAlCzB;;QAAA;UAoCEF,UAAU,CAACnD,KAAD,EAAQqD,SAAR,CAAVF;UApCF,kCAsCS,IAtCT;;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA;;AAyCA,SAASA,UAAT,CAAoB0E,MAApB,EAAyCC,MAAzC,EAA2E;EAAA;;EACzED,yBAAM,CAACzH,OAAPyH,EAAeX,IAAfW,2CAAuBC,MAAM,CAAC1H,OAA9ByH;;EACAA,yBAAM,CAAC5H,OAAP4H,EAAeX,IAAfW,2CAAuBC,MAAM,CAAC7H,OAA9B4H;;EACAA,yBAAM,CAAC1H,OAAP0H,EAAeX,IAAfW,2CAAuBC,MAAM,CAAC3H,OAA9B0H;;EAHyE,2CAItDC,MAAM,CAACtH,KAJ+C;EAAA;;EAAA;IAIzE,oDAAiC;MAAA,IAAtB+E,IAAsB;MAC/BsC,MAAM,CAACrH,KAAPqH,CAAahE,GAAbgE,CAAiBtC,IAAjBsC;IACD;EANwE;IAAA;EAAA;IAAA;EAAA;;EAQzE,OAAOA,MAAP;AACD;;AAED,SAAUrI,cAAV,CACEqI,MADF;EAAA;;EAAA;EAAA;IAAA;MAAA;QAAA;UAEIzH,OAFJ,SAEIA,OAFJ,EAEaH,OAFb,SAEaA,OAFb,EAEsBE,OAFtB,SAEsBA,OAFtB;UAIE0H,MAAM,CAACzH,OAAPyH,CAAeX,IAAfW,CAAoBzH,OAApByH;UAJF,eAKEA,0BAAM,CAAC5H,OAAP4H,EAAeX,IALjB;UAAA;UAAA;UAK0B,+BAAOjH,OAAO,EAAd;;QAL1B;UAAA;UAAA;;UAAA;;UAAA,eAME4H,0BAAM,CAAC1H,OAAP0H,EAAeX,IANjB;UAAA;UAAA;UAM0B,+BAAO/G,OAAO,EAAd;;QAN1B;UAAA;UAAA;;UAAA;;UAAA,kCAQS0H,MART;;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA;;AAWA,SAAShF,UAAT,GAAmC;EACjC,OAAO;IACLzC,OAAO,EAAE,EADJ;IAELD,OAAO,EAAE,EAFJ;IAGLF,OAAO,EAAE,EAHJ;IAILO,KAAK,EAAE,IAAIC,GAAJ;EAJF,CAAP;AAMD;;AAED,SAASF,gBAAT,CAA0BsB,IAA1B,EAAoE;EAClE,IAAMzB,OAAO,qBACRyB,IADQ,CAAb;EAGA,OAAOzB,OAAO,CAACqH,OAAf;EACA,OAAOrH,OAAO,CAACU,GAAf;EACA,OAAOV,OAAO,CAACa,SAAf;EACA,OAAOb,OAAO,CAACH,OAAf;EACA,OAAOG,OAAO,CAACD,OAAf;EACA,OAAOC,OAAO,CAAC2H,aAAf;EACA,OAAO3H,OAAO,CAACsD,MAAf;EACA,OAAOtD,OAAO,CAACmH,IAAf;EACA,OAAOnH,OAAO,CAAC4H,IAAf;EACA,OAAO5H,OAAO,CAAC6H,OAAf;EACA,OAAO7H,OAAO,CAAC8H,OAAf;;EAIA,IAAIC,MAAM,CAACC,SAAPD,CAAiBE,cAAjBF,CAAgCG,IAAhCH,CAAqC/H,OAArC+H,EAA8C,WAA9CA,CAAJ,EAAgE;IAC9D/H,OAAO,CAACmI,UAARnI,GAAqBA,OAAO,CAACoI,SAA7BpI;IACA,OAAOA,OAAO,CAACoI,SAAf;EACD;;EACD,OAAOpI,OAAP;AACD;;AAED,SAASF,gBAAT,CACEuI,KADF,EAE6B;EAC3B,IAAMpI,GAGL,GAAG,IAAIqI,GAAJ,EAHJ;EAKA,IAAMpC,WAAW,GAAG,EAApB;;EAN2B,4CAQRmC,KARQ;EAAA;;EAAA;IAQ3B,uDAA0B;MAAA,IAAfE,IAAe;;MACxB,IAAI,OAAOA,IAAI,CAACC,KAAZ,KAAsB,UAA1B,EAAsC;QACpC,IAAMC,KAAK,GAAGF,IAAI,CAACC,KAAnB;QACA,IAAIE,OAAO,GAAGzI,GAAG,CAAC0I,GAAJ1I,CAAQwI,KAARxI,CAAd;;QACA,IAAI,CAACyI,OAAL,EAAc;UACZA,OAAO,GAAG,IAAIJ,GAAJ,EAAVI;UACAzI,GAAG,CAAC2I,GAAJ3I,CAAQwI,KAARxI,EAAeyI,OAAfzI;QACD;;QACD,IAAI4I,IAAI,GAAGH,OAAO,CAACC,GAARD,CAAYH,IAAI,CAAChC,IAAjBmC,CAAX;;QACA,IAAI,CAACG,IAAL,EAAW;UACTA,IAAI,GAAG;YAAEL,KAAK,EAAED;UAAT,CAAPM;UACA3C,WAAW,CAACY,IAAZZ,CAAiB2C,IAAjB3C;UAIA,IAAI,CAACqC,IAAI,CAACO,OAAV,EAAmBJ,OAAO,CAACE,GAARF,CAAYH,IAAI,CAAChC,IAAjBmC,EAAuBG,IAAvBH;QANrB,OAOO;UACLG,IAAI,CAACL,KAALK,GAAaN,IAAbM;QACD;MAjBH,OAkBO;QACL3C,WAAW,CAACY,IAAZZ,CAAiB;UAAEsC,KAAK,EAAED;QAAT,CAAjBrC;MACD;IACF;EA9B0B;IAAA;EAAA;IAAA;EAAA;;EAgC3B,OAAOA,WAAW,CAAC6C,MAAZ7C,CAAmB,UAAC8C,GAAD,EAAMH,IAAN,EAAe;IACvCG,GAAG,CAAClC,IAAJkC,CAASH,IAAI,CAACL,KAAdQ;IACA,OAAOA,GAAP;EAFK,GAGJ,EAHI9C,CAAP;AAID;;AAED,SAASW,kBAAT,QAEEhF,OAFF,EAGEnC,OAHF,EAIEuJ,UAJF,EAKW;EAAA,IAJPjJ,OAIO,SAJPA,OAIO;EACT,OACE,CAACA,OAAO,CAAC4H,IAAR5H,KAAiB+B,SAAjB/B,IACCkJ,uBAAuB,CAACxJ,OAAD,EAAUM,OAAO,CAAC4H,IAAlB,EAAwB/F,OAAxB,EAAiCoH,UAAjC,CADzB,MAECjJ,OAAO,CAAC6H,OAAR7H,KAAoB+B,SAApB/B,IACCkJ,uBAAuB,CAACxJ,OAAD,EAAUM,OAAO,CAAC6H,OAAlB,EAA2BhG,OAA3B,EAAoCoH,UAApC,CAHzB,MAICjJ,OAAO,CAAC8H,OAAR9H,KAAoB+B,SAApB/B,IACC,CAACkJ,uBAAuB,CAACxJ,OAAD,EAAUM,OAAO,CAAC8H,OAAlB,EAA2BjG,OAA3B,EAAoCoH,UAApC,CAL1B,CADF;AAQD;;AAED,SAASC,uBAAT,CACExJ,OADF,EAEEkI,IAFF,EAGE/F,OAHF,EAIEoH,UAJF,EAKW;EACT,IAAME,QAAQ,GAAGzE,KAAK,CAACC,OAAND,CAAckD,IAAdlD,IAAsBkD,IAAtBlD,GAA6B,CAACkD,IAAD,CAA9C;EAEA,OAAOwB,eAAe,CAAC1J,OAAD,EAAUyJ,QAAV,EAAoBtH,OAApB,EAA6BoH,UAA7B,CAAtB;AACD;;AAKD,SAASI,kBAAT,CACEC,IADF,EAEEd,KAFF,EAGoC;EAClC,IAAIA,KAAK,YAAYe,MAArB,EAA6B;IAC3B,OAAOC,MAAM,CAAChB,KAAD,CAAb;EACD;;EAED,OAAOA,KAAP;AACD;;AAKD,SAAS7E,YAAT,CACEjE,OADF,EAEE4D,MAFF,EAGE6D,IAHF,EAIEtF,OAJF,EAKW;EACT,IAAIyB,MAAM,IAAI8F,eAAe,CAAC1J,OAAD,EAAU4D,MAAV,EAAkBzB,OAAlB,CAA7B,EAAyD;IAAA;;IACvD,IAAM4H,OAAO,uCAAG,qBACd/J,OAAO,CAACwD,QADM,gCACM,WADT,mDAE4BwG,IAAI,CAACC,SAALD,CACvCpG,MADuCoG,EAEvCL,kBAFuCK,CAF5B,sBAKA7H,OALA,OAAb;IAMAtC,KAAK,CAACkK,OAAD,CAALlK;;IACA,IAAIG,OAAO,CAACqE,UAAZ,EAAwB;MACtBC,OAAO,CAACC,GAARD,CAAYyF,OAAZzF;IACD;;IACD,OAAO,IAAP;EACD;;EAED,IAAImD,IAAI,IAAI,CAACiC,eAAe,CAAC1J,OAAD,EAAUyH,IAAV,EAAgBtF,OAAhB,CAA5B,EAAsD;IAAA;;IACpD,IAAM4H,QAAO,uCAAG,sBACd/J,OAAO,CAACwD,QADM,iCACM,WADT,wDAEiCwG,IAAI,CAACC,SAALD,CAC5CvC,IAD4CuC,EAE5CL,kBAF4CK,CAFjC,sBAKA7H,OALA,OAAb;;IAMAtC,KAAK,CAACkK,QAAD,CAALlK;;IACA,IAAIG,OAAO,CAACqE,UAAZ,EAAwB;MACtBC,OAAO,CAACC,GAARD,CAAYyF,QAAZzF;IACD;;IACD,OAAO,IAAP;EACD;;EAED,OAAO,KAAP;AACD;;AAMD,SAASoF,eAAT,CACE1J,OADF,EAEEyJ,QAFF,EAGEtH,OAHF,EAIEoH,UAJF,EAKW;EACT,OAAOE,QAAQ,CAACnE,IAATmE,CAAcS,iBAAO;IAAA,OAC1B1E,YAAY,CAAC0E,OAAD,EAAU/H,OAAV,EAAmBnC,OAAO,CAACwD,QAA3B,EAAqCxD,OAArC,EAA8CuJ,UAA9C,CADc;EAAA,CAArBE,CAAP;AAGD;;AAED,SAASjE,YAAT,CACE0E,OADF,EAEE/H,OAFF,EAGEgI,UAHF,EAIEnK,OAJF,EAKEuJ,UALF,EAMW;EACT,IAAI,OAAOW,OAAP,KAAmB,UAAvB,EAAmC;IACjC,OAAO,CAAC,CAAC,2CAAmBA,OAAnB,EAA4BC,UAA5B,EAAwC;MAC/ChI,OAD+C,EAC/CA,OAD+C;MAE/ClB,OAAO,EAAEjB,OAAO,CAACiB,OAF8B;MAG/CyB,MAAM,EAAE1C,OAAO,CAAC0C;IAH+B,CAAxC,CAAT;EAKD;;EAED,IAAI,OAAOyH,UAAP,KAAsB,QAA1B,EAAoC;IAClC,MAAM,IAAIC,oBAAJ,sFAEJb,UAFI,CAAN;EAID;;EAED,IAAI,OAAOW,OAAP,KAAmB,QAAvB,EAAiC;IAC/BA,OAAO,GAAG,6BAAmBA,OAAnB,EAA4B/H,OAA5B,CAAV+H;EACD;;EACD,OAAOA,OAAO,CAAChC,IAARgC,CAAaC,UAAbD,CAAP;AACD","names":["buildPresetChain","buildRootChain","loadFileChain","mergeExtendsChain","mergeChainOpts","_path","_debug","debug","buildDebug","arg","context","buildPresetChainWalker","chain","plugins","dedupDescriptors","presets","options","map","o","normalizeOptions","files","Set","makeChainWalker","root","preset","loadPresetDescriptors","env","envName","loadPresetEnvDescriptors","overrides","index","loadPresetOverridesDescriptors","overridesEnv","loadPresetOverridesEnvDescriptors","createLogger","buildRootDescriptors","alias","createUncachedDescriptors","buildEnvDescriptors","buildOverrideDescriptors","buildOverrideEnvDescriptors","opts","programmaticLogger","ConfigPrinter","loadProgrammaticChain","dirname","cwd","undefined","programmaticChain","output","programmaticReport","configFile","caller","babelrc","babelrcRoots","babelrcRootsDirectory","configFileChain","emptyChain","configFileLogger","validatedFile","validateConfigFile","result","configReport","mergeChain","isIgnored","fileChain","filename","pkgData","babelrcLoadEnabled","ignoreFile","ignore","babelrcFile","config","add","filepath","shouldIgnore","validateBabelrcFile","babelrcLogger","babelRcReport","showConfig","console","log","filter","x","join","fileHandling","absoluteRoot","directories","indexOf","babelrcPatterns","Array","isArray","pat","path","resolve","length","some","directory","matchPattern","file","validateExtendFile","input","createCachedDescriptors","baseLogger","buildProgrammaticLogger","loadFileChainWalker","loadFileDescriptors","loadFileEnvDescriptors","loadFileOverridesDescriptors","loadFileOverridesEnvDescriptors","buildFileLogger","configure","ChainFormatter","Config","descriptors","_","Programmatic","callerName","_context$caller","name","Error","override","chainWalker","flattenedConfigs","rootOpts","configIsApplicable","push","envOpts","forEach","overrideOps","overrideEnvOpts","only","logger","extends","has","from","delete","target","source","passPerPreset","test","include","exclude","Object","prototype","hasOwnProperty","call","sourceMaps","sourceMap","items","Map","item","value","fnKey","nameMap","get","set","desc","ownPass","reduce","acc","configName","configFieldIsApplicable","patterns","matchesPatterns","ignoreListReplacer","_key","RegExp","String","message","JSON","stringify","pattern","pathToTest","ConfigError"],"sources":["C:\\Users\\Rohith\\mern\\frontend\\node_modules\\@babel\\core\\src\\config\\config-chain.ts"],"sourcesContent":["import path from \"path\";\nimport buildDebug from \"debug\";\nimport type { Handler } from \"gensync\";\nimport { validate } from \"./validation/options\";\nimport type {\n  ValidatedOptions,\n  IgnoreList,\n  ConfigApplicableTest,\n  BabelrcSearch,\n  CallerMetadata,\n  IgnoreItem,\n} from \"./validation/options\";\nimport pathPatternToRegex from \"./pattern-to-regex\";\nimport { ConfigPrinter, ChainFormatter } from \"./printer\";\nimport type { ReadonlyDeepArray } from \"./helpers/deep-array\";\n\nimport { endHiddenCallStack } from \"../errors/rewrite-stack-trace\";\nimport ConfigError from \"../errors/config-error\";\n\nconst debug = buildDebug(\"babel:config:config-chain\");\n\nimport {\n  findPackageData,\n  findRelativeConfig,\n  findRootConfig,\n  loadConfig,\n} from \"./files\";\nimport type { ConfigFile, IgnoreFile, FilePackageData } from \"./files\";\n\nimport { makeWeakCacheSync, makeStrongCacheSync } from \"./caching\";\n\nimport {\n  createCachedDescriptors,\n  createUncachedDescriptors,\n} from \"./config-descriptors\";\nimport type {\n  UnloadedDescriptor,\n  OptionsAndDescriptors,\n  ValidatedFile,\n} from \"./config-descriptors\";\n\nexport type ConfigChain = {\n  plugins: Array<UnloadedDescriptor>;\n  presets: Array<UnloadedDescriptor>;\n  options: Array<ValidatedOptions>;\n  files: Set<string>;\n};\n\nexport type PresetInstance = {\n  options: ValidatedOptions;\n  alias: string;\n  dirname: string;\n  externalDependencies: ReadonlyDeepArray<string>;\n};\n\nexport type ConfigContext = {\n  filename: string | undefined;\n  cwd: string;\n  root: string;\n  envName: string;\n  caller: CallerMetadata | undefined;\n  showConfig: boolean;\n};\n\n/**\n * Build a config chain for a given preset.\n */\nexport function* buildPresetChain(\n  arg: PresetInstance,\n  context: any,\n): Handler<ConfigChain | null> {\n  const chain = yield* buildPresetChainWalker(arg, context);\n  if (!chain) return null;\n\n  return {\n    plugins: dedupDescriptors(chain.plugins),\n    presets: dedupDescriptors(chain.presets),\n    options: chain.options.map(o => normalizeOptions(o)),\n    files: new Set(),\n  };\n}\n\nexport const buildPresetChainWalker = makeChainWalker<PresetInstance>({\n  root: preset => loadPresetDescriptors(preset),\n  env: (preset, envName) => loadPresetEnvDescriptors(preset)(envName),\n  overrides: (preset, index) => loadPresetOverridesDescriptors(preset)(index),\n  overridesEnv: (preset, index, envName) =>\n    loadPresetOverridesEnvDescriptors(preset)(index)(envName),\n  createLogger: () => () => {}, // Currently we don't support logging how preset is expanded\n});\nconst loadPresetDescriptors = makeWeakCacheSync((preset: PresetInstance) =>\n  buildRootDescriptors(preset, preset.alias, createUncachedDescriptors),\n);\nconst loadPresetEnvDescriptors = makeWeakCacheSync((preset: PresetInstance) =>\n  makeStrongCacheSync((envName: string) =>\n    buildEnvDescriptors(\n      preset,\n      preset.alias,\n      createUncachedDescriptors,\n      envName,\n    ),\n  ),\n);\nconst loadPresetOverridesDescriptors = makeWeakCacheSync(\n  (preset: PresetInstance) =>\n    makeStrongCacheSync((index: number) =>\n      buildOverrideDescriptors(\n        preset,\n        preset.alias,\n        createUncachedDescriptors,\n        index,\n      ),\n    ),\n);\nconst loadPresetOverridesEnvDescriptors = makeWeakCacheSync(\n  (preset: PresetInstance) =>\n    makeStrongCacheSync((index: number) =>\n      makeStrongCacheSync((envName: string) =>\n        buildOverrideEnvDescriptors(\n          preset,\n          preset.alias,\n          createUncachedDescriptors,\n          index,\n          envName,\n        ),\n      ),\n    ),\n);\n\nexport type FileHandling = \"transpile\" | \"ignored\" | \"unsupported\";\nexport type RootConfigChain = ConfigChain & {\n  babelrc: ConfigFile | void;\n  config: ConfigFile | void;\n  ignore: IgnoreFile | void;\n  fileHandling: FileHandling;\n  files: Set<string>;\n};\n\n/**\n * Build a config chain for Babel's full root configuration.\n */\nexport function* buildRootChain(\n  opts: ValidatedOptions,\n  context: ConfigContext,\n): Handler<RootConfigChain | null> {\n  let configReport, babelRcReport;\n  const programmaticLogger = new ConfigPrinter();\n  const programmaticChain = yield* loadProgrammaticChain(\n    {\n      options: opts,\n      dirname: context.cwd,\n    },\n    context,\n    undefined,\n    programmaticLogger,\n  );\n  if (!programmaticChain) return null;\n  const programmaticReport = yield* programmaticLogger.output();\n\n  let configFile;\n  if (typeof opts.configFile === \"string\") {\n    configFile = yield* loadConfig(\n      opts.configFile,\n      context.cwd,\n      context.envName,\n      context.caller,\n    );\n  } else if (opts.configFile !== false) {\n    configFile = yield* findRootConfig(\n      context.root,\n      context.envName,\n      context.caller,\n    );\n  }\n\n  let { babelrc, babelrcRoots } = opts;\n  let babelrcRootsDirectory = context.cwd;\n\n  const configFileChain = emptyChain();\n  const configFileLogger = new ConfigPrinter();\n  if (configFile) {\n    const validatedFile = validateConfigFile(configFile);\n    const result = yield* loadFileChain(\n      validatedFile,\n      context,\n      undefined,\n      configFileLogger,\n    );\n    if (!result) return null;\n    configReport = yield* configFileLogger.output();\n\n    // Allow config files to toggle `.babelrc` resolution on and off and\n    // specify where the roots are.\n    if (babelrc === undefined) {\n      babelrc = validatedFile.options.babelrc;\n    }\n    if (babelrcRoots === undefined) {\n      babelrcRootsDirectory = validatedFile.dirname;\n      babelrcRoots = validatedFile.options.babelrcRoots;\n    }\n\n    mergeChain(configFileChain, result);\n  }\n\n  let ignoreFile, babelrcFile;\n  let isIgnored = false;\n  const fileChain = emptyChain();\n  // resolve all .babelrc files\n  if (\n    (babelrc === true || babelrc === undefined) &&\n    typeof context.filename === \"string\"\n  ) {\n    const pkgData = yield* findPackageData(context.filename);\n\n    if (\n      pkgData &&\n      babelrcLoadEnabled(context, pkgData, babelrcRoots, babelrcRootsDirectory)\n    ) {\n      ({ ignore: ignoreFile, config: babelrcFile } = yield* findRelativeConfig(\n        pkgData,\n        context.envName,\n        context.caller,\n      ));\n\n      if (ignoreFile) {\n        fileChain.files.add(ignoreFile.filepath);\n      }\n\n      if (\n        ignoreFile &&\n        shouldIgnore(context, ignoreFile.ignore, null, ignoreFile.dirname)\n      ) {\n        isIgnored = true;\n      }\n\n      if (babelrcFile && !isIgnored) {\n        const validatedFile = validateBabelrcFile(babelrcFile);\n        const babelrcLogger = new ConfigPrinter();\n        const result = yield* loadFileChain(\n          validatedFile,\n          context,\n          undefined,\n          babelrcLogger,\n        );\n        if (!result) {\n          isIgnored = true;\n        } else {\n          babelRcReport = yield* babelrcLogger.output();\n          mergeChain(fileChain, result);\n        }\n      }\n\n      if (babelrcFile && isIgnored) {\n        fileChain.files.add(babelrcFile.filepath);\n      }\n    }\n  }\n\n  if (context.showConfig) {\n    console.log(\n      `Babel configs on \"${context.filename}\" (ascending priority):\\n` +\n        // print config by the order of ascending priority\n        [configReport, babelRcReport, programmaticReport]\n          .filter(x => !!x)\n          .join(\"\\n\\n\") +\n        \"\\n-----End Babel configs-----\",\n    );\n  }\n  // Insert file chain in front so programmatic options have priority\n  // over configuration file chain items.\n  const chain = mergeChain(\n    mergeChain(mergeChain(emptyChain(), configFileChain), fileChain),\n    programmaticChain,\n  );\n\n  return {\n    plugins: isIgnored ? [] : dedupDescriptors(chain.plugins),\n    presets: isIgnored ? [] : dedupDescriptors(chain.presets),\n    options: isIgnored ? [] : chain.options.map(o => normalizeOptions(o)),\n    fileHandling: isIgnored ? \"ignored\" : \"transpile\",\n    ignore: ignoreFile || undefined,\n    babelrc: babelrcFile || undefined,\n    config: configFile || undefined,\n    files: chain.files,\n  };\n}\n\nfunction babelrcLoadEnabled(\n  context: ConfigContext,\n  pkgData: FilePackageData,\n  babelrcRoots: BabelrcSearch | undefined,\n  babelrcRootsDirectory: string,\n): boolean {\n  if (typeof babelrcRoots === \"boolean\") return babelrcRoots;\n\n  const absoluteRoot = context.root;\n\n  // Fast path to avoid having to match patterns if the babelrc is just\n  // loading in the standard root directory.\n  if (babelrcRoots === undefined) {\n    return pkgData.directories.indexOf(absoluteRoot) !== -1;\n  }\n\n  let babelrcPatterns = babelrcRoots;\n  if (!Array.isArray(babelrcPatterns)) {\n    babelrcPatterns = [babelrcPatterns as IgnoreItem];\n  }\n  babelrcPatterns = babelrcPatterns.map(pat => {\n    return typeof pat === \"string\"\n      ? path.resolve(babelrcRootsDirectory, pat)\n      : pat;\n  });\n\n  // Fast path to avoid having to match patterns if the babelrc is just\n  // loading in the standard root directory.\n  if (babelrcPatterns.length === 1 && babelrcPatterns[0] === absoluteRoot) {\n    return pkgData.directories.indexOf(absoluteRoot) !== -1;\n  }\n\n  return babelrcPatterns.some(pat => {\n    if (typeof pat === \"string\") {\n      pat = pathPatternToRegex(pat, babelrcRootsDirectory);\n    }\n\n    return pkgData.directories.some(directory => {\n      return matchPattern(pat, babelrcRootsDirectory, directory, context);\n    });\n  });\n}\n\nconst validateConfigFile = makeWeakCacheSync(\n  (file: ConfigFile): ValidatedFile => ({\n    filepath: file.filepath,\n    dirname: file.dirname,\n    options: validate(\"configfile\", file.options, file.filepath),\n  }),\n);\n\nconst validateBabelrcFile = makeWeakCacheSync(\n  (file: ConfigFile): ValidatedFile => ({\n    filepath: file.filepath,\n    dirname: file.dirname,\n    options: validate(\"babelrcfile\", file.options, file.filepath),\n  }),\n);\n\nconst validateExtendFile = makeWeakCacheSync(\n  (file: ConfigFile): ValidatedFile => ({\n    filepath: file.filepath,\n    dirname: file.dirname,\n    options: validate(\"extendsfile\", file.options, file.filepath),\n  }),\n);\n\n/**\n * Build a config chain for just the programmatic options passed into Babel.\n */\nconst loadProgrammaticChain = makeChainWalker({\n  root: input => buildRootDescriptors(input, \"base\", createCachedDescriptors),\n  env: (input, envName) =>\n    buildEnvDescriptors(input, \"base\", createCachedDescriptors, envName),\n  overrides: (input, index) =>\n    buildOverrideDescriptors(input, \"base\", createCachedDescriptors, index),\n  overridesEnv: (input, index, envName) =>\n    buildOverrideEnvDescriptors(\n      input,\n      \"base\",\n      createCachedDescriptors,\n      index,\n      envName,\n    ),\n  createLogger: (input, context, baseLogger) =>\n    buildProgrammaticLogger(input, context, baseLogger),\n});\n\n/**\n * Build a config chain for a given file.\n */\nconst loadFileChainWalker = makeChainWalker<ValidatedFile>({\n  root: file => loadFileDescriptors(file),\n  env: (file, envName) => loadFileEnvDescriptors(file)(envName),\n  overrides: (file, index) => loadFileOverridesDescriptors(file)(index),\n  overridesEnv: (file, index, envName) =>\n    loadFileOverridesEnvDescriptors(file)(index)(envName),\n  createLogger: (file, context, baseLogger) =>\n    buildFileLogger(file.filepath, context, baseLogger),\n});\n\nfunction* loadFileChain(\n  input: ValidatedFile,\n  context: ConfigContext,\n  files: Set<ConfigFile>,\n  baseLogger: ConfigPrinter,\n) {\n  const chain = yield* loadFileChainWalker(input, context, files, baseLogger);\n  if (chain) {\n    chain.files.add(input.filepath);\n  }\n\n  return chain;\n}\n\nconst loadFileDescriptors = makeWeakCacheSync((file: ValidatedFile) =>\n  buildRootDescriptors(file, file.filepath, createUncachedDescriptors),\n);\nconst loadFileEnvDescriptors = makeWeakCacheSync((file: ValidatedFile) =>\n  makeStrongCacheSync((envName: string) =>\n    buildEnvDescriptors(\n      file,\n      file.filepath,\n      createUncachedDescriptors,\n      envName,\n    ),\n  ),\n);\nconst loadFileOverridesDescriptors = makeWeakCacheSync((file: ValidatedFile) =>\n  makeStrongCacheSync((index: number) =>\n    buildOverrideDescriptors(\n      file,\n      file.filepath,\n      createUncachedDescriptors,\n      index,\n    ),\n  ),\n);\nconst loadFileOverridesEnvDescriptors = makeWeakCacheSync(\n  (file: ValidatedFile) =>\n    makeStrongCacheSync((index: number) =>\n      makeStrongCacheSync((envName: string) =>\n        buildOverrideEnvDescriptors(\n          file,\n          file.filepath,\n          createUncachedDescriptors,\n          index,\n          envName,\n        ),\n      ),\n    ),\n);\n\nfunction buildFileLogger(\n  filepath: string,\n  context: ConfigContext,\n  baseLogger: ConfigPrinter | void,\n) {\n  if (!baseLogger) {\n    return () => {};\n  }\n  return baseLogger.configure(context.showConfig, ChainFormatter.Config, {\n    filepath,\n  });\n}\n\nfunction buildRootDescriptors(\n  { dirname, options }: Partial<ValidatedFile>,\n  alias: string,\n  descriptors: (\n    dirname: string,\n    options: ValidatedOptions,\n    alias: string,\n  ) => OptionsAndDescriptors,\n) {\n  return descriptors(dirname, options, alias);\n}\n\nfunction buildProgrammaticLogger(\n  _: unknown,\n  context: ConfigContext,\n  baseLogger: ConfigPrinter | void,\n) {\n  if (!baseLogger) {\n    return () => {};\n  }\n  return baseLogger.configure(context.showConfig, ChainFormatter.Programmatic, {\n    callerName: context.caller?.name,\n  });\n}\n\nfunction buildEnvDescriptors(\n  { dirname, options }: Partial<ValidatedFile>,\n  alias: string,\n  descriptors: (\n    dirname: string,\n    options: ValidatedOptions,\n    alias: string,\n  ) => OptionsAndDescriptors,\n  envName: string,\n) {\n  const opts = options.env && options.env[envName];\n  return opts ? descriptors(dirname, opts, `${alias}.env[\"${envName}\"]`) : null;\n}\n\nfunction buildOverrideDescriptors(\n  { dirname, options }: Partial<ValidatedFile>,\n  alias: string,\n  descriptors: (\n    dirname: string,\n    options: ValidatedOptions,\n    alias: string,\n  ) => OptionsAndDescriptors,\n  index: number,\n) {\n  const opts = options.overrides && options.overrides[index];\n  if (!opts) throw new Error(\"Assertion failure - missing override\");\n\n  return descriptors(dirname, opts, `${alias}.overrides[${index}]`);\n}\n\nfunction buildOverrideEnvDescriptors(\n  { dirname, options }: Partial<ValidatedFile>,\n  alias: string,\n  descriptors: (\n    dirname: string,\n    options: ValidatedOptions,\n    alias: string,\n  ) => OptionsAndDescriptors,\n  index: number,\n  envName: string,\n) {\n  const override = options.overrides && options.overrides[index];\n  if (!override) throw new Error(\"Assertion failure - missing override\");\n\n  const opts = override.env && override.env[envName];\n  return opts\n    ? descriptors(\n        dirname,\n        opts,\n        `${alias}.overrides[${index}].env[\"${envName}\"]`,\n      )\n    : null;\n}\n\nfunction makeChainWalker<\n  ArgT extends {\n    options: ValidatedOptions;\n    dirname: string;\n    filepath?: string;\n  },\n>({\n  root,\n  env,\n  overrides,\n  overridesEnv,\n  createLogger,\n}: {\n  root: (configEntry: ArgT) => OptionsAndDescriptors;\n  env: (configEntry: ArgT, env: string) => OptionsAndDescriptors | null;\n  overrides: (configEntry: ArgT, index: number) => OptionsAndDescriptors;\n  overridesEnv: (\n    configEntry: ArgT,\n    index: number,\n    env: string,\n  ) => OptionsAndDescriptors | null;\n  createLogger: (\n    configEntry: ArgT,\n    context: ConfigContext,\n    printer: ConfigPrinter | void,\n  ) => (\n    opts: OptionsAndDescriptors,\n    index?: number | null,\n    env?: string | null,\n  ) => void;\n}): (\n  configEntry: ArgT,\n  context: ConfigContext,\n  files?: Set<ConfigFile>,\n  baseLogger?: ConfigPrinter,\n) => Handler<ConfigChain | null> {\n  return function* chainWalker(input, context, files = new Set(), baseLogger) {\n    const { dirname } = input;\n\n    const flattenedConfigs: Array<{\n      config: OptionsAndDescriptors;\n      index: number | undefined | null;\n      envName: string | undefined | null;\n    }> = [];\n\n    const rootOpts = root(input);\n    if (configIsApplicable(rootOpts, dirname, context, input.filepath)) {\n      flattenedConfigs.push({\n        config: rootOpts,\n        envName: undefined,\n        index: undefined,\n      });\n\n      const envOpts = env(input, context.envName);\n      if (\n        envOpts &&\n        configIsApplicable(envOpts, dirname, context, input.filepath)\n      ) {\n        flattenedConfigs.push({\n          config: envOpts,\n          envName: context.envName,\n          index: undefined,\n        });\n      }\n\n      (rootOpts.options.overrides || []).forEach((_, index) => {\n        const overrideOps = overrides(input, index);\n        if (configIsApplicable(overrideOps, dirname, context, input.filepath)) {\n          flattenedConfigs.push({\n            config: overrideOps,\n            index,\n            envName: undefined,\n          });\n\n          const overrideEnvOpts = overridesEnv(input, index, context.envName);\n          if (\n            overrideEnvOpts &&\n            configIsApplicable(\n              overrideEnvOpts,\n              dirname,\n              context,\n              input.filepath,\n            )\n          ) {\n            flattenedConfigs.push({\n              config: overrideEnvOpts,\n              index,\n              envName: context.envName,\n            });\n          }\n        }\n      });\n    }\n\n    // Process 'ignore' and 'only' before 'extends' items are processed so\n    // that we don't do extra work loading extended configs if a file is\n    // ignored.\n    if (\n      flattenedConfigs.some(\n        ({\n          config: {\n            options: { ignore, only },\n          },\n        }) => shouldIgnore(context, ignore, only, dirname),\n      )\n    ) {\n      return null;\n    }\n\n    const chain = emptyChain();\n    const logger = createLogger(input, context, baseLogger);\n\n    for (const { config, index, envName } of flattenedConfigs) {\n      if (\n        !(yield* mergeExtendsChain(\n          chain,\n          config.options,\n          dirname,\n          context,\n          files,\n          baseLogger,\n        ))\n      ) {\n        return null;\n      }\n\n      logger(config, index, envName);\n      yield* mergeChainOpts(chain, config);\n    }\n    return chain;\n  };\n}\n\nfunction* mergeExtendsChain(\n  chain: ConfigChain,\n  opts: ValidatedOptions,\n  dirname: string,\n  context: ConfigContext,\n  files: Set<ConfigFile>,\n  baseLogger?: ConfigPrinter,\n): Handler<boolean> {\n  if (opts.extends === undefined) return true;\n\n  const file = yield* loadConfig(\n    opts.extends,\n    dirname,\n    context.envName,\n    context.caller,\n  );\n\n  if (files.has(file)) {\n    throw new Error(\n      `Configuration cycle detected loading ${file.filepath}.\\n` +\n        `File already loaded following the config chain:\\n` +\n        Array.from(files, file => ` - ${file.filepath}`).join(\"\\n\"),\n    );\n  }\n\n  files.add(file);\n  const fileChain = yield* loadFileChain(\n    validateExtendFile(file),\n    context,\n    files,\n    baseLogger,\n  );\n  files.delete(file);\n\n  if (!fileChain) return false;\n\n  mergeChain(chain, fileChain);\n\n  return true;\n}\n\nfunction mergeChain(target: ConfigChain, source: ConfigChain): ConfigChain {\n  target.options.push(...source.options);\n  target.plugins.push(...source.plugins);\n  target.presets.push(...source.presets);\n  for (const file of source.files) {\n    target.files.add(file);\n  }\n\n  return target;\n}\n\nfunction* mergeChainOpts(\n  target: ConfigChain,\n  { options, plugins, presets }: OptionsAndDescriptors,\n): Handler<ConfigChain> {\n  target.options.push(options);\n  target.plugins.push(...(yield* plugins()));\n  target.presets.push(...(yield* presets()));\n\n  return target;\n}\n\nfunction emptyChain(): ConfigChain {\n  return {\n    options: [],\n    presets: [],\n    plugins: [],\n    files: new Set(),\n  };\n}\n\nfunction normalizeOptions(opts: ValidatedOptions): ValidatedOptions {\n  const options = {\n    ...opts,\n  };\n  delete options.extends;\n  delete options.env;\n  delete options.overrides;\n  delete options.plugins;\n  delete options.presets;\n  delete options.passPerPreset;\n  delete options.ignore;\n  delete options.only;\n  delete options.test;\n  delete options.include;\n  delete options.exclude;\n\n  // \"sourceMap\" is just aliased to sourceMap, so copy it over as\n  // we merge the options together.\n  if (Object.prototype.hasOwnProperty.call(options, \"sourceMap\")) {\n    options.sourceMaps = options.sourceMap;\n    delete options.sourceMap;\n  }\n  return options;\n}\n\nfunction dedupDescriptors(\n  items: Array<UnloadedDescriptor>,\n): Array<UnloadedDescriptor> {\n  const map: Map<\n    Function,\n    Map<string | void, { value: UnloadedDescriptor }>\n  > = new Map();\n\n  const descriptors = [];\n\n  for (const item of items) {\n    if (typeof item.value === \"function\") {\n      const fnKey = item.value;\n      let nameMap = map.get(fnKey);\n      if (!nameMap) {\n        nameMap = new Map();\n        map.set(fnKey, nameMap);\n      }\n      let desc = nameMap.get(item.name);\n      if (!desc) {\n        desc = { value: item };\n        descriptors.push(desc);\n\n        // Treat passPerPreset presets as unique, skipping them\n        // in the merge processing steps.\n        if (!item.ownPass) nameMap.set(item.name, desc);\n      } else {\n        desc.value = item;\n      }\n    } else {\n      descriptors.push({ value: item });\n    }\n  }\n\n  return descriptors.reduce((acc, desc) => {\n    acc.push(desc.value);\n    return acc;\n  }, []);\n}\n\nfunction configIsApplicable(\n  { options }: OptionsAndDescriptors,\n  dirname: string,\n  context: ConfigContext,\n  configName: string,\n): boolean {\n  return (\n    (options.test === undefined ||\n      configFieldIsApplicable(context, options.test, dirname, configName)) &&\n    (options.include === undefined ||\n      configFieldIsApplicable(context, options.include, dirname, configName)) &&\n    (options.exclude === undefined ||\n      !configFieldIsApplicable(context, options.exclude, dirname, configName))\n  );\n}\n\nfunction configFieldIsApplicable(\n  context: ConfigContext,\n  test: ConfigApplicableTest,\n  dirname: string,\n  configName: string,\n): boolean {\n  const patterns = Array.isArray(test) ? test : [test];\n\n  return matchesPatterns(context, patterns, dirname, configName);\n}\n\n/**\n * Print the ignoreList-values in a more helpful way than the default.\n */\nfunction ignoreListReplacer(\n  _key: string,\n  value: IgnoreList | IgnoreItem,\n): IgnoreList | IgnoreItem | string {\n  if (value instanceof RegExp) {\n    return String(value);\n  }\n\n  return value;\n}\n\n/**\n * Tests if a filename should be ignored based on \"ignore\" and \"only\" options.\n */\nfunction shouldIgnore(\n  context: ConfigContext,\n  ignore: IgnoreList | undefined | null,\n  only: IgnoreList | undefined | null,\n  dirname: string,\n): boolean {\n  if (ignore && matchesPatterns(context, ignore, dirname)) {\n    const message = `No config is applied to \"${\n      context.filename ?? \"(unknown)\"\n    }\" because it matches one of \\`ignore: ${JSON.stringify(\n      ignore,\n      ignoreListReplacer,\n    )}\\` from \"${dirname}\"`;\n    debug(message);\n    if (context.showConfig) {\n      console.log(message);\n    }\n    return true;\n  }\n\n  if (only && !matchesPatterns(context, only, dirname)) {\n    const message = `No config is applied to \"${\n      context.filename ?? \"(unknown)\"\n    }\" because it fails to match one of \\`only: ${JSON.stringify(\n      only,\n      ignoreListReplacer,\n    )}\\` from \"${dirname}\"`;\n    debug(message);\n    if (context.showConfig) {\n      console.log(message);\n    }\n    return true;\n  }\n\n  return false;\n}\n\n/**\n * Returns result of calling function with filename if pattern is a function.\n * Otherwise returns result of matching pattern Regex with filename.\n */\nfunction matchesPatterns(\n  context: ConfigContext,\n  patterns: IgnoreList,\n  dirname: string,\n  configName?: string,\n): boolean {\n  return patterns.some(pattern =>\n    matchPattern(pattern, dirname, context.filename, context, configName),\n  );\n}\n\nfunction matchPattern(\n  pattern: IgnoreItem,\n  dirname: string,\n  pathToTest: string | undefined,\n  context: ConfigContext,\n  configName?: string,\n): boolean {\n  if (typeof pattern === \"function\") {\n    return !!endHiddenCallStack(pattern)(pathToTest, {\n      dirname,\n      envName: context.envName,\n      caller: context.caller,\n    });\n  }\n\n  if (typeof pathToTest !== \"string\") {\n    throw new ConfigError(\n      `Configuration contains string/RegExp pattern, but no filename was passed to Babel`,\n      configName,\n    );\n  }\n\n  if (typeof pattern === \"string\") {\n    pattern = pathPatternToRegex(pattern, dirname);\n  }\n  return pattern.test(pathToTest);\n}\n"]},"metadata":{},"sourceType":"script"}