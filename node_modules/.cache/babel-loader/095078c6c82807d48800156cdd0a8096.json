{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _helperPluginUtils = require(\"@babel/helper-plugin-utils\");\n\nvar _core = require(\"@babel/core\");\n\nvar _default = (0, _helperPluginUtils.declare)(api => {\n  api.assertVersion(7);\n  const surrogate = /[\\ud800-\\udfff]/g;\n  const unicodeEscape = /(\\\\+)u\\{([0-9a-fA-F]+)\\}/g;\n\n  function escape(code) {\n    let str = code.toString(16);\n\n    while (str.length < 4) str = \"0\" + str;\n\n    return \"\\\\u\" + str;\n  }\n\n  function replacer(match, backslashes, code) {\n    if (backslashes.length % 2 === 0) {\n      return match;\n    }\n\n    const char = String.fromCodePoint(parseInt(code, 16));\n    const escaped = backslashes.slice(0, -1) + escape(char.charCodeAt(0));\n    return char.length === 1 ? escaped : escaped + escape(char.charCodeAt(1));\n  }\n\n  function replaceUnicodeEscapes(str) {\n    return str.replace(unicodeEscape, replacer);\n  }\n\n  function getUnicodeEscape(str) {\n    let match;\n\n    while (match = unicodeEscape.exec(str)) {\n      if (match[1].length % 2 === 0) continue;\n      unicodeEscape.lastIndex = 0;\n      return match[0];\n    }\n\n    return null;\n  }\n\n  return {\n    name: \"transform-unicode-escapes\",\n\n    manipulateOptions(_ref) {\n      let {\n        generatorOpts\n      } = _ref;\n\n      var _generatorOpts$jsescO, _generatorOpts$jsescO2;\n\n      if (!generatorOpts.jsescOption) {\n        generatorOpts.jsescOption = {};\n      }\n\n      (_generatorOpts$jsescO2 = (_generatorOpts$jsescO = generatorOpts.jsescOption).minimal) != null ? _generatorOpts$jsescO2 : _generatorOpts$jsescO.minimal = false;\n    },\n\n    visitor: {\n      Identifier(path) {\n        const {\n          node,\n          key\n        } = path;\n        const {\n          name\n        } = node;\n        const replaced = name.replace(surrogate, c => {\n          return `_u${c.charCodeAt(0).toString(16)}`;\n        });\n        if (name === replaced) return;\n\n        const str = _core.types.inherits(_core.types.stringLiteral(name), node);\n\n        if (key === \"key\") {\n          path.replaceWith(str);\n          return;\n        }\n\n        const {\n          parentPath,\n          scope\n        } = path;\n\n        if (parentPath.isMemberExpression({\n          property: node\n        }) || parentPath.isOptionalMemberExpression({\n          property: node\n        })) {\n          parentPath.node.computed = true;\n          path.replaceWith(str);\n          return;\n        }\n\n        const binding = scope.getBinding(name);\n\n        if (binding) {\n          scope.rename(name, scope.generateUid(replaced));\n          return;\n        }\n\n        throw path.buildCodeFrameError(`Can't reference '${name}' as a bare identifier`);\n      },\n\n      \"StringLiteral|DirectiveLiteral\"(path) {\n        const {\n          node\n        } = path;\n        const {\n          extra\n        } = node;\n        if (extra != null && extra.raw) extra.raw = replaceUnicodeEscapes(extra.raw);\n      },\n\n      TemplateElement(path) {\n        const {\n          node,\n          parentPath\n        } = path;\n        const {\n          value\n        } = node;\n        const firstEscape = getUnicodeEscape(value.raw);\n        if (!firstEscape) return;\n        const grandParent = parentPath.parentPath;\n\n        if (grandParent.isTaggedTemplateExpression()) {\n          throw path.buildCodeFrameError(`Can't replace Unicode escape '${firstEscape}' inside tagged template literals. You can enable '@babel/plugin-transform-template-literals' to compile them to classic strings.`);\n        }\n\n        value.raw = replaceUnicodeEscapes(value.raw);\n      }\n\n    }\n  };\n});\n\nexports.default = _default;","map":{"version":3,"names":["Object","defineProperty","exports","value","default","_helperPluginUtils","require","_core","_default","declare","api","assertVersion","surrogate","unicodeEscape","escape","code","str","toString","length","replacer","match","backslashes","char","String","fromCodePoint","parseInt","escaped","slice","charCodeAt","replaceUnicodeEscapes","replace","getUnicodeEscape","exec","lastIndex","name","manipulateOptions","generatorOpts","_generatorOpts$jsescO","_generatorOpts$jsescO2","jsescOption","minimal","visitor","Identifier","path","node","key","replaced","c","types","inherits","stringLiteral","replaceWith","parentPath","scope","isMemberExpression","property","isOptionalMemberExpression","computed","binding","getBinding","rename","generateUid","buildCodeFrameError","extra","raw","TemplateElement","firstEscape","grandParent","isTaggedTemplateExpression"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/@babel/plugin-transform-unicode-escapes/lib/index.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _helperPluginUtils = require(\"@babel/helper-plugin-utils\");\n\nvar _core = require(\"@babel/core\");\n\nvar _default = (0, _helperPluginUtils.declare)(api => {\n  api.assertVersion(7);\n  const surrogate = /[\\ud800-\\udfff]/g;\n  const unicodeEscape = /(\\\\+)u\\{([0-9a-fA-F]+)\\}/g;\n\n  function escape(code) {\n    let str = code.toString(16);\n\n    while (str.length < 4) str = \"0\" + str;\n\n    return \"\\\\u\" + str;\n  }\n\n  function replacer(match, backslashes, code) {\n    if (backslashes.length % 2 === 0) {\n      return match;\n    }\n\n    const char = String.fromCodePoint(parseInt(code, 16));\n    const escaped = backslashes.slice(0, -1) + escape(char.charCodeAt(0));\n    return char.length === 1 ? escaped : escaped + escape(char.charCodeAt(1));\n  }\n\n  function replaceUnicodeEscapes(str) {\n    return str.replace(unicodeEscape, replacer);\n  }\n\n  function getUnicodeEscape(str) {\n    let match;\n\n    while (match = unicodeEscape.exec(str)) {\n      if (match[1].length % 2 === 0) continue;\n      unicodeEscape.lastIndex = 0;\n      return match[0];\n    }\n\n    return null;\n  }\n\n  return {\n    name: \"transform-unicode-escapes\",\n\n    manipulateOptions({\n      generatorOpts\n    }) {\n      var _generatorOpts$jsescO, _generatorOpts$jsescO2;\n\n      if (!generatorOpts.jsescOption) {\n        generatorOpts.jsescOption = {};\n      }\n\n      (_generatorOpts$jsescO2 = (_generatorOpts$jsescO = generatorOpts.jsescOption).minimal) != null ? _generatorOpts$jsescO2 : _generatorOpts$jsescO.minimal = false;\n    },\n\n    visitor: {\n      Identifier(path) {\n        const {\n          node,\n          key\n        } = path;\n        const {\n          name\n        } = node;\n        const replaced = name.replace(surrogate, c => {\n          return `_u${c.charCodeAt(0).toString(16)}`;\n        });\n        if (name === replaced) return;\n\n        const str = _core.types.inherits(_core.types.stringLiteral(name), node);\n\n        if (key === \"key\") {\n          path.replaceWith(str);\n          return;\n        }\n\n        const {\n          parentPath,\n          scope\n        } = path;\n\n        if (parentPath.isMemberExpression({\n          property: node\n        }) || parentPath.isOptionalMemberExpression({\n          property: node\n        })) {\n          parentPath.node.computed = true;\n          path.replaceWith(str);\n          return;\n        }\n\n        const binding = scope.getBinding(name);\n\n        if (binding) {\n          scope.rename(name, scope.generateUid(replaced));\n          return;\n        }\n\n        throw path.buildCodeFrameError(`Can't reference '${name}' as a bare identifier`);\n      },\n\n      \"StringLiteral|DirectiveLiteral\"(path) {\n        const {\n          node\n        } = path;\n        const {\n          extra\n        } = node;\n        if (extra != null && extra.raw) extra.raw = replaceUnicodeEscapes(extra.raw);\n      },\n\n      TemplateElement(path) {\n        const {\n          node,\n          parentPath\n        } = path;\n        const {\n          value\n        } = node;\n        const firstEscape = getUnicodeEscape(value.raw);\n        if (!firstEscape) return;\n        const grandParent = parentPath.parentPath;\n\n        if (grandParent.isTaggedTemplateExpression()) {\n          throw path.buildCodeFrameError(`Can't replace Unicode escape '${firstEscape}' inside tagged template literals. You can enable '@babel/plugin-transform-template-literals' to compile them to classic strings.`);\n        }\n\n        value.raw = replaceUnicodeEscapes(value.raw);\n      }\n\n    }\n  };\n});\n\nexports.default = _default;"],"mappings":"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"},"metadata":{},"sourceType":"script"}