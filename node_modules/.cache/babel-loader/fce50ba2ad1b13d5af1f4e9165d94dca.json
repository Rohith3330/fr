{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _wrapRegExp;\n\nvar _setPrototypeOf = require(\"setPrototypeOf\");\n\nvar _inherits = require(\"inherits\");\n\nfunction _wrapRegExp() {\n  exports.default = _wrapRegExp = function (re, groups) {\n    return new BabelRegExp(re, undefined, groups);\n  };\n\n  var _super = RegExp.prototype;\n\n  var _groups = new WeakMap();\n\n  function BabelRegExp(re, flags, groups) {\n    var _this = new RegExp(re, flags);\n\n    _groups.set(_this, groups || _groups.get(re));\n\n    return _setPrototypeOf(_this, BabelRegExp.prototype);\n  }\n\n  _inherits(BabelRegExp, RegExp);\n\n  BabelRegExp.prototype.exec = function (str) {\n    var result = _super.exec.call(this, str);\n\n    if (result) result.groups = buildGroups(result, this);\n    return result;\n  };\n\n  BabelRegExp.prototype[Symbol.replace] = function (str, substitution) {\n    if (typeof substitution === \"string\") {\n      var groups = _groups.get(this);\n\n      return _super[Symbol.replace].call(this, str, substitution.replace(/\\$<([^>]+)>/g, function (_, name) {\n        return \"$\" + groups[name];\n      }));\n    } else if (typeof substitution === \"function\") {\n      var _this = this;\n\n      return _super[Symbol.replace].call(this, str, function () {\n        var args = arguments;\n\n        if (typeof args[args.length - 1] !== \"object\") {\n          args = [].slice.call(args);\n          args.push(buildGroups(args, _this));\n        }\n\n        return substitution.apply(this, args);\n      });\n    } else {\n      return _super[Symbol.replace].call(this, str, substitution);\n    }\n  };\n\n  function buildGroups(result, re) {\n    var g = _groups.get(re);\n\n    return Object.keys(g).reduce(function (groups, name) {\n      var i = g[name];\n      if (typeof i === \"number\") groups[name] = result[i];else {\n        var k = 0;\n\n        while (result[i[k]] === undefined && k + 1 < i.length) k++;\n\n        groups[name] = result[i[k]];\n      }\n      return groups;\n    }, Object.create(null));\n  }\n\n  return _wrapRegExp.apply(this, arguments);\n}","map":{"version":3,"mappings":"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","names":["_wrapRegExp","exports","re","groups","BabelRegExp","undefined","_super","RegExp","prototype","_groups","WeakMap","flags","_this","set","get","setPrototypeOf","inherits","exec","str","result","call","buildGroups","Symbol","replace","substitution","_","name","args","arguments","length","slice","push","apply","g","Object","keys","reduce","i","k","create"],"sources":["C:\\Users\\Rohith\\mern\\frontend\\node_modules\\@babel\\helpers\\src\\helpers\\wrapRegExp.js"],"sourcesContent":["/* @minVersion 7.19.0 */\n\nimport setPrototypeOf from \"setPrototypeOf\";\nimport inherits from \"inherits\";\n\nexport default function _wrapRegExp() {\n  _wrapRegExp = function (re, groups) {\n    return new BabelRegExp(re, undefined, groups);\n  };\n\n  var _super = RegExp.prototype;\n  var _groups = new WeakMap();\n\n  function BabelRegExp(re, flags, groups) {\n    var _this = new RegExp(re, flags);\n    // if the regex is recreated with 'g' flag\n    _groups.set(_this, groups || _groups.get(re));\n    return setPrototypeOf(_this, BabelRegExp.prototype);\n  }\n  inherits(BabelRegExp, RegExp);\n\n  BabelRegExp.prototype.exec = function (str) {\n    var result = _super.exec.call(this, str);\n    if (result) result.groups = buildGroups(result, this);\n    return result;\n  };\n  BabelRegExp.prototype[Symbol.replace] = function (str, substitution) {\n    if (typeof substitution === \"string\") {\n      var groups = _groups.get(this);\n      return _super[Symbol.replace].call(\n        this,\n        str,\n        substitution.replace(/\\$<([^>]+)>/g, function (_, name) {\n          return \"$\" + groups[name];\n        })\n      );\n    } else if (typeof substitution === \"function\") {\n      var _this = this;\n      return _super[Symbol.replace].call(this, str, function () {\n        var args = arguments;\n        // Modern engines already pass result.groups returned by exec() as the last arg.\n        if (typeof args[args.length - 1] !== \"object\") {\n          args = [].slice.call(args);\n          args.push(buildGroups(args, _this));\n        }\n        return substitution.apply(this, args);\n      });\n    } else {\n      return _super[Symbol.replace].call(this, str, substitution);\n    }\n  };\n\n  function buildGroups(result, re) {\n    // NOTE: This function should return undefined if there are no groups,\n    // but in that case Babel doesn't add the wrapper anyway.\n\n    var g = _groups.get(re);\n    return Object.keys(g).reduce(function (groups, name) {\n      var i = g[name];\n      if (typeof i === \"number\") groups[name] = result[i];\n      else {\n        // i is an array of indexes\n        var k = 0;\n        // if no group matched, we stop at k = i.length - 1 and then\n        // we store result[i[i.length - 1]] which is undefined.\n        while (result[i[k]] === undefined && k + 1 < i.length) k++;\n        groups[name] = result[i[k]];\n      }\n      return groups;\n    }, Object.create(null));\n  }\n\n  return _wrapRegExp.apply(this, arguments);\n}\n"]},"metadata":{},"sourceType":"script"}