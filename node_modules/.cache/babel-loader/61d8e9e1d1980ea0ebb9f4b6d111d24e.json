{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst tsutils = __importStar(require(\"tsutils\"));\n\nconst util = __importStar(require(\"../util\"));\n\nconst util_1 = require(\"../util\");\n\nexports.default = util.createRule({\n  name: 'no-unsafe-call',\n  meta: {\n    type: 'problem',\n    docs: {\n      description: 'Disallow calling a value with type `any`',\n      recommended: 'error',\n      requiresTypeChecking: true\n    },\n    messages: {\n      unsafeCall: 'Unsafe call of an `any` typed value.',\n      unsafeCallThis: ['Unsafe call of an `any` typed value. `this` is typed as `any`.', 'You can try to fix this by turning on the `noImplicitThis` compiler option, or adding a `this` parameter to the function.'].join('\\n'),\n      unsafeNew: 'Unsafe construction of an any type value.',\n      unsafeTemplateTag: 'Unsafe any typed template tag.'\n    },\n    schema: []\n  },\n  defaultOptions: [],\n\n  create(context) {\n    const {\n      program,\n      esTreeNodeToTSNodeMap\n    } = util.getParserServices(context);\n    const checker = program.getTypeChecker();\n    const compilerOptions = program.getCompilerOptions();\n    const isNoImplicitThis = tsutils.isStrictCompilerOptionEnabled(compilerOptions, 'noImplicitThis');\n\n    function checkCall(node, reportingNode, messageId) {\n      const tsNode = esTreeNodeToTSNodeMap.get(node);\n      const type = util.getConstrainedTypeAtLocation(checker, tsNode);\n\n      if (util.isTypeAnyType(type)) {\n        if (!isNoImplicitThis) {\n          // `this()` or `this.foo()` or `this.foo[bar]()`\n          const thisExpression = (0, util_1.getThisExpression)(node);\n\n          if (thisExpression && util.isTypeAnyType(util.getConstrainedTypeAtLocation(checker, esTreeNodeToTSNodeMap.get(thisExpression)))) {\n            messageId = 'unsafeCallThis';\n          }\n        }\n\n        context.report({\n          node: reportingNode,\n          messageId: messageId\n        });\n      }\n    }\n\n    return {\n      'CallExpression > *.callee'(node) {\n        checkCall(node, node, 'unsafeCall');\n      },\n\n      NewExpression(node) {\n        checkCall(node.callee, node, 'unsafeNew');\n      },\n\n      'TaggedTemplateExpression > *.tag'(node) {\n        checkCall(node, node, 'unsafeTemplateTag');\n      }\n\n    };\n  }\n\n});","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;;AAEA;;AACA;;AAQAA,kBAAeC,IAAI,CAACC,UAAL,CAAgC;EAC7CC,IAAI,EAAE,gBADuC;EAE7CC,IAAI,EAAE;IACJC,IAAI,EAAE,SADF;IAEJC,IAAI,EAAE;MACJC,WAAW,EAAE,0CADT;MAEJC,WAAW,EAAE,OAFT;MAGJC,oBAAoB,EAAE;IAHlB,CAFF;IAOJC,QAAQ,EAAE;MACRC,UAAU,EAAE,sCADJ;MAERC,cAAc,EAAE,CACd,gEADc,EAEd,2HAFc,EAGdC,IAHc,CAGT,IAHS,CAFR;MAMRC,SAAS,EAAE,2CANH;MAORC,iBAAiB,EAAE;IAPX,CAPN;IAgBJC,MAAM,EAAE;EAhBJ,CAFuC;EAoB7CC,cAAc,EAAE,EApB6B;;EAqB7CC,MAAM,CAACC,OAAD,EAAQ;IACZ,MAAM;MAAEC,OAAF;MAAWC;IAAX,IAAqCpB,IAAI,CAACqB,iBAAL,CAAuBH,OAAvB,CAA3C;IACA,MAAMI,OAAO,GAAGH,OAAO,CAACI,cAAR,EAAhB;IACA,MAAMC,eAAe,GAAGL,OAAO,CAACM,kBAAR,EAAxB;IACA,MAAMC,gBAAgB,GAAGC,OAAO,CAACC,6BAAR,CACvBJ,eADuB,EAEvB,gBAFuB,CAAzB;;IAKA,SAASK,SAAT,CACEC,IADF,EAEEC,aAFF,EAGEC,SAHF,EAGuB;MAErB,MAAMC,MAAM,GAAGb,qBAAqB,CAACc,GAAtB,CAA0BJ,IAA1B,CAAf;MACA,MAAM1B,IAAI,GAAGJ,IAAI,CAACmC,4BAAL,CAAkCb,OAAlC,EAA2CW,MAA3C,CAAb;;MAEA,IAAIjC,IAAI,CAACoC,aAAL,CAAmBhC,IAAnB,CAAJ,EAA8B;QAC5B,IAAI,CAACsB,gBAAL,EAAuB;UACrB;UACA,MAAMW,cAAc,GAAG,8BAAkBP,IAAlB,CAAvB;;UACA,IACEO,cAAc,IACdrC,IAAI,CAACoC,aAAL,CACEpC,IAAI,CAACmC,4BAAL,CACEb,OADF,EAEEF,qBAAqB,CAACc,GAAtB,CAA0BG,cAA1B,CAFF,CADF,CAFF,EAQE;YACAL,SAAS,GAAG,gBAAZ;UACD;QACF;;QACDd,OAAO,CAACoB,MAAR,CAAe;UACbR,IAAI,EAAEC,aADO;UAEbC,SAAS,EAAEA;QAFE,CAAf;MAID;IACF;;IAED,OAAO;MACL,4BACEF,IADF,EACyC;QAEvCD,SAAS,CAACC,IAAD,EAAOA,IAAP,EAAa,YAAb,CAAT;MACD,CALI;;MAMLS,aAAa,CAACT,IAAD,EAAK;QAChBD,SAAS,CAACC,IAAI,CAACU,MAAN,EAAcV,IAAd,EAAoB,WAApB,CAAT;MACD,CARI;;MASL,mCAAmCA,IAAnC,EAAsD;QACpDD,SAAS,CAACC,IAAD,EAAOA,IAAP,EAAa,mBAAb,CAAT;MACD;;IAXI,CAAP;EAaD;;AA1E4C,CAAhC,CAAf","names":["exports","util","createRule","name","meta","type","docs","description","recommended","requiresTypeChecking","messages","unsafeCall","unsafeCallThis","join","unsafeNew","unsafeTemplateTag","schema","defaultOptions","create","context","program","esTreeNodeToTSNodeMap","getParserServices","checker","getTypeChecker","compilerOptions","getCompilerOptions","isNoImplicitThis","tsutils","isStrictCompilerOptionEnabled","checkCall","node","reportingNode","messageId","tsNode","get","getConstrainedTypeAtLocation","isTypeAnyType","thisExpression","report","NewExpression","callee"],"sources":["../../src/rules/no-unsafe-call.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}