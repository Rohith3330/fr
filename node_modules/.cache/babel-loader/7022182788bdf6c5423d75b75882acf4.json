{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CodeGen = exports.Name = exports.nil = exports.stringify = exports.str = exports._ = exports.KeywordCxt = void 0;\n\nconst core_1 = require(\"./core\");\n\nconst draft7_1 = require(\"./vocabularies/draft7\");\n\nconst dynamic_1 = require(\"./vocabularies/dynamic\");\n\nconst next_1 = require(\"./vocabularies/next\");\n\nconst unevaluated_1 = require(\"./vocabularies/unevaluated\");\n\nconst discriminator_1 = require(\"./vocabularies/discriminator\");\n\nconst json_schema_2019_09_1 = require(\"./refs/json-schema-2019-09\");\n\nconst META_SCHEMA_ID = \"https://json-schema.org/draft/2019-09/schema\";\n\nclass Ajv2019 extends core_1.default {\n  constructor() {\n    let opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    super({ ...opts,\n      dynamicRef: true,\n      next: true,\n      unevaluated: true\n    });\n  }\n\n  _addVocabularies() {\n    super._addVocabularies();\n\n    this.addVocabulary(dynamic_1.default);\n    draft7_1.default.forEach(v => this.addVocabulary(v));\n    this.addVocabulary(next_1.default);\n    this.addVocabulary(unevaluated_1.default);\n    if (this.opts.discriminator) this.addKeyword(discriminator_1.default);\n  }\n\n  _addDefaultMetaSchema() {\n    super._addDefaultMetaSchema();\n\n    const {\n      $data,\n      meta\n    } = this.opts;\n    if (!meta) return;\n    json_schema_2019_09_1.default.call(this, $data);\n    this.refs[\"http://json-schema.org/schema\"] = META_SCHEMA_ID;\n  }\n\n  defaultMeta() {\n    return this.opts.defaultMeta = super.defaultMeta() || (this.getSchema(META_SCHEMA_ID) ? META_SCHEMA_ID : undefined);\n  }\n\n}\n\nmodule.exports = exports = Ajv2019;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = Ajv2019;\n\nvar validate_1 = require(\"./compile/validate\");\n\nObject.defineProperty(exports, \"KeywordCxt\", {\n  enumerable: true,\n  get: function () {\n    return validate_1.KeywordCxt;\n  }\n});\n\nvar codegen_1 = require(\"./compile/codegen\");\n\nObject.defineProperty(exports, \"_\", {\n  enumerable: true,\n  get: function () {\n    return codegen_1._;\n  }\n});\nObject.defineProperty(exports, \"str\", {\n  enumerable: true,\n  get: function () {\n    return codegen_1.str;\n  }\n});\nObject.defineProperty(exports, \"stringify\", {\n  enumerable: true,\n  get: function () {\n    return codegen_1.stringify;\n  }\n});\nObject.defineProperty(exports, \"nil\", {\n  enumerable: true,\n  get: function () {\n    return codegen_1.nil;\n  }\n});\nObject.defineProperty(exports, \"Name\", {\n  enumerable: true,\n  get: function () {\n    return codegen_1.Name;\n  }\n});\nObject.defineProperty(exports, \"CodeGen\", {\n  enumerable: true,\n  get: function () {\n    return codegen_1.CodeGen;\n  }\n});","map":{"version":3,"mappings":";;;;;;;AACA;;AAEA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA,MAAMA,cAAc,GAAG,8CAAvB;;AAEA,MAAMC,OAAN,SAAsBC,cAAtB,CAA6B;EAC3BC,cAA8B;IAAA,IAAlBC,IAAkB,uEAAF,EAAE;IAC5B,MAAM,EACJ,GAAGA,IADC;MAEJC,UAAU,EAAE,IAFR;MAGJC,IAAI,EAAE,IAHF;MAIJC,WAAW,EAAE;IAJT,CAAN;EAMD;;EAEDC,gBAAgB;IACd,MAAMA,gBAAN;;IACA,KAAKC,aAAL,CAAmBC,iBAAnB;IACAC,iBAAmBC,OAAnB,CAA4BC,CAAD,IAAO,KAAKJ,aAAL,CAAmBI,CAAnB,CAAlC;IACA,KAAKJ,aAAL,CAAmBK,cAAnB;IACA,KAAKL,aAAL,CAAmBM,qBAAnB;IACA,IAAI,KAAKX,IAAL,CAAUY,aAAd,EAA6B,KAAKC,UAAL,CAAgBC,uBAAhB;EAC9B;;EAEDC,qBAAqB;IACnB,MAAMA,qBAAN;;IACA,MAAM;MAACC,KAAD;MAAQC;IAAR,IAAgB,KAAKjB,IAA3B;IACA,IAAI,CAACiB,IAAL,EAAW;IACXC,8BAAkBC,IAAlB,CAAuB,IAAvB,EAA6BH,KAA7B;IACA,KAAKI,IAAL,CAAU,+BAAV,IAA6CxB,cAA7C;EACD;;EAEDyB,WAAW;IACT,OAAQ,KAAKrB,IAAL,CAAUqB,WAAV,GACN,MAAMA,WAAN,OAAwB,KAAKC,SAAL,CAAe1B,cAAf,IAAiCA,cAAjC,GAAkD2B,SAA1E,CADF;EAED;;AA9B0B;;AAiC7BC,MAAM,CAACC,OAAP,GAAiBA,OAAO,GAAG5B,OAA3B;AACA6B,MAAM,CAACC,cAAP,CAAsBF,OAAtB,EAA+B,YAA/B,EAA6C;EAACG,KAAK,EAAE;AAAR,CAA7C;AAEAH,kBAAe5B,OAAf;;AAyBA;;AAAQ6B;EAAAG;EAAAC;IAAA;EAAU;AAAV;;AAIR;;AAAQJ;EAAAG;EAAAC;IAAA;EAAC;AAAD;AAAGJ;EAAAG;EAAAC;IAAA;EAAG;AAAH;AAAKJ;EAAAG;EAAAC;IAAA;EAAS;AAAT;AAAWJ;EAAAG;EAAAC;IAAA;EAAG;AAAH;AAAKJ;EAAAG;EAAAC;IAAA;EAAI;AAAJ;AAAYJ;EAAAG;EAAAC;IAAA;EAAO;AAAP","names":["META_SCHEMA_ID","Ajv2019","core_1","constructor","opts","dynamicRef","next","unevaluated","_addVocabularies","addVocabulary","dynamic_1","draft7_1","forEach","v","next_1","unevaluated_1","discriminator","addKeyword","discriminator_1","_addDefaultMetaSchema","$data","meta","json_schema_2019_09_1","call","refs","defaultMeta","getSchema","undefined","module","exports","Object","defineProperty","value","enumerable","get"],"sources":["C:\\Users\\Rohith\\mern\\frontend\\node_modules\\ajv-formats\\node_modules\\ajv\\lib\\2019.ts"],"sourcesContent":["import type {AnySchemaObject} from \"./types\"\nimport AjvCore, {Options} from \"./core\"\n\nimport draft7Vocabularies from \"./vocabularies/draft7\"\nimport dynamicVocabulary from \"./vocabularies/dynamic\"\nimport nextVocabulary from \"./vocabularies/next\"\nimport unevaluatedVocabulary from \"./vocabularies/unevaluated\"\nimport discriminator from \"./vocabularies/discriminator\"\nimport addMetaSchema2019 from \"./refs/json-schema-2019-09\"\n\nconst META_SCHEMA_ID = \"https://json-schema.org/draft/2019-09/schema\"\n\nclass Ajv2019 extends AjvCore {\n  constructor(opts: Options = {}) {\n    super({\n      ...opts,\n      dynamicRef: true,\n      next: true,\n      unevaluated: true,\n    })\n  }\n\n  _addVocabularies(): void {\n    super._addVocabularies()\n    this.addVocabulary(dynamicVocabulary)\n    draft7Vocabularies.forEach((v) => this.addVocabulary(v))\n    this.addVocabulary(nextVocabulary)\n    this.addVocabulary(unevaluatedVocabulary)\n    if (this.opts.discriminator) this.addKeyword(discriminator)\n  }\n\n  _addDefaultMetaSchema(): void {\n    super._addDefaultMetaSchema()\n    const {$data, meta} = this.opts\n    if (!meta) return\n    addMetaSchema2019.call(this, $data)\n    this.refs[\"http://json-schema.org/schema\"] = META_SCHEMA_ID\n  }\n\n  defaultMeta(): string | AnySchemaObject | undefined {\n    return (this.opts.defaultMeta =\n      super.defaultMeta() || (this.getSchema(META_SCHEMA_ID) ? META_SCHEMA_ID : undefined))\n  }\n}\n\nmodule.exports = exports = Ajv2019\nObject.defineProperty(exports, \"__esModule\", {value: true})\n\nexport default Ajv2019\n\nexport {\n  Format,\n  FormatDefinition,\n  AsyncFormatDefinition,\n  KeywordDefinition,\n  KeywordErrorDefinition,\n  CodeKeywordDefinition,\n  MacroKeywordDefinition,\n  FuncKeywordDefinition,\n  Vocabulary,\n  Schema,\n  SchemaObject,\n  AnySchemaObject,\n  AsyncSchema,\n  AnySchema,\n  ValidateFunction,\n  AsyncValidateFunction,\n  ErrorObject,\n  ErrorNoParams,\n} from \"./types\"\n\nexport {Plugin, Options, CodeOptions, InstanceOptions, Logger, ErrorsTextOptions} from \"./core\"\nexport {SchemaCxt, SchemaObjCxt} from \"./compile\"\nexport {KeywordCxt} from \"./compile/validate\"\nexport {DefinedError} from \"./vocabularies/errors\"\nexport {JSONType} from \"./compile/rules\"\nexport {JSONSchemaType} from \"./types/json-schema\"\nexport {_, str, stringify, nil, Name, Code, CodeGen, CodeGenOptions} from \"./compile/codegen\"\n"]},"metadata":{},"sourceType":"script"}