{"ast":null,"code":"'use strict';\n\nvar arrayWith = require('../internals/array-with');\n\nvar ArrayBufferViewCore = require('../internals/array-buffer-view-core');\n\nvar isBigIntArray = require('../internals/is-big-int-array');\n\nvar toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\n\nvar toBigInt = require('../internals/to-big-int');\n\nvar aTypedArray = ArrayBufferViewCore.aTypedArray;\nvar getTypedArrayConstructor = ArrayBufferViewCore.getTypedArrayConstructor;\nvar exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;\nvar PROPER_ORDER = !!function () {\n  try {\n    // eslint-disable-next-line no-throw-literal, es-x/no-typed-arrays -- required for testing\n    new Int8Array(1)['with'](2, {\n      valueOf: function () {\n        throw 8;\n      }\n    });\n  } catch (error) {\n    // some early implementations, like WebKit, does not follow the final semantic\n    // https://github.com/tc39/proposal-change-array-by-copy/pull/86\n    return error === 8;\n  }\n}(); // `%TypedArray%.prototype.with` method\n// https://tc39.es/proposal-change-array-by-copy/#sec-%typedarray%.prototype.with\n\nexportTypedArrayMethod('with', {\n  'with': function (index, value) {\n    var O = aTypedArray(this);\n    var relativeIndex = toIntegerOrInfinity(index);\n    var actualValue = isBigIntArray(O) ? toBigInt(value) : +value;\n    return arrayWith(O, getTypedArrayConstructor(O), relativeIndex, actualValue);\n  }\n}['with'], !PROPER_ORDER);","map":{"version":3,"names":["arrayWith","require","ArrayBufferViewCore","isBigIntArray","toIntegerOrInfinity","toBigInt","aTypedArray","getTypedArrayConstructor","exportTypedArrayMethod","PROPER_ORDER","Int8Array","valueOf","error","index","value","O","relativeIndex","actualValue"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/core-js/modules/esnext.typed-array.with.js"],"sourcesContent":["'use strict';\nvar arrayWith = require('../internals/array-with');\nvar ArrayBufferViewCore = require('../internals/array-buffer-view-core');\nvar isBigIntArray = require('../internals/is-big-int-array');\nvar toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\nvar toBigInt = require('../internals/to-big-int');\n\nvar aTypedArray = ArrayBufferViewCore.aTypedArray;\nvar getTypedArrayConstructor = ArrayBufferViewCore.getTypedArrayConstructor;\nvar exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;\n\nvar PROPER_ORDER = !!function () {\n  try {\n    // eslint-disable-next-line no-throw-literal, es-x/no-typed-arrays -- required for testing\n    new Int8Array(1)['with'](2, { valueOf: function () { throw 8; } });\n  } catch (error) {\n    // some early implementations, like WebKit, does not follow the final semantic\n    // https://github.com/tc39/proposal-change-array-by-copy/pull/86\n    return error === 8;\n  }\n}();\n\n// `%TypedArray%.prototype.with` method\n// https://tc39.es/proposal-change-array-by-copy/#sec-%typedarray%.prototype.with\nexportTypedArrayMethod('with', { 'with': function (index, value) {\n  var O = aTypedArray(this);\n  var relativeIndex = toIntegerOrInfinity(index);\n  var actualValue = isBigIntArray(O) ? toBigInt(value) : +value;\n  return arrayWith(O, getTypedArrayConstructor(O), relativeIndex, actualValue);\n} }['with'], !PROPER_ORDER);\n"],"mappings":"AAAA;;AACA,IAAIA,SAAS,GAAGC,OAAO,CAAC,yBAAD,CAAvB;;AACA,IAAIC,mBAAmB,GAAGD,OAAO,CAAC,qCAAD,CAAjC;;AACA,IAAIE,aAAa,GAAGF,OAAO,CAAC,+BAAD,CAA3B;;AACA,IAAIG,mBAAmB,GAAGH,OAAO,CAAC,qCAAD,CAAjC;;AACA,IAAII,QAAQ,GAAGJ,OAAO,CAAC,yBAAD,CAAtB;;AAEA,IAAIK,WAAW,GAAGJ,mBAAmB,CAACI,WAAtC;AACA,IAAIC,wBAAwB,GAAGL,mBAAmB,CAACK,wBAAnD;AACA,IAAIC,sBAAsB,GAAGN,mBAAmB,CAACM,sBAAjD;AAEA,IAAIC,YAAY,GAAG,CAAC,CAAC,YAAY;EAC/B,IAAI;IACF;IACA,IAAIC,SAAJ,CAAc,CAAd,EAAiB,MAAjB,EAAyB,CAAzB,EAA4B;MAAEC,OAAO,EAAE,YAAY;QAAE,MAAM,CAAN;MAAU;IAAnC,CAA5B;EACD,CAHD,CAGE,OAAOC,KAAP,EAAc;IACd;IACA;IACA,OAAOA,KAAK,KAAK,CAAjB;EACD;AACF,CAToB,EAArB,C,CAWA;AACA;;AACAJ,sBAAsB,CAAC,MAAD,EAAS;EAAE,QAAQ,UAAUK,KAAV,EAAiBC,KAAjB,EAAwB;IAC/D,IAAIC,CAAC,GAAGT,WAAW,CAAC,IAAD,CAAnB;IACA,IAAIU,aAAa,GAAGZ,mBAAmB,CAACS,KAAD,CAAvC;IACA,IAAII,WAAW,GAAGd,aAAa,CAACY,CAAD,CAAb,GAAmBV,QAAQ,CAACS,KAAD,CAA3B,GAAqC,CAACA,KAAxD;IACA,OAAOd,SAAS,CAACe,CAAD,EAAIR,wBAAwB,CAACQ,CAAD,CAA5B,EAAiCC,aAAjC,EAAgDC,WAAhD,CAAhB;EACD;AAL8B,EAK3B,MAL2B,CAAT,EAKT,CAACR,YALQ,CAAtB"},"metadata":{},"sourceType":"script"}