{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar match_path_async_1 = require(\"../match-path-async\");\n\nvar Tests = require(\"./data/match-path-data\");\n\ndescribe(\"match-path-async\", function () {\n  Tests.tests.forEach(function (t) {\n    return it(t.name, function (done) {\n      var matchPath = (0, match_path_async_1.createMatchPathAsync)(t.absoluteBaseUrl, t.paths, t.mainFields, t.addMatchAll);\n      matchPath(t.requestedModule, function (_path, callback) {\n        return callback(undefined, t.packageJson);\n      }, function (path, callback) {\n        return callback(undefined, t.existingFiles.indexOf(path) !== -1);\n      }, t.extensions, function (_err, result) {\n        // assert.equal(result, t.expectedPath);\n        expect(result).toBe(t.expectedPath);\n        done();\n      });\n    });\n  });\n});","map":{"version":3,"mappings":";;;;;;AAAA;;AACA;;AAEAA,QAAQ,CAAC,kBAAD,EAAqB;EAC3BC,KAAK,CAACC,KAAN,CAAYC,OAAZ,CAAoB,UAACC,CAAD,EAAE;IACpB,SAAE,CAACA,CAAC,CAACC,IAAH,EAAS,UAACC,IAAD,EAAK;MACd,IAAMC,SAAS,GAAG,6CAChBH,CAAC,CAACI,eADc,EAEhBJ,CAAC,CAACK,KAFc,EAGhBL,CAAC,CAACM,UAHc,EAIhBN,CAAC,CAACO,WAJc,CAAlB;MAMAJ,SAAS,CACPH,CAAC,CAACQ,eADK,EAEP,UAACC,KAAD,EAAQC,QAAR,EAAgB;QAAK,eAAQ,CAACC,SAAD,EAAYX,CAAC,CAACY,WAAd,CAAR;MAAkC,CAFhD,EAGP,UAACC,IAAD,EAAOH,QAAP,EAAe;QACb,eAAQ,CAACC,SAAD,EAAYX,CAAC,CAACc,aAAF,CAAgBC,OAAhB,CAAwBF,IAAxB,MAAkC,CAAC,CAA/C,CAAR;MAAyD,CAJpD,EAKPb,CAAC,CAACgB,UALK,EAMP,UAACC,IAAD,EAAOC,MAAP,EAAa;QACX;QACAC,MAAM,CAACD,MAAD,CAAN,CAAeE,IAAf,CAAoBpB,CAAC,CAACqB,YAAtB;QACAnB,IAAI;MACL,CAVM,CAAT;IAYD,CAnBC,CAAF;EAmBE,CApBJ;AAsBD,CAvBO,CAAR","names":["describe","Tests","tests","forEach","t","name","done","matchPath","absoluteBaseUrl","paths","mainFields","addMatchAll","requestedModule","_path","callback","undefined","packageJson","path","existingFiles","indexOf","extensions","_err","result","expect","toBe","expectedPath"],"sources":["C:\\Users\\Rohith\\mern\\frontend\\node_modules\\tsconfig-paths\\src\\__tests__\\match-path-async.test.ts"],"sourcesContent":["import { createMatchPathAsync } from \"../match-path-async\";\nimport * as Tests from \"./data/match-path-data\";\n\ndescribe(\"match-path-async\", () => {\n  Tests.tests.forEach((t) =>\n    it(t.name, (done) => {\n      const matchPath = createMatchPathAsync(\n        t.absoluteBaseUrl,\n        t.paths,\n        t.mainFields,\n        t.addMatchAll\n      );\n      matchPath(\n        t.requestedModule,\n        (_path, callback) => callback(undefined, t.packageJson),\n        (path, callback) =>\n          callback(undefined, t.existingFiles.indexOf(path) !== -1),\n        t.extensions,\n        (_err, result) => {\n          // assert.equal(result, t.expectedPath);\n          expect(result).toBe(t.expectedPath);\n          done();\n        }\n      );\n    })\n  );\n});\n"]},"metadata":{},"sourceType":"script"}