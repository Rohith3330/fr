{"ast":null,"code":"(function (root, factory) {\n  'use strict'; // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.\n\n  /* istanbul ignore next */\n\n  if (typeof define === 'function' && define.amd) {\n    define('stackframe', [], factory);\n  } else if (typeof exports === 'object') {\n    module.exports = factory();\n  } else {\n    root.StackFrame = factory();\n  }\n})(this, function () {\n  'use strict';\n\n  function _isNumber(n) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n  }\n\n  function _capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.substring(1);\n  }\n\n  function _getter(p) {\n    return function () {\n      return this[p];\n    };\n  }\n\n  var booleanProps = ['isConstructor', 'isEval', 'isNative', 'isToplevel'];\n  var numericProps = ['columnNumber', 'lineNumber'];\n  var stringProps = ['fileName', 'functionName', 'source'];\n  var arrayProps = ['args'];\n  var objectProps = ['evalOrigin'];\n  var props = booleanProps.concat(numericProps, stringProps, arrayProps, objectProps);\n\n  function StackFrame(obj) {\n    if (!obj) return;\n\n    for (var i = 0; i < props.length; i++) {\n      if (obj[props[i]] !== undefined) {\n        this['set' + _capitalize(props[i])](obj[props[i]]);\n      }\n    }\n  }\n\n  StackFrame.prototype = {\n    getArgs: function () {\n      return this.args;\n    },\n    setArgs: function (v) {\n      if (Object.prototype.toString.call(v) !== '[object Array]') {\n        throw new TypeError('Args must be an Array');\n      }\n\n      this.args = v;\n    },\n    getEvalOrigin: function () {\n      return this.evalOrigin;\n    },\n    setEvalOrigin: function (v) {\n      if (v instanceof StackFrame) {\n        this.evalOrigin = v;\n      } else if (v instanceof Object) {\n        this.evalOrigin = new StackFrame(v);\n      } else {\n        throw new TypeError('Eval Origin must be an Object or StackFrame');\n      }\n    },\n    toString: function () {\n      var fileName = this.getFileName() || '';\n      var lineNumber = this.getLineNumber() || '';\n      var columnNumber = this.getColumnNumber() || '';\n      var functionName = this.getFunctionName() || '';\n\n      if (this.getIsEval()) {\n        if (fileName) {\n          return '[eval] (' + fileName + ':' + lineNumber + ':' + columnNumber + ')';\n        }\n\n        return '[eval]:' + lineNumber + ':' + columnNumber;\n      }\n\n      if (functionName) {\n        return functionName + ' (' + fileName + ':' + lineNumber + ':' + columnNumber + ')';\n      }\n\n      return fileName + ':' + lineNumber + ':' + columnNumber;\n    }\n  };\n\n  StackFrame.fromString = function StackFrame$$fromString(str) {\n    var argsStartIndex = str.indexOf('(');\n    var argsEndIndex = str.lastIndexOf(')');\n    var functionName = str.substring(0, argsStartIndex);\n    var args = str.substring(argsStartIndex + 1, argsEndIndex).split(',');\n    var locationString = str.substring(argsEndIndex + 1);\n\n    if (locationString.indexOf('@') === 0) {\n      var parts = /@(.+?)(?::(\\d+))?(?::(\\d+))?$/.exec(locationString, '');\n      var fileName = parts[1];\n      var lineNumber = parts[2];\n      var columnNumber = parts[3];\n    }\n\n    return new StackFrame({\n      functionName: functionName,\n      args: args || undefined,\n      fileName: fileName,\n      lineNumber: lineNumber || undefined,\n      columnNumber: columnNumber || undefined\n    });\n  };\n\n  for (var i = 0; i < booleanProps.length; i++) {\n    StackFrame.prototype['get' + _capitalize(booleanProps[i])] = _getter(booleanProps[i]);\n\n    StackFrame.prototype['set' + _capitalize(booleanProps[i])] = function (p) {\n      return function (v) {\n        this[p] = Boolean(v);\n      };\n    }(booleanProps[i]);\n  }\n\n  for (var j = 0; j < numericProps.length; j++) {\n    StackFrame.prototype['get' + _capitalize(numericProps[j])] = _getter(numericProps[j]);\n\n    StackFrame.prototype['set' + _capitalize(numericProps[j])] = function (p) {\n      return function (v) {\n        if (!_isNumber(v)) {\n          throw new TypeError(p + ' must be a Number');\n        }\n\n        this[p] = Number(v);\n      };\n    }(numericProps[j]);\n  }\n\n  for (var k = 0; k < stringProps.length; k++) {\n    StackFrame.prototype['get' + _capitalize(stringProps[k])] = _getter(stringProps[k]);\n\n    StackFrame.prototype['set' + _capitalize(stringProps[k])] = function (p) {\n      return function (v) {\n        this[p] = String(v);\n      };\n    }(stringProps[k]);\n  }\n\n  return StackFrame;\n});","map":{"version":3,"names":["root","factory","define","amd","exports","module","StackFrame","_isNumber","n","isNaN","parseFloat","isFinite","_capitalize","str","charAt","toUpperCase","substring","_getter","p","booleanProps","numericProps","stringProps","arrayProps","objectProps","props","concat","obj","i","length","undefined","prototype","getArgs","args","setArgs","v","Object","toString","call","TypeError","getEvalOrigin","evalOrigin","setEvalOrigin","fileName","getFileName","lineNumber","getLineNumber","columnNumber","getColumnNumber","functionName","getFunctionName","getIsEval","fromString","StackFrame$$fromString","argsStartIndex","indexOf","argsEndIndex","lastIndexOf","split","locationString","parts","exec","Boolean","j","Number","k","String"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/stackframe/stackframe.js"],"sourcesContent":["(function(root, factory) {\n    'use strict';\n    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.\n\n    /* istanbul ignore next */\n    if (typeof define === 'function' && define.amd) {\n        define('stackframe', [], factory);\n    } else if (typeof exports === 'object') {\n        module.exports = factory();\n    } else {\n        root.StackFrame = factory();\n    }\n}(this, function() {\n    'use strict';\n    function _isNumber(n) {\n        return !isNaN(parseFloat(n)) && isFinite(n);\n    }\n\n    function _capitalize(str) {\n        return str.charAt(0).toUpperCase() + str.substring(1);\n    }\n\n    function _getter(p) {\n        return function() {\n            return this[p];\n        };\n    }\n\n    var booleanProps = ['isConstructor', 'isEval', 'isNative', 'isToplevel'];\n    var numericProps = ['columnNumber', 'lineNumber'];\n    var stringProps = ['fileName', 'functionName', 'source'];\n    var arrayProps = ['args'];\n    var objectProps = ['evalOrigin'];\n\n    var props = booleanProps.concat(numericProps, stringProps, arrayProps, objectProps);\n\n    function StackFrame(obj) {\n        if (!obj) return;\n        for (var i = 0; i < props.length; i++) {\n            if (obj[props[i]] !== undefined) {\n                this['set' + _capitalize(props[i])](obj[props[i]]);\n            }\n        }\n    }\n\n    StackFrame.prototype = {\n        getArgs: function() {\n            return this.args;\n        },\n        setArgs: function(v) {\n            if (Object.prototype.toString.call(v) !== '[object Array]') {\n                throw new TypeError('Args must be an Array');\n            }\n            this.args = v;\n        },\n\n        getEvalOrigin: function() {\n            return this.evalOrigin;\n        },\n        setEvalOrigin: function(v) {\n            if (v instanceof StackFrame) {\n                this.evalOrigin = v;\n            } else if (v instanceof Object) {\n                this.evalOrigin = new StackFrame(v);\n            } else {\n                throw new TypeError('Eval Origin must be an Object or StackFrame');\n            }\n        },\n\n        toString: function() {\n            var fileName = this.getFileName() || '';\n            var lineNumber = this.getLineNumber() || '';\n            var columnNumber = this.getColumnNumber() || '';\n            var functionName = this.getFunctionName() || '';\n            if (this.getIsEval()) {\n                if (fileName) {\n                    return '[eval] (' + fileName + ':' + lineNumber + ':' + columnNumber + ')';\n                }\n                return '[eval]:' + lineNumber + ':' + columnNumber;\n            }\n            if (functionName) {\n                return functionName + ' (' + fileName + ':' + lineNumber + ':' + columnNumber + ')';\n            }\n            return fileName + ':' + lineNumber + ':' + columnNumber;\n        }\n    };\n\n    StackFrame.fromString = function StackFrame$$fromString(str) {\n        var argsStartIndex = str.indexOf('(');\n        var argsEndIndex = str.lastIndexOf(')');\n\n        var functionName = str.substring(0, argsStartIndex);\n        var args = str.substring(argsStartIndex + 1, argsEndIndex).split(',');\n        var locationString = str.substring(argsEndIndex + 1);\n\n        if (locationString.indexOf('@') === 0) {\n            var parts = /@(.+?)(?::(\\d+))?(?::(\\d+))?$/.exec(locationString, '');\n            var fileName = parts[1];\n            var lineNumber = parts[2];\n            var columnNumber = parts[3];\n        }\n\n        return new StackFrame({\n            functionName: functionName,\n            args: args || undefined,\n            fileName: fileName,\n            lineNumber: lineNumber || undefined,\n            columnNumber: columnNumber || undefined\n        });\n    };\n\n    for (var i = 0; i < booleanProps.length; i++) {\n        StackFrame.prototype['get' + _capitalize(booleanProps[i])] = _getter(booleanProps[i]);\n        StackFrame.prototype['set' + _capitalize(booleanProps[i])] = (function(p) {\n            return function(v) {\n                this[p] = Boolean(v);\n            };\n        })(booleanProps[i]);\n    }\n\n    for (var j = 0; j < numericProps.length; j++) {\n        StackFrame.prototype['get' + _capitalize(numericProps[j])] = _getter(numericProps[j]);\n        StackFrame.prototype['set' + _capitalize(numericProps[j])] = (function(p) {\n            return function(v) {\n                if (!_isNumber(v)) {\n                    throw new TypeError(p + ' must be a Number');\n                }\n                this[p] = Number(v);\n            };\n        })(numericProps[j]);\n    }\n\n    for (var k = 0; k < stringProps.length; k++) {\n        StackFrame.prototype['get' + _capitalize(stringProps[k])] = _getter(stringProps[k]);\n        StackFrame.prototype['set' + _capitalize(stringProps[k])] = (function(p) {\n            return function(v) {\n                this[p] = String(v);\n            };\n        })(stringProps[k]);\n    }\n\n    return StackFrame;\n}));\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}