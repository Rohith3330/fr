{"ast":null,"code":"'use strict';\n/*\n Copyright 2012-2015, Yahoo Inc.\n Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.\n */\n\nconst path = require('path');\n\nconst {\n  escape\n} = require('html-escaper');\n\nconst {\n  ReportBase\n} = require('istanbul-lib-report');\n\nclass CoberturaReport extends ReportBase {\n  constructor(opts) {\n    super();\n    opts = opts || {};\n    this.cw = null;\n    this.xml = null;\n    this.timestamp = opts.timestamp || Date.now().toString();\n    this.projectRoot = opts.projectRoot || process.cwd();\n    this.file = opts.file || 'cobertura-coverage.xml';\n  }\n\n  onStart(root, context) {\n    this.cw = context.writer.writeFile(this.file);\n    this.xml = context.getXMLWriter(this.cw);\n    this.writeRootStats(root);\n  }\n\n  onEnd() {\n    this.xml.closeAll();\n    this.cw.close();\n  }\n\n  writeRootStats(node) {\n    const metrics = node.getCoverageSummary();\n    this.cw.println('<?xml version=\"1.0\" ?>');\n    this.cw.println('<!DOCTYPE coverage SYSTEM \"http://cobertura.sourceforge.net/xml/coverage-04.dtd\">');\n    this.xml.openTag('coverage', {\n      'lines-valid': metrics.lines.total,\n      'lines-covered': metrics.lines.covered,\n      'line-rate': metrics.lines.pct / 100.0,\n      'branches-valid': metrics.branches.total,\n      'branches-covered': metrics.branches.covered,\n      'branch-rate': metrics.branches.pct / 100.0,\n      timestamp: this.timestamp,\n      complexity: '0',\n      version: '0.1'\n    });\n    this.xml.openTag('sources');\n    this.xml.inlineTag('source', null, this.projectRoot);\n    this.xml.closeTag('sources');\n    this.xml.openTag('packages');\n  }\n\n  onSummary(node) {\n    const metrics = node.getCoverageSummary(true);\n\n    if (!metrics) {\n      return;\n    }\n\n    this.xml.openTag('package', {\n      name: node.isRoot() ? 'main' : escape(asJavaPackage(node)),\n      'line-rate': metrics.lines.pct / 100.0,\n      'branch-rate': metrics.branches.pct / 100.0\n    });\n    this.xml.openTag('classes');\n  }\n\n  onSummaryEnd(node) {\n    const metrics = node.getCoverageSummary(true);\n\n    if (!metrics) {\n      return;\n    }\n\n    this.xml.closeTag('classes');\n    this.xml.closeTag('package');\n  }\n\n  onDetail(node) {\n    const fileCoverage = node.getFileCoverage();\n    const metrics = node.getCoverageSummary();\n    const branchByLine = fileCoverage.getBranchCoverageByLine();\n    this.xml.openTag('class', {\n      name: escape(asClassName(node)),\n      filename: path.relative(this.projectRoot, fileCoverage.path),\n      'line-rate': metrics.lines.pct / 100.0,\n      'branch-rate': metrics.branches.pct / 100.0\n    });\n    this.xml.openTag('methods');\n    const fnMap = fileCoverage.fnMap;\n    Object.entries(fnMap).forEach(_ref => {\n      let [k, {\n        name,\n        decl\n      }] = _ref;\n      const hits = fileCoverage.f[k];\n      this.xml.openTag('method', {\n        name: escape(name),\n        hits,\n        signature: '()V' //fake out a no-args void return\n\n      });\n      this.xml.openTag('lines'); //Add the function definition line and hits so that jenkins cobertura plugin records method hits\n\n      this.xml.inlineTag('line', {\n        number: decl.start.line,\n        hits\n      });\n      this.xml.closeTag('lines');\n      this.xml.closeTag('method');\n    });\n    this.xml.closeTag('methods');\n    this.xml.openTag('lines');\n    const lines = fileCoverage.getLineCoverage();\n    Object.entries(lines).forEach(_ref2 => {\n      let [k, hits] = _ref2;\n      const attrs = {\n        number: k,\n        hits,\n        branch: 'false'\n      };\n      const branchDetail = branchByLine[k];\n\n      if (branchDetail) {\n        attrs.branch = true;\n        attrs['condition-coverage'] = branchDetail.coverage + '% (' + branchDetail.covered + '/' + branchDetail.total + ')';\n      }\n\n      this.xml.inlineTag('line', attrs);\n    });\n    this.xml.closeTag('lines');\n    this.xml.closeTag('class');\n  }\n\n}\n\nfunction asJavaPackage(node) {\n  return node.getRelativeName().replace(/\\//g, '.').replace(/\\\\/g, '.').replace(/\\.$/, '');\n}\n\nfunction asClassName(node) {\n  return node.getRelativeName().replace(/.*[\\\\/]/, '');\n}\n\nmodule.exports = CoberturaReport;","map":{"version":3,"names":["path","require","escape","ReportBase","CoberturaReport","constructor","opts","cw","xml","timestamp","Date","now","toString","projectRoot","process","cwd","file","onStart","root","context","writer","writeFile","getXMLWriter","writeRootStats","onEnd","closeAll","close","node","metrics","getCoverageSummary","println","openTag","lines","total","covered","pct","branches","complexity","version","inlineTag","closeTag","onSummary","name","isRoot","asJavaPackage","onSummaryEnd","onDetail","fileCoverage","getFileCoverage","branchByLine","getBranchCoverageByLine","asClassName","filename","relative","fnMap","Object","entries","forEach","k","decl","hits","f","signature","number","start","line","getLineCoverage","attrs","branch","branchDetail","coverage","getRelativeName","replace","module","exports"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/istanbul-reports/lib/cobertura/index.js"],"sourcesContent":["'use strict';\n/*\n Copyright 2012-2015, Yahoo Inc.\n Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.\n */\nconst path = require('path');\nconst { escape } = require('html-escaper');\nconst { ReportBase } = require('istanbul-lib-report');\n\nclass CoberturaReport extends ReportBase {\n    constructor(opts) {\n        super();\n\n        opts = opts || {};\n\n        this.cw = null;\n        this.xml = null;\n        this.timestamp = opts.timestamp || Date.now().toString();\n        this.projectRoot = opts.projectRoot || process.cwd();\n        this.file = opts.file || 'cobertura-coverage.xml';\n    }\n\n    onStart(root, context) {\n        this.cw = context.writer.writeFile(this.file);\n        this.xml = context.getXMLWriter(this.cw);\n        this.writeRootStats(root);\n    }\n\n    onEnd() {\n        this.xml.closeAll();\n        this.cw.close();\n    }\n\n    writeRootStats(node) {\n        const metrics = node.getCoverageSummary();\n        this.cw.println('<?xml version=\"1.0\" ?>');\n        this.cw.println(\n            '<!DOCTYPE coverage SYSTEM \"http://cobertura.sourceforge.net/xml/coverage-04.dtd\">'\n        );\n        this.xml.openTag('coverage', {\n            'lines-valid': metrics.lines.total,\n            'lines-covered': metrics.lines.covered,\n            'line-rate': metrics.lines.pct / 100.0,\n            'branches-valid': metrics.branches.total,\n            'branches-covered': metrics.branches.covered,\n            'branch-rate': metrics.branches.pct / 100.0,\n            timestamp: this.timestamp,\n            complexity: '0',\n            version: '0.1'\n        });\n        this.xml.openTag('sources');\n        this.xml.inlineTag('source', null, this.projectRoot);\n        this.xml.closeTag('sources');\n        this.xml.openTag('packages');\n    }\n\n    onSummary(node) {\n        const metrics = node.getCoverageSummary(true);\n        if (!metrics) {\n            return;\n        }\n        this.xml.openTag('package', {\n            name: node.isRoot() ? 'main' : escape(asJavaPackage(node)),\n            'line-rate': metrics.lines.pct / 100.0,\n            'branch-rate': metrics.branches.pct / 100.0\n        });\n        this.xml.openTag('classes');\n    }\n\n    onSummaryEnd(node) {\n        const metrics = node.getCoverageSummary(true);\n        if (!metrics) {\n            return;\n        }\n        this.xml.closeTag('classes');\n        this.xml.closeTag('package');\n    }\n\n    onDetail(node) {\n        const fileCoverage = node.getFileCoverage();\n        const metrics = node.getCoverageSummary();\n        const branchByLine = fileCoverage.getBranchCoverageByLine();\n\n        this.xml.openTag('class', {\n            name: escape(asClassName(node)),\n            filename: path.relative(this.projectRoot, fileCoverage.path),\n            'line-rate': metrics.lines.pct / 100.0,\n            'branch-rate': metrics.branches.pct / 100.0\n        });\n\n        this.xml.openTag('methods');\n        const fnMap = fileCoverage.fnMap;\n        Object.entries(fnMap).forEach(([k, { name, decl }]) => {\n            const hits = fileCoverage.f[k];\n            this.xml.openTag('method', {\n                name: escape(name),\n                hits,\n                signature: '()V' //fake out a no-args void return\n            });\n            this.xml.openTag('lines');\n            //Add the function definition line and hits so that jenkins cobertura plugin records method hits\n            this.xml.inlineTag('line', {\n                number: decl.start.line,\n                hits\n            });\n            this.xml.closeTag('lines');\n            this.xml.closeTag('method');\n        });\n        this.xml.closeTag('methods');\n\n        this.xml.openTag('lines');\n        const lines = fileCoverage.getLineCoverage();\n        Object.entries(lines).forEach(([k, hits]) => {\n            const attrs = {\n                number: k,\n                hits,\n                branch: 'false'\n            };\n            const branchDetail = branchByLine[k];\n\n            if (branchDetail) {\n                attrs.branch = true;\n                attrs['condition-coverage'] =\n                    branchDetail.coverage +\n                    '% (' +\n                    branchDetail.covered +\n                    '/' +\n                    branchDetail.total +\n                    ')';\n            }\n            this.xml.inlineTag('line', attrs);\n        });\n\n        this.xml.closeTag('lines');\n        this.xml.closeTag('class');\n    }\n}\n\nfunction asJavaPackage(node) {\n    return node\n        .getRelativeName()\n        .replace(/\\//g, '.')\n        .replace(/\\\\/g, '.')\n        .replace(/\\.$/, '');\n}\n\nfunction asClassName(node) {\n    return node.getRelativeName().replace(/.*[\\\\/]/, '');\n}\n\nmodule.exports = CoberturaReport;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}