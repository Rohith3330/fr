{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.getExport = exports.getImport = exports.getInterface = exports.getProps = void 0;\n\nfunction typeAnnotation(typeAnnotation) {\n  return {\n    type: 'TypeAnnotation',\n    typeAnnotation\n  };\n}\n\nfunction genericTypeAnnotation(id) {\n  let typeParameters = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  return {\n    type: 'GenericTypeAnnotation',\n    id,\n    typeParameters\n  };\n}\n\nfunction typeParameters(params) {\n  return {\n    type: 'TypeParameterInstantiation',\n    params\n  };\n}\n\nfunction qualifiedTypeIdentifier(qualification, id) {\n  return {\n    type: 'QualifiedTypeIdentifier',\n    qualification,\n    id\n  };\n}\n\nfunction intersectionTypeAnnotation(types) {\n  return {\n    type: 'IntersectionTypeAnnotation',\n    types\n  };\n}\n\nfunction interfaceDeclaration(id, body) {\n  return {\n    type: 'InterfaceDeclaration',\n    id,\n    typeParameters: null,\n    extends: [],\n    implements: [],\n    mixins: [],\n    body\n  };\n}\n\nfunction objectTypeAnnotation(properties) {\n  return {\n    type: 'ObjectTypeAnnotation',\n    properties\n  };\n}\n\nfunction objectTypeProperty(key, value) {\n  let optional = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  return {\n    type: 'ObjectTypeProperty',\n    key,\n    static: false,\n    proto: false,\n    kind: 'init',\n    method: false,\n    value,\n    variance: null,\n    optional\n  };\n}\n\nfunction addTypeAnotation(obj, typeAnnotation, opts) {\n  if (!opts.typescript) return obj;\n  return { ...obj,\n    typeAnnotation\n  };\n}\n\nfunction getSvgPropsTypeAnnotation(t, opts) {\n  if (opts.native) {\n    return t.genericTypeAnnotation(t.identifier('SvgProps'));\n  }\n\n  return genericTypeAnnotation(qualifiedTypeIdentifier(t.identifier('React'), t.identifier('SVGProps')), typeParameters([genericTypeAnnotation(t.identifier('SVGSVGElement'))]));\n}\n\nconst getProps = (_ref, opts) => {\n  let {\n    types: t\n  } = _ref;\n  const props = [];\n\n  if (opts.titleProp) {\n    props.push(t.objectProperty(t.identifier('title'), t.identifier('title'), false, true));\n    props.push(t.objectProperty(t.identifier('titleId'), t.identifier('titleId'), false, true));\n  }\n\n  if (opts.expandProps && props.length > 0) {\n    props.push(t.restElement(t.identifier('props')));\n  }\n\n  const propsArgument = props.length > 0 ? t.objectPattern(props) : t.identifier('props');\n  let propsTypeAnnotation;\n\n  if (props.length > 0) {\n    propsTypeAnnotation = genericTypeAnnotation(t.identifier('SVGRProps'));\n\n    if (opts.expandProps) {\n      propsTypeAnnotation = intersectionTypeAnnotation([getSvgPropsTypeAnnotation(t, opts), propsTypeAnnotation]);\n    }\n  } else {\n    propsTypeAnnotation = opts.expandProps ? getSvgPropsTypeAnnotation(t, opts) : t.objectPattern([]);\n  }\n\n  const typedPropsArgument = addTypeAnotation(propsArgument, typeAnnotation(propsTypeAnnotation), opts);\n  const args = [];\n  if (opts.expandProps || props.length > 0 || opts.ref) args.push(typedPropsArgument);\n\n  if (opts.ref) {\n    const refArgument = t.identifier(opts.typescript ? 'svgRef?' : 'svgRef');\n    const typedRefArgument = addTypeAnotation(refArgument, typeAnnotation(genericTypeAnnotation(qualifiedTypeIdentifier(t.identifier('React'), t.identifier('Ref')), typeParameters([opts.native ? genericTypeAnnotation(qualifiedTypeIdentifier(t.identifier('React'), t.identifier('Component')), typeParameters([genericTypeAnnotation(t.identifier('SvgProps'))])) : genericTypeAnnotation(t.identifier('SVGSVGElement'))]))), opts);\n    args.push(typedRefArgument);\n  }\n\n  return args;\n};\n\nexports.getProps = getProps;\n\nconst getInterface = (_ref2, opts) => {\n  let {\n    types: t\n  } = _ref2;\n  if (!opts.typescript) return null;\n  const properties = [];\n\n  if (opts.titleProp) {\n    properties.push(objectTypeProperty(t.identifier('title'), t.identifier('string'), true));\n    properties.push(objectTypeProperty(t.identifier('titleId'), t.identifier('string'), true));\n  }\n\n  if (properties.length === 0) return null;\n  return interfaceDeclaration(t.identifier('SVGRProps'), objectTypeAnnotation(properties));\n};\n\nexports.getInterface = getInterface;\n\nconst getImport = (_ref3, opts) => {\n  let {\n    types: t\n  } = _ref3;\n  const importDeclarations = [t.importDeclaration([t.importNamespaceSpecifier(t.identifier('React'))], t.stringLiteral('react'))];\n\n  if (opts.native) {\n    if (opts.native.expo) {\n      importDeclarations.push(t.importDeclaration([], t.stringLiteral('expo')));\n    } else {\n      const imports = [t.importDefaultSpecifier(t.identifier('Svg'))];\n\n      if (opts.typescript && opts.expandProps) {\n        imports.push(t.importSpecifier(t.identifier('SvgProps'), t.identifier('SvgProps')));\n      }\n\n      importDeclarations.push(t.importDeclaration(imports, t.stringLiteral('react-native-svg')));\n    }\n  }\n\n  return importDeclarations;\n};\n\nexports.getImport = getImport;\n\nconst getExport = (_ref4, opts) => {\n  let {\n    template\n  } = _ref4;\n  let result = '';\n  let exportName = opts.state.componentName;\n  const plugins = ['jsx'];\n\n  if (opts.typescript) {\n    plugins.push('typescript');\n  }\n\n  if (opts.ref) {\n    const nextExportName = `ForwardRef`;\n    result += `const ${nextExportName} = React.forwardRef(${exportName})\\n\\n`;\n    exportName = nextExportName;\n  }\n\n  if (opts.memo) {\n    const nextExportName = `Memo${exportName}`;\n    result += `const ${nextExportName} = React.memo(${exportName})\\n\\n`;\n    exportName = nextExportName;\n  }\n\n  if (opts.state.caller && opts.state.caller.previousExport) {\n    result += `${opts.state.caller.previousExport}\\n`;\n    result += `export { ${exportName} as ${opts.namedExport} }`;\n    return template.ast(result, {\n      plugins\n    });\n  }\n\n  result += `export default ${exportName}`;\n  return template.ast(result, {\n    plugins\n  });\n};\n\nexports.getExport = getExport;","map":{"version":3,"names":["exports","__esModule","getExport","getImport","getInterface","getProps","typeAnnotation","type","genericTypeAnnotation","id","typeParameters","params","qualifiedTypeIdentifier","qualification","intersectionTypeAnnotation","types","interfaceDeclaration","body","extends","implements","mixins","objectTypeAnnotation","properties","objectTypeProperty","key","value","optional","static","proto","kind","method","variance","addTypeAnotation","obj","opts","typescript","getSvgPropsTypeAnnotation","t","native","identifier","props","titleProp","push","objectProperty","expandProps","length","restElement","propsArgument","objectPattern","propsTypeAnnotation","typedPropsArgument","args","ref","refArgument","typedRefArgument","importDeclarations","importDeclaration","importNamespaceSpecifier","stringLiteral","expo","imports","importDefaultSpecifier","importSpecifier","template","result","exportName","state","componentName","plugins","nextExportName","memo","caller","previousExport","namedExport","ast"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/@svgr/babel-plugin-transform-svg-component/lib/util.js"],"sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.getExport = exports.getImport = exports.getInterface = exports.getProps = void 0;\n\nfunction typeAnnotation(typeAnnotation) {\n  return {\n    type: 'TypeAnnotation',\n    typeAnnotation\n  };\n}\n\nfunction genericTypeAnnotation(id, typeParameters = null) {\n  return {\n    type: 'GenericTypeAnnotation',\n    id,\n    typeParameters\n  };\n}\n\nfunction typeParameters(params) {\n  return {\n    type: 'TypeParameterInstantiation',\n    params\n  };\n}\n\nfunction qualifiedTypeIdentifier(qualification, id) {\n  return {\n    type: 'QualifiedTypeIdentifier',\n    qualification,\n    id\n  };\n}\n\nfunction intersectionTypeAnnotation(types) {\n  return {\n    type: 'IntersectionTypeAnnotation',\n    types\n  };\n}\n\nfunction interfaceDeclaration(id, body) {\n  return {\n    type: 'InterfaceDeclaration',\n    id,\n    typeParameters: null,\n    extends: [],\n    implements: [],\n    mixins: [],\n    body\n  };\n}\n\nfunction objectTypeAnnotation(properties) {\n  return {\n    type: 'ObjectTypeAnnotation',\n    properties\n  };\n}\n\nfunction objectTypeProperty(key, value, optional = false) {\n  return {\n    type: 'ObjectTypeProperty',\n    key,\n    static: false,\n    proto: false,\n    kind: 'init',\n    method: false,\n    value,\n    variance: null,\n    optional\n  };\n}\n\nfunction addTypeAnotation(obj, typeAnnotation, opts) {\n  if (!opts.typescript) return obj;\n  return { ...obj,\n    typeAnnotation\n  };\n}\n\nfunction getSvgPropsTypeAnnotation(t, opts) {\n  if (opts.native) {\n    return t.genericTypeAnnotation(t.identifier('SvgProps'));\n  }\n\n  return genericTypeAnnotation(qualifiedTypeIdentifier(t.identifier('React'), t.identifier('SVGProps')), typeParameters([genericTypeAnnotation(t.identifier('SVGSVGElement'))]));\n}\n\nconst getProps = ({\n  types: t\n}, opts) => {\n  const props = [];\n\n  if (opts.titleProp) {\n    props.push(t.objectProperty(t.identifier('title'), t.identifier('title'), false, true));\n    props.push(t.objectProperty(t.identifier('titleId'), t.identifier('titleId'), false, true));\n  }\n\n  if (opts.expandProps && props.length > 0) {\n    props.push(t.restElement(t.identifier('props')));\n  }\n\n  const propsArgument = props.length > 0 ? t.objectPattern(props) : t.identifier('props');\n  let propsTypeAnnotation;\n\n  if (props.length > 0) {\n    propsTypeAnnotation = genericTypeAnnotation(t.identifier('SVGRProps'));\n\n    if (opts.expandProps) {\n      propsTypeAnnotation = intersectionTypeAnnotation([getSvgPropsTypeAnnotation(t, opts), propsTypeAnnotation]);\n    }\n  } else {\n    propsTypeAnnotation = opts.expandProps ? getSvgPropsTypeAnnotation(t, opts) : t.objectPattern([]);\n  }\n\n  const typedPropsArgument = addTypeAnotation(propsArgument, typeAnnotation(propsTypeAnnotation), opts);\n  const args = [];\n  if (opts.expandProps || props.length > 0 || opts.ref) args.push(typedPropsArgument);\n\n  if (opts.ref) {\n    const refArgument = t.identifier(opts.typescript ? 'svgRef?' : 'svgRef');\n    const typedRefArgument = addTypeAnotation(refArgument, typeAnnotation(genericTypeAnnotation(qualifiedTypeIdentifier(t.identifier('React'), t.identifier('Ref')), typeParameters([opts.native ? genericTypeAnnotation(qualifiedTypeIdentifier(t.identifier('React'), t.identifier('Component')), typeParameters([genericTypeAnnotation(t.identifier('SvgProps'))])) : genericTypeAnnotation(t.identifier('SVGSVGElement'))]))), opts);\n    args.push(typedRefArgument);\n  }\n\n  return args;\n};\n\nexports.getProps = getProps;\n\nconst getInterface = ({\n  types: t\n}, opts) => {\n  if (!opts.typescript) return null;\n  const properties = [];\n\n  if (opts.titleProp) {\n    properties.push(objectTypeProperty(t.identifier('title'), t.identifier('string'), true));\n    properties.push(objectTypeProperty(t.identifier('titleId'), t.identifier('string'), true));\n  }\n\n  if (properties.length === 0) return null;\n  return interfaceDeclaration(t.identifier('SVGRProps'), objectTypeAnnotation(properties));\n};\n\nexports.getInterface = getInterface;\n\nconst getImport = ({\n  types: t\n}, opts) => {\n  const importDeclarations = [t.importDeclaration([t.importNamespaceSpecifier(t.identifier('React'))], t.stringLiteral('react'))];\n\n  if (opts.native) {\n    if (opts.native.expo) {\n      importDeclarations.push(t.importDeclaration([], t.stringLiteral('expo')));\n    } else {\n      const imports = [t.importDefaultSpecifier(t.identifier('Svg'))];\n\n      if (opts.typescript && opts.expandProps) {\n        imports.push(t.importSpecifier(t.identifier('SvgProps'), t.identifier('SvgProps')));\n      }\n\n      importDeclarations.push(t.importDeclaration(imports, t.stringLiteral('react-native-svg')));\n    }\n  }\n\n  return importDeclarations;\n};\n\nexports.getImport = getImport;\n\nconst getExport = ({\n  template\n}, opts) => {\n  let result = '';\n  let exportName = opts.state.componentName;\n  const plugins = ['jsx'];\n\n  if (opts.typescript) {\n    plugins.push('typescript');\n  }\n\n  if (opts.ref) {\n    const nextExportName = `ForwardRef`;\n    result += `const ${nextExportName} = React.forwardRef(${exportName})\\n\\n`;\n    exportName = nextExportName;\n  }\n\n  if (opts.memo) {\n    const nextExportName = `Memo${exportName}`;\n    result += `const ${nextExportName} = React.memo(${exportName})\\n\\n`;\n    exportName = nextExportName;\n  }\n\n  if (opts.state.caller && opts.state.caller.previousExport) {\n    result += `${opts.state.caller.previousExport}\\n`;\n    result += `export { ${exportName} as ${opts.namedExport} }`;\n    return template.ast(result, {\n      plugins\n    });\n  }\n\n  result += `export default ${exportName}`;\n  return template.ast(result, {\n    plugins\n  });\n};\n\nexports.getExport = getExport;"],"mappings":"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"},"metadata":{},"sourceType":"script"}