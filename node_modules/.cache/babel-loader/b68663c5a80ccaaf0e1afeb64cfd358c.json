{"ast":null,"code":"var bind = require('../internals/function-bind-context');\n\nvar uncurryThis = require('../internals/function-uncurry-this');\n\nvar IndexedObject = require('../internals/indexed-object');\n\nvar toObject = require('../internals/to-object');\n\nvar toPropertyKey = require('../internals/to-property-key');\n\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\n\nvar objectCreate = require('../internals/object-create');\n\nvar arrayFromConstructorAndList = require('../internals/array-from-constructor-and-list');\n\nvar $Array = Array;\nvar push = uncurryThis([].push);\n\nmodule.exports = function ($this, callbackfn, that, specificConstructor) {\n  var O = toObject($this);\n  var self = IndexedObject(O);\n  var boundFunction = bind(callbackfn, that);\n  var target = objectCreate(null);\n  var length = lengthOfArrayLike(self);\n  var index = 0;\n  var Constructor, key, value;\n\n  for (; length > index; index++) {\n    value = self[index];\n    key = toPropertyKey(boundFunction(value, index, O)); // in some IE10 builds, `hasOwnProperty` returns incorrect result on integer keys\n    // but since it's a `null` prototype object, we can safely use `in`\n\n    if (key in target) push(target[key], value);else target[key] = [value];\n  } // TODO: Remove this block from `core-js@4`\n\n\n  if (specificConstructor) {\n    Constructor = specificConstructor(O);\n\n    if (Constructor !== $Array) {\n      for (key in target) target[key] = arrayFromConstructorAndList(Constructor, target[key]);\n    }\n  }\n\n  return target;\n};","map":{"version":3,"names":["bind","require","uncurryThis","IndexedObject","toObject","toPropertyKey","lengthOfArrayLike","objectCreate","arrayFromConstructorAndList","$Array","Array","push","module","exports","$this","callbackfn","that","specificConstructor","O","self","boundFunction","target","length","index","Constructor","key","value"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/core-js-pure/internals/array-group.js"],"sourcesContent":["var bind = require('../internals/function-bind-context');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar IndexedObject = require('../internals/indexed-object');\nvar toObject = require('../internals/to-object');\nvar toPropertyKey = require('../internals/to-property-key');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\nvar objectCreate = require('../internals/object-create');\nvar arrayFromConstructorAndList = require('../internals/array-from-constructor-and-list');\n\nvar $Array = Array;\nvar push = uncurryThis([].push);\n\nmodule.exports = function ($this, callbackfn, that, specificConstructor) {\n  var O = toObject($this);\n  var self = IndexedObject(O);\n  var boundFunction = bind(callbackfn, that);\n  var target = objectCreate(null);\n  var length = lengthOfArrayLike(self);\n  var index = 0;\n  var Constructor, key, value;\n  for (;length > index; index++) {\n    value = self[index];\n    key = toPropertyKey(boundFunction(value, index, O));\n    // in some IE10 builds, `hasOwnProperty` returns incorrect result on integer keys\n    // but since it's a `null` prototype object, we can safely use `in`\n    if (key in target) push(target[key], value);\n    else target[key] = [value];\n  }\n  // TODO: Remove this block from `core-js@4`\n  if (specificConstructor) {\n    Constructor = specificConstructor(O);\n    if (Constructor !== $Array) {\n      for (key in target) target[key] = arrayFromConstructorAndList(Constructor, target[key]);\n    }\n  } return target;\n};\n"],"mappings":"AAAA,IAAIA,IAAI,GAAGC,OAAO,CAAC,oCAAD,CAAlB;;AACA,IAAIC,WAAW,GAAGD,OAAO,CAAC,oCAAD,CAAzB;;AACA,IAAIE,aAAa,GAAGF,OAAO,CAAC,6BAAD,CAA3B;;AACA,IAAIG,QAAQ,GAAGH,OAAO,CAAC,wBAAD,CAAtB;;AACA,IAAII,aAAa,GAAGJ,OAAO,CAAC,8BAAD,CAA3B;;AACA,IAAIK,iBAAiB,GAAGL,OAAO,CAAC,mCAAD,CAA/B;;AACA,IAAIM,YAAY,GAAGN,OAAO,CAAC,4BAAD,CAA1B;;AACA,IAAIO,2BAA2B,GAAGP,OAAO,CAAC,8CAAD,CAAzC;;AAEA,IAAIQ,MAAM,GAAGC,KAAb;AACA,IAAIC,IAAI,GAAGT,WAAW,CAAC,GAAGS,IAAJ,CAAtB;;AAEAC,MAAM,CAACC,OAAP,GAAiB,UAAUC,KAAV,EAAiBC,UAAjB,EAA6BC,IAA7B,EAAmCC,mBAAnC,EAAwD;EACvE,IAAIC,CAAC,GAAGd,QAAQ,CAACU,KAAD,CAAhB;EACA,IAAIK,IAAI,GAAGhB,aAAa,CAACe,CAAD,CAAxB;EACA,IAAIE,aAAa,GAAGpB,IAAI,CAACe,UAAD,EAAaC,IAAb,CAAxB;EACA,IAAIK,MAAM,GAAGd,YAAY,CAAC,IAAD,CAAzB;EACA,IAAIe,MAAM,GAAGhB,iBAAiB,CAACa,IAAD,CAA9B;EACA,IAAII,KAAK,GAAG,CAAZ;EACA,IAAIC,WAAJ,EAAiBC,GAAjB,EAAsBC,KAAtB;;EACA,OAAMJ,MAAM,GAAGC,KAAf,EAAsBA,KAAK,EAA3B,EAA+B;IAC7BG,KAAK,GAAGP,IAAI,CAACI,KAAD,CAAZ;IACAE,GAAG,GAAGpB,aAAa,CAACe,aAAa,CAACM,KAAD,EAAQH,KAAR,EAAeL,CAAf,CAAd,CAAnB,CAF6B,CAG7B;IACA;;IACA,IAAIO,GAAG,IAAIJ,MAAX,EAAmBV,IAAI,CAACU,MAAM,CAACI,GAAD,CAAP,EAAcC,KAAd,CAAJ,CAAnB,KACKL,MAAM,CAACI,GAAD,CAAN,GAAc,CAACC,KAAD,CAAd;EACN,CAfsE,CAgBvE;;;EACA,IAAIT,mBAAJ,EAAyB;IACvBO,WAAW,GAAGP,mBAAmB,CAACC,CAAD,CAAjC;;IACA,IAAIM,WAAW,KAAKf,MAApB,EAA4B;MAC1B,KAAKgB,GAAL,IAAYJ,MAAZ,EAAoBA,MAAM,CAACI,GAAD,CAAN,GAAcjB,2BAA2B,CAACgB,WAAD,EAAcH,MAAM,CAACI,GAAD,CAApB,CAAzC;IACrB;EACF;;EAAC,OAAOJ,MAAP;AACH,CAvBD"},"metadata":{},"sourceType":"script"}