{"ast":null,"code":"var test = require('tape');\n\nvar parse = require('../').parse;\n\ntest('expand environment variables', function (t) {\n  t.same(parse('a $XYZ c', {\n    XYZ: 'b'\n  }), ['a', 'b', 'c']);\n  t.same(parse('a${XYZ}c', {\n    XYZ: 'b'\n  }), ['abc']);\n  t.same(parse('a${XYZ}c $XYZ', {\n    XYZ: 'b'\n  }), ['abc', 'b']);\n  t.same(parse('\"-$X-$Y-\"', {\n    X: 'a',\n    Y: 'b'\n  }), ['-a-b-']);\n  t.same(parse(\"'-$X-$Y-'\", {\n    X: 'a',\n    Y: 'b'\n  }), ['-$X-$Y-']);\n  t.same(parse('qrs\"$zzz\"wxy', {\n    zzz: 'tuv'\n  }), ['qrstuvwxy']);\n  t.same(parse(\"qrs'$zzz'wxy\", {\n    zzz: 'tuv'\n  }), ['qrs$zzzwxy']);\n  t.same(parse(\"qrs${zzz}wxy\"), ['qrswxy']);\n  t.same(parse(\"qrs$wxy $\"), ['qrs', '$']);\n  t.same(parse('grep \"xy$\"'), ['grep', 'xy$']);\n  t.same(parse(\"ab$x\", {\n    x: 'c'\n  }), ['abc']);\n  t.same(parse(\"ab\\\\$x\", {\n    x: 'c'\n  }), ['ab$x']);\n  t.same(parse(\"ab${x}def\", {\n    x: 'c'\n  }), ['abcdef']);\n  t.same(parse(\"ab\\\\${x}def\", {\n    x: 'c'\n  }), ['ab${x}def']);\n  t.same(parse('\"ab\\\\${x}def\"', {\n    x: 'c'\n  }), ['ab${x}def']);\n  t.end();\n});\ntest('environment variables with metacharacters', function (t) {\n  t.same(parse('a $XYZ c', {\n    XYZ: '\"b\"'\n  }), ['a', '\"b\"', 'c']);\n  t.same(parse('a $XYZ c', {\n    XYZ: '$X',\n    X: 5\n  }), ['a', '$X', 'c']);\n  t.same(parse('a\"$XYZ\"c', {\n    XYZ: \"'xyz'\"\n  }), [\"a'xyz'c\"]);\n  t.end();\n});\ntest('special shell parameters', function (t) {\n  var chars = '*@#?-$!0_'.split('');\n  t.plan(chars.length);\n  chars.forEach(function (c) {\n    var env = {};\n    env[c] = 'xxx';\n    t.same(parse('a $' + c + ' c', env), ['a', 'xxx', 'c']);\n  });\n});","map":{"version":3,"names":["test","require","parse","t","same","XYZ","X","Y","zzz","x","end","chars","split","plan","length","forEach","c","env"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/shell-quote/test/env.js"],"sourcesContent":["var test = require('tape');\nvar parse = require('../').parse;\n\ntest('expand environment variables', function (t) {\n    t.same(parse('a $XYZ c', { XYZ: 'b' }), [ 'a', 'b', 'c' ]);\n    t.same(parse('a${XYZ}c', { XYZ: 'b' }), [ 'abc' ]);\n    t.same(parse('a${XYZ}c $XYZ', { XYZ: 'b' }), [ 'abc', 'b' ]);\n    t.same(parse('\"-$X-$Y-\"', { X: 'a', Y: 'b' }), [ '-a-b-' ]);\n    t.same(parse(\"'-$X-$Y-'\", { X: 'a', Y: 'b' }), [ '-$X-$Y-' ]);\n    t.same(parse('qrs\"$zzz\"wxy', { zzz: 'tuv' }), [ 'qrstuvwxy' ]);\n    t.same(parse(\"qrs'$zzz'wxy\", { zzz: 'tuv' }), [ 'qrs$zzzwxy' ]);\n    t.same(parse(\"qrs${zzz}wxy\"), [ 'qrswxy' ]);\n    t.same(parse(\"qrs$wxy $\"), [ 'qrs', '$' ]);\n    t.same(parse('grep \"xy$\"'), [ 'grep', 'xy$' ]);\n    t.same(parse(\"ab$x\", { x: 'c' }), [ 'abc' ]);\n    t.same(parse(\"ab\\\\$x\", { x: 'c' }), [ 'ab$x' ]);\n    t.same(parse(\"ab${x}def\", { x: 'c' }), [ 'abcdef' ]);\n    t.same(parse(\"ab\\\\${x}def\", { x: 'c' }), [ 'ab${x}def' ]);\n    t.same(parse('\"ab\\\\${x}def\"', { x: 'c' }), [ 'ab${x}def' ]);\n    \n    t.end();\n});\n\ntest('environment variables with metacharacters', function (t) {\n    t.same(parse('a $XYZ c', { XYZ: '\"b\"' }), [ 'a', '\"b\"', 'c' ]);\n    t.same(parse('a $XYZ c', { XYZ: '$X', X: 5 }), [ 'a', '$X', 'c' ]);\n    t.same(parse('a\"$XYZ\"c', { XYZ: \"'xyz'\" }), [ \"a'xyz'c\" ]);\n    \n    t.end();\n});\n\ntest('special shell parameters', function (t) {\n    var chars = '*@#?-$!0_'.split('');\n    t.plan(chars.length);\n    \n    chars.forEach(function (c) {\n        var env = {};\n        env[c] = 'xxx';\n        t.same(parse('a $' + c + ' c', env), [ 'a', 'xxx', 'c' ]);\n    });\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}