{"ast":null,"code":"const user = require('../models/usermodel');\n\nconst asyncHandler = require('express-async-handler');\n\nconst generateToken = require('../util/generateToken');\n\nconst retriveUser = asyncHandler(async (req, res) => {\n  try {\n    const students = await user.find();\n    console.log(\"here1\"); // console.log(students);  \n\n    res.send(students);\n  } catch (err) {\n    res.status(400).send({\n      error: err\n    });\n  }\n});\nconst registerUser = asyncHandler(async (req, res) => {\n  console.log(\"Here\");\n  const {\n    name,\n    email,\n    password,\n    pic,\n    roll,\n    branch\n  } = req.body;\n  const userExists = await user.findOne({\n    email\n  });\n\n  if (userExists) {\n    res.status(400);\n    throw new Error(\"user already exists\");\n  }\n\n  const User = await user.create({\n    name,\n    email,\n    password,\n    pic,\n    roll,\n    branch\n  });\n\n  if (User) {\n    res.status(201).json({\n      _id: User._id,\n      name: User.name,\n      email: User.email,\n      isAdmin: User.isAdmin,\n      token: generateToken(User._id),\n      pic: User.pic,\n      roll: User.roll,\n      branch: User.branch\n    });\n  } else {\n    res.status(400);\n    throw new Error(\"error occured\");\n  }\n});\nconst authUser = asyncHandler(async (req, res) => {\n  console.log(\"Here\");\n  console.log(req.body);\n  const {\n    email,\n    password\n  } = req.body;\n  const User = await user.findOne({\n    email\n  });\n\n  if (User && (await User.matchPassword(password))) {\n    res.json({\n      _id: User._id,\n      name: User.name,\n      email: User.email,\n      isAdmin: User.isAdmin,\n      token: generateToken(User._id),\n      pic: User.pic\n    });\n  } else {\n    res.status(401);\n    throw new Error(\"Invalid email or password!\");\n  }\n});\nconst getuserbyid = asyncHandler(async (req, res) => {\n  try {\n    console.log(req.params);\n    const {\n      id\n    } = req.params;\n    const ind = await user.findById({\n      _id: id\n    });\n    console.log(ind);\n    res.json(ind);\n  } catch (error) {\n    throw new Error(\"No user found\");\n  }\n});\nmodule.exports = {\n  registerUser,\n  authUser,\n  retriveUser,\n  getuserbyid\n};","map":{"version":3,"names":["user","require","asyncHandler","generateToken","retriveUser","req","res","students","find","console","log","send","err","status","error","registerUser","name","email","password","pic","roll","branch","body","userExists","findOne","Error","User","create","json","_id","isAdmin","token","authUser","matchPassword","getuserbyid","params","id","ind","findById","module","exports"],"sources":["C:/Users/Rohith/mern/backend/controllers/userController.js"],"sourcesContent":["const user=require('../models/usermodel');\r\nconst asyncHandler=require('express-async-handler');\r\nconst generateToken = require('../util/generateToken');\r\nconst retriveUser=asyncHandler(async(req,res)=>{\r\n    try {\r\n        const students = await user.find();\r\n        console.log(\"here1\");\r\n        // console.log(students);  \r\n        res.send(students);\r\n      } catch(err) {\r\n        res.status(400).send({ error: err });\r\n      }\r\n}\r\n    )\r\nconst registerUser=asyncHandler(async(req,res)=>{\r\n    console.log(\"Here\");\r\n    const {name,email,password,pic,roll,branch} = req.body;\r\n    const userExists= await user.findOne({email});\r\n    if(userExists){\r\n        res.status(400)\r\n        throw new Error(\"user already exists\");\r\n    }\r\n    const User =await user.create({name,email,password,pic,roll,branch});\r\n    if(User){\r\n        res.status(201).json({\r\n            _id:User._id,\r\n            name:User.name,\r\n            email:User.email,\r\n            isAdmin:User.isAdmin,\r\n            token:generateToken(User._id),\r\n            pic:User.pic,\r\n            roll:User.roll,\r\n            branch:User.branch\r\n        });\r\n    }else{\r\n        res.status(400);\r\n        throw new Error(\"error occured\");\r\n    }\r\n});\r\n\r\nconst authUser=asyncHandler(async(req,res)=>{\r\n    console.log(\"Here\");\r\n    console.log(req.body);\r\n    const {email,password}=req.body;\r\n\r\n    const User=await user.findOne({email});\r\n    \r\n    if(User && (await User.matchPassword(password))){\r\n        res.json({\r\n            _id:User._id,\r\n            name:User.name,\r\n            email:User.email,\r\n            isAdmin:User.isAdmin,\r\n            token:generateToken(User._id),\r\n            pic:User.pic,\r\n        });\r\n    }\r\n    else{\r\n        res.status(401);\r\n        throw new Error(\"Invalid email or password!\");\r\n    }\r\n});\r\nconst getuserbyid=asyncHandler(async(req,res)=>{\r\n    try{\r\n        console.log(req.params);\r\n        const {id}=req.params;\r\n        const ind=await user.findById({_id:id});\r\n        console.log(ind);\r\n        res.json(ind);\r\n    }\r\n    catch(error){\r\n        throw new Error(\"No user found\");\r\n    }\r\n});\r\nmodule.exports= {registerUser,authUser,retriveUser,getuserbyid};"],"mappings":"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"},"metadata":{},"sourceType":"script"}