{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _lodash = _interopRequireDefault(require(\"lodash\"));\n\nvar _utilities = require(\"../../utilities\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar _default = (context, report) => {\n  const sourceCode = context.getSourceCode();\n  return node => {\n    const declarations = _lodash.default.get(node, 'declarations', []);\n\n    for (const leaf of declarations) {\n      const typeAnnotation = _lodash.default.get(leaf, 'id.typeAnnotation');\n\n      if (typeAnnotation) {\n        report({\n          colon: sourceCode.getFirstToken(typeAnnotation),\n          name: (0, _utilities.quoteName)((0, _utilities.getParameterName)(leaf, context)),\n          node: leaf,\n          type: node.kind + ' type annotation'\n        });\n      }\n    }\n  };\n};\n\nexports.default = _default;\nmodule.exports = exports.default;","map":{"version":3,"names":["Object","defineProperty","exports","value","default","_lodash","_interopRequireDefault","require","_utilities","obj","__esModule","_default","context","report","sourceCode","getSourceCode","node","declarations","get","leaf","typeAnnotation","colon","getFirstToken","name","quoteName","getParameterName","type","kind","module"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/eslint-plugin-flowtype/dist/rules/typeColonSpacing/evaluateVariables.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _lodash = _interopRequireDefault(require(\"lodash\"));\n\nvar _utilities = require(\"../../utilities\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar _default = (context, report) => {\n  const sourceCode = context.getSourceCode();\n  return node => {\n    const declarations = _lodash.default.get(node, 'declarations', []);\n\n    for (const leaf of declarations) {\n      const typeAnnotation = _lodash.default.get(leaf, 'id.typeAnnotation');\n\n      if (typeAnnotation) {\n        report({\n          colon: sourceCode.getFirstToken(typeAnnotation),\n          name: (0, _utilities.quoteName)((0, _utilities.getParameterName)(leaf, context)),\n          node: leaf,\n          type: node.kind + ' type annotation'\n        });\n      }\n    }\n  };\n};\n\nexports.default = _default;\nmodule.exports = exports.default;"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAC3CC,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAIC,OAAO,GAAGC,sBAAsB,CAACC,OAAO,CAAC,QAAD,CAAR,CAApC;;AAEA,IAAIC,UAAU,GAAGD,OAAO,CAAC,iBAAD,CAAxB;;AAEA,SAASD,sBAAT,CAAgCG,GAAhC,EAAqC;EAAE,OAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;IAAEL,OAAO,EAAEK;EAAX,CAArC;AAAwD;;AAE/F,IAAIE,QAAQ,GAAG,CAACC,OAAD,EAAUC,MAAV,KAAqB;EAClC,MAAMC,UAAU,GAAGF,OAAO,CAACG,aAAR,EAAnB;EACA,OAAOC,IAAI,IAAI;IACb,MAAMC,YAAY,GAAGZ,OAAO,CAACD,OAAR,CAAgBc,GAAhB,CAAoBF,IAApB,EAA0B,cAA1B,EAA0C,EAA1C,CAArB;;IAEA,KAAK,MAAMG,IAAX,IAAmBF,YAAnB,EAAiC;MAC/B,MAAMG,cAAc,GAAGf,OAAO,CAACD,OAAR,CAAgBc,GAAhB,CAAoBC,IAApB,EAA0B,mBAA1B,CAAvB;;MAEA,IAAIC,cAAJ,EAAoB;QAClBP,MAAM,CAAC;UACLQ,KAAK,EAAEP,UAAU,CAACQ,aAAX,CAAyBF,cAAzB,CADF;UAELG,IAAI,EAAE,CAAC,GAAGf,UAAU,CAACgB,SAAf,EAA0B,CAAC,GAAGhB,UAAU,CAACiB,gBAAf,EAAiCN,IAAjC,EAAuCP,OAAvC,CAA1B,CAFD;UAGLI,IAAI,EAAEG,IAHD;UAILO,IAAI,EAAEV,IAAI,CAACW,IAAL,GAAY;QAJb,CAAD,CAAN;MAMD;IACF;EACF,CAfD;AAgBD,CAlBD;;AAoBAzB,OAAO,CAACE,OAAR,GAAkBO,QAAlB;AACAiB,MAAM,CAAC1B,OAAP,GAAiBA,OAAO,CAACE,OAAzB"},"metadata":{},"sourceType":"script"}