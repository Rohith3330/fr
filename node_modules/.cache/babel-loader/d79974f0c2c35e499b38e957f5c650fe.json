{"ast":null,"code":"'use strict';\n\nvar $ = require('../internals/export');\n\nvar $findLast = require('../internals/array-iteration-from-last').findLast;\n\nvar addToUnscopables = require('../internals/add-to-unscopables'); // `Array.prototype.findLast` method\n// https://github.com/tc39/proposal-array-find-from-last\n\n\n$({\n  target: 'Array',\n  proto: true\n}, {\n  findLast: function findLast(callbackfn\n  /* , that = undefined */\n  ) {\n    return $findLast(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\naddToUnscopables('findLast');","map":{"version":3,"names":["$","require","$findLast","findLast","addToUnscopables","target","proto","callbackfn","arguments","length","undefined"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/core-js/modules/es.array.find-last.js"],"sourcesContent":["'use strict';\nvar $ = require('../internals/export');\nvar $findLast = require('../internals/array-iteration-from-last').findLast;\nvar addToUnscopables = require('../internals/add-to-unscopables');\n\n// `Array.prototype.findLast` method\n// https://github.com/tc39/proposal-array-find-from-last\n$({ target: 'Array', proto: true }, {\n  findLast: function findLast(callbackfn /* , that = undefined */) {\n    return $findLast(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n\naddToUnscopables('findLast');\n"],"mappings":"AAAA;;AACA,IAAIA,CAAC,GAAGC,OAAO,CAAC,qBAAD,CAAf;;AACA,IAAIC,SAAS,GAAGD,OAAO,CAAC,wCAAD,CAAP,CAAkDE,QAAlE;;AACA,IAAIC,gBAAgB,GAAGH,OAAO,CAAC,iCAAD,CAA9B,C,CAEA;AACA;;;AACAD,CAAC,CAAC;EAAEK,MAAM,EAAE,OAAV;EAAmBC,KAAK,EAAE;AAA1B,CAAD,EAAmC;EAClCH,QAAQ,EAAE,SAASA,QAAT,CAAkBI;EAAW;EAA7B,EAAuD;IAC/D,OAAOL,SAAS,CAAC,IAAD,EAAOK,UAAP,EAAmBC,SAAS,CAACC,MAAV,GAAmB,CAAnB,GAAuBD,SAAS,CAAC,CAAD,CAAhC,GAAsCE,SAAzD,CAAhB;EACD;AAHiC,CAAnC,CAAD;AAMAN,gBAAgB,CAAC,UAAD,CAAhB"},"metadata":{},"sourceType":"script"}