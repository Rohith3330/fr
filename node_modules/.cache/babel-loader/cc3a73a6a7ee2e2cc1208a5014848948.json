{"ast":null,"code":"'use strict';\n\nvar test = require('tape');\n\nvar debug = require('object-inspect');\n\nvar forEach = require('foreach');\n\nvar has = require('has');\n\nvar v = require('es-value-fixtures');\n\nvar getSymbolDescription = require('../');\n\nvar getInferredName = require('../getInferredName');\n\ntest('getSymbolDescription', function (t) {\n  t.test('no symbols', {\n    skip: v.hasSymbols\n  }, function (st) {\n    st['throws'](getSymbolDescription, SyntaxError, 'requires Symbol support');\n    st.end();\n  });\n  forEach(v.nonSymbolPrimitives.concat(v.objects), function (nonSymbol) {\n    t['throws'](function () {\n      getSymbolDescription(nonSymbol);\n    }, v.hasSymbols ? TypeError : SyntaxError, debug(nonSymbol) + ' is not a Symbol');\n  });\n  t.test('with symbols', {\n    skip: !v.hasSymbols\n  }, function (st) {\n    forEach([[Symbol(), undefined], [Symbol(undefined), undefined], [Symbol(null), 'null'], [Symbol.iterator, 'Symbol.iterator'], [Symbol('foo'), 'foo']], function (pair) {\n      var sym = pair[0];\n      var desc = pair[1];\n      st.equal(getSymbolDescription(sym), desc, debug(sym) + ' description is ' + debug(desc));\n    });\n    st.test('only possible when inference or native `Symbol.prototype.description` is supported', {\n      skip: !getInferredName && !has(Symbol.prototype, 'description')\n    }, function (s2t) {\n      s2t.equal(getSymbolDescription(Symbol('')), '', 'Symbol(\"\") description is \"\"');\n      s2t.end();\n    });\n    st.test('only possible when global symbols are supported', {\n      skip: !has(Symbol, 'for') || !has(Symbol, 'keyFor')\n    }, function (s2t) {\n      // eslint-disable-next-line no-restricted-properties\n      s2t.equal(getSymbolDescription(Symbol['for']('')), '', 'Symbol.for(\"\") description is \"\"');\n      s2t.end();\n    });\n    st.end();\n  });\n  t.end();\n});","map":{"version":3,"names":["test","require","debug","forEach","has","v","getSymbolDescription","getInferredName","t","skip","hasSymbols","st","SyntaxError","end","nonSymbolPrimitives","concat","objects","nonSymbol","TypeError","Symbol","undefined","iterator","pair","sym","desc","equal","prototype","s2t"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/get-symbol-description/test/index.js"],"sourcesContent":["'use strict';\n\nvar test = require('tape');\nvar debug = require('object-inspect');\nvar forEach = require('foreach');\nvar has = require('has');\nvar v = require('es-value-fixtures');\n\nvar getSymbolDescription = require('../');\nvar getInferredName = require('../getInferredName');\n\ntest('getSymbolDescription', function (t) {\n\tt.test('no symbols', { skip: v.hasSymbols }, function (st) {\n\t\tst['throws'](\n\t\t\tgetSymbolDescription,\n\t\t\tSyntaxError,\n\t\t\t'requires Symbol support'\n\t\t);\n\n\t\tst.end();\n\t});\n\n\tforEach(v.nonSymbolPrimitives.concat(v.objects), function (nonSymbol) {\n\t\tt['throws'](\n\t\t\tfunction () { getSymbolDescription(nonSymbol); },\n\t\t\tv.hasSymbols ? TypeError : SyntaxError,\n\t\t\tdebug(nonSymbol) + ' is not a Symbol'\n\t\t);\n\t});\n\n\tt.test('with symbols', { skip: !v.hasSymbols }, function (st) {\n\t\tforEach(\n\t\t\t[\n\t\t\t\t[Symbol(), undefined],\n\t\t\t\t[Symbol(undefined), undefined],\n\t\t\t\t[Symbol(null), 'null'],\n\t\t\t\t[Symbol.iterator, 'Symbol.iterator'],\n\t\t\t\t[Symbol('foo'), 'foo']\n\t\t\t],\n\t\t\tfunction (pair) {\n\t\t\t\tvar sym = pair[0];\n\t\t\t\tvar desc = pair[1];\n\t\t\t\tst.equal(getSymbolDescription(sym), desc, debug(sym) + ' description is ' + debug(desc));\n\t\t\t}\n\t\t);\n\n\t\tst.test('only possible when inference or native `Symbol.prototype.description` is supported', {\n\t\t\tskip: !getInferredName && !has(Symbol.prototype, 'description')\n\t\t}, function (s2t) {\n\t\t\ts2t.equal(getSymbolDescription(Symbol('')), '', 'Symbol(\"\") description is \"\"');\n\n\t\t\ts2t.end();\n\t\t});\n\n\t\tst.test('only possible when global symbols are supported', {\n\t\t\tskip: !has(Symbol, 'for') || !has(Symbol, 'keyFor')\n\t\t}, function (s2t) {\n\t\t\t// eslint-disable-next-line no-restricted-properties\n\t\t\ts2t.equal(getSymbolDescription(Symbol['for']('')), '', 'Symbol.for(\"\") description is \"\"');\n\t\t\ts2t.end();\n\t\t});\n\n\t\tst.end();\n\t});\n\n\tt.end();\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}