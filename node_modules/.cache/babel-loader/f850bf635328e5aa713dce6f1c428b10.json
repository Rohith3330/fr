{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _lodash = _interopRequireDefault(require(\"lodash\"));\n\nvar _utilities = require(\"../utilities\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nconst defaults = {\n  annotationStyle: 'none',\n  strict: false\n};\n\nconst looksLikeFlowFileAnnotation = comment => {\n  return /@(?:no)?flo/ui.test(comment);\n};\n\nconst isValidAnnotationStyle = (node, style) => {\n  if (style === 'none') {\n    return true;\n  }\n\n  return style === node.type.toLowerCase();\n};\n\nconst checkAnnotationSpelling = comment => {\n  return /@[a-z]+\\b/u.test(comment) && (0, _utilities.fuzzyStringMatch)(comment.replace(/no/ui, ''), '@flow', 0.2);\n};\n\nconst isFlowStrict = comment => {\n  return /^@flow\\sstrict\\b/u.test(comment);\n};\n\nconst noFlowAnnotation = comment => {\n  return /^@noflow\\b/u.test(comment);\n};\n\nconst schema = [{\n  enum: ['always', 'never'],\n  type: 'string'\n}, {\n  additionalProperties: false,\n  properties: {\n    annotationStyle: {\n      enum: ['none', 'line', 'block'],\n      type: 'string'\n    },\n    strict: {\n      enum: [true, false],\n      type: 'boolean'\n    }\n  },\n  type: 'object'\n}];\n\nconst create = context => {\n  const always = context.options[0] === 'always';\n\n  const style = _lodash.default.get(context, 'options[1].annotationStyle', defaults.annotationStyle);\n\n  const flowStrict = _lodash.default.get(context, 'options[1].strict', defaults.strict);\n\n  return {\n    Program(node) {\n      const firstToken = node.tokens[0];\n\n      const potentialFlowFileAnnotation = _lodash.default.find(context.getSourceCode().getAllComments(), comment => {\n        return looksLikeFlowFileAnnotation(comment.value);\n      });\n\n      if (potentialFlowFileAnnotation) {\n        if (firstToken && firstToken.range[0] < potentialFlowFileAnnotation.range[0]) {\n          context.report({\n            message: 'Flow file annotation not at the top of the file.',\n            node: potentialFlowFileAnnotation\n          });\n        }\n\n        const annotationValue = potentialFlowFileAnnotation.value.trim();\n\n        if ((0, _utilities.isFlowFileAnnotation)(annotationValue)) {\n          if (!isValidAnnotationStyle(potentialFlowFileAnnotation, style)) {\n            const annotation = style === 'line' ? '// ' + annotationValue : '/* ' + annotationValue + ' */';\n            context.report({\n              fix: fixer => {\n                return fixer.replaceTextRange([potentialFlowFileAnnotation.range[0], potentialFlowFileAnnotation.range[1]], annotation);\n              },\n              message: 'Flow file annotation style must be `' + annotation + '`',\n              node: potentialFlowFileAnnotation\n            });\n          }\n\n          if (!noFlowAnnotation(annotationValue) && flowStrict && !isFlowStrict(annotationValue)) {\n            const str = style === 'line' ? '`// @flow strict`' : '`/* @flow strict */`';\n            context.report({\n              fix: fixer => {\n                const annotation = ['line', 'none'].includes(style) ? '// @flow strict' : '/* @flow strict */';\n                return fixer.replaceTextRange([potentialFlowFileAnnotation.range[0], potentialFlowFileAnnotation.range[1]], annotation);\n              },\n              message: 'Strict Flow file annotation is required, must be ' + str,\n              node\n            });\n          }\n        } else if (checkAnnotationSpelling(annotationValue)) {\n          context.report({\n            message: 'Misspelled or malformed Flow file annotation.',\n            node: potentialFlowFileAnnotation\n          });\n        } else {\n          context.report({\n            message: 'Malformed Flow file annotation.',\n            node: potentialFlowFileAnnotation\n          });\n        }\n      } else if (always && !_lodash.default.get(context, 'settings.flowtype.onlyFilesWithFlowAnnotation')) {\n        context.report({\n          fix: fixer => {\n            let annotation;\n\n            if (flowStrict) {\n              annotation = ['line', 'none'].includes(style) ? '// @flow strict\\n' : '/* @flow strict */\\n';\n            } else {\n              annotation = ['line', 'none'].includes(style) ? '// @flow\\n' : '/* @flow */\\n';\n            }\n\n            const firstComment = node.comments[0];\n\n            if (firstComment && firstComment.type === 'Shebang') {\n              return fixer.replaceTextRange([firstComment.range[1], firstComment.range[1]], '\\n' + annotation.trim());\n            }\n\n            return fixer.replaceTextRange([node.range[0], node.range[0]], annotation);\n          },\n          message: 'Flow file annotation is missing.',\n          node\n        });\n      }\n    }\n\n  };\n};\n\nvar _default = {\n  create,\n  meta: {\n    fixable: 'code'\n  },\n  schema\n};\nexports.default = _default;\nmodule.exports = exports.default;","map":{"version":3,"names":["Object","defineProperty","exports","value","default","_lodash","_interopRequireDefault","require","_utilities","obj","__esModule","defaults","annotationStyle","strict","looksLikeFlowFileAnnotation","comment","test","isValidAnnotationStyle","node","style","type","toLowerCase","checkAnnotationSpelling","fuzzyStringMatch","replace","isFlowStrict","noFlowAnnotation","schema","enum","additionalProperties","properties","create","context","always","options","get","flowStrict","Program","firstToken","tokens","potentialFlowFileAnnotation","find","getSourceCode","getAllComments","range","report","message","annotationValue","trim","isFlowFileAnnotation","annotation","fix","fixer","replaceTextRange","str","includes","firstComment","comments","_default","meta","fixable","module"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/eslint-plugin-flowtype/dist/rules/requireValidFileAnnotation.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _lodash = _interopRequireDefault(require(\"lodash\"));\n\nvar _utilities = require(\"../utilities\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst defaults = {\n  annotationStyle: 'none',\n  strict: false\n};\n\nconst looksLikeFlowFileAnnotation = comment => {\n  return /@(?:no)?flo/ui.test(comment);\n};\n\nconst isValidAnnotationStyle = (node, style) => {\n  if (style === 'none') {\n    return true;\n  }\n\n  return style === node.type.toLowerCase();\n};\n\nconst checkAnnotationSpelling = comment => {\n  return /@[a-z]+\\b/u.test(comment) && (0, _utilities.fuzzyStringMatch)(comment.replace(/no/ui, ''), '@flow', 0.2);\n};\n\nconst isFlowStrict = comment => {\n  return /^@flow\\sstrict\\b/u.test(comment);\n};\n\nconst noFlowAnnotation = comment => {\n  return /^@noflow\\b/u.test(comment);\n};\n\nconst schema = [{\n  enum: ['always', 'never'],\n  type: 'string'\n}, {\n  additionalProperties: false,\n  properties: {\n    annotationStyle: {\n      enum: ['none', 'line', 'block'],\n      type: 'string'\n    },\n    strict: {\n      enum: [true, false],\n      type: 'boolean'\n    }\n  },\n  type: 'object'\n}];\n\nconst create = context => {\n  const always = context.options[0] === 'always';\n\n  const style = _lodash.default.get(context, 'options[1].annotationStyle', defaults.annotationStyle);\n\n  const flowStrict = _lodash.default.get(context, 'options[1].strict', defaults.strict);\n\n  return {\n    Program(node) {\n      const firstToken = node.tokens[0];\n\n      const potentialFlowFileAnnotation = _lodash.default.find(context.getSourceCode().getAllComments(), comment => {\n        return looksLikeFlowFileAnnotation(comment.value);\n      });\n\n      if (potentialFlowFileAnnotation) {\n        if (firstToken && firstToken.range[0] < potentialFlowFileAnnotation.range[0]) {\n          context.report({\n            message: 'Flow file annotation not at the top of the file.',\n            node: potentialFlowFileAnnotation\n          });\n        }\n\n        const annotationValue = potentialFlowFileAnnotation.value.trim();\n\n        if ((0, _utilities.isFlowFileAnnotation)(annotationValue)) {\n          if (!isValidAnnotationStyle(potentialFlowFileAnnotation, style)) {\n            const annotation = style === 'line' ? '// ' + annotationValue : '/* ' + annotationValue + ' */';\n            context.report({\n              fix: fixer => {\n                return fixer.replaceTextRange([potentialFlowFileAnnotation.range[0], potentialFlowFileAnnotation.range[1]], annotation);\n              },\n              message: 'Flow file annotation style must be `' + annotation + '`',\n              node: potentialFlowFileAnnotation\n            });\n          }\n\n          if (!noFlowAnnotation(annotationValue) && flowStrict && !isFlowStrict(annotationValue)) {\n            const str = style === 'line' ? '`// @flow strict`' : '`/* @flow strict */`';\n            context.report({\n              fix: fixer => {\n                const annotation = ['line', 'none'].includes(style) ? '// @flow strict' : '/* @flow strict */';\n                return fixer.replaceTextRange([potentialFlowFileAnnotation.range[0], potentialFlowFileAnnotation.range[1]], annotation);\n              },\n              message: 'Strict Flow file annotation is required, must be ' + str,\n              node\n            });\n          }\n        } else if (checkAnnotationSpelling(annotationValue)) {\n          context.report({\n            message: 'Misspelled or malformed Flow file annotation.',\n            node: potentialFlowFileAnnotation\n          });\n        } else {\n          context.report({\n            message: 'Malformed Flow file annotation.',\n            node: potentialFlowFileAnnotation\n          });\n        }\n      } else if (always && !_lodash.default.get(context, 'settings.flowtype.onlyFilesWithFlowAnnotation')) {\n        context.report({\n          fix: fixer => {\n            let annotation;\n\n            if (flowStrict) {\n              annotation = ['line', 'none'].includes(style) ? '// @flow strict\\n' : '/* @flow strict */\\n';\n            } else {\n              annotation = ['line', 'none'].includes(style) ? '// @flow\\n' : '/* @flow */\\n';\n            }\n\n            const firstComment = node.comments[0];\n\n            if (firstComment && firstComment.type === 'Shebang') {\n              return fixer.replaceTextRange([firstComment.range[1], firstComment.range[1]], '\\n' + annotation.trim());\n            }\n\n            return fixer.replaceTextRange([node.range[0], node.range[0]], annotation);\n          },\n          message: 'Flow file annotation is missing.',\n          node\n        });\n      }\n    }\n\n  };\n};\n\nvar _default = {\n  create,\n  meta: {\n    fixable: 'code'\n  },\n  schema\n};\nexports.default = _default;\nmodule.exports = exports.default;"],"mappings":"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"},"metadata":{},"sourceType":"script"}