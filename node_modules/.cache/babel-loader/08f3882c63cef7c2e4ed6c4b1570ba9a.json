{"ast":null,"code":"'use strict';\n\nrequire('../auto');\n\nvar test = require('tape');\n\nvar defineProperties = require('define-properties');\n\nvar callBind = require('call-bind');\n\nvar isEnumerable = Object.prototype.propertyIsEnumerable;\n\nvar functionsHaveNames = require('functions-have-names')();\n\nvar functionsHaveConfigurableNames = require('functions-have-names').functionsHaveConfigurableNames();\n\nvar hasStrictMode = require('has-strict-mode')();\n\nvar runTests = require('./tests');\n\ntest('shimmed', function (t) {\n  var descriptor = Object.getOwnPropertyDescriptor(RegExp.prototype, 'flags');\n  t.equal(descriptor.get.length, 0, 'RegExp#flags getter has a length of 0');\n  t.test('Function name', {\n    skip: !functionsHaveNames\n  }, function (st) {\n    st.equal(descriptor.get.name, functionsHaveConfigurableNames ? 'get flags' : 'flags', 'RegExp#flags getter has name \"get flags\" (or \"flags\" if function names are not configurable)');\n    st.end();\n  });\n  t.test('enumerability', {\n    skip: !defineProperties.supportsDescriptors\n  }, function (et) {\n    et.equal(false, isEnumerable.call(RegExp.prototype, 'flags'), 'RegExp#flags is not enumerable');\n    et.end();\n  });\n  t.test('bad array/this value', {\n    skip: !hasStrictMode\n  }, function (st) {\n    st['throws'](function () {\n      return descriptor.get.call(undefined);\n    }, TypeError, 'undefined is not an object');\n    st['throws'](function () {\n      return descriptor.get.call(null);\n    }, TypeError, 'null is not an object');\n    st.end();\n  });\n  t.test('has the correct descriptor', function (st) {\n    st.equal(descriptor.configurable, true);\n    st.equal(descriptor.enumerable, false);\n    st.equal(typeof descriptor.get, 'function');\n    st.equal(descriptor.set, undefined);\n    st.end();\n  });\n  runTests(callBind(descriptor.get), t);\n  t.end();\n});","map":{"version":3,"names":["require","test","defineProperties","callBind","isEnumerable","Object","prototype","propertyIsEnumerable","functionsHaveNames","functionsHaveConfigurableNames","hasStrictMode","runTests","t","descriptor","getOwnPropertyDescriptor","RegExp","equal","get","length","skip","st","name","end","supportsDescriptors","et","call","undefined","TypeError","configurable","enumerable","set"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/regexp.prototype.flags/test/shimmed.js"],"sourcesContent":["'use strict';\n\nrequire('../auto');\n\nvar test = require('tape');\nvar defineProperties = require('define-properties');\nvar callBind = require('call-bind');\n\nvar isEnumerable = Object.prototype.propertyIsEnumerable;\nvar functionsHaveNames = require('functions-have-names')();\nvar functionsHaveConfigurableNames = require('functions-have-names').functionsHaveConfigurableNames();\nvar hasStrictMode = require('has-strict-mode')();\n\nvar runTests = require('./tests');\n\ntest('shimmed', function (t) {\n\tvar descriptor = Object.getOwnPropertyDescriptor(RegExp.prototype, 'flags');\n\n\tt.equal(descriptor.get.length, 0, 'RegExp#flags getter has a length of 0');\n\n\tt.test('Function name', { skip: !functionsHaveNames }, function (st) {\n\t\tst.equal(descriptor.get.name, functionsHaveConfigurableNames ? 'get flags' : 'flags', 'RegExp#flags getter has name \"get flags\" (or \"flags\" if function names are not configurable)');\n\t\tst.end();\n\t});\n\n\tt.test('enumerability', { skip: !defineProperties.supportsDescriptors }, function (et) {\n\t\tet.equal(false, isEnumerable.call(RegExp.prototype, 'flags'), 'RegExp#flags is not enumerable');\n\t\tet.end();\n\t});\n\n\tt.test('bad array/this value', { skip: !hasStrictMode }, function (st) {\n\t\tst['throws'](function () { return descriptor.get.call(undefined); }, TypeError, 'undefined is not an object');\n\t\tst['throws'](function () { return descriptor.get.call(null); }, TypeError, 'null is not an object');\n\t\tst.end();\n\t});\n\n\tt.test('has the correct descriptor', function (st) {\n\t\tst.equal(descriptor.configurable, true);\n\t\tst.equal(descriptor.enumerable, false);\n\t\tst.equal(typeof descriptor.get, 'function');\n\t\tst.equal(descriptor.set, undefined);\n\t\tst.end();\n\t});\n\n\trunTests(callBind(descriptor.get), t);\n\n\tt.end();\n});\n"],"mappings":"AAAA;;AAEAA,OAAO,CAAC,SAAD,CAAP;;AAEA,IAAIC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAAlB;;AACA,IAAIE,gBAAgB,GAAGF,OAAO,CAAC,mBAAD,CAA9B;;AACA,IAAIG,QAAQ,GAAGH,OAAO,CAAC,WAAD,CAAtB;;AAEA,IAAII,YAAY,GAAGC,MAAM,CAACC,SAAP,CAAiBC,oBAApC;;AACA,IAAIC,kBAAkB,GAAGR,OAAO,CAAC,sBAAD,CAAP,EAAzB;;AACA,IAAIS,8BAA8B,GAAGT,OAAO,CAAC,sBAAD,CAAP,CAAgCS,8BAAhC,EAArC;;AACA,IAAIC,aAAa,GAAGV,OAAO,CAAC,iBAAD,CAAP,EAApB;;AAEA,IAAIW,QAAQ,GAAGX,OAAO,CAAC,SAAD,CAAtB;;AAEAC,IAAI,CAAC,SAAD,EAAY,UAAUW,CAAV,EAAa;EAC5B,IAAIC,UAAU,GAAGR,MAAM,CAACS,wBAAP,CAAgCC,MAAM,CAACT,SAAvC,EAAkD,OAAlD,CAAjB;EAEAM,CAAC,CAACI,KAAF,CAAQH,UAAU,CAACI,GAAX,CAAeC,MAAvB,EAA+B,CAA/B,EAAkC,uCAAlC;EAEAN,CAAC,CAACX,IAAF,CAAO,eAAP,EAAwB;IAAEkB,IAAI,EAAE,CAACX;EAAT,CAAxB,EAAuD,UAAUY,EAAV,EAAc;IACpEA,EAAE,CAACJ,KAAH,CAASH,UAAU,CAACI,GAAX,CAAeI,IAAxB,EAA8BZ,8BAA8B,GAAG,WAAH,GAAiB,OAA7E,EAAsF,8FAAtF;IACAW,EAAE,CAACE,GAAH;EACA,CAHD;EAKAV,CAAC,CAACX,IAAF,CAAO,eAAP,EAAwB;IAAEkB,IAAI,EAAE,CAACjB,gBAAgB,CAACqB;EAA1B,CAAxB,EAAyE,UAAUC,EAAV,EAAc;IACtFA,EAAE,CAACR,KAAH,CAAS,KAAT,EAAgBZ,YAAY,CAACqB,IAAb,CAAkBV,MAAM,CAACT,SAAzB,EAAoC,OAApC,CAAhB,EAA8D,gCAA9D;IACAkB,EAAE,CAACF,GAAH;EACA,CAHD;EAKAV,CAAC,CAACX,IAAF,CAAO,sBAAP,EAA+B;IAAEkB,IAAI,EAAE,CAACT;EAAT,CAA/B,EAAyD,UAAUU,EAAV,EAAc;IACtEA,EAAE,CAAC,QAAD,CAAF,CAAa,YAAY;MAAE,OAAOP,UAAU,CAACI,GAAX,CAAeQ,IAAf,CAAoBC,SAApB,CAAP;IAAwC,CAAnE,EAAqEC,SAArE,EAAgF,4BAAhF;IACAP,EAAE,CAAC,QAAD,CAAF,CAAa,YAAY;MAAE,OAAOP,UAAU,CAACI,GAAX,CAAeQ,IAAf,CAAoB,IAApB,CAAP;IAAmC,CAA9D,EAAgEE,SAAhE,EAA2E,uBAA3E;IACAP,EAAE,CAACE,GAAH;EACA,CAJD;EAMAV,CAAC,CAACX,IAAF,CAAO,4BAAP,EAAqC,UAAUmB,EAAV,EAAc;IAClDA,EAAE,CAACJ,KAAH,CAASH,UAAU,CAACe,YAApB,EAAkC,IAAlC;IACAR,EAAE,CAACJ,KAAH,CAASH,UAAU,CAACgB,UAApB,EAAgC,KAAhC;IACAT,EAAE,CAACJ,KAAH,CAAS,OAAOH,UAAU,CAACI,GAA3B,EAAgC,UAAhC;IACAG,EAAE,CAACJ,KAAH,CAASH,UAAU,CAACiB,GAApB,EAAyBJ,SAAzB;IACAN,EAAE,CAACE,GAAH;EACA,CAND;EAQAX,QAAQ,CAACR,QAAQ,CAACU,UAAU,CAACI,GAAZ,CAAT,EAA2BL,CAA3B,CAAR;EAEAA,CAAC,CAACU,GAAF;AACA,CAhCG,CAAJ"},"metadata":{},"sourceType":"script"}