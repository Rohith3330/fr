{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nvar _a;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst util = __importStar(require(\"../util\"));\n\nconst getESLintCoreRule_1 = require(\"../util/getESLintCoreRule\");\n\nconst baseRule = (0, getESLintCoreRule_1.maybeGetESLintCoreRule)('no-loss-of-precision');\nexports.default = util.createRule({\n  name: 'no-loss-of-precision',\n  meta: {\n    type: 'problem',\n    docs: {\n      description: 'Disallow literal numbers that lose precision',\n      recommended: 'error',\n      extendsBaseRule: true\n    },\n    hasSuggestions: baseRule === null || baseRule === void 0 ? void 0 : baseRule.meta.hasSuggestions,\n    schema: [],\n    messages: (_a = baseRule === null || baseRule === void 0 ? void 0 : baseRule.meta.messages) !== null && _a !== void 0 ? _a : {\n      noLossOfPrecision: ''\n    }\n  },\n  defaultOptions: [],\n\n  create(context) {\n    /* istanbul ignore if */\n    if (baseRule === null) {\n      throw new Error('@typescript-eslint/no-loss-of-precision requires at least ESLint v7.1.0');\n    } // eslint-disable-next-line @typescript-eslint/no-unnecessary-type-assertion\n\n\n    const rules = baseRule.create(context);\n\n    function isSeparatedNumeric(node) {\n      return typeof node.value === 'number' && node.raw.includes('_');\n    }\n\n    return {\n      Literal(node) {\n        rules.Literal(Object.assign(Object.assign({}, node), {\n          raw: isSeparatedNumeric(node) ? node.raw.replace(/_/g, '') : node.raw\n        }));\n      }\n\n    };\n  }\n\n});","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;;AACA;;AAEA,MAAMA,QAAQ,GAAG,gDAAuB,sBAAvB,CAAjB;AAOAC,kBAAeC,IAAI,CAACC,UAAL,CAAqC;EAClDC,IAAI,EAAE,sBAD4C;EAElDC,IAAI,EAAE;IACJC,IAAI,EAAE,SADF;IAEJC,IAAI,EAAE;MACJC,WAAW,EAAE,8CADT;MAEJC,WAAW,EAAE,OAFT;MAGJC,eAAe,EAAE;IAHb,CAFF;IAOJC,cAAc,EAAEX,QAAQ,SAAR,YAAQ,WAAR,GAAQ,MAAR,WAAQ,CAAEK,IAAV,CAAeM,cAP3B;IAQJC,MAAM,EAAE,EARJ;IASJC,QAAQ,EAAE,cAAQ,SAAR,YAAQ,WAAR,GAAQ,MAAR,WAAQ,CAAER,IAAV,CAAeQ,QAAf,MAAuB,IAAvB,IAAuBC,aAAvB,GAAuBA,EAAvB,GAA2B;MAAEC,iBAAiB,EAAE;IAArB;EATjC,CAF4C;EAalDC,cAAc,EAAE,EAbkC;;EAclDC,MAAM,CAACC,OAAD,EAAQ;IACZ;IAAyB,IAAIlB,QAAQ,KAAK,IAAjB,EAAuB;MAC9C,MAAM,IAAImB,KAAJ,CACJ,yEADI,CAAN;IAGD,CALW,CAOZ;;;IACA,MAAMC,KAAK,GAAGpB,QAAS,CAACiB,MAAV,CAAiBC,OAAjB,CAAd;;IAEA,SAASG,kBAAT,CAA4BC,IAA5B,EAAkD;MAChD,OAAO,OAAOA,IAAI,CAACC,KAAZ,KAAsB,QAAtB,IAAkCD,IAAI,CAACE,GAAL,CAASC,QAAT,CAAkB,GAAlB,CAAzC;IACD;;IACD,OAAO;MACLC,OAAO,CAACJ,IAAD,EAAuB;QAC5BF,KAAK,CAACM,OAAN,CAAcC,gCACTL,IADS,GACL;UACPE,GAAG,EAAEH,kBAAkB,CAACC,IAAD,CAAlB,GAA2BA,IAAI,CAACE,GAAL,CAASI,OAAT,CAAiB,IAAjB,EAAuB,EAAvB,CAA3B,GAAwDN,IAAI,CAACE;QAD3D,CADK,CAAd;MAID;;IANI,CAAP;EAQD;;AAnCiD,CAArC,CAAf","names":["baseRule","exports","util","createRule","name","meta","type","docs","description","recommended","extendsBaseRule","hasSuggestions","schema","messages","_a","noLossOfPrecision","defaultOptions","create","context","Error","rules","isSeparatedNumeric","node","value","raw","includes","Literal","Object","replace"],"sources":["../../src/rules/no-loss-of-precision.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}