{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _lodash = _interopRequireDefault(require(\"lodash\"));\n\nvar _typeColonSpacing = _interopRequireDefault(require(\"./typeColonSpacing\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nconst schema = [{\n  enum: ['always', 'never'],\n  type: 'string'\n}, {\n  additionalProperties: false,\n  properties: {\n    allowLineBreak: {\n      type: 'boolean'\n    }\n  },\n  type: 'object'\n}];\n\nconst create = context => {\n  return (0, _typeColonSpacing.default)('after', context, {\n    allowLineBreak: _lodash.default.get(context, ['options', '1', 'allowLineBreak'], false),\n    always: _lodash.default.get(context, ['options', '0'], 'always') === 'always'\n  });\n};\n\nvar _default = {\n  create,\n  meta: {\n    fixable: 'code'\n  },\n  schema\n};\nexports.default = _default;\nmodule.exports = exports.default;","map":{"version":3,"names":["Object","defineProperty","exports","value","default","_lodash","_interopRequireDefault","require","_typeColonSpacing","obj","__esModule","schema","enum","type","additionalProperties","properties","allowLineBreak","create","context","get","always","_default","meta","fixable","module"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/eslint-plugin-flowtype/dist/rules/spaceAfterTypeColon.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _lodash = _interopRequireDefault(require(\"lodash\"));\n\nvar _typeColonSpacing = _interopRequireDefault(require(\"./typeColonSpacing\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst schema = [{\n  enum: ['always', 'never'],\n  type: 'string'\n}, {\n  additionalProperties: false,\n  properties: {\n    allowLineBreak: {\n      type: 'boolean'\n    }\n  },\n  type: 'object'\n}];\n\nconst create = context => {\n  return (0, _typeColonSpacing.default)('after', context, {\n    allowLineBreak: _lodash.default.get(context, ['options', '1', 'allowLineBreak'], false),\n    always: _lodash.default.get(context, ['options', '0'], 'always') === 'always'\n  });\n};\n\nvar _default = {\n  create,\n  meta: {\n    fixable: 'code'\n  },\n  schema\n};\nexports.default = _default;\nmodule.exports = exports.default;"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAC3CC,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAIC,OAAO,GAAGC,sBAAsB,CAACC,OAAO,CAAC,QAAD,CAAR,CAApC;;AAEA,IAAIC,iBAAiB,GAAGF,sBAAsB,CAACC,OAAO,CAAC,oBAAD,CAAR,CAA9C;;AAEA,SAASD,sBAAT,CAAgCG,GAAhC,EAAqC;EAAE,OAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;IAAEL,OAAO,EAAEK;EAAX,CAArC;AAAwD;;AAE/F,MAAME,MAAM,GAAG,CAAC;EACdC,IAAI,EAAE,CAAC,QAAD,EAAW,OAAX,CADQ;EAEdC,IAAI,EAAE;AAFQ,CAAD,EAGZ;EACDC,oBAAoB,EAAE,KADrB;EAEDC,UAAU,EAAE;IACVC,cAAc,EAAE;MACdH,IAAI,EAAE;IADQ;EADN,CAFX;EAODA,IAAI,EAAE;AAPL,CAHY,CAAf;;AAaA,MAAMI,MAAM,GAAGC,OAAO,IAAI;EACxB,OAAO,CAAC,GAAGV,iBAAiB,CAACJ,OAAtB,EAA+B,OAA/B,EAAwCc,OAAxC,EAAiD;IACtDF,cAAc,EAAEX,OAAO,CAACD,OAAR,CAAgBe,GAAhB,CAAoBD,OAApB,EAA6B,CAAC,SAAD,EAAY,GAAZ,EAAiB,gBAAjB,CAA7B,EAAiE,KAAjE,CADsC;IAEtDE,MAAM,EAAEf,OAAO,CAACD,OAAR,CAAgBe,GAAhB,CAAoBD,OAApB,EAA6B,CAAC,SAAD,EAAY,GAAZ,CAA7B,EAA+C,QAA/C,MAA6D;EAFf,CAAjD,CAAP;AAID,CALD;;AAOA,IAAIG,QAAQ,GAAG;EACbJ,MADa;EAEbK,IAAI,EAAE;IACJC,OAAO,EAAE;EADL,CAFO;EAKbZ;AALa,CAAf;AAOAT,OAAO,CAACE,OAAR,GAAkBiB,QAAlB;AACAG,MAAM,CAACtB,OAAP,GAAiBA,OAAO,CAACE,OAAzB"},"metadata":{},"sourceType":"script"}