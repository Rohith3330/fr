{"ast":null,"code":"\"use strict\";\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\n\nexports.__esModule = true;\nexports.hasAnyConcreteRoles = hasAnyConcreteRoles;\nexports.isElement = isElement;\nexports.isHTMLFieldSetElement = isHTMLFieldSetElement;\nexports.isHTMLInputElement = isHTMLInputElement;\nexports.isHTMLLegendElement = isHTMLLegendElement;\nexports.isHTMLOptGroupElement = isHTMLOptGroupElement;\nexports.isHTMLSelectElement = isHTMLSelectElement;\nexports.isHTMLSlotElement = isHTMLSlotElement;\nexports.isHTMLTableCaptionElement = isHTMLTableCaptionElement;\nexports.isHTMLTableElement = isHTMLTableElement;\nexports.isHTMLTextAreaElement = isHTMLTextAreaElement;\nexports.isSVGElement = isSVGElement;\nexports.isSVGSVGElement = isSVGSVGElement;\nexports.isSVGTitleElement = isSVGTitleElement;\nexports.queryIdRefs = queryIdRefs;\nexports.safeWindow = safeWindow;\n\nvar _getRole = _interopRequireWildcard(require(\"./getRole\"));\n\nexports.getLocalName = _getRole.getLocalName;\n\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\n\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache(nodeInterop);\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction isElement(node) {\n  return node !== null && node.nodeType === node.ELEMENT_NODE;\n}\n\nfunction isHTMLTableCaptionElement(node) {\n  return isElement(node) && (0, _getRole.getLocalName)(node) === \"caption\";\n}\n\nfunction isHTMLInputElement(node) {\n  return isElement(node) && (0, _getRole.getLocalName)(node) === \"input\";\n}\n\nfunction isHTMLOptGroupElement(node) {\n  return isElement(node) && (0, _getRole.getLocalName)(node) === \"optgroup\";\n}\n\nfunction isHTMLSelectElement(node) {\n  return isElement(node) && (0, _getRole.getLocalName)(node) === \"select\";\n}\n\nfunction isHTMLTableElement(node) {\n  return isElement(node) && (0, _getRole.getLocalName)(node) === \"table\";\n}\n\nfunction isHTMLTextAreaElement(node) {\n  return isElement(node) && (0, _getRole.getLocalName)(node) === \"textarea\";\n}\n\nfunction safeWindow(node) {\n  var _ref = node.ownerDocument === null ? node : node.ownerDocument,\n      defaultView = _ref.defaultView;\n\n  if (defaultView === null) {\n    throw new TypeError(\"no window available\");\n  }\n\n  return defaultView;\n}\n\nfunction isHTMLFieldSetElement(node) {\n  return isElement(node) && (0, _getRole.getLocalName)(node) === \"fieldset\";\n}\n\nfunction isHTMLLegendElement(node) {\n  return isElement(node) && (0, _getRole.getLocalName)(node) === \"legend\";\n}\n\nfunction isHTMLSlotElement(node) {\n  return isElement(node) && (0, _getRole.getLocalName)(node) === \"slot\";\n}\n\nfunction isSVGElement(node) {\n  return isElement(node) && node.ownerSVGElement !== undefined;\n}\n\nfunction isSVGSVGElement(node) {\n  return isElement(node) && (0, _getRole.getLocalName)(node) === \"svg\";\n}\n\nfunction isSVGTitleElement(node) {\n  return isSVGElement(node) && (0, _getRole.getLocalName)(node) === \"title\";\n}\n/**\n *\n * @param {Node} node -\n * @param {string} attributeName -\n * @returns {Element[]} -\n */\n\n\nfunction queryIdRefs(node, attributeName) {\n  if (isElement(node) && node.hasAttribute(attributeName)) {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion -- safe due to hasAttribute check\n    var ids = node.getAttribute(attributeName).split(\" \"); // Browsers that don't support shadow DOM won't have getRootNode\n\n    var root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    return ids.map(function (id) {\n      return root.getElementById(id);\n    }).filter(function (element) {\n      return element !== null;\n    } // TODO: why does this not narrow?\n    );\n  }\n\n  return [];\n}\n\nfunction hasAnyConcreteRoles(node, roles) {\n  if (isElement(node)) {\n    return roles.indexOf((0, _getRole.default)(node)) !== -1;\n  }\n\n  return false;\n}","map":{"version":3,"mappings":"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","names":["isElement","node","nodeType","ELEMENT_NODE","isHTMLTableCaptionElement","isHTMLInputElement","isHTMLOptGroupElement","isHTMLSelectElement","isHTMLTableElement","isHTMLTextAreaElement","safeWindow","ownerDocument","defaultView","TypeError","isHTMLFieldSetElement","isHTMLLegendElement","isHTMLSlotElement","isSVGElement","ownerSVGElement","undefined","isSVGSVGElement","isSVGTitleElement","queryIdRefs","attributeName","hasAttribute","ids","getAttribute","split","root","getRootNode","map","id","getElementById","filter","element","hasAnyConcreteRoles","roles","indexOf"],"sources":["C:\\Users\\Rohith\\mern\\frontend\\node_modules\\dom-accessibility-api\\sources\\util.ts"],"sourcesContent":["export { getLocalName } from \"./getRole\";\nimport getRole, { getLocalName } from \"./getRole\";\n\nexport function isElement(node: Node | null): node is Element {\n\treturn node !== null && node.nodeType === node.ELEMENT_NODE;\n}\n\nexport function isHTMLTableCaptionElement(\n\tnode: Node | null\n): node is HTMLTableCaptionElement {\n\treturn isElement(node) && getLocalName(node) === \"caption\";\n}\n\nexport function isHTMLInputElement(\n\tnode: Node | null\n): node is HTMLInputElement {\n\treturn isElement(node) && getLocalName(node) === \"input\";\n}\n\nexport function isHTMLOptGroupElement(\n\tnode: Node | null\n): node is HTMLOptGroupElement {\n\treturn isElement(node) && getLocalName(node) === \"optgroup\";\n}\n\nexport function isHTMLSelectElement(\n\tnode: Node | null\n): node is HTMLSelectElement {\n\treturn isElement(node) && getLocalName(node) === \"select\";\n}\n\nexport function isHTMLTableElement(\n\tnode: Node | null\n): node is HTMLTableElement {\n\treturn isElement(node) && getLocalName(node) === \"table\";\n}\n\nexport function isHTMLTextAreaElement(\n\tnode: Node | null\n): node is HTMLTextAreaElement {\n\treturn isElement(node) && getLocalName(node) === \"textarea\";\n}\n\nexport function safeWindow(node: Node): Window {\n\tconst { defaultView } =\n\t\tnode.ownerDocument === null ? (node as Document) : node.ownerDocument;\n\n\tif (defaultView === null) {\n\t\tthrow new TypeError(\"no window available\");\n\t}\n\treturn defaultView;\n}\n\nexport function isHTMLFieldSetElement(\n\tnode: Node | null\n): node is HTMLFieldSetElement {\n\treturn isElement(node) && getLocalName(node) === \"fieldset\";\n}\n\nexport function isHTMLLegendElement(\n\tnode: Node | null\n): node is HTMLLegendElement {\n\treturn isElement(node) && getLocalName(node) === \"legend\";\n}\n\nexport function isHTMLSlotElement(node: Node | null): node is HTMLSlotElement {\n\treturn isElement(node) && getLocalName(node) === \"slot\";\n}\n\nexport function isSVGElement(node: Node | null): node is SVGElement {\n\treturn isElement(node) && (node as SVGElement).ownerSVGElement !== undefined;\n}\n\nexport function isSVGSVGElement(node: Node | null): node is SVGSVGElement {\n\treturn isElement(node) && getLocalName(node) === \"svg\";\n}\n\nexport function isSVGTitleElement(node: Node | null): node is SVGTitleElement {\n\treturn isSVGElement(node) && getLocalName(node) === \"title\";\n}\n\n/**\n *\n * @param {Node} node -\n * @param {string} attributeName -\n * @returns {Element[]} -\n */\nexport function queryIdRefs(node: Node, attributeName: string): Element[] {\n\tif (isElement(node) && node.hasAttribute(attributeName)) {\n\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion -- safe due to hasAttribute check\n\t\tconst ids = node.getAttribute(attributeName)!.split(\" \");\n\n\t\t// Browsers that don't support shadow DOM won't have getRootNode\n\t\tconst root = node.getRootNode\n\t\t\t? (node.getRootNode() as Document | ShadowRoot)\n\t\t\t: node.ownerDocument;\n\n\t\treturn ids\n\t\t\t.map((id) => root.getElementById(id))\n\t\t\t.filter(\n\t\t\t\t(element: Element | null): element is Element => element !== null\n\t\t\t\t// TODO: why does this not narrow?\n\t\t\t) as Element[];\n\t}\n\n\treturn [];\n}\n\nexport function hasAnyConcreteRoles(\n\tnode: Node,\n\troles: Array<string | null>\n): node is Element {\n\tif (isElement(node)) {\n\t\treturn roles.indexOf(getRole(node)) !== -1;\n\t}\n\treturn false;\n}\n"]},"metadata":{},"sourceType":"script"}