{"ast":null,"code":"var parse = require('../');\n\nvar test = require('tape');\n\ntest('parse args', function (t) {\n  t.deepEqual(parse(['--no-moo']), {\n    moo: false,\n    _: []\n  }, 'no');\n  t.deepEqual(parse(['-v', 'a', '-v', 'b', '-v', 'c']), {\n    v: ['a', 'b', 'c'],\n    _: []\n  }, 'multi');\n  t.end();\n});\ntest('comprehensive', function (t) {\n  t.deepEqual(parse(['--name=meowmers', 'bare', '-cats', 'woo', '-h', 'awesome', '--multi=quux', '--key', 'value', '-b', '--bool', '--no-meep', '--multi=baz', '--', '--not-a-flag', 'eek']), {\n    c: true,\n    a: true,\n    t: true,\n    s: 'woo',\n    h: 'awesome',\n    b: true,\n    bool: true,\n    key: 'value',\n    multi: ['quux', 'baz'],\n    meep: false,\n    name: 'meowmers',\n    _: ['bare', '--not-a-flag', 'eek']\n  });\n  t.end();\n});\ntest('flag boolean', function (t) {\n  var argv = parse(['-t', 'moo'], {\n    boolean: 't'\n  });\n  t.deepEqual(argv, {\n    t: true,\n    _: ['moo']\n  });\n  t.deepEqual(typeof argv.t, 'boolean');\n  t.end();\n});\ntest('flag boolean value', function (t) {\n  var argv = parse(['--verbose', 'false', 'moo', '-t', 'true'], {\n    boolean: ['t', 'verbose'],\n    default: {\n      verbose: true\n    }\n  });\n  t.deepEqual(argv, {\n    verbose: false,\n    t: true,\n    _: ['moo']\n  });\n  t.deepEqual(typeof argv.verbose, 'boolean');\n  t.deepEqual(typeof argv.t, 'boolean');\n  t.end();\n});\ntest('newlines in params', function (t) {\n  var args = parse(['-s', \"X\\nX\"]);\n  t.deepEqual(args, {\n    _: [],\n    s: \"X\\nX\"\n  }); // reproduce in bash:\n  // VALUE=\"new\n  // line\"\n  // node program.js --s=\"$VALUE\"\n\n  args = parse([\"--s=X\\nX\"]);\n  t.deepEqual(args, {\n    _: [],\n    s: \"X\\nX\"\n  });\n  t.end();\n});\ntest('strings', function (t) {\n  var s = parse(['-s', '0001234'], {\n    string: 's'\n  }).s;\n  t.equal(s, '0001234');\n  t.equal(typeof s, 'string');\n  var x = parse(['-x', '56'], {\n    string: 'x'\n  }).x;\n  t.equal(x, '56');\n  t.equal(typeof x, 'string');\n  t.end();\n});\ntest('stringArgs', function (t) {\n  var s = parse(['  ', '  '], {\n    string: '_'\n  })._;\n\n  t.same(s.length, 2);\n  t.same(typeof s[0], 'string');\n  t.same(s[0], '  ');\n  t.same(typeof s[1], 'string');\n  t.same(s[1], '  ');\n  t.end();\n});\ntest('empty strings', function (t) {\n  var s = parse(['-s'], {\n    string: 's'\n  }).s;\n  t.equal(s, '');\n  t.equal(typeof s, 'string');\n  var str = parse(['--str'], {\n    string: 'str'\n  }).str;\n  t.equal(str, '');\n  t.equal(typeof str, 'string');\n  var letters = parse(['-art'], {\n    string: ['a', 't']\n  });\n  t.equal(letters.a, '');\n  t.equal(letters.r, true);\n  t.equal(letters.t, '');\n  t.end();\n});\ntest('string and alias', function (t) {\n  var x = parse(['--str', '000123'], {\n    string: 's',\n    alias: {\n      s: 'str'\n    }\n  });\n  t.equal(x.str, '000123');\n  t.equal(typeof x.str, 'string');\n  t.equal(x.s, '000123');\n  t.equal(typeof x.s, 'string');\n  var y = parse(['-s', '000123'], {\n    string: 'str',\n    alias: {\n      str: 's'\n    }\n  });\n  t.equal(y.str, '000123');\n  t.equal(typeof y.str, 'string');\n  t.equal(y.s, '000123');\n  t.equal(typeof y.s, 'string');\n  t.end();\n});\ntest('slashBreak', function (t) {\n  t.same(parse(['-I/foo/bar/baz']), {\n    I: '/foo/bar/baz',\n    _: []\n  });\n  t.same(parse(['-xyz/foo/bar/baz']), {\n    x: true,\n    y: true,\n    z: '/foo/bar/baz',\n    _: []\n  });\n  t.end();\n});\ntest('alias', function (t) {\n  var argv = parse(['-f', '11', '--zoom', '55'], {\n    alias: {\n      z: 'zoom'\n    }\n  });\n  t.equal(argv.zoom, 55);\n  t.equal(argv.z, argv.zoom);\n  t.equal(argv.f, 11);\n  t.end();\n});\ntest('multiAlias', function (t) {\n  var argv = parse(['-f', '11', '--zoom', '55'], {\n    alias: {\n      z: ['zm', 'zoom']\n    }\n  });\n  t.equal(argv.zoom, 55);\n  t.equal(argv.z, argv.zoom);\n  t.equal(argv.z, argv.zm);\n  t.equal(argv.f, 11);\n  t.end();\n});\ntest('nested dotted objects', function (t) {\n  var argv = parse(['--foo.bar', '3', '--foo.baz', '4', '--foo.quux.quibble', '5', '--foo.quux.o_O', '--beep.boop']);\n  t.same(argv.foo, {\n    bar: 3,\n    baz: 4,\n    quux: {\n      quibble: 5,\n      o_O: true\n    }\n  });\n  t.same(argv.beep, {\n    boop: true\n  });\n  t.end();\n});","map":{"version":3,"names":["parse","require","test","t","deepEqual","moo","_","v","end","c","a","s","h","b","bool","key","multi","meep","name","argv","boolean","default","verbose","args","string","equal","x","same","length","str","letters","r","alias","y","I","z","zoom","f","zm","foo","bar","baz","quux","quibble","o_O","beep","boop"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/minimist/test/parse.js"],"sourcesContent":["var parse = require('../');\nvar test = require('tape');\n\ntest('parse args', function (t) {\n    t.deepEqual(\n        parse([ '--no-moo' ]),\n        { moo : false, _ : [] },\n        'no'\n    );\n    t.deepEqual(\n        parse([ '-v', 'a', '-v', 'b', '-v', 'c' ]),\n        { v : ['a','b','c'], _ : [] },\n        'multi'\n    );\n    t.end();\n});\n \ntest('comprehensive', function (t) {\n    t.deepEqual(\n        parse([\n            '--name=meowmers', 'bare', '-cats', 'woo',\n            '-h', 'awesome', '--multi=quux',\n            '--key', 'value',\n            '-b', '--bool', '--no-meep', '--multi=baz',\n            '--', '--not-a-flag', 'eek'\n        ]),\n        {\n            c : true,\n            a : true,\n            t : true,\n            s : 'woo',\n            h : 'awesome',\n            b : true,\n            bool : true,\n            key : 'value',\n            multi : [ 'quux', 'baz' ],\n            meep : false,\n            name : 'meowmers',\n            _ : [ 'bare', '--not-a-flag', 'eek' ]\n        }\n    );\n    t.end();\n});\n\ntest('flag boolean', function (t) {\n    var argv = parse([ '-t', 'moo' ], { boolean: 't' });\n    t.deepEqual(argv, { t : true, _ : [ 'moo' ] });\n    t.deepEqual(typeof argv.t, 'boolean');\n    t.end();\n});\n\ntest('flag boolean value', function (t) {\n    var argv = parse(['--verbose', 'false', 'moo', '-t', 'true'], {\n        boolean: [ 't', 'verbose' ],\n        default: { verbose: true }\n    });\n    \n    t.deepEqual(argv, {\n        verbose: false,\n        t: true,\n        _: ['moo']\n    });\n    \n    t.deepEqual(typeof argv.verbose, 'boolean');\n    t.deepEqual(typeof argv.t, 'boolean');\n    t.end();\n});\n\ntest('newlines in params' , function (t) {\n    var args = parse([ '-s', \"X\\nX\" ])\n    t.deepEqual(args, { _ : [], s : \"X\\nX\" });\n    \n    // reproduce in bash:\n    // VALUE=\"new\n    // line\"\n    // node program.js --s=\"$VALUE\"\n    args = parse([ \"--s=X\\nX\" ])\n    t.deepEqual(args, { _ : [], s : \"X\\nX\" });\n    t.end();\n});\n\ntest('strings' , function (t) {\n    var s = parse([ '-s', '0001234' ], { string: 's' }).s;\n    t.equal(s, '0001234');\n    t.equal(typeof s, 'string');\n    \n    var x = parse([ '-x', '56' ], { string: 'x' }).x;\n    t.equal(x, '56');\n    t.equal(typeof x, 'string');\n    t.end();\n});\n\ntest('stringArgs', function (t) {\n    var s = parse([ '  ', '  ' ], { string: '_' })._;\n    t.same(s.length, 2);\n    t.same(typeof s[0], 'string');\n    t.same(s[0], '  ');\n    t.same(typeof s[1], 'string');\n    t.same(s[1], '  ');\n    t.end();\n});\n\ntest('empty strings', function(t) {\n    var s = parse([ '-s' ], { string: 's' }).s;\n    t.equal(s, '');\n    t.equal(typeof s, 'string');\n\n    var str = parse([ '--str' ], { string: 'str' }).str;\n    t.equal(str, '');\n    t.equal(typeof str, 'string');\n\n    var letters = parse([ '-art' ], {\n        string: [ 'a', 't' ]\n    });\n\n    t.equal(letters.a, '');\n    t.equal(letters.r, true);\n    t.equal(letters.t, '');\n\n    t.end();\n});\n\n\ntest('string and alias', function(t) {\n    var x = parse([ '--str',  '000123' ], {\n        string: 's',\n        alias: { s: 'str' }\n    });\n\n    t.equal(x.str, '000123');\n    t.equal(typeof x.str, 'string');\n    t.equal(x.s, '000123');\n    t.equal(typeof x.s, 'string');\n\n    var y = parse([ '-s',  '000123' ], {\n        string: 'str',\n        alias: { str: 's' }\n    });\n\n    t.equal(y.str, '000123');\n    t.equal(typeof y.str, 'string');\n    t.equal(y.s, '000123');\n    t.equal(typeof y.s, 'string');\n    t.end();\n});\n\ntest('slashBreak', function (t) {\n    t.same(\n        parse([ '-I/foo/bar/baz' ]),\n        { I : '/foo/bar/baz', _ : [] }\n    );\n    t.same(\n        parse([ '-xyz/foo/bar/baz' ]),\n        { x : true, y : true, z : '/foo/bar/baz', _ : [] }\n    );\n    t.end();\n});\n\ntest('alias', function (t) {\n    var argv = parse([ '-f', '11', '--zoom', '55' ], {\n        alias: { z: 'zoom' }\n    });\n    t.equal(argv.zoom, 55);\n    t.equal(argv.z, argv.zoom);\n    t.equal(argv.f, 11);\n    t.end();\n});\n\ntest('multiAlias', function (t) {\n    var argv = parse([ '-f', '11', '--zoom', '55' ], {\n        alias: { z: [ 'zm', 'zoom' ] }\n    });\n    t.equal(argv.zoom, 55);\n    t.equal(argv.z, argv.zoom);\n    t.equal(argv.z, argv.zm);\n    t.equal(argv.f, 11);\n    t.end();\n});\n\ntest('nested dotted objects', function (t) {\n    var argv = parse([\n        '--foo.bar', '3', '--foo.baz', '4',\n        '--foo.quux.quibble', '5', '--foo.quux.o_O',\n        '--beep.boop'\n    ]);\n    \n    t.same(argv.foo, {\n        bar : 3,\n        baz : 4,\n        quux : {\n            quibble : 5,\n            o_O : true\n        }\n    });\n    t.same(argv.beep, { boop : true });\n    t.end();\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}