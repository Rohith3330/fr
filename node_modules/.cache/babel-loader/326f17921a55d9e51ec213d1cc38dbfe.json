{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst utils_1 = require(\"@typescript-eslint/utils\");\n\nconst util = __importStar(require(\"../util\"));\n\nexports.default = util.createRule({\n  name: 'no-non-null-assertion',\n  meta: {\n    type: 'problem',\n    docs: {\n      description: 'Disallow non-null assertions using the `!` postfix operator',\n      recommended: 'warn'\n    },\n    hasSuggestions: true,\n    messages: {\n      noNonNull: 'Forbidden non-null assertion.',\n      suggestOptionalChain: 'Consider using the optional chain operator `?.` instead. This operator includes runtime checks, so it is safer than the compile-only non-null assertion operator.'\n    },\n    schema: []\n  },\n  defaultOptions: [],\n\n  create(context) {\n    const sourceCode = context.getSourceCode();\n    return {\n      TSNonNullExpression(node) {\n        var _a, _b;\n\n        const suggest = [];\n\n        function convertTokenToOptional(replacement) {\n          return fixer => {\n            const operator = sourceCode.getTokenAfter(node.expression, util.isNonNullAssertionPunctuator);\n\n            if (operator) {\n              return fixer.replaceText(operator, replacement);\n            }\n\n            return null;\n          };\n        }\n\n        function removeToken() {\n          return fixer => {\n            const operator = sourceCode.getTokenAfter(node.expression, util.isNonNullAssertionPunctuator);\n\n            if (operator) {\n              return fixer.remove(operator);\n            }\n\n            return null;\n          };\n        }\n\n        if (((_a = node.parent) === null || _a === void 0 ? void 0 : _a.type) === utils_1.AST_NODE_TYPES.MemberExpression && node.parent.object === node) {\n          if (!node.parent.optional) {\n            if (node.parent.computed) {\n              // it is x![y]?.z\n              suggest.push({\n                messageId: 'suggestOptionalChain',\n                fix: convertTokenToOptional('?.')\n              });\n            } else {\n              // it is x!.y?.z\n              suggest.push({\n                messageId: 'suggestOptionalChain',\n                fix: convertTokenToOptional('?')\n              });\n            }\n          } else {\n            if (node.parent.computed) {\n              // it is x!?.[y].z\n              suggest.push({\n                messageId: 'suggestOptionalChain',\n                fix: removeToken()\n              });\n            } else {\n              // it is x!?.y.z\n              suggest.push({\n                messageId: 'suggestOptionalChain',\n                fix: removeToken()\n              });\n            }\n          }\n        } else if (((_b = node.parent) === null || _b === void 0 ? void 0 : _b.type) === utils_1.AST_NODE_TYPES.CallExpression && node.parent.callee === node) {\n          if (!node.parent.optional) {\n            // it is x.y?.z!()\n            suggest.push({\n              messageId: 'suggestOptionalChain',\n              fix: convertTokenToOptional('?.')\n            });\n          } else {\n            // it is x.y.z!?.()\n            suggest.push({\n              messageId: 'suggestOptionalChain',\n              fix: removeToken()\n            });\n          }\n        }\n\n        context.report({\n          node,\n          messageId: 'noNonNull',\n          suggest\n        });\n      }\n\n    };\n  }\n\n});","map":{"version":3,"mappings":"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","names":["exports","util","createRule","name","meta","type","docs","description","recommended","hasSuggestions","messages","noNonNull","suggestOptionalChain","schema","defaultOptions","create","context","sourceCode","getSourceCode","TSNonNullExpression","node","suggest","convertTokenToOptional","replacement","fixer","operator","getTokenAfter","expression","isNonNullAssertionPunctuator","replaceText","removeToken","remove","parent","_a","utils_1","MemberExpression","object","optional","computed","push","messageId","fix","_b","CallExpression","callee","report"],"sources":["../../src/rules/no-non-null-assertion.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}