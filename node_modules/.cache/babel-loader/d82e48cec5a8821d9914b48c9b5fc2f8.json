{"ast":null,"code":"import setupTrackingContext from './lib/setupTrackingContext';\nimport processTailwindFeatures from './processTailwindFeatures';\nimport { env } from './lib/sharedState';\n\nmodule.exports = function tailwindcss(configOrPath) {\n  return {\n    postcssPlugin: 'tailwindcss',\n    plugins: [env.DEBUG && function (root) {\n      console.log('\\n');\n      console.time('JIT TOTAL');\n      return root;\n    }, function (root, result) {\n      let context = setupTrackingContext(configOrPath);\n\n      if (root.type === 'document') {\n        let roots = root.nodes.filter(node => node.type === 'root');\n\n        for (const root of roots) {\n          if (root.type === 'root') {\n            processTailwindFeatures(context)(root, result);\n          }\n        }\n\n        return;\n      }\n\n      processTailwindFeatures(context)(root, result);\n    }, env.DEBUG && function (root) {\n      console.timeEnd('JIT TOTAL');\n      console.log('\\n');\n      return root;\n    }].filter(Boolean)\n  };\n};\n\nmodule.exports.postcss = true;","map":{"version":3,"names":["setupTrackingContext","processTailwindFeatures","env","module","exports","tailwindcss","configOrPath","postcssPlugin","plugins","DEBUG","root","console","log","time","result","context","type","roots","nodes","filter","node","timeEnd","Boolean","postcss"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/tailwindcss/src/index.js"],"sourcesContent":["import setupTrackingContext from './lib/setupTrackingContext'\nimport processTailwindFeatures from './processTailwindFeatures'\nimport { env } from './lib/sharedState'\n\nmodule.exports = function tailwindcss(configOrPath) {\n  return {\n    postcssPlugin: 'tailwindcss',\n    plugins: [\n      env.DEBUG &&\n        function (root) {\n          console.log('\\n')\n          console.time('JIT TOTAL')\n          return root\n        },\n      function (root, result) {\n        let context = setupTrackingContext(configOrPath)\n\n        if (root.type === 'document') {\n          let roots = root.nodes.filter((node) => node.type === 'root')\n\n          for (const root of roots) {\n            if (root.type === 'root') {\n              processTailwindFeatures(context)(root, result)\n            }\n          }\n\n          return\n        }\n\n        processTailwindFeatures(context)(root, result)\n      },\n      env.DEBUG &&\n        function (root) {\n          console.timeEnd('JIT TOTAL')\n          console.log('\\n')\n          return root\n        },\n    ].filter(Boolean),\n  }\n}\n\nmodule.exports.postcss = true\n"],"mappings":"AAAA,OAAOA,oBAAP,MAAiC,4BAAjC;AACA,OAAOC,uBAAP,MAAoC,2BAApC;AACA,SAASC,GAAT,QAAoB,mBAApB;;AAEAC,MAAM,CAACC,OAAP,GAAiB,SAASC,WAAT,CAAqBC,YAArB,EAAmC;EAClD,OAAO;IACLC,aAAa,EAAE,aADV;IAELC,OAAO,EAAE,CACPN,GAAG,CAACO,KAAJ,IACE,UAAUC,IAAV,EAAgB;MACdC,OAAO,CAACC,GAAR,CAAY,IAAZ;MACAD,OAAO,CAACE,IAAR,CAAa,WAAb;MACA,OAAOH,IAAP;IACD,CANI,EAOP,UAAUA,IAAV,EAAgBI,MAAhB,EAAwB;MACtB,IAAIC,OAAO,GAAGf,oBAAoB,CAACM,YAAD,CAAlC;;MAEA,IAAII,IAAI,CAACM,IAAL,KAAc,UAAlB,EAA8B;QAC5B,IAAIC,KAAK,GAAGP,IAAI,CAACQ,KAAL,CAAWC,MAAX,CAAmBC,IAAD,IAAUA,IAAI,CAACJ,IAAL,KAAc,MAA1C,CAAZ;;QAEA,KAAK,MAAMN,IAAX,IAAmBO,KAAnB,EAA0B;UACxB,IAAIP,IAAI,CAACM,IAAL,KAAc,MAAlB,EAA0B;YACxBf,uBAAuB,CAACc,OAAD,CAAvB,CAAiCL,IAAjC,EAAuCI,MAAvC;UACD;QACF;;QAED;MACD;;MAEDb,uBAAuB,CAACc,OAAD,CAAvB,CAAiCL,IAAjC,EAAuCI,MAAvC;IACD,CAvBM,EAwBPZ,GAAG,CAACO,KAAJ,IACE,UAAUC,IAAV,EAAgB;MACdC,OAAO,CAACU,OAAR,CAAgB,WAAhB;MACAV,OAAO,CAACC,GAAR,CAAY,IAAZ;MACA,OAAOF,IAAP;IACD,CA7BI,EA8BPS,MA9BO,CA8BAG,OA9BA;EAFJ,CAAP;AAkCD,CAnCD;;AAqCAnB,MAAM,CAACC,OAAP,CAAemB,OAAf,GAAyB,IAAzB"},"metadata":{},"sourceType":"module"}