{"ast":null,"code":"\"use strict\";\n\nvar _fs = _interopRequireDefault(require(\"fs\"));\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nvar _utilities = require(\"./utilities\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n} // @flow\n\n\nconst getTestIndexRules = () => {\n  const content = _fs.default.readFileSync(_path.default.resolve(__dirname, '../../tests/rules/index.js'), 'utf-8'); // eslint-disable-next-line unicorn/no-array-reduce\n\n\n  const result = content.split('\\n').reduce((acc, line) => {\n    if (acc.inRulesArray) {\n      if (line === '];') {\n        acc.inRulesArray = false;\n      } else {\n        acc.rules.push(line.replace(/^\\s*'([^']+)',?$/u, '$1'));\n      }\n    } else if (line === 'const reportingRules = [') {\n      acc.inRulesArray = true;\n    }\n\n    return acc;\n  }, {\n    inRulesArray: false,\n    rules: []\n  });\n  const {\n    rules\n  } = result;\n\n  if (rules.length === 0) {\n    throw new Error('Tests checker is broken - it could not extract rules from test index file.');\n  }\n\n  return rules;\n};\n/**\n * Performed checks:\n * - file `/tests/rules/assertions/<rule>.js` exists\n * - rule is included in `reportingRules` variable in `/tests/rules/index.js`\n */\n\n\nconst checkTests = rulesNames => {\n  const testIndexRules = getTestIndexRules();\n  const invalid = rulesNames.filter(names => {\n    const testExists = (0, _utilities.isFile)(_path.default.resolve(__dirname, '../../tests/rules/assertions', names[0] + '.js'));\n    const inIndex = testIndexRules.includes(names[1]);\n    return !(testExists && inIndex);\n  });\n\n  if (invalid.length > 0) {\n    const invalidList = invalid.map(names => {\n      return names[0];\n    }).join(', ');\n    throw new Error('Tests checker encountered an error in: ' + invalidList + '. ' + 'Make sure that for every rule you created test suite and included the rule name in `tests/rules/index.js` file.');\n  }\n};\n\ncheckTests((0, _utilities.getRules)());","map":{"version":3,"names":["_fs","_interopRequireDefault","require","_path","_utilities","obj","__esModule","default","getTestIndexRules","content","readFileSync","resolve","__dirname","result","split","reduce","acc","line","inRulesArray","rules","push","replace","length","Error","checkTests","rulesNames","testIndexRules","invalid","filter","names","testExists","isFile","inIndex","includes","invalidList","map","join","getRules"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/eslint-plugin-flowtype/dist/bin/checkTests.js"],"sourcesContent":["\"use strict\";\n\nvar _fs = _interopRequireDefault(require(\"fs\"));\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nvar _utilities = require(\"./utilities\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// @flow\nconst getTestIndexRules = () => {\n  const content = _fs.default.readFileSync(_path.default.resolve(__dirname, '../../tests/rules/index.js'), 'utf-8'); // eslint-disable-next-line unicorn/no-array-reduce\n\n\n  const result = content.split('\\n').reduce((acc, line) => {\n    if (acc.inRulesArray) {\n      if (line === '];') {\n        acc.inRulesArray = false;\n      } else {\n        acc.rules.push(line.replace(/^\\s*'([^']+)',?$/u, '$1'));\n      }\n    } else if (line === 'const reportingRules = [') {\n      acc.inRulesArray = true;\n    }\n\n    return acc;\n  }, {\n    inRulesArray: false,\n    rules: []\n  });\n  const {\n    rules\n  } = result;\n\n  if (rules.length === 0) {\n    throw new Error('Tests checker is broken - it could not extract rules from test index file.');\n  }\n\n  return rules;\n};\n/**\n * Performed checks:\n * - file `/tests/rules/assertions/<rule>.js` exists\n * - rule is included in `reportingRules` variable in `/tests/rules/index.js`\n */\n\n\nconst checkTests = rulesNames => {\n  const testIndexRules = getTestIndexRules();\n  const invalid = rulesNames.filter(names => {\n    const testExists = (0, _utilities.isFile)(_path.default.resolve(__dirname, '../../tests/rules/assertions', names[0] + '.js'));\n    const inIndex = testIndexRules.includes(names[1]);\n    return !(testExists && inIndex);\n  });\n\n  if (invalid.length > 0) {\n    const invalidList = invalid.map(names => {\n      return names[0];\n    }).join(', ');\n    throw new Error('Tests checker encountered an error in: ' + invalidList + '. ' + 'Make sure that for every rule you created test suite and included the rule name in `tests/rules/index.js` file.');\n  }\n};\n\ncheckTests((0, _utilities.getRules)());"],"mappings":"AAAA;;AAEA,IAAIA,GAAG,GAAGC,sBAAsB,CAACC,OAAO,CAAC,IAAD,CAAR,CAAhC;;AAEA,IAAIC,KAAK,GAAGF,sBAAsB,CAACC,OAAO,CAAC,MAAD,CAAR,CAAlC;;AAEA,IAAIE,UAAU,GAAGF,OAAO,CAAC,aAAD,CAAxB;;AAEA,SAASD,sBAAT,CAAgCI,GAAhC,EAAqC;EAAE,OAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;IAAEE,OAAO,EAAEF;EAAX,CAArC;AAAwD,C,CAE/F;;;AACA,MAAMG,iBAAiB,GAAG,MAAM;EAC9B,MAAMC,OAAO,GAAGT,GAAG,CAACO,OAAJ,CAAYG,YAAZ,CAAyBP,KAAK,CAACI,OAAN,CAAcI,OAAd,CAAsBC,SAAtB,EAAiC,4BAAjC,CAAzB,EAAyF,OAAzF,CAAhB,CAD8B,CACqF;;;EAGnH,MAAMC,MAAM,GAAGJ,OAAO,CAACK,KAAR,CAAc,IAAd,EAAoBC,MAApB,CAA2B,CAACC,GAAD,EAAMC,IAAN,KAAe;IACvD,IAAID,GAAG,CAACE,YAAR,EAAsB;MACpB,IAAID,IAAI,KAAK,IAAb,EAAmB;QACjBD,GAAG,CAACE,YAAJ,GAAmB,KAAnB;MACD,CAFD,MAEO;QACLF,GAAG,CAACG,KAAJ,CAAUC,IAAV,CAAeH,IAAI,CAACI,OAAL,CAAa,mBAAb,EAAkC,IAAlC,CAAf;MACD;IACF,CAND,MAMO,IAAIJ,IAAI,KAAK,0BAAb,EAAyC;MAC9CD,GAAG,CAACE,YAAJ,GAAmB,IAAnB;IACD;;IAED,OAAOF,GAAP;EACD,CAZc,EAYZ;IACDE,YAAY,EAAE,KADb;IAEDC,KAAK,EAAE;EAFN,CAZY,CAAf;EAgBA,MAAM;IACJA;EADI,IAEFN,MAFJ;;EAIA,IAAIM,KAAK,CAACG,MAAN,KAAiB,CAArB,EAAwB;IACtB,MAAM,IAAIC,KAAJ,CAAU,4EAAV,CAAN;EACD;;EAED,OAAOJ,KAAP;AACD,CA7BD;AA8BA;AACA;AACA;AACA;AACA;;;AAGA,MAAMK,UAAU,GAAGC,UAAU,IAAI;EAC/B,MAAMC,cAAc,GAAGlB,iBAAiB,EAAxC;EACA,MAAMmB,OAAO,GAAGF,UAAU,CAACG,MAAX,CAAkBC,KAAK,IAAI;IACzC,MAAMC,UAAU,GAAG,CAAC,GAAG1B,UAAU,CAAC2B,MAAf,EAAuB5B,KAAK,CAACI,OAAN,CAAcI,OAAd,CAAsBC,SAAtB,EAAiC,8BAAjC,EAAiEiB,KAAK,CAAC,CAAD,CAAL,GAAW,KAA5E,CAAvB,CAAnB;IACA,MAAMG,OAAO,GAAGN,cAAc,CAACO,QAAf,CAAwBJ,KAAK,CAAC,CAAD,CAA7B,CAAhB;IACA,OAAO,EAAEC,UAAU,IAAIE,OAAhB,CAAP;EACD,CAJe,CAAhB;;EAMA,IAAIL,OAAO,CAACL,MAAR,GAAiB,CAArB,EAAwB;IACtB,MAAMY,WAAW,GAAGP,OAAO,CAACQ,GAAR,CAAYN,KAAK,IAAI;MACvC,OAAOA,KAAK,CAAC,CAAD,CAAZ;IACD,CAFmB,EAEjBO,IAFiB,CAEZ,IAFY,CAApB;IAGA,MAAM,IAAIb,KAAJ,CAAU,4CAA4CW,WAA5C,GAA0D,IAA1D,GAAiE,iHAA3E,CAAN;EACD;AACF,CAdD;;AAgBAV,UAAU,CAAC,CAAC,GAAGpB,UAAU,CAACiC,QAAf,GAAD,CAAV"},"metadata":{},"sourceType":"script"}