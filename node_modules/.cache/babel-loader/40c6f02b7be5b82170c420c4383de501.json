{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * Compares two script coverages.\n *\n * The result corresponds to the comparison of their `url` value (alphabetical sort).\n */\n\nfunction compareScriptCovs(a, b) {\n  if (a.url === b.url) {\n    return 0;\n  } else if (a.url < b.url) {\n    return -1;\n  } else {\n    return 1;\n  }\n}\n\nexports.compareScriptCovs = compareScriptCovs;\n/**\n * Compares two function coverages.\n *\n * The result corresponds to the comparison of the root ranges.\n */\n\nfunction compareFunctionCovs(a, b) {\n  return compareRangeCovs(a.ranges[0], b.ranges[0]);\n}\n\nexports.compareFunctionCovs = compareFunctionCovs;\n/**\n * Compares two range coverages.\n *\n * The ranges are first ordered by ascending `startOffset` and then by\n * descending `endOffset`.\n * This corresponds to a pre-order tree traversal.\n */\n\nfunction compareRangeCovs(a, b) {\n  if (a.startOffset !== b.startOffset) {\n    return a.startOffset - b.startOffset;\n  } else {\n    return b.endOffset - a.endOffset;\n  }\n}\n\nexports.compareRangeCovs = compareRangeCovs;","map":{"version":3,"mappings":";;;;;AAEA;;;;;;AAKA,SAAgBA,iBAAhB,CAAkCC,CAAlC,EAA0DC,CAA1D,EAAgF;EAC9E,IAAID,CAAC,CAACE,GAAF,KAAUD,CAAC,CAACC,GAAhB,EAAqB;IACnB,OAAO,CAAP;EACD,CAFD,MAEO,IAAIF,CAAC,CAACE,GAAF,GAAQD,CAAC,CAACC,GAAd,EAAmB;IACxB,OAAO,CAAC,CAAR;EACD,CAFM,MAEA;IACL,OAAO,CAAP;EACD;AACF;;AARDC;AAUA;;;;;;AAKA,SAAgBC,mBAAhB,CAAoCJ,CAApC,EAA8DC,CAA9D,EAAsF;EACpF,OAAOI,gBAAgB,CAACL,CAAC,CAACM,MAAF,CAAS,CAAT,CAAD,EAAcL,CAAC,CAACK,MAAF,CAAS,CAAT,CAAd,CAAvB;AACD;;AAFDH;AAIA;;;;;;;;AAOA,SAAgBE,gBAAhB,CAAiCL,CAAjC,EAAwDC,CAAxD,EAA6E;EAC3E,IAAID,CAAC,CAACO,WAAF,KAAkBN,CAAC,CAACM,WAAxB,EAAqC;IACnC,OAAOP,CAAC,CAACO,WAAF,GAAgBN,CAAC,CAACM,WAAzB;EACD,CAFD,MAEO;IACL,OAAON,CAAC,CAACO,SAAF,GAAcR,CAAC,CAACQ,SAAvB;EACD;AACF;;AANDL","names":["compareScriptCovs","a","b","url","exports","compareFunctionCovs","compareRangeCovs","ranges","startOffset","endOffset"],"sources":["C:\\Users\\Rohith\\mern\\frontend\\node_modules\\@bcoe\\v8-coverage\\dist\\lib\\_src\\compare.ts"],"sourcesContent":["import { FunctionCov, RangeCov, ScriptCov } from \"./types\";\n\n/**\n * Compares two script coverages.\n *\n * The result corresponds to the comparison of their `url` value (alphabetical sort).\n */\nexport function compareScriptCovs(a: Readonly<ScriptCov>, b: Readonly<ScriptCov>): number {\n  if (a.url === b.url) {\n    return 0;\n  } else if (a.url < b.url) {\n    return -1;\n  } else {\n    return 1;\n  }\n}\n\n/**\n * Compares two function coverages.\n *\n * The result corresponds to the comparison of the root ranges.\n */\nexport function compareFunctionCovs(a: Readonly<FunctionCov>, b: Readonly<FunctionCov>): number {\n  return compareRangeCovs(a.ranges[0], b.ranges[0]);\n}\n\n/**\n * Compares two range coverages.\n *\n * The ranges are first ordered by ascending `startOffset` and then by\n * descending `endOffset`.\n * This corresponds to a pre-order tree traversal.\n */\nexport function compareRangeCovs(a: Readonly<RangeCov>, b: Readonly<RangeCov>): number {\n  if (a.startOffset !== b.startOffset) {\n    return a.startOffset - b.startOffset;\n  } else {\n    return b.endOffset - a.endOffset;\n  }\n}\n"]},"metadata":{},"sourceType":"script"}