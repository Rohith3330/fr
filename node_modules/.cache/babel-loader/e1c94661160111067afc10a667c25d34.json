{"ast":null,"code":"'use strict';\n\nvar TYPES = require('../parsers').TYPES;\n\nvar valueType = require('../parsers').valueType;\n\nvar parseMeasurement = require('../parsers').parseMeasurement;\n\nvar absoluteSizes = ['xx-small', 'x-small', 'small', 'medium', 'large', 'x-large', 'xx-large'];\nvar relativeSizes = ['larger', 'smaller'];\n\nmodule.exports.isValid = function (v) {\n  var type = valueType(v.toLowerCase());\n  return type === TYPES.LENGTH || type === TYPES.PERCENT || type === TYPES.KEYWORD && absoluteSizes.indexOf(v.toLowerCase()) !== -1 || type === TYPES.KEYWORD && relativeSizes.indexOf(v.toLowerCase()) !== -1;\n};\n\nfunction parse(v) {\n  const valueAsString = String(v).toLowerCase();\n  const optionalArguments = absoluteSizes.concat(relativeSizes);\n  const isOptionalArgument = optionalArguments.some(stringValue => stringValue.toLowerCase() === valueAsString);\n  return isOptionalArgument ? valueAsString : parseMeasurement(v);\n}\n\nmodule.exports.definition = {\n  set: function (v) {\n    this._setProperty('font-size', parse(v));\n  },\n  get: function () {\n    return this.getPropertyValue('font-size');\n  },\n  enumerable: true,\n  configurable: true\n};","map":{"version":3,"names":["TYPES","require","valueType","parseMeasurement","absoluteSizes","relativeSizes","module","exports","isValid","v","type","toLowerCase","LENGTH","PERCENT","KEYWORD","indexOf","parse","valueAsString","String","optionalArguments","concat","isOptionalArgument","some","stringValue","definition","set","_setProperty","get","getPropertyValue","enumerable","configurable"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/cssstyle/lib/properties/fontSize.js"],"sourcesContent":["'use strict';\n\nvar TYPES = require('../parsers').TYPES;\nvar valueType = require('../parsers').valueType;\nvar parseMeasurement = require('../parsers').parseMeasurement;\n\nvar absoluteSizes = ['xx-small', 'x-small', 'small', 'medium', 'large', 'x-large', 'xx-large'];\nvar relativeSizes = ['larger', 'smaller'];\n\nmodule.exports.isValid = function(v) {\n  var type = valueType(v.toLowerCase());\n  return (\n    type === TYPES.LENGTH ||\n    type === TYPES.PERCENT ||\n    (type === TYPES.KEYWORD && absoluteSizes.indexOf(v.toLowerCase()) !== -1) ||\n    (type === TYPES.KEYWORD && relativeSizes.indexOf(v.toLowerCase()) !== -1)\n  );\n};\n\nfunction parse(v) {\n  const valueAsString = String(v).toLowerCase();\n  const optionalArguments = absoluteSizes.concat(relativeSizes);\n  const isOptionalArgument = optionalArguments.some(\n    stringValue => stringValue.toLowerCase() === valueAsString\n  );\n  return isOptionalArgument ? valueAsString : parseMeasurement(v);\n}\n\nmodule.exports.definition = {\n  set: function(v) {\n    this._setProperty('font-size', parse(v));\n  },\n  get: function() {\n    return this.getPropertyValue('font-size');\n  },\n  enumerable: true,\n  configurable: true,\n};\n"],"mappings":"AAAA;;AAEA,IAAIA,KAAK,GAAGC,OAAO,CAAC,YAAD,CAAP,CAAsBD,KAAlC;;AACA,IAAIE,SAAS,GAAGD,OAAO,CAAC,YAAD,CAAP,CAAsBC,SAAtC;;AACA,IAAIC,gBAAgB,GAAGF,OAAO,CAAC,YAAD,CAAP,CAAsBE,gBAA7C;;AAEA,IAAIC,aAAa,GAAG,CAAC,UAAD,EAAa,SAAb,EAAwB,OAAxB,EAAiC,QAAjC,EAA2C,OAA3C,EAAoD,SAApD,EAA+D,UAA/D,CAApB;AACA,IAAIC,aAAa,GAAG,CAAC,QAAD,EAAW,SAAX,CAApB;;AAEAC,MAAM,CAACC,OAAP,CAAeC,OAAf,GAAyB,UAASC,CAAT,EAAY;EACnC,IAAIC,IAAI,GAAGR,SAAS,CAACO,CAAC,CAACE,WAAF,EAAD,CAApB;EACA,OACED,IAAI,KAAKV,KAAK,CAACY,MAAf,IACAF,IAAI,KAAKV,KAAK,CAACa,OADf,IAECH,IAAI,KAAKV,KAAK,CAACc,OAAf,IAA0BV,aAAa,CAACW,OAAd,CAAsBN,CAAC,CAACE,WAAF,EAAtB,MAA2C,CAAC,CAFvE,IAGCD,IAAI,KAAKV,KAAK,CAACc,OAAf,IAA0BT,aAAa,CAACU,OAAd,CAAsBN,CAAC,CAACE,WAAF,EAAtB,MAA2C,CAAC,CAJzE;AAMD,CARD;;AAUA,SAASK,KAAT,CAAeP,CAAf,EAAkB;EAChB,MAAMQ,aAAa,GAAGC,MAAM,CAACT,CAAD,CAAN,CAAUE,WAAV,EAAtB;EACA,MAAMQ,iBAAiB,GAAGf,aAAa,CAACgB,MAAd,CAAqBf,aAArB,CAA1B;EACA,MAAMgB,kBAAkB,GAAGF,iBAAiB,CAACG,IAAlB,CACzBC,WAAW,IAAIA,WAAW,CAACZ,WAAZ,OAA8BM,aADpB,CAA3B;EAGA,OAAOI,kBAAkB,GAAGJ,aAAH,GAAmBd,gBAAgB,CAACM,CAAD,CAA5D;AACD;;AAEDH,MAAM,CAACC,OAAP,CAAeiB,UAAf,GAA4B;EAC1BC,GAAG,EAAE,UAAShB,CAAT,EAAY;IACf,KAAKiB,YAAL,CAAkB,WAAlB,EAA+BV,KAAK,CAACP,CAAD,CAApC;EACD,CAHyB;EAI1BkB,GAAG,EAAE,YAAW;IACd,OAAO,KAAKC,gBAAL,CAAsB,WAAtB,CAAP;EACD,CANyB;EAO1BC,UAAU,EAAE,IAPc;EAQ1BC,YAAY,EAAE;AARY,CAA5B"},"metadata":{},"sourceType":"script"}