{"ast":null,"code":"'use strict';\n\nconst crypto = require('crypto');\n\nmodule.exports = length => {\n  if (!Number.isFinite(length)) {\n    throw new TypeError('Expected a finite number');\n  }\n\n  return crypto.randomBytes(Math.ceil(length / 2)).toString('hex').slice(0, length);\n};","map":{"version":3,"names":["crypto","require","module","exports","length","Number","isFinite","TypeError","randomBytes","Math","ceil","toString","slice"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/crypto-random-string/index.js"],"sourcesContent":["'use strict';\nconst crypto = require('crypto');\n\nmodule.exports = length => {\n\tif (!Number.isFinite(length)) {\n\t\tthrow new TypeError('Expected a finite number');\n\t}\n\n\treturn crypto.randomBytes(Math.ceil(length / 2)).toString('hex').slice(0, length);\n};\n"],"mappings":"AAAA;;AACA,MAAMA,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAtB;;AAEAC,MAAM,CAACC,OAAP,GAAiBC,MAAM,IAAI;EAC1B,IAAI,CAACC,MAAM,CAACC,QAAP,CAAgBF,MAAhB,CAAL,EAA8B;IAC7B,MAAM,IAAIG,SAAJ,CAAc,0BAAd,CAAN;EACA;;EAED,OAAOP,MAAM,CAACQ,WAAP,CAAmBC,IAAI,CAACC,IAAL,CAAUN,MAAM,GAAG,CAAnB,CAAnB,EAA0CO,QAA1C,CAAmD,KAAnD,EAA0DC,KAA1D,CAAgE,CAAhE,EAAmER,MAAnE,CAAP;AACA,CAND"},"metadata":{},"sourceType":"script"}