{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = void 0;\n\nfunction _types() {\n  const data = require('../types');\n\n  _types = function () {\n    return data;\n  };\n\n  return data;\n}\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\nconst isWorkerThread = () => {\n  try {\n    // `Require` here to support Node v10\n    const {\n      isMainThread,\n      parentPort\n    } = require('worker_threads');\n\n    return !isMainThread && parentPort;\n  } catch {\n    return false;\n  }\n};\n\nconst messageParent = function (message) {\n  let parentProcess = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : process;\n\n  try {\n    if (isWorkerThread()) {\n      // `Require` here to support Node v10\n      const {\n        parentPort\n      } = require('worker_threads');\n\n      parentPort.postMessage([_types().PARENT_MESSAGE_CUSTOM, message]);\n    } else if (typeof parentProcess.send === 'function') {\n      parentProcess.send([_types().PARENT_MESSAGE_CUSTOM, message]);\n    }\n  } catch {\n    throw new Error('\"messageParent\" can only be used inside a worker');\n  }\n};\n\nvar _default = messageParent;\nexports.default = _default;","map":{"version":3,"names":["Object","defineProperty","exports","value","default","_types","data","require","isWorkerThread","isMainThread","parentPort","messageParent","message","parentProcess","process","postMessage","PARENT_MESSAGE_CUSTOM","send","Error","_default"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/rollup-plugin-terser/node_modules/jest-worker/build/workers/messageParent.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = void 0;\n\nfunction _types() {\n  const data = require('../types');\n\n  _types = function () {\n    return data;\n  };\n\n  return data;\n}\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nconst isWorkerThread = () => {\n  try {\n    // `Require` here to support Node v10\n    const {isMainThread, parentPort} = require('worker_threads');\n\n    return !isMainThread && parentPort;\n  } catch {\n    return false;\n  }\n};\n\nconst messageParent = (message, parentProcess = process) => {\n  try {\n    if (isWorkerThread()) {\n      // `Require` here to support Node v10\n      const {parentPort} = require('worker_threads');\n\n      parentPort.postMessage([_types().PARENT_MESSAGE_CUSTOM, message]);\n    } else if (typeof parentProcess.send === 'function') {\n      parentProcess.send([_types().PARENT_MESSAGE_CUSTOM, message]);\n    }\n  } catch {\n    throw new Error('\"messageParent\" can only be used inside a worker');\n  }\n};\n\nvar _default = messageParent;\nexports.default = _default;\n"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAC3CC,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,SAASC,MAAT,GAAkB;EAChB,MAAMC,IAAI,GAAGC,OAAO,CAAC,UAAD,CAApB;;EAEAF,MAAM,GAAG,YAAY;IACnB,OAAOC,IAAP;EACD,CAFD;;EAIA,OAAOA,IAAP;AACD;AAED;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAME,cAAc,GAAG,MAAM;EAC3B,IAAI;IACF;IACA,MAAM;MAACC,YAAD;MAAeC;IAAf,IAA6BH,OAAO,CAAC,gBAAD,CAA1C;;IAEA,OAAO,CAACE,YAAD,IAAiBC,UAAxB;EACD,CALD,CAKE,MAAM;IACN,OAAO,KAAP;EACD;AACF,CATD;;AAWA,MAAMC,aAAa,GAAG,UAACC,OAAD,EAAsC;EAAA,IAA5BC,aAA4B,uEAAZC,OAAY;;EAC1D,IAAI;IACF,IAAIN,cAAc,EAAlB,EAAsB;MACpB;MACA,MAAM;QAACE;MAAD,IAAeH,OAAO,CAAC,gBAAD,CAA5B;;MAEAG,UAAU,CAACK,WAAX,CAAuB,CAACV,MAAM,GAAGW,qBAAV,EAAiCJ,OAAjC,CAAvB;IACD,CALD,MAKO,IAAI,OAAOC,aAAa,CAACI,IAArB,KAA8B,UAAlC,EAA8C;MACnDJ,aAAa,CAACI,IAAd,CAAmB,CAACZ,MAAM,GAAGW,qBAAV,EAAiCJ,OAAjC,CAAnB;IACD;EACF,CATD,CASE,MAAM;IACN,MAAM,IAAIM,KAAJ,CAAU,kDAAV,CAAN;EACD;AACF,CAbD;;AAeA,IAAIC,QAAQ,GAAGR,aAAf;AACAT,OAAO,CAACE,OAAR,GAAkBe,QAAlB"},"metadata":{},"sourceType":"script"}