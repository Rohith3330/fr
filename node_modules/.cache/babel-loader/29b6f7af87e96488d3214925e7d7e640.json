{"ast":null,"code":"var parse = require('../');\n\nvar test = require('tape');\n\ntest('boolean and alias is not unknown', function (t) {\n  var unknown = [];\n\n  function unknownFn(arg) {\n    unknown.push(arg);\n    return false;\n  }\n\n  var aliased = ['-h', 'true', '--derp', 'true'];\n  var regular = ['--herp', 'true', '-d', 'true'];\n  var opts = {\n    alias: {\n      h: 'herp'\n    },\n    boolean: 'h',\n    unknown: unknownFn\n  };\n  var aliasedArgv = parse(aliased, opts);\n  var propertyArgv = parse(regular, opts);\n  t.same(unknown, ['--derp', '-d']);\n  t.end();\n});\ntest('flag boolean true any double hyphen argument is not unknown', function (t) {\n  var unknown = [];\n\n  function unknownFn(arg) {\n    unknown.push(arg);\n    return false;\n  }\n\n  var argv = parse(['--honk', '--tacos=good', 'cow', '-p', '55'], {\n    boolean: true,\n    unknown: unknownFn\n  });\n  t.same(unknown, ['--tacos=good', 'cow', '-p']);\n  t.same(argv, {\n    honk: true,\n    _: []\n  });\n  t.end();\n});\ntest('string and alias is not unknown', function (t) {\n  var unknown = [];\n\n  function unknownFn(arg) {\n    unknown.push(arg);\n    return false;\n  }\n\n  var aliased = ['-h', 'hello', '--derp', 'goodbye'];\n  var regular = ['--herp', 'hello', '-d', 'moon'];\n  var opts = {\n    alias: {\n      h: 'herp'\n    },\n    string: 'h',\n    unknown: unknownFn\n  };\n  var aliasedArgv = parse(aliased, opts);\n  var propertyArgv = parse(regular, opts);\n  t.same(unknown, ['--derp', '-d']);\n  t.end();\n});\ntest('default and alias is not unknown', function (t) {\n  var unknown = [];\n\n  function unknownFn(arg) {\n    unknown.push(arg);\n    return false;\n  }\n\n  var aliased = ['-h', 'hello'];\n  var regular = ['--herp', 'hello'];\n  var opts = {\n    default: {\n      'h': 'bar'\n    },\n    alias: {\n      'h': 'herp'\n    },\n    unknown: unknownFn\n  };\n  var aliasedArgv = parse(aliased, opts);\n  var propertyArgv = parse(regular, opts);\n  t.same(unknown, []);\n  t.end();\n  unknownFn(); // exercise fn for 100% coverage\n});\ntest('value following -- is not unknown', function (t) {\n  var unknown = [];\n\n  function unknownFn(arg) {\n    unknown.push(arg);\n    return false;\n  }\n\n  var aliased = ['--bad', '--', 'good', 'arg'];\n  var opts = {\n    '--': true,\n    unknown: unknownFn\n  };\n  var argv = parse(aliased, opts);\n  t.same(unknown, ['--bad']);\n  t.same(argv, {\n    '--': ['good', 'arg'],\n    '_': []\n  });\n  t.end();\n});","map":{"version":3,"names":["parse","require","test","t","unknown","unknownFn","arg","push","aliased","regular","opts","alias","h","boolean","aliasedArgv","propertyArgv","same","end","argv","honk","_","string","default"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/minimist/test/unknown.js"],"sourcesContent":["var parse = require('../');\nvar test = require('tape');\n\ntest('boolean and alias is not unknown', function (t) {\n    var unknown = [];\n    function unknownFn(arg) {\n        unknown.push(arg);\n        return false;\n    }\n    var aliased = [ '-h', 'true', '--derp', 'true' ];\n    var regular = [ '--herp',  'true', '-d', 'true' ];\n    var opts = {\n        alias: { h: 'herp' },\n        boolean: 'h',\n        unknown: unknownFn\n    };\n    var aliasedArgv = parse(aliased, opts);\n    var propertyArgv = parse(regular, opts);\n\n    t.same(unknown, ['--derp', '-d']);\n    t.end();\n});\n\ntest('flag boolean true any double hyphen argument is not unknown', function (t) {\n    var unknown = [];\n    function unknownFn(arg) {\n        unknown.push(arg);\n        return false;\n    }\n    var argv = parse(['--honk', '--tacos=good', 'cow', '-p', '55'], {\n        boolean: true,\n        unknown: unknownFn\n    });\n    t.same(unknown, ['--tacos=good', 'cow', '-p']);\n    t.same(argv, {\n        honk: true,\n        _: []\n    });\n    t.end();\n});\n\ntest('string and alias is not unknown', function (t) {\n    var unknown = [];\n    function unknownFn(arg) {\n        unknown.push(arg);\n        return false;\n    }\n    var aliased = [ '-h', 'hello', '--derp', 'goodbye' ];\n    var regular = [ '--herp',  'hello', '-d', 'moon' ];\n    var opts = {\n        alias: { h: 'herp' },\n        string: 'h',\n        unknown: unknownFn\n    };\n    var aliasedArgv = parse(aliased, opts);\n    var propertyArgv = parse(regular, opts);\n\n    t.same(unknown, ['--derp', '-d']);\n    t.end();\n});\n\ntest('default and alias is not unknown', function (t) {\n    var unknown = [];\n    function unknownFn(arg) {\n        unknown.push(arg);\n        return false;\n    }\n    var aliased = [ '-h', 'hello' ];\n    var regular = [ '--herp',  'hello' ];\n    var opts = {\n        default: { 'h': 'bar' },\n        alias: { 'h': 'herp' },\n        unknown: unknownFn\n    };\n    var aliasedArgv = parse(aliased, opts);\n    var propertyArgv = parse(regular, opts);\n\n    t.same(unknown, []);\n    t.end();\n    unknownFn(); // exercise fn for 100% coverage\n});\n\ntest('value following -- is not unknown', function (t) {\n    var unknown = [];\n    function unknownFn(arg) {\n        unknown.push(arg);\n        return false;\n    }\n    var aliased = [ '--bad', '--', 'good', 'arg' ];\n    var opts = {\n        '--': true,\n        unknown: unknownFn\n    };\n    var argv = parse(aliased, opts);\n\n    t.same(unknown, ['--bad']);\n    t.same(argv, {\n        '--': ['good', 'arg'],\n        '_': []\n    })\n    t.end();\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}