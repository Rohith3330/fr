{"ast":null,"code":"'use strict';\n\nvar FS = require('fs');\n/**\n * Encode plain SVG data string into Data URI string.\n *\n * @param {String} str input string\n * @param {String} type Data URI type\n * @return {String} output string\n */\n\n\nexports.encodeSVGDatauri = function (str, type) {\n  var prefix = 'data:image/svg+xml';\n\n  if (!type || type === 'base64') {\n    // base64\n    prefix += ';base64,';\n\n    if (Buffer.from) {\n      str = prefix + Buffer.from(str).toString('base64');\n    } else {\n      str = prefix + new Buffer(str).toString('base64');\n    }\n  } else if (type === 'enc') {\n    // URI encoded\n    str = prefix + ',' + encodeURIComponent(str);\n  } else if (type === 'unenc') {\n    // unencoded\n    str = prefix + ',' + str;\n  }\n\n  return str;\n};\n/**\n * Decode SVG Data URI string into plain SVG string.\n *\n * @param {string} str input string\n * @return {String} output string\n */\n\n\nexports.decodeSVGDatauri = function (str) {\n  var regexp = /data:image\\/svg\\+xml(;charset=[^;,]*)?(;base64)?,(.*)/;\n  var match = regexp.exec(str); // plain string\n\n  if (!match) return str;\n  var data = match[3];\n\n  if (match[2]) {\n    // base64\n    str = new Buffer(data, 'base64').toString('utf8');\n  } else if (data.charAt(0) === '%') {\n    // URI encoded\n    str = decodeURIComponent(data);\n  } else if (data.charAt(0) === '<') {\n    // unencoded\n    str = data;\n  }\n\n  return str;\n};\n\nexports.intersectArrays = function (a, b) {\n  return a.filter(function (n) {\n    return b.indexOf(n) > -1;\n  });\n};\n/**\n * Convert a row of numbers to an optimized string view.\n *\n * @example\n * [0, -1, .5, .5] → \"0-1 .5.5\"\n *\n * @param {number[]} data\n * @param {Object} params\n * @param {string?} command path data instruction\n * @return {string}\n */\n\n\nexports.cleanupOutData = function (data, params, command) {\n  var str = '',\n      delimiter,\n      prev;\n  data.forEach(function (item, i) {\n    // space delimiter by default\n    delimiter = ' '; // no extra space in front of first number\n\n    if (i == 0) delimiter = ''; // no extra space after 'arcto' command flags\n\n    if (params.noSpaceAfterFlags && (command == 'A' || command == 'a')) {\n      var pos = i % 7;\n      if (pos == 4 || pos == 5) delimiter = '';\n    } // remove floating-point numbers leading zeros\n    // 0.5 → .5\n    // -0.5 → -.5\n\n\n    if (params.leadingZero) {\n      item = removeLeadingZero(item);\n    } // no extra space in front of negative number or\n    // in front of a floating number if a previous number is floating too\n\n\n    if (params.negativeExtraSpace && delimiter != '' && (item < 0 || String(item).charCodeAt(0) == 46 && prev % 1 !== 0)) {\n      delimiter = '';\n    } // save prev item value\n\n\n    prev = item;\n    str += delimiter + item;\n  });\n  return str;\n};\n/**\n * Remove floating-point numbers leading zero.\n *\n * @example\n * 0.5 → .5\n *\n * @example\n * -0.5 → -.5\n *\n * @param {Float} num input number\n *\n * @return {String} output number as string\n */\n\n\nvar removeLeadingZero = exports.removeLeadingZero = function (num) {\n  var strNum = num.toString();\n\n  if (0 < num && num < 1 && strNum.charCodeAt(0) == 48) {\n    strNum = strNum.slice(1);\n  } else if (-1 < num && num < 0 && strNum.charCodeAt(1) == 48) {\n    strNum = strNum.charAt(0) + strNum.slice(2);\n  }\n\n  return strNum;\n};\n/**\n * Synchronously check if path is a directory. Tolerant to errors like ENOENT.\n * @param {string} path\n */\n\n\nexports.checkIsDir = function (path) {\n  try {\n    return FS.lstatSync(path).isDirectory();\n  } catch (e) {\n    return false;\n  }\n};","map":{"version":3,"names":["FS","require","exports","encodeSVGDatauri","str","type","prefix","Buffer","from","toString","encodeURIComponent","decodeSVGDatauri","regexp","match","exec","data","charAt","decodeURIComponent","intersectArrays","a","b","filter","n","indexOf","cleanupOutData","params","command","delimiter","prev","forEach","item","i","noSpaceAfterFlags","pos","leadingZero","removeLeadingZero","negativeExtraSpace","String","charCodeAt","num","strNum","slice","checkIsDir","path","lstatSync","isDirectory","e"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/svgo/lib/svgo/tools.js"],"sourcesContent":["'use strict';\n\nvar FS = require('fs');\n\n/**\n * Encode plain SVG data string into Data URI string.\n *\n * @param {String} str input string\n * @param {String} type Data URI type\n * @return {String} output string\n */\nexports.encodeSVGDatauri = function(str, type) {\n    var prefix = 'data:image/svg+xml';\n    if (!type || type === 'base64') {\n        // base64\n        prefix += ';base64,';\n        if (Buffer.from) {\n            str = prefix + Buffer.from(str).toString('base64');\n        } else {\n            str = prefix + new Buffer(str).toString('base64');\n        }\n    } else if (type === 'enc') {\n        // URI encoded\n        str = prefix + ',' + encodeURIComponent(str);\n    } else if (type === 'unenc') {\n        // unencoded\n        str = prefix + ',' + str;\n    }\n    return str;\n};\n\n/**\n * Decode SVG Data URI string into plain SVG string.\n *\n * @param {string} str input string\n * @return {String} output string\n */\nexports.decodeSVGDatauri = function(str) {\n    var regexp = /data:image\\/svg\\+xml(;charset=[^;,]*)?(;base64)?,(.*)/;\n    var match = regexp.exec(str);\n\n    // plain string\n    if (!match) return str;\n\n    var data = match[3];\n\n    if (match[2]) {\n        // base64\n        str = new Buffer(data, 'base64').toString('utf8');\n    } else if (data.charAt(0) === '%') {\n        // URI encoded\n        str = decodeURIComponent(data);\n    } else if (data.charAt(0) === '<') {\n        // unencoded\n        str = data;\n    }\n    return str;\n};\n\nexports.intersectArrays = function(a, b) {\n    return a.filter(function(n) {\n        return b.indexOf(n) > -1;\n    });\n};\n\n/**\n * Convert a row of numbers to an optimized string view.\n *\n * @example\n * [0, -1, .5, .5] → \"0-1 .5.5\"\n *\n * @param {number[]} data\n * @param {Object} params\n * @param {string?} command path data instruction\n * @return {string}\n */\nexports.cleanupOutData = function(data, params, command) {\n    var str = '',\n        delimiter,\n        prev;\n\n    data.forEach(function(item, i) {\n        // space delimiter by default\n        delimiter = ' ';\n\n        // no extra space in front of first number\n        if (i == 0) delimiter = '';\n\n        // no extra space after 'arcto' command flags\n        if (params.noSpaceAfterFlags && (command == 'A' || command == 'a')) {\n            var pos = i % 7;\n            if (pos == 4 || pos == 5) delimiter = '';\n        }\n\n        // remove floating-point numbers leading zeros\n        // 0.5 → .5\n        // -0.5 → -.5\n        if (params.leadingZero) {\n            item = removeLeadingZero(item);\n        }\n\n        // no extra space in front of negative number or\n        // in front of a floating number if a previous number is floating too\n        if (\n            params.negativeExtraSpace &&\n            delimiter != '' &&\n            (item < 0 ||\n                (String(item).charCodeAt(0) == 46 && prev % 1 !== 0)\n            )\n        ) {\n            delimiter = '';\n        }\n        // save prev item value\n        prev = item;\n        str += delimiter + item;\n    });\n    return str;\n};\n\n/**\n * Remove floating-point numbers leading zero.\n *\n * @example\n * 0.5 → .5\n *\n * @example\n * -0.5 → -.5\n *\n * @param {Float} num input number\n *\n * @return {String} output number as string\n */\nvar removeLeadingZero = exports.removeLeadingZero = function(num) {\n    var strNum = num.toString();\n\n    if (0 < num && num < 1 && strNum.charCodeAt(0) == 48) {\n        strNum = strNum.slice(1);\n    } else if (-1 < num && num < 0 && strNum.charCodeAt(1) == 48) {\n        strNum = strNum.charAt(0) + strNum.slice(2);\n    }\n    return strNum;\n};\n\n\n/**\n * Synchronously check if path is a directory. Tolerant to errors like ENOENT.\n * @param {string} path\n */\nexports.checkIsDir = function(path) {\n    try {\n        return FS.lstatSync(path).isDirectory();\n    } catch(e) {\n        return false;\n    }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}