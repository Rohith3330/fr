{"ast":null,"code":"/*!\n 2022 Jason Mulligan <jason.mulligan@avoidwork.com>\n @version 8.0.7\n*/\nconst i = /^(b|B)$/,\n      t = {\n  iec: {\n    bits: [\"bit\", \"Kibit\", \"Mibit\", \"Gibit\", \"Tibit\", \"Pibit\", \"Eibit\", \"Zibit\", \"Yibit\"],\n    bytes: [\"B\", \"KiB\", \"MiB\", \"GiB\", \"TiB\", \"PiB\", \"EiB\", \"ZiB\", \"YiB\"]\n  },\n  jedec: {\n    bits: [\"bit\", \"Kbit\", \"Mbit\", \"Gbit\", \"Tbit\", \"Pbit\", \"Ebit\", \"Zbit\", \"Ybit\"],\n    bytes: [\"B\", \"KB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\", \"ZB\", \"YB\"]\n  }\n},\n      e = {\n  iec: [\"\", \"kibi\", \"mebi\", \"gibi\", \"tebi\", \"pebi\", \"exbi\", \"zebi\", \"yobi\"],\n  jedec: [\"\", \"kilo\", \"mega\", \"giga\", \"tera\", \"peta\", \"exa\", \"zetta\", \"yotta\"]\n},\n      o = {\n  floor: Math.floor,\n  ceil: Math.ceil\n};\n\nfunction a(a) {\n  let r = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  let b,\n      n,\n      s,\n      l,\n      c,\n      p,\n      d,\n      B,\n      u,\n      f,\n      g,\n      h,\n      M,\n      y,\n      m,\n      x,\n      v,\n      N,\n      E,\n      j,\n      w,\n      P = [],\n      T = 0;\n  if (isNaN(a)) throw new TypeError(\"Invalid number\");\n  if (s = !0 === r.bits, m = !0 === r.unix, h = !0 === r.pad, n = r.base || 10, M = void 0 !== r.round ? r.round : m ? 1 : 2, d = void 0 !== r.locale ? r.locale : \"\", B = r.localeOptions || {}, x = void 0 !== r.separator ? r.separator : \"\", v = void 0 !== r.spacer ? r.spacer : m ? \"\" : \" \", E = r.symbols || {}, N = 2 === n ? r.standard || \"iec\" : \"jedec\", g = r.output || \"string\", c = !0 === r.fullform, p = r.fullforms instanceof Array ? r.fullforms : [], b = void 0 !== r.exponent ? r.exponent : -1, j = o[r.roundingMethod] || Math.round, f = Number(a), u = f < 0, l = n > 2 ? 1e3 : 1024, w = !1 === isNaN(r.precision) ? parseInt(r.precision, 10) : 0, u && (f = -f), (-1 === b || isNaN(b)) && (b = Math.floor(Math.log(f) / Math.log(l)), b < 0 && (b = 0)), b > 8 && (w > 0 && (w += 8 - b), b = 8), \"exponent\" === g) return b;\n  if (0 === f) P[0] = 0, y = P[1] = m ? \"\" : t[N][s ? \"bits\" : \"bytes\"][b];else {\n    T = f / (2 === n ? Math.pow(2, 10 * b) : Math.pow(1e3, b)), s && (T *= 8, T >= l && b < 8 && (T /= l, b++));\n    const e = Math.pow(10, b > 0 ? M : 0);\n    P[0] = j(T * e) / e, P[0] === l && b < 8 && void 0 === r.exponent && (P[0] = 1, b++), y = P[1] = 10 === n && 1 === b ? s ? \"kbit\" : \"kB\" : t[N][s ? \"bits\" : \"bytes\"][b], m && (P[1] = P[1].charAt(0), i.test(P[1]) && (P[0] = Math.floor(P[0]), P[1] = \"\"));\n  }\n\n  if (u && (P[0] = -P[0]), w > 0 && (P[0] = P[0].toPrecision(w)), P[1] = E[P[1]] || P[1], !0 === d ? P[0] = P[0].toLocaleString() : d.length > 0 ? P[0] = P[0].toLocaleString(d, B) : x.length > 0 && (P[0] = P[0].toString().replace(\".\", x)), h && !1 === Number.isInteger(P[0]) && M > 0) {\n    const i = x || \".\",\n          t = P[0].toString().split(i),\n          e = t[1] || \"\",\n          o = e.length,\n          a = M - o;\n    P[0] = `${t[0]}${i}${e.padEnd(o + a, \"0\")}`;\n  }\n\n  return c && (P[1] = p[b] ? p[b] : e[N][b] + (s ? \"bit\" : \"byte\") + (1 === P[0] ? \"\" : \"s\")), \"array\" === g ? P : \"object\" === g ? {\n    value: P[0],\n    symbol: P[1],\n    exponent: b,\n    unit: y\n  } : P.join(v);\n}\n\na.partial = i => t => a(t, i);\n\nexport { a as default };","map":{"version":3,"mappings":"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","names":["b","symbol","iec","bits","bytes","jedec","fullform","roundingFuncs","floor","Math","ceil","filesize","arg","descriptor","e","base","full","fullforms","locale","localeOptions","neg","num","output","pad","round","u","unix","separator","spacer","standard","symbols","roundingFunc","precision","result","val","isNaN","TypeError","Array","exponent","roundingMethod","Number","parseInt","log","pow","p","charAt","test","toPrecision","toLocaleString","length","toString","replace","isInteger","x","tmp","split","s","l","n","padEnd","value","unit","join","partial","opt"],"sources":["C:\\Users\\Rohith\\mern\\frontend\\node_modules\\filesize\\src\\filesize.js"],"sourcesContent":["const b = /^(b|B)$/,\r\n\tsymbol = {\r\n\t\tiec: {\r\n\t\t\tbits: [\"bit\", \"Kibit\", \"Mibit\", \"Gibit\", \"Tibit\", \"Pibit\", \"Eibit\", \"Zibit\", \"Yibit\"],\r\n\t\t\tbytes: [\"B\", \"KiB\", \"MiB\", \"GiB\", \"TiB\", \"PiB\", \"EiB\", \"ZiB\", \"YiB\"]\r\n\t\t},\r\n\t\tjedec: {\r\n\t\t\tbits: [\"bit\", \"Kbit\", \"Mbit\", \"Gbit\", \"Tbit\", \"Pbit\", \"Ebit\", \"Zbit\", \"Ybit\"],\r\n\t\t\tbytes: [\"B\", \"KB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\", \"ZB\", \"YB\"]\r\n\t\t}\r\n\t},\r\n\tfullform = {\r\n\t\tiec: [\"\", \"kibi\", \"mebi\", \"gibi\", \"tebi\", \"pebi\", \"exbi\", \"zebi\", \"yobi\"],\r\n\t\tjedec: [\"\", \"kilo\", \"mega\", \"giga\", \"tera\", \"peta\", \"exa\", \"zetta\", \"yotta\"]\r\n\t},\r\n\troundingFuncs = {\r\n\t\tfloor: Math.floor,\r\n\t\tceil: Math.ceil\r\n\t};\r\n\r\n/**\r\n * filesize\r\n *\r\n * @method filesize\r\n * @param  {Mixed}   arg        String, Int or Float to transform\r\n * @param  {Object}  descriptor [Optional] Flags\r\n * @return {String}             Readable file size String\r\n */\r\nfunction filesize (arg, descriptor = {}) {\r\n\tlet result = [],\r\n\t\tval = 0,\r\n\t\te, base, bits, ceil, full, fullforms, locale, localeOptions, neg, num, output, pad, round, u, unix, separator, spacer, standard, symbols, roundingFunc, precision;\r\n\r\n\tif (isNaN(arg)) {\r\n\t\tthrow new TypeError(\"Invalid number\");\r\n\t}\r\n\r\n\tbits = descriptor.bits === true;\r\n\tunix = descriptor.unix === true;\r\n\tpad = descriptor.pad === true;\r\n\tbase = descriptor.base || 10;\r\n\tround = descriptor.round !== void 0 ? descriptor.round : unix ? 1 : 2;\r\n\tlocale = descriptor.locale !== void 0 ? descriptor.locale : \"\";\r\n\tlocaleOptions = descriptor.localeOptions || {};\r\n\tseparator = descriptor.separator !== void 0 ? descriptor.separator : \"\";\r\n\tspacer = descriptor.spacer !== void 0 ? descriptor.spacer : unix ? \"\" : \" \";\r\n\tsymbols = descriptor.symbols || {};\r\n\tstandard = base === 2 ? descriptor.standard || \"iec\" : \"jedec\";\r\n\toutput = descriptor.output || \"string\";\r\n\tfull = descriptor.fullform === true;\r\n\tfullforms = descriptor.fullforms instanceof Array ? descriptor.fullforms : [];\r\n\te = descriptor.exponent !== void 0 ? descriptor.exponent : -1;\r\n\troundingFunc = roundingFuncs[descriptor.roundingMethod] || Math.round;\r\n\tnum = Number(arg);\r\n\tneg = num < 0;\r\n\tceil = base > 2 ? 1000 : 1024;\r\n\tprecision = isNaN(descriptor.precision) === false ? parseInt(descriptor.precision, 10) : 0;\r\n\r\n\t// Flipping a negative number to determine the size\r\n\tif (neg) {\r\n\t\tnum = -num;\r\n\t}\r\n\r\n\t// Determining the exponent\r\n\tif (e === -1 || isNaN(e)) {\r\n\t\te = Math.floor(Math.log(num) / Math.log(ceil));\r\n\r\n\t\tif (e < 0) {\r\n\t\t\te = 0;\r\n\t\t}\r\n\t}\r\n\r\n\t// Exceeding supported length, time to reduce & multiply\r\n\tif (e > 8) {\r\n\t\tif (precision > 0) {\r\n\t\t\tprecision += 8 - e;\r\n\t\t}\r\n\r\n\t\te = 8;\r\n\t}\r\n\r\n\tif (output === \"exponent\") {\r\n\t\treturn e;\r\n\t}\r\n\r\n\t// Zero is now a special case because bytes divide by 1\r\n\tif (num === 0) {\r\n\t\tresult[0] = 0;\r\n\t\tu = result[1] = unix ? \"\" : symbol[standard][bits ? \"bits\" : \"bytes\"][e];\r\n\t} else {\r\n\t\tval = num / (base === 2 ? Math.pow(2, e * 10) : Math.pow(1000, e));\r\n\r\n\t\tif (bits) {\r\n\t\t\tval = val * 8;\r\n\r\n\t\t\tif (val >= ceil && e < 8) {\r\n\t\t\t\tval = val / ceil;\r\n\t\t\t\te++;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst p = Math.pow(10, e > 0 ? round : 0);\r\n\t\tresult[0] = roundingFunc(val * p) / p;\r\n\r\n\t\tif (result[0] === ceil && e < 8 && descriptor.exponent === void 0) {\r\n\t\t\tresult[0] = 1;\r\n\t\t\te++;\r\n\t\t}\r\n\r\n\t\tu = result[1] = base === 10 && e === 1 ? bits ? \"kbit\" : \"kB\" : symbol[standard][bits ? \"bits\" : \"bytes\"][e];\r\n\r\n\t\tif (unix) {\r\n\t\t\tresult[1] = result[1].charAt(0);\r\n\r\n\t\t\tif (b.test(result[1])) {\r\n\t\t\t\tresult[0] = Math.floor(result[0]);\r\n\t\t\t\tresult[1] = \"\";\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// Decorating a 'diff'\r\n\tif (neg) {\r\n\t\tresult[0] = -result[0];\r\n\t}\r\n\r\n\t// Setting optional precision\r\n\tif (precision > 0) {\r\n\t\tresult[0] = result[0].toPrecision(precision);\r\n\t}\r\n\r\n\t// Applying custom symbol\r\n\tresult[1] = symbols[result[1]] || result[1];\r\n\r\n\tif (locale === true) {\r\n\t\tresult[0] = result[0].toLocaleString();\r\n\t} else if (locale.length > 0) {\r\n\t\tresult[0] = result[0].toLocaleString(locale, localeOptions);\r\n\t} else if (separator.length > 0) {\r\n\t\tresult[0] = result[0].toString().replace(\".\", separator);\r\n\t}\r\n\r\n\tif (pad && Number.isInteger(result[0]) === false && round > 0) {\r\n\t\tconst x = separator || \".\",\r\n\t\t\ttmp = result[0].toString().split(x),\r\n\t\t\ts = tmp[1] || \"\",\r\n\t\t\tl = s.length,\r\n\t\t\tn = round - l;\r\n\r\n\t\tresult[0] = `${tmp[0]}${x}${s.padEnd(l + n, \"0\")}`;\r\n\t}\r\n\r\n\tif (full) {\r\n\t\tresult[1] = fullforms[e] ? fullforms[e] : fullform[standard][e] + (bits ? \"bit\" : \"byte\") + (result[0] === 1 ? \"\" : \"s\");\r\n\t}\r\n\r\n\t// Returning Array, Object, or String (default)\r\n\treturn output === \"array\" ? result : output === \"object\" ? {value: result[0], symbol: result[1], exponent: e, unit: u} : result.join(spacer);\r\n}\r\n\r\n// Partial application for functional programming\r\nfilesize.partial = opt => arg => filesize(arg, opt);\r\n\r\nexport default filesize;\r\n"]},"metadata":{},"sourceType":"module"}