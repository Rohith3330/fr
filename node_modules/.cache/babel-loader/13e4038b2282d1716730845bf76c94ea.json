{"ast":null,"code":"/**\n * Debounce a function to delay invoking until wait (ms) have elapsed since the last invocation.\n * @param {function(...*): *} fn The function to be debounced.\n * @param {number} wait Milliseconds to wait before invoking again.\n * @return {function(...*): void} The debounced function.\n */\nfunction debounce(fn, wait) {\n  /**\n   * A cached setTimeout handler.\n   * @type {number | undefined}\n   */\n  let timer;\n  /**\n   * @returns {void}\n   */\n\n  function debounced() {\n    const context = this;\n    const args = arguments;\n    clearTimeout(timer);\n    timer = setTimeout(function () {\n      return fn.apply(context, args);\n    }, wait);\n  }\n\n  return debounced;\n}\n/**\n * Prettify a filename from error stacks into the desired format.\n * @param {string} filename The filename to be formatted.\n * @returns {string} The formatted filename.\n */\n\n\nfunction formatFilename(filename) {\n  // Strip away protocol and domain for compiled files\n  const htmlMatch = /^https?:\\/\\/(.*)\\/(.*)/.exec(filename);\n\n  if (htmlMatch && htmlMatch[1] && htmlMatch[2]) {\n    return htmlMatch[2];\n  } // Strip everything before the first directory for source files\n\n\n  const sourceMatch = /\\/.*?([^./]+[/|\\\\].*)$/.exec(filename);\n\n  if (sourceMatch && sourceMatch[1]) {\n    return sourceMatch[1].replace(/\\?$/, '');\n  } // Unknown filename type, use it as is\n\n\n  return filename;\n}\n/**\n * Remove all children of an element.\n * @param {HTMLElement} element A valid HTML element.\n * @param {number} [skip] Number of elements to skip removing.\n * @returns {void}\n */\n\n\nfunction removeAllChildren(element, skip) {\n  /** @type {Node[]} */\n  const childList = Array.prototype.slice.call(element.childNodes, typeof skip !== 'undefined' ? skip : 0);\n\n  for (let i = 0; i < childList.length; i += 1) {\n    element.removeChild(childList[i]);\n  }\n}\n\nmodule.exports = {\n  debounce: debounce,\n  formatFilename: formatFilename,\n  removeAllChildren: removeAllChildren\n};","map":{"version":3,"names":["debounce","fn","wait","timer","debounced","context","args","arguments","clearTimeout","setTimeout","apply","formatFilename","filename","htmlMatch","exec","sourceMatch","replace","removeAllChildren","element","skip","childList","Array","prototype","slice","call","childNodes","i","length","removeChild","module","exports"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/@pmmmwh/react-refresh-webpack-plugin/overlay/utils.js"],"sourcesContent":["/**\n * Debounce a function to delay invoking until wait (ms) have elapsed since the last invocation.\n * @param {function(...*): *} fn The function to be debounced.\n * @param {number} wait Milliseconds to wait before invoking again.\n * @return {function(...*): void} The debounced function.\n */\nfunction debounce(fn, wait) {\n  /**\n   * A cached setTimeout handler.\n   * @type {number | undefined}\n   */\n  let timer;\n\n  /**\n   * @returns {void}\n   */\n  function debounced() {\n    const context = this;\n    const args = arguments;\n\n    clearTimeout(timer);\n    timer = setTimeout(function () {\n      return fn.apply(context, args);\n    }, wait);\n  }\n\n  return debounced;\n}\n\n/**\n * Prettify a filename from error stacks into the desired format.\n * @param {string} filename The filename to be formatted.\n * @returns {string} The formatted filename.\n */\nfunction formatFilename(filename) {\n  // Strip away protocol and domain for compiled files\n  const htmlMatch = /^https?:\\/\\/(.*)\\/(.*)/.exec(filename);\n  if (htmlMatch && htmlMatch[1] && htmlMatch[2]) {\n    return htmlMatch[2];\n  }\n\n  // Strip everything before the first directory for source files\n  const sourceMatch = /\\/.*?([^./]+[/|\\\\].*)$/.exec(filename);\n  if (sourceMatch && sourceMatch[1]) {\n    return sourceMatch[1].replace(/\\?$/, '');\n  }\n\n  // Unknown filename type, use it as is\n  return filename;\n}\n\n/**\n * Remove all children of an element.\n * @param {HTMLElement} element A valid HTML element.\n * @param {number} [skip] Number of elements to skip removing.\n * @returns {void}\n */\nfunction removeAllChildren(element, skip) {\n  /** @type {Node[]} */\n  const childList = Array.prototype.slice.call(\n    element.childNodes,\n    typeof skip !== 'undefined' ? skip : 0\n  );\n\n  for (let i = 0; i < childList.length; i += 1) {\n    element.removeChild(childList[i]);\n  }\n}\n\nmodule.exports = {\n  debounce: debounce,\n  formatFilename: formatFilename,\n  removeAllChildren: removeAllChildren,\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,QAAT,CAAkBC,EAAlB,EAAsBC,IAAtB,EAA4B;EAC1B;AACF;AACA;AACA;EACE,IAAIC,KAAJ;EAEA;AACF;AACA;;EACE,SAASC,SAAT,GAAqB;IACnB,MAAMC,OAAO,GAAG,IAAhB;IACA,MAAMC,IAAI,GAAGC,SAAb;IAEAC,YAAY,CAACL,KAAD,CAAZ;IACAA,KAAK,GAAGM,UAAU,CAAC,YAAY;MAC7B,OAAOR,EAAE,CAACS,KAAH,CAASL,OAAT,EAAkBC,IAAlB,CAAP;IACD,CAFiB,EAEfJ,IAFe,CAAlB;EAGD;;EAED,OAAOE,SAAP;AACD;AAED;AACA;AACA;AACA;AACA;;;AACA,SAASO,cAAT,CAAwBC,QAAxB,EAAkC;EAChC;EACA,MAAMC,SAAS,GAAG,yBAAyBC,IAAzB,CAA8BF,QAA9B,CAAlB;;EACA,IAAIC,SAAS,IAAIA,SAAS,CAAC,CAAD,CAAtB,IAA6BA,SAAS,CAAC,CAAD,CAA1C,EAA+C;IAC7C,OAAOA,SAAS,CAAC,CAAD,CAAhB;EACD,CAL+B,CAOhC;;;EACA,MAAME,WAAW,GAAG,yBAAyBD,IAAzB,CAA8BF,QAA9B,CAApB;;EACA,IAAIG,WAAW,IAAIA,WAAW,CAAC,CAAD,CAA9B,EAAmC;IACjC,OAAOA,WAAW,CAAC,CAAD,CAAX,CAAeC,OAAf,CAAuB,KAAvB,EAA8B,EAA9B,CAAP;EACD,CAX+B,CAahC;;;EACA,OAAOJ,QAAP;AACD;AAED;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASK,iBAAT,CAA2BC,OAA3B,EAAoCC,IAApC,EAA0C;EACxC;EACA,MAAMC,SAAS,GAAGC,KAAK,CAACC,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAChBN,OAAO,CAACO,UADQ,EAEhB,OAAON,IAAP,KAAgB,WAAhB,GAA8BA,IAA9B,GAAqC,CAFrB,CAAlB;;EAKA,KAAK,IAAIO,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,SAAS,CAACO,MAA9B,EAAsCD,CAAC,IAAI,CAA3C,EAA8C;IAC5CR,OAAO,CAACU,WAAR,CAAoBR,SAAS,CAACM,CAAD,CAA7B;EACD;AACF;;AAEDG,MAAM,CAACC,OAAP,GAAiB;EACf9B,QAAQ,EAAEA,QADK;EAEfW,cAAc,EAAEA,cAFD;EAGfM,iBAAiB,EAAEA;AAHJ,CAAjB"},"metadata":{},"sourceType":"script"}