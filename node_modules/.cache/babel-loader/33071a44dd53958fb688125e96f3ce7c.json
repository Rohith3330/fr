{"ast":null,"code":"var exec = require('child_process').exec;\n\nvar helpers = new function () {\n  var _tests;\n\n  var _names = [];\n\n  var _name;\n\n  var _callback;\n\n  var _runner = function () {\n    if (_name = _names.shift()) {\n      console.log('Running ' + _name);\n\n      _tests[_name]();\n    } else {\n      _callback();\n    }\n  };\n\n  this.exec = function () {\n    var args = Array.prototype.slice.call(arguments);\n    var arg;\n    var cmd = args.shift();\n    var opts = {};\n    var callback; // Optional opts/callback or callback/opts\n\n    while (arg = args.shift()) {\n      if (typeof arg == 'function') {\n        callback = arg;\n      } else {\n        opts = arg;\n      }\n    }\n\n    cmd += ' --trace';\n    var execOpts = opts.execOpts ? opts.execOpts : {};\n    exec(cmd, execOpts, function (err, stdout, stderr) {\n      var out = helpers.trim(stdout);\n\n      if (err) {\n        if (opts.breakOnError === false) {\n          return callback(err);\n        } else {\n          throw err;\n        }\n      }\n\n      if (stderr) {\n        callback(stderr);\n      } else {\n        callback(out);\n      }\n    });\n  };\n\n  this.trim = function (s) {\n    var str = s || '';\n    return str.replace(/^\\s*|\\s*$/g, '');\n  };\n\n  this.parse = function (s) {\n    var str = s || '';\n    str = helpers.trim(str);\n    str = str.replace(/'/g, '\"');\n    return JSON.parse(str);\n  };\n\n  this.run = function (tests, callback) {\n    _tests = tests;\n    _names = Object.keys(tests);\n    _callback = callback;\n\n    _runner();\n  };\n\n  this.next = function () {\n    _runner();\n  };\n}();\nmodule.exports = helpers;","map":{"version":3,"names":["exec","require","helpers","_tests","_names","_name","_callback","_runner","shift","console","log","args","Array","prototype","slice","call","arguments","arg","cmd","opts","callback","execOpts","err","stdout","stderr","out","trim","breakOnError","s","str","replace","parse","JSON","run","tests","Object","keys","next","module","exports"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/jake/test/integration/helpers.js"],"sourcesContent":["var exec = require('child_process').exec;\n\nvar helpers = new (function () {\n  var _tests;\n  var _names = [];\n  var _name;\n  var _callback;\n  var _runner = function () {\n    if ((_name = _names.shift())) {\n      console.log('Running ' + _name);\n      _tests[_name]();\n    }\n    else {\n      _callback();\n    }\n  };\n\n  this.exec = function () {\n    var args = Array.prototype.slice.call(arguments);\n    var arg;\n    var cmd = args.shift();\n    var opts = {};\n    var callback;\n    // Optional opts/callback or callback/opts\n    while ((arg = args.shift())) {\n      if (typeof arg == 'function') {\n        callback = arg;\n      }\n      else {\n        opts = arg;\n      }\n    }\n\n    cmd += ' --trace';\n    var execOpts = opts.execOpts ? opts.execOpts : {};\n    exec(cmd, execOpts, function (err, stdout, stderr) {\n      var out = helpers.trim(stdout);\n      if (err) {\n        if (opts.breakOnError === false) {\n          return callback(err);\n        }\n        else {\n          throw err;\n        }\n      }\n      if (stderr) {\n        callback(stderr);\n      }\n      else {\n        callback(out);\n      }\n    });\n  };\n\n  this.trim = function (s) {\n    var str = s || '';\n    return str.replace(/^\\s*|\\s*$/g, '');\n  };\n\n  this.parse = function (s) {\n    var str = s || '';\n    str = helpers.trim(str);\n    str = str.replace(/'/g, '\"');\n    return JSON.parse(str);\n  };\n\n  this.run = function (tests, callback) {\n    _tests = tests;\n    _names = Object.keys(tests);\n    _callback = callback;\n    _runner();\n  };\n\n  this.next = function () {\n    _runner();\n  };\n\n})();\n\nmodule.exports = helpers;\n"],"mappings":"AAAA,IAAIA,IAAI,GAAGC,OAAO,CAAC,eAAD,CAAP,CAAyBD,IAApC;;AAEA,IAAIE,OAAO,GAAG,IAAK,YAAY;EAC7B,IAAIC,MAAJ;;EACA,IAAIC,MAAM,GAAG,EAAb;;EACA,IAAIC,KAAJ;;EACA,IAAIC,SAAJ;;EACA,IAAIC,OAAO,GAAG,YAAY;IACxB,IAAKF,KAAK,GAAGD,MAAM,CAACI,KAAP,EAAb,EAA8B;MAC5BC,OAAO,CAACC,GAAR,CAAY,aAAaL,KAAzB;;MACAF,MAAM,CAACE,KAAD,CAAN;IACD,CAHD,MAIK;MACHC,SAAS;IACV;EACF,CARD;;EAUA,KAAKN,IAAL,GAAY,YAAY;IACtB,IAAIW,IAAI,GAAGC,KAAK,CAACC,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2BC,SAA3B,CAAX;IACA,IAAIC,GAAJ;IACA,IAAIC,GAAG,GAAGP,IAAI,CAACH,KAAL,EAAV;IACA,IAAIW,IAAI,GAAG,EAAX;IACA,IAAIC,QAAJ,CALsB,CAMtB;;IACA,OAAQH,GAAG,GAAGN,IAAI,CAACH,KAAL,EAAd,EAA6B;MAC3B,IAAI,OAAOS,GAAP,IAAc,UAAlB,EAA8B;QAC5BG,QAAQ,GAAGH,GAAX;MACD,CAFD,MAGK;QACHE,IAAI,GAAGF,GAAP;MACD;IACF;;IAEDC,GAAG,IAAI,UAAP;IACA,IAAIG,QAAQ,GAAGF,IAAI,CAACE,QAAL,GAAgBF,IAAI,CAACE,QAArB,GAAgC,EAA/C;IACArB,IAAI,CAACkB,GAAD,EAAMG,QAAN,EAAgB,UAAUC,GAAV,EAAeC,MAAf,EAAuBC,MAAvB,EAA+B;MACjD,IAAIC,GAAG,GAAGvB,OAAO,CAACwB,IAAR,CAAaH,MAAb,CAAV;;MACA,IAAID,GAAJ,EAAS;QACP,IAAIH,IAAI,CAACQ,YAAL,KAAsB,KAA1B,EAAiC;UAC/B,OAAOP,QAAQ,CAACE,GAAD,CAAf;QACD,CAFD,MAGK;UACH,MAAMA,GAAN;QACD;MACF;;MACD,IAAIE,MAAJ,EAAY;QACVJ,QAAQ,CAACI,MAAD,CAAR;MACD,CAFD,MAGK;QACHJ,QAAQ,CAACK,GAAD,CAAR;MACD;IACF,CAhBG,CAAJ;EAiBD,CAnCD;;EAqCA,KAAKC,IAAL,GAAY,UAAUE,CAAV,EAAa;IACvB,IAAIC,GAAG,GAAGD,CAAC,IAAI,EAAf;IACA,OAAOC,GAAG,CAACC,OAAJ,CAAY,YAAZ,EAA0B,EAA1B,CAAP;EACD,CAHD;;EAKA,KAAKC,KAAL,GAAa,UAAUH,CAAV,EAAa;IACxB,IAAIC,GAAG,GAAGD,CAAC,IAAI,EAAf;IACAC,GAAG,GAAG3B,OAAO,CAACwB,IAAR,CAAaG,GAAb,CAAN;IACAA,GAAG,GAAGA,GAAG,CAACC,OAAJ,CAAY,IAAZ,EAAkB,GAAlB,CAAN;IACA,OAAOE,IAAI,CAACD,KAAL,CAAWF,GAAX,CAAP;EACD,CALD;;EAOA,KAAKI,GAAL,GAAW,UAAUC,KAAV,EAAiBd,QAAjB,EAA2B;IACpCjB,MAAM,GAAG+B,KAAT;IACA9B,MAAM,GAAG+B,MAAM,CAACC,IAAP,CAAYF,KAAZ,CAAT;IACA5B,SAAS,GAAGc,QAAZ;;IACAb,OAAO;EACR,CALD;;EAOA,KAAK8B,IAAL,GAAY,YAAY;IACtB9B,OAAO;EACR,CAFD;AAID,CA3Ea,EAAd;AA6EA+B,MAAM,CAACC,OAAP,GAAiBrC,OAAjB"},"metadata":{},"sourceType":"script"}