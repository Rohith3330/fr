{"ast":null,"code":"var resolveKeyword = require('css-tree').keyword;\n\nvar walk = require('css-tree').walk;\n\nvar generate = require('css-tree').generate;\n\nvar createDeclarationIndexer = require('./createDeclarationIndexer');\n\nvar processSelector = require('./processSelector');\n\nmodule.exports = function prepare(ast, options) {\n  var markDeclaration = createDeclarationIndexer();\n  walk(ast, {\n    visit: 'Rule',\n    enter: function processRule(node) {\n      node.block.children.each(markDeclaration);\n      processSelector(node, options.usage);\n    }\n  });\n  walk(ast, {\n    visit: 'Atrule',\n    enter: function (node) {\n      if (node.prelude) {\n        node.prelude.id = null; // pre-init property to avoid multiple hidden class for generate\n\n        node.prelude.id = generate(node.prelude);\n      } // compare keyframe selectors by its values\n      // NOTE: still no clarification about problems with keyframes selector grouping (issue #197)\n\n\n      if (resolveKeyword(node.name).basename === 'keyframes') {\n        node.block.avoidRulesMerge = true;\n        /* probably we don't need to prevent those merges for @keyframes\n           TODO: need to be checked */\n\n        node.block.children.each(function (rule) {\n          rule.prelude.children.each(function (simpleselector) {\n            simpleselector.compareMarker = simpleselector.id;\n          });\n        });\n      }\n    }\n  });\n  return {\n    declaration: markDeclaration\n  };\n};","map":{"version":3,"names":["resolveKeyword","require","keyword","walk","generate","createDeclarationIndexer","processSelector","module","exports","prepare","ast","options","markDeclaration","visit","enter","processRule","node","block","children","each","usage","prelude","id","name","basename","avoidRulesMerge","rule","simpleselector","compareMarker","declaration"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/csso/lib/restructure/prepare/index.js"],"sourcesContent":["var resolveKeyword = require('css-tree').keyword;\nvar walk = require('css-tree').walk;\nvar generate = require('css-tree').generate;\nvar createDeclarationIndexer = require('./createDeclarationIndexer');\nvar processSelector = require('./processSelector');\n\nmodule.exports = function prepare(ast, options) {\n    var markDeclaration = createDeclarationIndexer();\n\n    walk(ast, {\n        visit: 'Rule',\n        enter: function processRule(node) {\n            node.block.children.each(markDeclaration);\n            processSelector(node, options.usage);\n        }\n    });\n\n    walk(ast, {\n        visit: 'Atrule',\n        enter: function(node) {\n            if (node.prelude) {\n                node.prelude.id = null; // pre-init property to avoid multiple hidden class for generate\n                node.prelude.id = generate(node.prelude);\n            }\n\n            // compare keyframe selectors by its values\n            // NOTE: still no clarification about problems with keyframes selector grouping (issue #197)\n            if (resolveKeyword(node.name).basename === 'keyframes') {\n                node.block.avoidRulesMerge = true;  /* probably we don't need to prevent those merges for @keyframes\n                                                       TODO: need to be checked */\n                node.block.children.each(function(rule) {\n                    rule.prelude.children.each(function(simpleselector) {\n                        simpleselector.compareMarker = simpleselector.id;\n                    });\n                });\n            }\n        }\n    });\n\n    return {\n        declaration: markDeclaration\n    };\n};\n"],"mappings":"AAAA,IAAIA,cAAc,GAAGC,OAAO,CAAC,UAAD,CAAP,CAAoBC,OAAzC;;AACA,IAAIC,IAAI,GAAGF,OAAO,CAAC,UAAD,CAAP,CAAoBE,IAA/B;;AACA,IAAIC,QAAQ,GAAGH,OAAO,CAAC,UAAD,CAAP,CAAoBG,QAAnC;;AACA,IAAIC,wBAAwB,GAAGJ,OAAO,CAAC,4BAAD,CAAtC;;AACA,IAAIK,eAAe,GAAGL,OAAO,CAAC,mBAAD,CAA7B;;AAEAM,MAAM,CAACC,OAAP,GAAiB,SAASC,OAAT,CAAiBC,GAAjB,EAAsBC,OAAtB,EAA+B;EAC5C,IAAIC,eAAe,GAAGP,wBAAwB,EAA9C;EAEAF,IAAI,CAACO,GAAD,EAAM;IACNG,KAAK,EAAE,MADD;IAENC,KAAK,EAAE,SAASC,WAAT,CAAqBC,IAArB,EAA2B;MAC9BA,IAAI,CAACC,KAAL,CAAWC,QAAX,CAAoBC,IAApB,CAAyBP,eAAzB;MACAN,eAAe,CAACU,IAAD,EAAOL,OAAO,CAACS,KAAf,CAAf;IACH;EALK,CAAN,CAAJ;EAQAjB,IAAI,CAACO,GAAD,EAAM;IACNG,KAAK,EAAE,QADD;IAENC,KAAK,EAAE,UAASE,IAAT,EAAe;MAClB,IAAIA,IAAI,CAACK,OAAT,EAAkB;QACdL,IAAI,CAACK,OAAL,CAAaC,EAAb,GAAkB,IAAlB,CADc,CACU;;QACxBN,IAAI,CAACK,OAAL,CAAaC,EAAb,GAAkBlB,QAAQ,CAACY,IAAI,CAACK,OAAN,CAA1B;MACH,CAJiB,CAMlB;MACA;;;MACA,IAAIrB,cAAc,CAACgB,IAAI,CAACO,IAAN,CAAd,CAA0BC,QAA1B,KAAuC,WAA3C,EAAwD;QACpDR,IAAI,CAACC,KAAL,CAAWQ,eAAX,GAA6B,IAA7B;QAAoC;AACpD;;QACgBT,IAAI,CAACC,KAAL,CAAWC,QAAX,CAAoBC,IAApB,CAAyB,UAASO,IAAT,EAAe;UACpCA,IAAI,CAACL,OAAL,CAAaH,QAAb,CAAsBC,IAAtB,CAA2B,UAASQ,cAAT,EAAyB;YAChDA,cAAc,CAACC,aAAf,GAA+BD,cAAc,CAACL,EAA9C;UACH,CAFD;QAGH,CAJD;MAKH;IACJ;EAnBK,CAAN,CAAJ;EAsBA,OAAO;IACHO,WAAW,EAAEjB;EADV,CAAP;AAGH,CApCD"},"metadata":{},"sourceType":"script"}