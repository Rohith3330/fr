{"ast":null,"code":"/**\n * @fileoverview Prevent creating unstable components inside components\n * @author Ari Perkkiö\n */\n'use strict';\n\nconst Components = require('../util/Components');\n\nconst docsUrl = require('../util/docsUrl');\n\nconst isCreateElement = require('../util/isCreateElement');\n\nconst report = require('../util/report'); // ------------------------------------------------------------------------------\n// Constants\n// ------------------------------------------------------------------------------\n\n\nconst COMPONENT_AS_PROPS_INFO = ' If you want to allow component creation in props, set allowAsProps option to true.';\nconst HOOK_REGEXP = /^use[A-Z0-9].*$/; // ------------------------------------------------------------------------------\n// Helpers\n// ------------------------------------------------------------------------------\n\n/**\n * Generate error message with given parent component name\n * @param {String} parentName Name of the parent component, if known\n * @returns {String} Error message with parent component name\n */\n\nfunction generateErrorMessageWithParentName(parentName) {\n  return `Do not define components during render. React will see a new component type on every render and destroy the entire subtree’s DOM nodes and state (https://reactjs.org/docs/reconciliation.html#elements-of-different-types). Instead, move this component definition out of the parent component${parentName ? ` “${parentName}” ` : ' '}and pass data as props.`;\n}\n/**\n * Check whether given text starts with `render`. Comparison is case-sensitive.\n * @param {String} text Text to validate\n * @returns {Boolean}\n */\n\n\nfunction startsWithRender(text) {\n  return (text || '').startsWith('render');\n}\n/**\n * Get closest parent matching given matcher\n * @param {ASTNode} node The AST node\n * @param {Context} context eslint context\n * @param {Function} matcher Method used to match the parent\n * @returns {ASTNode} The matching parent node, if any\n */\n\n\nfunction getClosestMatchingParent(node, context, matcher) {\n  if (!node || !node.parent || node.parent.type === 'Program') {\n    return;\n  }\n\n  if (matcher(node.parent, context)) {\n    return node.parent;\n  }\n\n  return getClosestMatchingParent(node.parent, context, matcher);\n}\n/**\n * Matcher used to check whether given node is a `createElement` call\n * @param {ASTNode} node The AST node\n * @param {Context} context eslint context\n * @returns {Boolean} True if node is a `createElement` call, false if not\n */\n\n\nfunction isCreateElementMatcher(node, context) {\n  return node && node.type === 'CallExpression' && isCreateElement(node, context);\n}\n/**\n * Matcher used to check whether given node is a `ObjectExpression`\n * @param {ASTNode} node The AST node\n * @returns {Boolean} True if node is a `ObjectExpression`, false if not\n */\n\n\nfunction isObjectExpressionMatcher(node) {\n  return node && node.type === 'ObjectExpression';\n}\n/**\n * Matcher used to check whether given node is a `JSXExpressionContainer`\n * @param {ASTNode} node The AST node\n * @returns {Boolean} True if node is a `JSXExpressionContainer`, false if not\n */\n\n\nfunction isJSXExpressionContainerMatcher(node) {\n  return node && node.type === 'JSXExpressionContainer';\n}\n/**\n * Matcher used to check whether given node is a `JSXAttribute` of `JSXExpressionContainer`\n * @param {ASTNode} node The AST node\n * @returns {Boolean} True if node is a `JSXAttribute` of `JSXExpressionContainer`, false if not\n */\n\n\nfunction isJSXAttributeOfExpressionContainerMatcher(node) {\n  return node && node.type === 'JSXAttribute' && node.value && node.value.type === 'JSXExpressionContainer';\n}\n/**\n * Matcher used to check whether given node is an object `Property`\n * @param {ASTNode} node The AST node\n * @returns {Boolean} True if node is a `Property`, false if not\n */\n\n\nfunction isPropertyOfObjectExpressionMatcher(node) {\n  return node && node.parent && node.parent.type === 'Property';\n}\n/**\n * Matcher used to check whether given node is a `CallExpression`\n * @param {ASTNode} node The AST node\n * @returns {Boolean} True if node is a `CallExpression`, false if not\n */\n\n\nfunction isCallExpressionMatcher(node) {\n  return node && node.type === 'CallExpression';\n}\n/**\n * Check whether given node or its parent is directly inside `map` call\n * ```jsx\n * {items.map(item => <li />)}\n * ```\n * @param {ASTNode} node The AST node\n * @returns {Boolean} True if node is directly inside `map` call, false if not\n */\n\n\nfunction isMapCall(node) {\n  return node && node.callee && node.callee.property && node.callee.property.name === 'map';\n}\n/**\n * Check whether given node is `ReturnStatement` of a React hook\n * @param {ASTNode} node The AST node\n * @param {Context} context eslint context\n * @returns {Boolean} True if node is a `ReturnStatement` of a React hook, false if not\n */\n\n\nfunction isReturnStatementOfHook(node, context) {\n  if (!node || !node.parent || node.parent.type !== 'ReturnStatement') {\n    return false;\n  }\n\n  const callExpression = getClosestMatchingParent(node, context, isCallExpressionMatcher);\n  return callExpression && callExpression.callee && HOOK_REGEXP.test(callExpression.callee.name);\n}\n/**\n * Check whether given node is declared inside a render prop\n * ```jsx\n * <Component renderFooter={() => <div />} />\n * <Component>{() => <div />}</Component>\n * ```\n * @param {ASTNode} node The AST node\n * @param {Context} context eslint context\n * @returns {Boolean} True if component is declared inside a render prop, false if not\n */\n\n\nfunction isComponentInRenderProp(node, context) {\n  if (node && node.parent && node.parent.type === 'Property' && node.parent.key && startsWithRender(node.parent.key.name)) {\n    return true;\n  } // Check whether component is a render prop used as direct children, e.g. <Component>{() => <div />}</Component>\n\n\n  if (node && node.parent && node.parent.type === 'JSXExpressionContainer' && node.parent.parent && node.parent.parent.type === 'JSXElement') {\n    return true;\n  }\n\n  const jsxExpressionContainer = getClosestMatchingParent(node, context, isJSXExpressionContainerMatcher); // Check whether prop name indicates accepted patterns\n\n  if (jsxExpressionContainer && jsxExpressionContainer.parent && jsxExpressionContainer.parent.type === 'JSXAttribute' && jsxExpressionContainer.parent.name && jsxExpressionContainer.parent.name.type === 'JSXIdentifier') {\n    const propName = jsxExpressionContainer.parent.name.name; // Starts with render, e.g. <Component renderFooter={() => <div />} />\n\n    if (startsWithRender(propName)) {\n      return true;\n    } // Uses children prop explicitly, e.g. <Component children={() => <div />} />\n\n\n    if (propName === 'children') {\n      return true;\n    }\n  }\n\n  return false;\n}\n/**\n * Check whether given node is declared directly inside a render property\n * ```jsx\n * const rows = { render: () => <div /> }\n * <Component rows={ [{ render: () => <div /> }] } />\n *  ```\n * @param {ASTNode} node The AST node\n * @returns {Boolean} True if component is declared inside a render property, false if not\n */\n\n\nfunction isDirectValueOfRenderProperty(node) {\n  return node && node.parent && node.parent.type === 'Property' && node.parent.key && node.parent.key.type === 'Identifier' && startsWithRender(node.parent.key.name);\n}\n/**\n * Resolve the component name of given node\n * @param {ASTNode} node The AST node of the component\n * @returns {String} Name of the component, if any\n */\n\n\nfunction resolveComponentName(node) {\n  const parentName = node.id && node.id.name;\n  if (parentName) return parentName;\n  return node.type === 'ArrowFunctionExpression' && node.parent && node.parent.id && node.parent.id.name;\n} // ------------------------------------------------------------------------------\n// Rule Definition\n// ------------------------------------------------------------------------------\n\n\nmodule.exports = {\n  meta: {\n    docs: {\n      description: 'Disallow creating unstable components inside components',\n      category: 'Possible Errors',\n      recommended: false,\n      url: docsUrl('no-unstable-nested-components')\n    },\n    schema: [{\n      type: 'object',\n      properties: {\n        customValidators: {\n          type: 'array',\n          items: {\n            type: 'string'\n          }\n        },\n        allowAsProps: {\n          type: 'boolean'\n        }\n      },\n      additionalProperties: false\n    }]\n  },\n  create: Components.detect((context, components, utils) => {\n    const allowAsProps = context.options.some(option => option && option.allowAsProps);\n    /**\n     * Check whether given node is declared inside class component's render block\n     * ```jsx\n     * class Component extends React.Component {\n     *   render() {\n     *     class NestedClassComponent extends React.Component {\n     * ...\n     * ```\n     * @param {ASTNode} node The AST node being checked\n     * @returns {Boolean} True if node is inside class component's render block, false if not\n     */\n\n    function isInsideRenderMethod(node) {\n      const parentComponent = utils.getParentComponent();\n\n      if (!parentComponent || parentComponent.type !== 'ClassDeclaration') {\n        return false;\n      }\n\n      return node && node.parent && node.parent.type === 'MethodDefinition' && node.parent.key && node.parent.key.name === 'render';\n    }\n    /**\n     * Check whether given node is a function component declared inside class component.\n     * Util's component detection fails to detect function components inside class components.\n     * ```jsx\n     * class Component extends React.Component {\n     *  render() {\n     *    const NestedComponent = () => <div />;\n     * ...\n     * ```\n     * @param {ASTNode} node The AST node being checked\n     * @returns {Boolean} True if given node a function component declared inside class component, false if not\n     */\n\n\n    function isFunctionComponentInsideClassComponent(node) {\n      const parentComponent = utils.getParentComponent();\n      const parentStatelessComponent = utils.getParentStatelessComponent();\n      return parentComponent && parentStatelessComponent && parentComponent.type === 'ClassDeclaration' && utils.getStatelessComponent(parentStatelessComponent) && utils.isReturningJSX(node);\n    }\n    /**\n     * Check whether given node is declared inside `createElement` call's props\n     * ```js\n     * React.createElement(Component, {\n     *   footer: () => React.createElement(\"div\", null)\n     * })\n     * ```\n     * @param {ASTNode} node The AST node\n     * @returns {Boolean} True if node is declare inside `createElement` call's props, false if not\n     */\n\n\n    function isComponentInsideCreateElementsProp(node) {\n      if (!components.get(node)) {\n        return false;\n      }\n\n      const createElementParent = getClosestMatchingParent(node, context, isCreateElementMatcher);\n      return createElementParent && createElementParent.arguments && createElementParent.arguments[1] === getClosestMatchingParent(node, context, isObjectExpressionMatcher);\n    }\n    /**\n     * Check whether given node is declared inside a component/object prop.\n     * ```jsx\n     * <Component footer={() => <div />} />\n     * { footer: () => <div /> }\n     * ```\n     * @param {ASTNode} node The AST node being checked\n     * @returns {Boolean} True if node is a component declared inside prop, false if not\n     */\n\n\n    function isComponentInProp(node) {\n      if (isPropertyOfObjectExpressionMatcher(node)) {\n        return utils.isReturningJSX(node);\n      }\n\n      const jsxAttribute = getClosestMatchingParent(node, context, isJSXAttributeOfExpressionContainerMatcher);\n\n      if (!jsxAttribute) {\n        return isComponentInsideCreateElementsProp(node);\n      }\n\n      return utils.isReturningJSX(node);\n    }\n    /**\n     * Check whether given node is a stateless component returning non-JSX\n     * ```jsx\n     * {{ a: () => null }}\n     * ```\n     * @param {ASTNode} node The AST node being checked\n     * @returns {Boolean} True if node is a stateless component returning non-JSX, false if not\n     */\n\n\n    function isStatelessComponentReturningNull(node) {\n      const component = utils.getStatelessComponent(node);\n      return component && !utils.isReturningJSX(component);\n    }\n    /**\n     * Check whether given node is a unstable nested component\n     * @param {ASTNode} node The AST node being checked\n     */\n\n\n    function validate(node) {\n      if (!node || !node.parent) {\n        return;\n      }\n\n      const isDeclaredInsideProps = isComponentInProp(node);\n\n      if (!components.get(node) && !isFunctionComponentInsideClassComponent(node) && !isDeclaredInsideProps) {\n        return;\n      }\n\n      if ( // Support allowAsProps option\n      isDeclaredInsideProps && (allowAsProps || isComponentInRenderProp(node, context)) // Prevent reporting components created inside Array.map calls\n      || isMapCall(node) || isMapCall(node.parent) // Do not mark components declared inside hooks (or falsy '() => null' clean-up methods)\n      || isReturnStatementOfHook(node, context) // Do not mark objects containing render methods\n      || isDirectValueOfRenderProperty(node) // Prevent reporting nested class components twice\n      || isInsideRenderMethod(node) // Prevent falsely reporting detected \"components\" which do not return JSX\n      || isStatelessComponentReturningNull(node)) {\n        return;\n      } // Get the closest parent component\n\n\n      const parentComponent = getClosestMatchingParent(node, context, nodeToMatch => components.get(nodeToMatch));\n\n      if (parentComponent) {\n        const parentName = resolveComponentName(parentComponent); // Exclude lowercase parents, e.g. function createTestComponent()\n        // React-dom prevents creating lowercase components\n\n        if (parentName && parentName[0] === parentName[0].toLowerCase()) {\n          return;\n        }\n\n        let message = generateErrorMessageWithParentName(parentName); // Add information about allowAsProps option when component is declared inside prop\n\n        if (isDeclaredInsideProps && !allowAsProps) {\n          message += COMPONENT_AS_PROPS_INFO;\n        }\n\n        report(context, message, null, {\n          node\n        });\n      }\n    } // --------------------------------------------------------------------------\n    // Public\n    // --------------------------------------------------------------------------\n\n\n    return {\n      FunctionDeclaration(node) {\n        validate(node);\n      },\n\n      ArrowFunctionExpression(node) {\n        validate(node);\n      },\n\n      FunctionExpression(node) {\n        validate(node);\n      },\n\n      ClassDeclaration(node) {\n        validate(node);\n      },\n\n      CallExpression(node) {\n        validate(node);\n      }\n\n    };\n  })\n};","map":{"version":3,"names":["Components","require","docsUrl","isCreateElement","report","COMPONENT_AS_PROPS_INFO","HOOK_REGEXP","generateErrorMessageWithParentName","parentName","startsWithRender","text","startsWith","getClosestMatchingParent","node","context","matcher","parent","type","isCreateElementMatcher","isObjectExpressionMatcher","isJSXExpressionContainerMatcher","isJSXAttributeOfExpressionContainerMatcher","value","isPropertyOfObjectExpressionMatcher","isCallExpressionMatcher","isMapCall","callee","property","name","isReturnStatementOfHook","callExpression","test","isComponentInRenderProp","key","jsxExpressionContainer","propName","isDirectValueOfRenderProperty","resolveComponentName","id","module","exports","meta","docs","description","category","recommended","url","schema","properties","customValidators","items","allowAsProps","additionalProperties","create","detect","components","utils","options","some","option","isInsideRenderMethod","parentComponent","getParentComponent","isFunctionComponentInsideClassComponent","parentStatelessComponent","getParentStatelessComponent","getStatelessComponent","isReturningJSX","isComponentInsideCreateElementsProp","get","createElementParent","arguments","isComponentInProp","jsxAttribute","isStatelessComponentReturningNull","component","validate","isDeclaredInsideProps","nodeToMatch","toLowerCase","message","FunctionDeclaration","ArrowFunctionExpression","FunctionExpression","ClassDeclaration","CallExpression"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/eslint-plugin-react/lib/rules/no-unstable-nested-components.js"],"sourcesContent":["/**\n * @fileoverview Prevent creating unstable components inside components\n * @author Ari Perkkiö\n */\n\n'use strict';\n\nconst Components = require('../util/Components');\nconst docsUrl = require('../util/docsUrl');\nconst isCreateElement = require('../util/isCreateElement');\nconst report = require('../util/report');\n\n// ------------------------------------------------------------------------------\n// Constants\n// ------------------------------------------------------------------------------\n\nconst COMPONENT_AS_PROPS_INFO = ' If you want to allow component creation in props, set allowAsProps option to true.';\nconst HOOK_REGEXP = /^use[A-Z0-9].*$/;\n\n// ------------------------------------------------------------------------------\n// Helpers\n// ------------------------------------------------------------------------------\n\n/**\n * Generate error message with given parent component name\n * @param {String} parentName Name of the parent component, if known\n * @returns {String} Error message with parent component name\n */\nfunction generateErrorMessageWithParentName(parentName) {\n  return `Do not define components during render. React will see a new component type on every render and destroy the entire subtree’s DOM nodes and state (https://reactjs.org/docs/reconciliation.html#elements-of-different-types). Instead, move this component definition out of the parent component${parentName ? ` “${parentName}” ` : ' '}and pass data as props.`;\n}\n\n/**\n * Check whether given text starts with `render`. Comparison is case-sensitive.\n * @param {String} text Text to validate\n * @returns {Boolean}\n */\nfunction startsWithRender(text) {\n  return (text || '').startsWith('render');\n}\n\n/**\n * Get closest parent matching given matcher\n * @param {ASTNode} node The AST node\n * @param {Context} context eslint context\n * @param {Function} matcher Method used to match the parent\n * @returns {ASTNode} The matching parent node, if any\n */\nfunction getClosestMatchingParent(node, context, matcher) {\n  if (!node || !node.parent || node.parent.type === 'Program') {\n    return;\n  }\n\n  if (matcher(node.parent, context)) {\n    return node.parent;\n  }\n\n  return getClosestMatchingParent(node.parent, context, matcher);\n}\n\n/**\n * Matcher used to check whether given node is a `createElement` call\n * @param {ASTNode} node The AST node\n * @param {Context} context eslint context\n * @returns {Boolean} True if node is a `createElement` call, false if not\n */\nfunction isCreateElementMatcher(node, context) {\n  return (\n    node\n    && node.type === 'CallExpression'\n    && isCreateElement(node, context)\n  );\n}\n\n/**\n * Matcher used to check whether given node is a `ObjectExpression`\n * @param {ASTNode} node The AST node\n * @returns {Boolean} True if node is a `ObjectExpression`, false if not\n */\nfunction isObjectExpressionMatcher(node) {\n  return node && node.type === 'ObjectExpression';\n}\n\n/**\n * Matcher used to check whether given node is a `JSXExpressionContainer`\n * @param {ASTNode} node The AST node\n * @returns {Boolean} True if node is a `JSXExpressionContainer`, false if not\n */\nfunction isJSXExpressionContainerMatcher(node) {\n  return node && node.type === 'JSXExpressionContainer';\n}\n\n/**\n * Matcher used to check whether given node is a `JSXAttribute` of `JSXExpressionContainer`\n * @param {ASTNode} node The AST node\n * @returns {Boolean} True if node is a `JSXAttribute` of `JSXExpressionContainer`, false if not\n */\nfunction isJSXAttributeOfExpressionContainerMatcher(node) {\n  return (\n    node\n    && node.type === 'JSXAttribute'\n    && node.value\n    && node.value.type === 'JSXExpressionContainer'\n  );\n}\n\n/**\n * Matcher used to check whether given node is an object `Property`\n * @param {ASTNode} node The AST node\n * @returns {Boolean} True if node is a `Property`, false if not\n */\nfunction isPropertyOfObjectExpressionMatcher(node) {\n  return (\n    node\n    && node.parent\n    && node.parent.type === 'Property'\n  );\n}\n\n/**\n * Matcher used to check whether given node is a `CallExpression`\n * @param {ASTNode} node The AST node\n * @returns {Boolean} True if node is a `CallExpression`, false if not\n */\nfunction isCallExpressionMatcher(node) {\n  return node && node.type === 'CallExpression';\n}\n\n/**\n * Check whether given node or its parent is directly inside `map` call\n * ```jsx\n * {items.map(item => <li />)}\n * ```\n * @param {ASTNode} node The AST node\n * @returns {Boolean} True if node is directly inside `map` call, false if not\n */\nfunction isMapCall(node) {\n  return (\n    node\n    && node.callee\n    && node.callee.property\n    && node.callee.property.name === 'map'\n  );\n}\n\n/**\n * Check whether given node is `ReturnStatement` of a React hook\n * @param {ASTNode} node The AST node\n * @param {Context} context eslint context\n * @returns {Boolean} True if node is a `ReturnStatement` of a React hook, false if not\n */\nfunction isReturnStatementOfHook(node, context) {\n  if (\n    !node\n    || !node.parent\n    || node.parent.type !== 'ReturnStatement'\n  ) {\n    return false;\n  }\n\n  const callExpression = getClosestMatchingParent(node, context, isCallExpressionMatcher);\n  return (\n    callExpression\n    && callExpression.callee\n    && HOOK_REGEXP.test(callExpression.callee.name)\n  );\n}\n\n/**\n * Check whether given node is declared inside a render prop\n * ```jsx\n * <Component renderFooter={() => <div />} />\n * <Component>{() => <div />}</Component>\n * ```\n * @param {ASTNode} node The AST node\n * @param {Context} context eslint context\n * @returns {Boolean} True if component is declared inside a render prop, false if not\n */\nfunction isComponentInRenderProp(node, context) {\n  if (\n    node\n    && node.parent\n    && node.parent.type === 'Property'\n    && node.parent.key\n    && startsWithRender(node.parent.key.name)\n  ) {\n    return true;\n  }\n\n  // Check whether component is a render prop used as direct children, e.g. <Component>{() => <div />}</Component>\n  if (\n    node\n    && node.parent\n    && node.parent.type === 'JSXExpressionContainer'\n    && node.parent.parent\n    && node.parent.parent.type === 'JSXElement'\n  ) {\n    return true;\n  }\n\n  const jsxExpressionContainer = getClosestMatchingParent(node, context, isJSXExpressionContainerMatcher);\n\n  // Check whether prop name indicates accepted patterns\n  if (\n    jsxExpressionContainer\n    && jsxExpressionContainer.parent\n    && jsxExpressionContainer.parent.type === 'JSXAttribute'\n    && jsxExpressionContainer.parent.name\n    && jsxExpressionContainer.parent.name.type === 'JSXIdentifier'\n  ) {\n    const propName = jsxExpressionContainer.parent.name.name;\n\n    // Starts with render, e.g. <Component renderFooter={() => <div />} />\n    if (startsWithRender(propName)) {\n      return true;\n    }\n\n    // Uses children prop explicitly, e.g. <Component children={() => <div />} />\n    if (propName === 'children') {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n/**\n * Check whether given node is declared directly inside a render property\n * ```jsx\n * const rows = { render: () => <div /> }\n * <Component rows={ [{ render: () => <div /> }] } />\n *  ```\n * @param {ASTNode} node The AST node\n * @returns {Boolean} True if component is declared inside a render property, false if not\n */\nfunction isDirectValueOfRenderProperty(node) {\n  return (\n    node\n    && node.parent\n    && node.parent.type === 'Property'\n    && node.parent.key\n    && node.parent.key.type === 'Identifier'\n    && startsWithRender(node.parent.key.name)\n  );\n}\n\n/**\n * Resolve the component name of given node\n * @param {ASTNode} node The AST node of the component\n * @returns {String} Name of the component, if any\n */\nfunction resolveComponentName(node) {\n  const parentName = node.id && node.id.name;\n  if (parentName) return parentName;\n\n  return (\n    node.type === 'ArrowFunctionExpression'\n    && node.parent\n    && node.parent.id\n    && node.parent.id.name\n  );\n}\n\n// ------------------------------------------------------------------------------\n// Rule Definition\n// ------------------------------------------------------------------------------\n\nmodule.exports = {\n  meta: {\n    docs: {\n      description: 'Disallow creating unstable components inside components',\n      category: 'Possible Errors',\n      recommended: false,\n      url: docsUrl('no-unstable-nested-components'),\n    },\n    schema: [{\n      type: 'object',\n      properties: {\n        customValidators: {\n          type: 'array',\n          items: {\n            type: 'string',\n          },\n        },\n        allowAsProps: {\n          type: 'boolean',\n        },\n      },\n      additionalProperties: false,\n    }],\n  },\n\n  create: Components.detect((context, components, utils) => {\n    const allowAsProps = context.options.some((option) => option && option.allowAsProps);\n\n    /**\n     * Check whether given node is declared inside class component's render block\n     * ```jsx\n     * class Component extends React.Component {\n     *   render() {\n     *     class NestedClassComponent extends React.Component {\n     * ...\n     * ```\n     * @param {ASTNode} node The AST node being checked\n     * @returns {Boolean} True if node is inside class component's render block, false if not\n     */\n    function isInsideRenderMethod(node) {\n      const parentComponent = utils.getParentComponent();\n\n      if (!parentComponent || parentComponent.type !== 'ClassDeclaration') {\n        return false;\n      }\n\n      return (\n        node\n        && node.parent\n        && node.parent.type === 'MethodDefinition'\n        && node.parent.key\n        && node.parent.key.name === 'render'\n      );\n    }\n\n    /**\n     * Check whether given node is a function component declared inside class component.\n     * Util's component detection fails to detect function components inside class components.\n     * ```jsx\n     * class Component extends React.Component {\n     *  render() {\n     *    const NestedComponent = () => <div />;\n     * ...\n     * ```\n     * @param {ASTNode} node The AST node being checked\n     * @returns {Boolean} True if given node a function component declared inside class component, false if not\n     */\n    function isFunctionComponentInsideClassComponent(node) {\n      const parentComponent = utils.getParentComponent();\n      const parentStatelessComponent = utils.getParentStatelessComponent();\n\n      return (\n        parentComponent\n        && parentStatelessComponent\n        && parentComponent.type === 'ClassDeclaration'\n        && utils.getStatelessComponent(parentStatelessComponent)\n        && utils.isReturningJSX(node)\n      );\n    }\n\n    /**\n     * Check whether given node is declared inside `createElement` call's props\n     * ```js\n     * React.createElement(Component, {\n     *   footer: () => React.createElement(\"div\", null)\n     * })\n     * ```\n     * @param {ASTNode} node The AST node\n     * @returns {Boolean} True if node is declare inside `createElement` call's props, false if not\n     */\n    function isComponentInsideCreateElementsProp(node) {\n      if (!components.get(node)) {\n        return false;\n      }\n\n      const createElementParent = getClosestMatchingParent(node, context, isCreateElementMatcher);\n\n      return (\n        createElementParent\n        && createElementParent.arguments\n        && createElementParent.arguments[1] === getClosestMatchingParent(node, context, isObjectExpressionMatcher)\n      );\n    }\n\n    /**\n     * Check whether given node is declared inside a component/object prop.\n     * ```jsx\n     * <Component footer={() => <div />} />\n     * { footer: () => <div /> }\n     * ```\n     * @param {ASTNode} node The AST node being checked\n     * @returns {Boolean} True if node is a component declared inside prop, false if not\n     */\n    function isComponentInProp(node) {\n      if (isPropertyOfObjectExpressionMatcher(node)) {\n        return utils.isReturningJSX(node);\n      }\n\n      const jsxAttribute = getClosestMatchingParent(node, context, isJSXAttributeOfExpressionContainerMatcher);\n\n      if (!jsxAttribute) {\n        return isComponentInsideCreateElementsProp(node);\n      }\n\n      return utils.isReturningJSX(node);\n    }\n\n    /**\n     * Check whether given node is a stateless component returning non-JSX\n     * ```jsx\n     * {{ a: () => null }}\n     * ```\n     * @param {ASTNode} node The AST node being checked\n     * @returns {Boolean} True if node is a stateless component returning non-JSX, false if not\n     */\n    function isStatelessComponentReturningNull(node) {\n      const component = utils.getStatelessComponent(node);\n\n      return component && !utils.isReturningJSX(component);\n    }\n\n    /**\n     * Check whether given node is a unstable nested component\n     * @param {ASTNode} node The AST node being checked\n     */\n    function validate(node) {\n      if (!node || !node.parent) {\n        return;\n      }\n\n      const isDeclaredInsideProps = isComponentInProp(node);\n\n      if (\n        !components.get(node)\n        && !isFunctionComponentInsideClassComponent(node)\n        && !isDeclaredInsideProps) {\n        return;\n      }\n\n      if (\n        // Support allowAsProps option\n        (isDeclaredInsideProps && (allowAsProps || isComponentInRenderProp(node, context)))\n\n        // Prevent reporting components created inside Array.map calls\n        || isMapCall(node)\n        || isMapCall(node.parent)\n\n        // Do not mark components declared inside hooks (or falsy '() => null' clean-up methods)\n        || isReturnStatementOfHook(node, context)\n\n        // Do not mark objects containing render methods\n        || isDirectValueOfRenderProperty(node)\n\n        // Prevent reporting nested class components twice\n        || isInsideRenderMethod(node)\n\n        // Prevent falsely reporting detected \"components\" which do not return JSX\n        || isStatelessComponentReturningNull(node)\n      ) {\n        return;\n      }\n\n      // Get the closest parent component\n      const parentComponent = getClosestMatchingParent(\n        node,\n        context,\n        (nodeToMatch) => components.get(nodeToMatch)\n      );\n\n      if (parentComponent) {\n        const parentName = resolveComponentName(parentComponent);\n\n        // Exclude lowercase parents, e.g. function createTestComponent()\n        // React-dom prevents creating lowercase components\n        if (parentName && parentName[0] === parentName[0].toLowerCase()) {\n          return;\n        }\n\n        let message = generateErrorMessageWithParentName(parentName);\n\n        // Add information about allowAsProps option when component is declared inside prop\n        if (isDeclaredInsideProps && !allowAsProps) {\n          message += COMPONENT_AS_PROPS_INFO;\n        }\n\n        report(context, message, null, {\n          node,\n        });\n      }\n    }\n\n    // --------------------------------------------------------------------------\n    // Public\n    // --------------------------------------------------------------------------\n\n    return {\n      FunctionDeclaration(node) { validate(node); },\n      ArrowFunctionExpression(node) { validate(node); },\n      FunctionExpression(node) { validate(node); },\n      ClassDeclaration(node) { validate(node); },\n      CallExpression(node) { validate(node); },\n    };\n  }),\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}