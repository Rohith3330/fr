{"ast":null,"code":"'use strict';\n\nfunction _vm() {\n  const data = require('vm');\n\n  _vm = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _fakeTimers() {\n  const data = require('@jest/fake-timers');\n\n  _fakeTimers = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _jestMock() {\n  const data = require('jest-mock');\n\n  _jestMock = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _jestUtil() {\n  const data = require('jest-util');\n\n  _jestUtil = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nclass NodeEnvironment {\n  constructor(config) {\n    _defineProperty(this, 'context', void 0);\n\n    _defineProperty(this, 'fakeTimers', void 0);\n\n    _defineProperty(this, 'fakeTimersModern', void 0);\n\n    _defineProperty(this, 'global', void 0);\n\n    _defineProperty(this, 'moduleMocker', void 0);\n\n    this.context = (0, _vm().createContext)();\n    const global = this.global = (0, _vm().runInContext)('this', Object.assign(this.context, config.testEnvironmentOptions));\n    global.global = global;\n    global.clearInterval = clearInterval;\n    global.clearTimeout = clearTimeout;\n    global.setInterval = setInterval;\n    global.setTimeout = setTimeout;\n    global.Buffer = Buffer;\n    global.setImmediate = setImmediate;\n    global.clearImmediate = clearImmediate;\n    global.ArrayBuffer = ArrayBuffer; // TextEncoder (global or via 'util') references a Uint8Array constructor\n    // different than the global one used by users in tests. This makes sure the\n    // same constructor is referenced by both.\n\n    global.Uint8Array = Uint8Array; // URL and URLSearchParams are global in Node >= 10\n\n    if (typeof URL !== 'undefined' && typeof URLSearchParams !== 'undefined') {\n      global.URL = URL;\n      global.URLSearchParams = URLSearchParams;\n    } // TextDecoder and TextDecoder are global in Node >= 11\n\n\n    if (typeof TextEncoder !== 'undefined' && typeof TextDecoder !== 'undefined') {\n      global.TextEncoder = TextEncoder;\n      global.TextDecoder = TextDecoder;\n    } // queueMicrotask is global in Node >= 11\n\n\n    if (typeof queueMicrotask !== 'undefined') {\n      global.queueMicrotask = queueMicrotask;\n    } // AbortController is global in Node >= 15\n\n\n    if (typeof AbortController !== 'undefined') {\n      global.AbortController = AbortController;\n    } // AbortSignal is global in Node >= 15\n\n\n    if (typeof AbortSignal !== 'undefined') {\n      global.AbortSignal = AbortSignal;\n    } // Event is global in Node >= 15.4\n\n\n    if (typeof Event !== 'undefined') {\n      global.Event = Event;\n    } // EventTarget is global in Node >= 15.4\n\n\n    if (typeof EventTarget !== 'undefined') {\n      global.EventTarget = EventTarget;\n    } // performance is global in Node >= 16\n\n\n    if (typeof performance !== 'undefined') {\n      global.performance = performance;\n    } // atob and btoa are global in Node >= 16\n\n\n    if (typeof atob !== 'undefined' && typeof btoa !== 'undefined') {\n      global.atob = atob;\n      global.btoa = btoa;\n    }\n\n    (0, _jestUtil().installCommonGlobals)(global, config.globals);\n    this.moduleMocker = new (_jestMock().ModuleMocker)(global);\n\n    const timerIdToRef = id => ({\n      id,\n\n      ref() {\n        return this;\n      },\n\n      unref() {\n        return this;\n      }\n\n    });\n\n    const timerRefToId = timer => timer && timer.id || undefined;\n\n    const timerConfig = {\n      idToRef: timerIdToRef,\n      refToId: timerRefToId\n    };\n    this.fakeTimers = new (_fakeTimers().LegacyFakeTimers)({\n      config,\n      global,\n      moduleMocker: this.moduleMocker,\n      timerConfig\n    });\n    this.fakeTimersModern = new (_fakeTimers().ModernFakeTimers)({\n      config,\n      global\n    });\n  }\n\n  async setup() {}\n\n  async teardown() {\n    if (this.fakeTimers) {\n      this.fakeTimers.dispose();\n    }\n\n    if (this.fakeTimersModern) {\n      this.fakeTimersModern.dispose();\n    }\n\n    this.context = null;\n    this.fakeTimers = null;\n    this.fakeTimersModern = null;\n  }\n\n  getVmContext() {\n    return this.context;\n  }\n\n}\n\nmodule.exports = NodeEnvironment;","map":{"version":3,"names":["_vm","data","require","_fakeTimers","_jestMock","_jestUtil","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","NodeEnvironment","constructor","config","context","createContext","global","runInContext","assign","testEnvironmentOptions","clearInterval","clearTimeout","setInterval","setTimeout","Buffer","setImmediate","clearImmediate","ArrayBuffer","Uint8Array","URL","URLSearchParams","TextEncoder","TextDecoder","queueMicrotask","AbortController","AbortSignal","Event","EventTarget","performance","atob","btoa","installCommonGlobals","globals","moduleMocker","ModuleMocker","timerIdToRef","id","ref","unref","timerRefToId","timer","undefined","timerConfig","idToRef","refToId","fakeTimers","LegacyFakeTimers","fakeTimersModern","ModernFakeTimers","setup","teardown","dispose","getVmContext","module","exports"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/jest-environment-node/build/index.js"],"sourcesContent":["'use strict';\n\nfunction _vm() {\n  const data = require('vm');\n\n  _vm = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _fakeTimers() {\n  const data = require('@jest/fake-timers');\n\n  _fakeTimers = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _jestMock() {\n  const data = require('jest-mock');\n\n  _jestMock = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _jestUtil() {\n  const data = require('jest-util');\n\n  _jestUtil = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\n\nclass NodeEnvironment {\n  constructor(config) {\n    _defineProperty(this, 'context', void 0);\n\n    _defineProperty(this, 'fakeTimers', void 0);\n\n    _defineProperty(this, 'fakeTimersModern', void 0);\n\n    _defineProperty(this, 'global', void 0);\n\n    _defineProperty(this, 'moduleMocker', void 0);\n\n    this.context = (0, _vm().createContext)();\n    const global = (this.global = (0, _vm().runInContext)(\n      'this',\n      Object.assign(this.context, config.testEnvironmentOptions)\n    ));\n    global.global = global;\n    global.clearInterval = clearInterval;\n    global.clearTimeout = clearTimeout;\n    global.setInterval = setInterval;\n    global.setTimeout = setTimeout;\n    global.Buffer = Buffer;\n    global.setImmediate = setImmediate;\n    global.clearImmediate = clearImmediate;\n    global.ArrayBuffer = ArrayBuffer; // TextEncoder (global or via 'util') references a Uint8Array constructor\n    // different than the global one used by users in tests. This makes sure the\n    // same constructor is referenced by both.\n\n    global.Uint8Array = Uint8Array; // URL and URLSearchParams are global in Node >= 10\n\n    if (typeof URL !== 'undefined' && typeof URLSearchParams !== 'undefined') {\n      global.URL = URL;\n      global.URLSearchParams = URLSearchParams;\n    } // TextDecoder and TextDecoder are global in Node >= 11\n\n    if (\n      typeof TextEncoder !== 'undefined' &&\n      typeof TextDecoder !== 'undefined'\n    ) {\n      global.TextEncoder = TextEncoder;\n      global.TextDecoder = TextDecoder;\n    } // queueMicrotask is global in Node >= 11\n\n    if (typeof queueMicrotask !== 'undefined') {\n      global.queueMicrotask = queueMicrotask;\n    } // AbortController is global in Node >= 15\n\n    if (typeof AbortController !== 'undefined') {\n      global.AbortController = AbortController;\n    } // AbortSignal is global in Node >= 15\n\n    if (typeof AbortSignal !== 'undefined') {\n      global.AbortSignal = AbortSignal;\n    } // Event is global in Node >= 15.4\n\n    if (typeof Event !== 'undefined') {\n      global.Event = Event;\n    } // EventTarget is global in Node >= 15.4\n\n    if (typeof EventTarget !== 'undefined') {\n      global.EventTarget = EventTarget;\n    } // performance is global in Node >= 16\n\n    if (typeof performance !== 'undefined') {\n      global.performance = performance;\n    } // atob and btoa are global in Node >= 16\n\n    if (typeof atob !== 'undefined' && typeof btoa !== 'undefined') {\n      global.atob = atob;\n      global.btoa = btoa;\n    }\n\n    (0, _jestUtil().installCommonGlobals)(global, config.globals);\n    this.moduleMocker = new (_jestMock().ModuleMocker)(global);\n\n    const timerIdToRef = id => ({\n      id,\n\n      ref() {\n        return this;\n      },\n\n      unref() {\n        return this;\n      }\n    });\n\n    const timerRefToId = timer => (timer && timer.id) || undefined;\n\n    const timerConfig = {\n      idToRef: timerIdToRef,\n      refToId: timerRefToId\n    };\n    this.fakeTimers = new (_fakeTimers().LegacyFakeTimers)({\n      config,\n      global,\n      moduleMocker: this.moduleMocker,\n      timerConfig\n    });\n    this.fakeTimersModern = new (_fakeTimers().ModernFakeTimers)({\n      config,\n      global\n    });\n  }\n\n  async setup() {}\n\n  async teardown() {\n    if (this.fakeTimers) {\n      this.fakeTimers.dispose();\n    }\n\n    if (this.fakeTimersModern) {\n      this.fakeTimersModern.dispose();\n    }\n\n    this.context = null;\n    this.fakeTimers = null;\n    this.fakeTimersModern = null;\n  }\n\n  getVmContext() {\n    return this.context;\n  }\n}\n\nmodule.exports = NodeEnvironment;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}