{"ast":null,"code":"const traversed = Symbol('traversed');\n\nfunction isJSXElementOrReactCreateElement(path) {\n  let visited = false;\n  path.traverse({\n    CallExpression(path2) {\n      const callee = path2.get('callee');\n\n      if (callee.matchesPattern('React.createElement') || callee.matchesPattern('React.cloneElement') || callee.node.name === 'cloneElement') {\n        visited = true;\n      }\n    },\n\n    JSXElement() {\n      visited = true;\n    }\n\n  });\n  return visited;\n}\n\nfunction isReturningJSXElement(path) {\n  let iteration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n  // Early exit for ArrowFunctionExpressions, there is no ReturnStatement node.\n  if (path.node.init && path.node.init.body && isJSXElementOrReactCreateElement(path)) {\n    return true;\n  }\n\n  if (iteration > 20) {\n    throw new Error('transform-react-remove-prop-type: infinite loop detected.');\n  }\n\n  let visited = false;\n  path.traverse({\n    ReturnStatement(path2) {\n      // We have already found what we are looking for.\n      if (visited) {\n        return;\n      }\n\n      const argument = path2.get('argument'); // Nothing is returned\n\n      if (!argument.node) {\n        return;\n      }\n\n      if (isJSXElementOrReactCreateElement(path2)) {\n        visited = true;\n        return;\n      }\n\n      if (argument.node.type === 'CallExpression') {\n        const name = argument.get('callee').node.name;\n        const binding = path.scope.getBinding(name);\n\n        if (!binding) {\n          return;\n        } // Prevents infinite traverse loop.\n\n\n        if (binding.path[traversed]) {\n          return;\n        }\n\n        binding.path[traversed] = true;\n\n        if (isReturningJSXElement(binding.path, iteration + 1)) {\n          visited = true;\n        }\n      }\n    }\n\n  });\n  return visited;\n}\n\nconst VALID_POSSIBLE_STATELESS_COMPONENT_TYPES = ['VariableDeclarator', 'FunctionDeclaration']; // Returns `true` if the path represents a function which returns a JSXElement\n\nexport default function isStatelessComponent(path) {\n  if (VALID_POSSIBLE_STATELESS_COMPONENT_TYPES.indexOf(path.node.type) === -1) {\n    return false;\n  }\n\n  if (isReturningJSXElement(path)) {\n    return true;\n  }\n\n  return false;\n}","map":{"version":3,"names":["traversed","Symbol","isJSXElementOrReactCreateElement","path","visited","traverse","CallExpression","path2","callee","get","matchesPattern","node","name","JSXElement","isReturningJSXElement","iteration","init","body","Error","ReturnStatement","argument","type","binding","scope","getBinding","VALID_POSSIBLE_STATELESS_COMPONENT_TYPES","isStatelessComponent","indexOf"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/babel-plugin-transform-react-remove-prop-types/src/isStatelessComponent.js"],"sourcesContent":["const traversed = Symbol('traversed')\n\nfunction isJSXElementOrReactCreateElement(path) {\n  let visited = false\n\n  path.traverse({\n    CallExpression(path2) {\n      const callee = path2.get('callee')\n\n      if (\n        callee.matchesPattern('React.createElement') ||\n        callee.matchesPattern('React.cloneElement') ||\n        callee.node.name === 'cloneElement'\n      ) {\n        visited = true\n      }\n    },\n    JSXElement() {\n      visited = true\n    },\n  })\n\n  return visited\n}\n\nfunction isReturningJSXElement(path, iteration = 0) {\n  // Early exit for ArrowFunctionExpressions, there is no ReturnStatement node.\n  if (path.node.init && path.node.init.body && isJSXElementOrReactCreateElement(path)) {\n    return true\n  }\n\n  if (iteration > 20) {\n    throw new Error('transform-react-remove-prop-type: infinite loop detected.')\n  }\n\n  let visited = false\n\n  path.traverse({\n    ReturnStatement(path2) {\n      // We have already found what we are looking for.\n      if (visited) {\n        return\n      }\n\n      const argument = path2.get('argument')\n\n      // Nothing is returned\n      if (!argument.node) {\n        return\n      }\n\n      if (isJSXElementOrReactCreateElement(path2)) {\n        visited = true\n        return\n      }\n\n      if (argument.node.type === 'CallExpression') {\n        const name = argument.get('callee').node.name\n        const binding = path.scope.getBinding(name)\n\n        if (!binding) {\n          return\n        }\n\n        // Prevents infinite traverse loop.\n        if (binding.path[traversed]) {\n          return\n        }\n\n        binding.path[traversed] = true\n\n        if (isReturningJSXElement(binding.path, iteration + 1)) {\n          visited = true\n        }\n      }\n    },\n  })\n\n  return visited\n}\n\nconst VALID_POSSIBLE_STATELESS_COMPONENT_TYPES = ['VariableDeclarator', 'FunctionDeclaration']\n\n// Returns `true` if the path represents a function which returns a JSXElement\nexport default function isStatelessComponent(path) {\n  if (VALID_POSSIBLE_STATELESS_COMPONENT_TYPES.indexOf(path.node.type) === -1) {\n    return false\n  }\n\n  if (isReturningJSXElement(path)) {\n    return true\n  }\n\n  return false\n}\n"],"mappings":"AAAA,MAAMA,SAAS,GAAGC,MAAM,CAAC,WAAD,CAAxB;;AAEA,SAASC,gCAAT,CAA0CC,IAA1C,EAAgD;EAC9C,IAAIC,OAAO,GAAG,KAAd;EAEAD,IAAI,CAACE,QAAL,CAAc;IACZC,cAAc,CAACC,KAAD,EAAQ;MACpB,MAAMC,MAAM,GAAGD,KAAK,CAACE,GAAN,CAAU,QAAV,CAAf;;MAEA,IACED,MAAM,CAACE,cAAP,CAAsB,qBAAtB,KACAF,MAAM,CAACE,cAAP,CAAsB,oBAAtB,CADA,IAEAF,MAAM,CAACG,IAAP,CAAYC,IAAZ,KAAqB,cAHvB,EAIE;QACAR,OAAO,GAAG,IAAV;MACD;IACF,CAXW;;IAYZS,UAAU,GAAG;MACXT,OAAO,GAAG,IAAV;IACD;;EAdW,CAAd;EAiBA,OAAOA,OAAP;AACD;;AAED,SAASU,qBAAT,CAA+BX,IAA/B,EAAoD;EAAA,IAAfY,SAAe,uEAAH,CAAG;;EAClD;EACA,IAAIZ,IAAI,CAACQ,IAAL,CAAUK,IAAV,IAAkBb,IAAI,CAACQ,IAAL,CAAUK,IAAV,CAAeC,IAAjC,IAAyCf,gCAAgC,CAACC,IAAD,CAA7E,EAAqF;IACnF,OAAO,IAAP;EACD;;EAED,IAAIY,SAAS,GAAG,EAAhB,EAAoB;IAClB,MAAM,IAAIG,KAAJ,CAAU,2DAAV,CAAN;EACD;;EAED,IAAId,OAAO,GAAG,KAAd;EAEAD,IAAI,CAACE,QAAL,CAAc;IACZc,eAAe,CAACZ,KAAD,EAAQ;MACrB;MACA,IAAIH,OAAJ,EAAa;QACX;MACD;;MAED,MAAMgB,QAAQ,GAAGb,KAAK,CAACE,GAAN,CAAU,UAAV,CAAjB,CANqB,CAQrB;;MACA,IAAI,CAACW,QAAQ,CAACT,IAAd,EAAoB;QAClB;MACD;;MAED,IAAIT,gCAAgC,CAACK,KAAD,CAApC,EAA6C;QAC3CH,OAAO,GAAG,IAAV;QACA;MACD;;MAED,IAAIgB,QAAQ,CAACT,IAAT,CAAcU,IAAd,KAAuB,gBAA3B,EAA6C;QAC3C,MAAMT,IAAI,GAAGQ,QAAQ,CAACX,GAAT,CAAa,QAAb,EAAuBE,IAAvB,CAA4BC,IAAzC;QACA,MAAMU,OAAO,GAAGnB,IAAI,CAACoB,KAAL,CAAWC,UAAX,CAAsBZ,IAAtB,CAAhB;;QAEA,IAAI,CAACU,OAAL,EAAc;UACZ;QACD,CAN0C,CAQ3C;;;QACA,IAAIA,OAAO,CAACnB,IAAR,CAAaH,SAAb,CAAJ,EAA6B;UAC3B;QACD;;QAEDsB,OAAO,CAACnB,IAAR,CAAaH,SAAb,IAA0B,IAA1B;;QAEA,IAAIc,qBAAqB,CAACQ,OAAO,CAACnB,IAAT,EAAeY,SAAS,GAAG,CAA3B,CAAzB,EAAwD;UACtDX,OAAO,GAAG,IAAV;QACD;MACF;IACF;;EAtCW,CAAd;EAyCA,OAAOA,OAAP;AACD;;AAED,MAAMqB,wCAAwC,GAAG,CAAC,oBAAD,EAAuB,qBAAvB,CAAjD,C,CAEA;;AACA,eAAe,SAASC,oBAAT,CAA8BvB,IAA9B,EAAoC;EACjD,IAAIsB,wCAAwC,CAACE,OAAzC,CAAiDxB,IAAI,CAACQ,IAAL,CAAUU,IAA3D,MAAqE,CAAC,CAA1E,EAA6E;IAC3E,OAAO,KAAP;EACD;;EAED,IAAIP,qBAAqB,CAACX,IAAD,CAAzB,EAAiC;IAC/B,OAAO,IAAP;EACD;;EAED,OAAO,KAAP;AACD"},"metadata":{},"sourceType":"module"}