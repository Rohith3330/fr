{"ast":null,"code":"/*:nodoc:*\n * class ActionStoreConstant\n *\n * This action stores the value specified by the const keyword argument.\n * (Note that the const keyword argument defaults to the rather unhelpful null.)\n * The 'store_const' action is most commonly used with optional\n * arguments that specify some sort of flag.\n *\n * This class inherited from [[Action]]\n **/\n'use strict';\n\nvar util = require('util');\n\nvar Action = require('../../action');\n/*:nodoc:*\n * new ActionStoreConstant(options)\n * - options (object): options hash see [[Action.new]]\n *\n **/\n\n\nvar ActionStoreConstant = module.exports = function ActionStoreConstant(options) {\n  options = options || {};\n  options.nargs = 0;\n\n  if (typeof options.constant === 'undefined') {\n    throw new Error('constant option is required for storeAction');\n  }\n\n  Action.call(this, options);\n};\n\nutil.inherits(ActionStoreConstant, Action);\n/*:nodoc:*\n * ActionStoreConstant#call(parser, namespace, values, optionString) -> Void\n * - parser (ArgumentParser): current parser\n * - namespace (Namespace): namespace for output data\n * - values (Array): parsed values\n * - optionString (Array): input option string(not parsed)\n *\n * Call the action. Save result in namespace object\n **/\n\nActionStoreConstant.prototype.call = function (parser, namespace) {\n  namespace.set(this.dest, this.constant);\n};","map":{"version":3,"names":["util","require","Action","ActionStoreConstant","module","exports","options","nargs","constant","Error","call","inherits","prototype","parser","namespace","set","dest"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/argparse/lib/action/store/constant.js"],"sourcesContent":["/*:nodoc:*\n * class ActionStoreConstant\n *\n * This action stores the value specified by the const keyword argument.\n * (Note that the const keyword argument defaults to the rather unhelpful null.)\n * The 'store_const' action is most commonly used with optional\n * arguments that specify some sort of flag.\n *\n * This class inherited from [[Action]]\n **/\n'use strict';\n\nvar util = require('util');\n\nvar Action = require('../../action');\n\n/*:nodoc:*\n * new ActionStoreConstant(options)\n * - options (object): options hash see [[Action.new]]\n *\n **/\nvar ActionStoreConstant = module.exports = function ActionStoreConstant(options) {\n  options = options || {};\n  options.nargs = 0;\n  if (typeof options.constant === 'undefined') {\n    throw new Error('constant option is required for storeAction');\n  }\n  Action.call(this, options);\n};\nutil.inherits(ActionStoreConstant, Action);\n\n/*:nodoc:*\n * ActionStoreConstant#call(parser, namespace, values, optionString) -> Void\n * - parser (ArgumentParser): current parser\n * - namespace (Namespace): namespace for output data\n * - values (Array): parsed values\n * - optionString (Array): input option string(not parsed)\n *\n * Call the action. Save result in namespace object\n **/\nActionStoreConstant.prototype.call = function (parser, namespace) {\n  namespace.set(this.dest, this.constant);\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAAlB;;AAEA,IAAIC,MAAM,GAAGD,OAAO,CAAC,cAAD,CAApB;AAEA;AACA;AACA;AACA;AACA;;;AACA,IAAIE,mBAAmB,GAAGC,MAAM,CAACC,OAAP,GAAiB,SAASF,mBAAT,CAA6BG,OAA7B,EAAsC;EAC/EA,OAAO,GAAGA,OAAO,IAAI,EAArB;EACAA,OAAO,CAACC,KAAR,GAAgB,CAAhB;;EACA,IAAI,OAAOD,OAAO,CAACE,QAAf,KAA4B,WAAhC,EAA6C;IAC3C,MAAM,IAAIC,KAAJ,CAAU,6CAAV,CAAN;EACD;;EACDP,MAAM,CAACQ,IAAP,CAAY,IAAZ,EAAkBJ,OAAlB;AACD,CAPD;;AAQAN,IAAI,CAACW,QAAL,CAAcR,mBAAd,EAAmCD,MAAnC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAC,mBAAmB,CAACS,SAApB,CAA8BF,IAA9B,GAAqC,UAAUG,MAAV,EAAkBC,SAAlB,EAA6B;EAChEA,SAAS,CAACC,GAAV,CAAc,KAAKC,IAAnB,EAAyB,KAAKR,QAA9B;AACD,CAFD"},"metadata":{},"sourceType":"script"}