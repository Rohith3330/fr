{"ast":null,"code":"\"use strict\";\n\nvar _createClass = require(\"C:/Users/Rohith/mern/frontend/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar _classCallCheck = require(\"C:/Users/Rohith/mern/frontend/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _assertThisInitialized = require(\"C:/Users/Rohith/mern/frontend/node_modules/@babel/runtime/helpers/assertThisInitialized.js\").default;\n\nvar _inherits = require(\"C:/Users/Rohith/mern/frontend/node_modules/@babel/runtime/helpers/inherits.js\").default;\n\nvar _createSuper = require(\"C:/Users/Rohith/mern/frontend/node_modules/@babel/runtime/helpers/createSuper.js\").default;\n\nvar _wrapNativeSuper = require(\"C:/Users/Rohith/mern/frontend/node_modules/@babel/runtime/helpers/wrapNativeSuper.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _rewriteStackTrace = require(\"./rewrite-stack-trace\");\n\nvar ConfigError = /*#__PURE__*/function (_Error) {\n  _inherits(ConfigError, _Error);\n\n  var _super = _createSuper(ConfigError);\n\n  function ConfigError(message, filename) {\n    var _this;\n\n    _classCallCheck(this, ConfigError);\n\n    _this = _super.call(this, message);\n    (0, _rewriteStackTrace.expectedError)(_assertThisInitialized(_this));\n    if (filename) (0, _rewriteStackTrace.injcectVirtualStackFrame)(_assertThisInitialized(_this), filename);\n    return _this;\n  }\n\n  return _createClass(ConfigError);\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n\nexports.default = ConfigError;\n0 && 0;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;AAAA;;IAEqBA,W;;;;;EACnBC,qBAAYC,OAAZD,EAA6BE,QAA7BF,EAAgD;IAAA;;IAAA;;IAC9C,0BAAMC,OAAN;IACA;IACA,IAAIC,QAAJ,EAAc,gFAA+BA,QAA/B;IAHgC;EAI/C;;;iCALsCC,K","names":["ConfigError","constructor","message","filename","Error"],"sources":["C:\\Users\\Rohith\\mern\\frontend\\node_modules\\@babel\\core\\src\\errors\\config-error.ts"],"sourcesContent":["import { injcectVirtualStackFrame, expectedError } from \"./rewrite-stack-trace\";\n\nexport default class ConfigError extends Error {\n  constructor(message: string, filename?: string) {\n    super(message);\n    expectedError(this);\n    if (filename) injcectVirtualStackFrame(this, filename);\n  }\n}\n"]},"metadata":{},"sourceType":"script"}