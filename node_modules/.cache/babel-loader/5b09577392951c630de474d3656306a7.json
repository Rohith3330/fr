{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.simpleTraverse = void 0;\n\nconst visitor_keys_1 = require(\"@typescript-eslint/visitor-keys\"); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\nfunction isValidNode(x) {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  return x !== null && typeof x === 'object' && typeof x.type === 'string';\n}\n\nfunction getVisitorKeysForNode(allVisitorKeys, node) {\n  const keys = allVisitorKeys[node.type];\n  return keys !== null && keys !== void 0 ? keys : [];\n}\n\nclass SimpleTraverser {\n  constructor(selectors) {\n    let setParentPointers = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    this.allVisitorKeys = visitor_keys_1.visitorKeys;\n    this.selectors = selectors;\n    this.setParentPointers = setParentPointers;\n  }\n\n  traverse(node, parent) {\n    if (!isValidNode(node)) {\n      return;\n    }\n\n    if (this.setParentPointers) {\n      node.parent = parent;\n    }\n\n    if ('enter' in this.selectors) {\n      this.selectors.enter(node, parent);\n    } else if (node.type in this.selectors) {\n      this.selectors[node.type](node, parent);\n    }\n\n    const keys = getVisitorKeysForNode(this.allVisitorKeys, node);\n\n    if (keys.length < 1) {\n      return;\n    }\n\n    for (const key of keys) {\n      const childOrChildren = node[key];\n\n      if (Array.isArray(childOrChildren)) {\n        for (const child of childOrChildren) {\n          this.traverse(child, node);\n        }\n      } else {\n        this.traverse(childOrChildren, node);\n      }\n    }\n  }\n\n}\n\nfunction simpleTraverse(startingNode, options) {\n  let setParentPointers = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  new SimpleTraverser(options, setParentPointers).traverse(startingNode, undefined);\n}\n\nexports.simpleTraverse = simpleTraverse;","map":{"version":3,"mappings":";;;;;;;AAAA,kE,CAIA;;;AACA,SAASA,WAAT,CAAqBC,CAArB,EAA2B;EACzB;EACA,OAAOA,CAAC,KAAK,IAAN,IAAc,OAAOA,CAAP,KAAa,QAA3B,IAAuC,OAAOA,CAAC,CAACC,IAAT,KAAkB,QAAhE;AACD;;AAED,SAASC,qBAAT,CACEC,cADF,EAEEC,IAFF,EAEqB;EAEnB,MAAMC,IAAI,GAAGF,cAAc,CAACC,IAAI,CAACH,IAAN,CAA3B;EACA,OAAQI,IAAI,SAAJ,QAAI,WAAJ,UAAQ,EAAhB;AACD;;AAaD,MAAMC,eAAN,CAAqB;EAKnBC,YAAYC,SAAZ,EAAuE;IAAA,IAAzBC,iBAAyB,uEAAL,KAAK;IAJtD,sBAAiBC,0BAAjB;IAKf,KAAKF,SAAL,GAAiBA,SAAjB;IACA,KAAKC,iBAAL,GAAyBA,iBAAzB;EACD;;EAEDE,QAAQ,CAACP,IAAD,EAAgBQ,MAAhB,EAAiD;IACvD,IAAI,CAACb,WAAW,CAACK,IAAD,CAAhB,EAAwB;MACtB;IACD;;IAED,IAAI,KAAKK,iBAAT,EAA4B;MAC1BL,IAAI,CAACQ,MAAL,GAAcA,MAAd;IACD;;IAED,IAAI,WAAW,KAAKJ,SAApB,EAA+B;MAC7B,KAAKA,SAAL,CAAeK,KAAf,CAAqBT,IAArB,EAA2BQ,MAA3B;IACD,CAFD,MAEO,IAAIR,IAAI,CAACH,IAAL,IAAa,KAAKO,SAAtB,EAAiC;MACtC,KAAKA,SAAL,CAAeJ,IAAI,CAACH,IAApB,EAA0BG,IAA1B,EAAgCQ,MAAhC;IACD;;IAED,MAAMP,IAAI,GAAGH,qBAAqB,CAAC,KAAKC,cAAN,EAAsBC,IAAtB,CAAlC;;IACA,IAAIC,IAAI,CAACS,MAAL,GAAc,CAAlB,EAAqB;MACnB;IACD;;IAED,KAAK,MAAMC,GAAX,IAAkBV,IAAlB,EAAwB;MACtB,MAAMW,eAAe,GAAGZ,IAAI,CAACW,GAAD,CAA5B;;MAEA,IAAIE,KAAK,CAACC,OAAN,CAAcF,eAAd,CAAJ,EAAoC;QAClC,KAAK,MAAMG,KAAX,IAAoBH,eAApB,EAAqC;UACnC,KAAKL,QAAL,CAAcQ,KAAd,EAAqBf,IAArB;QACD;MACF,CAJD,MAIO;QACL,KAAKO,QAAL,CAAcK,eAAd,EAA+BZ,IAA/B;MACD;IACF;EACF;;AAzCkB;;AA4CrB,SAAgBgB,cAAhB,CACEC,YADF,EAEEC,OAFF,EAG2B;EAAA,IAAzBb,iBAAyB,uEAAL,KAAK;EAEzB,IAAIH,eAAJ,CAAoBgB,OAApB,EAA6Bb,iBAA7B,EAAgDE,QAAhD,CACEU,YADF,EAEEE,SAFF;AAID;;AATDC","names":["isValidNode","x","type","getVisitorKeysForNode","allVisitorKeys","node","keys","SimpleTraverser","constructor","selectors","setParentPointers","visitor_keys_1","traverse","parent","enter","length","key","childOrChildren","Array","isArray","child","simpleTraverse","startingNode","options","undefined","exports"],"sources":["../src/simple-traverse.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}