{"ast":null,"code":"\"use strict\";\n\nvar __classPrivateFieldGet = this && this.__classPrivateFieldGet || function (receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\n\nvar __classPrivateFieldSet = this && this.__classPrivateFieldSet || function (receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n};\n\nvar _Visitor_options;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.VisitorBase = exports.Visitor = void 0;\n\nconst PatternVisitor_1 = require(\"./PatternVisitor\");\n\nconst VisitorBase_1 = require(\"./VisitorBase\");\n\nObject.defineProperty(exports, \"VisitorBase\", {\n  enumerable: true,\n  get: function () {\n    return VisitorBase_1.VisitorBase;\n  }\n});\n\nclass Visitor extends VisitorBase_1.VisitorBase {\n  constructor(optionsOrVisitor) {\n    super(optionsOrVisitor instanceof Visitor ? __classPrivateFieldGet(optionsOrVisitor, _Visitor_options, \"f\") : optionsOrVisitor);\n\n    _Visitor_options.set(this, void 0);\n\n    __classPrivateFieldSet(this, _Visitor_options, optionsOrVisitor instanceof Visitor ? __classPrivateFieldGet(optionsOrVisitor, _Visitor_options, \"f\") : optionsOrVisitor, \"f\");\n  }\n\n  visitPattern(node, callback) {\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {\n      processRightHandNodes: false\n    };\n    // Call the callback at left hand identifier nodes, and Collect right hand nodes.\n    const visitor = new PatternVisitor_1.PatternVisitor(__classPrivateFieldGet(this, _Visitor_options, \"f\"), node, callback);\n    visitor.visit(node); // Process the right hand nodes recursively.\n\n    if (options.processRightHandNodes) {\n      visitor.rightHandNodes.forEach(this.visit, this);\n    }\n  }\n\n}\n\nexports.Visitor = Visitor;\n_Visitor_options = new WeakMap();","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;AAMA;;AACA;;AAqCkBA;EAAAC;EAAAC;IAAA,OArCTC,yBAqCS;EArCE;AAqCF;;AAhClB,MAAMC,OAAN,SAAsBD,yBAAtB,CAAiC;EAE/BE,YAAYC,gBAAZ,EAAsD;IACpD,MACEA,gBAAgB,YAAYF,OAA5B,GACIG,yCAAgBC,gBAAhB,EAAgB,GAAhB,CADJ,GAEIF,gBAHN;;IAFFE;;IAQEC,6BAAID,gBAAJ,EACEF,gBAAgB,YAAYF,OAA5B,GACIG,yCAAgBC,gBAAhB,EAAgB,GAAhB,CADJ,GAEIF,gBAHN,EAGsB,GAHtB;EAID;;EAESI,YAAY,CACpBC,IADoB,EAEpBC,QAFoB,EAG2C;IAAA,IAA/DC,OAA+D,uEAAhC;MAAEC,qBAAqB,EAAE;IAAzB,CAAgC;IAE/D;IACA,MAAMC,OAAO,GAAG,IAAIC,+BAAJ,CAAmBT,6BAAIC,gBAAJ,EAAI,GAAJ,CAAnB,EAAkCG,IAAlC,EAAwCC,QAAxC,CAAhB;IAEAG,OAAO,CAACE,KAAR,CAAcN,IAAd,EAL+D,CAO/D;;IACA,IAAIE,OAAO,CAACC,qBAAZ,EAAmC;MACjCC,OAAO,CAACG,cAAR,CAAuBC,OAAvB,CAA+B,KAAKF,KAApC,EAA2C,IAA3C;IACD;EACF;;AA7B8B;;AAgCxBG","names":["Object","enumerable","get","VisitorBase_1","Visitor","constructor","optionsOrVisitor","__classPrivateFieldGet","_Visitor_options","__classPrivateFieldSet","visitPattern","node","callback","options","processRightHandNodes","visitor","PatternVisitor_1","visit","rightHandNodes","forEach","exports"],"sources":["../../src/referencer/Visitor.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}