{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.unixify = unixify;\nexports.correctPath = correctPath;\nvar isWin = process.platform === 'win32';\n\nfunction removeTrailingSeparator(str) {\n  var i = str.length - 1;\n\n  if (i < 2) {\n    return str;\n  }\n\n  while (isSeparator(str, i)) {\n    i--;\n  }\n\n  return str.substr(0, i + 1);\n}\n\nfunction isSeparator(str, i) {\n  var _char = str[i];\n  return i > 0 && (_char === '/' || isWin && _char === '\\\\');\n}\n\nfunction normalizePath(str, stripTrailing) {\n  if (typeof str !== 'string') {\n    throw new TypeError('expected a string');\n  }\n\n  str = str.replace(/[\\\\\\/]+/g, '/');\n\n  if (stripTrailing !== false) {\n    str = removeTrailingSeparator(str);\n  }\n\n  return str;\n}\n\nfunction unixify(filepath) {\n  var stripTrailing = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n  if (isWin) {\n    filepath = normalizePath(filepath, stripTrailing);\n    return filepath.replace(/^([a-zA-Z]+:|\\.\\/)/, '');\n  }\n\n  return filepath;\n}\n\nfunction correctPath(filepath) {\n  return unixify(filepath.replace(/^\\\\\\\\\\?\\\\.:\\\\/, '\\\\'));\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","unixify","correctPath","isWin","process","platform","removeTrailingSeparator","str","i","length","isSeparator","substr","_char","normalizePath","stripTrailing","TypeError","replace","filepath","arguments","undefined"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/fs-monkey/lib/correctPath.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.unixify = unixify;\nexports.correctPath = correctPath;\nvar isWin = process.platform === 'win32';\n\nfunction removeTrailingSeparator(str) {\n  var i = str.length - 1;\n\n  if (i < 2) {\n    return str;\n  }\n\n  while (isSeparator(str, i)) {\n    i--;\n  }\n\n  return str.substr(0, i + 1);\n}\n\nfunction isSeparator(str, i) {\n  var _char = str[i];\n  return i > 0 && (_char === '/' || isWin && _char === '\\\\');\n}\n\nfunction normalizePath(str, stripTrailing) {\n  if (typeof str !== 'string') {\n    throw new TypeError('expected a string');\n  }\n\n  str = str.replace(/[\\\\\\/]+/g, '/');\n\n  if (stripTrailing !== false) {\n    str = removeTrailingSeparator(str);\n  }\n\n  return str;\n}\n\nfunction unixify(filepath) {\n  var stripTrailing = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n  if (isWin) {\n    filepath = normalizePath(filepath, stripTrailing);\n    return filepath.replace(/^([a-zA-Z]+:|\\.\\/)/, '');\n  }\n\n  return filepath;\n}\n\nfunction correctPath(filepath) {\n  return unixify(filepath.replace(/^\\\\\\\\\\?\\\\.:\\\\/, '\\\\'));\n}"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAC3CC,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBA,OAAlB;AACAF,OAAO,CAACG,WAAR,GAAsBA,WAAtB;AACA,IAAIC,KAAK,GAAGC,OAAO,CAACC,QAAR,KAAqB,OAAjC;;AAEA,SAASC,uBAAT,CAAiCC,GAAjC,EAAsC;EACpC,IAAIC,CAAC,GAAGD,GAAG,CAACE,MAAJ,GAAa,CAArB;;EAEA,IAAID,CAAC,GAAG,CAAR,EAAW;IACT,OAAOD,GAAP;EACD;;EAED,OAAOG,WAAW,CAACH,GAAD,EAAMC,CAAN,CAAlB,EAA4B;IAC1BA,CAAC;EACF;;EAED,OAAOD,GAAG,CAACI,MAAJ,CAAW,CAAX,EAAcH,CAAC,GAAG,CAAlB,CAAP;AACD;;AAED,SAASE,WAAT,CAAqBH,GAArB,EAA0BC,CAA1B,EAA6B;EAC3B,IAAII,KAAK,GAAGL,GAAG,CAACC,CAAD,CAAf;EACA,OAAOA,CAAC,GAAG,CAAJ,KAAUI,KAAK,KAAK,GAAV,IAAiBT,KAAK,IAAIS,KAAK,KAAK,IAA9C,CAAP;AACD;;AAED,SAASC,aAAT,CAAuBN,GAAvB,EAA4BO,aAA5B,EAA2C;EACzC,IAAI,OAAOP,GAAP,KAAe,QAAnB,EAA6B;IAC3B,MAAM,IAAIQ,SAAJ,CAAc,mBAAd,CAAN;EACD;;EAEDR,GAAG,GAAGA,GAAG,CAACS,OAAJ,CAAY,UAAZ,EAAwB,GAAxB,CAAN;;EAEA,IAAIF,aAAa,KAAK,KAAtB,EAA6B;IAC3BP,GAAG,GAAGD,uBAAuB,CAACC,GAAD,CAA7B;EACD;;EAED,OAAOA,GAAP;AACD;;AAED,SAASN,OAAT,CAAiBgB,QAAjB,EAA2B;EACzB,IAAIH,aAAa,GAAGI,SAAS,CAACT,MAAV,GAAmB,CAAnB,IAAwBS,SAAS,CAAC,CAAD,CAAT,KAAiBC,SAAzC,GAAqDD,SAAS,CAAC,CAAD,CAA9D,GAAoE,IAAxF;;EAEA,IAAIf,KAAJ,EAAW;IACTc,QAAQ,GAAGJ,aAAa,CAACI,QAAD,EAAWH,aAAX,CAAxB;IACA,OAAOG,QAAQ,CAACD,OAAT,CAAiB,oBAAjB,EAAuC,EAAvC,CAAP;EACD;;EAED,OAAOC,QAAP;AACD;;AAED,SAASf,WAAT,CAAqBe,QAArB,EAA+B;EAC7B,OAAOhB,OAAO,CAACgB,QAAQ,CAACD,OAAT,CAAiB,eAAjB,EAAkC,IAAlC,CAAD,CAAd;AACD"},"metadata":{},"sourceType":"script"}