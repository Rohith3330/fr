{"ast":null,"code":"var csstree = require('css-tree');\n\nvar parse = csstree.parse;\n\nvar compress = require('./compress');\n\nvar generate = csstree.generate;\n\nfunction debugOutput(name, options, startTime, data) {\n  if (options.debug) {\n    console.error('## ' + name + ' done in %d ms\\n', Date.now() - startTime);\n  }\n\n  return data;\n}\n\nfunction createDefaultLogger(level) {\n  var lastDebug;\n  return function logger(title, ast) {\n    var line = title;\n\n    if (ast) {\n      line = '[' + ((Date.now() - lastDebug) / 1000).toFixed(3) + 's] ' + line;\n    }\n\n    if (level > 1 && ast) {\n      var css = generate(ast); // when level 2, limit css to 256 symbols\n\n      if (level === 2 && css.length > 256) {\n        css = css.substr(0, 256) + '...';\n      }\n\n      line += '\\n  ' + css + '\\n';\n    }\n\n    console.error(line);\n    lastDebug = Date.now();\n  };\n}\n\nfunction copy(obj) {\n  var result = {};\n\n  for (var key in obj) {\n    result[key] = obj[key];\n  }\n\n  return result;\n}\n\nfunction buildCompressOptions(options) {\n  options = copy(options);\n\n  if (typeof options.logger !== 'function' && options.debug) {\n    options.logger = createDefaultLogger(options.debug);\n  }\n\n  return options;\n}\n\nfunction runHandler(ast, options, handlers) {\n  if (!Array.isArray(handlers)) {\n    handlers = [handlers];\n  }\n\n  handlers.forEach(function (fn) {\n    fn(ast, options);\n  });\n}\n\nfunction minify(context, source, options) {\n  options = options || {};\n  var filename = options.filename || '<unknown>';\n  var result; // parse\n\n  var ast = debugOutput('parsing', options, Date.now(), parse(source, {\n    context: context,\n    filename: filename,\n    positions: Boolean(options.sourceMap)\n  })); // before compress handlers\n\n  if (options.beforeCompress) {\n    debugOutput('beforeCompress', options, Date.now(), runHandler(ast, options, options.beforeCompress));\n  } // compress\n\n\n  var compressResult = debugOutput('compress', options, Date.now(), compress(ast, buildCompressOptions(options))); // after compress handlers\n\n  if (options.afterCompress) {\n    debugOutput('afterCompress', options, Date.now(), runHandler(compressResult, options, options.afterCompress));\n  } // generate\n\n\n  if (options.sourceMap) {\n    result = debugOutput('generate(sourceMap: true)', options, Date.now(), function () {\n      var tmp = generate(compressResult.ast, {\n        sourceMap: true\n      });\n      tmp.map._file = filename; // since other tools can relay on file in source map transform chain\n\n      tmp.map.setSourceContent(filename, source);\n      return tmp;\n    }());\n  } else {\n    result = debugOutput('generate', options, Date.now(), {\n      css: generate(compressResult.ast),\n      map: null\n    });\n  }\n\n  return result;\n}\n\nfunction minifyStylesheet(source, options) {\n  return minify('stylesheet', source, options);\n}\n\nfunction minifyBlock(source, options) {\n  return minify('declarationList', source, options);\n}\n\nmodule.exports = {\n  version: require('../package.json').version,\n  // main methods\n  minify: minifyStylesheet,\n  minifyBlock: minifyBlock,\n  // css syntax parser/walkers/generator/etc\n  syntax: Object.assign({\n    compress: compress\n  }, csstree)\n};","map":{"version":3,"names":["csstree","require","parse","compress","generate","debugOutput","name","options","startTime","data","debug","console","error","Date","now","createDefaultLogger","level","lastDebug","logger","title","ast","line","toFixed","css","length","substr","copy","obj","result","key","buildCompressOptions","runHandler","handlers","Array","isArray","forEach","fn","minify","context","source","filename","positions","Boolean","sourceMap","beforeCompress","compressResult","afterCompress","tmp","map","_file","setSourceContent","minifyStylesheet","minifyBlock","module","exports","version","syntax","Object","assign"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/csso/lib/index.js"],"sourcesContent":["var csstree = require('css-tree');\nvar parse = csstree.parse;\nvar compress = require('./compress');\nvar generate = csstree.generate;\n\nfunction debugOutput(name, options, startTime, data) {\n    if (options.debug) {\n        console.error('## ' + name + ' done in %d ms\\n', Date.now() - startTime);\n    }\n\n    return data;\n}\n\nfunction createDefaultLogger(level) {\n    var lastDebug;\n\n    return function logger(title, ast) {\n        var line = title;\n\n        if (ast) {\n            line = '[' + ((Date.now() - lastDebug) / 1000).toFixed(3) + 's] ' + line;\n        }\n\n        if (level > 1 && ast) {\n            var css = generate(ast);\n\n            // when level 2, limit css to 256 symbols\n            if (level === 2 && css.length > 256) {\n                css = css.substr(0, 256) + '...';\n            }\n\n            line += '\\n  ' + css + '\\n';\n        }\n\n        console.error(line);\n        lastDebug = Date.now();\n    };\n}\n\nfunction copy(obj) {\n    var result = {};\n\n    for (var key in obj) {\n        result[key] = obj[key];\n    }\n\n    return result;\n}\n\nfunction buildCompressOptions(options) {\n    options = copy(options);\n\n    if (typeof options.logger !== 'function' && options.debug) {\n        options.logger = createDefaultLogger(options.debug);\n    }\n\n    return options;\n}\n\nfunction runHandler(ast, options, handlers) {\n    if (!Array.isArray(handlers)) {\n        handlers = [handlers];\n    }\n\n    handlers.forEach(function(fn) {\n        fn(ast, options);\n    });\n}\n\nfunction minify(context, source, options) {\n    options = options || {};\n\n    var filename = options.filename || '<unknown>';\n    var result;\n\n    // parse\n    var ast = debugOutput('parsing', options, Date.now(),\n        parse(source, {\n            context: context,\n            filename: filename,\n            positions: Boolean(options.sourceMap)\n        })\n    );\n\n    // before compress handlers\n    if (options.beforeCompress) {\n        debugOutput('beforeCompress', options, Date.now(),\n            runHandler(ast, options, options.beforeCompress)\n        );\n    }\n\n    // compress\n    var compressResult = debugOutput('compress', options, Date.now(),\n        compress(ast, buildCompressOptions(options))\n    );\n\n    // after compress handlers\n    if (options.afterCompress) {\n        debugOutput('afterCompress', options, Date.now(),\n            runHandler(compressResult, options, options.afterCompress)\n        );\n    }\n\n    // generate\n    if (options.sourceMap) {\n        result = debugOutput('generate(sourceMap: true)', options, Date.now(), (function() {\n            var tmp = generate(compressResult.ast, { sourceMap: true });\n            tmp.map._file = filename; // since other tools can relay on file in source map transform chain\n            tmp.map.setSourceContent(filename, source);\n            return tmp;\n        }()));\n    } else {\n        result = debugOutput('generate', options, Date.now(), {\n            css: generate(compressResult.ast),\n            map: null\n        });\n    }\n\n    return result;\n}\n\nfunction minifyStylesheet(source, options) {\n    return minify('stylesheet', source, options);\n}\n\nfunction minifyBlock(source, options) {\n    return minify('declarationList', source, options);\n}\n\nmodule.exports = {\n    version: require('../package.json').version,\n\n    // main methods\n    minify: minifyStylesheet,\n    minifyBlock: minifyBlock,\n\n    // css syntax parser/walkers/generator/etc\n    syntax: Object.assign({\n        compress: compress\n    }, csstree)\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}