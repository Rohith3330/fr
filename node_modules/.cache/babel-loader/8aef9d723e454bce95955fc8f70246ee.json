{"ast":null,"code":"'use strict';\n\nexports.type = 'perItem';\nexports.active = true;\nexports.description = 'rounds numeric values to the fixed precision, removes default ‘px’ units';\nexports.params = {\n  floatPrecision: 3,\n  leadingZero: true,\n  defaultPx: true,\n  convertToPx: true\n};\n\nvar regNumericValues = /^([\\-+]?\\d*\\.?\\d+([eE][\\-+]?\\d+)?)(px|pt|pc|mm|cm|m|in|ft|em|ex|%)?$/,\n    removeLeadingZero = require('../lib/svgo/tools').removeLeadingZero,\n    absoluteLengths = {\n  // relative to px\n  cm: 96 / 2.54,\n  mm: 96 / 25.4,\n  in: 96,\n  pt: 4 / 3,\n  pc: 16\n};\n/**\n * Round numeric values to the fixed precision,\n * remove default 'px' units.\n *\n * @param {Object} item current iteration item\n * @param {Object} params plugin params\n * @return {Boolean} if false, item will be filtered out\n *\n * @author Kir Belevich\n */\n\n\nexports.fn = function (item, params) {\n  if (item.isElem()) {\n    var floatPrecision = params.floatPrecision;\n\n    if (item.hasAttr('viewBox')) {\n      var nums = item.attr('viewBox').value.split(/\\s,?\\s*|,\\s*/g);\n      item.attr('viewBox').value = nums.map(function (value) {\n        var num = +value;\n        return isNaN(num) ? value : +num.toFixed(floatPrecision);\n      }).join(' ');\n    }\n\n    item.eachAttr(function (attr) {\n      // The `version` attribute is a text string and cannot be rounded\n      if (attr.name === 'version') {\n        return;\n      }\n\n      var match = attr.value.match(regNumericValues); // if attribute value matches regNumericValues\n\n      if (match) {\n        // round it to the fixed precision\n        var num = +(+match[1]).toFixed(floatPrecision),\n            units = match[3] || ''; // convert absolute values to pixels\n\n        if (params.convertToPx && units && units in absoluteLengths) {\n          var pxNum = +(absoluteLengths[units] * match[1]).toFixed(floatPrecision);\n\n          if (String(pxNum).length < match[0].length) {\n            num = pxNum;\n            units = 'px';\n          }\n        } // and remove leading zero\n\n\n        if (params.leadingZero) {\n          num = removeLeadingZero(num);\n        } // remove default 'px' units\n\n\n        if (params.defaultPx && units === 'px') {\n          units = '';\n        }\n\n        attr.value = num + units;\n      }\n    });\n  }\n};","map":{"version":3,"names":["exports","type","active","description","params","floatPrecision","leadingZero","defaultPx","convertToPx","regNumericValues","removeLeadingZero","require","absoluteLengths","cm","mm","in","pt","pc","fn","item","isElem","hasAttr","nums","attr","value","split","map","num","isNaN","toFixed","join","eachAttr","name","match","units","pxNum","String","length"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/svgo/plugins/cleanupNumericValues.js"],"sourcesContent":["'use strict';\n\nexports.type = 'perItem';\n\nexports.active = true;\n\nexports.description = 'rounds numeric values to the fixed precision, removes default ‘px’ units';\n\nexports.params = {\n    floatPrecision: 3,\n    leadingZero: true,\n    defaultPx: true,\n    convertToPx: true\n};\n\nvar regNumericValues = /^([\\-+]?\\d*\\.?\\d+([eE][\\-+]?\\d+)?)(px|pt|pc|mm|cm|m|in|ft|em|ex|%)?$/,\n    removeLeadingZero = require('../lib/svgo/tools').removeLeadingZero,\n    absoluteLengths = { // relative to px\n        cm: 96/2.54,\n        mm: 96/25.4,\n        in: 96,\n        pt: 4/3,\n        pc: 16\n    };\n\n/**\n * Round numeric values to the fixed precision,\n * remove default 'px' units.\n *\n * @param {Object} item current iteration item\n * @param {Object} params plugin params\n * @return {Boolean} if false, item will be filtered out\n *\n * @author Kir Belevich\n */\nexports.fn = function(item, params) {\n\n    if (item.isElem()) {\n\n        var floatPrecision = params.floatPrecision;\n\n        if (item.hasAttr('viewBox')) {\n            var nums = item.attr('viewBox').value.split(/\\s,?\\s*|,\\s*/g);\n            item.attr('viewBox').value = nums.map(function(value) {\n                var num = +value;\n                return isNaN(num) ? value : +num.toFixed(floatPrecision);\n            }).join(' ');\n        }\n\n        item.eachAttr(function(attr) {\n            // The `version` attribute is a text string and cannot be rounded\n            if (attr.name === 'version') { return }\n\n            var match = attr.value.match(regNumericValues);\n\n            // if attribute value matches regNumericValues\n            if (match) {\n                // round it to the fixed precision\n                var num = +(+match[1]).toFixed(floatPrecision),\n                    units = match[3] || '';\n\n                // convert absolute values to pixels\n                if (params.convertToPx && units && (units in absoluteLengths)) {\n                    var pxNum = +(absoluteLengths[units] * match[1]).toFixed(floatPrecision);\n\n                    if (String(pxNum).length < match[0].length) {\n                        num = pxNum;\n                        units = 'px';\n                    }\n                }\n\n                // and remove leading zero\n                if (params.leadingZero) {\n                    num = removeLeadingZero(num);\n                }\n\n                // remove default 'px' units\n                if (params.defaultPx && units === 'px') {\n                    units = '';\n                }\n\n                attr.value = num + units;\n            }\n        });\n\n    }\n\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}