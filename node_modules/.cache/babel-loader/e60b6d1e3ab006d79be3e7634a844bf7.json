{"ast":null,"code":"import { useRef } from 'react';\nvar dft = Symbol('default value sigil');\n/**\n * Exactly the same as `useRef` except that the initial value is set via a\n * factroy function. Useful when the default is relatively costly to construct.\n *\n *  ```ts\n *  const ref = useRefWithInitialValueFactory<ExpensiveValue>(() => constructExpensiveValue())\n *\n *  ```\n *\n * @param initialValueFactory A factory function returning the ref's default value\n * @category refs\n */\n\nexport default function useRefWithInitialValueFactory(initialValueFactory) {\n  var ref = useRef(dft);\n\n  if (ref.current === dft) {\n    ref.current = initialValueFactory();\n  }\n\n  return ref;\n}","map":{"version":3,"names":["useRef","dft","Symbol","useRefWithInitialValueFactory","initialValueFactory","ref","current"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/@restart/hooks/esm/useRefWithInitialValueFactory.js"],"sourcesContent":["import { useRef } from 'react';\nvar dft = Symbol('default value sigil');\n/**\n * Exactly the same as `useRef` except that the initial value is set via a\n * factroy function. Useful when the default is relatively costly to construct.\n *\n *  ```ts\n *  const ref = useRefWithInitialValueFactory<ExpensiveValue>(() => constructExpensiveValue())\n *\n *  ```\n *\n * @param initialValueFactory A factory function returning the ref's default value\n * @category refs\n */\n\nexport default function useRefWithInitialValueFactory(initialValueFactory) {\n  var ref = useRef(dft);\n\n  if (ref.current === dft) {\n    ref.current = initialValueFactory();\n  }\n\n  return ref;\n}"],"mappings":"AAAA,SAASA,MAAT,QAAuB,OAAvB;AACA,IAAIC,GAAG,GAAGC,MAAM,CAAC,qBAAD,CAAhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,SAASC,6BAAT,CAAuCC,mBAAvC,EAA4D;EACzE,IAAIC,GAAG,GAAGL,MAAM,CAACC,GAAD,CAAhB;;EAEA,IAAII,GAAG,CAACC,OAAJ,KAAgBL,GAApB,EAAyB;IACvBI,GAAG,CAACC,OAAJ,GAAcF,mBAAmB,EAAjC;EACD;;EAED,OAAOC,GAAP;AACD"},"metadata":{},"sourceType":"module"}