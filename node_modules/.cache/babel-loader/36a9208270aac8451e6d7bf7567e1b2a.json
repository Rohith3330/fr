{"ast":null,"code":"\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"C:/Users/Rohith/mern/frontend/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\n\nvar _classCallCheck = require(\"C:/Users/Rohith/mern/frontend/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"C:/Users/Rohith/mern/frontend/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nfunction helpers() {\n  var data = require(\"@babel/helpers\");\n\n  helpers = function helpers() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _traverse() {\n  var data = require(\"@babel/traverse\");\n\n  _traverse = function _traverse() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _codeFrame() {\n  var data = require(\"@babel/code-frame\");\n\n  _codeFrame = function _codeFrame() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _t() {\n  var data = require(\"@babel/types\");\n\n  _t = function _t() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _helperModuleTransforms() {\n  var data = require(\"@babel/helper-module-transforms\");\n\n  _helperModuleTransforms = function _helperModuleTransforms() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _semver() {\n  var data = require(\"semver\");\n\n  _semver = function _semver() {\n    return data;\n  };\n\n  return data;\n}\n\nvar _t2 = _t(),\n    cloneNode = _t2.cloneNode,\n    interpreterDirective = _t2.interpreterDirective;\n\nvar errorVisitor = {\n  enter: function enter(path, state) {\n    var loc = path.node.loc;\n\n    if (loc) {\n      state.loc = loc;\n      path.stop();\n    }\n  }\n};\n\nvar File = /*#__PURE__*/function () {\n  function File(options, _ref) {\n    var _this = this;\n\n    var code = _ref.code,\n        ast = _ref.ast,\n        inputMap = _ref.inputMap;\n\n    _classCallCheck(this, File);\n\n    this._map = new Map();\n    this.opts = void 0;\n    this.declarations = {};\n    this.path = void 0;\n    this.ast = void 0;\n    this.scope = void 0;\n    this.metadata = {};\n    this.code = \"\";\n    this.inputMap = void 0;\n    this.hub = {\n      file: this,\n      getCode: function getCode() {\n        return _this.code;\n      },\n      getScope: function getScope() {\n        return _this.scope;\n      },\n      addHelper: this.addHelper.bind(this),\n      buildError: this.buildCodeFrameError.bind(this)\n    };\n    this.opts = options;\n    this.code = code;\n    this.ast = ast;\n    this.inputMap = inputMap;\n    this.path = _traverse().NodePath.get({\n      hub: this.hub,\n      parentPath: null,\n      parent: this.ast,\n      container: this.ast,\n      key: \"program\"\n    }).setContext();\n    this.scope = this.path.scope;\n  }\n\n  _createClass(File, [{\n    key: \"shebang\",\n    get: function get() {\n      var interpreter = this.path.node.interpreter;\n      return interpreter ? interpreter.value : \"\";\n    },\n    set: function set(value) {\n      if (value) {\n        this.path.get(\"interpreter\").replaceWith(interpreterDirective(value));\n      } else {\n        this.path.get(\"interpreter\").remove();\n      }\n    }\n  }, {\n    key: \"set\",\n    value: function set(key, val) {\n      if (key === \"helpersNamespace\") {\n        throw new Error(\"Babel 7.0.0-beta.56 has dropped support for the 'helpersNamespace' utility.\" + \"If you are using @babel/plugin-external-helpers you will need to use a newer \" + \"version than the one you currently have installed. \" + \"If you have your own implementation, you'll want to explore using 'helperGenerator' \" + \"alongside 'file.availableHelper()'.\");\n      }\n\n      this._map.set(key, val);\n    }\n  }, {\n    key: \"get\",\n    value: function get(key) {\n      return this._map.get(key);\n    }\n  }, {\n    key: \"has\",\n    value: function has(key) {\n      return this._map.has(key);\n    }\n  }, {\n    key: \"getModuleName\",\n    value: function getModuleName() {\n      return (0, _helperModuleTransforms().getModuleName)(this.opts, this.opts);\n    }\n  }, {\n    key: \"addImport\",\n    value: function addImport() {\n      throw new Error(\"This API has been removed. If you're looking for this \" + \"functionality in Babel 7, you should import the \" + \"'@babel/helper-module-imports' module and use the functions exposed \" + \" from that module, such as 'addNamed' or 'addDefault'.\");\n    }\n  }, {\n    key: \"availableHelper\",\n    value: function availableHelper(name, versionRange) {\n      var minVersion;\n\n      try {\n        minVersion = helpers().minVersion(name);\n      } catch (err) {\n        if (err.code !== \"BABEL_HELPER_UNKNOWN\") throw err;\n        return false;\n      }\n\n      if (typeof versionRange !== \"string\") return true;\n      if (_semver().valid(versionRange)) versionRange = \"^\".concat(versionRange);\n      return !_semver().intersects(\"<\".concat(minVersion), versionRange) && !_semver().intersects(\">=8.0.0\", versionRange);\n    }\n  }, {\n    key: \"addHelper\",\n    value: function addHelper(name) {\n      var _this2 = this;\n\n      var declar = this.declarations[name];\n      if (declar) return cloneNode(declar);\n      var generator = this.get(\"helperGenerator\");\n\n      if (generator) {\n        var res = generator(name);\n        if (res) return res;\n      }\n\n      helpers().ensure(name, File);\n      var uid = this.declarations[name] = this.scope.generateUidIdentifier(name);\n      var dependencies = {};\n\n      var _iterator = _createForOfIteratorHelper(helpers().getDependencies(name)),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var dep = _step.value;\n          dependencies[dep] = this.addHelper(dep);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      var _helpers$get = helpers().get(name, function (dep) {\n        return dependencies[dep];\n      }, uid, Object.keys(this.scope.getAllBindings())),\n          nodes = _helpers$get.nodes,\n          globals = _helpers$get.globals;\n\n      globals.forEach(function (name) {\n        if (_this2.path.scope.hasBinding(name, true)) {\n          _this2.path.scope.rename(name);\n        }\n      });\n      nodes.forEach(function (node) {\n        node._compact = true;\n      });\n      this.path.unshiftContainer(\"body\", nodes);\n      this.path.get(\"body\").forEach(function (path) {\n        if (nodes.indexOf(path.node) === -1) return;\n        if (path.isVariableDeclaration()) _this2.scope.registerDeclaration(path);\n      });\n      return uid;\n    }\n  }, {\n    key: \"addTemplateObject\",\n    value: function addTemplateObject() {\n      throw new Error(\"This function has been moved into the template literal transform itself.\");\n    }\n  }, {\n    key: \"buildCodeFrameError\",\n    value: function buildCodeFrameError(node, msg) {\n      var _Error = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : SyntaxError;\n\n      var loc = node && (node.loc || node._loc);\n\n      if (!loc && node) {\n        var state = {\n          loc: null\n        };\n        (0, _traverse().default)(node, errorVisitor, this.scope, state);\n        loc = state.loc;\n        var txt = \"This is an error on an internal node. Probably an internal error.\";\n        if (loc) txt += \" Location has been estimated.\";\n        msg += \" (\".concat(txt, \")\");\n      }\n\n      if (loc) {\n        var _this$opts$highlightC = this.opts.highlightCode,\n            highlightCode = _this$opts$highlightC === void 0 ? true : _this$opts$highlightC;\n        msg += \"\\n\" + (0, _codeFrame().codeFrameColumns)(this.code, {\n          start: {\n            line: loc.start.line,\n            column: loc.start.column + 1\n          },\n          end: loc.end && loc.start.line === loc.end.line ? {\n            line: loc.end.line,\n            column: loc.end.column + 1\n          } : undefined\n        }, {\n          highlightCode: highlightCode\n        });\n      }\n\n      return new _Error(msg);\n    }\n  }]);\n\n  return File;\n}();\n\nexports.default = File;\n0 && 0;","map":{"version":3,"mappings":"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","names":["helpers","_traverse","_codeFrame","_t","_helperModuleTransforms","_semver","cloneNode","interpreterDirective","errorVisitor","enter","path","state","loc","node","stop","File","constructor","options","code","ast","inputMap","_map","Map","opts","declarations","scope","metadata","hub","file","getCode","getScope","addHelper","bind","buildError","buildCodeFrameError","NodePath","get","parentPath","parent","container","key","setContext","interpreter","value","replaceWith","remove","set","val","Error","has","getModuleName","addImport","availableHelper","name","versionRange","minVersion","err","semver","valid","intersects","declar","generator","res","ensure","uid","generateUidIdentifier","dependencies","getDependencies","dep","Object","keys","getAllBindings","nodes","globals","forEach","hasBinding","rename","_compact","unshiftContainer","indexOf","isVariableDeclaration","registerDeclaration","addTemplateObject","msg","_Error","SyntaxError","_loc","txt","highlightCode","start","line","column","end","undefined"],"sources":["C:\\Users\\Rohith\\mern\\frontend\\node_modules\\@babel\\core\\src\\transformation\\file\\file.ts"],"sourcesContent":["import * as helpers from \"@babel/helpers\";\nimport { NodePath } from \"@babel/traverse\";\nimport type { HubInterface, Visitor, Scope } from \"@babel/traverse\";\nimport { codeFrameColumns } from \"@babel/code-frame\";\nimport traverse from \"@babel/traverse\";\nimport { cloneNode, interpreterDirective } from \"@babel/types\";\nimport type * as t from \"@babel/types\";\nimport { getModuleName } from \"@babel/helper-module-transforms\";\nimport semver from \"semver\";\n\nimport type { NormalizedFile } from \"../normalize-file\";\n\nconst errorVisitor: Visitor<{ loc: NodeLocation[\"loc\"] | null }> = {\n  enter(path, state) {\n    const loc = path.node.loc;\n    if (loc) {\n      state.loc = loc;\n      path.stop();\n    }\n  },\n};\n\nexport type NodeLocation = {\n  loc?: {\n    end?: {\n      line: number;\n      column: number;\n    };\n    start: {\n      line: number;\n      column: number;\n    };\n  };\n  _loc?: {\n    end?: {\n      line: number;\n      column: number;\n    };\n    start: {\n      line: number;\n      column: number;\n    };\n  };\n};\n\nexport default class File {\n  _map: Map<unknown, unknown> = new Map();\n  opts: { [key: string]: any };\n  declarations: { [key: string]: t.Identifier } = {};\n  path: NodePath<t.Program>;\n  ast: t.File;\n  scope: Scope;\n  metadata: { [key: string]: any } = {};\n  code: string = \"\";\n  inputMap: any;\n\n  hub: HubInterface & { file: File } = {\n    // keep it for the usage in babel-core, ex: path.hub.file.opts.filename\n    file: this,\n    getCode: () => this.code,\n    getScope: () => this.scope,\n    addHelper: this.addHelper.bind(this),\n    buildError: this.buildCodeFrameError.bind(this),\n  };\n\n  constructor(options: {}, { code, ast, inputMap }: NormalizedFile) {\n    this.opts = options;\n    this.code = code;\n    this.ast = ast;\n    this.inputMap = inputMap;\n\n    this.path = NodePath.get({\n      hub: this.hub,\n      parentPath: null,\n      parent: this.ast,\n      container: this.ast,\n      key: \"program\",\n    }).setContext() as NodePath<t.Program>;\n    this.scope = this.path.scope;\n  }\n\n  /**\n   * Provide backward-compatible access to the interpreter directive handling\n   * in Babel 6.x. If you are writing a plugin for Babel 7.x, it would be\n   * best to use 'program.interpreter' directly.\n   */\n  get shebang(): string {\n    const { interpreter } = this.path.node;\n    return interpreter ? interpreter.value : \"\";\n  }\n  set shebang(value: string) {\n    if (value) {\n      this.path.get(\"interpreter\").replaceWith(interpreterDirective(value));\n    } else {\n      this.path.get(\"interpreter\").remove();\n    }\n  }\n\n  set(key: unknown, val: unknown) {\n    if (key === \"helpersNamespace\") {\n      throw new Error(\n        \"Babel 7.0.0-beta.56 has dropped support for the 'helpersNamespace' utility.\" +\n          \"If you are using @babel/plugin-external-helpers you will need to use a newer \" +\n          \"version than the one you currently have installed. \" +\n          \"If you have your own implementation, you'll want to explore using 'helperGenerator' \" +\n          \"alongside 'file.availableHelper()'.\",\n      );\n    }\n\n    this._map.set(key, val);\n  }\n\n  get(key: unknown): any {\n    return this._map.get(key);\n  }\n\n  has(key: unknown): boolean {\n    return this._map.has(key);\n  }\n\n  getModuleName(): string | undefined | null {\n    return getModuleName(this.opts, this.opts);\n  }\n\n  addImport() {\n    throw new Error(\n      \"This API has been removed. If you're looking for this \" +\n        \"functionality in Babel 7, you should import the \" +\n        \"'@babel/helper-module-imports' module and use the functions exposed \" +\n        \" from that module, such as 'addNamed' or 'addDefault'.\",\n    );\n  }\n\n  /**\n   * Check if a given helper is available in @babel/core's helper list.\n   *\n   * This _also_ allows you to pass a Babel version specifically. If the\n   * helper exists, but was not available for the full given range, it will be\n   * considered unavailable.\n   */\n  availableHelper(name: string, versionRange?: string | null): boolean {\n    let minVersion;\n    try {\n      minVersion = helpers.minVersion(name);\n    } catch (err) {\n      if (err.code !== \"BABEL_HELPER_UNKNOWN\") throw err;\n\n      return false;\n    }\n\n    if (typeof versionRange !== \"string\") return true;\n\n    // semver.intersects() has some surprising behavior with comparing ranges\n    // with pre-release versions. We add '^' to ensure that we are always\n    // comparing ranges with ranges, which sidesteps this logic.\n    // For example:\n    //\n    //   semver.intersects(`<7.0.1`, \"7.0.0-beta.0\") // false - surprising\n    //   semver.intersects(`<7.0.1`, \"^7.0.0-beta.0\") // true - expected\n    //\n    // This is because the first falls back to\n    //\n    //   semver.satisfies(\"7.0.0-beta.0\", `<7.0.1`) // false - surprising\n    //\n    // and this fails because a prerelease version can only satisfy a range\n    // if it is a prerelease within the same major/minor/patch range.\n    //\n    // Note: If this is found to have issues, please also revisit the logic in\n    // transform-runtime's definitions.js file.\n    if (semver.valid(versionRange)) versionRange = `^${versionRange}`;\n\n    return (\n      !semver.intersects(`<${minVersion}`, versionRange) &&\n      !semver.intersects(`>=8.0.0`, versionRange)\n    );\n  }\n\n  addHelper(name: string): t.Identifier {\n    const declar = this.declarations[name];\n    if (declar) return cloneNode(declar);\n\n    const generator = this.get(\"helperGenerator\");\n    if (generator) {\n      const res = generator(name);\n      if (res) return res;\n    }\n\n    // make sure that the helper exists\n    helpers.ensure(name, File);\n\n    const uid = (this.declarations[name] =\n      this.scope.generateUidIdentifier(name));\n\n    const dependencies: { [key: string]: t.Identifier } = {};\n    for (const dep of helpers.getDependencies(name)) {\n      dependencies[dep] = this.addHelper(dep);\n    }\n\n    const { nodes, globals } = helpers.get(\n      name,\n      dep => dependencies[dep],\n      uid,\n      Object.keys(this.scope.getAllBindings()),\n    );\n\n    globals.forEach(name => {\n      if (this.path.scope.hasBinding(name, true /* noGlobals */)) {\n        this.path.scope.rename(name);\n      }\n    });\n\n    nodes.forEach(node => {\n      // @ts-expect-error Fixeme: document _compact node property\n      node._compact = true;\n    });\n\n    this.path.unshiftContainer(\"body\", nodes);\n    // TODO: NodePath#unshiftContainer should automatically register new\n    // bindings.\n    this.path.get(\"body\").forEach(path => {\n      if (nodes.indexOf(path.node) === -1) return;\n      if (path.isVariableDeclaration()) this.scope.registerDeclaration(path);\n    });\n\n    return uid;\n  }\n\n  addTemplateObject() {\n    throw new Error(\n      \"This function has been moved into the template literal transform itself.\",\n    );\n  }\n\n  buildCodeFrameError(\n    node: NodeLocation | undefined | null,\n    msg: string,\n    _Error: typeof Error = SyntaxError,\n  ): Error {\n    let loc = node && (node.loc || node._loc);\n\n    if (!loc && node) {\n      const state: { loc?: NodeLocation[\"loc\"] | null } = {\n        loc: null,\n      };\n      traverse(node as t.Node, errorVisitor, this.scope, state);\n      loc = state.loc;\n\n      let txt =\n        \"This is an error on an internal node. Probably an internal error.\";\n      if (loc) txt += \" Location has been estimated.\";\n\n      msg += ` (${txt})`;\n    }\n\n    if (loc) {\n      const { highlightCode = true } = this.opts;\n\n      msg +=\n        \"\\n\" +\n        codeFrameColumns(\n          this.code,\n          {\n            start: {\n              line: loc.start.line,\n              column: loc.start.column + 1,\n            },\n            end:\n              loc.end && loc.start.line === loc.end.line\n                ? {\n                    line: loc.end.line,\n                    column: loc.end.column + 1,\n                  }\n                : undefined,\n          },\n          { highlightCode },\n        );\n    }\n\n    return new _Error(msg);\n  }\n}\n"]},"metadata":{},"sourceType":"script"}