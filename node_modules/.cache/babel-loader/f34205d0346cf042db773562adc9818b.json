{"ast":null,"code":"/**\n * @fileoverview Enforce lang attribute has a valid value.\n * @author Ethan Cohen\n */\n// -----------------------------------------------------------------------------\n// Requirements\n// -----------------------------------------------------------------------------\nimport { RuleTester } from 'eslint';\nimport parserOptionsMapper from '../../__util__/parserOptionsMapper';\nimport rule from '../../../src/rules/lang'; // -----------------------------------------------------------------------------\n// Tests\n// -----------------------------------------------------------------------------\n\nconst ruleTester = new RuleTester();\nconst expectedError = {\n  message: 'lang attribute must have a valid value.',\n  type: 'JSXAttribute'\n};\nconst componentsSettings = {\n  'jsx-a11y': {\n    components: {\n      Foo: 'html'\n    }\n  }\n};\nruleTester.run('lang', rule, {\n  valid: [{\n    code: '<div />;'\n  }, {\n    code: '<div foo=\"bar\" />;'\n  }, {\n    code: '<div lang=\"foo\" />;'\n  }, {\n    code: '<html lang=\"en\" />'\n  }, {\n    code: '<html lang=\"en-US\" />'\n  }, {\n    code: '<html lang=\"zh-Hans\" />'\n  }, {\n    code: '<html lang=\"zh-Hant-HK\" />'\n  }, {\n    code: '<html lang=\"zh-yue-Hant\" />'\n  }, {\n    code: '<html lang=\"ja-Latn\" />'\n  }, {\n    code: '<html lang={foo} />'\n  }, {\n    code: '<HTML lang=\"foo\" />'\n  }, {\n    code: '<Foo lang={undefined} />'\n  }, {\n    code: '<Foo lang=\"en\" />',\n    settings: componentsSettings\n  }].map(parserOptionsMapper),\n  invalid: [{\n    code: '<html lang=\"foo\" />',\n    errors: [expectedError]\n  }, {\n    code: '<html lang=\"zz-LL\" />',\n    errors: [expectedError]\n  }, {\n    code: '<html lang={undefined} />',\n    errors: [expectedError]\n  }, {\n    code: '<Foo lang={undefined} />',\n    settings: componentsSettings,\n    errors: [expectedError]\n  }].map(parserOptionsMapper)\n});","map":{"version":3,"names":["RuleTester","parserOptionsMapper","rule","ruleTester","expectedError","message","type","componentsSettings","components","Foo","run","valid","code","settings","map","invalid","errors"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/eslint-plugin-jsx-a11y/__tests__/src/rules/lang-test.js"],"sourcesContent":["/**\n * @fileoverview Enforce lang attribute has a valid value.\n * @author Ethan Cohen\n */\n\n// -----------------------------------------------------------------------------\n// Requirements\n// -----------------------------------------------------------------------------\n\nimport { RuleTester } from 'eslint';\nimport parserOptionsMapper from '../../__util__/parserOptionsMapper';\nimport rule from '../../../src/rules/lang';\n\n// -----------------------------------------------------------------------------\n// Tests\n// -----------------------------------------------------------------------------\n\nconst ruleTester = new RuleTester();\n\nconst expectedError = {\n  message: 'lang attribute must have a valid value.',\n  type: 'JSXAttribute',\n};\n\nconst componentsSettings = {\n  'jsx-a11y': {\n    components: {\n      Foo: 'html',\n    },\n  },\n};\n\nruleTester.run('lang', rule, {\n  valid: [\n    { code: '<div />;' },\n    { code: '<div foo=\"bar\" />;' },\n    { code: '<div lang=\"foo\" />;' },\n    { code: '<html lang=\"en\" />' },\n    { code: '<html lang=\"en-US\" />' },\n    { code: '<html lang=\"zh-Hans\" />' },\n    { code: '<html lang=\"zh-Hant-HK\" />' },\n    { code: '<html lang=\"zh-yue-Hant\" />' },\n    { code: '<html lang=\"ja-Latn\" />' },\n    { code: '<html lang={foo} />' },\n    { code: '<HTML lang=\"foo\" />' },\n    { code: '<Foo lang={undefined} />' },\n    { code: '<Foo lang=\"en\" />', settings: componentsSettings },\n  ].map(parserOptionsMapper),\n  invalid: [\n    { code: '<html lang=\"foo\" />', errors: [expectedError] },\n    { code: '<html lang=\"zz-LL\" />', errors: [expectedError] },\n    { code: '<html lang={undefined} />', errors: [expectedError] },\n    { code: '<Foo lang={undefined} />', settings: componentsSettings, errors: [expectedError] },\n  ].map(parserOptionsMapper),\n});\n"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA,SAASA,UAAT,QAA2B,QAA3B;AACA,OAAOC,mBAAP,MAAgC,oCAAhC;AACA,OAAOC,IAAP,MAAiB,yBAAjB,C,CAEA;AACA;AACA;;AAEA,MAAMC,UAAU,GAAG,IAAIH,UAAJ,EAAnB;AAEA,MAAMI,aAAa,GAAG;EACpBC,OAAO,EAAE,yCADW;EAEpBC,IAAI,EAAE;AAFc,CAAtB;AAKA,MAAMC,kBAAkB,GAAG;EACzB,YAAY;IACVC,UAAU,EAAE;MACVC,GAAG,EAAE;IADK;EADF;AADa,CAA3B;AAQAN,UAAU,CAACO,GAAX,CAAe,MAAf,EAAuBR,IAAvB,EAA6B;EAC3BS,KAAK,EAAE,CACL;IAAEC,IAAI,EAAE;EAAR,CADK,EAEL;IAAEA,IAAI,EAAE;EAAR,CAFK,EAGL;IAAEA,IAAI,EAAE;EAAR,CAHK,EAIL;IAAEA,IAAI,EAAE;EAAR,CAJK,EAKL;IAAEA,IAAI,EAAE;EAAR,CALK,EAML;IAAEA,IAAI,EAAE;EAAR,CANK,EAOL;IAAEA,IAAI,EAAE;EAAR,CAPK,EAQL;IAAEA,IAAI,EAAE;EAAR,CARK,EASL;IAAEA,IAAI,EAAE;EAAR,CATK,EAUL;IAAEA,IAAI,EAAE;EAAR,CAVK,EAWL;IAAEA,IAAI,EAAE;EAAR,CAXK,EAYL;IAAEA,IAAI,EAAE;EAAR,CAZK,EAaL;IAAEA,IAAI,EAAE,mBAAR;IAA6BC,QAAQ,EAAEN;EAAvC,CAbK,EAcLO,GAdK,CAcDb,mBAdC,CADoB;EAgB3Bc,OAAO,EAAE,CACP;IAAEH,IAAI,EAAE,qBAAR;IAA+BI,MAAM,EAAE,CAACZ,aAAD;EAAvC,CADO,EAEP;IAAEQ,IAAI,EAAE,uBAAR;IAAiCI,MAAM,EAAE,CAACZ,aAAD;EAAzC,CAFO,EAGP;IAAEQ,IAAI,EAAE,2BAAR;IAAqCI,MAAM,EAAE,CAACZ,aAAD;EAA7C,CAHO,EAIP;IAAEQ,IAAI,EAAE,0BAAR;IAAoCC,QAAQ,EAAEN,kBAA9C;IAAkES,MAAM,EAAE,CAACZ,aAAD;EAA1E,CAJO,EAKPU,GALO,CAKHb,mBALG;AAhBkB,CAA7B"},"metadata":{},"sourceType":"module"}