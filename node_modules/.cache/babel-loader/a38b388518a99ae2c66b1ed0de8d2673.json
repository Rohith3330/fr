{"ast":null,"code":"import { dirname, resolve } from 'path';\nimport { readdir, stat } from 'fs';\nimport { promisify } from 'util';\nconst toStats = promisify(stat);\nconst toRead = promisify(readdir);\nexport default async function (start, callback) {\n  let dir = resolve('.', start);\n  let tmp,\n      stats = await toStats(dir);\n\n  if (!stats.isDirectory()) {\n    dir = dirname(dir);\n  }\n\n  while (true) {\n    tmp = await callback(dir, await toRead(dir));\n    if (tmp) return resolve(dir, tmp);\n    dir = dirname(tmp = dir);\n    if (tmp === dir) break;\n  }\n}","map":{"version":3,"names":["dirname","resolve","readdir","stat","promisify","toStats","toRead","start","callback","dir","tmp","stats","isDirectory"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/escalade/dist/index.mjs"],"sourcesContent":["import { dirname, resolve } from 'path';\nimport { readdir, stat } from 'fs';\nimport { promisify } from 'util';\n\nconst toStats = promisify(stat);\nconst toRead = promisify(readdir);\n\nexport default async function (start, callback) {\n\tlet dir = resolve('.', start);\n\tlet tmp, stats = await toStats(dir);\n\n\tif (!stats.isDirectory()) {\n\t\tdir = dirname(dir);\n\t}\n\n\twhile (true) {\n\t\ttmp = await callback(dir, await toRead(dir));\n\t\tif (tmp) return resolve(dir, tmp);\n\t\tdir = dirname(tmp = dir);\n\t\tif (tmp === dir) break;\n\t}\n}\n"],"mappings":"AAAA,SAASA,OAAT,EAAkBC,OAAlB,QAAiC,MAAjC;AACA,SAASC,OAAT,EAAkBC,IAAlB,QAA8B,IAA9B;AACA,SAASC,SAAT,QAA0B,MAA1B;AAEA,MAAMC,OAAO,GAAGD,SAAS,CAACD,IAAD,CAAzB;AACA,MAAMG,MAAM,GAAGF,SAAS,CAACF,OAAD,CAAxB;AAEA,eAAe,gBAAgBK,KAAhB,EAAuBC,QAAvB,EAAiC;EAC/C,IAAIC,GAAG,GAAGR,OAAO,CAAC,GAAD,EAAMM,KAAN,CAAjB;EACA,IAAIG,GAAJ;EAAA,IAASC,KAAK,GAAG,MAAMN,OAAO,CAACI,GAAD,CAA9B;;EAEA,IAAI,CAACE,KAAK,CAACC,WAAN,EAAL,EAA0B;IACzBH,GAAG,GAAGT,OAAO,CAACS,GAAD,CAAb;EACA;;EAED,OAAO,IAAP,EAAa;IACZC,GAAG,GAAG,MAAMF,QAAQ,CAACC,GAAD,EAAM,MAAMH,MAAM,CAACG,GAAD,CAAlB,CAApB;IACA,IAAIC,GAAJ,EAAS,OAAOT,OAAO,CAACQ,GAAD,EAAMC,GAAN,CAAd;IACTD,GAAG,GAAGT,OAAO,CAACU,GAAG,GAAGD,GAAP,CAAb;IACA,IAAIC,GAAG,KAAKD,GAAZ,EAAiB;EACjB;AACD"},"metadata":{},"sourceType":"module"}