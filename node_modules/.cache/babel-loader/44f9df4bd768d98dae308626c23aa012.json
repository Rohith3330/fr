{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _lodash = _interopRequireDefault(require(\"lodash\"));\n\nvar _utilities = require(\"../utilities\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nconst schema = [{\n  additionalProperties: false,\n  properties: {\n    excludeArrowFunctions: {\n      enum: [false, true, 'expressionsOnly']\n    },\n    excludeParameterMatch: {\n      type: 'string'\n    }\n  },\n  type: 'object'\n}];\nconst create = (0, _utilities.iterateFunctionNodes)(context => {\n  const skipArrows = _lodash.default.get(context, 'options[0].excludeArrowFunctions');\n\n  const excludeParameterMatch = new RegExp(_lodash.default.get(context, 'options[0].excludeParameterMatch', 'a^'), 'u');\n  return functionNode => {\n    // It is save to ignore FunctionTypeAnnotation nodes in this rule.\n    if (functionNode.type === 'FunctionTypeAnnotation') {\n      return;\n    }\n\n    const isArrow = functionNode.type === 'ArrowFunctionExpression';\n    const isArrowFunctionExpression = functionNode.expression;\n\n    const functionAnnotation = isArrow && _lodash.default.get(functionNode, 'parent.id.typeAnnotation');\n\n    if (skipArrows === 'expressionsOnly' && isArrowFunctionExpression || skipArrows === true && isArrow) {\n      return;\n    } // eslint-disable-next-line unicorn/no-array-for-each\n\n\n    _lodash.default.forEach(functionNode.params, identifierNode => {\n      const parameterName = (0, _utilities.getParameterName)(identifierNode, context);\n\n      if (excludeParameterMatch.test(parameterName)) {\n        return;\n      }\n\n      let typeAnnotation;\n      typeAnnotation = _lodash.default.get(identifierNode, 'typeAnnotation') || _lodash.default.get(identifierNode, 'left.typeAnnotation');\n\n      if (isArrow && functionAnnotation) {\n        typeAnnotation = true;\n      }\n\n      if (!typeAnnotation) {\n        context.report({\n          data: {\n            name: (0, _utilities.quoteName)(parameterName)\n          },\n          message: 'Missing {{name}}parameter type annotation.',\n          node: identifierNode\n        });\n      }\n    });\n  };\n});\nvar _default = {\n  create,\n  schema\n};\nexports.default = _default;\nmodule.exports = exports.default;","map":{"version":3,"names":["Object","defineProperty","exports","value","default","_lodash","_interopRequireDefault","require","_utilities","obj","__esModule","schema","additionalProperties","properties","excludeArrowFunctions","enum","excludeParameterMatch","type","create","iterateFunctionNodes","context","skipArrows","get","RegExp","functionNode","isArrow","isArrowFunctionExpression","expression","functionAnnotation","forEach","params","identifierNode","parameterName","getParameterName","test","typeAnnotation","report","data","name","quoteName","message","node","_default","module"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/eslint-plugin-flowtype/dist/rules/requireParameterType.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _lodash = _interopRequireDefault(require(\"lodash\"));\n\nvar _utilities = require(\"../utilities\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst schema = [{\n  additionalProperties: false,\n  properties: {\n    excludeArrowFunctions: {\n      enum: [false, true, 'expressionsOnly']\n    },\n    excludeParameterMatch: {\n      type: 'string'\n    }\n  },\n  type: 'object'\n}];\nconst create = (0, _utilities.iterateFunctionNodes)(context => {\n  const skipArrows = _lodash.default.get(context, 'options[0].excludeArrowFunctions');\n\n  const excludeParameterMatch = new RegExp(_lodash.default.get(context, 'options[0].excludeParameterMatch', 'a^'), 'u');\n  return functionNode => {\n    // It is save to ignore FunctionTypeAnnotation nodes in this rule.\n    if (functionNode.type === 'FunctionTypeAnnotation') {\n      return;\n    }\n\n    const isArrow = functionNode.type === 'ArrowFunctionExpression';\n    const isArrowFunctionExpression = functionNode.expression;\n\n    const functionAnnotation = isArrow && _lodash.default.get(functionNode, 'parent.id.typeAnnotation');\n\n    if (skipArrows === 'expressionsOnly' && isArrowFunctionExpression || skipArrows === true && isArrow) {\n      return;\n    } // eslint-disable-next-line unicorn/no-array-for-each\n\n\n    _lodash.default.forEach(functionNode.params, identifierNode => {\n      const parameterName = (0, _utilities.getParameterName)(identifierNode, context);\n\n      if (excludeParameterMatch.test(parameterName)) {\n        return;\n      }\n\n      let typeAnnotation;\n      typeAnnotation = _lodash.default.get(identifierNode, 'typeAnnotation') || _lodash.default.get(identifierNode, 'left.typeAnnotation');\n\n      if (isArrow && functionAnnotation) {\n        typeAnnotation = true;\n      }\n\n      if (!typeAnnotation) {\n        context.report({\n          data: {\n            name: (0, _utilities.quoteName)(parameterName)\n          },\n          message: 'Missing {{name}}parameter type annotation.',\n          node: identifierNode\n        });\n      }\n    });\n  };\n});\nvar _default = {\n  create,\n  schema\n};\nexports.default = _default;\nmodule.exports = exports.default;"],"mappings":"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"},"metadata":{},"sourceType":"script"}