{"ast":null,"code":"\"use strict\";\n\nconst {\n  validate\n} = require('schema-utils');\n\nconst schema = require('./options.json');\n/** @typedef {import(\"eslint\").ESLint.Options} ESLintOptions */\n\n/** @typedef {import('eslint').ESLint.LintResult} LintResult */\n\n/** @typedef {import('eslint').ESLint.LintResultData} LintResultData */\n\n/**\n * @callback FormatterFunction\n * @param {LintResult[]} results\n * @param {LintResultData=} data\n * @returns {string}\n */\n\n/**\n * @typedef {Object} OutputReport\n * @property {string=} filePath\n * @property {string|FormatterFunction=} formatter\n */\n\n/**\n * @typedef {Object} PluginOptions\n * @property {string=} context\n * @property {boolean=} emitError\n * @property {boolean=} emitWarning\n * @property {string=} eslintPath\n * @property {string|string[]=} exclude\n * @property {string|string[]=} extensions\n * @property {boolean=} failOnError\n * @property {boolean=} failOnWarning\n * @property {string|string[]=} files\n * @property {boolean=} fix\n * @property {string|FormatterFunction=} formatter\n * @property {boolean=} lintDirtyModulesOnly\n * @property {boolean=} quiet\n * @property {OutputReport=} outputReport\n * @property {number|boolean=} threads\n * @property {RegExp|RegExp[]=} resourceQueryExclude\n */\n\n/** @typedef {PluginOptions & ESLintOptions} Options */\n\n/**\n * @param {Options} pluginOptions\n * @returns {PluginOptions}\n */\n\n\nfunction getOptions(pluginOptions) {\n  const options = {\n    extensions: 'js',\n    emitError: true,\n    emitWarning: true,\n    failOnError: true,\n    resourceQueryExclude: [],\n    ...pluginOptions,\n    ...(pluginOptions.quiet ? {\n      emitError: true,\n      emitWarning: false\n    } : {})\n  }; // @ts-ignore\n\n  validate(schema, options, {\n    name: 'ESLint Webpack Plugin',\n    baseDataPath: 'options'\n  });\n  return options;\n}\n/**\n * @param {Options} loaderOptions\n * @returns {ESLintOptions}\n */\n\n\nfunction getESLintOptions(loaderOptions) {\n  const eslintOptions = { ...loaderOptions\n  }; // Keep the fix option because it is common to both the loader and ESLint.\n\n  const {\n    fix,\n    extensions,\n    ...eslintOnlyOptions\n  } = schema.properties; // No need to guard the for-in because schema.properties has hardcoded keys.\n  // eslint-disable-next-line guard-for-in\n\n  for (const option in eslintOnlyOptions) {\n    // @ts-ignore\n    delete eslintOptions[option];\n  }\n\n  return eslintOptions;\n}\n\nmodule.exports = {\n  getOptions,\n  getESLintOptions\n};","map":{"version":3,"names":["validate","require","schema","getOptions","pluginOptions","options","extensions","emitError","emitWarning","failOnError","resourceQueryExclude","quiet","name","baseDataPath","getESLintOptions","loaderOptions","eslintOptions","fix","eslintOnlyOptions","properties","option","module","exports"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/eslint-webpack-plugin/dist/options.js"],"sourcesContent":["\"use strict\";\n\nconst {\n  validate\n} = require('schema-utils');\n\nconst schema = require('./options.json');\n/** @typedef {import(\"eslint\").ESLint.Options} ESLintOptions */\n\n/** @typedef {import('eslint').ESLint.LintResult} LintResult */\n\n/** @typedef {import('eslint').ESLint.LintResultData} LintResultData */\n\n/**\n * @callback FormatterFunction\n * @param {LintResult[]} results\n * @param {LintResultData=} data\n * @returns {string}\n */\n\n/**\n * @typedef {Object} OutputReport\n * @property {string=} filePath\n * @property {string|FormatterFunction=} formatter\n */\n\n/**\n * @typedef {Object} PluginOptions\n * @property {string=} context\n * @property {boolean=} emitError\n * @property {boolean=} emitWarning\n * @property {string=} eslintPath\n * @property {string|string[]=} exclude\n * @property {string|string[]=} extensions\n * @property {boolean=} failOnError\n * @property {boolean=} failOnWarning\n * @property {string|string[]=} files\n * @property {boolean=} fix\n * @property {string|FormatterFunction=} formatter\n * @property {boolean=} lintDirtyModulesOnly\n * @property {boolean=} quiet\n * @property {OutputReport=} outputReport\n * @property {number|boolean=} threads\n * @property {RegExp|RegExp[]=} resourceQueryExclude\n */\n\n/** @typedef {PluginOptions & ESLintOptions} Options */\n\n/**\n * @param {Options} pluginOptions\n * @returns {PluginOptions}\n */\n\n\nfunction getOptions(pluginOptions) {\n  const options = {\n    extensions: 'js',\n    emitError: true,\n    emitWarning: true,\n    failOnError: true,\n    resourceQueryExclude: [],\n    ...pluginOptions,\n    ...(pluginOptions.quiet ? {\n      emitError: true,\n      emitWarning: false\n    } : {})\n  }; // @ts-ignore\n\n  validate(schema, options, {\n    name: 'ESLint Webpack Plugin',\n    baseDataPath: 'options'\n  });\n  return options;\n}\n/**\n * @param {Options} loaderOptions\n * @returns {ESLintOptions}\n */\n\n\nfunction getESLintOptions(loaderOptions) {\n  const eslintOptions = { ...loaderOptions\n  }; // Keep the fix option because it is common to both the loader and ESLint.\n\n  const {\n    fix,\n    extensions,\n    ...eslintOnlyOptions\n  } = schema.properties; // No need to guard the for-in because schema.properties has hardcoded keys.\n  // eslint-disable-next-line guard-for-in\n\n  for (const option in eslintOnlyOptions) {\n    // @ts-ignore\n    delete eslintOptions[option];\n  }\n\n  return eslintOptions;\n}\n\nmodule.exports = {\n  getOptions,\n  getESLintOptions\n};"],"mappings":"AAAA;;AAEA,MAAM;EACJA;AADI,IAEFC,OAAO,CAAC,cAAD,CAFX;;AAIA,MAAMC,MAAM,GAAGD,OAAO,CAAC,gBAAD,CAAtB;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;;AAGA,SAASE,UAAT,CAAoBC,aAApB,EAAmC;EACjC,MAAMC,OAAO,GAAG;IACdC,UAAU,EAAE,IADE;IAEdC,SAAS,EAAE,IAFG;IAGdC,WAAW,EAAE,IAHC;IAIdC,WAAW,EAAE,IAJC;IAKdC,oBAAoB,EAAE,EALR;IAMd,GAAGN,aANW;IAOd,IAAIA,aAAa,CAACO,KAAd,GAAsB;MACxBJ,SAAS,EAAE,IADa;MAExBC,WAAW,EAAE;IAFW,CAAtB,GAGA,EAHJ;EAPc,CAAhB,CADiC,CAY9B;;EAEHR,QAAQ,CAACE,MAAD,EAASG,OAAT,EAAkB;IACxBO,IAAI,EAAE,uBADkB;IAExBC,YAAY,EAAE;EAFU,CAAlB,CAAR;EAIA,OAAOR,OAAP;AACD;AACD;AACA;AACA;AACA;;;AAGA,SAASS,gBAAT,CAA0BC,aAA1B,EAAyC;EACvC,MAAMC,aAAa,GAAG,EAAE,GAAGD;EAAL,CAAtB,CADuC,CAEpC;;EAEH,MAAM;IACJE,GADI;IAEJX,UAFI;IAGJ,GAAGY;EAHC,IAIFhB,MAAM,CAACiB,UAJX,CAJuC,CAQhB;EACvB;;EAEA,KAAK,MAAMC,MAAX,IAAqBF,iBAArB,EAAwC;IACtC;IACA,OAAOF,aAAa,CAACI,MAAD,CAApB;EACD;;EAED,OAAOJ,aAAP;AACD;;AAEDK,MAAM,CAACC,OAAP,GAAiB;EACfnB,UADe;EAEfW;AAFe,CAAjB"},"metadata":{},"sourceType":"script"}