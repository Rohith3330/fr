{"ast":null,"code":"'use strict';\n\nvar baseCssAdapter = require('css-select-base-adapter');\n/**\n * DOMUtils API for SVGO AST (used by css-select)\n */\n\n\nvar svgoCssSelectAdapterMin = {\n  // is the node a tag?\n  // isTag: ( node:Node ) => isTag:Boolean\n  isTag: function (node) {\n    return node.isElem();\n  },\n  // get the parent of the node\n  // getParent: ( node:Node ) => parentNode:Node\n  // returns null when no parent exists\n  getParent: function (node) {\n    return node.parentNode || null;\n  },\n  // get the node's children\n  // getChildren: ( node:Node ) => children:[Node]\n  getChildren: function (node) {\n    return node.content || [];\n  },\n  // get the name of the tag\n  // getName: ( elem:ElementNode ) => tagName:String\n  getName: function (elemAst) {\n    return elemAst.elem;\n  },\n  // get the text content of the node, and its children if it has any\n  // getText: ( node:Node ) => text:String\n  // returns empty string when there is no text\n  getText: function (node) {\n    return node.content[0].text || node.content[0].cdata || '';\n  },\n  // get the attribute value\n  // getAttributeValue: ( elem:ElementNode, name:String ) => value:String\n  // returns null when attribute doesn't exist\n  getAttributeValue: function (elem, name) {\n    return elem.hasAttr(name) ? elem.attr(name).value : null;\n  }\n}; // use base adapter for default implementation\n\nvar svgoCssSelectAdapter = baseCssAdapter(svgoCssSelectAdapterMin);\nmodule.exports = svgoCssSelectAdapter;","map":{"version":3,"names":["baseCssAdapter","require","svgoCssSelectAdapterMin","isTag","node","isElem","getParent","parentNode","getChildren","content","getName","elemAst","elem","getText","text","cdata","getAttributeValue","name","hasAttr","attr","value","svgoCssSelectAdapter","module","exports"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/svgo/lib/svgo/css-select-adapter.js"],"sourcesContent":["'use strict';\n\nvar baseCssAdapter = require('css-select-base-adapter');\n\n/**\n * DOMUtils API for SVGO AST (used by css-select)\n */\nvar svgoCssSelectAdapterMin = {\n\n    // is the node a tag?\n    // isTag: ( node:Node ) => isTag:Boolean\n    isTag: function(node) {\n        return node.isElem();\n    },\n\n    // get the parent of the node\n    // getParent: ( node:Node ) => parentNode:Node\n    // returns null when no parent exists\n    getParent: function(node) {\n        return node.parentNode || null;\n    },\n\n    // get the node's children\n    // getChildren: ( node:Node ) => children:[Node]\n    getChildren: function(node) {\n        return node.content || [];\n    },\n\n    // get the name of the tag\n    // getName: ( elem:ElementNode ) => tagName:String\n    getName: function(elemAst) {\n        return elemAst.elem;\n    },\n\n    // get the text content of the node, and its children if it has any\n    // getText: ( node:Node ) => text:String\n    // returns empty string when there is no text\n    getText: function(node) {\n        return node.content[0].text || node.content[0].cdata || '';\n    },\n\n    // get the attribute value\n    // getAttributeValue: ( elem:ElementNode, name:String ) => value:String\n    // returns null when attribute doesn't exist\n    getAttributeValue: function(elem, name) {\n        return elem.hasAttr(name) ? elem.attr(name).value : null;\n    }\n};\n\n// use base adapter for default implementation\nvar svgoCssSelectAdapter = baseCssAdapter(svgoCssSelectAdapterMin);\n\nmodule.exports = svgoCssSelectAdapter;\n"],"mappings":"AAAA;;AAEA,IAAIA,cAAc,GAAGC,OAAO,CAAC,yBAAD,CAA5B;AAEA;AACA;AACA;;;AACA,IAAIC,uBAAuB,GAAG;EAE1B;EACA;EACAC,KAAK,EAAE,UAASC,IAAT,EAAe;IAClB,OAAOA,IAAI,CAACC,MAAL,EAAP;EACH,CANyB;EAQ1B;EACA;EACA;EACAC,SAAS,EAAE,UAASF,IAAT,EAAe;IACtB,OAAOA,IAAI,CAACG,UAAL,IAAmB,IAA1B;EACH,CAbyB;EAe1B;EACA;EACAC,WAAW,EAAE,UAASJ,IAAT,EAAe;IACxB,OAAOA,IAAI,CAACK,OAAL,IAAgB,EAAvB;EACH,CAnByB;EAqB1B;EACA;EACAC,OAAO,EAAE,UAASC,OAAT,EAAkB;IACvB,OAAOA,OAAO,CAACC,IAAf;EACH,CAzByB;EA2B1B;EACA;EACA;EACAC,OAAO,EAAE,UAAST,IAAT,EAAe;IACpB,OAAOA,IAAI,CAACK,OAAL,CAAa,CAAb,EAAgBK,IAAhB,IAAwBV,IAAI,CAACK,OAAL,CAAa,CAAb,EAAgBM,KAAxC,IAAiD,EAAxD;EACH,CAhCyB;EAkC1B;EACA;EACA;EACAC,iBAAiB,EAAE,UAASJ,IAAT,EAAeK,IAAf,EAAqB;IACpC,OAAOL,IAAI,CAACM,OAAL,CAAaD,IAAb,IAAqBL,IAAI,CAACO,IAAL,CAAUF,IAAV,EAAgBG,KAArC,GAA6C,IAApD;EACH;AAvCyB,CAA9B,C,CA0CA;;AACA,IAAIC,oBAAoB,GAAGrB,cAAc,CAACE,uBAAD,CAAzC;AAEAoB,MAAM,CAACC,OAAP,GAAiBF,oBAAjB"},"metadata":{},"sourceType":"script"}