{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _jsxAstUtils = require(\"jsx-ast-utils\");\n/**\n * Returns boolean indicating whether the given element has been specified with\n * an AST node with a non-literal type.\n *\n * Returns true if the elements has a role and its value is not of a type Literal.\n * Otherwise returns false.\n */\n\n\nvar isNonLiteralProperty = function isNonLiteralProperty(attributes, propName) {\n  var prop = (0, _jsxAstUtils.getProp)(attributes, propName);\n  if (!prop) return false;\n  var propValue = prop.value;\n  if (!propValue) return false;\n  if (propValue.type === 'Literal') return false;\n\n  if (propValue.type === 'JSXExpressionContainer') {\n    var expression = propValue.expression;\n    if (expression.type === 'Identifier' && expression.name === 'undefined') return false;\n    if (expression.type === 'JSXText') return false;\n  }\n\n  return true;\n};\n\nvar _default = isNonLiteralProperty;\nexports[\"default\"] = _default;\nmodule.exports = exports.default;","map":{"version":3,"names":["Object","defineProperty","exports","value","_jsxAstUtils","require","isNonLiteralProperty","attributes","propName","prop","getProp","propValue","type","expression","name","_default","module","default"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/eslint-plugin-jsx-a11y/lib/util/isNonLiteralProperty.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _jsxAstUtils = require(\"jsx-ast-utils\");\n\n/**\n * Returns boolean indicating whether the given element has been specified with\n * an AST node with a non-literal type.\n *\n * Returns true if the elements has a role and its value is not of a type Literal.\n * Otherwise returns false.\n */\nvar isNonLiteralProperty = function isNonLiteralProperty(attributes, propName) {\n  var prop = (0, _jsxAstUtils.getProp)(attributes, propName);\n  if (!prop) return false;\n  var propValue = prop.value;\n  if (!propValue) return false;\n  if (propValue.type === 'Literal') return false;\n\n  if (propValue.type === 'JSXExpressionContainer') {\n    var expression = propValue.expression;\n    if (expression.type === 'Identifier' && expression.name === 'undefined') return false;\n    if (expression.type === 'JSXText') return false;\n  }\n\n  return true;\n};\n\nvar _default = isNonLiteralProperty;\nexports[\"default\"] = _default;\nmodule.exports = exports.default;"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAC3CC,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAAC,SAAD,CAAP,GAAqB,KAAK,CAA1B;;AAEA,IAAIE,YAAY,GAAGC,OAAO,CAAC,eAAD,CAA1B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIC,oBAAoB,GAAG,SAASA,oBAAT,CAA8BC,UAA9B,EAA0CC,QAA1C,EAAoD;EAC7E,IAAIC,IAAI,GAAG,CAAC,GAAGL,YAAY,CAACM,OAAjB,EAA0BH,UAA1B,EAAsCC,QAAtC,CAAX;EACA,IAAI,CAACC,IAAL,EAAW,OAAO,KAAP;EACX,IAAIE,SAAS,GAAGF,IAAI,CAACN,KAArB;EACA,IAAI,CAACQ,SAAL,EAAgB,OAAO,KAAP;EAChB,IAAIA,SAAS,CAACC,IAAV,KAAmB,SAAvB,EAAkC,OAAO,KAAP;;EAElC,IAAID,SAAS,CAACC,IAAV,KAAmB,wBAAvB,EAAiD;IAC/C,IAAIC,UAAU,GAAGF,SAAS,CAACE,UAA3B;IACA,IAAIA,UAAU,CAACD,IAAX,KAAoB,YAApB,IAAoCC,UAAU,CAACC,IAAX,KAAoB,WAA5D,EAAyE,OAAO,KAAP;IACzE,IAAID,UAAU,CAACD,IAAX,KAAoB,SAAxB,EAAmC,OAAO,KAAP;EACpC;;EAED,OAAO,IAAP;AACD,CAdD;;AAgBA,IAAIG,QAAQ,GAAGT,oBAAf;AACAJ,OAAO,CAAC,SAAD,CAAP,GAAqBa,QAArB;AACAC,MAAM,CAACd,OAAP,GAAiBA,OAAO,CAACe,OAAzB"},"metadata":{},"sourceType":"script"}