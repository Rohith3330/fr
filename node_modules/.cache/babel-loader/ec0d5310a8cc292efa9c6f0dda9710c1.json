{"ast":null,"code":"/**\n * URI.js\n *\n * @fileoverview An RFC 3986 compliant, scheme extendable URI parsing/validating/resolving library for JavaScript.\n * @author <a href=\"mailto:gary.court@gmail.com\">Gary Court</a>\n * @see http://github.com/garycourt/uri-js\n */\n\n/**\n * Copyright 2011 Gary Court. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification, are\n * permitted provided that the following conditions are met:\n *\n *    1. Redistributions of source code must retain the above copyright notice, this list of\n *       conditions and the following disclaimer.\n *\n *    2. Redistributions in binary form must reproduce the above copyright notice, this list\n *       of conditions and the following disclaimer in the documentation and/or other materials\n *       provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY GARY COURT ``AS IS'' AND ANY EXPRESS OR IMPLIED\n * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n * FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL GARY COURT OR\n * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF\n * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * The views and conclusions contained in the software and documentation are those of the\n * authors and should not be interpreted as representing official policies, either expressed\n * or implied, of Gary Court.\n */\nimport URI_PROTOCOL from \"./regexps-uri\";\nimport IRI_PROTOCOL from \"./regexps-iri\";\nimport punycode from \"punycode\";\nimport { toUpperCase, typeOf, assign } from \"./util\";\nexport const SCHEMES = {};\nexport function pctEncChar(chr) {\n  const c = chr.charCodeAt(0);\n  let e;\n  if (c < 16) e = \"%0\" + c.toString(16).toUpperCase();else if (c < 128) e = \"%\" + c.toString(16).toUpperCase();else if (c < 2048) e = \"%\" + (c >> 6 | 192).toString(16).toUpperCase() + \"%\" + (c & 63 | 128).toString(16).toUpperCase();else e = \"%\" + (c >> 12 | 224).toString(16).toUpperCase() + \"%\" + (c >> 6 & 63 | 128).toString(16).toUpperCase() + \"%\" + (c & 63 | 128).toString(16).toUpperCase();\n  return e;\n}\nexport function pctDecChars(str) {\n  let newStr = \"\";\n  let i = 0;\n  const il = str.length;\n\n  while (i < il) {\n    const c = parseInt(str.substr(i + 1, 2), 16);\n\n    if (c < 128) {\n      newStr += String.fromCharCode(c);\n      i += 3;\n    } else if (c >= 194 && c < 224) {\n      if (il - i >= 6) {\n        const c2 = parseInt(str.substr(i + 4, 2), 16);\n        newStr += String.fromCharCode((c & 31) << 6 | c2 & 63);\n      } else {\n        newStr += str.substr(i, 6);\n      }\n\n      i += 6;\n    } else if (c >= 224) {\n      if (il - i >= 9) {\n        const c2 = parseInt(str.substr(i + 4, 2), 16);\n        const c3 = parseInt(str.substr(i + 7, 2), 16);\n        newStr += String.fromCharCode((c & 15) << 12 | (c2 & 63) << 6 | c3 & 63);\n      } else {\n        newStr += str.substr(i, 9);\n      }\n\n      i += 9;\n    } else {\n      newStr += str.substr(i, 3);\n      i += 3;\n    }\n  }\n\n  return newStr;\n}\n\nfunction _normalizeComponentEncoding(components, protocol) {\n  function decodeUnreserved(str) {\n    const decStr = pctDecChars(str);\n    return !decStr.match(protocol.UNRESERVED) ? str : decStr;\n  }\n\n  if (components.scheme) components.scheme = String(components.scheme).replace(protocol.PCT_ENCODED, decodeUnreserved).toLowerCase().replace(protocol.NOT_SCHEME, \"\");\n  if (components.userinfo !== undefined) components.userinfo = String(components.userinfo).replace(protocol.PCT_ENCODED, decodeUnreserved).replace(protocol.NOT_USERINFO, pctEncChar).replace(protocol.PCT_ENCODED, toUpperCase);\n  if (components.host !== undefined) components.host = String(components.host).replace(protocol.PCT_ENCODED, decodeUnreserved).toLowerCase().replace(protocol.NOT_HOST, pctEncChar).replace(protocol.PCT_ENCODED, toUpperCase);\n  if (components.path !== undefined) components.path = String(components.path).replace(protocol.PCT_ENCODED, decodeUnreserved).replace(components.scheme ? protocol.NOT_PATH : protocol.NOT_PATH_NOSCHEME, pctEncChar).replace(protocol.PCT_ENCODED, toUpperCase);\n  if (components.query !== undefined) components.query = String(components.query).replace(protocol.PCT_ENCODED, decodeUnreserved).replace(protocol.NOT_QUERY, pctEncChar).replace(protocol.PCT_ENCODED, toUpperCase);\n  if (components.fragment !== undefined) components.fragment = String(components.fragment).replace(protocol.PCT_ENCODED, decodeUnreserved).replace(protocol.NOT_FRAGMENT, pctEncChar).replace(protocol.PCT_ENCODED, toUpperCase);\n  return components;\n}\n\n;\n\nfunction _stripLeadingZeros(str) {\n  return str.replace(/^0*(.*)/, \"$1\") || \"0\";\n}\n\nfunction _normalizeIPv4(host, protocol) {\n  const matches = host.match(protocol.IPV4ADDRESS) || [];\n  const [, address] = matches;\n\n  if (address) {\n    return address.split(\".\").map(_stripLeadingZeros).join(\".\");\n  } else {\n    return host;\n  }\n}\n\nfunction _normalizeIPv6(host, protocol) {\n  const matches = host.match(protocol.IPV6ADDRESS) || [];\n  const [, address, zone] = matches;\n\n  if (address) {\n    const [last, first] = address.toLowerCase().split('::').reverse();\n    const firstFields = first ? first.split(\":\").map(_stripLeadingZeros) : [];\n    const lastFields = last.split(\":\").map(_stripLeadingZeros);\n    const isLastFieldIPv4Address = protocol.IPV4ADDRESS.test(lastFields[lastFields.length - 1]);\n    const fieldCount = isLastFieldIPv4Address ? 7 : 8;\n    const lastFieldsStart = lastFields.length - fieldCount;\n    const fields = Array(fieldCount);\n\n    for (let x = 0; x < fieldCount; ++x) {\n      fields[x] = firstFields[x] || lastFields[lastFieldsStart + x] || '';\n    }\n\n    if (isLastFieldIPv4Address) {\n      fields[fieldCount - 1] = _normalizeIPv4(fields[fieldCount - 1], protocol);\n    }\n\n    const allZeroFields = fields.reduce((acc, field, index) => {\n      if (!field || field === \"0\") {\n        const lastLongest = acc[acc.length - 1];\n\n        if (lastLongest && lastLongest.index + lastLongest.length === index) {\n          lastLongest.length++;\n        } else {\n          acc.push({\n            index,\n            length: 1\n          });\n        }\n      }\n\n      return acc;\n    }, []);\n    const longestZeroFields = allZeroFields.sort((a, b) => b.length - a.length)[0];\n    let newHost;\n\n    if (longestZeroFields && longestZeroFields.length > 1) {\n      const newFirst = fields.slice(0, longestZeroFields.index);\n      const newLast = fields.slice(longestZeroFields.index + longestZeroFields.length);\n      newHost = newFirst.join(\":\") + \"::\" + newLast.join(\":\");\n    } else {\n      newHost = fields.join(\":\");\n    }\n\n    if (zone) {\n      newHost += \"%\" + zone;\n    }\n\n    return newHost;\n  } else {\n    return host;\n  }\n}\n\nconst URI_PARSE = /^(?:([^:\\/?#]+):)?(?:\\/\\/((?:([^\\/?#@]*)@)?(\\[[^\\/?#\\]]+\\]|[^\\/?#:]*)(?:\\:(\\d*))?))?([^?#]*)(?:\\?([^#]*))?(?:#((?:.|\\n|\\r)*))?/i;\nconst NO_MATCH_IS_UNDEFINED = \"\".match(/(){0}/)[1] === undefined;\nexport function parse(uriString) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const components = {};\n  const protocol = options.iri !== false ? IRI_PROTOCOL : URI_PROTOCOL;\n  if (options.reference === \"suffix\") uriString = (options.scheme ? options.scheme + \":\" : \"\") + \"//\" + uriString;\n  const matches = uriString.match(URI_PARSE);\n\n  if (matches) {\n    if (NO_MATCH_IS_UNDEFINED) {\n      //store each component\n      components.scheme = matches[1];\n      components.userinfo = matches[3];\n      components.host = matches[4];\n      components.port = parseInt(matches[5], 10);\n      components.path = matches[6] || \"\";\n      components.query = matches[7];\n      components.fragment = matches[8]; //fix port number\n\n      if (isNaN(components.port)) {\n        components.port = matches[5];\n      }\n    } else {\n      //IE FIX for improper RegExp matching\n      //store each component\n      components.scheme = matches[1] || undefined;\n      components.userinfo = uriString.indexOf(\"@\") !== -1 ? matches[3] : undefined;\n      components.host = uriString.indexOf(\"//\") !== -1 ? matches[4] : undefined;\n      components.port = parseInt(matches[5], 10);\n      components.path = matches[6] || \"\";\n      components.query = uriString.indexOf(\"?\") !== -1 ? matches[7] : undefined;\n      components.fragment = uriString.indexOf(\"#\") !== -1 ? matches[8] : undefined; //fix port number\n\n      if (isNaN(components.port)) {\n        components.port = uriString.match(/\\/\\/(?:.|\\n)*\\:(?:\\/|\\?|\\#|$)/) ? matches[4] : undefined;\n      }\n    }\n\n    if (components.host) {\n      //normalize IP hosts\n      components.host = _normalizeIPv6(_normalizeIPv4(components.host, protocol), protocol);\n    } //determine reference type\n\n\n    if (components.scheme === undefined && components.userinfo === undefined && components.host === undefined && components.port === undefined && !components.path && components.query === undefined) {\n      components.reference = \"same-document\";\n    } else if (components.scheme === undefined) {\n      components.reference = \"relative\";\n    } else if (components.fragment === undefined) {\n      components.reference = \"absolute\";\n    } else {\n      components.reference = \"uri\";\n    } //check for reference errors\n\n\n    if (options.reference && options.reference !== \"suffix\" && options.reference !== components.reference) {\n      components.error = components.error || \"URI is not a \" + options.reference + \" reference.\";\n    } //find scheme handler\n\n\n    const schemeHandler = SCHEMES[(options.scheme || components.scheme || \"\").toLowerCase()]; //check if scheme can't handle IRIs\n\n    if (!options.unicodeSupport && (!schemeHandler || !schemeHandler.unicodeSupport)) {\n      //if host component is a domain name\n      if (components.host && (options.domainHost || schemeHandler && schemeHandler.domainHost)) {\n        //convert Unicode IDN -> ASCII IDN\n        try {\n          components.host = punycode.toASCII(components.host.replace(protocol.PCT_ENCODED, pctDecChars).toLowerCase());\n        } catch (e) {\n          components.error = components.error || \"Host's domain name can not be converted to ASCII via punycode: \" + e;\n        }\n      } //convert IRI -> URI\n\n\n      _normalizeComponentEncoding(components, URI_PROTOCOL);\n    } else {\n      //normalize encodings\n      _normalizeComponentEncoding(components, protocol);\n    } //perform scheme specific parsing\n\n\n    if (schemeHandler && schemeHandler.parse) {\n      schemeHandler.parse(components, options);\n    }\n  } else {\n    components.error = components.error || \"URI can not be parsed.\";\n  }\n\n  return components;\n}\n;\n\nfunction _recomposeAuthority(components, options) {\n  const protocol = options.iri !== false ? IRI_PROTOCOL : URI_PROTOCOL;\n  const uriTokens = [];\n\n  if (components.userinfo !== undefined) {\n    uriTokens.push(components.userinfo);\n    uriTokens.push(\"@\");\n  }\n\n  if (components.host !== undefined) {\n    //normalize IP hosts, add brackets and escape zone separator for IPv6\n    uriTokens.push(_normalizeIPv6(_normalizeIPv4(String(components.host), protocol), protocol).replace(protocol.IPV6ADDRESS, (_, $1, $2) => \"[\" + $1 + ($2 ? \"%25\" + $2 : \"\") + \"]\"));\n  }\n\n  if (typeof components.port === \"number\" || typeof components.port === \"string\") {\n    uriTokens.push(\":\");\n    uriTokens.push(String(components.port));\n  }\n\n  return uriTokens.length ? uriTokens.join(\"\") : undefined;\n}\n\n;\nconst RDS1 = /^\\.\\.?\\//;\nconst RDS2 = /^\\/\\.(\\/|$)/;\nconst RDS3 = /^\\/\\.\\.(\\/|$)/;\nconst RDS4 = /^\\.\\.?$/;\nconst RDS5 = /^\\/?(?:.|\\n)*?(?=\\/|$)/;\nexport function removeDotSegments(input) {\n  const output = [];\n\n  while (input.length) {\n    if (input.match(RDS1)) {\n      input = input.replace(RDS1, \"\");\n    } else if (input.match(RDS2)) {\n      input = input.replace(RDS2, \"/\");\n    } else if (input.match(RDS3)) {\n      input = input.replace(RDS3, \"/\");\n      output.pop();\n    } else if (input === \".\" || input === \"..\") {\n      input = \"\";\n    } else {\n      const im = input.match(RDS5);\n\n      if (im) {\n        const s = im[0];\n        input = input.slice(s.length);\n        output.push(s);\n      } else {\n        throw new Error(\"Unexpected dot segment condition\");\n      }\n    }\n  }\n\n  return output.join(\"\");\n}\n;\nexport function serialize(components) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const protocol = options.iri ? IRI_PROTOCOL : URI_PROTOCOL;\n  const uriTokens = []; //find scheme handler\n\n  const schemeHandler = SCHEMES[(options.scheme || components.scheme || \"\").toLowerCase()]; //perform scheme specific serialization\n\n  if (schemeHandler && schemeHandler.serialize) schemeHandler.serialize(components, options);\n\n  if (components.host) {\n    //if host component is an IPv6 address\n    if (protocol.IPV6ADDRESS.test(components.host)) {//TODO: normalize IPv6 address as per RFC 5952\n    } //if host component is a domain name\n    else if (options.domainHost || schemeHandler && schemeHandler.domainHost) {\n      //convert IDN via punycode\n      try {\n        components.host = !options.iri ? punycode.toASCII(components.host.replace(protocol.PCT_ENCODED, pctDecChars).toLowerCase()) : punycode.toUnicode(components.host);\n      } catch (e) {\n        components.error = components.error || \"Host's domain name can not be converted to \" + (!options.iri ? \"ASCII\" : \"Unicode\") + \" via punycode: \" + e;\n      }\n    }\n  } //normalize encoding\n\n\n  _normalizeComponentEncoding(components, protocol);\n\n  if (options.reference !== \"suffix\" && components.scheme) {\n    uriTokens.push(components.scheme);\n    uriTokens.push(\":\");\n  }\n\n  const authority = _recomposeAuthority(components, options);\n\n  if (authority !== undefined) {\n    if (options.reference !== \"suffix\") {\n      uriTokens.push(\"//\");\n    }\n\n    uriTokens.push(authority);\n\n    if (components.path && components.path.charAt(0) !== \"/\") {\n      uriTokens.push(\"/\");\n    }\n  }\n\n  if (components.path !== undefined) {\n    let s = components.path;\n\n    if (!options.absolutePath && (!schemeHandler || !schemeHandler.absolutePath)) {\n      s = removeDotSegments(s);\n    }\n\n    if (authority === undefined) {\n      s = s.replace(/^\\/\\//, \"/%2F\"); //don't allow the path to start with \"//\"\n    }\n\n    uriTokens.push(s);\n  }\n\n  if (components.query !== undefined) {\n    uriTokens.push(\"?\");\n    uriTokens.push(components.query);\n  }\n\n  if (components.fragment !== undefined) {\n    uriTokens.push(\"#\");\n    uriTokens.push(components.fragment);\n  }\n\n  return uriTokens.join(\"\"); //merge tokens into a string\n}\n;\nexport function resolveComponents(base, relative) {\n  let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  let skipNormalization = arguments.length > 3 ? arguments[3] : undefined;\n  const target = {};\n\n  if (!skipNormalization) {\n    base = parse(serialize(base, options), options); //normalize base components\n\n    relative = parse(serialize(relative, options), options); //normalize relative components\n  }\n\n  options = options || {};\n\n  if (!options.tolerant && relative.scheme) {\n    target.scheme = relative.scheme; //target.authority = relative.authority;\n\n    target.userinfo = relative.userinfo;\n    target.host = relative.host;\n    target.port = relative.port;\n    target.path = removeDotSegments(relative.path || \"\");\n    target.query = relative.query;\n  } else {\n    if (relative.userinfo !== undefined || relative.host !== undefined || relative.port !== undefined) {\n      //target.authority = relative.authority;\n      target.userinfo = relative.userinfo;\n      target.host = relative.host;\n      target.port = relative.port;\n      target.path = removeDotSegments(relative.path || \"\");\n      target.query = relative.query;\n    } else {\n      if (!relative.path) {\n        target.path = base.path;\n\n        if (relative.query !== undefined) {\n          target.query = relative.query;\n        } else {\n          target.query = base.query;\n        }\n      } else {\n        if (relative.path.charAt(0) === \"/\") {\n          target.path = removeDotSegments(relative.path);\n        } else {\n          if ((base.userinfo !== undefined || base.host !== undefined || base.port !== undefined) && !base.path) {\n            target.path = \"/\" + relative.path;\n          } else if (!base.path) {\n            target.path = relative.path;\n          } else {\n            target.path = base.path.slice(0, base.path.lastIndexOf(\"/\") + 1) + relative.path;\n          }\n\n          target.path = removeDotSegments(target.path);\n        }\n\n        target.query = relative.query;\n      } //target.authority = base.authority;\n\n\n      target.userinfo = base.userinfo;\n      target.host = base.host;\n      target.port = base.port;\n    }\n\n    target.scheme = base.scheme;\n  }\n\n  target.fragment = relative.fragment;\n  return target;\n}\n;\nexport function resolve(baseURI, relativeURI, options) {\n  const schemelessOptions = assign({\n    scheme: 'null'\n  }, options);\n  return serialize(resolveComponents(parse(baseURI, schemelessOptions), parse(relativeURI, schemelessOptions), schemelessOptions, true), schemelessOptions);\n}\n;\nexport function normalize(uri, options) {\n  if (typeof uri === \"string\") {\n    uri = serialize(parse(uri, options), options);\n  } else if (typeOf(uri) === \"object\") {\n    uri = parse(serialize(uri, options), options);\n  }\n\n  return uri;\n}\n;\nexport function equal(uriA, uriB, options) {\n  if (typeof uriA === \"string\") {\n    uriA = serialize(parse(uriA, options), options);\n  } else if (typeOf(uriA) === \"object\") {\n    uriA = serialize(uriA, options);\n  }\n\n  if (typeof uriB === \"string\") {\n    uriB = serialize(parse(uriB, options), options);\n  } else if (typeOf(uriB) === \"object\") {\n    uriB = serialize(uriB, options);\n  }\n\n  return uriA === uriB;\n}\n;\nexport function escapeComponent(str, options) {\n  return str && str.toString().replace(!options || !options.iri ? URI_PROTOCOL.ESCAPE : IRI_PROTOCOL.ESCAPE, pctEncChar);\n}\n;\nexport function unescapeComponent(str, options) {\n  return str && str.toString().replace(!options || !options.iri ? URI_PROTOCOL.PCT_ENCODED : IRI_PROTOCOL.PCT_ENCODED, pctDecChars);\n}\n;","map":{"version":3,"mappings":"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","names":["URI_PROTOCOL","IRI_PROTOCOL","punycode","toUpperCase","typeOf","assign","SCHEMES","chr","c","charCodeAt","e","toString","str","newStr","i","il","length","parseInt","substr","String","fromCharCode","c2","c3","components","protocol","decStr","pctDecChars","match","UNRESERVED","scheme","replace","PCT_ENCODED","decodeUnreserved","toLowerCase","NOT_SCHEME","userinfo","undefined","NOT_USERINFO","pctEncChar","host","NOT_HOST","path","NOT_PATH","NOT_PATH_NOSCHEME","query","NOT_QUERY","fragment","NOT_FRAGMENT","matches","IPV4ADDRESS","address","split","map","_stripLeadingZeros","join","IPV6ADDRESS","zone","last","first","reverse","firstFields","lastFields","isLastFieldIPv4Address","test","fieldCount","lastFieldsStart","fields","Array","x","_normalizeIPv4","allZeroFields","reduce","acc","field","index","lastLongest","push","longestZeroFields","sort","a","b","newHost","newFirst","slice","newLast","URI_PARSE","NO_MATCH_IS_UNDEFINED","uriString","options","iri","reference","port","isNaN","indexOf","_normalizeIPv6","error","schemeHandler","unicodeSupport","domainHost","toASCII","_normalizeComponentEncoding","parse","uriTokens","_","$1","$2","RDS1","RDS2","RDS3","RDS4","RDS5","input","output","pop","im","s","Error","serialize","toUnicode","authority","_recomposeAuthority","charAt","absolutePath","removeDotSegments","base","relative","skipNormalization","target","tolerant","lastIndexOf","baseURI","relativeURI","schemelessOptions","resolveComponents","uri","uriA","uriB","ESCAPE"],"sources":["../../src/uri.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}