{"ast":null,"code":"var a = require.resolve('buffer/').replace(process.cwd(), '$CWD');\n\nvar b;\nvar c;\n\nvar test = function test() {\n  console.log(a, ': require.resolve, preserveSymlinks ' + (process.execArgv.indexOf('preserve-symlinks') > -1 ? 'true' : 'false'));\n  console.log(b, ': preserveSymlinks true');\n  console.log(c, ': preserveSymlinks false');\n\n  if (a !== b && a !== c) {\n    throw 'async: no match';\n  }\n\n  console.log('async: success! a matched either b or c\\n');\n};\n\nrequire('resolve')('buffer/', {\n  preserveSymlinks: true\n}, function (err, result) {\n  if (err) {\n    throw err;\n  }\n\n  b = result.replace(process.cwd(), '$CWD');\n\n  if (b && c) {\n    test();\n  }\n});\n\nrequire('resolve')('buffer/', {\n  preserveSymlinks: false\n}, function (err, result) {\n  if (err) {\n    throw err;\n  }\n\n  c = result.replace(process.cwd(), '$CWD');\n\n  if (b && c) {\n    test();\n  }\n});","map":{"version":3,"names":["a","require","resolve","replace","process","cwd","b","c","test","console","log","execArgv","indexOf","preserveSymlinks","err","result"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/eslint-plugin-react/node_modules/resolve/test/resolver/nested_symlinks/mylib/async.js"],"sourcesContent":["var a = require.resolve('buffer/').replace(process.cwd(), '$CWD');\nvar b;\nvar c;\n\nvar test = function test() {\n    console.log(a, ': require.resolve, preserveSymlinks ' + (process.execArgv.indexOf('preserve-symlinks') > -1 ? 'true' : 'false'));\n    console.log(b, ': preserveSymlinks true');\n    console.log(c, ': preserveSymlinks false');\n\n    if (a !== b && a !== c) {\n        throw 'async: no match';\n    }\n    console.log('async: success! a matched either b or c\\n');\n};\n\nrequire('resolve')('buffer/', { preserveSymlinks: true }, function (err, result) {\n    if (err) { throw err; }\n    b = result.replace(process.cwd(), '$CWD');\n    if (b && c) { test(); }\n});\nrequire('resolve')('buffer/', { preserveSymlinks: false }, function (err, result) {\n    if (err) { throw err; }\n    c = result.replace(process.cwd(), '$CWD');\n    if (b && c) { test(); }\n});\n\n"],"mappings":"AAAA,IAAIA,CAAC,GAAGC,OAAO,CAACC,OAAR,CAAgB,SAAhB,EAA2BC,OAA3B,CAAmCC,OAAO,CAACC,GAAR,EAAnC,EAAkD,MAAlD,CAAR;;AACA,IAAIC,CAAJ;AACA,IAAIC,CAAJ;;AAEA,IAAIC,IAAI,GAAG,SAASA,IAAT,GAAgB;EACvBC,OAAO,CAACC,GAAR,CAAYV,CAAZ,EAAe,0CAA0CI,OAAO,CAACO,QAAR,CAAiBC,OAAjB,CAAyB,mBAAzB,IAAgD,CAAC,CAAjD,GAAqD,MAArD,GAA8D,OAAxG,CAAf;EACAH,OAAO,CAACC,GAAR,CAAYJ,CAAZ,EAAe,yBAAf;EACAG,OAAO,CAACC,GAAR,CAAYH,CAAZ,EAAe,0BAAf;;EAEA,IAAIP,CAAC,KAAKM,CAAN,IAAWN,CAAC,KAAKO,CAArB,EAAwB;IACpB,MAAM,iBAAN;EACH;;EACDE,OAAO,CAACC,GAAR,CAAY,2CAAZ;AACH,CATD;;AAWAT,OAAO,CAAC,SAAD,CAAP,CAAmB,SAAnB,EAA8B;EAAEY,gBAAgB,EAAE;AAApB,CAA9B,EAA0D,UAAUC,GAAV,EAAeC,MAAf,EAAuB;EAC7E,IAAID,GAAJ,EAAS;IAAE,MAAMA,GAAN;EAAY;;EACvBR,CAAC,GAAGS,MAAM,CAACZ,OAAP,CAAeC,OAAO,CAACC,GAAR,EAAf,EAA8B,MAA9B,CAAJ;;EACA,IAAIC,CAAC,IAAIC,CAAT,EAAY;IAAEC,IAAI;EAAK;AAC1B,CAJD;;AAKAP,OAAO,CAAC,SAAD,CAAP,CAAmB,SAAnB,EAA8B;EAAEY,gBAAgB,EAAE;AAApB,CAA9B,EAA2D,UAAUC,GAAV,EAAeC,MAAf,EAAuB;EAC9E,IAAID,GAAJ,EAAS;IAAE,MAAMA,GAAN;EAAY;;EACvBP,CAAC,GAAGQ,MAAM,CAACZ,OAAP,CAAeC,OAAO,CAACC,GAAR,EAAf,EAA8B,MAA9B,CAAJ;;EACA,IAAIC,CAAC,IAAIC,CAAT,EAAY;IAAEC,IAAI;EAAK;AAC1B,CAJD"},"metadata":{},"sourceType":"script"}