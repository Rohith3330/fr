{"ast":null,"code":"/**\n * @fileoverview Enforce no accesskey attribute on element.\n * @author Ethan Cohen\n */\n// -----------------------------------------------------------------------------\n// Requirements\n// -----------------------------------------------------------------------------\nimport { RuleTester } from 'eslint';\nimport parserOptionsMapper from '../../__util__/parserOptionsMapper';\nimport rule from '../../../src/rules/no-access-key'; // -----------------------------------------------------------------------------\n// Tests\n// -----------------------------------------------------------------------------\n\nconst ruleTester = new RuleTester();\nconst expectedError = {\n  message: 'No access key attribute allowed. Inconsistencies between keyboard shortcuts and keyboard commands used by screenreaders and keyboard-only users create a11y complications.',\n  type: 'JSXOpeningElement'\n};\nruleTester.run('no-access-key', rule, {\n  valid: [{\n    code: '<div />;'\n  }, {\n    code: '<div {...props} />'\n  }, {\n    code: '<div accessKey={undefined} />'\n  }].map(parserOptionsMapper),\n  invalid: [{\n    code: '<div accesskey=\"h\" />',\n    errors: [expectedError]\n  }, {\n    code: '<div accessKey=\"h\" />',\n    errors: [expectedError]\n  }, {\n    code: '<div accessKey=\"h\" {...props} />',\n    errors: [expectedError]\n  }, {\n    code: '<div acCesSKeY=\"y\" />',\n    errors: [expectedError]\n  }, {\n    code: '<div accessKey={\"y\"} />',\n    errors: [expectedError]\n  }, {\n    code: '<div accessKey={`${y}`} />',\n    errors: [expectedError]\n  }, {\n    code: '<div accessKey={`${undefined}y${undefined}`} />',\n    errors: [expectedError]\n  }, {\n    code: '<div accessKey={`This is ${bad}`} />',\n    errors: [expectedError]\n  }, {\n    code: '<div accessKey={accessKey} />',\n    errors: [expectedError]\n  }, {\n    code: '<div accessKey={`${undefined}`} />',\n    errors: [expectedError]\n  }, {\n    code: '<div accessKey={`${undefined}${undefined}`} />',\n    errors: [expectedError]\n  }].map(parserOptionsMapper)\n});","map":{"version":3,"names":["RuleTester","parserOptionsMapper","rule","ruleTester","expectedError","message","type","run","valid","code","map","invalid","errors"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/eslint-plugin-jsx-a11y/__tests__/src/rules/no-access-key-test.js"],"sourcesContent":["/**\n * @fileoverview Enforce no accesskey attribute on element.\n * @author Ethan Cohen\n */\n\n// -----------------------------------------------------------------------------\n// Requirements\n// -----------------------------------------------------------------------------\n\nimport { RuleTester } from 'eslint';\nimport parserOptionsMapper from '../../__util__/parserOptionsMapper';\nimport rule from '../../../src/rules/no-access-key';\n\n// -----------------------------------------------------------------------------\n// Tests\n// -----------------------------------------------------------------------------\n\nconst ruleTester = new RuleTester();\n\nconst expectedError = {\n  message: 'No access key attribute allowed. Inconsistencies between keyboard shortcuts and keyboard commands used by screenreaders and keyboard-only users create a11y complications.',\n  type: 'JSXOpeningElement',\n};\n\nruleTester.run('no-access-key', rule, {\n  valid: [\n    { code: '<div />;' },\n    { code: '<div {...props} />' },\n    { code: '<div accessKey={undefined} />' },\n  ].map(parserOptionsMapper),\n  invalid: [\n    { code: '<div accesskey=\"h\" />', errors: [expectedError] },\n    { code: '<div accessKey=\"h\" />', errors: [expectedError] },\n    { code: '<div accessKey=\"h\" {...props} />', errors: [expectedError] },\n    { code: '<div acCesSKeY=\"y\" />', errors: [expectedError] },\n    { code: '<div accessKey={\"y\"} />', errors: [expectedError] },\n    { code: '<div accessKey={`${y}`} />', errors: [expectedError] },\n    {\n      code: '<div accessKey={`${undefined}y${undefined}`} />',\n      errors: [expectedError],\n    },\n    { code: '<div accessKey={`This is ${bad}`} />', errors: [expectedError] },\n    { code: '<div accessKey={accessKey} />', errors: [expectedError] },\n    { code: '<div accessKey={`${undefined}`} />', errors: [expectedError] },\n    { code: '<div accessKey={`${undefined}${undefined}`} />', errors: [expectedError] },\n  ].map(parserOptionsMapper),\n});\n"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA,SAASA,UAAT,QAA2B,QAA3B;AACA,OAAOC,mBAAP,MAAgC,oCAAhC;AACA,OAAOC,IAAP,MAAiB,kCAAjB,C,CAEA;AACA;AACA;;AAEA,MAAMC,UAAU,GAAG,IAAIH,UAAJ,EAAnB;AAEA,MAAMI,aAAa,GAAG;EACpBC,OAAO,EAAE,4KADW;EAEpBC,IAAI,EAAE;AAFc,CAAtB;AAKAH,UAAU,CAACI,GAAX,CAAe,eAAf,EAAgCL,IAAhC,EAAsC;EACpCM,KAAK,EAAE,CACL;IAAEC,IAAI,EAAE;EAAR,CADK,EAEL;IAAEA,IAAI,EAAE;EAAR,CAFK,EAGL;IAAEA,IAAI,EAAE;EAAR,CAHK,EAILC,GAJK,CAIDT,mBAJC,CAD6B;EAMpCU,OAAO,EAAE,CACP;IAAEF,IAAI,EAAE,uBAAR;IAAiCG,MAAM,EAAE,CAACR,aAAD;EAAzC,CADO,EAEP;IAAEK,IAAI,EAAE,uBAAR;IAAiCG,MAAM,EAAE,CAACR,aAAD;EAAzC,CAFO,EAGP;IAAEK,IAAI,EAAE,kCAAR;IAA4CG,MAAM,EAAE,CAACR,aAAD;EAApD,CAHO,EAIP;IAAEK,IAAI,EAAE,uBAAR;IAAiCG,MAAM,EAAE,CAACR,aAAD;EAAzC,CAJO,EAKP;IAAEK,IAAI,EAAE,yBAAR;IAAmCG,MAAM,EAAE,CAACR,aAAD;EAA3C,CALO,EAMP;IAAEK,IAAI,EAAE,4BAAR;IAAsCG,MAAM,EAAE,CAACR,aAAD;EAA9C,CANO,EAOP;IACEK,IAAI,EAAE,iDADR;IAEEG,MAAM,EAAE,CAACR,aAAD;EAFV,CAPO,EAWP;IAAEK,IAAI,EAAE,sCAAR;IAAgDG,MAAM,EAAE,CAACR,aAAD;EAAxD,CAXO,EAYP;IAAEK,IAAI,EAAE,+BAAR;IAAyCG,MAAM,EAAE,CAACR,aAAD;EAAjD,CAZO,EAaP;IAAEK,IAAI,EAAE,oCAAR;IAA8CG,MAAM,EAAE,CAACR,aAAD;EAAtD,CAbO,EAcP;IAAEK,IAAI,EAAE,gDAAR;IAA0DG,MAAM,EAAE,CAACR,aAAD;EAAlE,CAdO,EAePM,GAfO,CAeHT,mBAfG;AAN2B,CAAtC"},"metadata":{},"sourceType":"module"}