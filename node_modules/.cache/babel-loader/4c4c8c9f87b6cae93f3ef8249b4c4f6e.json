{"ast":null,"code":"'use strict';\n\nvar parseMeasurement = require('../parsers').parseMeasurement;\n\nvar shape_regex = /^rect\\((.*)\\)$/i;\n\nvar parse = function (val) {\n  if (val === '' || val === null) {\n    return val;\n  }\n\n  if (typeof val !== 'string') {\n    return undefined;\n  }\n\n  val = val.toLowerCase();\n\n  if (val === 'auto' || val === 'inherit') {\n    return val;\n  }\n\n  var matches = val.match(shape_regex);\n\n  if (!matches) {\n    return undefined;\n  }\n\n  var parts = matches[1].split(/\\s*,\\s*/);\n\n  if (parts.length !== 4) {\n    return undefined;\n  }\n\n  var valid = parts.every(function (part, index) {\n    var measurement = parseMeasurement(part);\n    parts[index] = measurement;\n    return measurement !== undefined;\n  });\n\n  if (!valid) {\n    return undefined;\n  }\n\n  parts = parts.join(', ');\n  return val.replace(matches[1], parts);\n};\n\nmodule.exports.definition = {\n  set: function (v) {\n    this._setProperty('clip', parse(v));\n  },\n  get: function () {\n    return this.getPropertyValue('clip');\n  },\n  enumerable: true,\n  configurable: true\n};","map":{"version":3,"names":["parseMeasurement","require","shape_regex","parse","val","undefined","toLowerCase","matches","match","parts","split","length","valid","every","part","index","measurement","join","replace","module","exports","definition","set","v","_setProperty","get","getPropertyValue","enumerable","configurable"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/cssstyle/lib/properties/clip.js"],"sourcesContent":["'use strict';\n\nvar parseMeasurement = require('../parsers').parseMeasurement;\n\nvar shape_regex = /^rect\\((.*)\\)$/i;\n\nvar parse = function(val) {\n  if (val === '' || val === null) {\n    return val;\n  }\n  if (typeof val !== 'string') {\n    return undefined;\n  }\n  val = val.toLowerCase();\n  if (val === 'auto' || val === 'inherit') {\n    return val;\n  }\n  var matches = val.match(shape_regex);\n  if (!matches) {\n    return undefined;\n  }\n  var parts = matches[1].split(/\\s*,\\s*/);\n  if (parts.length !== 4) {\n    return undefined;\n  }\n  var valid = parts.every(function(part, index) {\n    var measurement = parseMeasurement(part);\n    parts[index] = measurement;\n    return measurement !== undefined;\n  });\n  if (!valid) {\n    return undefined;\n  }\n  parts = parts.join(', ');\n  return val.replace(matches[1], parts);\n};\n\nmodule.exports.definition = {\n  set: function(v) {\n    this._setProperty('clip', parse(v));\n  },\n  get: function() {\n    return this.getPropertyValue('clip');\n  },\n  enumerable: true,\n  configurable: true,\n};\n"],"mappings":"AAAA;;AAEA,IAAIA,gBAAgB,GAAGC,OAAO,CAAC,YAAD,CAAP,CAAsBD,gBAA7C;;AAEA,IAAIE,WAAW,GAAG,iBAAlB;;AAEA,IAAIC,KAAK,GAAG,UAASC,GAAT,EAAc;EACxB,IAAIA,GAAG,KAAK,EAAR,IAAcA,GAAG,KAAK,IAA1B,EAAgC;IAC9B,OAAOA,GAAP;EACD;;EACD,IAAI,OAAOA,GAAP,KAAe,QAAnB,EAA6B;IAC3B,OAAOC,SAAP;EACD;;EACDD,GAAG,GAAGA,GAAG,CAACE,WAAJ,EAAN;;EACA,IAAIF,GAAG,KAAK,MAAR,IAAkBA,GAAG,KAAK,SAA9B,EAAyC;IACvC,OAAOA,GAAP;EACD;;EACD,IAAIG,OAAO,GAAGH,GAAG,CAACI,KAAJ,CAAUN,WAAV,CAAd;;EACA,IAAI,CAACK,OAAL,EAAc;IACZ,OAAOF,SAAP;EACD;;EACD,IAAII,KAAK,GAAGF,OAAO,CAAC,CAAD,CAAP,CAAWG,KAAX,CAAiB,SAAjB,CAAZ;;EACA,IAAID,KAAK,CAACE,MAAN,KAAiB,CAArB,EAAwB;IACtB,OAAON,SAAP;EACD;;EACD,IAAIO,KAAK,GAAGH,KAAK,CAACI,KAAN,CAAY,UAASC,IAAT,EAAeC,KAAf,EAAsB;IAC5C,IAAIC,WAAW,GAAGhB,gBAAgB,CAACc,IAAD,CAAlC;IACAL,KAAK,CAACM,KAAD,CAAL,GAAeC,WAAf;IACA,OAAOA,WAAW,KAAKX,SAAvB;EACD,CAJW,CAAZ;;EAKA,IAAI,CAACO,KAAL,EAAY;IACV,OAAOP,SAAP;EACD;;EACDI,KAAK,GAAGA,KAAK,CAACQ,IAAN,CAAW,IAAX,CAAR;EACA,OAAOb,GAAG,CAACc,OAAJ,CAAYX,OAAO,CAAC,CAAD,CAAnB,EAAwBE,KAAxB,CAAP;AACD,CA7BD;;AA+BAU,MAAM,CAACC,OAAP,CAAeC,UAAf,GAA4B;EAC1BC,GAAG,EAAE,UAASC,CAAT,EAAY;IACf,KAAKC,YAAL,CAAkB,MAAlB,EAA0BrB,KAAK,CAACoB,CAAD,CAA/B;EACD,CAHyB;EAI1BE,GAAG,EAAE,YAAW;IACd,OAAO,KAAKC,gBAAL,CAAsB,MAAtB,CAAP;EACD,CANyB;EAO1BC,UAAU,EAAE,IAPc;EAQ1BC,YAAY,EAAE;AARY,CAA5B"},"metadata":{},"sourceType":"script"}