{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = extractValueFromLiteral;\n/**\n * Extractor function for a Literal type value node.\n *\n * @param - value - AST Value object with type `Literal`\n * @returns { String|Boolean } - The extracted value converted to correct type.\n */\n\nfunction extractValueFromLiteral(value) {\n  var extractedValue = value.value;\n  var normalizedStringValue = typeof extractedValue === 'string' && extractedValue.toLowerCase();\n\n  if (normalizedStringValue === 'true') {\n    return true;\n  }\n\n  if (normalizedStringValue === 'false') {\n    return false;\n  }\n\n  return extractedValue;\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","default","extractValueFromLiteral","extractedValue","normalizedStringValue","toLowerCase"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/jsx-ast-utils/lib/values/Literal.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = extractValueFromLiteral;\n/**\n * Extractor function for a Literal type value node.\n *\n * @param - value - AST Value object with type `Literal`\n * @returns { String|Boolean } - The extracted value converted to correct type.\n */\nfunction extractValueFromLiteral(value) {\n  var extractedValue = value.value;\n\n\n  var normalizedStringValue = typeof extractedValue === 'string' && extractedValue.toLowerCase();\n  if (normalizedStringValue === 'true') {\n    return true;\n  }\n\n  if (normalizedStringValue === 'false') {\n    return false;\n  }\n\n  return extractedValue;\n}"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAC3CC,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,uBAAlB;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASA,uBAAT,CAAiCF,KAAjC,EAAwC;EACtC,IAAIG,cAAc,GAAGH,KAAK,CAACA,KAA3B;EAGA,IAAII,qBAAqB,GAAG,OAAOD,cAAP,KAA0B,QAA1B,IAAsCA,cAAc,CAACE,WAAf,EAAlE;;EACA,IAAID,qBAAqB,KAAK,MAA9B,EAAsC;IACpC,OAAO,IAAP;EACD;;EAED,IAAIA,qBAAqB,KAAK,OAA9B,EAAuC;IACrC,OAAO,KAAP;EACD;;EAED,OAAOD,cAAP;AACD"},"metadata":{},"sourceType":"script"}