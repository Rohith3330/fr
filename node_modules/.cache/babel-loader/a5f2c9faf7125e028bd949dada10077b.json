{"ast":null,"code":"/* eslint-env mocha */\nvar assert = require('assert');\n\nvar https = require('https');\n\nvar http = require('http');\n\nvar util = require('util');\n\nvar fixtures = require('./fixtures');\n\nvar spdy = require('../'); // Node.js 0.10 and 0.12 support\n\n\nObject.assign = process.versions.modules >= 46 ? Object.assign // eslint-disable-next-line\n: util._extend;\ndescribe('SPDY Client', function () {\n  describe('regular', function () {\n    fixtures.everyConfig(function (protocol, alpn, version, plain) {\n      var server;\n      var agent;\n      var hmodule;\n      beforeEach(function (done) {\n        hmodule = plain ? http : https;\n        var options = Object.assign({\n          spdy: {\n            plain: plain\n          }\n        }, fixtures.keys);\n        server = spdy.createServer(options, function (req, res) {\n          var body = '';\n          req.on('data', function (chunk) {\n            body += chunk;\n          });\n          req.on('end', function () {\n            res.writeHead(200, req.headers);\n            res.addTrailers({\n              trai: 'ler'\n            });\n            var push = res.push('/push', {\n              request: {\n                push: 'yes'\n              }\n            }, function (err) {\n              assert(!err);\n              push.end('push');\n              push.on('error', function () {});\n              res.end(body || 'okay');\n            });\n          });\n        });\n        server.listen(fixtures.port, function () {\n          agent = spdy.createAgent({\n            rejectUnauthorized: false,\n            port: fixtures.port,\n            spdy: {\n              plain: plain,\n              protocol: plain ? alpn : null,\n              protocols: [alpn]\n            }\n          });\n          done();\n        });\n      });\n      afterEach(function (done) {\n        var waiting = 2;\n        agent.close(next);\n        server.close(next);\n\n        function next() {\n          if (--waiting === 0) {\n            done();\n          }\n        }\n      });\n      it('should send GET request', function (done) {\n        var req = hmodule.request({\n          agent: agent,\n          method: 'GET',\n          path: '/get',\n          headers: {\n            a: 'b'\n          }\n        }, function (res) {\n          assert.strictEqual(res.statusCode, 200);\n          assert.strictEqual(res.headers.a, 'b');\n          fixtures.expectData(res, 'okay', done);\n        });\n        req.end();\n      });\n      it('should send POST request', function (done) {\n        var req = hmodule.request({\n          agent: agent,\n          method: 'POST',\n          path: '/post',\n          headers: {\n            post: 'headers'\n          }\n        }, function (res) {\n          assert.strictEqual(res.statusCode, 200);\n          assert.strictEqual(res.headers.post, 'headers');\n          fixtures.expectData(res, 'post body', done);\n        });\n\n        agent._spdyState.socket.once(plain ? 'connect' : 'secureConnect', function () {\n          req.end('post body');\n        });\n      });\n      it('should receive PUSH_PROMISE', function (done) {\n        var req = hmodule.request({\n          agent: agent,\n          method: 'GET',\n          path: '/get'\n        }, function (res) {\n          assert.strictEqual(res.statusCode, 200);\n          res.resume();\n        });\n        req.on('push', function (push) {\n          assert.strictEqual(push.path, '/push');\n          assert.strictEqual(push.headers.push, 'yes');\n          push.resume();\n          push.once('end', done);\n        });\n        req.end();\n      });\n      it('should receive trailing headers', function (done) {\n        var req = hmodule.request({\n          agent: agent,\n          method: 'GET',\n          path: '/get'\n        }, function (res) {\n          assert.strictEqual(res.statusCode, 200);\n          res.on('trailers', function (headers) {\n            assert.strictEqual(headers.trai, 'ler');\n            fixtures.expectData(res, 'okay', done);\n          });\n        });\n        req.end();\n      });\n    });\n  });\n  describe('x-forwarded-for', function () {\n    fixtures.everyConfig(function (protocol, alpn, version, plain) {\n      var server;\n      var agent;\n      var hmodule; // The underlying spdy Connection created by the agent.\n\n      var connection;\n      beforeEach(function (done) {\n        hmodule = plain ? http : https;\n        var options = Object.assign({\n          spdy: {\n            plain: plain,\n            'x-forwarded-for': true\n          }\n        }, fixtures.keys);\n        server = spdy.createServer(options, function (req, res) {\n          res.writeHead(200, req.headers);\n          res.end();\n        });\n        server.listen(fixtures.port, function () {\n          agent = spdy.createAgent({\n            rejectUnauthorized: false,\n            port: fixtures.port,\n            spdy: {\n              'x-forwarded-for': '1.2.3.4',\n              plain: plain,\n              protocol: plain ? alpn : null,\n              protocols: [alpn]\n            }\n          }); // Once aagent has connection, keep a copy for testing.\n\n          agent.once('_connect', function () {\n            connection = agent._spdyState.connection;\n            done();\n          });\n        });\n      });\n      afterEach(function (done) {\n        var waiting = 2;\n        agent.close(next);\n        server.close(next);\n\n        function next() {\n          if (--waiting === 0) {\n            done();\n          }\n        }\n      });\n      it('should send x-forwarded-for', function (done) {\n        var req = hmodule.request({\n          agent: agent,\n          method: 'GET',\n          path: '/get'\n        }, function (res) {\n          assert.strictEqual(res.statusCode, 200);\n          assert.strictEqual(res.headers['x-forwarded-for'], '1.2.3.4');\n          res.resume();\n          res.once('end', done);\n        });\n        req.end();\n      });\n      it('agent should emit connection level errors', function (done) {\n        agent.once('error', function (err) {\n          assert.strictEqual(err.message, 'mock error');\n          done();\n        });\n        connection.emit('error', new Error('mock error'));\n      });\n    });\n  });\n});","map":{"version":3,"names":["assert","require","https","http","util","fixtures","spdy","Object","assign","process","versions","modules","_extend","describe","everyConfig","protocol","alpn","version","plain","server","agent","hmodule","beforeEach","done","options","keys","createServer","req","res","body","on","chunk","writeHead","headers","addTrailers","trai","push","request","err","end","listen","port","createAgent","rejectUnauthorized","protocols","afterEach","waiting","close","next","it","method","path","a","strictEqual","statusCode","expectData","post","_spdyState","socket","once","resume","connection","message","emit","Error"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/spdy/test/client-test.js"],"sourcesContent":["/* eslint-env mocha */\n\nvar assert = require('assert')\nvar https = require('https')\nvar http = require('http')\nvar util = require('util')\n\nvar fixtures = require('./fixtures')\nvar spdy = require('../')\n\n// Node.js 0.10 and 0.12 support\nObject.assign = process.versions.modules >= 46\n  ? Object.assign // eslint-disable-next-line\n  : util._extend\n\ndescribe('SPDY Client', function () {\n  describe('regular', function () {\n    fixtures.everyConfig(function (protocol, alpn, version, plain) {\n      var server\n      var agent\n      var hmodule\n\n      beforeEach(function (done) {\n        hmodule = plain ? http : https\n\n        var options = Object.assign({\n          spdy: {\n            plain: plain\n          }\n        }, fixtures.keys)\n        server = spdy.createServer(options, function (req, res) {\n          var body = ''\n          req.on('data', function (chunk) {\n            body += chunk\n          })\n          req.on('end', function () {\n            res.writeHead(200, req.headers)\n            res.addTrailers({ trai: 'ler' })\n\n            var push = res.push('/push', {\n              request: {\n                push: 'yes'\n              }\n            }, function (err) {\n              assert(!err)\n\n              push.end('push')\n              push.on('error', function () {\n              })\n\n              res.end(body || 'okay')\n            })\n          })\n        })\n\n        server.listen(fixtures.port, function () {\n          agent = spdy.createAgent({\n            rejectUnauthorized: false,\n            port: fixtures.port,\n            spdy: {\n              plain: plain,\n              protocol: plain ? alpn : null,\n              protocols: [alpn]\n            }\n          })\n\n          done()\n        })\n      })\n\n      afterEach(function (done) {\n        var waiting = 2\n        agent.close(next)\n        server.close(next)\n\n        function next () {\n          if (--waiting === 0) {\n            done()\n          }\n        }\n      })\n\n      it('should send GET request', function (done) {\n        var req = hmodule.request({\n          agent: agent,\n\n          method: 'GET',\n          path: '/get',\n          headers: {\n            a: 'b'\n          }\n        }, function (res) {\n          assert.strictEqual(res.statusCode, 200)\n          assert.strictEqual(res.headers.a, 'b')\n\n          fixtures.expectData(res, 'okay', done)\n        })\n        req.end()\n      })\n\n      it('should send POST request', function (done) {\n        var req = hmodule.request({\n          agent: agent,\n\n          method: 'POST',\n          path: '/post',\n\n          headers: {\n            post: 'headers'\n          }\n        }, function (res) {\n          assert.strictEqual(res.statusCode, 200)\n          assert.strictEqual(res.headers.post, 'headers')\n\n          fixtures.expectData(res, 'post body', done)\n        })\n\n        agent._spdyState.socket.once(plain ? 'connect' : 'secureConnect',\n          function () {\n            req.end('post body')\n          })\n      })\n\n      it('should receive PUSH_PROMISE', function (done) {\n        var req = hmodule.request({\n          agent: agent,\n\n          method: 'GET',\n          path: '/get'\n        }, function (res) {\n          assert.strictEqual(res.statusCode, 200)\n\n          res.resume()\n        })\n        req.on('push', function (push) {\n          assert.strictEqual(push.path, '/push')\n          assert.strictEqual(push.headers.push, 'yes')\n\n          push.resume()\n          push.once('end', done)\n        })\n        req.end()\n      })\n\n      it('should receive trailing headers', function (done) {\n        var req = hmodule.request({\n          agent: agent,\n\n          method: 'GET',\n          path: '/get'\n        }, function (res) {\n          assert.strictEqual(res.statusCode, 200)\n\n          res.on('trailers', function (headers) {\n            assert.strictEqual(headers.trai, 'ler')\n            fixtures.expectData(res, 'okay', done)\n          })\n        })\n        req.end()\n      })\n    })\n  })\n\n  describe('x-forwarded-for', function () {\n    fixtures.everyConfig(function (protocol, alpn, version, plain) {\n      var server\n      var agent\n      var hmodule\n      // The underlying spdy Connection created by the agent.\n      var connection\n\n      beforeEach(function (done) {\n        hmodule = plain ? http : https\n\n        var options = Object.assign({\n          spdy: {\n            plain: plain,\n            'x-forwarded-for': true\n          }\n        }, fixtures.keys)\n        server = spdy.createServer(options, function (req, res) {\n          res.writeHead(200, req.headers)\n          res.end()\n        })\n\n        server.listen(fixtures.port, function () {\n          agent = spdy.createAgent({\n            rejectUnauthorized: false,\n            port: fixtures.port,\n            spdy: {\n              'x-forwarded-for': '1.2.3.4',\n              plain: plain,\n              protocol: plain ? alpn : null,\n              protocols: [alpn]\n            }\n          })\n          // Once aagent has connection, keep a copy for testing.\n          agent.once('_connect', function () {\n            connection = agent._spdyState.connection\n            done()\n          })\n        })\n      })\n\n      afterEach(function (done) {\n        var waiting = 2\n        agent.close(next)\n        server.close(next)\n\n        function next () {\n          if (--waiting === 0) {\n            done()\n          }\n        }\n      })\n\n      it('should send x-forwarded-for', function (done) {\n        var req = hmodule.request({\n          agent: agent,\n\n          method: 'GET',\n          path: '/get'\n        }, function (res) {\n          assert.strictEqual(res.statusCode, 200)\n          assert.strictEqual(res.headers['x-forwarded-for'], '1.2.3.4')\n\n          res.resume()\n          res.once('end', done)\n        })\n        req.end()\n      })\n\n      it('agent should emit connection level errors', function (done) {\n        agent.once('error', function (err) {\n          assert.strictEqual(err.message, 'mock error')\n          done()\n        })\n        connection.emit('error', new Error('mock error'))\n      })\n    })\n  })\n})\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}