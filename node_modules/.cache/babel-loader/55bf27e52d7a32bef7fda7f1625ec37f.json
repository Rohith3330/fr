{"ast":null,"code":"'use strict';\n\nlet pico = require('picocolors');\n\nlet tokenizer = require('./tokenize');\n\nlet Input;\n\nfunction registerInput(dependant) {\n  Input = dependant;\n}\n\nconst HIGHLIGHT_THEME = {\n  'brackets': pico.cyan,\n  'at-word': pico.cyan,\n  'comment': pico.gray,\n  'string': pico.green,\n  'class': pico.yellow,\n  'hash': pico.magenta,\n  'call': pico.cyan,\n  '(': pico.cyan,\n  ')': pico.cyan,\n  '{': pico.yellow,\n  '}': pico.yellow,\n  '[': pico.yellow,\n  ']': pico.yellow,\n  ':': pico.yellow,\n  ';': pico.yellow\n};\n\nfunction getTokenType(_ref, processor) {\n  let [type, value] = _ref;\n\n  if (type === 'word') {\n    if (value[0] === '.') {\n      return 'class';\n    }\n\n    if (value[0] === '#') {\n      return 'hash';\n    }\n  }\n\n  if (!processor.endOfFile()) {\n    let next = processor.nextToken();\n    processor.back(next);\n    if (next[0] === 'brackets' || next[0] === '(') return 'call';\n  }\n\n  return type;\n}\n\nfunction terminalHighlight(css) {\n  let processor = tokenizer(new Input(css), {\n    ignoreErrors: true\n  });\n  let result = '';\n\n  while (!processor.endOfFile()) {\n    let token = processor.nextToken();\n    let color = HIGHLIGHT_THEME[getTokenType(token, processor)];\n\n    if (color) {\n      result += token[1].split(/\\r?\\n/).map(i => color(i)).join('\\n');\n    } else {\n      result += token[1];\n    }\n  }\n\n  return result;\n}\n\nterminalHighlight.registerInput = registerInput;\nmodule.exports = terminalHighlight;","map":{"version":3,"names":["pico","require","tokenizer","Input","registerInput","dependant","HIGHLIGHT_THEME","cyan","gray","green","yellow","magenta","getTokenType","processor","type","value","endOfFile","next","nextToken","back","terminalHighlight","css","ignoreErrors","result","token","color","split","map","i","join","module","exports"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/postcss/lib/terminal-highlight.js"],"sourcesContent":["'use strict'\n\nlet pico = require('picocolors')\n\nlet tokenizer = require('./tokenize')\n\nlet Input\n\nfunction registerInput(dependant) {\n  Input = dependant\n}\n\nconst HIGHLIGHT_THEME = {\n  'brackets': pico.cyan,\n  'at-word': pico.cyan,\n  'comment': pico.gray,\n  'string': pico.green,\n  'class': pico.yellow,\n  'hash': pico.magenta,\n  'call': pico.cyan,\n  '(': pico.cyan,\n  ')': pico.cyan,\n  '{': pico.yellow,\n  '}': pico.yellow,\n  '[': pico.yellow,\n  ']': pico.yellow,\n  ':': pico.yellow,\n  ';': pico.yellow\n}\n\nfunction getTokenType([type, value], processor) {\n  if (type === 'word') {\n    if (value[0] === '.') {\n      return 'class'\n    }\n    if (value[0] === '#') {\n      return 'hash'\n    }\n  }\n\n  if (!processor.endOfFile()) {\n    let next = processor.nextToken()\n    processor.back(next)\n    if (next[0] === 'brackets' || next[0] === '(') return 'call'\n  }\n\n  return type\n}\n\nfunction terminalHighlight(css) {\n  let processor = tokenizer(new Input(css), { ignoreErrors: true })\n  let result = ''\n  while (!processor.endOfFile()) {\n    let token = processor.nextToken()\n    let color = HIGHLIGHT_THEME[getTokenType(token, processor)]\n    if (color) {\n      result += token[1]\n        .split(/\\r?\\n/)\n        .map(i => color(i))\n        .join('\\n')\n    } else {\n      result += token[1]\n    }\n  }\n  return result\n}\n\nterminalHighlight.registerInput = registerInput\n\nmodule.exports = terminalHighlight\n"],"mappings":"AAAA;;AAEA,IAAIA,IAAI,GAAGC,OAAO,CAAC,YAAD,CAAlB;;AAEA,IAAIC,SAAS,GAAGD,OAAO,CAAC,YAAD,CAAvB;;AAEA,IAAIE,KAAJ;;AAEA,SAASC,aAAT,CAAuBC,SAAvB,EAAkC;EAChCF,KAAK,GAAGE,SAAR;AACD;;AAED,MAAMC,eAAe,GAAG;EACtB,YAAYN,IAAI,CAACO,IADK;EAEtB,WAAWP,IAAI,CAACO,IAFM;EAGtB,WAAWP,IAAI,CAACQ,IAHM;EAItB,UAAUR,IAAI,CAACS,KAJO;EAKtB,SAAST,IAAI,CAACU,MALQ;EAMtB,QAAQV,IAAI,CAACW,OANS;EAOtB,QAAQX,IAAI,CAACO,IAPS;EAQtB,KAAKP,IAAI,CAACO,IARY;EAStB,KAAKP,IAAI,CAACO,IATY;EAUtB,KAAKP,IAAI,CAACU,MAVY;EAWtB,KAAKV,IAAI,CAACU,MAXY;EAYtB,KAAKV,IAAI,CAACU,MAZY;EAatB,KAAKV,IAAI,CAACU,MAbY;EActB,KAAKV,IAAI,CAACU,MAdY;EAetB,KAAKV,IAAI,CAACU;AAfY,CAAxB;;AAkBA,SAASE,YAAT,OAAqCC,SAArC,EAAgD;EAAA,IAA1B,CAACC,IAAD,EAAOC,KAAP,CAA0B;;EAC9C,IAAID,IAAI,KAAK,MAAb,EAAqB;IACnB,IAAIC,KAAK,CAAC,CAAD,CAAL,KAAa,GAAjB,EAAsB;MACpB,OAAO,OAAP;IACD;;IACD,IAAIA,KAAK,CAAC,CAAD,CAAL,KAAa,GAAjB,EAAsB;MACpB,OAAO,MAAP;IACD;EACF;;EAED,IAAI,CAACF,SAAS,CAACG,SAAV,EAAL,EAA4B;IAC1B,IAAIC,IAAI,GAAGJ,SAAS,CAACK,SAAV,EAAX;IACAL,SAAS,CAACM,IAAV,CAAeF,IAAf;IACA,IAAIA,IAAI,CAAC,CAAD,CAAJ,KAAY,UAAZ,IAA0BA,IAAI,CAAC,CAAD,CAAJ,KAAY,GAA1C,EAA+C,OAAO,MAAP;EAChD;;EAED,OAAOH,IAAP;AACD;;AAED,SAASM,iBAAT,CAA2BC,GAA3B,EAAgC;EAC9B,IAAIR,SAAS,GAAGX,SAAS,CAAC,IAAIC,KAAJ,CAAUkB,GAAV,CAAD,EAAiB;IAAEC,YAAY,EAAE;EAAhB,CAAjB,CAAzB;EACA,IAAIC,MAAM,GAAG,EAAb;;EACA,OAAO,CAACV,SAAS,CAACG,SAAV,EAAR,EAA+B;IAC7B,IAAIQ,KAAK,GAAGX,SAAS,CAACK,SAAV,EAAZ;IACA,IAAIO,KAAK,GAAGnB,eAAe,CAACM,YAAY,CAACY,KAAD,EAAQX,SAAR,CAAb,CAA3B;;IACA,IAAIY,KAAJ,EAAW;MACTF,MAAM,IAAIC,KAAK,CAAC,CAAD,CAAL,CACPE,KADO,CACD,OADC,EAEPC,GAFO,CAEHC,CAAC,IAAIH,KAAK,CAACG,CAAD,CAFP,EAGPC,IAHO,CAGF,IAHE,CAAV;IAID,CALD,MAKO;MACLN,MAAM,IAAIC,KAAK,CAAC,CAAD,CAAf;IACD;EACF;;EACD,OAAOD,MAAP;AACD;;AAEDH,iBAAiB,CAAChB,aAAlB,GAAkCA,aAAlC;AAEA0B,MAAM,CAACC,OAAP,GAAiBX,iBAAjB"},"metadata":{},"sourceType":"script"}