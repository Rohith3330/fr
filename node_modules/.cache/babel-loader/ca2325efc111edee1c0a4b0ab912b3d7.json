{"ast":null,"code":"/**\n * @fileoverview Prevent multiple component definition per file\n * @author Yannick Croissant\n */\n'use strict';\n\nconst Components = require('../util/Components');\n\nconst docsUrl = require('../util/docsUrl');\n\nconst report = require('../util/report'); // ------------------------------------------------------------------------------\n// Rule Definition\n// ------------------------------------------------------------------------------\n\n\nconst messages = {\n  onlyOneComponent: 'Declare only one React component per file'\n};\nmodule.exports = {\n  meta: {\n    docs: {\n      description: 'Disallow multiple component definition per file',\n      category: 'Stylistic Issues',\n      recommended: false,\n      url: docsUrl('no-multi-comp')\n    },\n    messages,\n    schema: [{\n      type: 'object',\n      properties: {\n        ignoreStateless: {\n          default: false,\n          type: 'boolean'\n        }\n      },\n      additionalProperties: false\n    }]\n  },\n  create: Components.detect((context, components, utils) => {\n    const configuration = context.options[0] || {};\n    const ignoreStateless = configuration.ignoreStateless || false;\n    /**\n     * Checks if the component is ignored\n     * @param {Object} component The component being checked.\n     * @returns {Boolean} True if the component is ignored, false if not.\n     */\n\n    function isIgnored(component) {\n      return ignoreStateless && (/Function/.test(component.node.type) || utils.isPragmaComponentWrapper(component.node));\n    }\n\n    return {\n      'Program:exit'() {\n        if (components.length() <= 1) {\n          return;\n        }\n\n        const list = components.list();\n        Object.keys(list).filter(component => !isIgnored(list[component])).forEach((component, i) => {\n          if (i >= 1) {\n            report(context, messages.onlyOneComponent, 'onlyOneComponent', {\n              node: list[component].node\n            });\n          }\n        });\n      }\n\n    };\n  })\n};","map":{"version":3,"names":["Components","require","docsUrl","report","messages","onlyOneComponent","module","exports","meta","docs","description","category","recommended","url","schema","type","properties","ignoreStateless","default","additionalProperties","create","detect","context","components","utils","configuration","options","isIgnored","component","test","node","isPragmaComponentWrapper","length","list","Object","keys","filter","forEach","i"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/eslint-plugin-react/lib/rules/no-multi-comp.js"],"sourcesContent":["/**\n * @fileoverview Prevent multiple component definition per file\n * @author Yannick Croissant\n */\n\n'use strict';\n\nconst Components = require('../util/Components');\nconst docsUrl = require('../util/docsUrl');\nconst report = require('../util/report');\n\n// ------------------------------------------------------------------------------\n// Rule Definition\n// ------------------------------------------------------------------------------\n\nconst messages = {\n  onlyOneComponent: 'Declare only one React component per file',\n};\n\nmodule.exports = {\n  meta: {\n    docs: {\n      description: 'Disallow multiple component definition per file',\n      category: 'Stylistic Issues',\n      recommended: false,\n      url: docsUrl('no-multi-comp'),\n    },\n\n    messages,\n\n    schema: [{\n      type: 'object',\n      properties: {\n        ignoreStateless: {\n          default: false,\n          type: 'boolean',\n        },\n      },\n      additionalProperties: false,\n    }],\n  },\n\n  create: Components.detect((context, components, utils) => {\n    const configuration = context.options[0] || {};\n    const ignoreStateless = configuration.ignoreStateless || false;\n\n    /**\n     * Checks if the component is ignored\n     * @param {Object} component The component being checked.\n     * @returns {Boolean} True if the component is ignored, false if not.\n     */\n    function isIgnored(component) {\n      return (\n        ignoreStateless && (\n          /Function/.test(component.node.type)\n          || utils.isPragmaComponentWrapper(component.node)\n        )\n      );\n    }\n\n    return {\n      'Program:exit'() {\n        if (components.length() <= 1) {\n          return;\n        }\n\n        const list = components.list();\n\n        Object.keys(list).filter((component) => !isIgnored(list[component])).forEach((component, i) => {\n          if (i >= 1) {\n            report(context, messages.onlyOneComponent, 'onlyOneComponent', {\n              node: list[component].node,\n            });\n          }\n        });\n      },\n    };\n  }),\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;;AAEA,MAAMA,UAAU,GAAGC,OAAO,CAAC,oBAAD,CAA1B;;AACA,MAAMC,OAAO,GAAGD,OAAO,CAAC,iBAAD,CAAvB;;AACA,MAAME,MAAM,GAAGF,OAAO,CAAC,gBAAD,CAAtB,C,CAEA;AACA;AACA;;;AAEA,MAAMG,QAAQ,GAAG;EACfC,gBAAgB,EAAE;AADH,CAAjB;AAIAC,MAAM,CAACC,OAAP,GAAiB;EACfC,IAAI,EAAE;IACJC,IAAI,EAAE;MACJC,WAAW,EAAE,iDADT;MAEJC,QAAQ,EAAE,kBAFN;MAGJC,WAAW,EAAE,KAHT;MAIJC,GAAG,EAAEX,OAAO,CAAC,eAAD;IAJR,CADF;IAQJE,QARI;IAUJU,MAAM,EAAE,CAAC;MACPC,IAAI,EAAE,QADC;MAEPC,UAAU,EAAE;QACVC,eAAe,EAAE;UACfC,OAAO,EAAE,KADM;UAEfH,IAAI,EAAE;QAFS;MADP,CAFL;MAQPI,oBAAoB,EAAE;IARf,CAAD;EAVJ,CADS;EAuBfC,MAAM,EAAEpB,UAAU,CAACqB,MAAX,CAAkB,CAACC,OAAD,EAAUC,UAAV,EAAsBC,KAAtB,KAAgC;IACxD,MAAMC,aAAa,GAAGH,OAAO,CAACI,OAAR,CAAgB,CAAhB,KAAsB,EAA5C;IACA,MAAMT,eAAe,GAAGQ,aAAa,CAACR,eAAd,IAAiC,KAAzD;IAEA;AACJ;AACA;AACA;AACA;;IACI,SAASU,SAAT,CAAmBC,SAAnB,EAA8B;MAC5B,OACEX,eAAe,KACb,WAAWY,IAAX,CAAgBD,SAAS,CAACE,IAAV,CAAef,IAA/B,KACGS,KAAK,CAACO,wBAAN,CAA+BH,SAAS,CAACE,IAAzC,CAFU,CADjB;IAMD;;IAED,OAAO;MACL,iBAAiB;QACf,IAAIP,UAAU,CAACS,MAAX,MAAuB,CAA3B,EAA8B;UAC5B;QACD;;QAED,MAAMC,IAAI,GAAGV,UAAU,CAACU,IAAX,EAAb;QAEAC,MAAM,CAACC,IAAP,CAAYF,IAAZ,EAAkBG,MAAlB,CAA0BR,SAAD,IAAe,CAACD,SAAS,CAACM,IAAI,CAACL,SAAD,CAAL,CAAlD,EAAqES,OAArE,CAA6E,CAACT,SAAD,EAAYU,CAAZ,KAAkB;UAC7F,IAAIA,CAAC,IAAI,CAAT,EAAY;YACVnC,MAAM,CAACmB,OAAD,EAAUlB,QAAQ,CAACC,gBAAnB,EAAqC,kBAArC,EAAyD;cAC7DyB,IAAI,EAAEG,IAAI,CAACL,SAAD,CAAJ,CAAgBE;YADuC,CAAzD,CAAN;UAGD;QACF,CAND;MAOD;;IAfI,CAAP;EAiBD,CAnCO;AAvBO,CAAjB"},"metadata":{},"sourceType":"script"}