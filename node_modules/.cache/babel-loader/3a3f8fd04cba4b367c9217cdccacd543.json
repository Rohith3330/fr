{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst utils_1 = require(\"@typescript-eslint/utils\");\n\nconst util = __importStar(require(\"../util\"));\n\nexports.default = util.createRule({\n  name: 'no-explicit-any',\n  meta: {\n    type: 'suggestion',\n    docs: {\n      description: 'Disallow the `any` type',\n      recommended: 'warn'\n    },\n    fixable: 'code',\n    hasSuggestions: true,\n    messages: {\n      unexpectedAny: 'Unexpected any. Specify a different type.',\n      suggestUnknown: 'Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.',\n      suggestNever: \"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.\"\n    },\n    schema: [{\n      type: 'object',\n      additionalProperties: false,\n      properties: {\n        fixToUnknown: {\n          description: 'Whether to enable auto-fixing in which the `any` type is converted to the `unknown` type.',\n          type: 'boolean'\n        },\n        ignoreRestArgs: {\n          description: 'Whether to ignore rest parameter arrays.',\n          type: 'boolean'\n        }\n      }\n    }]\n  },\n  defaultOptions: [{\n    fixToUnknown: false,\n    ignoreRestArgs: false\n  }],\n\n  create(context, _ref) {\n    let [{\n      ignoreRestArgs,\n      fixToUnknown\n    }] = _ref;\n\n    /**\n     * Checks if the node is an arrow function, function/constructor declaration or function expression\n     * @param node the node to be validated.\n     * @returns true if the node is any kind of function declaration or expression\n     * @private\n     */\n    function isNodeValidFunction(node) {\n      return [utils_1.AST_NODE_TYPES.ArrowFunctionExpression, utils_1.AST_NODE_TYPES.FunctionDeclaration, utils_1.AST_NODE_TYPES.FunctionExpression, utils_1.AST_NODE_TYPES.TSEmptyBodyFunctionExpression, utils_1.AST_NODE_TYPES.TSFunctionType, utils_1.AST_NODE_TYPES.TSConstructorType, utils_1.AST_NODE_TYPES.TSCallSignatureDeclaration, utils_1.AST_NODE_TYPES.TSConstructSignatureDeclaration, utils_1.AST_NODE_TYPES.TSMethodSignature, utils_1.AST_NODE_TYPES.TSDeclareFunction // declare function _8(...args: any[]): unknown;\n      ].includes(node.type);\n    }\n    /**\n     * Checks if the node is a rest element child node of a function\n     * @param node the node to be validated.\n     * @returns true if the node is a rest element child node of a function\n     * @private\n     */\n\n\n    function isNodeRestElementInFunction(node) {\n      return node.type === utils_1.AST_NODE_TYPES.RestElement && typeof node.parent !== 'undefined' && isNodeValidFunction(node.parent);\n    }\n    /**\n     * Checks if the node is a TSTypeOperator node with a readonly operator\n     * @param node the node to be validated.\n     * @returns true if the node is a TSTypeOperator node with a readonly operator\n     * @private\n     */\n\n\n    function isNodeReadonlyTSTypeOperator(node) {\n      return node.type === utils_1.AST_NODE_TYPES.TSTypeOperator && node.operator === 'readonly';\n    }\n    /**\n     * Checks if the node is a TSTypeReference node with an Array identifier\n     * @param node the node to be validated.\n     * @returns true if the node is a TSTypeReference node with an Array identifier\n     * @private\n     */\n\n\n    function isNodeValidArrayTSTypeReference(node) {\n      return node.type === utils_1.AST_NODE_TYPES.TSTypeReference && typeof node.typeName !== 'undefined' && node.typeName.type === utils_1.AST_NODE_TYPES.Identifier && ['Array', 'ReadonlyArray'].includes(node.typeName.name);\n    }\n    /**\n     * Checks if the node is a valid TSTypeOperator or TSTypeReference node\n     * @param node the node to be validated.\n     * @returns true if the node is a valid TSTypeOperator or TSTypeReference node\n     * @private\n     */\n\n\n    function isNodeValidTSType(node) {\n      return isNodeReadonlyTSTypeOperator(node) || isNodeValidArrayTSTypeReference(node);\n    }\n    /**\n     * Checks if the great grand-parent node is a RestElement node in a function\n     * @param node the node to be validated.\n     * @returns true if the great grand-parent node is a RestElement node in a function\n     * @private\n     */\n\n\n    function isGreatGrandparentRestElement(node) {\n      var _a, _b;\n\n      return ((_b = (_a = node === null || node === void 0 ? void 0 : node.parent) === null || _a === void 0 ? void 0 : _a.parent) === null || _b === void 0 ? void 0 : _b.parent) != null && isNodeRestElementInFunction(node.parent.parent.parent);\n    }\n    /**\n     * Checks if the great great grand-parent node is a valid RestElement node in a function\n     * @param node the node to be validated.\n     * @returns true if the great great grand-parent node is a valid RestElement node in a function\n     * @private\n     */\n\n\n    function isGreatGreatGrandparentRestElement(node) {\n      var _a, _b, _c;\n\n      return ((_c = (_b = (_a = node.parent) === null || _a === void 0 ? void 0 : _a.parent) === null || _b === void 0 ? void 0 : _b.parent) === null || _c === void 0 ? void 0 : _c.parent) != null && isNodeValidTSType(node.parent.parent) && isNodeRestElementInFunction(node.parent.parent.parent.parent);\n    }\n    /**\n     * Checks if the great grand-parent or the great great grand-parent node is a RestElement node\n     * @param node the node to be validated.\n     * @returns true if the great grand-parent or the great great grand-parent node is a RestElement node\n     * @private\n     */\n\n\n    function isNodeDescendantOfRestElementInFunction(node) {\n      return isGreatGrandparentRestElement(node) || isGreatGreatGrandparentRestElement(node);\n    }\n\n    return {\n      TSAnyKeyword(node) {\n        if (ignoreRestArgs && isNodeDescendantOfRestElementInFunction(node)) {\n          return;\n        }\n\n        const fixOrSuggest = {\n          fix: null,\n          suggest: [{\n            messageId: 'suggestUnknown',\n\n            fix(fixer) {\n              return fixer.replaceText(node, 'unknown');\n            }\n\n          }, {\n            messageId: 'suggestNever',\n\n            fix(fixer) {\n              return fixer.replaceText(node, 'never');\n            }\n\n          }]\n        };\n\n        if (fixToUnknown) {\n          fixOrSuggest.fix = fixer => fixer.replaceText(node, 'unknown');\n        }\n\n        context.report(Object.assign({\n          node,\n          messageId: 'unexpectedAny'\n        }, fixOrSuggest));\n      }\n\n    };\n  }\n\n});","map":{"version":3,"mappings":"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","names":["exports","util","createRule","name","meta","type","docs","description","recommended","fixable","hasSuggestions","messages","unexpectedAny","suggestUnknown","suggestNever","schema","additionalProperties","properties","fixToUnknown","ignoreRestArgs","defaultOptions","create","context","isNodeValidFunction","node","utils_1","ArrowFunctionExpression","FunctionDeclaration","FunctionExpression","TSEmptyBodyFunctionExpression","TSFunctionType","TSConstructorType","TSCallSignatureDeclaration","TSConstructSignatureDeclaration","TSMethodSignature","TSDeclareFunction","includes","isNodeRestElementInFunction","RestElement","parent","isNodeReadonlyTSTypeOperator","TSTypeOperator","operator","isNodeValidArrayTSTypeReference","TSTypeReference","typeName","Identifier","isNodeValidTSType","isGreatGrandparentRestElement","_a","_b","isGreatGreatGrandparentRestElement","_c","isNodeDescendantOfRestElementInFunction","TSAnyKeyword","fixOrSuggest","fix","suggest","messageId","fixer","replaceText","report","Object"],"sources":["../../src/rules/no-explicit-any.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}