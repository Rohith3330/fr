{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst codegen_1 = require(\"../../compile/codegen\");\n\nconst error = {\n  message(_ref) {\n    let {\n      keyword,\n      schemaCode\n    } = _ref;\n    const comp = keyword === \"maxItems\" ? \"more\" : \"fewer\";\n    return (0, codegen_1.str)`must NOT have ${comp} than ${schemaCode} items`;\n  },\n\n  params: _ref2 => {\n    let {\n      schemaCode\n    } = _ref2;\n    return (0, codegen_1._)`{limit: ${schemaCode}}`;\n  }\n};\nconst def = {\n  keyword: [\"maxItems\", \"minItems\"],\n  type: \"array\",\n  schemaType: \"number\",\n  $data: true,\n  error,\n\n  code(cxt) {\n    const {\n      keyword,\n      data,\n      schemaCode\n    } = cxt;\n    const op = keyword === \"maxItems\" ? codegen_1.operators.GT : codegen_1.operators.LT;\n    cxt.fail$data((0, codegen_1._)`${data}.length ${op} ${schemaCode}`);\n  }\n\n};\nexports.default = def;","map":{"version":3,"mappings":";;;;;;AAEA;;AAEA,MAAMA,KAAK,GAA2B;EACpCC,OAAO,OAAsB;IAAA,IAArB;MAACC,OAAD;MAAUC;IAAV,CAAqB;IAC3B,MAAMC,IAAI,GAAGF,OAAO,KAAK,UAAZ,GAAyB,MAAzB,GAAkC,OAA/C;IACA,OAAO,kBAAG,iBAAiBE,IAAI,SAASD,UAAU,QAAlD;EACD,CAJmC;;EAKpCE,MAAM,EAAE;IAAA,IAAC;MAACF;IAAD,CAAD;IAAA,OAAkB,gBAAC,WAAWA,UAAU,GAAxC;EAAA;AAL4B,CAAtC;AAQA,MAAMG,GAAG,GAA0B;EACjCJ,OAAO,EAAE,CAAC,UAAD,EAAa,UAAb,CADwB;EAEjCK,IAAI,EAAE,OAF2B;EAGjCC,UAAU,EAAE,QAHqB;EAIjCC,KAAK,EAAE,IAJ0B;EAKjCT,KALiC;;EAMjCU,IAAI,CAACC,GAAD,EAAgB;IAClB,MAAM;MAACT,OAAD;MAAUU,IAAV;MAAgBT;IAAhB,IAA8BQ,GAApC;IACA,MAAME,EAAE,GAAGX,OAAO,KAAK,UAAZ,GAAyBY,oBAAUC,EAAnC,GAAwCD,oBAAUE,EAA7D;IACAL,GAAG,CAACM,SAAJ,CAAc,gBAAC,GAAGL,IAAI,WAAWC,EAAE,IAAIV,UAAU,EAAjD;EACD;;AAVgC,CAAnC;AAaAe,kBAAeZ,GAAf","names":["error","message","keyword","schemaCode","comp","params","def","type","schemaType","$data","code","cxt","data","op","codegen_1","GT","LT","fail$data","exports"],"sources":["C:\\Users\\Rohith\\mern\\frontend\\node_modules\\css-minimizer-webpack-plugin\\node_modules\\ajv\\lib\\vocabularies\\validation\\limitItems.ts"],"sourcesContent":["import type {CodeKeywordDefinition, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str, operators} from \"../../compile/codegen\"\n\nconst error: KeywordErrorDefinition = {\n  message({keyword, schemaCode}) {\n    const comp = keyword === \"maxItems\" ? \"more\" : \"fewer\"\n    return str`must NOT have ${comp} than ${schemaCode} items`\n  },\n  params: ({schemaCode}) => _`{limit: ${schemaCode}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: [\"maxItems\", \"minItems\"],\n  type: \"array\",\n  schemaType: \"number\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {keyword, data, schemaCode} = cxt\n    const op = keyword === \"maxItems\" ? operators.GT : operators.LT\n    cxt.fail$data(_`${data}.length ${op} ${schemaCode}`)\n  },\n}\n\nexport default def\n"]},"metadata":{},"sourceType":"script"}