{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.parse = void 0;\nexports.parseAsync = parseAsync;\nexports.parseSync = parseSync;\n\nfunction _gensync() {\n  const data = require(\"gensync\");\n\n  _gensync = function () {\n    return data;\n  };\n\n  return data;\n}\n\nvar _config = require(\"./config\");\n\nvar _parser = require(\"./parser\");\n\nvar _normalizeOpts = require(\"./transformation/normalize-opts\");\n\nvar _rewriteStackTrace = require(\"./errors/rewrite-stack-trace\");\n\nconst parseRunner = _gensync()(function* parse(code, opts) {\n  const config = yield* (0, _config.default)(opts);\n\n  if (config === null) {\n    return null;\n  }\n\n  return yield* (0, _parser.default)(config.passes, (0, _normalizeOpts.default)(config), code);\n});\n\nconst parse = function parse(code, opts, callback) {\n  if (typeof opts === \"function\") {\n    callback = opts;\n    opts = undefined;\n  }\n\n  if (callback === undefined) {\n    {\n      return (0, _rewriteStackTrace.beginHiddenCallStack)(parseRunner.sync)(code, opts);\n    }\n  }\n\n  (0, _rewriteStackTrace.beginHiddenCallStack)(parseRunner.errback)(code, opts, callback);\n};\n\nexports.parse = parse;\n\nfunction parseSync() {\n  return (0, _rewriteStackTrace.beginHiddenCallStack)(parseRunner.sync)(...arguments);\n}\n\nfunction parseAsync() {\n  return (0, _rewriteStackTrace.beginHiddenCallStack)(parseRunner.async)(...arguments);\n}\n\n0 && 0;","map":{"version":3,"mappings":";;;;;;;;;AAAA;EAAA;;EAAAA;IAAA;EAAA;;EAAA;AAAA;;AAEA;;AAEA;;AAEA;;AAGA;;AAiBA,MAAMC,WAAW,GAAGC,WAAQ,UAAUC,KAAV,CAC1BC,IAD0B,EAE1BC,IAF0B,EAGG;EAC7B,MAAMC,MAAM,GAAG,OAAO,qBAAWD,IAAX,CAAtB;;EAEA,IAAIC,MAAM,KAAK,IAAf,EAAqB;IACnB,OAAO,IAAP;EACD;;EAED,OAAO,OAAO,qBAAOA,MAAM,CAACC,MAAd,EAAsB,4BAAiBD,MAAjB,CAAtB,EAAgDF,IAAhD,CAAd;AAVkB,EAApB;;AAaO,MAAMD,KAAY,GAAG,SAASA,KAAT,CAC1BC,IAD0B,EAE1BC,IAF0B,EAG1BG,QAH0B,EAI1B;EACA,IAAI,OAAOH,IAAP,KAAgB,UAApB,EAAgC;IAC9BG,QAAQ,GAAGH,IAAXG;IACAH,IAAI,GAAGI,SAAPJ;EACD;;EAED,IAAIG,QAAQ,KAAKC,SAAjB,EAA4B;IAKnB;MAIL,OAAO,6CAAqBR,WAAW,CAACS,IAAjC,EAAuCN,IAAvC,EAA6CC,IAA7C,CAAP;IACD;EACF;;EAED,6CAAqBJ,WAAW,CAACU,OAAjC,EAA0CP,IAA1C,EAAgDC,IAAhD,EAAsDG,QAAtD;AAvBK;;;;AA0BA,SAASI,SAAT,GAAiE;EACtE,OAAO,6CAAqBX,WAAW,CAACS,IAAjC,EAAuC,YAAvC,CAAP;AACD;;AACM,SAASG,UAAT,GAAmE;EACxE,OAAO,6CAAqBZ,WAAW,CAACa,KAAjC,EAAwC,YAAxC,CAAP;AACD","names":["_gensync","parseRunner","gensync","parse","code","opts","config","passes","callback","undefined","sync","errback","parseSync","parseAsync","async"],"sources":["C:\\Users\\Rohith\\mern\\frontend\\node_modules\\@babel\\core\\src\\parse.ts"],"sourcesContent":["import gensync, { type Handler } from \"gensync\";\n\nimport loadConfig from \"./config\";\nimport type { InputOptions } from \"./config\";\nimport parser from \"./parser\";\nimport type { ParseResult } from \"./parser\";\nimport normalizeOptions from \"./transformation/normalize-opts\";\nimport type { ValidatedOptions } from \"./config/validation/options\";\n\nimport { beginHiddenCallStack } from \"./errors/rewrite-stack-trace\";\n\ntype FileParseCallback = {\n  (err: Error, ast: null): void;\n  (err: null, ast: ParseResult | null): void;\n};\n\ntype Parse = {\n  (code: string, callback: FileParseCallback): void;\n  (\n    code: string,\n    opts: InputOptions | undefined | null,\n    callback: FileParseCallback,\n  ): void;\n  (code: string, opts?: InputOptions | null): ParseResult | null;\n};\n\nconst parseRunner = gensync(function* parse(\n  code: string,\n  opts: InputOptions | undefined | null,\n): Handler<ParseResult | null> {\n  const config = yield* loadConfig(opts);\n\n  if (config === null) {\n    return null;\n  }\n\n  return yield* parser(config.passes, normalizeOptions(config), code);\n});\n\nexport const parse: Parse = function parse(\n  code,\n  opts?,\n  callback?: FileParseCallback,\n) {\n  if (typeof opts === \"function\") {\n    callback = opts;\n    opts = undefined as ValidatedOptions;\n  }\n\n  if (callback === undefined) {\n    if (process.env.BABEL_8_BREAKING) {\n      throw new Error(\n        \"Starting from Babel 8.0.0, the 'parse' function expects a callback. If you need to call it synchronously, please use 'parseSync'.\",\n      );\n    } else {\n      // console.warn(\n      //   \"Starting from Babel 8.0.0, the 'parse' function will expect a callback. If you need to call it synchronously, please use 'parseSync'.\",\n      // );\n      return beginHiddenCallStack(parseRunner.sync)(code, opts);\n    }\n  }\n\n  beginHiddenCallStack(parseRunner.errback)(code, opts, callback);\n};\n\nexport function parseSync(...args: Parameters<typeof parseRunner.sync>) {\n  return beginHiddenCallStack(parseRunner.sync)(...args);\n}\nexport function parseAsync(...args: Parameters<typeof parseRunner.async>) {\n  return beginHiddenCallStack(parseRunner.async)(...args);\n}\n"]},"metadata":{},"sourceType":"script"}