{"ast":null,"code":"\"use strict\";\n/* eslint-disable class-methods-use-this */\n\nconst path = require(\"path\");\n\nconst {\n  validate\n} = require(\"schema-utils\");\n\nconst schema = require(\"./plugin-options.json\");\n\nconst {\n  trueFn,\n  MODULE_TYPE,\n  AUTO_PUBLIC_PATH,\n  ABSOLUTE_PUBLIC_PATH,\n  SINGLE_DOT_PATH_SEGMENT,\n  compareModulesByIdentifier,\n  getUndoPath,\n  BASE_URI\n} = require(\"./utils\");\n/** @typedef {import(\"schema-utils/declarations/validate\").Schema} Schema */\n\n/** @typedef {import(\"webpack\").Compiler} Compiler */\n\n/** @typedef {import(\"webpack\").Compilation} Compilation */\n\n/** @typedef {import(\"webpack\").ChunkGraph} ChunkGraph */\n\n/** @typedef {import(\"webpack\").Chunk} Chunk */\n\n/** @typedef {Parameters<import(\"webpack\").Chunk[\"isInGroup\"]>[0]} ChunkGroup */\n\n/** @typedef {import(\"webpack\").Module} Module */\n\n/** @typedef {import(\"webpack\").Dependency} Dependency */\n\n/** @typedef {import(\"webpack\").sources.Source} Source */\n\n/** @typedef {import(\"webpack\").Configuration} Configuration */\n\n/** @typedef {import(\"webpack\").WebpackError} WebpackError */\n\n/** @typedef {import(\"webpack\").AssetInfo} AssetInfo */\n\n/** @typedef {import(\"./loader.js\").Dependency} LoaderDependency */\n\n/**\n * @typedef {Object} LoaderOptions\n * @property {string | ((resourcePath: string, rootContext: string) => string)} [publicPath]\n * @property {boolean} [emit]\n * @property {boolean} [esModule]\n * @property {string} [layer]\n */\n\n/**\n * @typedef {Object} PluginOptions\n * @property {Required<Configuration>['output']['filename']} [filename]\n * @property {Required<Configuration>['output']['chunkFilename']} [chunkFilename]\n * @property {boolean} [ignoreOrder]\n * @property {string | ((linkTag: HTMLLinkElement) => void)} [insert]\n * @property {Record<string, string>} [attributes]\n * @property {string | false | 'text/css'} [linkType]\n * @property {boolean} [runtime]\n * @property {boolean} [experimentalUseImportModule]\n */\n\n/**\n * @typedef {Object} NormalizedPluginOptions\n * @property {Required<Configuration>['output']['filename']} filename\n * @property {Required<Configuration>['output']['chunkFilename']} [chunkFilename]\n * @property {boolean} ignoreOrder\n * @property {string | ((linkTag: HTMLLinkElement) => void)} [insert]\n * @property {Record<string, string>} [attributes]\n * @property {string | false | 'text/css'} [linkType]\n * @property {boolean} runtime\n * @property {boolean} [experimentalUseImportModule]\n */\n\n/**\n * @typedef {Object} RuntimeOptions\n * @property {string | ((linkTag: HTMLLinkElement) => void) | undefined} insert\n * @property {string | false | 'text/css'} linkType\n * @property {Record<string, string> | undefined} attributes\n */\n\n/** @typedef {any} TODO */\n\n\nconst pluginName = \"mini-css-extract-plugin\";\nconst pluginSymbol = Symbol(pluginName);\nconst DEFAULT_FILENAME = \"[name].css\";\n/**\n * @type {Set<string>}\n */\n\nconst TYPES = new Set([MODULE_TYPE]);\n/**\n * @type {ReturnType<Module[\"codeGeneration\"]>}\n */\n\nconst CODE_GENERATION_RESULT = {\n  sources: new Map(),\n  runtimeRequirements: new Set()\n};\n/** @typedef {Module & { content: Buffer, media?: string, sourceMap?: Buffer, supports?: string, layer?: string, assets?: { [key: string]: TODO }, assetsInfo?: Map<string, AssetInfo> }} CssModule */\n\n/** @typedef {{ context: string | null, identifier: string, identifierIndex: number, content: Buffer, sourceMap?: Buffer, media?: string, supports?: string, layer?: TODO, assetsInfo?: Map<string, AssetInfo>, assets?: { [key: string]: TODO }}} CssModuleDependency */\n\n/** @typedef {{ new(dependency: CssModuleDependency): CssModule }} CssModuleConstructor */\n\n/** @typedef {Dependency & CssModuleDependency} CssDependency */\n\n/** @typedef {Omit<LoaderDependency, \"context\">} CssDependencyOptions */\n\n/** @typedef {{ new(loaderDependency: CssDependencyOptions, context: string | null, identifierIndex: number): CssDependency }} CssDependencyConstructor */\n\n/**\n *\n * @type {WeakMap<Compiler[\"webpack\"], CssModuleConstructor>}\n */\n\nconst cssModuleCache = new WeakMap();\n/**\n * @type {WeakMap<Compiler[\"webpack\"], CssDependencyConstructor>}\n */\n\nconst cssDependencyCache = new WeakMap();\n/**\n * @type {WeakSet<Compiler[\"webpack\"]>}\n */\n\nconst registered = new WeakSet();\n\nclass MiniCssExtractPlugin {\n  /**\n   * @param {Compiler[\"webpack\"]} webpack\n   * @returns {CssModuleConstructor}\n   */\n  static getCssModule(webpack) {\n    /**\n     * Prevent creation of multiple CssModule classes to allow other integrations to get the current CssModule.\n     */\n    if (cssModuleCache.has(webpack)) {\n      return (\n        /** @type {CssModuleConstructor} */\n        cssModuleCache.get(webpack)\n      );\n    }\n\n    class CssModule extends webpack.Module {\n      /**\n       * @param {CssModuleDependency} dependency\n       */\n      constructor(_ref) {\n        let {\n          context,\n          identifier,\n          identifierIndex,\n          content,\n          layer,\n          supports,\n          media,\n          sourceMap,\n          assets,\n          assetsInfo\n        } = _ref;\n        super(MODULE_TYPE,\n        /** @type {string | undefined} */\n        context);\n        this.id = \"\";\n        this._context = context;\n        this._identifier = identifier;\n        this._identifierIndex = identifierIndex;\n        this.content = content;\n        this.layer = layer;\n        this.supports = supports;\n        this.media = media;\n        this.sourceMap = sourceMap;\n        this.assets = assets;\n        this.assetsInfo = assetsInfo;\n        this._needBuild = true;\n      } // no source() so webpack 4 doesn't do add stuff to the bundle\n\n\n      size() {\n        return this.content.length;\n      }\n\n      identifier() {\n        return `css|${this._identifier}|${this._identifierIndex}`;\n      }\n      /**\n       * @param {Parameters<Module[\"readableIdentifier\"]>[0]} requestShortener\n       * @returns {ReturnType<Module[\"readableIdentifier\"]>}\n       */\n\n\n      readableIdentifier(requestShortener) {\n        return `css ${requestShortener.shorten(this._identifier)}${this._identifierIndex ? ` (${this._identifierIndex})` : \"\"}`;\n      } // eslint-disable-next-line class-methods-use-this\n\n\n      getSourceTypes() {\n        return TYPES;\n      } // eslint-disable-next-line class-methods-use-this\n\n\n      codeGeneration() {\n        return CODE_GENERATION_RESULT;\n      }\n\n      nameForCondition() {\n        const resource =\n        /** @type {string} */\n        this._identifier.split(\"!\").pop();\n\n        const idx = resource.indexOf(\"?\");\n\n        if (idx >= 0) {\n          return resource.substring(0, idx);\n        }\n\n        return resource;\n      }\n      /**\n       * @param {Module} module\n       */\n\n\n      updateCacheModule(module) {\n        if (this.content !==\n        /** @type {CssModule} */\n        module.content || this.layer !==\n        /** @type {CssModule} */\n        module.layer || this.supports !==\n        /** @type {CssModule} */\n        module.supports || this.media !==\n        /** @type {CssModule} */\n        module.media || this.sourceMap !==\n        /** @type {CssModule} */\n        module.sourceMap || this.assets !==\n        /** @type {CssModule} */\n        module.assets || this.assetsInfo !==\n        /** @type {CssModule} */\n        module.assetsInfo) {\n          this._needBuild = true;\n          this.content =\n          /** @type {CssModule} */\n          module.content;\n          this.layer =\n          /** @type {CssModule} */\n          module.layer;\n          this.supports =\n          /** @type {CssModule} */\n          module.supports;\n          this.media =\n          /** @type {CssModule} */\n          module.media;\n          this.sourceMap =\n          /** @type {CssModule} */\n          module.sourceMap;\n          this.assets =\n          /** @type {CssModule} */\n          module.assets;\n          this.assetsInfo =\n          /** @type {CssModule} */\n          module.assetsInfo;\n        }\n      } // eslint-disable-next-line class-methods-use-this\n\n\n      needRebuild() {\n        return this._needBuild;\n      } // eslint-disable-next-line class-methods-use-this\n\n      /**\n       * @param {Parameters<Module[\"needBuild\"]>[0]} context context info\n       * @param {Parameters<Module[\"needBuild\"]>[1]} callback callback function, returns true, if the module needs a rebuild\n       */\n\n\n      needBuild(context, callback) {\n        // eslint-disable-next-line no-undefined\n        callback(undefined, this._needBuild);\n      }\n      /**\n       * @param {Parameters<Module[\"build\"]>[0]} options\n       * @param {Parameters<Module[\"build\"]>[1]} compilation\n       * @param {Parameters<Module[\"build\"]>[2]} resolver\n       * @param {Parameters<Module[\"build\"]>[3]} fileSystem\n       * @param {Parameters<Module[\"build\"]>[4]} callback\n       */\n\n\n      build(options, compilation, resolver, fileSystem, callback) {\n        this.buildInfo = {\n          assets: this.assets,\n          assetsInfo: this.assetsInfo,\n          cacheable: true,\n          hash: this._computeHash(\n          /** @type {string} */\n          compilation.outputOptions.hashFunction)\n        };\n        this.buildMeta = {};\n        this._needBuild = false;\n        callback();\n      }\n      /**\n       * @private\n       * @param {string} hashFunction\n       * @returns {string | Buffer}\n       */\n\n\n      _computeHash(hashFunction) {\n        const hash = webpack.util.createHash(hashFunction);\n        hash.update(this.content);\n\n        if (this.layer) {\n          hash.update(this.layer);\n        }\n\n        hash.update(this.supports || \"\");\n        hash.update(this.media || \"\");\n        hash.update(this.sourceMap || \"\");\n        return hash.digest(\"hex\");\n      }\n      /**\n       * @param {Parameters<Module[\"updateHash\"]>[0]} hash\n       * @param {Parameters<Module[\"updateHash\"]>[1]} context\n       */\n\n\n      updateHash(hash, context) {\n        super.updateHash(hash, context);\n        hash.update(this.buildInfo.hash);\n      }\n      /**\n       * @param {Parameters<Module[\"serialize\"]>[0]} context\n       */\n\n\n      serialize(context) {\n        const {\n          write\n        } = context;\n        write(this._context);\n        write(this._identifier);\n        write(this._identifierIndex);\n        write(this.content);\n        write(this.layer);\n        write(this.supports);\n        write(this.media);\n        write(this.sourceMap);\n        write(this.assets);\n        write(this.assetsInfo);\n        write(this._needBuild);\n        super.serialize(context);\n      }\n      /**\n       * @param {Parameters<Module[\"deserialize\"]>[0]} context\n       */\n\n\n      deserialize(context) {\n        this._needBuild = context.read();\n        super.deserialize(context);\n      }\n\n    }\n\n    cssModuleCache.set(webpack, CssModule);\n    webpack.util.serialization.register(CssModule, path.resolve(__dirname, \"CssModule\"), // @ts-ignore\n    null, {\n      serialize(instance, context) {\n        instance.serialize(context);\n      },\n\n      deserialize(context) {\n        const {\n          read\n        } = context;\n        const contextModule = read();\n        const identifier = read();\n        const identifierIndex = read();\n        const content = read();\n        const layer = read();\n        const supports = read();\n        const media = read();\n        const sourceMap = read();\n        const assets = read();\n        const assetsInfo = read();\n        const dep = new CssModule({\n          context: contextModule,\n          identifier,\n          identifierIndex,\n          content,\n          layer,\n          supports,\n          media,\n          sourceMap,\n          assets,\n          assetsInfo\n        });\n        dep.deserialize(context);\n        return dep;\n      }\n\n    });\n    return CssModule;\n  }\n  /**\n   * @param {Compiler[\"webpack\"]} webpack\n   * @returns {CssDependencyConstructor}\n   */\n\n\n  static getCssDependency(webpack) {\n    /**\n     * Prevent creation of multiple CssDependency classes to allow other integrations to get the current CssDependency.\n     */\n    if (cssDependencyCache.has(webpack)) {\n      return (\n        /** @type {CssDependencyConstructor} */\n        cssDependencyCache.get(webpack)\n      );\n    }\n\n    class CssDependency extends webpack.Dependency {\n      /**\n       * @param {CssDependencyOptions} loaderDependency\n       * @param {string | null} context\n       * @param {number} identifierIndex\n       */\n      constructor(_ref2, context, identifierIndex) {\n        let {\n          identifier,\n          content,\n          layer,\n          supports,\n          media,\n          sourceMap\n        } = _ref2;\n        super();\n        this.identifier = identifier;\n        this.identifierIndex = identifierIndex;\n        this.content = content;\n        this.layer = layer;\n        this.supports = supports;\n        this.media = media;\n        this.sourceMap = sourceMap;\n        this.context = context;\n        /** @type {{ [key: string]: Source } | undefined}} */\n        // eslint-disable-next-line no-undefined\n\n        this.assets = undefined;\n        /** @type {Map<string, AssetInfo> | undefined} */\n        // eslint-disable-next-line no-undefined\n\n        this.assetsInfo = undefined;\n      }\n      /**\n       * @returns {ReturnType<Dependency[\"getResourceIdentifier\"]>}\n       */\n\n\n      getResourceIdentifier() {\n        return `css-module-${this.identifier}-${this.identifierIndex}`;\n      }\n      /**\n       * @returns {ReturnType<Dependency[\"getModuleEvaluationSideEffectsState\"]>}\n       */\n      // eslint-disable-next-line class-methods-use-this\n\n\n      getModuleEvaluationSideEffectsState() {\n        return webpack.ModuleGraphConnection.TRANSITIVE_ONLY;\n      }\n      /**\n       * @param {Parameters<Dependency[\"serialize\"]>[0]} context\n       */\n\n\n      serialize(context) {\n        const {\n          write\n        } = context;\n        write(this.identifier);\n        write(this.content);\n        write(this.layer);\n        write(this.supports);\n        write(this.media);\n        write(this.sourceMap);\n        write(this.context);\n        write(this.identifierIndex);\n        write(this.assets);\n        write(this.assetsInfo);\n        super.serialize(context);\n      }\n      /**\n       * @param {Parameters<Dependency[\"deserialize\"]>[0]} context\n       */\n\n\n      deserialize(context) {\n        super.deserialize(context);\n      }\n\n    }\n\n    cssDependencyCache.set(webpack, CssDependency);\n    webpack.util.serialization.register(CssDependency, path.resolve(__dirname, \"CssDependency\"), // @ts-ignore\n    null, {\n      serialize(instance, context) {\n        instance.serialize(context);\n      },\n\n      deserialize(context) {\n        const {\n          read\n        } = context;\n        const dep = new CssDependency({\n          identifier: read(),\n          content: read(),\n          layer: read(),\n          supports: read(),\n          media: read(),\n          sourceMap: read()\n        }, read(), read());\n        const assets = read();\n        const assetsInfo = read();\n        dep.assets = assets;\n        dep.assetsInfo = assetsInfo;\n        dep.deserialize(context);\n        return dep;\n      }\n\n    });\n    return CssDependency;\n  }\n  /**\n   * @param {PluginOptions} [options]\n   */\n\n\n  constructor() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    validate(\n    /** @type {Schema} */\n    schema, options, {\n      baseDataPath: \"options\"\n    });\n    /**\n     * @private\n     * @type {WeakMap<Chunk, Set<CssModule>>}\n     * @private\n     */\n\n    this._sortedModulesCache = new WeakMap();\n    /**\n     * @private\n     * @type {NormalizedPluginOptions}\n     */\n\n    this.options = Object.assign({\n      filename: DEFAULT_FILENAME,\n      ignoreOrder: false,\n      // TODO remove in the next major release\n      // eslint-disable-next-line no-undefined\n      experimentalUseImportModule: undefined,\n      runtime: true\n    }, options);\n    /**\n     * @private\n     * @type {RuntimeOptions}\n     */\n\n    this.runtimeOptions = {\n      insert: options.insert,\n      linkType: // Todo in next major release set default to \"false\"\n      typeof options.linkType === \"boolean\" &&\n      /** @type {boolean} */\n      options.linkType === true || typeof options.linkType === \"undefined\" ? \"text/css\" : options.linkType,\n      attributes: options.attributes\n    };\n\n    if (!this.options.chunkFilename) {\n      const {\n        filename\n      } = this.options;\n\n      if (typeof filename !== \"function\") {\n        const hasName =\n        /** @type {string} */\n        filename.includes(\"[name]\");\n        const hasId =\n        /** @type {string} */\n        filename.includes(\"[id]\");\n        const hasChunkHash =\n        /** @type {string} */\n        filename.includes(\"[chunkhash]\");\n        const hasContentHash =\n        /** @type {string} */\n        filename.includes(\"[contenthash]\"); // Anything changing depending on chunk is fine\n\n        if (hasChunkHash || hasContentHash || hasName || hasId) {\n          this.options.chunkFilename = filename;\n        } else {\n          // Otherwise prefix \"[id].\" in front of the basename to make it changing\n          this.options.chunkFilename =\n          /** @type {string} */\n          filename.replace(/(^|\\/)([^/]*(?:\\?|$))/, \"$1[id].$2\");\n        }\n      } else {\n        this.options.chunkFilename = \"[id].css\";\n      }\n    }\n  }\n  /**\n   * @param {Compiler} compiler\n   */\n\n\n  apply(compiler) {\n    const {\n      webpack\n    } = compiler;\n\n    if (this.options.experimentalUseImportModule) {\n      if (typeof\n      /** @type {Compiler[\"options\"][\"experiments\"] & { executeModule?: boolean }} */\n      compiler.options.experiments.executeModule === \"undefined\") {\n        /** @type {Compiler[\"options\"][\"experiments\"] & { executeModule?: boolean }} */\n        // eslint-disable-next-line no-param-reassign\n        compiler.options.experiments.executeModule = true;\n      }\n    } // TODO bug in webpack, remove it after it will be fixed\n    // webpack tries to `require` loader firstly when serializer doesn't found\n\n\n    if (!registered.has(webpack)) {\n      registered.add(webpack);\n      webpack.util.serialization.registerLoader(/^mini-css-extract-plugin\\//, trueFn);\n    }\n\n    const {\n      splitChunks\n    } = compiler.options.optimization;\n\n    if (splitChunks) {\n      if (\n      /** @type {string[]} */\n      splitChunks.defaultSizeTypes.includes(\"...\")) {\n        /** @type {string[]} */\n        splitChunks.defaultSizeTypes.push(MODULE_TYPE);\n      }\n    }\n\n    const CssModule = MiniCssExtractPlugin.getCssModule(webpack);\n    const CssDependency = MiniCssExtractPlugin.getCssDependency(webpack);\n    const {\n      NormalModule\n    } = compiler.webpack;\n    compiler.hooks.compilation.tap(pluginName, compilation => {\n      const {\n        loader: normalModuleHook\n      } = NormalModule.getCompilationHooks(compilation);\n      normalModuleHook.tap(pluginName,\n      /**\n       * @param {object} loaderContext\n       */\n      loaderContext => {\n        /** @type {object & { [pluginSymbol]: { experimentalUseImportModule: boolean | undefined } }} */\n        // eslint-disable-next-line no-param-reassign\n        loaderContext[pluginSymbol] = {\n          experimentalUseImportModule: this.options.experimentalUseImportModule\n        };\n      });\n    });\n    compiler.hooks.thisCompilation.tap(pluginName, compilation => {\n      class CssModuleFactory {\n        /**\n         * @param {{ dependencies: Dependency[] }} dependencies\n         * @param {(arg0?: Error, arg1?: TODO) => void} callback\n         */\n        // eslint-disable-next-line class-methods-use-this\n        create(_ref3, callback) {\n          let {\n            dependencies: [dependency]\n          } = _ref3;\n          // eslint-disable-next-line no-undefined\n          callback(undefined, new CssModule(\n          /** @type {CssDependency} */\n          dependency));\n        }\n\n      }\n\n      compilation.dependencyFactories.set(CssDependency, new CssModuleFactory());\n\n      class CssDependencyTemplate {\n        // eslint-disable-next-line class-methods-use-this\n        apply() {}\n\n      }\n\n      compilation.dependencyTemplates.set(CssDependency, new CssDependencyTemplate());\n      compilation.hooks.renderManifest.tap(pluginName,\n      /**\n       * @param {ReturnType<Compilation[\"getRenderManifest\"]>} result\n       * @param {Parameters<Compilation[\"getRenderManifest\"]>[0]} chunk\n       * @returns {TODO}\n       */\n      (result, _ref4) => {\n        let {\n          chunk\n        } = _ref4;\n        const {\n          chunkGraph\n        } = compilation;\n        const {\n          HotUpdateChunk\n        } = webpack; // We don't need hot update chunks for css\n        // We will use the real asset instead to update\n\n        if (chunk instanceof HotUpdateChunk) {\n          return;\n        }\n        /** @type {CssModule[]} */\n\n\n        const renderedModules = Array.from(\n        /** @type {CssModule[]} */\n        this.getChunkModules(chunk, chunkGraph)).filter(module => module.type === MODULE_TYPE);\n        const filenameTemplate =\n        /** @type {string} */\n        chunk.canBeInitial() ? this.options.filename : this.options.chunkFilename;\n\n        if (renderedModules.length > 0) {\n          result.push({\n            render: () => this.renderContentAsset(compiler, compilation, chunk, renderedModules, compilation.runtimeTemplate.requestShortener, filenameTemplate, {\n              contentHashType: MODULE_TYPE,\n              chunk\n            }),\n            filenameTemplate,\n            pathOptions: {\n              chunk,\n              contentHashType: MODULE_TYPE\n            },\n            identifier: `${pluginName}.${chunk.id}`,\n            hash: chunk.contentHash[MODULE_TYPE]\n          });\n        }\n      });\n      compilation.hooks.contentHash.tap(pluginName, chunk => {\n        const {\n          outputOptions,\n          chunkGraph\n        } = compilation;\n        const modules = this.sortModules(compilation, chunk,\n        /** @type {CssModule[]} */\n        chunkGraph.getChunkModulesIterableBySourceType(chunk, MODULE_TYPE), compilation.runtimeTemplate.requestShortener);\n\n        if (modules) {\n          const {\n            hashFunction,\n            hashDigest,\n            hashDigestLength\n          } = outputOptions;\n          const {\n            createHash\n          } = compiler.webpack.util;\n          const hash = createHash(\n          /** @type {string} */\n          hashFunction);\n\n          for (const m of modules) {\n            hash.update(chunkGraph.getModuleHash(m, chunk.runtime));\n          } // eslint-disable-next-line no-param-reassign\n\n\n          chunk.contentHash[MODULE_TYPE] =\n          /** @type {string} */\n          hash.digest(hashDigest).substring(0, hashDigestLength);\n        }\n      }); // All the code below is dedicated to the runtime and can be skipped when the `runtime` option is `false`\n\n      if (!this.options.runtime) {\n        return;\n      }\n\n      const {\n        Template,\n        RuntimeGlobals,\n        RuntimeModule,\n        runtime\n      } = webpack;\n      /**\n       * @param {Chunk} mainChunk\n       * @param {Compilation} compilation\n       * @returns {Record<string, number>}\n       */\n      // eslint-disable-next-line no-shadow\n\n      const getCssChunkObject = (mainChunk, compilation) => {\n        /** @type {Record<string, number>} */\n        const obj = {};\n        const {\n          chunkGraph\n        } = compilation;\n\n        for (const chunk of mainChunk.getAllAsyncChunks()) {\n          const modules = chunkGraph.getOrderedChunkModulesIterable(chunk, compareModulesByIdentifier);\n\n          for (const module of modules) {\n            if (module.type === MODULE_TYPE) {\n              obj[\n              /** @type {string} */\n              chunk.id] = 1;\n              break;\n            }\n          }\n        }\n\n        return obj;\n      };\n\n      class CssLoadingRuntimeModule extends RuntimeModule {\n        /**\n         * @param {Set<string>} runtimeRequirements\n         * @param {RuntimeOptions} runtimeOptions\n         */\n        constructor(runtimeRequirements, runtimeOptions) {\n          super(\"css loading\", 10);\n          this.runtimeRequirements = runtimeRequirements;\n          this.runtimeOptions = runtimeOptions;\n        }\n\n        generate() {\n          const {\n            chunk,\n            runtimeRequirements\n          } = this;\n          const {\n            runtimeTemplate,\n            outputOptions: {\n              crossOriginLoading\n            }\n          } = this.compilation;\n          const chunkMap = getCssChunkObject(chunk, this.compilation);\n          const withLoading = runtimeRequirements.has(RuntimeGlobals.ensureChunkHandlers) && Object.keys(chunkMap).length > 0;\n          const withHmr = runtimeRequirements.has(RuntimeGlobals.hmrDownloadUpdateHandlers);\n\n          if (!withLoading && !withHmr) {\n            return \"\";\n          }\n\n          return Template.asString([`var createStylesheet = ${runtimeTemplate.basicFunction(\"chunkId, fullhref, resolve, reject\", ['var linkTag = document.createElement(\"link\");', this.runtimeOptions.attributes ? Template.asString(Object.entries(this.runtimeOptions.attributes).map(entry => {\n            const [key, value] = entry;\n            return `linkTag.setAttribute(${JSON.stringify(key)}, ${JSON.stringify(value)});`;\n          })) : \"\", 'linkTag.rel = \"stylesheet\";', this.runtimeOptions.linkType ? `linkTag.type = ${JSON.stringify(this.runtimeOptions.linkType)};` : \"\", `var onLinkComplete = ${runtimeTemplate.basicFunction(\"event\", [\"// avoid mem leaks.\", \"linkTag.onerror = linkTag.onload = null;\", \"if (event.type === 'load') {\", Template.indent([\"resolve();\"]), \"} else {\", Template.indent([\"var errorType = event && (event.type === 'load' ? 'missing' : event.type);\", \"var realHref = event && event.target && event.target.href || fullhref;\", 'var err = new Error(\"Loading CSS chunk \" + chunkId + \" failed.\\\\n(\" + realHref + \")\");', 'err.code = \"CSS_CHUNK_LOAD_FAILED\";', \"err.type = errorType;\", \"err.request = realHref;\", \"linkTag.parentNode.removeChild(linkTag)\", \"reject(err);\"]), \"}\"])}`, \"linkTag.onerror = linkTag.onload = onLinkComplete;\", \"linkTag.href = fullhref;\", crossOriginLoading ? Template.asString([`if (linkTag.href.indexOf(window.location.origin + '/') !== 0) {`, Template.indent(`linkTag.crossOrigin = ${JSON.stringify(crossOriginLoading)};`), \"}\"]) : \"\", typeof this.runtimeOptions.insert !== \"undefined\" ? typeof this.runtimeOptions.insert === \"function\" ? `(${this.runtimeOptions.insert.toString()})(linkTag)` : Template.asString([`var target = document.querySelector(\"${this.runtimeOptions.insert}\");`, `target.parentNode.insertBefore(linkTag, target.nextSibling);`]) : Template.asString([\"document.head.appendChild(linkTag);\"]), \"return linkTag;\"])};`, `var findStylesheet = ${runtimeTemplate.basicFunction(\"href, fullhref\", ['var existingLinkTags = document.getElementsByTagName(\"link\");', \"for(var i = 0; i < existingLinkTags.length; i++) {\", Template.indent([\"var tag = existingLinkTags[i];\", 'var dataHref = tag.getAttribute(\"data-href\") || tag.getAttribute(\"href\");', 'if(tag.rel === \"stylesheet\" && (dataHref === href || dataHref === fullhref)) return tag;']), \"}\", 'var existingStyleTags = document.getElementsByTagName(\"style\");', \"for(var i = 0; i < existingStyleTags.length; i++) {\", Template.indent([\"var tag = existingStyleTags[i];\", 'var dataHref = tag.getAttribute(\"data-href\");', \"if(dataHref === href || dataHref === fullhref) return tag;\"]), \"}\"])};`, `var loadStylesheet = ${runtimeTemplate.basicFunction(\"chunkId\", `return new Promise(${runtimeTemplate.basicFunction(\"resolve, reject\", [`var href = ${RuntimeGlobals.require}.miniCssF(chunkId);`, `var fullhref = ${RuntimeGlobals.publicPath} + href;`, \"if(findStylesheet(href, fullhref)) return resolve();\", \"createStylesheet(chunkId, fullhref, resolve, reject);\"])});`)}`, withLoading ? Template.asString([\"// object to store loaded CSS chunks\", \"var installedCssChunks = {\", Template.indent(\n          /** @type {string[]} */\n          chunk.ids.map(id => `${JSON.stringify(id)}: 0`).join(\",\\n\")), \"};\", \"\", `${RuntimeGlobals.ensureChunkHandlers}.miniCss = ${runtimeTemplate.basicFunction(\"chunkId, promises\", [`var cssChunks = ${JSON.stringify(chunkMap)};`, \"if(installedCssChunks[chunkId]) promises.push(installedCssChunks[chunkId]);\", \"else if(installedCssChunks[chunkId] !== 0 && cssChunks[chunkId]) {\", Template.indent([`promises.push(installedCssChunks[chunkId] = loadStylesheet(chunkId).then(${runtimeTemplate.basicFunction(\"\", \"installedCssChunks[chunkId] = 0;\")}, ${runtimeTemplate.basicFunction(\"e\", [\"delete installedCssChunks[chunkId];\", \"throw e;\"])}));`]), \"}\"])};`]) : \"// no chunk loading\", \"\", withHmr ? Template.asString([\"var oldTags = [];\", \"var newTags = [];\", `var applyHandler = ${runtimeTemplate.basicFunction(\"options\", [`return { dispose: ${runtimeTemplate.basicFunction(\"\", [\"for(var i = 0; i < oldTags.length; i++) {\", Template.indent([\"var oldTag = oldTags[i];\", \"if(oldTag.parentNode) oldTag.parentNode.removeChild(oldTag);\"]), \"}\", \"oldTags.length = 0;\"])}, apply: ${runtimeTemplate.basicFunction(\"\", ['for(var i = 0; i < newTags.length; i++) newTags[i].rel = \"stylesheet\";', \"newTags.length = 0;\"])} };`])}`, `${RuntimeGlobals.hmrDownloadUpdateHandlers}.miniCss = ${runtimeTemplate.basicFunction(\"chunkIds, removedChunks, removedModules, promises, applyHandlers, updatedModulesList\", [\"applyHandlers.push(applyHandler);\", `chunkIds.forEach(${runtimeTemplate.basicFunction(\"chunkId\", [`var href = ${RuntimeGlobals.require}.miniCssF(chunkId);`, `var fullhref = ${RuntimeGlobals.publicPath} + href;`, \"var oldTag = findStylesheet(href, fullhref);\", \"if(!oldTag) return;\", `promises.push(new Promise(${runtimeTemplate.basicFunction(\"resolve, reject\", [`var tag = createStylesheet(chunkId, fullhref, ${runtimeTemplate.basicFunction(\"\", ['tag.as = \"style\";', 'tag.rel = \"preload\";', \"resolve();\"])}, reject);`, \"oldTags.push(oldTag);\", \"newTags.push(tag);\"])}));`])});`])}`]) : \"// no hmr\"]);\n        }\n\n      }\n\n      const enabledChunks = new WeakSet();\n      /**\n       * @param {Chunk} chunk\n       * @param {Set<string>} set\n       */\n\n      const handler = (chunk, set) => {\n        if (enabledChunks.has(chunk)) {\n          return;\n        }\n\n        enabledChunks.add(chunk);\n\n        if (typeof this.options.chunkFilename === \"string\" && /\\[(full)?hash(:\\d+)?\\]/.test(this.options.chunkFilename)) {\n          set.add(RuntimeGlobals.getFullHash);\n        }\n\n        set.add(RuntimeGlobals.publicPath);\n        compilation.addRuntimeModule(chunk, new runtime.GetChunkFilenameRuntimeModule(MODULE_TYPE, \"mini-css\", `${RuntimeGlobals.require}.miniCssF`,\n        /**\n         * @param {Chunk} referencedChunk\n         * @returns {TODO}\n         */\n        referencedChunk => {\n          if (!referencedChunk.contentHash[MODULE_TYPE]) {\n            return false;\n          }\n\n          return referencedChunk.canBeInitial() ? this.options.filename : this.options.chunkFilename;\n        }, false));\n        compilation.addRuntimeModule(chunk, new CssLoadingRuntimeModule(set, this.runtimeOptions));\n      };\n\n      compilation.hooks.runtimeRequirementInTree.for(RuntimeGlobals.ensureChunkHandlers).tap(pluginName, handler);\n      compilation.hooks.runtimeRequirementInTree.for(RuntimeGlobals.hmrDownloadUpdateHandlers).tap(pluginName, handler);\n    });\n  }\n  /**\n   * @private\n   * @param {Chunk} chunk\n   * @param {ChunkGraph} chunkGraph\n   * @returns {Iterable<Module>}\n   */\n\n\n  getChunkModules(chunk, chunkGraph) {\n    return typeof chunkGraph !== \"undefined\" ? chunkGraph.getOrderedChunkModulesIterable(chunk, compareModulesByIdentifier) : chunk.modulesIterable;\n  }\n  /**\n   * @private\n   * @param {Compilation} compilation\n   * @param {Chunk} chunk\n   * @param {CssModule[]} modules\n   * @param {Compilation[\"requestShortener\"]} requestShortener\n   * @returns {Set<CssModule>}\n   */\n\n\n  sortModules(compilation, chunk, modules, requestShortener) {\n    let usedModules = this._sortedModulesCache.get(chunk);\n\n    if (usedModules || !modules) {\n      return (\n        /** @type {Set<CssModule>} */\n        usedModules\n      );\n    }\n    /** @type {CssModule[]} */\n\n\n    const modulesList = [...modules]; // Store dependencies for modules\n\n    /** @type {Map<CssModule, Set<CssModule>>} */\n\n    const moduleDependencies = new Map(modulesList.map(m => [m,\n    /** @type {Set<CssModule>} */\n    new Set()]));\n    /** @type {Map<CssModule, Map<CssModule, Set<ChunkGroup>>>} */\n\n    const moduleDependenciesReasons = new Map(modulesList.map(m => [m, new Map()])); // Get ordered list of modules per chunk group\n    // This loop also gathers dependencies from the ordered lists\n    // Lists are in reverse order to allow to use Array.pop()\n\n    /** @type {CssModule[][]} */\n\n    const modulesByChunkGroup = Array.from(chunk.groupsIterable, chunkGroup => {\n      const sortedModules = modulesList.map(module => {\n        return {\n          module,\n          index: chunkGroup.getModulePostOrderIndex(module)\n        };\n      }) // eslint-disable-next-line no-undefined\n      .filter(item => item.index !== undefined).sort((a, b) => b.index - a.index).map(item => item.module);\n\n      for (let i = 0; i < sortedModules.length; i++) {\n        const set = moduleDependencies.get(sortedModules[i]);\n        const reasons =\n        /** @type {Map<CssModule, Set<ChunkGroup>>} */\n        moduleDependenciesReasons.get(sortedModules[i]);\n\n        for (let j = i + 1; j < sortedModules.length; j++) {\n          const module = sortedModules[j];\n          /** @type {Set<CssModule>} */\n\n          set.add(module);\n          const reason = reasons.get(module) ||\n          /** @type {Set<ChunkGroup>} */\n          new Set();\n          reason.add(chunkGroup);\n          reasons.set(module, reason);\n        }\n      }\n\n      return sortedModules;\n    }); // set with already included modules in correct order\n\n    usedModules = new Set();\n    /**\n     * @param {CssModule} m\n     * @returns {boolean}\n     */\n\n    const unusedModulesFilter = m => !\n    /** @type {Set<CssModule>} */\n    usedModules.has(m);\n\n    while (usedModules.size < modulesList.length) {\n      let success = false;\n      let bestMatch;\n      let bestMatchDeps; // get first module where dependencies are fulfilled\n\n      for (const list of modulesByChunkGroup) {\n        // skip and remove already added modules\n        while (list.length > 0 && usedModules.has(list[list.length - 1])) {\n          list.pop();\n        } // skip empty lists\n\n\n        if (list.length !== 0) {\n          const module = list[list.length - 1];\n          const deps = moduleDependencies.get(module); // determine dependencies that are not yet included\n\n          const failedDeps = Array.from(\n          /** @type {Set<CssModule>} */\n          deps).filter(unusedModulesFilter); // store best match for fallback behavior\n\n          if (!bestMatchDeps || bestMatchDeps.length > failedDeps.length) {\n            bestMatch = list;\n            bestMatchDeps = failedDeps;\n          }\n\n          if (failedDeps.length === 0) {\n            // use this module and remove it from list\n            usedModules.add(\n            /** @type {CssModule} */\n            list.pop());\n            success = true;\n            break;\n          }\n        }\n      }\n\n      if (!success) {\n        // no module found => there is a conflict\n        // use list with fewest failed deps\n        // and emit a warning\n        const fallbackModule =\n        /** @type {CssModule[]} */\n        bestMatch.pop();\n\n        if (!this.options.ignoreOrder) {\n          const reasons = moduleDependenciesReasons.get(\n          /** @type {CssModule} */\n          fallbackModule);\n          compilation.warnings.push(\n          /** @type {WebpackError} */\n          new Error([`chunk ${chunk.name || chunk.id} [${pluginName}]`, \"Conflicting order. Following module has been added:\", ` * ${\n          /** @type {CssModule} */\n          fallbackModule.readableIdentifier(requestShortener)}`, \"despite it was not able to fulfill desired ordering with these modules:\", ...\n          /** @type {CssModule[]} */\n          bestMatchDeps.map(m => {\n            const goodReasonsMap = moduleDependenciesReasons.get(m);\n            const goodReasons = goodReasonsMap && goodReasonsMap.get(\n            /** @type {CssModule} */\n            fallbackModule);\n            const failedChunkGroups = Array.from(\n            /** @type {Set<ChunkGroup>} */\n\n            /** @type {Map<CssModule, Set<ChunkGroup>>} */\n            reasons.get(m), cg => cg.name).join(\", \");\n            const goodChunkGroups = goodReasons && Array.from(goodReasons, cg => cg.name).join(\", \");\n            return [` * ${m.readableIdentifier(requestShortener)}`, `   - couldn't fulfill desired order of chunk group(s) ${failedChunkGroups}`, goodChunkGroups && `   - while fulfilling desired order of chunk group(s) ${goodChunkGroups}`].filter(Boolean).join(\"\\n\");\n          })].join(\"\\n\")));\n        }\n\n        usedModules.add(\n        /** @type {CssModule} */\n        fallbackModule);\n      }\n    }\n\n    this._sortedModulesCache.set(chunk, usedModules);\n\n    return usedModules;\n  }\n  /**\n   * @private\n   * @param {Compiler} compiler\n   * @param {Compilation} compilation\n   * @param {Chunk} chunk\n   * @param {CssModule[]} modules\n   * @param {Compiler[\"requestShortener\"]} requestShortener\n   * @param {string} filenameTemplate\n   * @param {Parameters<Exclude<Required<Configuration>['output']['filename'], string | undefined>>[0]} pathData\n   * @returns {Source}\n   */\n\n\n  renderContentAsset(compiler, compilation, chunk, modules, requestShortener, filenameTemplate, pathData) {\n    const usedModules = this.sortModules(compilation, chunk, modules, requestShortener);\n    const {\n      ConcatSource,\n      SourceMapSource,\n      RawSource\n    } = compiler.webpack.sources;\n    const source = new ConcatSource();\n    const externalsSource = new ConcatSource();\n\n    for (const module of usedModules) {\n      let content = module.content.toString();\n      const readableIdentifier = module.readableIdentifier(requestShortener);\n      const startsWithAtRuleImport = /^@import url/.test(content);\n      let header;\n\n      if (compilation.outputOptions.pathinfo) {\n        // From https://github.com/webpack/webpack/blob/29eff8a74ecc2f87517b627dee451c2af9ed3f3f/lib/ModuleInfoHeaderPlugin.js#L191-L194\n        const reqStr = readableIdentifier.replace(/\\*\\//g, \"*_/\");\n        const reqStrStar = \"*\".repeat(reqStr.length);\n        const headerStr = `/*!****${reqStrStar}****!*\\\\\\n  !*** ${reqStr} ***!\\n  \\\\****${reqStrStar}****/\\n`;\n        header = new RawSource(headerStr);\n      }\n\n      if (startsWithAtRuleImport) {\n        if (typeof header !== \"undefined\") {\n          externalsSource.add(header);\n        } // HACK for IE\n        // http://stackoverflow.com/a/14676665/1458162\n\n\n        if (module.media) {\n          // insert media into the @import\n          // this is rar\n          // TODO improve this and parse the CSS to support multiple medias\n          content = content.replace(/;|\\s*$/, module.media);\n        }\n\n        externalsSource.add(content);\n        externalsSource.add(\"\\n\");\n      } else {\n        if (typeof header !== \"undefined\") {\n          source.add(header);\n        }\n\n        if (module.supports) {\n          source.add(`@supports (${module.supports}) {\\n`);\n        }\n\n        if (module.media) {\n          source.add(`@media ${module.media} {\\n`);\n        }\n\n        const needLayer = typeof module.layer !== \"undefined\";\n\n        if (needLayer) {\n          source.add(`@layer${module.layer.length > 0 ? ` ${module.layer}` : \"\"} {\\n`);\n        }\n\n        const {\n          path: filename\n        } = compilation.getPathWithInfo(filenameTemplate, pathData);\n        const undoPath = getUndoPath(filename, compiler.outputPath, false); // replacements\n\n        content = content.replace(new RegExp(ABSOLUTE_PUBLIC_PATH, \"g\"), \"\");\n        content = content.replace(new RegExp(SINGLE_DOT_PATH_SEGMENT, \"g\"), \".\");\n        content = content.replace(new RegExp(AUTO_PUBLIC_PATH, \"g\"), undoPath);\n        const entryOptions = chunk.getEntryOptions();\n        const baseUriReplacement = entryOptions && entryOptions.baseUri || undoPath;\n        content = content.replace(new RegExp(BASE_URI, \"g\"), baseUriReplacement);\n\n        if (module.sourceMap) {\n          source.add(new SourceMapSource(content, readableIdentifier, module.sourceMap.toString()));\n        } else {\n          source.add(new RawSource(content));\n        }\n\n        source.add(\"\\n\");\n\n        if (needLayer) {\n          source.add(\"}\\n\");\n        }\n\n        if (module.media) {\n          source.add(\"}\\n\");\n        }\n\n        if (module.supports) {\n          source.add(\"}\\n\");\n        }\n      }\n    }\n\n    return new ConcatSource(externalsSource, source);\n  }\n\n}\n\nMiniCssExtractPlugin.pluginName = pluginName;\nMiniCssExtractPlugin.pluginSymbol = pluginSymbol;\nMiniCssExtractPlugin.loader = require.resolve(\"./loader\");\nmodule.exports = MiniCssExtractPlugin;","map":{"version":3,"names":["path","require","validate","schema","trueFn","MODULE_TYPE","AUTO_PUBLIC_PATH","ABSOLUTE_PUBLIC_PATH","SINGLE_DOT_PATH_SEGMENT","compareModulesByIdentifier","getUndoPath","BASE_URI","pluginName","pluginSymbol","Symbol","DEFAULT_FILENAME","TYPES","Set","CODE_GENERATION_RESULT","sources","Map","runtimeRequirements","cssModuleCache","WeakMap","cssDependencyCache","registered","WeakSet","MiniCssExtractPlugin","getCssModule","webpack","has","get","CssModule","Module","constructor","context","identifier","identifierIndex","content","layer","supports","media","sourceMap","assets","assetsInfo","id","_context","_identifier","_identifierIndex","_needBuild","size","length","readableIdentifier","requestShortener","shorten","getSourceTypes","codeGeneration","nameForCondition","resource","split","pop","idx","indexOf","substring","updateCacheModule","module","needRebuild","needBuild","callback","undefined","build","options","compilation","resolver","fileSystem","buildInfo","cacheable","hash","_computeHash","outputOptions","hashFunction","buildMeta","util","createHash","update","digest","updateHash","serialize","write","deserialize","read","set","serialization","register","resolve","__dirname","instance","contextModule","dep","getCssDependency","CssDependency","Dependency","getResourceIdentifier","getModuleEvaluationSideEffectsState","ModuleGraphConnection","TRANSITIVE_ONLY","baseDataPath","_sortedModulesCache","Object","assign","filename","ignoreOrder","experimentalUseImportModule","runtime","runtimeOptions","insert","linkType","attributes","chunkFilename","hasName","includes","hasId","hasChunkHash","hasContentHash","replace","apply","compiler","experiments","executeModule","add","registerLoader","splitChunks","optimization","defaultSizeTypes","push","NormalModule","hooks","tap","loader","normalModuleHook","getCompilationHooks","loaderContext","thisCompilation","CssModuleFactory","create","dependencies","dependency","dependencyFactories","CssDependencyTemplate","dependencyTemplates","renderManifest","result","chunk","chunkGraph","HotUpdateChunk","renderedModules","Array","from","getChunkModules","filter","type","filenameTemplate","canBeInitial","render","renderContentAsset","runtimeTemplate","contentHashType","pathOptions","contentHash","modules","sortModules","getChunkModulesIterableBySourceType","hashDigest","hashDigestLength","m","getModuleHash","Template","RuntimeGlobals","RuntimeModule","getCssChunkObject","mainChunk","obj","getAllAsyncChunks","getOrderedChunkModulesIterable","CssLoadingRuntimeModule","generate","crossOriginLoading","chunkMap","withLoading","ensureChunkHandlers","keys","withHmr","hmrDownloadUpdateHandlers","asString","basicFunction","entries","map","entry","key","value","JSON","stringify","indent","toString","publicPath","ids","join","enabledChunks","handler","test","getFullHash","addRuntimeModule","GetChunkFilenameRuntimeModule","referencedChunk","runtimeRequirementInTree","for","modulesIterable","usedModules","modulesList","moduleDependencies","moduleDependenciesReasons","modulesByChunkGroup","groupsIterable","chunkGroup","sortedModules","index","getModulePostOrderIndex","item","sort","a","b","i","reasons","j","reason","unusedModulesFilter","success","bestMatch","bestMatchDeps","list","deps","failedDeps","fallbackModule","warnings","Error","name","goodReasonsMap","goodReasons","failedChunkGroups","cg","goodChunkGroups","Boolean","pathData","ConcatSource","SourceMapSource","RawSource","source","externalsSource","startsWithAtRuleImport","header","pathinfo","reqStr","reqStrStar","repeat","headerStr","needLayer","getPathWithInfo","undoPath","outputPath","RegExp","entryOptions","getEntryOptions","baseUriReplacement","baseUri","exports"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/mini-css-extract-plugin/dist/index.js"],"sourcesContent":["\"use strict\";\n\n/* eslint-disable class-methods-use-this */\nconst path = require(\"path\");\n\nconst {\n  validate\n} = require(\"schema-utils\");\n\nconst schema = require(\"./plugin-options.json\");\n\nconst {\n  trueFn,\n  MODULE_TYPE,\n  AUTO_PUBLIC_PATH,\n  ABSOLUTE_PUBLIC_PATH,\n  SINGLE_DOT_PATH_SEGMENT,\n  compareModulesByIdentifier,\n  getUndoPath,\n  BASE_URI\n} = require(\"./utils\");\n/** @typedef {import(\"schema-utils/declarations/validate\").Schema} Schema */\n\n/** @typedef {import(\"webpack\").Compiler} Compiler */\n\n/** @typedef {import(\"webpack\").Compilation} Compilation */\n\n/** @typedef {import(\"webpack\").ChunkGraph} ChunkGraph */\n\n/** @typedef {import(\"webpack\").Chunk} Chunk */\n\n/** @typedef {Parameters<import(\"webpack\").Chunk[\"isInGroup\"]>[0]} ChunkGroup */\n\n/** @typedef {import(\"webpack\").Module} Module */\n\n/** @typedef {import(\"webpack\").Dependency} Dependency */\n\n/** @typedef {import(\"webpack\").sources.Source} Source */\n\n/** @typedef {import(\"webpack\").Configuration} Configuration */\n\n/** @typedef {import(\"webpack\").WebpackError} WebpackError */\n\n/** @typedef {import(\"webpack\").AssetInfo} AssetInfo */\n\n/** @typedef {import(\"./loader.js\").Dependency} LoaderDependency */\n\n/**\n * @typedef {Object} LoaderOptions\n * @property {string | ((resourcePath: string, rootContext: string) => string)} [publicPath]\n * @property {boolean} [emit]\n * @property {boolean} [esModule]\n * @property {string} [layer]\n */\n\n/**\n * @typedef {Object} PluginOptions\n * @property {Required<Configuration>['output']['filename']} [filename]\n * @property {Required<Configuration>['output']['chunkFilename']} [chunkFilename]\n * @property {boolean} [ignoreOrder]\n * @property {string | ((linkTag: HTMLLinkElement) => void)} [insert]\n * @property {Record<string, string>} [attributes]\n * @property {string | false | 'text/css'} [linkType]\n * @property {boolean} [runtime]\n * @property {boolean} [experimentalUseImportModule]\n */\n\n/**\n * @typedef {Object} NormalizedPluginOptions\n * @property {Required<Configuration>['output']['filename']} filename\n * @property {Required<Configuration>['output']['chunkFilename']} [chunkFilename]\n * @property {boolean} ignoreOrder\n * @property {string | ((linkTag: HTMLLinkElement) => void)} [insert]\n * @property {Record<string, string>} [attributes]\n * @property {string | false | 'text/css'} [linkType]\n * @property {boolean} runtime\n * @property {boolean} [experimentalUseImportModule]\n */\n\n/**\n * @typedef {Object} RuntimeOptions\n * @property {string | ((linkTag: HTMLLinkElement) => void) | undefined} insert\n * @property {string | false | 'text/css'} linkType\n * @property {Record<string, string> | undefined} attributes\n */\n\n/** @typedef {any} TODO */\n\n\nconst pluginName = \"mini-css-extract-plugin\";\nconst pluginSymbol = Symbol(pluginName);\nconst DEFAULT_FILENAME = \"[name].css\";\n/**\n * @type {Set<string>}\n */\n\nconst TYPES = new Set([MODULE_TYPE]);\n/**\n * @type {ReturnType<Module[\"codeGeneration\"]>}\n */\n\nconst CODE_GENERATION_RESULT = {\n  sources: new Map(),\n  runtimeRequirements: new Set()\n};\n/** @typedef {Module & { content: Buffer, media?: string, sourceMap?: Buffer, supports?: string, layer?: string, assets?: { [key: string]: TODO }, assetsInfo?: Map<string, AssetInfo> }} CssModule */\n\n/** @typedef {{ context: string | null, identifier: string, identifierIndex: number, content: Buffer, sourceMap?: Buffer, media?: string, supports?: string, layer?: TODO, assetsInfo?: Map<string, AssetInfo>, assets?: { [key: string]: TODO }}} CssModuleDependency */\n\n/** @typedef {{ new(dependency: CssModuleDependency): CssModule }} CssModuleConstructor */\n\n/** @typedef {Dependency & CssModuleDependency} CssDependency */\n\n/** @typedef {Omit<LoaderDependency, \"context\">} CssDependencyOptions */\n\n/** @typedef {{ new(loaderDependency: CssDependencyOptions, context: string | null, identifierIndex: number): CssDependency }} CssDependencyConstructor */\n\n/**\n *\n * @type {WeakMap<Compiler[\"webpack\"], CssModuleConstructor>}\n */\n\nconst cssModuleCache = new WeakMap();\n/**\n * @type {WeakMap<Compiler[\"webpack\"], CssDependencyConstructor>}\n */\n\nconst cssDependencyCache = new WeakMap();\n/**\n * @type {WeakSet<Compiler[\"webpack\"]>}\n */\n\nconst registered = new WeakSet();\n\nclass MiniCssExtractPlugin {\n  /**\n   * @param {Compiler[\"webpack\"]} webpack\n   * @returns {CssModuleConstructor}\n   */\n  static getCssModule(webpack) {\n    /**\n     * Prevent creation of multiple CssModule classes to allow other integrations to get the current CssModule.\n     */\n    if (cssModuleCache.has(webpack)) {\n      return (\n        /** @type {CssModuleConstructor} */\n        cssModuleCache.get(webpack)\n      );\n    }\n\n    class CssModule extends webpack.Module {\n      /**\n       * @param {CssModuleDependency} dependency\n       */\n      constructor({\n        context,\n        identifier,\n        identifierIndex,\n        content,\n        layer,\n        supports,\n        media,\n        sourceMap,\n        assets,\n        assetsInfo\n      }) {\n        super(MODULE_TYPE,\n        /** @type {string | undefined} */\n        context);\n        this.id = \"\";\n        this._context = context;\n        this._identifier = identifier;\n        this._identifierIndex = identifierIndex;\n        this.content = content;\n        this.layer = layer;\n        this.supports = supports;\n        this.media = media;\n        this.sourceMap = sourceMap;\n        this.assets = assets;\n        this.assetsInfo = assetsInfo;\n        this._needBuild = true;\n      } // no source() so webpack 4 doesn't do add stuff to the bundle\n\n\n      size() {\n        return this.content.length;\n      }\n\n      identifier() {\n        return `css|${this._identifier}|${this._identifierIndex}`;\n      }\n      /**\n       * @param {Parameters<Module[\"readableIdentifier\"]>[0]} requestShortener\n       * @returns {ReturnType<Module[\"readableIdentifier\"]>}\n       */\n\n\n      readableIdentifier(requestShortener) {\n        return `css ${requestShortener.shorten(this._identifier)}${this._identifierIndex ? ` (${this._identifierIndex})` : \"\"}`;\n      } // eslint-disable-next-line class-methods-use-this\n\n\n      getSourceTypes() {\n        return TYPES;\n      } // eslint-disable-next-line class-methods-use-this\n\n\n      codeGeneration() {\n        return CODE_GENERATION_RESULT;\n      }\n\n      nameForCondition() {\n        const resource =\n        /** @type {string} */\n        this._identifier.split(\"!\").pop();\n\n        const idx = resource.indexOf(\"?\");\n\n        if (idx >= 0) {\n          return resource.substring(0, idx);\n        }\n\n        return resource;\n      }\n      /**\n       * @param {Module} module\n       */\n\n\n      updateCacheModule(module) {\n        if (this.content !==\n        /** @type {CssModule} */\n        module.content || this.layer !==\n        /** @type {CssModule} */\n        module.layer || this.supports !==\n        /** @type {CssModule} */\n        module.supports || this.media !==\n        /** @type {CssModule} */\n        module.media || this.sourceMap !==\n        /** @type {CssModule} */\n        module.sourceMap || this.assets !==\n        /** @type {CssModule} */\n        module.assets || this.assetsInfo !==\n        /** @type {CssModule} */\n        module.assetsInfo) {\n          this._needBuild = true;\n          this.content =\n          /** @type {CssModule} */\n          module.content;\n          this.layer =\n          /** @type {CssModule} */\n          module.layer;\n          this.supports =\n          /** @type {CssModule} */\n          module.supports;\n          this.media =\n          /** @type {CssModule} */\n          module.media;\n          this.sourceMap =\n          /** @type {CssModule} */\n          module.sourceMap;\n          this.assets =\n          /** @type {CssModule} */\n          module.assets;\n          this.assetsInfo =\n          /** @type {CssModule} */\n          module.assetsInfo;\n        }\n      } // eslint-disable-next-line class-methods-use-this\n\n\n      needRebuild() {\n        return this._needBuild;\n      } // eslint-disable-next-line class-methods-use-this\n\n      /**\n       * @param {Parameters<Module[\"needBuild\"]>[0]} context context info\n       * @param {Parameters<Module[\"needBuild\"]>[1]} callback callback function, returns true, if the module needs a rebuild\n       */\n\n\n      needBuild(context, callback) {\n        // eslint-disable-next-line no-undefined\n        callback(undefined, this._needBuild);\n      }\n      /**\n       * @param {Parameters<Module[\"build\"]>[0]} options\n       * @param {Parameters<Module[\"build\"]>[1]} compilation\n       * @param {Parameters<Module[\"build\"]>[2]} resolver\n       * @param {Parameters<Module[\"build\"]>[3]} fileSystem\n       * @param {Parameters<Module[\"build\"]>[4]} callback\n       */\n\n\n      build(options, compilation, resolver, fileSystem, callback) {\n        this.buildInfo = {\n          assets: this.assets,\n          assetsInfo: this.assetsInfo,\n          cacheable: true,\n          hash: this._computeHash(\n          /** @type {string} */\n          compilation.outputOptions.hashFunction)\n        };\n        this.buildMeta = {};\n        this._needBuild = false;\n        callback();\n      }\n      /**\n       * @private\n       * @param {string} hashFunction\n       * @returns {string | Buffer}\n       */\n\n\n      _computeHash(hashFunction) {\n        const hash = webpack.util.createHash(hashFunction);\n        hash.update(this.content);\n\n        if (this.layer) {\n          hash.update(this.layer);\n        }\n\n        hash.update(this.supports || \"\");\n        hash.update(this.media || \"\");\n        hash.update(this.sourceMap || \"\");\n        return hash.digest(\"hex\");\n      }\n      /**\n       * @param {Parameters<Module[\"updateHash\"]>[0]} hash\n       * @param {Parameters<Module[\"updateHash\"]>[1]} context\n       */\n\n\n      updateHash(hash, context) {\n        super.updateHash(hash, context);\n        hash.update(this.buildInfo.hash);\n      }\n      /**\n       * @param {Parameters<Module[\"serialize\"]>[0]} context\n       */\n\n\n      serialize(context) {\n        const {\n          write\n        } = context;\n        write(this._context);\n        write(this._identifier);\n        write(this._identifierIndex);\n        write(this.content);\n        write(this.layer);\n        write(this.supports);\n        write(this.media);\n        write(this.sourceMap);\n        write(this.assets);\n        write(this.assetsInfo);\n        write(this._needBuild);\n        super.serialize(context);\n      }\n      /**\n       * @param {Parameters<Module[\"deserialize\"]>[0]} context\n       */\n\n\n      deserialize(context) {\n        this._needBuild = context.read();\n        super.deserialize(context);\n      }\n\n    }\n\n    cssModuleCache.set(webpack, CssModule);\n    webpack.util.serialization.register(CssModule, path.resolve(__dirname, \"CssModule\"), // @ts-ignore\n    null, {\n      serialize(instance, context) {\n        instance.serialize(context);\n      },\n\n      deserialize(context) {\n        const {\n          read\n        } = context;\n        const contextModule = read();\n        const identifier = read();\n        const identifierIndex = read();\n        const content = read();\n        const layer = read();\n        const supports = read();\n        const media = read();\n        const sourceMap = read();\n        const assets = read();\n        const assetsInfo = read();\n        const dep = new CssModule({\n          context: contextModule,\n          identifier,\n          identifierIndex,\n          content,\n          layer,\n          supports,\n          media,\n          sourceMap,\n          assets,\n          assetsInfo\n        });\n        dep.deserialize(context);\n        return dep;\n      }\n\n    });\n    return CssModule;\n  }\n  /**\n   * @param {Compiler[\"webpack\"]} webpack\n   * @returns {CssDependencyConstructor}\n   */\n\n\n  static getCssDependency(webpack) {\n    /**\n     * Prevent creation of multiple CssDependency classes to allow other integrations to get the current CssDependency.\n     */\n    if (cssDependencyCache.has(webpack)) {\n      return (\n        /** @type {CssDependencyConstructor} */\n        cssDependencyCache.get(webpack)\n      );\n    }\n\n    class CssDependency extends webpack.Dependency {\n      /**\n       * @param {CssDependencyOptions} loaderDependency\n       * @param {string | null} context\n       * @param {number} identifierIndex\n       */\n      constructor({\n        identifier,\n        content,\n        layer,\n        supports,\n        media,\n        sourceMap\n      }, context, identifierIndex) {\n        super();\n        this.identifier = identifier;\n        this.identifierIndex = identifierIndex;\n        this.content = content;\n        this.layer = layer;\n        this.supports = supports;\n        this.media = media;\n        this.sourceMap = sourceMap;\n        this.context = context;\n        /** @type {{ [key: string]: Source } | undefined}} */\n        // eslint-disable-next-line no-undefined\n\n        this.assets = undefined;\n        /** @type {Map<string, AssetInfo> | undefined} */\n        // eslint-disable-next-line no-undefined\n\n        this.assetsInfo = undefined;\n      }\n      /**\n       * @returns {ReturnType<Dependency[\"getResourceIdentifier\"]>}\n       */\n\n\n      getResourceIdentifier() {\n        return `css-module-${this.identifier}-${this.identifierIndex}`;\n      }\n      /**\n       * @returns {ReturnType<Dependency[\"getModuleEvaluationSideEffectsState\"]>}\n       */\n      // eslint-disable-next-line class-methods-use-this\n\n\n      getModuleEvaluationSideEffectsState() {\n        return webpack.ModuleGraphConnection.TRANSITIVE_ONLY;\n      }\n      /**\n       * @param {Parameters<Dependency[\"serialize\"]>[0]} context\n       */\n\n\n      serialize(context) {\n        const {\n          write\n        } = context;\n        write(this.identifier);\n        write(this.content);\n        write(this.layer);\n        write(this.supports);\n        write(this.media);\n        write(this.sourceMap);\n        write(this.context);\n        write(this.identifierIndex);\n        write(this.assets);\n        write(this.assetsInfo);\n        super.serialize(context);\n      }\n      /**\n       * @param {Parameters<Dependency[\"deserialize\"]>[0]} context\n       */\n\n\n      deserialize(context) {\n        super.deserialize(context);\n      }\n\n    }\n\n    cssDependencyCache.set(webpack, CssDependency);\n    webpack.util.serialization.register(CssDependency, path.resolve(__dirname, \"CssDependency\"), // @ts-ignore\n    null, {\n      serialize(instance, context) {\n        instance.serialize(context);\n      },\n\n      deserialize(context) {\n        const {\n          read\n        } = context;\n        const dep = new CssDependency({\n          identifier: read(),\n          content: read(),\n          layer: read(),\n          supports: read(),\n          media: read(),\n          sourceMap: read()\n        }, read(), read());\n        const assets = read();\n        const assetsInfo = read();\n        dep.assets = assets;\n        dep.assetsInfo = assetsInfo;\n        dep.deserialize(context);\n        return dep;\n      }\n\n    });\n    return CssDependency;\n  }\n  /**\n   * @param {PluginOptions} [options]\n   */\n\n\n  constructor(options = {}) {\n    validate(\n    /** @type {Schema} */\n    schema, options, {\n      baseDataPath: \"options\"\n    });\n    /**\n     * @private\n     * @type {WeakMap<Chunk, Set<CssModule>>}\n     * @private\n     */\n\n    this._sortedModulesCache = new WeakMap();\n    /**\n     * @private\n     * @type {NormalizedPluginOptions}\n     */\n\n    this.options = Object.assign({\n      filename: DEFAULT_FILENAME,\n      ignoreOrder: false,\n      // TODO remove in the next major release\n      // eslint-disable-next-line no-undefined\n      experimentalUseImportModule: undefined,\n      runtime: true\n    }, options);\n    /**\n     * @private\n     * @type {RuntimeOptions}\n     */\n\n    this.runtimeOptions = {\n      insert: options.insert,\n      linkType: // Todo in next major release set default to \"false\"\n      typeof options.linkType === \"boolean\" &&\n      /** @type {boolean} */\n      options.linkType === true || typeof options.linkType === \"undefined\" ? \"text/css\" : options.linkType,\n      attributes: options.attributes\n    };\n\n    if (!this.options.chunkFilename) {\n      const {\n        filename\n      } = this.options;\n\n      if (typeof filename !== \"function\") {\n        const hasName =\n        /** @type {string} */\n        filename.includes(\"[name]\");\n        const hasId =\n        /** @type {string} */\n        filename.includes(\"[id]\");\n        const hasChunkHash =\n        /** @type {string} */\n        filename.includes(\"[chunkhash]\");\n        const hasContentHash =\n        /** @type {string} */\n        filename.includes(\"[contenthash]\"); // Anything changing depending on chunk is fine\n\n        if (hasChunkHash || hasContentHash || hasName || hasId) {\n          this.options.chunkFilename = filename;\n        } else {\n          // Otherwise prefix \"[id].\" in front of the basename to make it changing\n          this.options.chunkFilename =\n          /** @type {string} */\n          filename.replace(/(^|\\/)([^/]*(?:\\?|$))/, \"$1[id].$2\");\n        }\n      } else {\n        this.options.chunkFilename = \"[id].css\";\n      }\n    }\n  }\n  /**\n   * @param {Compiler} compiler\n   */\n\n\n  apply(compiler) {\n    const {\n      webpack\n    } = compiler;\n\n    if (this.options.experimentalUseImportModule) {\n      if (typeof\n      /** @type {Compiler[\"options\"][\"experiments\"] & { executeModule?: boolean }} */\n      compiler.options.experiments.executeModule === \"undefined\") {\n        /** @type {Compiler[\"options\"][\"experiments\"] & { executeModule?: boolean }} */\n        // eslint-disable-next-line no-param-reassign\n        compiler.options.experiments.executeModule = true;\n      }\n    } // TODO bug in webpack, remove it after it will be fixed\n    // webpack tries to `require` loader firstly when serializer doesn't found\n\n\n    if (!registered.has(webpack)) {\n      registered.add(webpack);\n      webpack.util.serialization.registerLoader(/^mini-css-extract-plugin\\//, trueFn);\n    }\n\n    const {\n      splitChunks\n    } = compiler.options.optimization;\n\n    if (splitChunks) {\n      if (\n      /** @type {string[]} */\n      splitChunks.defaultSizeTypes.includes(\"...\")) {\n        /** @type {string[]} */\n        splitChunks.defaultSizeTypes.push(MODULE_TYPE);\n      }\n    }\n\n    const CssModule = MiniCssExtractPlugin.getCssModule(webpack);\n    const CssDependency = MiniCssExtractPlugin.getCssDependency(webpack);\n    const {\n      NormalModule\n    } = compiler.webpack;\n    compiler.hooks.compilation.tap(pluginName, compilation => {\n      const {\n        loader: normalModuleHook\n      } = NormalModule.getCompilationHooks(compilation);\n      normalModuleHook.tap(pluginName,\n      /**\n       * @param {object} loaderContext\n       */\n      loaderContext => {\n        /** @type {object & { [pluginSymbol]: { experimentalUseImportModule: boolean | undefined } }} */\n        // eslint-disable-next-line no-param-reassign\n        loaderContext[pluginSymbol] = {\n          experimentalUseImportModule: this.options.experimentalUseImportModule\n        };\n      });\n    });\n    compiler.hooks.thisCompilation.tap(pluginName, compilation => {\n      class CssModuleFactory {\n        /**\n         * @param {{ dependencies: Dependency[] }} dependencies\n         * @param {(arg0?: Error, arg1?: TODO) => void} callback\n         */\n        // eslint-disable-next-line class-methods-use-this\n        create({\n          dependencies: [dependency]\n        }, callback) {\n          // eslint-disable-next-line no-undefined\n          callback(undefined, new CssModule(\n          /** @type {CssDependency} */\n          dependency));\n        }\n\n      }\n\n      compilation.dependencyFactories.set(CssDependency, new CssModuleFactory());\n\n      class CssDependencyTemplate {\n        // eslint-disable-next-line class-methods-use-this\n        apply() {}\n\n      }\n\n      compilation.dependencyTemplates.set(CssDependency, new CssDependencyTemplate());\n      compilation.hooks.renderManifest.tap(pluginName,\n      /**\n       * @param {ReturnType<Compilation[\"getRenderManifest\"]>} result\n       * @param {Parameters<Compilation[\"getRenderManifest\"]>[0]} chunk\n       * @returns {TODO}\n       */\n      (result, {\n        chunk\n      }) => {\n        const {\n          chunkGraph\n        } = compilation;\n        const {\n          HotUpdateChunk\n        } = webpack; // We don't need hot update chunks for css\n        // We will use the real asset instead to update\n\n        if (chunk instanceof HotUpdateChunk) {\n          return;\n        }\n        /** @type {CssModule[]} */\n\n\n        const renderedModules = Array.from(\n        /** @type {CssModule[]} */\n        this.getChunkModules(chunk, chunkGraph)).filter(module => module.type === MODULE_TYPE);\n        const filenameTemplate =\n        /** @type {string} */\n        chunk.canBeInitial() ? this.options.filename : this.options.chunkFilename;\n\n        if (renderedModules.length > 0) {\n          result.push({\n            render: () => this.renderContentAsset(compiler, compilation, chunk, renderedModules, compilation.runtimeTemplate.requestShortener, filenameTemplate, {\n              contentHashType: MODULE_TYPE,\n              chunk\n            }),\n            filenameTemplate,\n            pathOptions: {\n              chunk,\n              contentHashType: MODULE_TYPE\n            },\n            identifier: `${pluginName}.${chunk.id}`,\n            hash: chunk.contentHash[MODULE_TYPE]\n          });\n        }\n      });\n      compilation.hooks.contentHash.tap(pluginName, chunk => {\n        const {\n          outputOptions,\n          chunkGraph\n        } = compilation;\n        const modules = this.sortModules(compilation, chunk,\n        /** @type {CssModule[]} */\n        chunkGraph.getChunkModulesIterableBySourceType(chunk, MODULE_TYPE), compilation.runtimeTemplate.requestShortener);\n\n        if (modules) {\n          const {\n            hashFunction,\n            hashDigest,\n            hashDigestLength\n          } = outputOptions;\n          const {\n            createHash\n          } = compiler.webpack.util;\n          const hash = createHash(\n          /** @type {string} */\n          hashFunction);\n\n          for (const m of modules) {\n            hash.update(chunkGraph.getModuleHash(m, chunk.runtime));\n          } // eslint-disable-next-line no-param-reassign\n\n\n          chunk.contentHash[MODULE_TYPE] =\n          /** @type {string} */\n          hash.digest(hashDigest).substring(0, hashDigestLength);\n        }\n      }); // All the code below is dedicated to the runtime and can be skipped when the `runtime` option is `false`\n\n      if (!this.options.runtime) {\n        return;\n      }\n\n      const {\n        Template,\n        RuntimeGlobals,\n        RuntimeModule,\n        runtime\n      } = webpack;\n      /**\n       * @param {Chunk} mainChunk\n       * @param {Compilation} compilation\n       * @returns {Record<string, number>}\n       */\n      // eslint-disable-next-line no-shadow\n\n      const getCssChunkObject = (mainChunk, compilation) => {\n        /** @type {Record<string, number>} */\n        const obj = {};\n        const {\n          chunkGraph\n        } = compilation;\n\n        for (const chunk of mainChunk.getAllAsyncChunks()) {\n          const modules = chunkGraph.getOrderedChunkModulesIterable(chunk, compareModulesByIdentifier);\n\n          for (const module of modules) {\n            if (module.type === MODULE_TYPE) {\n              obj[\n              /** @type {string} */\n              chunk.id] = 1;\n              break;\n            }\n          }\n        }\n\n        return obj;\n      };\n\n      class CssLoadingRuntimeModule extends RuntimeModule {\n        /**\n         * @param {Set<string>} runtimeRequirements\n         * @param {RuntimeOptions} runtimeOptions\n         */\n        constructor(runtimeRequirements, runtimeOptions) {\n          super(\"css loading\", 10);\n          this.runtimeRequirements = runtimeRequirements;\n          this.runtimeOptions = runtimeOptions;\n        }\n\n        generate() {\n          const {\n            chunk,\n            runtimeRequirements\n          } = this;\n          const {\n            runtimeTemplate,\n            outputOptions: {\n              crossOriginLoading\n            }\n          } = this.compilation;\n          const chunkMap = getCssChunkObject(chunk, this.compilation);\n          const withLoading = runtimeRequirements.has(RuntimeGlobals.ensureChunkHandlers) && Object.keys(chunkMap).length > 0;\n          const withHmr = runtimeRequirements.has(RuntimeGlobals.hmrDownloadUpdateHandlers);\n\n          if (!withLoading && !withHmr) {\n            return \"\";\n          }\n\n          return Template.asString([`var createStylesheet = ${runtimeTemplate.basicFunction(\"chunkId, fullhref, resolve, reject\", ['var linkTag = document.createElement(\"link\");', this.runtimeOptions.attributes ? Template.asString(Object.entries(this.runtimeOptions.attributes).map(entry => {\n            const [key, value] = entry;\n            return `linkTag.setAttribute(${JSON.stringify(key)}, ${JSON.stringify(value)});`;\n          })) : \"\", 'linkTag.rel = \"stylesheet\";', this.runtimeOptions.linkType ? `linkTag.type = ${JSON.stringify(this.runtimeOptions.linkType)};` : \"\", `var onLinkComplete = ${runtimeTemplate.basicFunction(\"event\", [\"// avoid mem leaks.\", \"linkTag.onerror = linkTag.onload = null;\", \"if (event.type === 'load') {\", Template.indent([\"resolve();\"]), \"} else {\", Template.indent([\"var errorType = event && (event.type === 'load' ? 'missing' : event.type);\", \"var realHref = event && event.target && event.target.href || fullhref;\", 'var err = new Error(\"Loading CSS chunk \" + chunkId + \" failed.\\\\n(\" + realHref + \")\");', 'err.code = \"CSS_CHUNK_LOAD_FAILED\";', \"err.type = errorType;\", \"err.request = realHref;\", \"linkTag.parentNode.removeChild(linkTag)\", \"reject(err);\"]), \"}\"])}`, \"linkTag.onerror = linkTag.onload = onLinkComplete;\", \"linkTag.href = fullhref;\", crossOriginLoading ? Template.asString([`if (linkTag.href.indexOf(window.location.origin + '/') !== 0) {`, Template.indent(`linkTag.crossOrigin = ${JSON.stringify(crossOriginLoading)};`), \"}\"]) : \"\", typeof this.runtimeOptions.insert !== \"undefined\" ? typeof this.runtimeOptions.insert === \"function\" ? `(${this.runtimeOptions.insert.toString()})(linkTag)` : Template.asString([`var target = document.querySelector(\"${this.runtimeOptions.insert}\");`, `target.parentNode.insertBefore(linkTag, target.nextSibling);`]) : Template.asString([\"document.head.appendChild(linkTag);\"]), \"return linkTag;\"])};`, `var findStylesheet = ${runtimeTemplate.basicFunction(\"href, fullhref\", ['var existingLinkTags = document.getElementsByTagName(\"link\");', \"for(var i = 0; i < existingLinkTags.length; i++) {\", Template.indent([\"var tag = existingLinkTags[i];\", 'var dataHref = tag.getAttribute(\"data-href\") || tag.getAttribute(\"href\");', 'if(tag.rel === \"stylesheet\" && (dataHref === href || dataHref === fullhref)) return tag;']), \"}\", 'var existingStyleTags = document.getElementsByTagName(\"style\");', \"for(var i = 0; i < existingStyleTags.length; i++) {\", Template.indent([\"var tag = existingStyleTags[i];\", 'var dataHref = tag.getAttribute(\"data-href\");', \"if(dataHref === href || dataHref === fullhref) return tag;\"]), \"}\"])};`, `var loadStylesheet = ${runtimeTemplate.basicFunction(\"chunkId\", `return new Promise(${runtimeTemplate.basicFunction(\"resolve, reject\", [`var href = ${RuntimeGlobals.require}.miniCssF(chunkId);`, `var fullhref = ${RuntimeGlobals.publicPath} + href;`, \"if(findStylesheet(href, fullhref)) return resolve();\", \"createStylesheet(chunkId, fullhref, resolve, reject);\"])});`)}`, withLoading ? Template.asString([\"// object to store loaded CSS chunks\", \"var installedCssChunks = {\", Template.indent(\n          /** @type {string[]} */\n          chunk.ids.map(id => `${JSON.stringify(id)}: 0`).join(\",\\n\")), \"};\", \"\", `${RuntimeGlobals.ensureChunkHandlers}.miniCss = ${runtimeTemplate.basicFunction(\"chunkId, promises\", [`var cssChunks = ${JSON.stringify(chunkMap)};`, \"if(installedCssChunks[chunkId]) promises.push(installedCssChunks[chunkId]);\", \"else if(installedCssChunks[chunkId] !== 0 && cssChunks[chunkId]) {\", Template.indent([`promises.push(installedCssChunks[chunkId] = loadStylesheet(chunkId).then(${runtimeTemplate.basicFunction(\"\", \"installedCssChunks[chunkId] = 0;\")}, ${runtimeTemplate.basicFunction(\"e\", [\"delete installedCssChunks[chunkId];\", \"throw e;\"])}));`]), \"}\"])};`]) : \"// no chunk loading\", \"\", withHmr ? Template.asString([\"var oldTags = [];\", \"var newTags = [];\", `var applyHandler = ${runtimeTemplate.basicFunction(\"options\", [`return { dispose: ${runtimeTemplate.basicFunction(\"\", [\"for(var i = 0; i < oldTags.length; i++) {\", Template.indent([\"var oldTag = oldTags[i];\", \"if(oldTag.parentNode) oldTag.parentNode.removeChild(oldTag);\"]), \"}\", \"oldTags.length = 0;\"])}, apply: ${runtimeTemplate.basicFunction(\"\", ['for(var i = 0; i < newTags.length; i++) newTags[i].rel = \"stylesheet\";', \"newTags.length = 0;\"])} };`])}`, `${RuntimeGlobals.hmrDownloadUpdateHandlers}.miniCss = ${runtimeTemplate.basicFunction(\"chunkIds, removedChunks, removedModules, promises, applyHandlers, updatedModulesList\", [\"applyHandlers.push(applyHandler);\", `chunkIds.forEach(${runtimeTemplate.basicFunction(\"chunkId\", [`var href = ${RuntimeGlobals.require}.miniCssF(chunkId);`, `var fullhref = ${RuntimeGlobals.publicPath} + href;`, \"var oldTag = findStylesheet(href, fullhref);\", \"if(!oldTag) return;\", `promises.push(new Promise(${runtimeTemplate.basicFunction(\"resolve, reject\", [`var tag = createStylesheet(chunkId, fullhref, ${runtimeTemplate.basicFunction(\"\", ['tag.as = \"style\";', 'tag.rel = \"preload\";', \"resolve();\"])}, reject);`, \"oldTags.push(oldTag);\", \"newTags.push(tag);\"])}));`])});`])}`]) : \"// no hmr\"]);\n        }\n\n      }\n\n      const enabledChunks = new WeakSet();\n      /**\n       * @param {Chunk} chunk\n       * @param {Set<string>} set\n       */\n\n      const handler = (chunk, set) => {\n        if (enabledChunks.has(chunk)) {\n          return;\n        }\n\n        enabledChunks.add(chunk);\n\n        if (typeof this.options.chunkFilename === \"string\" && /\\[(full)?hash(:\\d+)?\\]/.test(this.options.chunkFilename)) {\n          set.add(RuntimeGlobals.getFullHash);\n        }\n\n        set.add(RuntimeGlobals.publicPath);\n        compilation.addRuntimeModule(chunk, new runtime.GetChunkFilenameRuntimeModule(MODULE_TYPE, \"mini-css\", `${RuntimeGlobals.require}.miniCssF`,\n        /**\n         * @param {Chunk} referencedChunk\n         * @returns {TODO}\n         */\n        referencedChunk => {\n          if (!referencedChunk.contentHash[MODULE_TYPE]) {\n            return false;\n          }\n\n          return referencedChunk.canBeInitial() ? this.options.filename : this.options.chunkFilename;\n        }, false));\n        compilation.addRuntimeModule(chunk, new CssLoadingRuntimeModule(set, this.runtimeOptions));\n      };\n\n      compilation.hooks.runtimeRequirementInTree.for(RuntimeGlobals.ensureChunkHandlers).tap(pluginName, handler);\n      compilation.hooks.runtimeRequirementInTree.for(RuntimeGlobals.hmrDownloadUpdateHandlers).tap(pluginName, handler);\n    });\n  }\n  /**\n   * @private\n   * @param {Chunk} chunk\n   * @param {ChunkGraph} chunkGraph\n   * @returns {Iterable<Module>}\n   */\n\n\n  getChunkModules(chunk, chunkGraph) {\n    return typeof chunkGraph !== \"undefined\" ? chunkGraph.getOrderedChunkModulesIterable(chunk, compareModulesByIdentifier) : chunk.modulesIterable;\n  }\n  /**\n   * @private\n   * @param {Compilation} compilation\n   * @param {Chunk} chunk\n   * @param {CssModule[]} modules\n   * @param {Compilation[\"requestShortener\"]} requestShortener\n   * @returns {Set<CssModule>}\n   */\n\n\n  sortModules(compilation, chunk, modules, requestShortener) {\n    let usedModules = this._sortedModulesCache.get(chunk);\n\n    if (usedModules || !modules) {\n      return (\n        /** @type {Set<CssModule>} */\n        usedModules\n      );\n    }\n    /** @type {CssModule[]} */\n\n\n    const modulesList = [...modules]; // Store dependencies for modules\n\n    /** @type {Map<CssModule, Set<CssModule>>} */\n\n    const moduleDependencies = new Map(modulesList.map(m => [m,\n    /** @type {Set<CssModule>} */\n    new Set()]));\n    /** @type {Map<CssModule, Map<CssModule, Set<ChunkGroup>>>} */\n\n    const moduleDependenciesReasons = new Map(modulesList.map(m => [m, new Map()])); // Get ordered list of modules per chunk group\n    // This loop also gathers dependencies from the ordered lists\n    // Lists are in reverse order to allow to use Array.pop()\n\n    /** @type {CssModule[][]} */\n\n    const modulesByChunkGroup = Array.from(chunk.groupsIterable, chunkGroup => {\n      const sortedModules = modulesList.map(module => {\n        return {\n          module,\n          index: chunkGroup.getModulePostOrderIndex(module)\n        };\n      }) // eslint-disable-next-line no-undefined\n      .filter(item => item.index !== undefined).sort((a, b) => b.index - a.index).map(item => item.module);\n\n      for (let i = 0; i < sortedModules.length; i++) {\n        const set = moduleDependencies.get(sortedModules[i]);\n        const reasons =\n        /** @type {Map<CssModule, Set<ChunkGroup>>} */\n        moduleDependenciesReasons.get(sortedModules[i]);\n\n        for (let j = i + 1; j < sortedModules.length; j++) {\n          const module = sortedModules[j];\n          /** @type {Set<CssModule>} */\n\n          set.add(module);\n          const reason = reasons.get(module) ||\n          /** @type {Set<ChunkGroup>} */\n          new Set();\n          reason.add(chunkGroup);\n          reasons.set(module, reason);\n        }\n      }\n\n      return sortedModules;\n    }); // set with already included modules in correct order\n\n    usedModules = new Set();\n    /**\n     * @param {CssModule} m\n     * @returns {boolean}\n     */\n\n    const unusedModulesFilter = m => !\n    /** @type {Set<CssModule>} */\n    usedModules.has(m);\n\n    while (usedModules.size < modulesList.length) {\n      let success = false;\n      let bestMatch;\n      let bestMatchDeps; // get first module where dependencies are fulfilled\n\n      for (const list of modulesByChunkGroup) {\n        // skip and remove already added modules\n        while (list.length > 0 && usedModules.has(list[list.length - 1])) {\n          list.pop();\n        } // skip empty lists\n\n\n        if (list.length !== 0) {\n          const module = list[list.length - 1];\n          const deps = moduleDependencies.get(module); // determine dependencies that are not yet included\n\n          const failedDeps = Array.from(\n          /** @type {Set<CssModule>} */\n          deps).filter(unusedModulesFilter); // store best match for fallback behavior\n\n          if (!bestMatchDeps || bestMatchDeps.length > failedDeps.length) {\n            bestMatch = list;\n            bestMatchDeps = failedDeps;\n          }\n\n          if (failedDeps.length === 0) {\n            // use this module and remove it from list\n            usedModules.add(\n            /** @type {CssModule} */\n            list.pop());\n            success = true;\n            break;\n          }\n        }\n      }\n\n      if (!success) {\n        // no module found => there is a conflict\n        // use list with fewest failed deps\n        // and emit a warning\n        const fallbackModule =\n        /** @type {CssModule[]} */\n        bestMatch.pop();\n\n        if (!this.options.ignoreOrder) {\n          const reasons = moduleDependenciesReasons.get(\n          /** @type {CssModule} */\n          fallbackModule);\n          compilation.warnings.push(\n          /** @type {WebpackError} */\n          new Error([`chunk ${chunk.name || chunk.id} [${pluginName}]`, \"Conflicting order. Following module has been added:\", ` * ${\n          /** @type {CssModule} */\n          fallbackModule.readableIdentifier(requestShortener)}`, \"despite it was not able to fulfill desired ordering with these modules:\", ...\n          /** @type {CssModule[]} */\n          bestMatchDeps.map(m => {\n            const goodReasonsMap = moduleDependenciesReasons.get(m);\n            const goodReasons = goodReasonsMap && goodReasonsMap.get(\n            /** @type {CssModule} */\n            fallbackModule);\n            const failedChunkGroups = Array.from(\n            /** @type {Set<ChunkGroup>} */\n\n            /** @type {Map<CssModule, Set<ChunkGroup>>} */\n            reasons.get(m), cg => cg.name).join(\", \");\n            const goodChunkGroups = goodReasons && Array.from(goodReasons, cg => cg.name).join(\", \");\n            return [` * ${m.readableIdentifier(requestShortener)}`, `   - couldn't fulfill desired order of chunk group(s) ${failedChunkGroups}`, goodChunkGroups && `   - while fulfilling desired order of chunk group(s) ${goodChunkGroups}`].filter(Boolean).join(\"\\n\");\n          })].join(\"\\n\")));\n        }\n\n        usedModules.add(\n        /** @type {CssModule} */\n        fallbackModule);\n      }\n    }\n\n    this._sortedModulesCache.set(chunk, usedModules);\n\n    return usedModules;\n  }\n  /**\n   * @private\n   * @param {Compiler} compiler\n   * @param {Compilation} compilation\n   * @param {Chunk} chunk\n   * @param {CssModule[]} modules\n   * @param {Compiler[\"requestShortener\"]} requestShortener\n   * @param {string} filenameTemplate\n   * @param {Parameters<Exclude<Required<Configuration>['output']['filename'], string | undefined>>[0]} pathData\n   * @returns {Source}\n   */\n\n\n  renderContentAsset(compiler, compilation, chunk, modules, requestShortener, filenameTemplate, pathData) {\n    const usedModules = this.sortModules(compilation, chunk, modules, requestShortener);\n    const {\n      ConcatSource,\n      SourceMapSource,\n      RawSource\n    } = compiler.webpack.sources;\n    const source = new ConcatSource();\n    const externalsSource = new ConcatSource();\n\n    for (const module of usedModules) {\n      let content = module.content.toString();\n      const readableIdentifier = module.readableIdentifier(requestShortener);\n      const startsWithAtRuleImport = /^@import url/.test(content);\n      let header;\n\n      if (compilation.outputOptions.pathinfo) {\n        // From https://github.com/webpack/webpack/blob/29eff8a74ecc2f87517b627dee451c2af9ed3f3f/lib/ModuleInfoHeaderPlugin.js#L191-L194\n        const reqStr = readableIdentifier.replace(/\\*\\//g, \"*_/\");\n        const reqStrStar = \"*\".repeat(reqStr.length);\n        const headerStr = `/*!****${reqStrStar}****!*\\\\\\n  !*** ${reqStr} ***!\\n  \\\\****${reqStrStar}****/\\n`;\n        header = new RawSource(headerStr);\n      }\n\n      if (startsWithAtRuleImport) {\n        if (typeof header !== \"undefined\") {\n          externalsSource.add(header);\n        } // HACK for IE\n        // http://stackoverflow.com/a/14676665/1458162\n\n\n        if (module.media) {\n          // insert media into the @import\n          // this is rar\n          // TODO improve this and parse the CSS to support multiple medias\n          content = content.replace(/;|\\s*$/, module.media);\n        }\n\n        externalsSource.add(content);\n        externalsSource.add(\"\\n\");\n      } else {\n        if (typeof header !== \"undefined\") {\n          source.add(header);\n        }\n\n        if (module.supports) {\n          source.add(`@supports (${module.supports}) {\\n`);\n        }\n\n        if (module.media) {\n          source.add(`@media ${module.media} {\\n`);\n        }\n\n        const needLayer = typeof module.layer !== \"undefined\";\n\n        if (needLayer) {\n          source.add(`@layer${module.layer.length > 0 ? ` ${module.layer}` : \"\"} {\\n`);\n        }\n\n        const {\n          path: filename\n        } = compilation.getPathWithInfo(filenameTemplate, pathData);\n        const undoPath = getUndoPath(filename, compiler.outputPath, false); // replacements\n\n        content = content.replace(new RegExp(ABSOLUTE_PUBLIC_PATH, \"g\"), \"\");\n        content = content.replace(new RegExp(SINGLE_DOT_PATH_SEGMENT, \"g\"), \".\");\n        content = content.replace(new RegExp(AUTO_PUBLIC_PATH, \"g\"), undoPath);\n        const entryOptions = chunk.getEntryOptions();\n        const baseUriReplacement = entryOptions && entryOptions.baseUri || undoPath;\n        content = content.replace(new RegExp(BASE_URI, \"g\"), baseUriReplacement);\n\n        if (module.sourceMap) {\n          source.add(new SourceMapSource(content, readableIdentifier, module.sourceMap.toString()));\n        } else {\n          source.add(new RawSource(content));\n        }\n\n        source.add(\"\\n\");\n\n        if (needLayer) {\n          source.add(\"}\\n\");\n        }\n\n        if (module.media) {\n          source.add(\"}\\n\");\n        }\n\n        if (module.supports) {\n          source.add(\"}\\n\");\n        }\n      }\n    }\n\n    return new ConcatSource(externalsSource, source);\n  }\n\n}\n\nMiniCssExtractPlugin.pluginName = pluginName;\nMiniCssExtractPlugin.pluginSymbol = pluginSymbol;\nMiniCssExtractPlugin.loader = require.resolve(\"./loader\");\nmodule.exports = MiniCssExtractPlugin;"],"mappings":"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"},"metadata":{},"sourceType":"script"}