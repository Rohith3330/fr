{"ast":null,"code":"/**\n * @fileoverview Enforce iframe elements have a title attribute.\n * @author Ethan Cohen\n */\n// -----------------------------------------------------------------------------\n// Requirements\n// -----------------------------------------------------------------------------\nimport { RuleTester } from 'eslint';\nimport parserOptionsMapper from '../../__util__/parserOptionsMapper';\nimport rule from '../../../src/rules/iframe-has-title'; // -----------------------------------------------------------------------------\n// Tests\n// -----------------------------------------------------------------------------\n\nconst ruleTester = new RuleTester();\nconst expectedError = {\n  message: '<iframe> elements must have a unique title property.',\n  type: 'JSXOpeningElement'\n};\nconst componentsSettings = {\n  'jsx-a11y': {\n    components: {\n      FooComponent: 'iframe'\n    }\n  }\n};\nruleTester.run('html-has-lang', rule, {\n  valid: [{\n    code: '<div />;'\n  }, {\n    code: '<iframe title=\"Unique title\" />'\n  }, {\n    code: '<iframe title={foo} />'\n  }, {\n    code: '<FooComponent />'\n  }, {\n    code: '<FooComponent title=\"Unique title\" />',\n    settings: componentsSettings\n  }].map(parserOptionsMapper),\n  invalid: [{\n    code: '<iframe />',\n    errors: [expectedError]\n  }, {\n    code: '<iframe {...props} />',\n    errors: [expectedError]\n  }, {\n    code: '<iframe title={undefined} />',\n    errors: [expectedError]\n  }, {\n    code: '<iframe title=\"\" />',\n    errors: [expectedError]\n  }, {\n    code: '<iframe title={false} />',\n    errors: [expectedError]\n  }, {\n    code: '<iframe title={true} />',\n    errors: [expectedError]\n  }, {\n    code: \"<iframe title={''} />\",\n    errors: [expectedError]\n  }, {\n    code: '<iframe title={``} />',\n    errors: [expectedError]\n  }, {\n    code: '<iframe title={\"\"} />',\n    errors: [expectedError]\n  }, {\n    code: '<iframe title={42} />',\n    errors: [expectedError]\n  }, {\n    code: '<FooComponent />',\n    errors: [expectedError],\n    settings: componentsSettings\n  }].map(parserOptionsMapper)\n});","map":{"version":3,"names":["RuleTester","parserOptionsMapper","rule","ruleTester","expectedError","message","type","componentsSettings","components","FooComponent","run","valid","code","settings","map","invalid","errors"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/eslint-plugin-jsx-a11y/__tests__/src/rules/iframe-has-title-test.js"],"sourcesContent":["/**\n * @fileoverview Enforce iframe elements have a title attribute.\n * @author Ethan Cohen\n */\n\n// -----------------------------------------------------------------------------\n// Requirements\n// -----------------------------------------------------------------------------\n\nimport { RuleTester } from 'eslint';\nimport parserOptionsMapper from '../../__util__/parserOptionsMapper';\nimport rule from '../../../src/rules/iframe-has-title';\n\n// -----------------------------------------------------------------------------\n// Tests\n// -----------------------------------------------------------------------------\n\nconst ruleTester = new RuleTester();\n\nconst expectedError = {\n  message: '<iframe> elements must have a unique title property.',\n  type: 'JSXOpeningElement',\n};\n\nconst componentsSettings = {\n  'jsx-a11y': {\n    components: {\n      FooComponent: 'iframe',\n    },\n  },\n};\n\nruleTester.run('html-has-lang', rule, {\n  valid: [\n    { code: '<div />;' },\n    { code: '<iframe title=\"Unique title\" />' },\n    { code: '<iframe title={foo} />' },\n    { code: '<FooComponent />' },\n    { code: '<FooComponent title=\"Unique title\" />', settings: componentsSettings },\n  ].map(parserOptionsMapper),\n  invalid: [\n    { code: '<iframe />', errors: [expectedError] },\n    { code: '<iframe {...props} />', errors: [expectedError] },\n    { code: '<iframe title={undefined} />', errors: [expectedError] },\n    { code: '<iframe title=\"\" />', errors: [expectedError] },\n    { code: '<iframe title={false} />', errors: [expectedError] },\n    { code: '<iframe title={true} />', errors: [expectedError] },\n    { code: \"<iframe title={''} />\", errors: [expectedError] },\n    { code: '<iframe title={``} />', errors: [expectedError] },\n    { code: '<iframe title={\"\"} />', errors: [expectedError] },\n    { code: '<iframe title={42} />', errors: [expectedError] },\n    { code: '<FooComponent />', errors: [expectedError], settings: componentsSettings },\n  ].map(parserOptionsMapper),\n});\n"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA,SAASA,UAAT,QAA2B,QAA3B;AACA,OAAOC,mBAAP,MAAgC,oCAAhC;AACA,OAAOC,IAAP,MAAiB,qCAAjB,C,CAEA;AACA;AACA;;AAEA,MAAMC,UAAU,GAAG,IAAIH,UAAJ,EAAnB;AAEA,MAAMI,aAAa,GAAG;EACpBC,OAAO,EAAE,sDADW;EAEpBC,IAAI,EAAE;AAFc,CAAtB;AAKA,MAAMC,kBAAkB,GAAG;EACzB,YAAY;IACVC,UAAU,EAAE;MACVC,YAAY,EAAE;IADJ;EADF;AADa,CAA3B;AAQAN,UAAU,CAACO,GAAX,CAAe,eAAf,EAAgCR,IAAhC,EAAsC;EACpCS,KAAK,EAAE,CACL;IAAEC,IAAI,EAAE;EAAR,CADK,EAEL;IAAEA,IAAI,EAAE;EAAR,CAFK,EAGL;IAAEA,IAAI,EAAE;EAAR,CAHK,EAIL;IAAEA,IAAI,EAAE;EAAR,CAJK,EAKL;IAAEA,IAAI,EAAE,uCAAR;IAAiDC,QAAQ,EAAEN;EAA3D,CALK,EAMLO,GANK,CAMDb,mBANC,CAD6B;EAQpCc,OAAO,EAAE,CACP;IAAEH,IAAI,EAAE,YAAR;IAAsBI,MAAM,EAAE,CAACZ,aAAD;EAA9B,CADO,EAEP;IAAEQ,IAAI,EAAE,uBAAR;IAAiCI,MAAM,EAAE,CAACZ,aAAD;EAAzC,CAFO,EAGP;IAAEQ,IAAI,EAAE,8BAAR;IAAwCI,MAAM,EAAE,CAACZ,aAAD;EAAhD,CAHO,EAIP;IAAEQ,IAAI,EAAE,qBAAR;IAA+BI,MAAM,EAAE,CAACZ,aAAD;EAAvC,CAJO,EAKP;IAAEQ,IAAI,EAAE,0BAAR;IAAoCI,MAAM,EAAE,CAACZ,aAAD;EAA5C,CALO,EAMP;IAAEQ,IAAI,EAAE,yBAAR;IAAmCI,MAAM,EAAE,CAACZ,aAAD;EAA3C,CANO,EAOP;IAAEQ,IAAI,EAAE,uBAAR;IAAiCI,MAAM,EAAE,CAACZ,aAAD;EAAzC,CAPO,EAQP;IAAEQ,IAAI,EAAE,uBAAR;IAAiCI,MAAM,EAAE,CAACZ,aAAD;EAAzC,CARO,EASP;IAAEQ,IAAI,EAAE,uBAAR;IAAiCI,MAAM,EAAE,CAACZ,aAAD;EAAzC,CATO,EAUP;IAAEQ,IAAI,EAAE,uBAAR;IAAiCI,MAAM,EAAE,CAACZ,aAAD;EAAzC,CAVO,EAWP;IAAEQ,IAAI,EAAE,kBAAR;IAA4BI,MAAM,EAAE,CAACZ,aAAD,CAApC;IAAqDS,QAAQ,EAAEN;EAA/D,CAXO,EAYPO,GAZO,CAYHb,mBAZG;AAR2B,CAAtC"},"metadata":{},"sourceType":"module"}