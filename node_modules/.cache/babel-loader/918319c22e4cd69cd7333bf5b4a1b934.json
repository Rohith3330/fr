{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _state = require(\"./state\");\n\nvar _config = require(\"./config\");\n\nvar _plugins = require(\"./plugins\");\n\nfunction run(code, config, state) {\n  const expandedState = (0, _state.expandState)(state);\n  const plugins = (0, _plugins.getPlugins)(config, state).map(_plugins.resolvePlugin);\n  let nextCode = String(code).replace('\\0', ''); // eslint-disable-next-line no-restricted-syntax\n\n  for (const plugin of plugins) {\n    nextCode = plugin(nextCode, config, expandedState);\n  }\n\n  return nextCode;\n}\n\nasync function convert(code) {\n  let config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  let state = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  config = await (0, _config.loadConfig)(config, state);\n  return run(code, config, state);\n}\n\nconvert.sync = function (code) {\n  let config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  let state = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  config = _config.loadConfig.sync(config, state);\n  return run(code, config, state);\n};\n\nvar _default = convert;\nexports.default = _default;","map":{"version":3,"names":["exports","__esModule","default","_state","require","_config","_plugins","run","code","config","state","expandedState","expandState","plugins","getPlugins","map","resolvePlugin","nextCode","String","replace","plugin","convert","loadConfig","sync","_default"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/@svgr/core/lib/convert.js"],"sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _state = require(\"./state\");\n\nvar _config = require(\"./config\");\n\nvar _plugins = require(\"./plugins\");\n\nfunction run(code, config, state) {\n  const expandedState = (0, _state.expandState)(state);\n  const plugins = (0, _plugins.getPlugins)(config, state).map(_plugins.resolvePlugin);\n  let nextCode = String(code).replace('\\0', ''); // eslint-disable-next-line no-restricted-syntax\n\n  for (const plugin of plugins) {\n    nextCode = plugin(nextCode, config, expandedState);\n  }\n\n  return nextCode;\n}\n\nasync function convert(code, config = {}, state = {}) {\n  config = await (0, _config.loadConfig)(config, state);\n  return run(code, config, state);\n}\n\nconvert.sync = (code, config = {}, state = {}) => {\n  config = _config.loadConfig.sync(config, state);\n  return run(code, config, state);\n};\n\nvar _default = convert;\nexports.default = _default;"],"mappings":"AAAA;;AAEAA,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAIC,MAAM,GAAGC,OAAO,CAAC,SAAD,CAApB;;AAEA,IAAIC,OAAO,GAAGD,OAAO,CAAC,UAAD,CAArB;;AAEA,IAAIE,QAAQ,GAAGF,OAAO,CAAC,WAAD,CAAtB;;AAEA,SAASG,GAAT,CAAaC,IAAb,EAAmBC,MAAnB,EAA2BC,KAA3B,EAAkC;EAChC,MAAMC,aAAa,GAAG,CAAC,GAAGR,MAAM,CAACS,WAAX,EAAwBF,KAAxB,CAAtB;EACA,MAAMG,OAAO,GAAG,CAAC,GAAGP,QAAQ,CAACQ,UAAb,EAAyBL,MAAzB,EAAiCC,KAAjC,EAAwCK,GAAxC,CAA4CT,QAAQ,CAACU,aAArD,CAAhB;EACA,IAAIC,QAAQ,GAAGC,MAAM,CAACV,IAAD,CAAN,CAAaW,OAAb,CAAqB,IAArB,EAA2B,EAA3B,CAAf,CAHgC,CAGe;;EAE/C,KAAK,MAAMC,MAAX,IAAqBP,OAArB,EAA8B;IAC5BI,QAAQ,GAAGG,MAAM,CAACH,QAAD,EAAWR,MAAX,EAAmBE,aAAnB,CAAjB;EACD;;EAED,OAAOM,QAAP;AACD;;AAED,eAAeI,OAAf,CAAuBb,IAAvB,EAAsD;EAAA,IAAzBC,MAAyB,uEAAhB,EAAgB;EAAA,IAAZC,KAAY,uEAAJ,EAAI;EACpDD,MAAM,GAAG,MAAM,CAAC,GAAGJ,OAAO,CAACiB,UAAZ,EAAwBb,MAAxB,EAAgCC,KAAhC,CAAf;EACA,OAAOH,GAAG,CAACC,IAAD,EAAOC,MAAP,EAAeC,KAAf,CAAV;AACD;;AAEDW,OAAO,CAACE,IAAR,GAAe,UAACf,IAAD,EAAmC;EAAA,IAA5BC,MAA4B,uEAAnB,EAAmB;EAAA,IAAfC,KAAe,uEAAP,EAAO;EAChDD,MAAM,GAAGJ,OAAO,CAACiB,UAAR,CAAmBC,IAAnB,CAAwBd,MAAxB,EAAgCC,KAAhC,CAAT;EACA,OAAOH,GAAG,CAACC,IAAD,EAAOC,MAAP,EAAeC,KAAf,CAAV;AACD,CAHD;;AAKA,IAAIc,QAAQ,GAAGH,OAAf;AACArB,OAAO,CAACE,OAAR,GAAkBsB,QAAlB"},"metadata":{},"sourceType":"script"}