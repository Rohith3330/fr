{"ast":null,"code":"!function () {\n  var e = /((?:not )?all and )?(\\(color-index: *(22|48|70)\\))/i,\n      t = /prefers-color-scheme:/i,\n      a = function (a) {\n    var i = \"(prefers-color-scheme: dark)\",\n        r = window.matchMedia && matchMedia(i),\n        c = r && r.media === i,\n        o = function () {\n      n(r.matches ? \"dark\" : \"light\");\n    },\n        n = function (a) {\n      a !== l && (l = a, \"function\" == typeof d.onChange && d.onChange()), [].forEach.call(document.styleSheets || [], function (i) {\n        var r = [];\n        [].forEach.call(i.cssRules || [], function (e) {\n          r.push(e);\n        }), r.forEach(function (i) {\n          if (t.test(Object(i.media).mediaText)) {\n            var r = [].indexOf.call(i.parentStyleSheet.cssRules, i);\n            i.parentStyleSheet.deleteRule(r);\n          } else {\n            var c = (Object(i.media).mediaText || \"\").match(e);\n            if (c) i.media.mediaText = ((/^dark$/i.test(a) ? \"48\" === c[3] : /^light$/i.test(a) ? \"70\" === c[3] : \"22\" === c[3]) ? \"not all and \" : \"\") + i.media.mediaText.replace(e, \"$2\");else {\n              var o = (Object(i.media).mediaText || \"\").match(/\\( *(?:color|max-color): *(48842621|70318723|22511989) *\\)/i);\n              o && o.length > 1 && (!/^dark$/i.test(a) || \"48842621\" !== o[1] && \"22511989\" !== o[1] ? !/^light$/i.test(a) || \"70318723\" !== o[1] && \"22511989\" !== o[1] ? i.media.mediaText = i.media.mediaText.replace(/\\( *max-color: *(?:48842621|70318723|22511989) *\\)/i, \"(color: \" + o[1] + \")\") : i.media.mediaText = i.media.mediaText.replace(/\\( *color: *(?:48842621|22511989) *\\)/i, \"(max-color: \" + o[1] + \")\") : i.media.mediaText = i.media.mediaText.replace(/\\( *color: *(?:48842621|70318723) *\\)/i, \"(max-color: \" + o[1] + \")\"));\n            }\n          }\n        });\n      });\n    },\n        d = Object.defineProperty({\n      hasNativeSupport: c,\n      removeListener: function () {\n        r && r.removeListener(o);\n      }\n    }, \"scheme\", {\n      get: function () {\n        return l;\n      },\n      set: n\n    }),\n        l = a || (r && r.matches ? \"dark\" : \"light\");\n\n    return n(l), r && (\"addEventListener\" in r ? r.addEventListener(\"change\", o) : r.addListener(o)), d;\n  };\n\n  self.prefersColorSchemeInit = a, self.initPrefersColorScheme = a;\n}();","map":{"version":3,"mappings":";EACA,IAAMA,IAAmB,qDAAzB;EAAA,IACMC,IAA2B,wBADjC;EAAA,IAGMC,IAAyB;IAAAC,IACxBC,IAAmB,8BADKD;IAAAA,IAExBE,IAAiBC,OAAOC,UAAPD,IAAqBC,WAAWH,CAAXG,CAFdJ;IAAAA,IAGxBK,IAAmBH,KAAkBA,EAAeI,KAAfJ,KAAyBD,CAHtCD;IAAAA,IAIxBO,IAAqB;MAC1BC,EAAIN,EAAeO,OAAfP,GAAyB,MAAzBA,GAAkC,OAAtCM;IAAsC,CALTR;IAAAA,IAYxBQ,IAAM;MACPE,MAAgBC,CAAhBD,KACHC,IAAqBD,CAArBC,EAE+B,qBAApBC,EAAOC,QAAa,IAC9BD,EAAOC,QAAPD,EAJEF,GAIKG,GAINC,OAJMD,CAIEE,IAJFF,CAIOG,SAASC,WAATD,IAAwB,EAJ/BH,EAImC;QAAAK,IAGrCC,IAAQ,EAH6BD;QAG7B,GACXJ,OADW,CACHC,IADG,CACEG,EAAWE,QAAXF,IAAuB,EADzB,EAC6B;UAC1CC,EAAME,IAANF,CAAWG,CAAXH;QAAWG,CAFE,GAKdH,EAAML,OAANK,CAAc;UAAAG,IACYxB,EAAyByB,IAAzBzB,CAA8B0B,OAAOF,EAAQhB,KAAfkB,EAAsBC,SAApD3B,CADZwB,EAGS;YAAA,IACfI,IAAQ,GAAGC,OAAH,CAAWZ,IAAX,CAAgBO,EAAQM,gBAARN,CAAyBF,QAAzC,EAAmDE,CAAnD,CADO;YAErBA,EAAQM,gBAARN,CAAyBO,UAAzBP,CAAoCI,CAApCJ;UAAoCI,CALxBJ,MAMN;YAAA,IACAQ,KAAmBN,OAAOF,EAAQhB,KAAfkB,EAAsBC,SAAtBD,IAAmC,EAAtDM,EAA0DC,KAA1DD,CAAgEjC,CAAhEiC,CADA;YACgEjC,IAElEiC,CAFkEjC,EAIrEyB,EAAQhB,KAARgB,CAAcG,SAAdH,GAAcG,EACZ,UAAUF,IAAV,CAAeb,CAAf,IACyB,SAAvBoB,EAAgB,CAAhBA,CADF,GAEE,WAAWP,IAAX,CAAgBb,CAAhB,IACwB,SAAvBoB,EAAgB,CAAhBA,CADD,GAEwB,SAAvBA,EAAgB,CAAhBA,CALSL,IAMV,cANUA,GAOV,EAPUA,IAQVH,EAAQhB,KAARgB,CAAcG,SAAdH,CAAwBU,OAAxBV,CAAgCzB,CAAhCyB,EAAkD,IAAlDA,CARJA,CAJqEzB,KAa/D;cAAA,IAEAoC,KAAmBT,OAAOF,EAAQhB,KAAfkB,EAAsBC,SAAtBD,IAAmC,EAAtDS,EAA0DF,KAA1DE,CAAgE,6DAAhEA,CAFA;cAGFA,KAAmBA,EAAgBC,MAAhBD,GAAyB,CAA5CA,KAA4C,CAC3C,UAAUV,IAAV,CAAeb,CAAf,CAD2C,IACY,eAAvBuB,EAAgB,CAAhBA,CAAuB,IAAqC,eAAvBA,EAAgB,CAAhBA,CAD1B,GAC0C,CAG9E,WAAWV,IAAX,CAAgBb,CAAhB,CAH8E,IAGtB,eAAvBuB,EAAgB,CAAhBA,CAAuB,IAAqC,eAAvBA,EAAgB,CAAhBA,CAHQ,GAOxFX,EAAQhB,KAARgB,CAAcG,SAAdH,GAA0BA,EAAQhB,KAARgB,CAAcG,SAAdH,CAAwBU,OAAxBV,CAAgC,qDAAhCA,EAAgC,aAAkEW,EAAgB,CAAhBA,CAAlE,GAAkF,GAAlHX,CAP8D,GAKxFA,EAAQhB,KAARgB,CAAcG,SAAdH,GAA0BA,EAAQhB,KAARgB,CAAcG,SAAdH,CAAwBU,OAAxBV,CAAgC,wCAAhCA,EAAgC,iBAAyDW,EAAgB,CAAhBA,CAAzD,GAAyE,GAAzGX,CANoB,GAG9CA,EAAQhB,KAARgB,CAAcG,SAAdH,GAA0BA,EAAQhB,KAARgB,CAAcG,SAAdH,CAAwBU,OAAxBV,CAAgC,wCAAhCA,EAAgC,iBAAyDW,EAAgB,CAAhBA,CAAzD,GAAyE,GAAzGX,CAHxBW;YAGiI;UAAA;QAAA,CA1BxId,CALc;MA+B0H,CAtChIN,CAJLH;IA0CqI,CAvD5GV;IAAAA,IAoExBY,IAASY,OAAOW,cAAPX,CACd;MAAEnB,mBAAF;MAAoB+B,gBA9DE;QAClBlC,KACHA,EAAekC,cAAflC,CAA8BK,CAA9BL,CADGA;MAC2BK;IA4D/B,CADciB,EAEd,QAFcA,EAGd;MAAEa,KAAK;QAAA,OAAM1B,CAAN;MAAMA,CAAb;MAAiCH;IAAjC,CAHcgB,CApEexB;IAAAA,IA2E1BW,IAAqBX,MAAuBE,KAAkBA,EAAeO,OAAjCP,GAA2C,MAA3CA,GAAoD,OAA3EF,CA3EKA;;IA2EsE,OAEpGQ,EAAIG,CAAJH,GAGIN,MACC,sBAAsBA,CAAtB,GACHA,EAAeoC,gBAAfpC,CAAgC,QAAhCA,EAA0CK,CAA1CL,CADG,GAGHA,EAAeqC,WAAfrC,CAA2BK,CAA3BL,CAJEA,CAHJM,EAWOI,CAb6F;EAa7FA,CA3FR;;ECCA4B,KAAKzC,sBAALyC,GAA8BzC,CAA9ByC,EAGAA,KAAKC,sBAALD,GAA8BzC,CAH9ByC;AAG8BzC","names":["colorIndexRegExp","prefersColorSchemeRegExp","prefersColorSchemeInit","initialColorScheme","mediaQueryString","mediaQueryList","window","matchMedia","hasNativeSupport","media","mediaQueryListener","set","matches","colorScheme","currentColorScheme","result","onChange","forEach","call","document","styleSheets","styleSheet","rules","cssRules","push","cssRule","test","Object","mediaText","index","indexOf","parentStyleSheet","deleteRule","colorIndexMatch","match","replace","colorDepthMatch","length","defineProperty","removeListener","get","addEventListener","addListener","self","initPrefersColorScheme"],"sources":["C:\\Users\\Rohith\\mern\\frontend\\node_modules\\css-prefers-color-scheme\\src\\browser.js","C:\\Users\\Rohith\\mern\\frontend\\node_modules\\css-prefers-color-scheme\\src\\browser-global.js"],"sourcesContent":["/* global document,window,matchMedia */\nconst colorIndexRegExp = /((?:not )?all and )?(\\(color-index: *(22|48|70)\\))/i;\nconst prefersColorSchemeRegExp = /prefers-color-scheme:/i;\n\nconst prefersColorSchemeInit = initialColorScheme => {\n\tconst mediaQueryString = '(prefers-color-scheme: dark)';\n\tconst mediaQueryList = window.matchMedia && matchMedia(mediaQueryString);\n\tconst hasNativeSupport = mediaQueryList && mediaQueryList.media === mediaQueryString;\n\tconst mediaQueryListener = () => {\n\t\tset(mediaQueryList.matches ? 'dark' : 'light');\n\t};\n\tconst removeListener = () => {\n\t\tif (mediaQueryList) {\n\t\t\tmediaQueryList.removeListener(mediaQueryListener);\n\t\t}\n\t};\n\tconst set = colorScheme => {\n\t\tif (colorScheme !== currentColorScheme) {\n\t\t\tcurrentColorScheme = colorScheme;\n\n\t\t\tif (typeof result.onChange === 'function') {\n\t\t\t\tresult.onChange();\n\t\t\t}\n\t\t}\n\n\t\t[].forEach.call(document.styleSheets || [], styleSheet => {\n\n\t\t\t// cssRules is a live list. Converting to an Array first.\n\t\t\tconst rules = [];\n\t\t\t[].forEach.call(styleSheet.cssRules || [], cssRule => {\n\t\t\t\trules.push(cssRule);\n\t\t\t});\n\n\t\t\trules.forEach(cssRule => {\n\t\t\t\tconst colorSchemeMatch = prefersColorSchemeRegExp.test(Object(cssRule.media).mediaText);\n\n\t\t\t\tif (colorSchemeMatch) {\n\t\t\t\t\tconst index = [].indexOf.call(cssRule.parentStyleSheet.cssRules, cssRule);\n\t\t\t\t\tcssRule.parentStyleSheet.deleteRule(index);\n\t\t\t\t} else {\n\t\t\t\t\tconst colorIndexMatch = (Object(cssRule.media).mediaText || '').match(colorIndexRegExp);\n\n\t\t\t\t\tif (colorIndexMatch) {\n\t\t\t\t\t\t// Old style which has poor browser support and can't handle complex media queries.\n\t\t\t\t\t\tcssRule.media.mediaText = (\n\t\t\t\t\t\t\t(/^dark$/i.test(colorScheme)\n\t\t\t\t\t\t\t\t? colorIndexMatch[3] === '48'\n\t\t\t\t\t\t\t\t: /^light$/i.test(colorScheme)\n\t\t\t\t\t\t\t\t\t? colorIndexMatch[3] === '70'\n\t\t\t\t\t\t\t\t\t: colorIndexMatch[3] === '22')\n\t\t\t\t\t\t\t\t? 'not all and '\n\t\t\t\t\t\t\t\t: ''\n\t\t\t\t\t\t) + cssRule.media.mediaText.replace(colorIndexRegExp, '$2');\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// New style which supports complex media queries.\n\t\t\t\t\t\tconst colorDepthMatch = (Object(cssRule.media).mediaText || '').match(/\\( *(?:color|max-color): *(48842621|70318723|22511989) *\\)/i);\n\t\t\t\t\t\tif (colorDepthMatch && colorDepthMatch.length > 1) {\n\t\t\t\t\t\t\tif (/^dark$/i.test(colorScheme) && (colorDepthMatch[1] === '48842621' || colorDepthMatch[1] === '22511989')) {\n\t\t\t\t\t\t\t\t// No preference or preferred is dark and rule is dark.\n\t\t\t\t\t\t\t\tcssRule.media.mediaText = cssRule.media.mediaText.replace(/\\( *color: *(?:48842621|70318723) *\\)/i, `(max-color: ${colorDepthMatch[1]})`);\n\t\t\t\t\t\t\t} else if (/^light$/i.test(colorScheme) && (colorDepthMatch[1] === '70318723' || colorDepthMatch[1] === '22511989')) {\n\t\t\t\t\t\t\t\t// No preference or preferred is light and rule is light.\n\t\t\t\t\t\t\t\tcssRule.media.mediaText = cssRule.media.mediaText.replace(/\\( *color: *(?:48842621|22511989) *\\)/i, `(max-color: ${colorDepthMatch[1]})`);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tcssRule.media.mediaText = cssRule.media.mediaText.replace(/\\( *max-color: *(?:48842621|70318723|22511989) *\\)/i, `(color: ${colorDepthMatch[1]})`);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t};\n\tconst result = Object.defineProperty(\n\t\t{ hasNativeSupport, removeListener },\n\t\t'scheme',\n\t\t{ get: () => currentColorScheme, set },\n\t);\n\n\t// initialize the color scheme using the provided value, the system value, or light\n\tlet currentColorScheme = initialColorScheme || (mediaQueryList && mediaQueryList.matches ? 'dark' : 'light');\n\n\tset(currentColorScheme);\n\n\t// listen for system changes\n\tif (mediaQueryList) {\n\t\tif ('addEventListener' in mediaQueryList) {\n\t\t\tmediaQueryList.addEventListener('change', mediaQueryListener);\n\t\t} else {\n\t\t\tmediaQueryList.addListener(mediaQueryListener);\n\t\t}\n\t}\n\n\treturn result;\n};\n\nexport default prefersColorSchemeInit;\n","/* global self */\nimport { default as prefersColorSchemeInit } from './browser';\nself.prefersColorSchemeInit = prefersColorSchemeInit;\n\n// Legacy : there used to be a rollup config that exposed this function under a different name.\nself.initPrefersColorScheme = prefersColorSchemeInit;\n"]},"metadata":{},"sourceType":"script"}