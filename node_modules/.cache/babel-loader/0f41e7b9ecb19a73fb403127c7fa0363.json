{"ast":null,"code":"/**\n * @callback EventCallback\n * @param {string | Error | null} context\n * @returns {void}\n */\n\n/**\n * @callback EventHandler\n * @param {Event} event\n * @returns {void}\n */\n\n/**\n * A function that creates an event handler for the `error` event.\n * @param {EventCallback} callback A function called to handle the error context.\n * @returns {EventHandler} A handler for the `error` event.\n */\nfunction createErrorHandler(callback) {\n  return function errorHandler(event) {\n    if (!event || !event.error) {\n      return callback(null);\n    }\n\n    if (event.error instanceof Error) {\n      return callback(event.error);\n    } // A non-error was thrown, we don't have a trace. :(\n    // Look in your browser's devtools for more information\n\n\n    return callback(new Error(event.error));\n  };\n}\n/**\n * A function that creates an event handler for the `unhandledrejection` event.\n * @param {EventCallback} callback A function called to handle the error context.\n * @returns {EventHandler} A handler for the `unhandledrejection` event.\n */\n\n\nfunction createRejectionHandler(callback) {\n  return function rejectionHandler(event) {\n    if (!event || !event.reason) {\n      return callback(new Error('Unknown'));\n    }\n\n    if (event.reason instanceof Error) {\n      return callback(event.reason);\n    } // A non-error was rejected, we don't have a trace :(\n    // Look in your browser's devtools for more information\n\n\n    return callback(new Error(event.reason));\n  };\n}\n/**\n * Creates a handler that registers an EventListener on window for a valid type\n * and calls a callback when the event fires.\n * @param {string} eventType A valid DOM event type.\n * @param {function(EventCallback): EventHandler} createHandler A function that creates an event handler.\n * @returns {register} A function that registers the EventListener given a callback.\n */\n\n\nfunction createWindowEventHandler(eventType, createHandler) {\n  /**\n   * @type {EventHandler | null} A cached event handler function.\n   */\n  let eventHandler = null;\n  /**\n   * Unregisters an EventListener if it has been registered.\n   * @returns {void}\n   */\n\n  function unregister() {\n    if (eventHandler === null) {\n      return;\n    }\n\n    window.removeEventListener(eventType, eventHandler);\n    eventHandler = null;\n  }\n  /**\n   * Registers an EventListener if it hasn't been registered.\n   * @param {EventCallback} callback A function called after the event handler to handle its context.\n   * @returns {unregister | void} A function to unregister the registered EventListener if registration is performed.\n   */\n\n\n  function register(callback) {\n    if (eventHandler !== null) {\n      return;\n    }\n\n    eventHandler = createHandler(callback);\n    window.addEventListener(eventType, eventHandler);\n    return unregister;\n  }\n\n  return register;\n}\n\nconst handleError = createWindowEventHandler('error', createErrorHandler);\nconst handleUnhandledRejection = createWindowEventHandler('unhandledrejection', createRejectionHandler);\nmodule.exports = {\n  handleError: handleError,\n  handleUnhandledRejection: handleUnhandledRejection\n};","map":{"version":3,"names":["createErrorHandler","callback","errorHandler","event","error","Error","createRejectionHandler","rejectionHandler","reason","createWindowEventHandler","eventType","createHandler","eventHandler","unregister","window","removeEventListener","register","addEventListener","handleError","handleUnhandledRejection","module","exports"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/@pmmmwh/react-refresh-webpack-plugin/client/utils/errorEventHandlers.js"],"sourcesContent":["/**\n * @callback EventCallback\n * @param {string | Error | null} context\n * @returns {void}\n */\n/**\n * @callback EventHandler\n * @param {Event} event\n * @returns {void}\n */\n\n/**\n * A function that creates an event handler for the `error` event.\n * @param {EventCallback} callback A function called to handle the error context.\n * @returns {EventHandler} A handler for the `error` event.\n */\nfunction createErrorHandler(callback) {\n  return function errorHandler(event) {\n    if (!event || !event.error) {\n      return callback(null);\n    }\n    if (event.error instanceof Error) {\n      return callback(event.error);\n    }\n    // A non-error was thrown, we don't have a trace. :(\n    // Look in your browser's devtools for more information\n    return callback(new Error(event.error));\n  };\n}\n\n/**\n * A function that creates an event handler for the `unhandledrejection` event.\n * @param {EventCallback} callback A function called to handle the error context.\n * @returns {EventHandler} A handler for the `unhandledrejection` event.\n */\nfunction createRejectionHandler(callback) {\n  return function rejectionHandler(event) {\n    if (!event || !event.reason) {\n      return callback(new Error('Unknown'));\n    }\n    if (event.reason instanceof Error) {\n      return callback(event.reason);\n    }\n    // A non-error was rejected, we don't have a trace :(\n    // Look in your browser's devtools for more information\n    return callback(new Error(event.reason));\n  };\n}\n\n/**\n * Creates a handler that registers an EventListener on window for a valid type\n * and calls a callback when the event fires.\n * @param {string} eventType A valid DOM event type.\n * @param {function(EventCallback): EventHandler} createHandler A function that creates an event handler.\n * @returns {register} A function that registers the EventListener given a callback.\n */\nfunction createWindowEventHandler(eventType, createHandler) {\n  /**\n   * @type {EventHandler | null} A cached event handler function.\n   */\n  let eventHandler = null;\n\n  /**\n   * Unregisters an EventListener if it has been registered.\n   * @returns {void}\n   */\n  function unregister() {\n    if (eventHandler === null) {\n      return;\n    }\n    window.removeEventListener(eventType, eventHandler);\n    eventHandler = null;\n  }\n\n  /**\n   * Registers an EventListener if it hasn't been registered.\n   * @param {EventCallback} callback A function called after the event handler to handle its context.\n   * @returns {unregister | void} A function to unregister the registered EventListener if registration is performed.\n   */\n  function register(callback) {\n    if (eventHandler !== null) {\n      return;\n    }\n    eventHandler = createHandler(callback);\n    window.addEventListener(eventType, eventHandler);\n\n    return unregister;\n  }\n\n  return register;\n}\n\nconst handleError = createWindowEventHandler('error', createErrorHandler);\nconst handleUnhandledRejection = createWindowEventHandler(\n  'unhandledrejection',\n  createRejectionHandler\n);\n\nmodule.exports = {\n  handleError: handleError,\n  handleUnhandledRejection: handleUnhandledRejection,\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAASA,kBAAT,CAA4BC,QAA5B,EAAsC;EACpC,OAAO,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;IAClC,IAAI,CAACA,KAAD,IAAU,CAACA,KAAK,CAACC,KAArB,EAA4B;MAC1B,OAAOH,QAAQ,CAAC,IAAD,CAAf;IACD;;IACD,IAAIE,KAAK,CAACC,KAAN,YAAuBC,KAA3B,EAAkC;MAChC,OAAOJ,QAAQ,CAACE,KAAK,CAACC,KAAP,CAAf;IACD,CANiC,CAOlC;IACA;;;IACA,OAAOH,QAAQ,CAAC,IAAII,KAAJ,CAAUF,KAAK,CAACC,KAAhB,CAAD,CAAf;EACD,CAVD;AAWD;AAED;AACA;AACA;AACA;AACA;;;AACA,SAASE,sBAAT,CAAgCL,QAAhC,EAA0C;EACxC,OAAO,SAASM,gBAAT,CAA0BJ,KAA1B,EAAiC;IACtC,IAAI,CAACA,KAAD,IAAU,CAACA,KAAK,CAACK,MAArB,EAA6B;MAC3B,OAAOP,QAAQ,CAAC,IAAII,KAAJ,CAAU,SAAV,CAAD,CAAf;IACD;;IACD,IAAIF,KAAK,CAACK,MAAN,YAAwBH,KAA5B,EAAmC;MACjC,OAAOJ,QAAQ,CAACE,KAAK,CAACK,MAAP,CAAf;IACD,CANqC,CAOtC;IACA;;;IACA,OAAOP,QAAQ,CAAC,IAAII,KAAJ,CAAUF,KAAK,CAACK,MAAhB,CAAD,CAAf;EACD,CAVD;AAWD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASC,wBAAT,CAAkCC,SAAlC,EAA6CC,aAA7C,EAA4D;EAC1D;AACF;AACA;EACE,IAAIC,YAAY,GAAG,IAAnB;EAEA;AACF;AACA;AACA;;EACE,SAASC,UAAT,GAAsB;IACpB,IAAID,YAAY,KAAK,IAArB,EAA2B;MACzB;IACD;;IACDE,MAAM,CAACC,mBAAP,CAA2BL,SAA3B,EAAsCE,YAAtC;IACAA,YAAY,GAAG,IAAf;EACD;EAED;AACF;AACA;AACA;AACA;;;EACE,SAASI,QAAT,CAAkBf,QAAlB,EAA4B;IAC1B,IAAIW,YAAY,KAAK,IAArB,EAA2B;MACzB;IACD;;IACDA,YAAY,GAAGD,aAAa,CAACV,QAAD,CAA5B;IACAa,MAAM,CAACG,gBAAP,CAAwBP,SAAxB,EAAmCE,YAAnC;IAEA,OAAOC,UAAP;EACD;;EAED,OAAOG,QAAP;AACD;;AAED,MAAME,WAAW,GAAGT,wBAAwB,CAAC,OAAD,EAAUT,kBAAV,CAA5C;AACA,MAAMmB,wBAAwB,GAAGV,wBAAwB,CACvD,oBADuD,EAEvDH,sBAFuD,CAAzD;AAKAc,MAAM,CAACC,OAAP,GAAiB;EACfH,WAAW,EAAEA,WADE;EAEfC,wBAAwB,EAAEA;AAFX,CAAjB"},"metadata":{},"sourceType":"script"}