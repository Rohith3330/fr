{"ast":null,"code":"function walk(ast, _ref) {\n  let {\n    enter,\n    leave\n  } = _ref;\n  return visit(ast, null, enter, leave);\n}\n\nlet should_skip = false;\nlet should_remove = false;\nlet replacement = null;\nconst context = {\n  skip: () => should_skip = true,\n  remove: () => should_remove = true,\n  replace: node => replacement = node\n};\n\nfunction replace(parent, prop, index, node) {\n  if (parent) {\n    if (index !== null) {\n      parent[prop][index] = node;\n    } else {\n      parent[prop] = node;\n    }\n  }\n}\n\nfunction remove(parent, prop, index) {\n  if (parent) {\n    if (index !== null) {\n      parent[prop].splice(index, 1);\n    } else {\n      delete parent[prop];\n    }\n  }\n}\n\nfunction visit(node, parent, enter, leave, prop, index) {\n  if (node) {\n    if (enter) {\n      const _should_skip = should_skip;\n      const _should_remove = should_remove;\n      const _replacement = replacement;\n      should_skip = false;\n      should_remove = false;\n      replacement = null;\n      enter.call(context, node, parent, prop, index);\n\n      if (replacement) {\n        node = replacement;\n        replace(parent, prop, index, node);\n      }\n\n      if (should_remove) {\n        remove(parent, prop, index);\n      }\n\n      const skipped = should_skip;\n      const removed = should_remove;\n      should_skip = _should_skip;\n      should_remove = _should_remove;\n      replacement = _replacement;\n      if (skipped) return node;\n      if (removed) return null;\n    }\n\n    for (const key in node) {\n      const value = node[key];\n\n      if (typeof value !== 'object') {\n        continue;\n      } else if (Array.isArray(value)) {\n        for (let j = 0, k = 0; j < value.length; j += 1, k += 1) {\n          if (value[j] !== null && typeof value[j].type === 'string') {\n            if (!visit(value[j], node, enter, leave, key, k)) {\n              // removed\n              j--;\n            }\n          }\n        }\n      } else if (value !== null && typeof value.type === 'string') {\n        visit(value, node, enter, leave, key, null);\n      }\n    }\n\n    if (leave) {\n      const _replacement = replacement;\n      const _should_remove = should_remove;\n      replacement = null;\n      should_remove = false;\n      leave.call(context, node, parent, prop, index);\n\n      if (replacement) {\n        node = replacement;\n        replace(parent, prop, index, node);\n      }\n\n      if (should_remove) {\n        remove(parent, prop, index);\n      }\n\n      const removed = should_remove;\n      replacement = _replacement;\n      should_remove = _should_remove;\n      if (removed) return null;\n    }\n  }\n\n  return node;\n}\n\nexport { walk };","map":{"version":3,"names":["walk","ast","enter","leave","visit","should_skip","should_remove","replacement","context","skip","remove","replace","node","parent","prop","index","splice","_should_skip","_should_remove","_replacement","call","skipped","removed","key","value","Array","isArray","j","k","length","type"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/estree-walker/src/estree-walker.js"],"sourcesContent":["function walk(ast, { enter, leave }) {\n\treturn visit(ast, null, enter, leave);\n}\n\nlet should_skip = false;\nlet should_remove = false;\nlet replacement = null;\nconst context = {\n\tskip: () => should_skip = true,\n\tremove: () => should_remove = true,\n\treplace: (node) => replacement = node\n};\n\nfunction replace(parent, prop, index, node) {\n\tif (parent) {\n\t\tif (index !== null) {\n\t\t\tparent[prop][index] = node;\n\t\t} else {\n\t\t\tparent[prop] = node;\n\t\t}\n\t}\n}\n\nfunction remove(parent, prop, index) {\n\tif (parent) {\n\t\tif (index !== null) {\n\t\t\tparent[prop].splice(index, 1);\n\t\t} else {\n\t\t\tdelete parent[prop];\n\t\t}\n\t}\n}\n\nfunction visit(\n\tnode,\n\tparent,\n\tenter,\n\tleave,\n\tprop,\n\tindex\n) {\n\tif (node) {\n\t\tif (enter) {\n\t\t\tconst _should_skip = should_skip;\n\t\t\tconst _should_remove = should_remove;\n\t\t\tconst _replacement = replacement;\n\t\t\tshould_skip = false;\n\t\t\tshould_remove = false;\n\t\t\treplacement = null;\n\n\t\t\tenter.call(context, node, parent, prop, index);\n\n\t\t\tif (replacement) {\n\t\t\t\tnode = replacement;\n\t\t\t\treplace(parent, prop, index, node);\n\t\t\t}\n\n\t\t\tif (should_remove) {\n\t\t\t\tremove(parent, prop, index);\n\t\t\t}\n\n\t\t\tconst skipped = should_skip;\n\t\t\tconst removed = should_remove;\n\n\t\t\tshould_skip = _should_skip;\n\t\t\tshould_remove = _should_remove;\n\t\t\treplacement = _replacement;\n\n\t\t\tif (skipped) return node;\n\t\t\tif (removed) return null;\n\t\t}\n\n\t\tfor (const key in node) {\n\t\t\tconst value = (node )[key];\n\n\t\t\tif (typeof value !== 'object') {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\telse if (Array.isArray(value)) {\n\t\t\t\tfor (let j = 0, k = 0; j < value.length; j += 1, k += 1) {\n\t\t\t\t\tif (value[j] !== null && typeof value[j].type === 'string') {\n\t\t\t\t\t\tif (!visit(value[j], node, enter, leave, key, k)) {\n\t\t\t\t\t\t\t// removed\n\t\t\t\t\t\t\tj--;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\telse if (value !== null && typeof value.type === 'string') {\n\t\t\t\tvisit(value, node, enter, leave, key, null);\n\t\t\t}\n\t\t}\n\n\t\tif (leave) {\n\t\t\tconst _replacement = replacement;\n\t\t\tconst _should_remove = should_remove;\n\t\t\treplacement = null;\n\t\t\tshould_remove = false;\n\n\t\t\tleave.call(context, node, parent, prop, index);\n\n\t\t\tif (replacement) {\n\t\t\t\tnode = replacement;\n\t\t\t\treplace(parent, prop, index, node);\n\t\t\t}\n\n\t\t\tif (should_remove) {\n\t\t\t\tremove(parent, prop, index);\n\t\t\t}\n\n\t\t\tconst removed = should_remove;\n\n\t\t\treplacement = _replacement;\n\t\t\tshould_remove = _should_remove;\n\n\t\t\tif (removed) return null;\n\t\t}\n\t}\n\n\treturn node;\n}\n\nexport { walk };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}