{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nconst meta = {\n  messages: {\n    readonlySpread: 'Flow type with spread property and all readonly properties must be ' + 'wrapped in \\'$ReadOnly<…>\\' to prevent accidental loss of readonly-ness.'\n  }\n};\n\nconst create = context => {\n  return {\n    TypeAlias(node) {\n      if (node.right.type === 'GenericTypeAnnotation' && node.right.id.name === '$ReadOnly') {// it's already $ReadOnly<…>, nothing to do\n      } else if (node.right.type === 'ObjectTypeAnnotation') {\n        // let's iterate all props and if everything is readonly then throw\n        let shouldThrow = false;\n        let hasSpread = false;\n\n        for (const property of node.right.properties) {\n          if (property.type === 'ObjectTypeProperty') {\n            if (property.variance && property.variance.kind === 'plus') {\n              shouldThrow = true;\n            } else {\n              shouldThrow = false;\n              break;\n            }\n          } else if (property.type === 'ObjectTypeSpreadProperty') {\n            hasSpread = true;\n          }\n        }\n\n        if (hasSpread === true && shouldThrow === true) {\n          context.report({\n            messageId: 'readonlySpread',\n            node: node.right\n          });\n        }\n      }\n    }\n\n  };\n};\n\nvar _default = {\n  create,\n  meta\n};\nexports.default = _default;\nmodule.exports = exports.default;","map":{"version":3,"names":["Object","defineProperty","exports","value","default","meta","messages","readonlySpread","create","context","TypeAlias","node","right","type","id","name","shouldThrow","hasSpread","property","properties","variance","kind","report","messageId","_default","module"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/eslint-plugin-flowtype/dist/rules/useReadOnlySpread.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nconst meta = {\n  messages: {\n    readonlySpread: 'Flow type with spread property and all readonly properties must be ' + 'wrapped in \\'$ReadOnly<…>\\' to prevent accidental loss of readonly-ness.'\n  }\n};\n\nconst create = context => {\n  return {\n    TypeAlias(node) {\n      if (node.right.type === 'GenericTypeAnnotation' && node.right.id.name === '$ReadOnly') {// it's already $ReadOnly<…>, nothing to do\n      } else if (node.right.type === 'ObjectTypeAnnotation') {\n        // let's iterate all props and if everything is readonly then throw\n        let shouldThrow = false;\n        let hasSpread = false;\n\n        for (const property of node.right.properties) {\n          if (property.type === 'ObjectTypeProperty') {\n            if (property.variance && property.variance.kind === 'plus') {\n              shouldThrow = true;\n            } else {\n              shouldThrow = false;\n              break;\n            }\n          } else if (property.type === 'ObjectTypeSpreadProperty') {\n            hasSpread = true;\n          }\n        }\n\n        if (hasSpread === true && shouldThrow === true) {\n          context.report({\n            messageId: 'readonlySpread',\n            node: node.right\n          });\n        }\n      }\n    }\n\n  };\n};\n\nvar _default = {\n  create,\n  meta\n};\nexports.default = _default;\nmodule.exports = exports.default;"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAC3CC,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;AACA,MAAMC,IAAI,GAAG;EACXC,QAAQ,EAAE;IACRC,cAAc,EAAE,wEAAwE;EADhF;AADC,CAAb;;AAMA,MAAMC,MAAM,GAAGC,OAAO,IAAI;EACxB,OAAO;IACLC,SAAS,CAACC,IAAD,EAAO;MACd,IAAIA,IAAI,CAACC,KAAL,CAAWC,IAAX,KAAoB,uBAApB,IAA+CF,IAAI,CAACC,KAAL,CAAWE,EAAX,CAAcC,IAAd,KAAuB,WAA1E,EAAuF,CAAC;MACvF,CADD,MACO,IAAIJ,IAAI,CAACC,KAAL,CAAWC,IAAX,KAAoB,sBAAxB,EAAgD;QACrD;QACA,IAAIG,WAAW,GAAG,KAAlB;QACA,IAAIC,SAAS,GAAG,KAAhB;;QAEA,KAAK,MAAMC,QAAX,IAAuBP,IAAI,CAACC,KAAL,CAAWO,UAAlC,EAA8C;UAC5C,IAAID,QAAQ,CAACL,IAAT,KAAkB,oBAAtB,EAA4C;YAC1C,IAAIK,QAAQ,CAACE,QAAT,IAAqBF,QAAQ,CAACE,QAAT,CAAkBC,IAAlB,KAA2B,MAApD,EAA4D;cAC1DL,WAAW,GAAG,IAAd;YACD,CAFD,MAEO;cACLA,WAAW,GAAG,KAAd;cACA;YACD;UACF,CAPD,MAOO,IAAIE,QAAQ,CAACL,IAAT,KAAkB,0BAAtB,EAAkD;YACvDI,SAAS,GAAG,IAAZ;UACD;QACF;;QAED,IAAIA,SAAS,KAAK,IAAd,IAAsBD,WAAW,KAAK,IAA1C,EAAgD;UAC9CP,OAAO,CAACa,MAAR,CAAe;YACbC,SAAS,EAAE,gBADE;YAEbZ,IAAI,EAAEA,IAAI,CAACC;UAFE,CAAf;QAID;MACF;IACF;;EA5BI,CAAP;AA+BD,CAhCD;;AAkCA,IAAIY,QAAQ,GAAG;EACbhB,MADa;EAEbH;AAFa,CAAf;AAIAH,OAAO,CAACE,OAAR,GAAkBoB,QAAlB;AACAC,MAAM,CAACvB,OAAP,GAAiBA,OAAO,CAACE,OAAzB"},"metadata":{},"sourceType":"script"}