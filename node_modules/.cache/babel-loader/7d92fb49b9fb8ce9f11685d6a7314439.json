{"ast":null,"code":"'use strict';\n\nmodule.exports = function (trimStart, t) {\n  t.test('normal cases', function (st) {\n    st.equal(trimStart(' \\t\\na \\t\\n'), 'a \\t\\n', 'strips whitespace off the left side');\n    st.equal(trimStart('a'), 'a', 'noop when no whitespace');\n    var allWhitespaceChars = '\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF';\n    st.equal(trimStart(allWhitespaceChars + 'a' + allWhitespaceChars), 'a' + allWhitespaceChars, 'all expected whitespace chars are trimmed');\n    st.end();\n  }); // see https://codeblog.jonskeet.uk/2014/12/01/when-is-an-identifier-not-an-identifier-attack-of-the-mongolian-vowel-separator/\n\n  var mongolianVowelSeparator = '\\u180E';\n  var mvsIsWS = /^\\s$/.test(mongolianVowelSeparator);\n  t.test('mongolian vowel separator: unicode >= 4 && < 6.3', function (st) {\n    st.equal(trimStart(mongolianVowelSeparator + 'a' + mongolianVowelSeparator), (mvsIsWS ? '' : mongolianVowelSeparator) + 'a' + mongolianVowelSeparator, 'mongolian vowel separator is ' + (mvsIsWS ? '' : 'not ') + 'whitespace');\n    st.end();\n  });\n  t.test('zero-width spaces', function (st) {\n    var zeroWidth = '\\u200b';\n    st.equal(trimStart(zeroWidth), zeroWidth, 'zero width space does not trim');\n    st.end();\n  });\n};","map":{"version":3,"names":["module","exports","trimStart","t","test","st","equal","allWhitespaceChars","end","mongolianVowelSeparator","mvsIsWS","zeroWidth"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/string.prototype.trimstart/test/tests.js"],"sourcesContent":["'use strict';\n\nmodule.exports = function (trimStart, t) {\n\tt.test('normal cases', function (st) {\n\t\tst.equal(trimStart(' \\t\\na \\t\\n'), 'a \\t\\n', 'strips whitespace off the left side');\n\t\tst.equal(trimStart('a'), 'a', 'noop when no whitespace');\n\n\t\tvar allWhitespaceChars = '\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF';\n\t\tst.equal(trimStart(allWhitespaceChars + 'a' + allWhitespaceChars), 'a' + allWhitespaceChars, 'all expected whitespace chars are trimmed');\n\n\t\tst.end();\n\t});\n\n\t// see https://codeblog.jonskeet.uk/2014/12/01/when-is-an-identifier-not-an-identifier-attack-of-the-mongolian-vowel-separator/\n\tvar mongolianVowelSeparator = '\\u180E';\n\tvar mvsIsWS = (/^\\s$/).test(mongolianVowelSeparator);\n\tt.test('mongolian vowel separator: unicode >= 4 && < 6.3', function (st) {\n\t\tst.equal(\n\t\t\ttrimStart(mongolianVowelSeparator + 'a' + mongolianVowelSeparator),\n\t\t\t(mvsIsWS ? '' : mongolianVowelSeparator) + 'a' + mongolianVowelSeparator,\n\t\t\t'mongolian vowel separator is ' + (mvsIsWS ? '' : 'not ') + 'whitespace'\n\t\t);\n\t\tst.end();\n\t});\n\n\tt.test('zero-width spaces', function (st) {\n\t\tvar zeroWidth = '\\u200b';\n\t\tst.equal(trimStart(zeroWidth), zeroWidth, 'zero width space does not trim');\n\t\tst.end();\n\t});\n};\n"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,OAAP,GAAiB,UAAUC,SAAV,EAAqBC,CAArB,EAAwB;EACxCA,CAAC,CAACC,IAAF,CAAO,cAAP,EAAuB,UAAUC,EAAV,EAAc;IACpCA,EAAE,CAACC,KAAH,CAASJ,SAAS,CAAC,aAAD,CAAlB,EAAmC,QAAnC,EAA6C,qCAA7C;IACAG,EAAE,CAACC,KAAH,CAASJ,SAAS,CAAC,GAAD,CAAlB,EAAyB,GAAzB,EAA8B,yBAA9B;IAEA,IAAIK,kBAAkB,GAAG,0IAAzB;IACAF,EAAE,CAACC,KAAH,CAASJ,SAAS,CAACK,kBAAkB,GAAG,GAArB,GAA2BA,kBAA5B,CAAlB,EAAmE,MAAMA,kBAAzE,EAA6F,2CAA7F;IAEAF,EAAE,CAACG,GAAH;EACA,CARD,EADwC,CAWxC;;EACA,IAAIC,uBAAuB,GAAG,QAA9B;EACA,IAAIC,OAAO,GAAI,MAAD,CAASN,IAAT,CAAcK,uBAAd,CAAd;EACAN,CAAC,CAACC,IAAF,CAAO,kDAAP,EAA2D,UAAUC,EAAV,EAAc;IACxEA,EAAE,CAACC,KAAH,CACCJ,SAAS,CAACO,uBAAuB,GAAG,GAA1B,GAAgCA,uBAAjC,CADV,EAEC,CAACC,OAAO,GAAG,EAAH,GAAQD,uBAAhB,IAA2C,GAA3C,GAAiDA,uBAFlD,EAGC,mCAAmCC,OAAO,GAAG,EAAH,GAAQ,MAAlD,IAA4D,YAH7D;IAKAL,EAAE,CAACG,GAAH;EACA,CAPD;EASAL,CAAC,CAACC,IAAF,CAAO,mBAAP,EAA4B,UAAUC,EAAV,EAAc;IACzC,IAAIM,SAAS,GAAG,QAAhB;IACAN,EAAE,CAACC,KAAH,CAASJ,SAAS,CAACS,SAAD,CAAlB,EAA+BA,SAA/B,EAA0C,gCAA1C;IACAN,EAAE,CAACG,GAAH;EACA,CAJD;AAKA,CA5BD"},"metadata":{},"sourceType":"script"}