{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nfunction assertTypeScriptVueExtensionSupport(configuration) {\n  // We need to import template compiler for vue lazily because it cannot be included it\n  // as direct dependency because it is an optional dependency of fork-ts-checker-webpack-plugin.\n  // Since its version must not mismatch with user-installed Vue.js,\n  // we should let the users install template compiler for vue by themselves.\n  const compilerName = configuration.compiler;\n\n  try {\n    require(compilerName);\n  } catch (error) {\n    throw new Error([`Could not initialize '${compilerName}'. When you use 'typescript.extensions.vue' option, make sure to install '${compilerName}' and that the version matches that of 'vue'.`, `Error details: ${error.message}`].join('\\n'));\n  }\n}\n\nexports.assertTypeScriptVueExtensionSupport = assertTypeScriptVueExtensionSupport;","map":{"version":3,"names":["Object","defineProperty","exports","value","assertTypeScriptVueExtensionSupport","configuration","compilerName","compiler","require","error","Error","message","join"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/fork-ts-checker-webpack-plugin/lib/typescript-reporter/extension/vue/TypeScriptVueExtensionSupport.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction assertTypeScriptVueExtensionSupport(configuration) {\n    // We need to import template compiler for vue lazily because it cannot be included it\n    // as direct dependency because it is an optional dependency of fork-ts-checker-webpack-plugin.\n    // Since its version must not mismatch with user-installed Vue.js,\n    // we should let the users install template compiler for vue by themselves.\n    const compilerName = configuration.compiler;\n    try {\n        require(compilerName);\n    }\n    catch (error) {\n        throw new Error([\n            `Could not initialize '${compilerName}'. When you use 'typescript.extensions.vue' option, make sure to install '${compilerName}' and that the version matches that of 'vue'.`,\n            `Error details: ${error.message}`,\n        ].join('\\n'));\n    }\n}\nexports.assertTypeScriptVueExtensionSupport = assertTypeScriptVueExtensionSupport;\n"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;;AACA,SAASC,mCAAT,CAA6CC,aAA7C,EAA4D;EACxD;EACA;EACA;EACA;EACA,MAAMC,YAAY,GAAGD,aAAa,CAACE,QAAnC;;EACA,IAAI;IACAC,OAAO,CAACF,YAAD,CAAP;EACH,CAFD,CAGA,OAAOG,KAAP,EAAc;IACV,MAAM,IAAIC,KAAJ,CAAU,CACX,yBAAwBJ,YAAa,6EAA4EA,YAAa,+CADnH,EAEX,kBAAiBG,KAAK,CAACE,OAAQ,EAFpB,EAGdC,IAHc,CAGT,IAHS,CAAV,CAAN;EAIH;AACJ;;AACDV,OAAO,CAACE,mCAAR,GAA8CA,mCAA9C"},"metadata":{},"sourceType":"script"}