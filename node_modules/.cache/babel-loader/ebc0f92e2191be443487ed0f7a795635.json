{"ast":null,"code":"const handler = {\n  scheme: \"http\",\n  domainHost: true,\n  parse: function (components, options) {\n    //report missing host\n    if (!components.host) {\n      components.error = components.error || \"HTTP URIs must have a host.\";\n    }\n\n    return components;\n  },\n  serialize: function (components, options) {\n    const secure = String(components.scheme).toLowerCase() === \"https\"; //normalize the default port\n\n    if (components.port === (secure ? 443 : 80) || components.port === \"\") {\n      components.port = undefined;\n    } //normalize the empty path\n\n\n    if (!components.path) {\n      components.path = \"/\";\n    } //NOTE: We do not parse query strings for HTTP URIs\n    //as WWW Form Url Encoded query strings are part of the HTML4+ spec,\n    //and not the HTTP spec.\n\n\n    return components;\n  }\n};\nexport default handler;","map":{"version":3,"mappings":"AAEA,MAAMA,OAAO,GAAoB;EAChCC,MAAM,EAAG,MADuB;EAGhCC,UAAU,EAAG,IAHmB;EAKhCC,KAAK,EAAG,UAAUC,UAAV,EAAoCC,OAApC,EAAsD;IAC7D;IACA,IAAI,CAACD,UAAU,CAACE,IAAhB,EAAsB;MACrBF,UAAU,CAACG,KAAX,GAAmBH,UAAU,CAACG,KAAX,IAAoB,6BAAvC;IACA;;IAED,OAAOH,UAAP;EACA,CAZ+B;EAchCI,SAAS,EAAG,UAAUJ,UAAV,EAAoCC,OAApC,EAAsD;IACjE,MAAMI,MAAM,GAAGC,MAAM,CAACN,UAAU,CAACH,MAAZ,CAAN,CAA0BU,WAA1B,OAA4C,OAA3D,CADiE,CAGjE;;IACA,IAAIP,UAAU,CAACQ,IAAX,MAAqBH,MAAM,GAAG,GAAH,GAAS,EAApC,KAA2CL,UAAU,CAACQ,IAAX,KAAoB,EAAnE,EAAuE;MACtER,UAAU,CAACQ,IAAX,GAAkBC,SAAlB;IACA,CANgE,CAQjE;;;IACA,IAAI,CAACT,UAAU,CAACU,IAAhB,EAAsB;MACrBV,UAAU,CAACU,IAAX,GAAkB,GAAlB;IACA,CAXgE,CAajE;IACA;IACA;;;IAEA,OAAOV,UAAP;EACA;AAhC+B,CAAjC;AAmCA,eAAeJ,OAAf","names":["handler","scheme","domainHost","parse","components","options","host","error","serialize","secure","String","toLowerCase","port","undefined","path"],"sources":["../../../src/schemes/http.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}