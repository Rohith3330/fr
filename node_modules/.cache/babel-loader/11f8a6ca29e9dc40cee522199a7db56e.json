{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Registry = void 0;\n\nconst array_flatten_1 = __importDefault(require(\"array-flatten\"));\n\nconst dns_equal_1 = __importDefault(require(\"dns-equal\"));\n\nconst service_1 = __importDefault(require(\"./service\"));\n\nconst REANNOUNCE_MAX_MS = 60 * 60 * 1000;\nconst REANNOUNCE_FACTOR = 3;\n\nclass Registry {\n  constructor(server) {\n    this.services = [];\n    this.server = server;\n  }\n\n  publish(config) {\n    function start(service, registry, opts) {\n      if (service.activated) return;\n      service.activated = true;\n      registry.services.push(service);\n      if (!(service instanceof service_1.default)) return;\n\n      if (opts.probe) {\n        registry.probe(registry.server.mdns, service, exists => {\n          if (exists) {\n            service.stop();\n            console.log(new Error('Service name is already in use on the network'));\n            return;\n          }\n\n          registry.announce(registry.server, service);\n        });\n      } else {\n        registry.announce(registry.server, service);\n      }\n    }\n\n    function stop(service, registry, callback) {\n      if (!service.activated) return;\n      if (!(service instanceof service_1.default)) return;\n      registry.teardown(registry.server, service, callback);\n      const index = registry.services.indexOf(service);\n      if (index !== -1) registry.services.splice(index, 1);\n    }\n\n    const service = new service_1.default(config);\n    service.start = start.bind(null, service, this);\n    service.stop = stop.bind(null, service, this);\n    service.start({\n      probe: config.probe !== false\n    });\n    return service;\n  }\n\n  unpublishAll(callback) {\n    this.teardown(this.server, this.services, callback);\n    this.services = [];\n  }\n\n  destroy() {\n    this.services.map(service => service.destroyed = true);\n  }\n\n  probe(mdns, service, callback) {\n    var sent = false;\n    var retries = 0;\n    var timer;\n\n    const send = () => {\n      if (!service.activated || service.destroyed) return;\n      mdns.query(service.fqdn, 'ANY', function () {\n        sent = true;\n        timer = setTimeout(++retries < 3 ? send : done, 250);\n        timer.unref();\n      });\n    };\n\n    const onresponse = packet => {\n      if (!sent) return;\n      if (packet.answers.some(matchRR) || packet.additionals.some(matchRR)) done(true);\n    };\n\n    const matchRR = rr => {\n      return (0, dns_equal_1.default)(rr.name, service.fqdn);\n    };\n\n    const done = exists => {\n      mdns.removeListener('response', onresponse);\n      clearTimeout(timer);\n      callback(!!exists);\n    };\n\n    mdns.on('response', onresponse);\n    setTimeout(send, Math.random() * 250);\n  }\n\n  announce(server, service) {\n    var delay = 1000;\n    var packet = service.records();\n    server.register(packet);\n\n    const broadcast = () => {\n      if (!service.activated || service.destroyed) return;\n      server.mdns.respond(packet, function () {\n        if (!service.published) {\n          service.activated = true;\n          service.published = true;\n          service.emit('up');\n        }\n\n        delay = delay * REANNOUNCE_FACTOR;\n\n        if (delay < REANNOUNCE_MAX_MS && !service.destroyed) {\n          setTimeout(broadcast, delay).unref();\n        }\n      });\n    };\n\n    broadcast();\n  }\n\n  teardown(server, services, callback) {\n    if (!Array.isArray(services)) services = [services];\n    services = services.filter(service => service.activated);\n    var records = array_flatten_1.default.depth(services.map(function (service) {\n      service.activated = false;\n      var records = service.records();\n      records.forEach(record => {\n        record.ttl = 0;\n      });\n      return records;\n    }), 1);\n    if (records.length === 0) return callback && callback();\n    server.unregister(records);\n    server.mdns.respond(records, function () {\n      services.forEach(function (service) {\n        service.published = false;\n      });\n\n      if (typeof callback === \"function\") {\n        callback.apply(null, arguments);\n      }\n    });\n  }\n\n}\n\nexports.Registry = Registry;\nexports.default = Registry;","map":{"version":3,"mappings":"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","names":["REANNOUNCE_MAX_MS","REANNOUNCE_FACTOR","Registry","constructor","server","publish","config","start","service","registry","opts","activated","services","push","service_1","probe","mdns","exists","stop","console","log","Error","announce","callback","teardown","index","indexOf","splice","bind","unpublishAll","destroy","map","destroyed","sent","retries","timer","send","query","fqdn","setTimeout","done","unref","onresponse","packet","answers","some","matchRR","additionals","rr","name","removeListener","clearTimeout","on","Math","random","delay","records","register","broadcast","respond","published","emit","Array","isArray","filter","array_flatten_1","depth","forEach","record","ttl","length","unregister","apply","arguments","exports"],"sources":["../../src/lib/registry.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}