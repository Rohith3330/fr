{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _lodash = _interopRequireDefault(require(\"lodash\"));\n\nvar _utilities = require(\"../../utilities\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar _default = (context, report, typeForMessage) => {\n  const sourceCode = context.getSourceCode();\n\n  const getColon = (node, typeAnnotation) => {\n    if (node.type === 'FunctionTypeParam') {\n      return sourceCode.getFirstToken(node, node.optional ? 2 : 1);\n    }\n\n    return sourceCode.getFirstToken(typeAnnotation);\n  };\n\n  return node => {\n    const typeAnnotation = _lodash.default.get(node, 'typeAnnotation') || _lodash.default.get(node, 'left.typeAnnotation');\n\n    if (typeAnnotation) {\n      report({\n        colon: getColon(node, typeAnnotation),\n        name: (0, _utilities.quoteName)((0, _utilities.getParameterName)(node, context)),\n        node,\n        type: typeForMessage + ' type annotation'\n      });\n    }\n  };\n};\n\nexports.default = _default;\nmodule.exports = exports.default;","map":{"version":3,"names":["Object","defineProperty","exports","value","default","_lodash","_interopRequireDefault","require","_utilities","obj","__esModule","_default","context","report","typeForMessage","sourceCode","getSourceCode","getColon","node","typeAnnotation","type","getFirstToken","optional","get","colon","name","quoteName","getParameterName","module"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/eslint-plugin-flowtype/dist/rules/typeColonSpacing/evaluateTypical.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _lodash = _interopRequireDefault(require(\"lodash\"));\n\nvar _utilities = require(\"../../utilities\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar _default = (context, report, typeForMessage) => {\n  const sourceCode = context.getSourceCode();\n\n  const getColon = (node, typeAnnotation) => {\n    if (node.type === 'FunctionTypeParam') {\n      return sourceCode.getFirstToken(node, node.optional ? 2 : 1);\n    }\n\n    return sourceCode.getFirstToken(typeAnnotation);\n  };\n\n  return node => {\n    const typeAnnotation = _lodash.default.get(node, 'typeAnnotation') || _lodash.default.get(node, 'left.typeAnnotation');\n\n    if (typeAnnotation) {\n      report({\n        colon: getColon(node, typeAnnotation),\n        name: (0, _utilities.quoteName)((0, _utilities.getParameterName)(node, context)),\n        node,\n        type: typeForMessage + ' type annotation'\n      });\n    }\n  };\n};\n\nexports.default = _default;\nmodule.exports = exports.default;"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAC3CC,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAIC,OAAO,GAAGC,sBAAsB,CAACC,OAAO,CAAC,QAAD,CAAR,CAApC;;AAEA,IAAIC,UAAU,GAAGD,OAAO,CAAC,iBAAD,CAAxB;;AAEA,SAASD,sBAAT,CAAgCG,GAAhC,EAAqC;EAAE,OAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;IAAEL,OAAO,EAAEK;EAAX,CAArC;AAAwD;;AAE/F,IAAIE,QAAQ,GAAG,CAACC,OAAD,EAAUC,MAAV,EAAkBC,cAAlB,KAAqC;EAClD,MAAMC,UAAU,GAAGH,OAAO,CAACI,aAAR,EAAnB;;EAEA,MAAMC,QAAQ,GAAG,CAACC,IAAD,EAAOC,cAAP,KAA0B;IACzC,IAAID,IAAI,CAACE,IAAL,KAAc,mBAAlB,EAAuC;MACrC,OAAOL,UAAU,CAACM,aAAX,CAAyBH,IAAzB,EAA+BA,IAAI,CAACI,QAAL,GAAgB,CAAhB,GAAoB,CAAnD,CAAP;IACD;;IAED,OAAOP,UAAU,CAACM,aAAX,CAAyBF,cAAzB,CAAP;EACD,CAND;;EAQA,OAAOD,IAAI,IAAI;IACb,MAAMC,cAAc,GAAGd,OAAO,CAACD,OAAR,CAAgBmB,GAAhB,CAAoBL,IAApB,EAA0B,gBAA1B,KAA+Cb,OAAO,CAACD,OAAR,CAAgBmB,GAAhB,CAAoBL,IAApB,EAA0B,qBAA1B,CAAtE;;IAEA,IAAIC,cAAJ,EAAoB;MAClBN,MAAM,CAAC;QACLW,KAAK,EAAEP,QAAQ,CAACC,IAAD,EAAOC,cAAP,CADV;QAELM,IAAI,EAAE,CAAC,GAAGjB,UAAU,CAACkB,SAAf,EAA0B,CAAC,GAAGlB,UAAU,CAACmB,gBAAf,EAAiCT,IAAjC,EAAuCN,OAAvC,CAA1B,CAFD;QAGLM,IAHK;QAILE,IAAI,EAAEN,cAAc,GAAG;MAJlB,CAAD,CAAN;IAMD;EACF,CAXD;AAYD,CAvBD;;AAyBAZ,OAAO,CAACE,OAAR,GAAkBO,QAAlB;AACAiB,MAAM,CAAC1B,OAAP,GAAiBA,OAAO,CAACE,OAAzB"},"metadata":{},"sourceType":"script"}