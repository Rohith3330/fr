{"ast":null,"code":"'use strict';\n/* eslint-disable es-x/no-bigint -- safe */\n\nvar $ = require('../internals/export');\n\nvar NumericRangeIterator = require('../internals/numeric-range-iterator'); // `BigInt.range` method\n// https://github.com/tc39/proposal-Number.range\n\n\nif (typeof BigInt == 'function') {\n  $({\n    target: 'BigInt',\n    stat: true,\n    forced: true\n  }, {\n    range: function range(start, end, option) {\n      return new NumericRangeIterator(start, end, option, 'bigint', BigInt(0), BigInt(1));\n    }\n  });\n}","map":{"version":3,"names":["$","require","NumericRangeIterator","BigInt","target","stat","forced","range","start","end","option"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/core-js/modules/esnext.bigint.range.js"],"sourcesContent":["'use strict';\n/* eslint-disable es-x/no-bigint -- safe */\nvar $ = require('../internals/export');\nvar NumericRangeIterator = require('../internals/numeric-range-iterator');\n\n// `BigInt.range` method\n// https://github.com/tc39/proposal-Number.range\nif (typeof BigInt == 'function') {\n  $({ target: 'BigInt', stat: true, forced: true }, {\n    range: function range(start, end, option) {\n      return new NumericRangeIterator(start, end, option, 'bigint', BigInt(0), BigInt(1));\n    }\n  });\n}\n"],"mappings":"AAAA;AACA;;AACA,IAAIA,CAAC,GAAGC,OAAO,CAAC,qBAAD,CAAf;;AACA,IAAIC,oBAAoB,GAAGD,OAAO,CAAC,qCAAD,CAAlC,C,CAEA;AACA;;;AACA,IAAI,OAAOE,MAAP,IAAiB,UAArB,EAAiC;EAC/BH,CAAC,CAAC;IAAEI,MAAM,EAAE,QAAV;IAAoBC,IAAI,EAAE,IAA1B;IAAgCC,MAAM,EAAE;EAAxC,CAAD,EAAiD;IAChDC,KAAK,EAAE,SAASA,KAAT,CAAeC,KAAf,EAAsBC,GAAtB,EAA2BC,MAA3B,EAAmC;MACxC,OAAO,IAAIR,oBAAJ,CAAyBM,KAAzB,EAAgCC,GAAhC,EAAqCC,MAArC,EAA6C,QAA7C,EAAuDP,MAAM,CAAC,CAAD,CAA7D,EAAkEA,MAAM,CAAC,CAAD,CAAxE,CAAP;IACD;EAH+C,CAAjD,CAAD;AAKD"},"metadata":{},"sourceType":"script"}