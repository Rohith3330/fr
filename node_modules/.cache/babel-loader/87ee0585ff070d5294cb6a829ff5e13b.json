{"ast":null,"code":"/**\n * @fileoverview Enforce a maximum number of classes per file\n * @author James Garbutt <https://github.com/43081j>\n */\n\"use strict\"; //------------------------------------------------------------------------------\n// Requirements\n//------------------------------------------------------------------------------\n//------------------------------------------------------------------------------\n// Rule Definition\n//------------------------------------------------------------------------------\n\n/** @type {import('../shared/types').Rule} */\n\nmodule.exports = {\n  meta: {\n    type: \"suggestion\",\n    docs: {\n      description: \"Enforce a maximum number of classes per file\",\n      recommended: false,\n      url: \"https://eslint.org/docs/rules/max-classes-per-file\"\n    },\n    schema: [{\n      oneOf: [{\n        type: \"integer\",\n        minimum: 1\n      }, {\n        type: \"object\",\n        properties: {\n          ignoreExpressions: {\n            type: \"boolean\"\n          },\n          max: {\n            type: \"integer\",\n            minimum: 1\n          }\n        },\n        additionalProperties: false\n      }]\n    }],\n    messages: {\n      maximumExceeded: \"File has too many classes ({{ classCount }}). Maximum allowed is {{ max }}.\"\n    }\n  },\n\n  create(context) {\n    const [option = {}] = context.options;\n    const [ignoreExpressions, max] = typeof option === \"number\" ? [false, option || 1] : [option.ignoreExpressions, option.max || 1];\n    let classCount = 0;\n    return {\n      Program() {\n        classCount = 0;\n      },\n\n      \"Program:exit\"(node) {\n        if (classCount > max) {\n          context.report({\n            node,\n            messageId: \"maximumExceeded\",\n            data: {\n              classCount,\n              max\n            }\n          });\n        }\n      },\n\n      \"ClassDeclaration\"() {\n        classCount++;\n      },\n\n      \"ClassExpression\"() {\n        if (!ignoreExpressions) {\n          classCount++;\n        }\n      }\n\n    };\n  }\n\n};","map":{"version":3,"names":["module","exports","meta","type","docs","description","recommended","url","schema","oneOf","minimum","properties","ignoreExpressions","max","additionalProperties","messages","maximumExceeded","create","context","option","options","classCount","Program","node","report","messageId","data"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/eslint/lib/rules/max-classes-per-file.js"],"sourcesContent":["/**\n * @fileoverview Enforce a maximum number of classes per file\n * @author James Garbutt <https://github.com/43081j>\n */\n\"use strict\";\n\n//------------------------------------------------------------------------------\n// Requirements\n//------------------------------------------------------------------------------\n\n\n//------------------------------------------------------------------------------\n// Rule Definition\n//------------------------------------------------------------------------------\n\n/** @type {import('../shared/types').Rule} */\nmodule.exports = {\n    meta: {\n        type: \"suggestion\",\n\n        docs: {\n            description: \"Enforce a maximum number of classes per file\",\n            recommended: false,\n            url: \"https://eslint.org/docs/rules/max-classes-per-file\"\n        },\n\n        schema: [\n            {\n                oneOf: [\n                    {\n                        type: \"integer\",\n                        minimum: 1\n                    },\n                    {\n                        type: \"object\",\n                        properties: {\n                            ignoreExpressions: {\n                                type: \"boolean\"\n                            },\n                            max: {\n                                type: \"integer\",\n                                minimum: 1\n                            }\n                        },\n                        additionalProperties: false\n                    }\n                ]\n            }\n        ],\n\n        messages: {\n            maximumExceeded: \"File has too many classes ({{ classCount }}). Maximum allowed is {{ max }}.\"\n        }\n    },\n    create(context) {\n        const [option = {}] = context.options;\n        const [ignoreExpressions, max] = typeof option === \"number\"\n            ? [false, option || 1]\n            : [option.ignoreExpressions, option.max || 1];\n\n        let classCount = 0;\n\n        return {\n            Program() {\n                classCount = 0;\n            },\n            \"Program:exit\"(node) {\n                if (classCount > max) {\n                    context.report({\n                        node,\n                        messageId: \"maximumExceeded\",\n                        data: {\n                            classCount,\n                            max\n                        }\n                    });\n                }\n            },\n            \"ClassDeclaration\"() {\n                classCount++;\n            },\n            \"ClassExpression\"() {\n                if (!ignoreExpressions) {\n                    classCount++;\n                }\n            }\n        };\n    }\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,a,CAEA;AACA;AACA;AAGA;AACA;AACA;;AAEA;;AACAA,MAAM,CAACC,OAAP,GAAiB;EACbC,IAAI,EAAE;IACFC,IAAI,EAAE,YADJ;IAGFC,IAAI,EAAE;MACFC,WAAW,EAAE,8CADX;MAEFC,WAAW,EAAE,KAFX;MAGFC,GAAG,EAAE;IAHH,CAHJ;IASFC,MAAM,EAAE,CACJ;MACIC,KAAK,EAAE,CACH;QACIN,IAAI,EAAE,SADV;QAEIO,OAAO,EAAE;MAFb,CADG,EAKH;QACIP,IAAI,EAAE,QADV;QAEIQ,UAAU,EAAE;UACRC,iBAAiB,EAAE;YACfT,IAAI,EAAE;UADS,CADX;UAIRU,GAAG,EAAE;YACDV,IAAI,EAAE,SADL;YAEDO,OAAO,EAAE;UAFR;QAJG,CAFhB;QAWII,oBAAoB,EAAE;MAX1B,CALG;IADX,CADI,CATN;IAiCFC,QAAQ,EAAE;MACNC,eAAe,EAAE;IADX;EAjCR,CADO;;EAsCbC,MAAM,CAACC,OAAD,EAAU;IACZ,MAAM,CAACC,MAAM,GAAG,EAAV,IAAgBD,OAAO,CAACE,OAA9B;IACA,MAAM,CAACR,iBAAD,EAAoBC,GAApB,IAA2B,OAAOM,MAAP,KAAkB,QAAlB,GAC3B,CAAC,KAAD,EAAQA,MAAM,IAAI,CAAlB,CAD2B,GAE3B,CAACA,MAAM,CAACP,iBAAR,EAA2BO,MAAM,CAACN,GAAP,IAAc,CAAzC,CAFN;IAIA,IAAIQ,UAAU,GAAG,CAAjB;IAEA,OAAO;MACHC,OAAO,GAAG;QACND,UAAU,GAAG,CAAb;MACH,CAHE;;MAIH,eAAeE,IAAf,EAAqB;QACjB,IAAIF,UAAU,GAAGR,GAAjB,EAAsB;UAClBK,OAAO,CAACM,MAAR,CAAe;YACXD,IADW;YAEXE,SAAS,EAAE,iBAFA;YAGXC,IAAI,EAAE;cACFL,UADE;cAEFR;YAFE;UAHK,CAAf;QAQH;MACJ,CAfE;;MAgBH,qBAAqB;QACjBQ,UAAU;MACb,CAlBE;;MAmBH,oBAAoB;QAChB,IAAI,CAACT,iBAAL,EAAwB;UACpBS,UAAU;QACb;MACJ;;IAvBE,CAAP;EAyBH;;AAvEY,CAAjB"},"metadata":{},"sourceType":"script"}