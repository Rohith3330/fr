{"ast":null,"code":"const {\n  d,\n  n\n} = require('../../options');\n/**\n * Normalizes the options for the loader.\n * @param {import('../types').ReactRefreshLoaderOptions} options Non-normalized loader options.\n * @returns {import('../types').NormalizedLoaderOptions} Normalized loader options.\n */\n\n\nconst normalizeOptions = options => {\n  d(options, 'const', false);\n  n(options, 'esModule', esModule => {\n    if (typeof esModule === 'boolean' || typeof esModule === 'undefined') {\n      return esModule;\n    }\n\n    d(esModule, 'include');\n    d(esModule, 'exclude');\n    return esModule;\n  });\n  return options;\n};\n\nmodule.exports = normalizeOptions;","map":{"version":3,"names":["d","n","require","normalizeOptions","options","esModule","module","exports"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/@pmmmwh/react-refresh-webpack-plugin/loader/utils/normalizeOptions.js"],"sourcesContent":["const { d, n } = require('../../options');\n\n/**\n * Normalizes the options for the loader.\n * @param {import('../types').ReactRefreshLoaderOptions} options Non-normalized loader options.\n * @returns {import('../types').NormalizedLoaderOptions} Normalized loader options.\n */\nconst normalizeOptions = (options) => {\n  d(options, 'const', false);\n\n  n(options, 'esModule', (esModule) => {\n    if (typeof esModule === 'boolean' || typeof esModule === 'undefined') {\n      return esModule;\n    }\n\n    d(esModule, 'include');\n    d(esModule, 'exclude');\n\n    return esModule;\n  });\n\n  return options;\n};\n\nmodule.exports = normalizeOptions;\n"],"mappings":"AAAA,MAAM;EAAEA,CAAF;EAAKC;AAAL,IAAWC,OAAO,CAAC,eAAD,CAAxB;AAEA;AACA;AACA;AACA;AACA;;;AACA,MAAMC,gBAAgB,GAAIC,OAAD,IAAa;EACpCJ,CAAC,CAACI,OAAD,EAAU,OAAV,EAAmB,KAAnB,CAAD;EAEAH,CAAC,CAACG,OAAD,EAAU,UAAV,EAAuBC,QAAD,IAAc;IACnC,IAAI,OAAOA,QAAP,KAAoB,SAApB,IAAiC,OAAOA,QAAP,KAAoB,WAAzD,EAAsE;MACpE,OAAOA,QAAP;IACD;;IAEDL,CAAC,CAACK,QAAD,EAAW,SAAX,CAAD;IACAL,CAAC,CAACK,QAAD,EAAW,SAAX,CAAD;IAEA,OAAOA,QAAP;EACD,CATA,CAAD;EAWA,OAAOD,OAAP;AACD,CAfD;;AAiBAE,MAAM,CAACC,OAAP,GAAiBJ,gBAAjB"},"metadata":{},"sourceType":"script"}