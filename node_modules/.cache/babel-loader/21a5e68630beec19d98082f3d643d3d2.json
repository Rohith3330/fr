{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst utils_1 = require(\"@typescript-eslint/utils\");\n\nconst util = __importStar(require(\"../util\"));\n\nfunction isEmptyExport(node) {\n  return node.type === utils_1.AST_NODE_TYPES.ExportNamedDeclaration && node.specifiers.length === 0 && !node.declaration;\n}\n\nconst exportOrImportNodeTypes = new Set([utils_1.AST_NODE_TYPES.ExportAllDeclaration, utils_1.AST_NODE_TYPES.ExportDefaultDeclaration, utils_1.AST_NODE_TYPES.ExportNamedDeclaration, utils_1.AST_NODE_TYPES.ExportSpecifier, utils_1.AST_NODE_TYPES.ImportDeclaration, utils_1.AST_NODE_TYPES.TSExportAssignment, utils_1.AST_NODE_TYPES.TSImportEqualsDeclaration]);\nexports.default = util.createRule({\n  name: 'no-useless-empty-export',\n  meta: {\n    docs: {\n      description: \"Disallow empty exports that don't change anything in a module file\",\n      recommended: false\n    },\n    fixable: 'code',\n    hasSuggestions: false,\n    messages: {\n      uselessExport: 'Empty export does nothing and can be removed.'\n    },\n    schema: [],\n    type: 'suggestion'\n  },\n  defaultOptions: [],\n\n  create(context) {\n    function checkNode(node) {\n      if (!Array.isArray(node.body)) {\n        return;\n      }\n\n      let emptyExport;\n      let foundOtherExport = false;\n\n      for (const statement of node.body) {\n        if (isEmptyExport(statement)) {\n          emptyExport = statement;\n\n          if (foundOtherExport) {\n            break;\n          }\n        } else if (exportOrImportNodeTypes.has(statement.type)) {\n          foundOtherExport = true;\n        }\n      }\n\n      if (emptyExport && foundOtherExport) {\n        context.report({\n          fix: fixer => fixer.remove(emptyExport),\n          messageId: 'uselessExport',\n          node: emptyExport\n        });\n      }\n    }\n\n    return {\n      Program: checkNode,\n      TSModuleDeclaration: checkNode\n    };\n  }\n\n});","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;;AAEA;;AAEA,SAASA,aAAT,CACEC,IADF,EACqB;EAEnB,OACEA,IAAI,CAACC,IAAL,KAAcC,uBAAeC,sBAA7B,IACAH,IAAI,CAACI,UAAL,CAAgBC,MAAhB,KAA2B,CAD3B,IAEA,CAACL,IAAI,CAACM,WAHR;AAKD;;AAED,MAAMC,uBAAuB,GAAG,IAAIC,GAAJ,CAAQ,CACtCN,uBAAeO,oBADuB,EAEtCP,uBAAeQ,wBAFuB,EAGtCR,uBAAeC,sBAHuB,EAItCD,uBAAeS,eAJuB,EAKtCT,uBAAeU,iBALuB,EAMtCV,uBAAeW,kBANuB,EAOtCX,uBAAeY,yBAPuB,CAAR,CAAhC;AAUAC,kBAAeC,IAAI,CAACC,UAAL,CAAgB;EAC7BC,IAAI,EAAE,yBADuB;EAE7BC,IAAI,EAAE;IACJC,IAAI,EAAE;MACJC,WAAW,EACT,oEAFE;MAGJC,WAAW,EAAE;IAHT,CADF;IAMJC,OAAO,EAAE,MANL;IAOJC,cAAc,EAAE,KAPZ;IAQJC,QAAQ,EAAE;MACRC,aAAa,EAAE;IADP,CARN;IAWJC,MAAM,EAAE,EAXJ;IAYJ1B,IAAI,EAAE;EAZF,CAFuB;EAgB7B2B,cAAc,EAAE,EAhBa;;EAiB7BC,MAAM,CAACC,OAAD,EAAQ;IACZ,SAASC,SAAT,CACE/B,IADF,EACuD;MAErD,IAAI,CAACgC,KAAK,CAACC,OAAN,CAAcjC,IAAI,CAACkC,IAAnB,CAAL,EAA+B;QAC7B;MACD;;MAED,IAAIC,WAAJ;MACA,IAAIC,gBAAgB,GAAG,KAAvB;;MAEA,KAAK,MAAMC,SAAX,IAAwBrC,IAAI,CAACkC,IAA7B,EAAmC;QACjC,IAAInC,aAAa,CAACsC,SAAD,CAAjB,EAA8B;UAC5BF,WAAW,GAAGE,SAAd;;UAEA,IAAID,gBAAJ,EAAsB;YACpB;UACD;QACF,CAND,MAMO,IAAI7B,uBAAuB,CAAC+B,GAAxB,CAA4BD,SAAS,CAACpC,IAAtC,CAAJ,EAAiD;UACtDmC,gBAAgB,GAAG,IAAnB;QACD;MACF;;MAED,IAAID,WAAW,IAAIC,gBAAnB,EAAqC;QACnCN,OAAO,CAACS,MAAR,CAAe;UACbC,GAAG,EAAEC,KAAK,IAAIA,KAAK,CAACC,MAAN,CAAaP,WAAb,CADD;UAEbQ,SAAS,EAAE,eAFE;UAGb3C,IAAI,EAAEmC;QAHO,CAAf;MAKD;IACF;;IAED,OAAO;MACLS,OAAO,EAAEb,SADJ;MAELc,mBAAmB,EAAEd;IAFhB,CAAP;EAID;;AArD4B,CAAhB,CAAf","names":["isEmptyExport","node","type","utils_1","ExportNamedDeclaration","specifiers","length","declaration","exportOrImportNodeTypes","Set","ExportAllDeclaration","ExportDefaultDeclaration","ExportSpecifier","ImportDeclaration","TSExportAssignment","TSImportEqualsDeclaration","exports","util","createRule","name","meta","docs","description","recommended","fixable","hasSuggestions","messages","uselessExport","schema","defaultOptions","create","context","checkNode","Array","isArray","body","emptyExport","foundOtherExport","statement","has","report","fix","fixer","remove","messageId","Program","TSModuleDeclaration"],"sources":["../../src/rules/no-useless-empty-export.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}