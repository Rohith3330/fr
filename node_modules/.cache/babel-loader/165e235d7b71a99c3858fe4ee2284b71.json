{"ast":null,"code":"/*\n * MIT License http://opensource.org/licenses/MIT\n * Author: Ben Holloway @bholloway\n */\n'use strict';\n/**\n * Prepend file:// protocol to source path string or source-map sources.\n */\n\nfunction prepend(candidate) {\n  if (typeof candidate === 'string') {\n    return 'file://' + candidate;\n  } else if (candidate && typeof candidate === 'object' && Array.isArray(candidate.sources)) {\n    return Object.assign({}, candidate, {\n      sources: candidate.sources.map(prepend)\n    });\n  } else {\n    throw new Error('expected string|object');\n  }\n}\n\nexports.prepend = prepend;\n/**\n * Remove file:// protocol from source path string or source-map sources.\n */\n\nfunction remove(candidate) {\n  if (typeof candidate === 'string') {\n    return candidate.replace(/^file:\\/{2}/, '');\n  } else if (candidate && typeof candidate === 'object' && Array.isArray(candidate.sources)) {\n    return Object.assign({}, candidate, {\n      sources: candidate.sources.map(remove)\n    });\n  } else {\n    throw new Error('expected string|object');\n  }\n}\n\nexports.remove = remove;","map":{"version":3,"names":["prepend","candidate","Array","isArray","sources","Object","assign","map","Error","exports","remove","replace"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/resolve-url-loader/lib/file-protocol.js"],"sourcesContent":["/*\n * MIT License http://opensource.org/licenses/MIT\n * Author: Ben Holloway @bholloway\n */\n'use strict';\n\n/**\n * Prepend file:// protocol to source path string or source-map sources.\n */\nfunction prepend(candidate) {\n  if (typeof candidate === 'string') {\n    return 'file://' + candidate;\n  } else if (candidate && (typeof candidate === 'object') && Array.isArray(candidate.sources)) {\n    return Object.assign({}, candidate, {\n      sources: candidate.sources.map(prepend)\n    });\n  } else {\n    throw new Error('expected string|object');\n  }\n}\n\nexports.prepend = prepend;\n\n/**\n * Remove file:// protocol from source path string or source-map sources.\n */\nfunction remove(candidate) {\n  if (typeof candidate === 'string') {\n    return candidate.replace(/^file:\\/{2}/, '');\n  } else if (candidate && (typeof candidate === 'object') && Array.isArray(candidate.sources)) {\n    return Object.assign({}, candidate, {\n      sources: candidate.sources.map(remove)\n    });\n  } else {\n    throw new Error('expected string|object');\n  }\n}\n\nexports.remove = remove;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AACA,SAASA,OAAT,CAAiBC,SAAjB,EAA4B;EAC1B,IAAI,OAAOA,SAAP,KAAqB,QAAzB,EAAmC;IACjC,OAAO,YAAYA,SAAnB;EACD,CAFD,MAEO,IAAIA,SAAS,IAAK,OAAOA,SAAP,KAAqB,QAAnC,IAAgDC,KAAK,CAACC,OAAN,CAAcF,SAAS,CAACG,OAAxB,CAApD,EAAsF;IAC3F,OAAOC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBL,SAAlB,EAA6B;MAClCG,OAAO,EAAEH,SAAS,CAACG,OAAV,CAAkBG,GAAlB,CAAsBP,OAAtB;IADyB,CAA7B,CAAP;EAGD,CAJM,MAIA;IACL,MAAM,IAAIQ,KAAJ,CAAU,wBAAV,CAAN;EACD;AACF;;AAEDC,OAAO,CAACT,OAAR,GAAkBA,OAAlB;AAEA;AACA;AACA;;AACA,SAASU,MAAT,CAAgBT,SAAhB,EAA2B;EACzB,IAAI,OAAOA,SAAP,KAAqB,QAAzB,EAAmC;IACjC,OAAOA,SAAS,CAACU,OAAV,CAAkB,aAAlB,EAAiC,EAAjC,CAAP;EACD,CAFD,MAEO,IAAIV,SAAS,IAAK,OAAOA,SAAP,KAAqB,QAAnC,IAAgDC,KAAK,CAACC,OAAN,CAAcF,SAAS,CAACG,OAAxB,CAApD,EAAsF;IAC3F,OAAOC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBL,SAAlB,EAA6B;MAClCG,OAAO,EAAEH,SAAS,CAACG,OAAV,CAAkBG,GAAlB,CAAsBG,MAAtB;IADyB,CAA7B,CAAP;EAGD,CAJM,MAIA;IACL,MAAM,IAAIF,KAAJ,CAAU,wBAAV,CAAN;EACD;AACF;;AAEDC,OAAO,CAACC,MAAR,GAAiBA,MAAjB"},"metadata":{},"sourceType":"script"}