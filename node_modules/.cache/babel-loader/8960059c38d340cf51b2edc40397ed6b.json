{"ast":null,"code":"'use strict';\n\nvar inspect = require('object-inspect');\n\nvar forEach = require('foreach');\n\nmodule.exports = function (flatMap, t) {\n  t.test('callback function', function (st) {\n    forEach([[], {}, true, false, 42, 'foo', /a/g, null], function (nonFunction) {\n      st['throws'](function () {\n        flatMap([], nonFunction);\n      }, TypeError, inspect(nonFunction) + ' is not a function');\n    });\n    st.end();\n  });\n  t.test('flatMaps', function (st) {\n    var mapped = flatMap([1, [2], [3, 4]], function (x, i) {\n      return [x, i];\n    });\n    var expected = [1, 0, [2], 1, [3, 4], 2];\n    st.deepEqual(mapped, expected, 'array is flattened and mapped to tuples of item/index');\n    st.equal(mapped.length, expected.length, 'array has expected length');\n    var context = {};\n    var actual;\n    flatMap([1], function () {\n      actual = this;\n    }, context);\n    st.equal(actual, context, 'thisArg works as expected');\n    st.end();\n  });\n  t.test('sparse arrays', function (st) {\n    var identity = function (x) {\n      return x;\n    }; // eslint-disable-next-line no-sparse-arrays\n\n\n    st.deepEqual(flatMap([, [1]], identity), flatMap([[], [1]], identity), 'an array hole is treated the same as an empty array');\n    st.end();\n  });\n};","map":{"version":3,"names":["inspect","require","forEach","module","exports","flatMap","t","test","st","nonFunction","TypeError","end","mapped","x","i","expected","deepEqual","equal","length","context","actual","identity"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/array.prototype.flatmap/test/tests.js"],"sourcesContent":["'use strict';\n\nvar inspect = require('object-inspect');\nvar forEach = require('foreach');\n\nmodule.exports = function (flatMap, t) {\n\tt.test('callback function', function (st) {\n\t\tforEach([[], {}, true, false, 42, 'foo', /a/g, null], function (nonFunction) {\n\t\t\tst['throws'](\n\t\t\t\tfunction () { flatMap([], nonFunction); },\n\t\t\t\tTypeError,\n\t\t\t\tinspect(nonFunction) + ' is not a function'\n\t\t\t);\n\t\t});\n\n\t\tst.end();\n\t});\n\n\tt.test('flatMaps', function (st) {\n\t\tvar mapped = flatMap([1, [2], [3, 4]], function (x, i) {\n\t\t\treturn [x, i];\n\t\t});\n\n\t\tvar expected = [1, 0, [2], 1, [3, 4], 2];\n\t\tst.deepEqual(mapped, expected, 'array is flattened and mapped to tuples of item/index');\n\t\tst.equal(mapped.length, expected.length, 'array has expected length');\n\n\t\tvar context = {};\n\t\tvar actual;\n\t\tflatMap([1], function () { actual = this; }, context);\n\t\tst.equal(actual, context, 'thisArg works as expected');\n\n\t\tst.end();\n\t});\n\n\tt.test('sparse arrays', function (st) {\n\t\tvar identity = function (x) { return x; };\n\t\t// eslint-disable-next-line no-sparse-arrays\n\t\tst.deepEqual(flatMap([, [1]], identity), flatMap([[], [1]], identity), 'an array hole is treated the same as an empty array');\n\n\t\tst.end();\n\t});\n};\n"],"mappings":"AAAA;;AAEA,IAAIA,OAAO,GAAGC,OAAO,CAAC,gBAAD,CAArB;;AACA,IAAIC,OAAO,GAAGD,OAAO,CAAC,SAAD,CAArB;;AAEAE,MAAM,CAACC,OAAP,GAAiB,UAAUC,OAAV,EAAmBC,CAAnB,EAAsB;EACtCA,CAAC,CAACC,IAAF,CAAO,mBAAP,EAA4B,UAAUC,EAAV,EAAc;IACzCN,OAAO,CAAC,CAAC,EAAD,EAAK,EAAL,EAAS,IAAT,EAAe,KAAf,EAAsB,EAAtB,EAA0B,KAA1B,EAAiC,IAAjC,EAAuC,IAAvC,CAAD,EAA+C,UAAUO,WAAV,EAAuB;MAC5ED,EAAE,CAAC,QAAD,CAAF,CACC,YAAY;QAAEH,OAAO,CAAC,EAAD,EAAKI,WAAL,CAAP;MAA2B,CAD1C,EAECC,SAFD,EAGCV,OAAO,CAACS,WAAD,CAAP,GAAuB,oBAHxB;IAKA,CANM,CAAP;IAQAD,EAAE,CAACG,GAAH;EACA,CAVD;EAYAL,CAAC,CAACC,IAAF,CAAO,UAAP,EAAmB,UAAUC,EAAV,EAAc;IAChC,IAAII,MAAM,GAAGP,OAAO,CAAC,CAAC,CAAD,EAAI,CAAC,CAAD,CAAJ,EAAS,CAAC,CAAD,EAAI,CAAJ,CAAT,CAAD,EAAmB,UAAUQ,CAAV,EAAaC,CAAb,EAAgB;MACtD,OAAO,CAACD,CAAD,EAAIC,CAAJ,CAAP;IACA,CAFmB,CAApB;IAIA,IAAIC,QAAQ,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAC,CAAD,CAAP,EAAY,CAAZ,EAAe,CAAC,CAAD,EAAI,CAAJ,CAAf,EAAuB,CAAvB,CAAf;IACAP,EAAE,CAACQ,SAAH,CAAaJ,MAAb,EAAqBG,QAArB,EAA+B,uDAA/B;IACAP,EAAE,CAACS,KAAH,CAASL,MAAM,CAACM,MAAhB,EAAwBH,QAAQ,CAACG,MAAjC,EAAyC,2BAAzC;IAEA,IAAIC,OAAO,GAAG,EAAd;IACA,IAAIC,MAAJ;IACAf,OAAO,CAAC,CAAC,CAAD,CAAD,EAAM,YAAY;MAAEe,MAAM,GAAG,IAAT;IAAgB,CAApC,EAAsCD,OAAtC,CAAP;IACAX,EAAE,CAACS,KAAH,CAASG,MAAT,EAAiBD,OAAjB,EAA0B,2BAA1B;IAEAX,EAAE,CAACG,GAAH;EACA,CAfD;EAiBAL,CAAC,CAACC,IAAF,CAAO,eAAP,EAAwB,UAAUC,EAAV,EAAc;IACrC,IAAIa,QAAQ,GAAG,UAAUR,CAAV,EAAa;MAAE,OAAOA,CAAP;IAAW,CAAzC,CADqC,CAErC;;;IACAL,EAAE,CAACQ,SAAH,CAAaX,OAAO,CAAC,GAAG,CAAC,CAAD,CAAH,CAAD,EAAUgB,QAAV,CAApB,EAAyChB,OAAO,CAAC,CAAC,EAAD,EAAK,CAAC,CAAD,CAAL,CAAD,EAAYgB,QAAZ,CAAhD,EAAuE,qDAAvE;IAEAb,EAAE,CAACG,GAAH;EACA,CAND;AAOA,CArCD"},"metadata":{},"sourceType":"script"}