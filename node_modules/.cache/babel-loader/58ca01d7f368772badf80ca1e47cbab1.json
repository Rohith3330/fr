{"ast":null,"code":"// @remove-file-on-eject\n\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict'; // Makes the script crash on unhandled rejections instead of silently\n// ignoring them. In the future, promise rejections that are not handled will\n// terminate the Node.js process with a non-zero exit code.\n\nprocess.on('unhandledRejection', err => {\n  throw err;\n});\n\nconst fs = require('fs-extra');\n\nconst path = require('path');\n\nconst chalk = require('react-dev-utils/chalk');\n\nconst execSync = require('child_process').execSync;\n\nconst spawn = require('react-dev-utils/crossSpawn');\n\nconst {\n  defaultBrowsers\n} = require('react-dev-utils/browsersHelper');\n\nconst os = require('os');\n\nconst verifyTypeScriptSetup = require('./utils/verifyTypeScriptSetup');\n\nfunction isInGitRepository() {\n  try {\n    execSync('git rev-parse --is-inside-work-tree', {\n      stdio: 'ignore'\n    });\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction isInMercurialRepository() {\n  try {\n    execSync('hg --cwd . root', {\n      stdio: 'ignore'\n    });\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction tryGitInit() {\n  try {\n    execSync('git --version', {\n      stdio: 'ignore'\n    });\n\n    if (isInGitRepository() || isInMercurialRepository()) {\n      return false;\n    }\n\n    execSync('git init', {\n      stdio: 'ignore'\n    });\n    return true;\n  } catch (e) {\n    console.warn('Git repo not initialized', e);\n    return false;\n  }\n}\n\nfunction tryGitCommit(appPath) {\n  try {\n    execSync('git add -A', {\n      stdio: 'ignore'\n    });\n    execSync('git commit -m \"Initialize project using Create React App\"', {\n      stdio: 'ignore'\n    });\n    return true;\n  } catch (e) {\n    // We couldn't commit in already initialized git repo,\n    // maybe the commit author config is not set.\n    // In the future, we might supply our own committer\n    // like Ember CLI does, but for now, let's just\n    // remove the Git files to avoid a half-done state.\n    console.warn('Git commit not created', e);\n    console.warn('Removing .git directory...');\n\n    try {\n      // unlinkSync() doesn't work on directories.\n      fs.removeSync(path.join(appPath, '.git'));\n    } catch (removeErr) {// Ignore.\n    }\n\n    return false;\n  }\n}\n\nmodule.exports = function (appPath, appName, verbose, originalDirectory, templateName) {\n  const appPackage = require(path.join(appPath, 'package.json'));\n\n  const useYarn = fs.existsSync(path.join(appPath, 'yarn.lock'));\n\n  if (!templateName) {\n    console.log('');\n    console.error(`A template was not provided. This is likely because you're using an outdated version of ${chalk.cyan('create-react-app')}.`);\n    console.error(`Please note that global installs of ${chalk.cyan('create-react-app')} are no longer supported.`);\n    console.error(`You can fix this by running ${chalk.cyan('npm uninstall -g create-react-app')} or ${chalk.cyan('yarn global remove create-react-app')} before using ${chalk.cyan('create-react-app')} again.`);\n    return;\n  }\n\n  const templatePath = path.dirname(require.resolve(`${templateName}/package.json`, {\n    paths: [appPath]\n  }));\n  const templateJsonPath = path.join(templatePath, 'template.json');\n  let templateJson = {};\n\n  if (fs.existsSync(templateJsonPath)) {\n    templateJson = require(templateJsonPath);\n  }\n\n  const templatePackage = templateJson.package || {}; // This was deprecated in CRA v5.\n\n  if (templateJson.dependencies || templateJson.scripts) {\n    console.log();\n    console.log(chalk.red('Root-level `dependencies` and `scripts` keys in `template.json` were deprecated for Create React App 5.\\n' + 'This template needs to be updated to use the new `package` key.'));\n    console.log('For more information, visit https://cra.link/templates');\n  } // Keys to ignore in templatePackage\n\n\n  const templatePackageBlacklist = ['name', 'version', 'description', 'keywords', 'bugs', 'license', 'author', 'contributors', 'files', 'browser', 'bin', 'man', 'directories', 'repository', 'peerDependencies', 'bundledDependencies', 'optionalDependencies', 'engineStrict', 'os', 'cpu', 'preferGlobal', 'private', 'publishConfig']; // Keys from templatePackage that will be merged with appPackage\n\n  const templatePackageToMerge = ['dependencies', 'scripts']; // Keys from templatePackage that will be added to appPackage,\n  // replacing any existing entries.\n\n  const templatePackageToReplace = Object.keys(templatePackage).filter(key => {\n    return !templatePackageBlacklist.includes(key) && !templatePackageToMerge.includes(key);\n  }); // Copy over some of the devDependencies\n\n  appPackage.dependencies = appPackage.dependencies || {}; // Setup the script rules\n\n  const templateScripts = templatePackage.scripts || {};\n  appPackage.scripts = Object.assign({\n    start: 'react-scripts start',\n    build: 'react-scripts build',\n    test: 'react-scripts test',\n    eject: 'react-scripts eject'\n  }, templateScripts); // Update scripts for Yarn users\n\n  if (useYarn) {\n    appPackage.scripts = Object.entries(appPackage.scripts).reduce((acc, _ref) => {\n      let [key, value] = _ref;\n      return { ...acc,\n        [key]: value.replace(/(npm run |npm )/, 'yarn ')\n      };\n    }, {});\n  } // Setup the eslint config\n\n\n  appPackage.eslintConfig = {\n    extends: 'react-app'\n  }; // Setup the browsers list\n\n  appPackage.browserslist = defaultBrowsers; // Add templatePackage keys/values to appPackage, replacing existing entries\n\n  templatePackageToReplace.forEach(key => {\n    appPackage[key] = templatePackage[key];\n  });\n  fs.writeFileSync(path.join(appPath, 'package.json'), JSON.stringify(appPackage, null, 2) + os.EOL);\n  const readmeExists = fs.existsSync(path.join(appPath, 'README.md'));\n\n  if (readmeExists) {\n    fs.renameSync(path.join(appPath, 'README.md'), path.join(appPath, 'README.old.md'));\n  } // Copy the files for the user\n\n\n  const templateDir = path.join(templatePath, 'template');\n\n  if (fs.existsSync(templateDir)) {\n    fs.copySync(templateDir, appPath);\n  } else {\n    console.error(`Could not locate supplied template: ${chalk.green(templateDir)}`);\n    return;\n  } // modifies README.md commands based on user used package manager.\n\n\n  if (useYarn) {\n    try {\n      const readme = fs.readFileSync(path.join(appPath, 'README.md'), 'utf8');\n      fs.writeFileSync(path.join(appPath, 'README.md'), readme.replace(/(npm run |npm )/g, 'yarn '), 'utf8');\n    } catch (err) {// Silencing the error. As it fall backs to using default npm commands.\n    }\n  }\n\n  const gitignoreExists = fs.existsSync(path.join(appPath, '.gitignore'));\n\n  if (gitignoreExists) {\n    // Append if there's already a `.gitignore` file there\n    const data = fs.readFileSync(path.join(appPath, 'gitignore'));\n    fs.appendFileSync(path.join(appPath, '.gitignore'), data);\n    fs.unlinkSync(path.join(appPath, 'gitignore'));\n  } else {\n    // Rename gitignore after the fact to prevent npm from renaming it to .npmignore\n    // See: https://github.com/npm/npm/issues/1862\n    fs.moveSync(path.join(appPath, 'gitignore'), path.join(appPath, '.gitignore'), []);\n  } // Initialize git repo\n\n\n  let initializedGit = false;\n\n  if (tryGitInit()) {\n    initializedGit = true;\n    console.log();\n    console.log('Initialized a git repository.');\n  }\n\n  let command;\n  let remove;\n  let args;\n\n  if (useYarn) {\n    command = 'yarnpkg';\n    remove = 'remove';\n    args = ['add'];\n  } else {\n    command = 'npm';\n    remove = 'uninstall';\n    args = ['install', '--no-audit', // https://github.com/facebook/create-react-app/issues/11174\n    '--save', verbose && '--verbose'].filter(e => e);\n  } // Install additional template dependencies, if present.\n\n\n  const dependenciesToInstall = Object.entries({ ...templatePackage.dependencies,\n    ...templatePackage.devDependencies\n  });\n\n  if (dependenciesToInstall.length) {\n    args = args.concat(dependenciesToInstall.map(_ref2 => {\n      let [dependency, version] = _ref2;\n      return `${dependency}@${version}`;\n    }));\n  } // Install react and react-dom for backward compatibility with old CRA cli\n  // which doesn't install react and react-dom along with react-scripts\n\n\n  if (!isReactInstalled(appPackage)) {\n    args = args.concat(['react', 'react-dom']);\n  } // Install template dependencies, and react and react-dom if missing.\n\n\n  if ((!isReactInstalled(appPackage) || templateName) && args.length > 1) {\n    console.log();\n    console.log(`Installing template dependencies using ${command}...`);\n    const proc = spawn.sync(command, args, {\n      stdio: 'inherit'\n    });\n\n    if (proc.status !== 0) {\n      console.error(`\\`${command} ${args.join(' ')}\\` failed`);\n      return;\n    }\n  }\n\n  if (args.find(arg => arg.includes('typescript'))) {\n    console.log();\n    verifyTypeScriptSetup();\n  } // Remove template\n\n\n  console.log(`Removing template package using ${command}...`);\n  console.log();\n  const proc = spawn.sync(command, [remove, templateName], {\n    stdio: 'inherit'\n  });\n\n  if (proc.status !== 0) {\n    console.error(`\\`${command} ${args.join(' ')}\\` failed`);\n    return;\n  } // Create git commit if git repo was initialized\n\n\n  if (initializedGit && tryGitCommit(appPath)) {\n    console.log();\n    console.log('Created git commit.');\n  } // Display the most elegant way to cd.\n  // This needs to handle an undefined originalDirectory for\n  // backward compatibility with old global-cli's.\n\n\n  let cdpath;\n\n  if (originalDirectory && path.join(originalDirectory, appName) === appPath) {\n    cdpath = appName;\n  } else {\n    cdpath = appPath;\n  } // Change displayed command to yarn instead of yarnpkg\n\n\n  const displayedCommand = useYarn ? 'yarn' : 'npm';\n  console.log();\n  console.log(`Success! Created ${appName} at ${appPath}`);\n  console.log('Inside that directory, you can run several commands:');\n  console.log();\n  console.log(chalk.cyan(`  ${displayedCommand} start`));\n  console.log('    Starts the development server.');\n  console.log();\n  console.log(chalk.cyan(`  ${displayedCommand} ${useYarn ? '' : 'run '}build`));\n  console.log('    Bundles the app into static files for production.');\n  console.log();\n  console.log(chalk.cyan(`  ${displayedCommand} test`));\n  console.log('    Starts the test runner.');\n  console.log();\n  console.log(chalk.cyan(`  ${displayedCommand} ${useYarn ? '' : 'run '}eject`));\n  console.log('    Removes this tool and copies build dependencies, configuration files');\n  console.log('    and scripts into the app directory. If you do this, you can’t go back!');\n  console.log();\n  console.log('We suggest that you begin by typing:');\n  console.log();\n  console.log(chalk.cyan('  cd'), cdpath);\n  console.log(`  ${chalk.cyan(`${displayedCommand} start`)}`);\n\n  if (readmeExists) {\n    console.log();\n    console.log(chalk.yellow('You had a `README.md` file, we renamed it to `README.old.md`'));\n  }\n\n  console.log();\n  console.log('Happy hacking!');\n};\n\nfunction isReactInstalled(appPackage) {\n  const dependencies = appPackage.dependencies || {};\n  return typeof dependencies.react !== 'undefined' && typeof dependencies['react-dom'] !== 'undefined';\n}","map":{"version":3,"names":["process","on","err","fs","require","path","chalk","execSync","spawn","defaultBrowsers","os","verifyTypeScriptSetup","isInGitRepository","stdio","e","isInMercurialRepository","tryGitInit","console","warn","tryGitCommit","appPath","removeSync","join","removeErr","module","exports","appName","verbose","originalDirectory","templateName","appPackage","useYarn","existsSync","log","error","cyan","templatePath","dirname","resolve","paths","templateJsonPath","templateJson","templatePackage","package","dependencies","scripts","red","templatePackageBlacklist","templatePackageToMerge","templatePackageToReplace","Object","keys","filter","key","includes","templateScripts","assign","start","build","test","eject","entries","reduce","acc","value","replace","eslintConfig","extends","browserslist","forEach","writeFileSync","JSON","stringify","EOL","readmeExists","renameSync","templateDir","copySync","green","readme","readFileSync","gitignoreExists","data","appendFileSync","unlinkSync","moveSync","initializedGit","command","remove","args","dependenciesToInstall","devDependencies","length","concat","map","dependency","version","isReactInstalled","proc","sync","status","find","arg","cdpath","displayedCommand","yellow","react"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/react-scripts/scripts/init.js"],"sourcesContent":["// @remove-file-on-eject\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';\n\n// Makes the script crash on unhandled rejections instead of silently\n// ignoring them. In the future, promise rejections that are not handled will\n// terminate the Node.js process with a non-zero exit code.\nprocess.on('unhandledRejection', err => {\n  throw err;\n});\n\nconst fs = require('fs-extra');\nconst path = require('path');\nconst chalk = require('react-dev-utils/chalk');\nconst execSync = require('child_process').execSync;\nconst spawn = require('react-dev-utils/crossSpawn');\nconst { defaultBrowsers } = require('react-dev-utils/browsersHelper');\nconst os = require('os');\nconst verifyTypeScriptSetup = require('./utils/verifyTypeScriptSetup');\n\nfunction isInGitRepository() {\n  try {\n    execSync('git rev-parse --is-inside-work-tree', { stdio: 'ignore' });\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction isInMercurialRepository() {\n  try {\n    execSync('hg --cwd . root', { stdio: 'ignore' });\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction tryGitInit() {\n  try {\n    execSync('git --version', { stdio: 'ignore' });\n    if (isInGitRepository() || isInMercurialRepository()) {\n      return false;\n    }\n\n    execSync('git init', { stdio: 'ignore' });\n    return true;\n  } catch (e) {\n    console.warn('Git repo not initialized', e);\n    return false;\n  }\n}\n\nfunction tryGitCommit(appPath) {\n  try {\n    execSync('git add -A', { stdio: 'ignore' });\n    execSync('git commit -m \"Initialize project using Create React App\"', {\n      stdio: 'ignore',\n    });\n    return true;\n  } catch (e) {\n    // We couldn't commit in already initialized git repo,\n    // maybe the commit author config is not set.\n    // In the future, we might supply our own committer\n    // like Ember CLI does, but for now, let's just\n    // remove the Git files to avoid a half-done state.\n    console.warn('Git commit not created', e);\n    console.warn('Removing .git directory...');\n    try {\n      // unlinkSync() doesn't work on directories.\n      fs.removeSync(path.join(appPath, '.git'));\n    } catch (removeErr) {\n      // Ignore.\n    }\n    return false;\n  }\n}\n\nmodule.exports = function (\n  appPath,\n  appName,\n  verbose,\n  originalDirectory,\n  templateName\n) {\n  const appPackage = require(path.join(appPath, 'package.json'));\n  const useYarn = fs.existsSync(path.join(appPath, 'yarn.lock'));\n\n  if (!templateName) {\n    console.log('');\n    console.error(\n      `A template was not provided. This is likely because you're using an outdated version of ${chalk.cyan(\n        'create-react-app'\n      )}.`\n    );\n    console.error(\n      `Please note that global installs of ${chalk.cyan(\n        'create-react-app'\n      )} are no longer supported.`\n    );\n    console.error(\n      `You can fix this by running ${chalk.cyan(\n        'npm uninstall -g create-react-app'\n      )} or ${chalk.cyan(\n        'yarn global remove create-react-app'\n      )} before using ${chalk.cyan('create-react-app')} again.`\n    );\n    return;\n  }\n\n  const templatePath = path.dirname(\n    require.resolve(`${templateName}/package.json`, { paths: [appPath] })\n  );\n\n  const templateJsonPath = path.join(templatePath, 'template.json');\n\n  let templateJson = {};\n  if (fs.existsSync(templateJsonPath)) {\n    templateJson = require(templateJsonPath);\n  }\n\n  const templatePackage = templateJson.package || {};\n\n  // This was deprecated in CRA v5.\n  if (templateJson.dependencies || templateJson.scripts) {\n    console.log();\n    console.log(\n      chalk.red(\n        'Root-level `dependencies` and `scripts` keys in `template.json` were deprecated for Create React App 5.\\n' +\n          'This template needs to be updated to use the new `package` key.'\n      )\n    );\n    console.log('For more information, visit https://cra.link/templates');\n  }\n\n  // Keys to ignore in templatePackage\n  const templatePackageBlacklist = [\n    'name',\n    'version',\n    'description',\n    'keywords',\n    'bugs',\n    'license',\n    'author',\n    'contributors',\n    'files',\n    'browser',\n    'bin',\n    'man',\n    'directories',\n    'repository',\n    'peerDependencies',\n    'bundledDependencies',\n    'optionalDependencies',\n    'engineStrict',\n    'os',\n    'cpu',\n    'preferGlobal',\n    'private',\n    'publishConfig',\n  ];\n\n  // Keys from templatePackage that will be merged with appPackage\n  const templatePackageToMerge = ['dependencies', 'scripts'];\n\n  // Keys from templatePackage that will be added to appPackage,\n  // replacing any existing entries.\n  const templatePackageToReplace = Object.keys(templatePackage).filter(key => {\n    return (\n      !templatePackageBlacklist.includes(key) &&\n      !templatePackageToMerge.includes(key)\n    );\n  });\n\n  // Copy over some of the devDependencies\n  appPackage.dependencies = appPackage.dependencies || {};\n\n  // Setup the script rules\n  const templateScripts = templatePackage.scripts || {};\n  appPackage.scripts = Object.assign(\n    {\n      start: 'react-scripts start',\n      build: 'react-scripts build',\n      test: 'react-scripts test',\n      eject: 'react-scripts eject',\n    },\n    templateScripts\n  );\n\n  // Update scripts for Yarn users\n  if (useYarn) {\n    appPackage.scripts = Object.entries(appPackage.scripts).reduce(\n      (acc, [key, value]) => ({\n        ...acc,\n        [key]: value.replace(/(npm run |npm )/, 'yarn '),\n      }),\n      {}\n    );\n  }\n\n  // Setup the eslint config\n  appPackage.eslintConfig = {\n    extends: 'react-app',\n  };\n\n  // Setup the browsers list\n  appPackage.browserslist = defaultBrowsers;\n\n  // Add templatePackage keys/values to appPackage, replacing existing entries\n  templatePackageToReplace.forEach(key => {\n    appPackage[key] = templatePackage[key];\n  });\n\n  fs.writeFileSync(\n    path.join(appPath, 'package.json'),\n    JSON.stringify(appPackage, null, 2) + os.EOL\n  );\n\n  const readmeExists = fs.existsSync(path.join(appPath, 'README.md'));\n  if (readmeExists) {\n    fs.renameSync(\n      path.join(appPath, 'README.md'),\n      path.join(appPath, 'README.old.md')\n    );\n  }\n\n  // Copy the files for the user\n  const templateDir = path.join(templatePath, 'template');\n  if (fs.existsSync(templateDir)) {\n    fs.copySync(templateDir, appPath);\n  } else {\n    console.error(\n      `Could not locate supplied template: ${chalk.green(templateDir)}`\n    );\n    return;\n  }\n\n  // modifies README.md commands based on user used package manager.\n  if (useYarn) {\n    try {\n      const readme = fs.readFileSync(path.join(appPath, 'README.md'), 'utf8');\n      fs.writeFileSync(\n        path.join(appPath, 'README.md'),\n        readme.replace(/(npm run |npm )/g, 'yarn '),\n        'utf8'\n      );\n    } catch (err) {\n      // Silencing the error. As it fall backs to using default npm commands.\n    }\n  }\n\n  const gitignoreExists = fs.existsSync(path.join(appPath, '.gitignore'));\n  if (gitignoreExists) {\n    // Append if there's already a `.gitignore` file there\n    const data = fs.readFileSync(path.join(appPath, 'gitignore'));\n    fs.appendFileSync(path.join(appPath, '.gitignore'), data);\n    fs.unlinkSync(path.join(appPath, 'gitignore'));\n  } else {\n    // Rename gitignore after the fact to prevent npm from renaming it to .npmignore\n    // See: https://github.com/npm/npm/issues/1862\n    fs.moveSync(\n      path.join(appPath, 'gitignore'),\n      path.join(appPath, '.gitignore'),\n      []\n    );\n  }\n\n  // Initialize git repo\n  let initializedGit = false;\n\n  if (tryGitInit()) {\n    initializedGit = true;\n    console.log();\n    console.log('Initialized a git repository.');\n  }\n\n  let command;\n  let remove;\n  let args;\n\n  if (useYarn) {\n    command = 'yarnpkg';\n    remove = 'remove';\n    args = ['add'];\n  } else {\n    command = 'npm';\n    remove = 'uninstall';\n    args = [\n      'install',\n      '--no-audit', // https://github.com/facebook/create-react-app/issues/11174\n      '--save',\n      verbose && '--verbose',\n    ].filter(e => e);\n  }\n\n  // Install additional template dependencies, if present.\n  const dependenciesToInstall = Object.entries({\n    ...templatePackage.dependencies,\n    ...templatePackage.devDependencies,\n  });\n  if (dependenciesToInstall.length) {\n    args = args.concat(\n      dependenciesToInstall.map(([dependency, version]) => {\n        return `${dependency}@${version}`;\n      })\n    );\n  }\n\n  // Install react and react-dom for backward compatibility with old CRA cli\n  // which doesn't install react and react-dom along with react-scripts\n  if (!isReactInstalled(appPackage)) {\n    args = args.concat(['react', 'react-dom']);\n  }\n\n  // Install template dependencies, and react and react-dom if missing.\n  if ((!isReactInstalled(appPackage) || templateName) && args.length > 1) {\n    console.log();\n    console.log(`Installing template dependencies using ${command}...`);\n\n    const proc = spawn.sync(command, args, { stdio: 'inherit' });\n    if (proc.status !== 0) {\n      console.error(`\\`${command} ${args.join(' ')}\\` failed`);\n      return;\n    }\n  }\n\n  if (args.find(arg => arg.includes('typescript'))) {\n    console.log();\n    verifyTypeScriptSetup();\n  }\n\n  // Remove template\n  console.log(`Removing template package using ${command}...`);\n  console.log();\n\n  const proc = spawn.sync(command, [remove, templateName], {\n    stdio: 'inherit',\n  });\n  if (proc.status !== 0) {\n    console.error(`\\`${command} ${args.join(' ')}\\` failed`);\n    return;\n  }\n\n  // Create git commit if git repo was initialized\n  if (initializedGit && tryGitCommit(appPath)) {\n    console.log();\n    console.log('Created git commit.');\n  }\n\n  // Display the most elegant way to cd.\n  // This needs to handle an undefined originalDirectory for\n  // backward compatibility with old global-cli's.\n  let cdpath;\n  if (originalDirectory && path.join(originalDirectory, appName) === appPath) {\n    cdpath = appName;\n  } else {\n    cdpath = appPath;\n  }\n\n  // Change displayed command to yarn instead of yarnpkg\n  const displayedCommand = useYarn ? 'yarn' : 'npm';\n\n  console.log();\n  console.log(`Success! Created ${appName} at ${appPath}`);\n  console.log('Inside that directory, you can run several commands:');\n  console.log();\n  console.log(chalk.cyan(`  ${displayedCommand} start`));\n  console.log('    Starts the development server.');\n  console.log();\n  console.log(\n    chalk.cyan(`  ${displayedCommand} ${useYarn ? '' : 'run '}build`)\n  );\n  console.log('    Bundles the app into static files for production.');\n  console.log();\n  console.log(chalk.cyan(`  ${displayedCommand} test`));\n  console.log('    Starts the test runner.');\n  console.log();\n  console.log(\n    chalk.cyan(`  ${displayedCommand} ${useYarn ? '' : 'run '}eject`)\n  );\n  console.log(\n    '    Removes this tool and copies build dependencies, configuration files'\n  );\n  console.log(\n    '    and scripts into the app directory. If you do this, you can’t go back!'\n  );\n  console.log();\n  console.log('We suggest that you begin by typing:');\n  console.log();\n  console.log(chalk.cyan('  cd'), cdpath);\n  console.log(`  ${chalk.cyan(`${displayedCommand} start`)}`);\n  if (readmeExists) {\n    console.log();\n    console.log(\n      chalk.yellow(\n        'You had a `README.md` file, we renamed it to `README.old.md`'\n      )\n    );\n  }\n  console.log();\n  console.log('Happy hacking!');\n};\n\nfunction isReactInstalled(appPackage) {\n  const dependencies = appPackage.dependencies || {};\n\n  return (\n    typeof dependencies.react !== 'undefined' &&\n    typeof dependencies['react-dom'] !== 'undefined'\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}