{"ast":null,"code":"var everyValuesPair = require('./every-values-pair');\n\nvar hasInherit = require('./has-inherit');\n\nvar hasSameValues = require('./has-same-values');\n\nvar populateComponents = require('./populate-components');\n\nvar configuration = require('../../configuration');\n\nvar deepClone = require('../../clone').deep;\n\nvar restoreWithComponents = require('../restore-with-components');\n\nvar restoreFromOptimizing = require('../../restore-from-optimizing');\n\nvar wrapSingle = require('../../wrap-for-optimizing').single;\n\nvar serializeBody = require('../../../writer/one-time').body;\n\nvar Token = require('../../../tokenizer/token');\n\nfunction mergeIntoShorthands(properties, validator) {\n  var candidates = {};\n  var descriptor;\n  var componentOf;\n  var property;\n  var i, l;\n  var j, m; // there is no shorthand property made up of less than 3 longhands\n\n  if (properties.length < 3) {\n    return;\n  }\n\n  for (i = 0, l = properties.length; i < l; i++) {\n    property = properties[i];\n    descriptor = configuration[property.name];\n\n    if (property.dynamic) {\n      continue;\n    }\n\n    if (property.unused) {\n      continue;\n    }\n\n    if (property.hack) {\n      continue;\n    }\n\n    if (property.block) {\n      continue;\n    }\n\n    if (descriptor && descriptor.singleTypeComponents && !hasSameValues(property)) {\n      continue;\n    }\n\n    invalidateOrCompact(properties, i, candidates, validator);\n\n    if (descriptor && descriptor.componentOf) {\n      for (j = 0, m = descriptor.componentOf.length; j < m; j++) {\n        componentOf = descriptor.componentOf[j];\n        candidates[componentOf] = candidates[componentOf] || {};\n        candidates[componentOf][property.name] = property;\n      }\n    }\n  }\n\n  invalidateOrCompact(properties, i, candidates, validator);\n}\n\nfunction invalidateOrCompact(properties, position, candidates, validator) {\n  var invalidatedBy = properties[position];\n  var shorthandName;\n  var shorthandDescriptor;\n  var candidateComponents;\n  var replacedCandidates = [];\n  var i;\n\n  for (shorthandName in candidates) {\n    if (undefined !== invalidatedBy && shorthandName == invalidatedBy.name) {\n      continue;\n    }\n\n    shorthandDescriptor = configuration[shorthandName];\n    candidateComponents = candidates[shorthandName];\n\n    if (invalidatedBy && invalidates(candidates, shorthandName, invalidatedBy)) {\n      delete candidates[shorthandName];\n      continue;\n    }\n\n    if (shorthandDescriptor.components.length > Object.keys(candidateComponents).length) {\n      continue;\n    }\n\n    if (mixedImportance(candidateComponents)) {\n      continue;\n    }\n\n    if (!overridable(candidateComponents, shorthandName, validator)) {\n      continue;\n    }\n\n    if (!mergeable(candidateComponents)) {\n      continue;\n    }\n\n    if (mixedInherit(candidateComponents)) {\n      replaceWithInheritBestFit(properties, candidateComponents, shorthandName, validator);\n    } else {\n      replaceWithShorthand(properties, candidateComponents, shorthandName, validator);\n    }\n\n    replacedCandidates.push(shorthandName);\n  }\n\n  for (i = replacedCandidates.length - 1; i >= 0; i--) {\n    delete candidates[replacedCandidates[i]];\n  }\n}\n\nfunction invalidates(candidates, shorthandName, invalidatedBy) {\n  var shorthandDescriptor = configuration[shorthandName];\n  var invalidatedByDescriptor = configuration[invalidatedBy.name];\n  var componentName;\n\n  if ('overridesShorthands' in shorthandDescriptor && shorthandDescriptor.overridesShorthands.indexOf(invalidatedBy.name) > -1) {\n    return true;\n  }\n\n  if (invalidatedByDescriptor && 'componentOf' in invalidatedByDescriptor) {\n    for (componentName in candidates[shorthandName]) {\n      if (invalidatedByDescriptor.componentOf.indexOf(componentName) > -1) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n\nfunction mixedImportance(components) {\n  var important;\n  var componentName;\n\n  for (componentName in components) {\n    if (undefined !== important && components[componentName].important != important) {\n      return true;\n    }\n\n    important = components[componentName].important;\n  }\n\n  return false;\n}\n\nfunction overridable(components, shorthandName, validator) {\n  var descriptor = configuration[shorthandName];\n  var newValuePlaceholder = [Token.PROPERTY, [Token.PROPERTY_NAME, shorthandName], [Token.PROPERTY_VALUE, descriptor.defaultValue]];\n  var newProperty = wrapSingle(newValuePlaceholder);\n  var component;\n  var mayOverride;\n  var i, l;\n  populateComponents([newProperty], validator, []);\n\n  for (i = 0, l = descriptor.components.length; i < l; i++) {\n    component = components[descriptor.components[i]];\n    mayOverride = configuration[component.name].canOverride || sameValue;\n\n    if (!everyValuesPair(mayOverride.bind(null, validator), newProperty.components[i], component)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction sameValue(_validator, value1, value2) {\n  return value1 === value2;\n}\n\nfunction mergeable(components) {\n  var lastCount = null;\n  var currentCount;\n  var componentName;\n  var component;\n  var descriptor;\n  var values;\n\n  for (componentName in components) {\n    component = components[componentName];\n    descriptor = configuration[componentName];\n\n    if (!('restore' in descriptor)) {\n      continue;\n    }\n\n    restoreFromOptimizing([component.all[component.position]], restoreWithComponents);\n    values = descriptor.restore(component, configuration);\n    currentCount = values.length;\n\n    if (lastCount !== null && currentCount !== lastCount) {\n      return false;\n    }\n\n    lastCount = currentCount;\n  }\n\n  return true;\n}\n\nfunction mixedInherit(components) {\n  var componentName;\n  var lastValue = null;\n  var currentValue;\n\n  for (componentName in components) {\n    currentValue = hasInherit(components[componentName]);\n\n    if (lastValue !== null && lastValue !== currentValue) {\n      return true;\n    }\n\n    lastValue = currentValue;\n  }\n\n  return false;\n}\n\nfunction replaceWithInheritBestFit(properties, candidateComponents, shorthandName, validator) {\n  var viaLonghands = buildSequenceWithInheritLonghands(candidateComponents, shorthandName, validator);\n  var viaShorthand = buildSequenceWithInheritShorthand(candidateComponents, shorthandName, validator);\n  var longhandTokensSequence = viaLonghands[0];\n  var shorthandTokensSequence = viaShorthand[0];\n  var isLonghandsShorter = serializeBody(longhandTokensSequence).length < serializeBody(shorthandTokensSequence).length;\n  var newTokensSequence = isLonghandsShorter ? longhandTokensSequence : shorthandTokensSequence;\n  var newProperty = isLonghandsShorter ? viaLonghands[1] : viaShorthand[1];\n  var newComponents = isLonghandsShorter ? viaLonghands[2] : viaShorthand[2];\n  var lastComponent = candidateComponents[Object.keys(candidateComponents).pop()];\n  var all = lastComponent.all;\n  var insertAt = lastComponent.position;\n  var componentName;\n  var oldComponent;\n  var newComponent;\n  var newToken;\n  newProperty.position = insertAt;\n  newProperty.shorthand = true;\n  newProperty.important = lastComponent.important;\n  newProperty.multiplex = false;\n  newProperty.dirty = true;\n  newProperty.all = all;\n  newProperty.all[insertAt] = newTokensSequence[0];\n  properties.splice(insertAt, 1, newProperty);\n\n  for (componentName in candidateComponents) {\n    oldComponent = candidateComponents[componentName];\n    oldComponent.unused = true;\n    newProperty.multiplex = newProperty.multiplex || oldComponent.multiplex;\n\n    if (oldComponent.name in newComponents) {\n      newComponent = newComponents[oldComponent.name];\n      newToken = findTokenIn(newTokensSequence, componentName);\n      newComponent.position = all.length;\n      newComponent.all = all;\n      newComponent.all.push(newToken);\n      properties.push(newComponent);\n    }\n  }\n}\n\nfunction buildSequenceWithInheritLonghands(components, shorthandName, validator) {\n  var tokensSequence = [];\n  var inheritComponents = {};\n  var nonInheritComponents = {};\n  var descriptor = configuration[shorthandName];\n  var shorthandToken = [Token.PROPERTY, [Token.PROPERTY_NAME, shorthandName], [Token.PROPERTY_VALUE, descriptor.defaultValue]];\n  var newProperty = wrapSingle(shorthandToken);\n  var component;\n  var longhandToken;\n  var newComponent;\n  var nameMetadata;\n  var i, l;\n  populateComponents([newProperty], validator, []);\n\n  for (i = 0, l = descriptor.components.length; i < l; i++) {\n    component = components[descriptor.components[i]];\n\n    if (hasInherit(component)) {\n      longhandToken = component.all[component.position].slice(0, 2);\n      Array.prototype.push.apply(longhandToken, component.value);\n      tokensSequence.push(longhandToken);\n      newComponent = deepClone(component);\n      newComponent.value = inferComponentValue(components, newComponent.name);\n      newProperty.components[i] = newComponent;\n      inheritComponents[component.name] = deepClone(component);\n    } else {\n      newComponent = deepClone(component);\n      newComponent.all = component.all;\n      newProperty.components[i] = newComponent;\n      nonInheritComponents[component.name] = component;\n    }\n  }\n\n  newProperty.important = components[Object.keys(components).pop()].important;\n  nameMetadata = joinMetadata(nonInheritComponents, 1);\n  shorthandToken[1].push(nameMetadata);\n  restoreFromOptimizing([newProperty], restoreWithComponents);\n  shorthandToken = shorthandToken.slice(0, 2);\n  Array.prototype.push.apply(shorthandToken, newProperty.value);\n  tokensSequence.unshift(shorthandToken);\n  return [tokensSequence, newProperty, inheritComponents];\n}\n\nfunction inferComponentValue(components, propertyName) {\n  var descriptor = configuration[propertyName];\n\n  if ('oppositeTo' in descriptor) {\n    return components[descriptor.oppositeTo].value;\n  }\n\n  return [[Token.PROPERTY_VALUE, descriptor.defaultValue]];\n}\n\nfunction joinMetadata(components, at) {\n  var metadata = [];\n  var component;\n  var originalValue;\n  var componentMetadata;\n  var componentName;\n\n  for (componentName in components) {\n    component = components[componentName];\n    originalValue = component.all[component.position];\n    componentMetadata = originalValue[at][originalValue[at].length - 1];\n    Array.prototype.push.apply(metadata, componentMetadata);\n  }\n\n  return metadata.sort(metadataSorter);\n}\n\nfunction metadataSorter(metadata1, metadata2) {\n  var line1 = metadata1[0];\n  var line2 = metadata2[0];\n  var column1 = metadata1[1];\n  var column2 = metadata2[1];\n\n  if (line1 < line2) {\n    return -1;\n  }\n\n  if (line1 === line2) {\n    return column1 < column2 ? -1 : 1;\n  }\n\n  return 1;\n}\n\nfunction buildSequenceWithInheritShorthand(components, shorthandName, validator) {\n  var tokensSequence = [];\n  var inheritComponents = {};\n  var nonInheritComponents = {};\n  var descriptor = configuration[shorthandName];\n  var shorthandToken = [Token.PROPERTY, [Token.PROPERTY_NAME, shorthandName], [Token.PROPERTY_VALUE, 'inherit']];\n  var newProperty = wrapSingle(shorthandToken);\n  var component;\n  var longhandToken;\n  var nameMetadata;\n  var valueMetadata;\n  var i, l;\n  populateComponents([newProperty], validator, []);\n\n  for (i = 0, l = descriptor.components.length; i < l; i++) {\n    component = components[descriptor.components[i]];\n\n    if (hasInherit(component)) {\n      inheritComponents[component.name] = component;\n    } else {\n      longhandToken = component.all[component.position].slice(0, 2);\n      Array.prototype.push.apply(longhandToken, component.value);\n      tokensSequence.push(longhandToken);\n      nonInheritComponents[component.name] = deepClone(component);\n    }\n  }\n\n  nameMetadata = joinMetadata(inheritComponents, 1);\n  shorthandToken[1].push(nameMetadata);\n  valueMetadata = joinMetadata(inheritComponents, 2);\n  shorthandToken[2].push(valueMetadata);\n  tokensSequence.unshift(shorthandToken);\n  return [tokensSequence, newProperty, nonInheritComponents];\n}\n\nfunction findTokenIn(tokens, componentName) {\n  var i, l;\n\n  for (i = 0, l = tokens.length; i < l; i++) {\n    if (tokens[i][1][1] == componentName) {\n      return tokens[i];\n    }\n  }\n}\n\nfunction replaceWithShorthand(properties, candidateComponents, shorthandName, validator) {\n  var descriptor = configuration[shorthandName];\n  var nameMetadata;\n  var valueMetadata;\n  var newValuePlaceholder = [Token.PROPERTY, [Token.PROPERTY_NAME, shorthandName], [Token.PROPERTY_VALUE, descriptor.defaultValue]];\n  var all;\n  var insertAt = inferInsertAtFrom(properties, candidateComponents, shorthandName);\n  var newProperty = wrapSingle(newValuePlaceholder);\n  newProperty.shorthand = true;\n  newProperty.dirty = true;\n  newProperty.multiplex = false;\n  populateComponents([newProperty], validator, []);\n\n  for (var i = 0, l = descriptor.components.length; i < l; i++) {\n    var component = candidateComponents[descriptor.components[i]];\n    newProperty.components[i] = deepClone(component);\n    newProperty.important = component.important;\n    newProperty.multiplex = newProperty.multiplex || component.multiplex;\n    all = component.all;\n  }\n\n  for (var componentName in candidateComponents) {\n    candidateComponents[componentName].unused = true;\n  }\n\n  nameMetadata = joinMetadata(candidateComponents, 1);\n  newValuePlaceholder[1].push(nameMetadata);\n  valueMetadata = joinMetadata(candidateComponents, 2);\n  newValuePlaceholder[2].push(valueMetadata);\n  newProperty.position = insertAt;\n  newProperty.all = all;\n  newProperty.all[insertAt] = newValuePlaceholder;\n  properties.splice(insertAt, 1, newProperty);\n}\n\nfunction inferInsertAtFrom(properties, candidateComponents, shorthandName) {\n  var candidateComponentNames = Object.keys(candidateComponents);\n  var firstCandidatePosition = candidateComponents[candidateComponentNames[0]].position;\n  var lastCandidatePosition = candidateComponents[candidateComponentNames[candidateComponentNames.length - 1]].position;\n\n  if (shorthandName == 'border' && traversesVia(properties.slice(firstCandidatePosition, lastCandidatePosition), 'border-image')) {\n    return firstCandidatePosition;\n  }\n\n  return lastCandidatePosition;\n}\n\nfunction traversesVia(properties, propertyName) {\n  for (var i = properties.length - 1; i >= 0; i--) {\n    if (properties[i].name == propertyName) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nmodule.exports = mergeIntoShorthands;","map":{"version":3,"names":["everyValuesPair","require","hasInherit","hasSameValues","populateComponents","configuration","deepClone","deep","restoreWithComponents","restoreFromOptimizing","wrapSingle","single","serializeBody","body","Token","mergeIntoShorthands","properties","validator","candidates","descriptor","componentOf","property","i","l","j","m","length","name","dynamic","unused","hack","block","singleTypeComponents","invalidateOrCompact","position","invalidatedBy","shorthandName","shorthandDescriptor","candidateComponents","replacedCandidates","undefined","invalidates","components","Object","keys","mixedImportance","overridable","mergeable","mixedInherit","replaceWithInheritBestFit","replaceWithShorthand","push","invalidatedByDescriptor","componentName","overridesShorthands","indexOf","important","newValuePlaceholder","PROPERTY","PROPERTY_NAME","PROPERTY_VALUE","defaultValue","newProperty","component","mayOverride","canOverride","sameValue","bind","_validator","value1","value2","lastCount","currentCount","values","all","restore","lastValue","currentValue","viaLonghands","buildSequenceWithInheritLonghands","viaShorthand","buildSequenceWithInheritShorthand","longhandTokensSequence","shorthandTokensSequence","isLonghandsShorter","newTokensSequence","newComponents","lastComponent","pop","insertAt","oldComponent","newComponent","newToken","shorthand","multiplex","dirty","splice","findTokenIn","tokensSequence","inheritComponents","nonInheritComponents","shorthandToken","longhandToken","nameMetadata","slice","Array","prototype","apply","value","inferComponentValue","joinMetadata","unshift","propertyName","oppositeTo","at","metadata","originalValue","componentMetadata","sort","metadataSorter","metadata1","metadata2","line1","line2","column1","column2","valueMetadata","tokens","inferInsertAtFrom","candidateComponentNames","firstCandidatePosition","lastCandidatePosition","traversesVia","module","exports"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/clean-css/lib/optimizer/level-2/properties/merge-into-shorthands.js"],"sourcesContent":["var everyValuesPair = require('./every-values-pair');\nvar hasInherit = require('./has-inherit');\nvar hasSameValues = require('./has-same-values');\nvar populateComponents = require('./populate-components');\n\nvar configuration = require('../../configuration');\nvar deepClone = require('../../clone').deep;\nvar restoreWithComponents = require('../restore-with-components');\n\nvar restoreFromOptimizing = require('../../restore-from-optimizing');\nvar wrapSingle = require('../../wrap-for-optimizing').single;\n\nvar serializeBody = require('../../../writer/one-time').body;\nvar Token = require('../../../tokenizer/token');\n\nfunction mergeIntoShorthands(properties, validator) {\n  var candidates = {};\n  var descriptor;\n  var componentOf;\n  var property;\n  var i, l;\n  var j, m;\n\n  // there is no shorthand property made up of less than 3 longhands\n  if (properties.length < 3) {\n    return;\n  }\n\n  for (i = 0, l = properties.length; i < l; i++) {\n    property = properties[i];\n    descriptor = configuration[property.name];\n\n    if (property.dynamic) {\n      continue;\n    }\n\n    if (property.unused) {\n      continue;\n    }\n\n    if (property.hack) {\n      continue;\n    }\n\n    if (property.block) {\n      continue;\n    }\n\n    if (descriptor && descriptor.singleTypeComponents && !hasSameValues(property)) {\n      continue;\n    }\n\n    invalidateOrCompact(properties, i, candidates, validator);\n\n    if (descriptor && descriptor.componentOf) {\n      for (j = 0, m = descriptor.componentOf.length; j < m; j++) {\n        componentOf = descriptor.componentOf[j];\n\n        candidates[componentOf] = candidates[componentOf] || {};\n        candidates[componentOf][property.name] = property;\n      }\n    }\n  }\n\n  invalidateOrCompact(properties, i, candidates, validator);\n}\n\nfunction invalidateOrCompact(properties, position, candidates, validator) {\n  var invalidatedBy = properties[position];\n  var shorthandName;\n  var shorthandDescriptor;\n  var candidateComponents;\n  var replacedCandidates = [];\n  var i;\n\n  for (shorthandName in candidates) {\n    if (undefined !== invalidatedBy && shorthandName == invalidatedBy.name) {\n      continue;\n    }\n\n    shorthandDescriptor = configuration[shorthandName];\n    candidateComponents = candidates[shorthandName];\n    if (invalidatedBy && invalidates(candidates, shorthandName, invalidatedBy)) {\n      delete candidates[shorthandName];\n      continue;\n    }\n\n    if (shorthandDescriptor.components.length > Object.keys(candidateComponents).length) {\n      continue;\n    }\n\n    if (mixedImportance(candidateComponents)) {\n      continue;\n    }\n\n    if (!overridable(candidateComponents, shorthandName, validator)) {\n      continue;\n    }\n\n    if (!mergeable(candidateComponents)) {\n      continue;\n    }\n\n    if (mixedInherit(candidateComponents)) {\n      replaceWithInheritBestFit(properties, candidateComponents, shorthandName, validator);\n    } else {\n      replaceWithShorthand(properties, candidateComponents, shorthandName, validator);\n    }\n\n    replacedCandidates.push(shorthandName);\n  }\n\n  for (i = replacedCandidates.length - 1; i >= 0; i--) {\n    delete candidates[replacedCandidates[i]];\n  }\n}\n\nfunction invalidates(candidates, shorthandName, invalidatedBy) {\n  var shorthandDescriptor = configuration[shorthandName];\n  var invalidatedByDescriptor = configuration[invalidatedBy.name];\n  var componentName;\n\n  if ('overridesShorthands' in shorthandDescriptor && shorthandDescriptor.overridesShorthands.indexOf(invalidatedBy.name) > -1) {\n    return true;\n  }\n\n  if (invalidatedByDescriptor && 'componentOf' in invalidatedByDescriptor) {\n    for (componentName in candidates[shorthandName]) {\n      if (invalidatedByDescriptor.componentOf.indexOf(componentName) > -1) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n\nfunction mixedImportance(components) {\n  var important;\n  var componentName;\n\n  for (componentName in components) {\n    if (undefined !== important && components[componentName].important != important) {\n      return true;\n    }\n\n    important = components[componentName].important;\n  }\n\n  return false;\n}\n\nfunction overridable(components, shorthandName, validator) {\n  var descriptor = configuration[shorthandName];\n  var newValuePlaceholder = [\n    Token.PROPERTY,\n    [Token.PROPERTY_NAME, shorthandName],\n    [Token.PROPERTY_VALUE, descriptor.defaultValue]\n  ];\n  var newProperty = wrapSingle(newValuePlaceholder);\n  var component;\n  var mayOverride;\n  var i, l;\n\n  populateComponents([newProperty], validator, []);\n\n  for (i = 0, l = descriptor.components.length; i < l; i++) {\n    component = components[descriptor.components[i]];\n    mayOverride = configuration[component.name].canOverride || sameValue;\n\n    if (!everyValuesPair(mayOverride.bind(null, validator), newProperty.components[i], component)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction sameValue(_validator, value1, value2) {\n  return value1 === value2;\n}\n\nfunction mergeable(components) {\n  var lastCount = null;\n  var currentCount;\n  var componentName;\n  var component;\n  var descriptor;\n  var values;\n\n  for (componentName in components) {\n    component = components[componentName];\n    descriptor = configuration[componentName];\n\n    if (!('restore' in descriptor)) {\n      continue;\n    }\n\n    restoreFromOptimizing([component.all[component.position]], restoreWithComponents);\n    values = descriptor.restore(component, configuration);\n\n    currentCount = values.length;\n\n    if (lastCount !== null && currentCount !== lastCount) {\n      return false;\n    }\n\n    lastCount = currentCount;\n  }\n\n  return true;\n}\n\nfunction mixedInherit(components) {\n  var componentName;\n  var lastValue = null;\n  var currentValue;\n\n  for (componentName in components) {\n    currentValue = hasInherit(components[componentName]);\n\n    if (lastValue !== null && lastValue !== currentValue) {\n      return true;\n    }\n\n    lastValue = currentValue;\n  }\n\n  return false;\n}\n\nfunction replaceWithInheritBestFit(properties, candidateComponents, shorthandName, validator) {\n  var viaLonghands = buildSequenceWithInheritLonghands(candidateComponents, shorthandName, validator);\n  var viaShorthand = buildSequenceWithInheritShorthand(candidateComponents, shorthandName, validator);\n  var longhandTokensSequence = viaLonghands[0];\n  var shorthandTokensSequence = viaShorthand[0];\n  var isLonghandsShorter = serializeBody(longhandTokensSequence).length < serializeBody(shorthandTokensSequence).length;\n  var newTokensSequence = isLonghandsShorter ? longhandTokensSequence : shorthandTokensSequence;\n  var newProperty = isLonghandsShorter ? viaLonghands[1] : viaShorthand[1];\n  var newComponents = isLonghandsShorter ? viaLonghands[2] : viaShorthand[2];\n  var lastComponent = candidateComponents[Object.keys(candidateComponents).pop()];\n  var all = lastComponent.all;\n  var insertAt = lastComponent.position;\n  var componentName;\n  var oldComponent;\n  var newComponent;\n  var newToken;\n\n  newProperty.position = insertAt;\n  newProperty.shorthand = true;\n  newProperty.important = lastComponent.important;\n  newProperty.multiplex = false;\n  newProperty.dirty = true;\n  newProperty.all = all;\n  newProperty.all[insertAt] = newTokensSequence[0];\n\n  properties.splice(insertAt, 1, newProperty);\n\n  for (componentName in candidateComponents) {\n    oldComponent = candidateComponents[componentName];\n    oldComponent.unused = true;\n\n    newProperty.multiplex = newProperty.multiplex || oldComponent.multiplex;\n\n    if (oldComponent.name in newComponents) {\n      newComponent = newComponents[oldComponent.name];\n      newToken = findTokenIn(newTokensSequence, componentName);\n\n      newComponent.position = all.length;\n      newComponent.all = all;\n      newComponent.all.push(newToken);\n\n      properties.push(newComponent);\n    }\n  }\n}\n\nfunction buildSequenceWithInheritLonghands(components, shorthandName, validator) {\n  var tokensSequence = [];\n  var inheritComponents = {};\n  var nonInheritComponents = {};\n  var descriptor = configuration[shorthandName];\n  var shorthandToken = [\n    Token.PROPERTY,\n    [Token.PROPERTY_NAME, shorthandName],\n    [Token.PROPERTY_VALUE, descriptor.defaultValue]\n  ];\n  var newProperty = wrapSingle(shorthandToken);\n  var component;\n  var longhandToken;\n  var newComponent;\n  var nameMetadata;\n  var i, l;\n\n  populateComponents([newProperty], validator, []);\n\n  for (i = 0, l = descriptor.components.length; i < l; i++) {\n    component = components[descriptor.components[i]];\n\n    if (hasInherit(component)) {\n      longhandToken = component.all[component.position].slice(0, 2);\n      Array.prototype.push.apply(longhandToken, component.value);\n      tokensSequence.push(longhandToken);\n\n      newComponent = deepClone(component);\n      newComponent.value = inferComponentValue(components, newComponent.name);\n\n      newProperty.components[i] = newComponent;\n      inheritComponents[component.name] = deepClone(component);\n    } else {\n      newComponent = deepClone(component);\n      newComponent.all = component.all;\n      newProperty.components[i] = newComponent;\n\n      nonInheritComponents[component.name] = component;\n    }\n  }\n\n  newProperty.important = components[Object.keys(components).pop()].important;\n\n  nameMetadata = joinMetadata(nonInheritComponents, 1);\n  shorthandToken[1].push(nameMetadata);\n\n  restoreFromOptimizing([newProperty], restoreWithComponents);\n\n  shorthandToken = shorthandToken.slice(0, 2);\n  Array.prototype.push.apply(shorthandToken, newProperty.value);\n\n  tokensSequence.unshift(shorthandToken);\n\n  return [tokensSequence, newProperty, inheritComponents];\n}\n\nfunction inferComponentValue(components, propertyName) {\n  var descriptor = configuration[propertyName];\n\n  if ('oppositeTo' in descriptor) {\n    return components[descriptor.oppositeTo].value;\n  }\n  return [[Token.PROPERTY_VALUE, descriptor.defaultValue]];\n}\n\nfunction joinMetadata(components, at) {\n  var metadata = [];\n  var component;\n  var originalValue;\n  var componentMetadata;\n  var componentName;\n\n  for (componentName in components) {\n    component = components[componentName];\n    originalValue = component.all[component.position];\n    componentMetadata = originalValue[at][originalValue[at].length - 1];\n\n    Array.prototype.push.apply(metadata, componentMetadata);\n  }\n\n  return metadata.sort(metadataSorter);\n}\n\nfunction metadataSorter(metadata1, metadata2) {\n  var line1 = metadata1[0];\n  var line2 = metadata2[0];\n  var column1 = metadata1[1];\n  var column2 = metadata2[1];\n\n  if (line1 < line2) {\n    return -1;\n  } if (line1 === line2) {\n    return column1 < column2 ? -1 : 1;\n  }\n  return 1;\n}\n\nfunction buildSequenceWithInheritShorthand(components, shorthandName, validator) {\n  var tokensSequence = [];\n  var inheritComponents = {};\n  var nonInheritComponents = {};\n  var descriptor = configuration[shorthandName];\n  var shorthandToken = [\n    Token.PROPERTY,\n    [Token.PROPERTY_NAME, shorthandName],\n    [Token.PROPERTY_VALUE, 'inherit']\n  ];\n  var newProperty = wrapSingle(shorthandToken);\n  var component;\n  var longhandToken;\n  var nameMetadata;\n  var valueMetadata;\n  var i, l;\n\n  populateComponents([newProperty], validator, []);\n\n  for (i = 0, l = descriptor.components.length; i < l; i++) {\n    component = components[descriptor.components[i]];\n\n    if (hasInherit(component)) {\n      inheritComponents[component.name] = component;\n    } else {\n      longhandToken = component.all[component.position].slice(0, 2);\n      Array.prototype.push.apply(longhandToken, component.value);\n      tokensSequence.push(longhandToken);\n\n      nonInheritComponents[component.name] = deepClone(component);\n    }\n  }\n\n  nameMetadata = joinMetadata(inheritComponents, 1);\n  shorthandToken[1].push(nameMetadata);\n\n  valueMetadata = joinMetadata(inheritComponents, 2);\n  shorthandToken[2].push(valueMetadata);\n\n  tokensSequence.unshift(shorthandToken);\n\n  return [tokensSequence, newProperty, nonInheritComponents];\n}\n\nfunction findTokenIn(tokens, componentName) {\n  var i, l;\n\n  for (i = 0, l = tokens.length; i < l; i++) {\n    if (tokens[i][1][1] == componentName) {\n      return tokens[i];\n    }\n  }\n}\n\nfunction replaceWithShorthand(properties, candidateComponents, shorthandName, validator) {\n  var descriptor = configuration[shorthandName];\n  var nameMetadata;\n  var valueMetadata;\n  var newValuePlaceholder = [\n    Token.PROPERTY,\n    [Token.PROPERTY_NAME, shorthandName],\n    [Token.PROPERTY_VALUE, descriptor.defaultValue]\n  ];\n  var all;\n  var insertAt = inferInsertAtFrom(properties, candidateComponents, shorthandName);\n\n  var newProperty = wrapSingle(newValuePlaceholder);\n  newProperty.shorthand = true;\n  newProperty.dirty = true;\n  newProperty.multiplex = false;\n\n  populateComponents([newProperty], validator, []);\n\n  for (var i = 0, l = descriptor.components.length; i < l; i++) {\n    var component = candidateComponents[descriptor.components[i]];\n\n    newProperty.components[i] = deepClone(component);\n    newProperty.important = component.important;\n    newProperty.multiplex = newProperty.multiplex || component.multiplex;\n\n    all = component.all;\n  }\n\n  for (var componentName in candidateComponents) {\n    candidateComponents[componentName].unused = true;\n  }\n\n  nameMetadata = joinMetadata(candidateComponents, 1);\n  newValuePlaceholder[1].push(nameMetadata);\n\n  valueMetadata = joinMetadata(candidateComponents, 2);\n  newValuePlaceholder[2].push(valueMetadata);\n\n  newProperty.position = insertAt;\n  newProperty.all = all;\n  newProperty.all[insertAt] = newValuePlaceholder;\n\n  properties.splice(insertAt, 1, newProperty);\n}\n\nfunction inferInsertAtFrom(properties, candidateComponents, shorthandName) {\n  var candidateComponentNames = Object.keys(candidateComponents);\n  var firstCandidatePosition = candidateComponents[candidateComponentNames[0]].position;\n  var lastCandidatePosition = candidateComponents[candidateComponentNames[candidateComponentNames.length - 1]].position;\n\n  if (shorthandName == 'border' && traversesVia(properties.slice(firstCandidatePosition, lastCandidatePosition), 'border-image')) {\n    return firstCandidatePosition;\n  }\n  return lastCandidatePosition;\n}\n\nfunction traversesVia(properties, propertyName) {\n  for (var i = properties.length - 1; i >= 0; i--) {\n    if (properties[i].name == propertyName) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nmodule.exports = mergeIntoShorthands;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}