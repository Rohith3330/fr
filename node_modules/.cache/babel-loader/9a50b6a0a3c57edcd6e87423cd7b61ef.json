{"ast":null,"code":"'use strict';\n\nconst os = require('os');\n\nconst fs = require('fs');\n\nconst {\n  pathToFileURL\n} = require('url');\n\nconst path = require('path');\n\nconst {\n  extendDefaultPlugins,\n  optimize: optimizeAgnostic,\n  createContentItem\n} = require('./svgo.js');\n\nexports.extendDefaultPlugins = extendDefaultPlugins;\nexports.createContentItem = createContentItem;\n\nconst importConfig = async configFile => {\n  let config; // at the moment dynamic import may randomly fail with segfault\n  // to workaround this for some users .cjs extension is loaded\n  // exclusively with require\n\n  if (configFile.endsWith('.cjs')) {\n    config = require(configFile);\n  } else {\n    try {\n      // dynamic import expects file url instead of path and may fail\n      // when windows path is provided\n      const {\n        default: imported\n      } = await import(pathToFileURL(configFile));\n      config = imported;\n    } catch (importError) {\n      // TODO remove require in v3\n      try {\n        config = require(configFile);\n      } catch (requireError) {\n        // throw original error if es module is detected\n        if (requireError.code === 'ERR_REQUIRE_ESM') {\n          throw importError;\n        } else {\n          throw requireError;\n        }\n      }\n    }\n  }\n\n  if (config == null || typeof config !== 'object' || Array.isArray(config)) {\n    throw Error(`Invalid config file \"${configFile}\"`);\n  }\n\n  return config;\n};\n\nconst isFile = async file => {\n  try {\n    const stats = await fs.promises.stat(file);\n    return stats.isFile();\n  } catch {\n    return false;\n  }\n};\n\nconst loadConfig = async function (configFile) {\n  let cwd = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : process.cwd();\n\n  if (configFile != null) {\n    if (path.isAbsolute(configFile)) {\n      return await importConfig(configFile);\n    } else {\n      return await importConfig(path.join(cwd, configFile));\n    }\n  }\n\n  let dir = cwd; // eslint-disable-next-line no-constant-condition\n\n  while (true) {\n    const js = path.join(dir, 'svgo.config.js');\n\n    if (await isFile(js)) {\n      return await importConfig(js);\n    }\n\n    const mjs = path.join(dir, 'svgo.config.mjs');\n\n    if (await isFile(mjs)) {\n      return await importConfig(mjs);\n    }\n\n    const cjs = path.join(dir, 'svgo.config.cjs');\n\n    if (await isFile(cjs)) {\n      return await importConfig(cjs);\n    }\n\n    const parent = path.dirname(dir);\n\n    if (dir === parent) {\n      return null;\n    }\n\n    dir = parent;\n  }\n};\n\nexports.loadConfig = loadConfig;\n\nconst optimize = (input, config) => {\n  if (config == null) {\n    config = {};\n  }\n\n  if (typeof config !== 'object') {\n    throw Error('Config should be an object');\n  }\n\n  return optimizeAgnostic(input, { ...config,\n    js2svg: {\n      // platform specific default for end of line\n      eol: os.EOL === '\\r\\n' ? 'crlf' : 'lf',\n      ...config.js2svg\n    }\n  });\n};\n\nexports.optimize = optimize;","map":{"version":3,"names":["os","require","fs","pathToFileURL","path","extendDefaultPlugins","optimize","optimizeAgnostic","createContentItem","exports","importConfig","configFile","config","endsWith","default","imported","importError","requireError","code","Array","isArray","Error","isFile","file","stats","promises","stat","loadConfig","cwd","process","isAbsolute","join","dir","js","mjs","cjs","parent","dirname","input","js2svg","eol","EOL"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/postcss-svgo/node_modules/svgo/lib/svgo-node.js"],"sourcesContent":["'use strict';\n\nconst os = require('os');\nconst fs = require('fs');\nconst { pathToFileURL } = require('url');\nconst path = require('path');\nconst {\n  extendDefaultPlugins,\n  optimize: optimizeAgnostic,\n  createContentItem,\n} = require('./svgo.js');\n\nexports.extendDefaultPlugins = extendDefaultPlugins;\nexports.createContentItem = createContentItem;\n\nconst importConfig = async (configFile) => {\n  let config;\n  // at the moment dynamic import may randomly fail with segfault\n  // to workaround this for some users .cjs extension is loaded\n  // exclusively with require\n  if (configFile.endsWith('.cjs')) {\n    config = require(configFile);\n  } else {\n    try {\n      // dynamic import expects file url instead of path and may fail\n      // when windows path is provided\n      const { default: imported } = await import(pathToFileURL(configFile));\n      config = imported;\n    } catch (importError) {\n      // TODO remove require in v3\n      try {\n        config = require(configFile);\n      } catch (requireError) {\n        // throw original error if es module is detected\n        if (requireError.code === 'ERR_REQUIRE_ESM') {\n          throw importError;\n        } else {\n          throw requireError;\n        }\n      }\n    }\n  }\n  if (config == null || typeof config !== 'object' || Array.isArray(config)) {\n    throw Error(`Invalid config file \"${configFile}\"`);\n  }\n  return config;\n};\n\nconst isFile = async (file) => {\n  try {\n    const stats = await fs.promises.stat(file);\n    return stats.isFile();\n  } catch {\n    return false;\n  }\n};\n\nconst loadConfig = async (configFile, cwd = process.cwd()) => {\n  if (configFile != null) {\n    if (path.isAbsolute(configFile)) {\n      return await importConfig(configFile);\n    } else {\n      return await importConfig(path.join(cwd, configFile));\n    }\n  }\n  let dir = cwd;\n  // eslint-disable-next-line no-constant-condition\n  while (true) {\n    const js = path.join(dir, 'svgo.config.js');\n    if (await isFile(js)) {\n      return await importConfig(js);\n    }\n    const mjs = path.join(dir, 'svgo.config.mjs');\n    if (await isFile(mjs)) {\n      return await importConfig(mjs);\n    }\n    const cjs = path.join(dir, 'svgo.config.cjs');\n    if (await isFile(cjs)) {\n      return await importConfig(cjs);\n    }\n    const parent = path.dirname(dir);\n    if (dir === parent) {\n      return null;\n    }\n    dir = parent;\n  }\n};\nexports.loadConfig = loadConfig;\n\nconst optimize = (input, config) => {\n  if (config == null) {\n    config = {};\n  }\n  if (typeof config !== 'object') {\n    throw Error('Config should be an object');\n  }\n  return optimizeAgnostic(input, {\n    ...config,\n    js2svg: {\n      // platform specific default for end of line\n      eol: os.EOL === '\\r\\n' ? 'crlf' : 'lf',\n      ...config.js2svg,\n    },\n  });\n};\nexports.optimize = optimize;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}