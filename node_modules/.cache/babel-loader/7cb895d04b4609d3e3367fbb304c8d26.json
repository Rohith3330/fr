{"ast":null,"code":"import { useRef } from 'react';\nimport useMounted from './useMounted';\nimport useStableMemo from './useStableMemo';\nimport useWillUnmount from './useWillUnmount';\n/**\n * Returns a controller object for requesting and cancelling an animation freame that is properly cleaned up\n * once the component unmounts. New requests cancel and replace existing ones.\n *\n * ```ts\n * const [style, setStyle] = useState({});\n * const animationFrame = useAnimationFrame();\n *\n * const handleMouseMove = (e) => {\n *   animationFrame.request(() => {\n *     setStyle({ top: e.clientY, left: e.clientY })\n *   })\n * }\n *\n * const handleMouseUp = () => {\n *   animationFrame.cancel()\n * }\n *\n * return (\n *   <div onMouseUp={handleMouseUp} onMouseMove={handleMouseMove}>\n *     <Ball style={style} />\n *   </div>\n * )\n * ```\n */\n\nexport default function useAnimationFrame() {\n  var isMounted = useMounted();\n  var handle = useRef();\n\n  var cancel = function cancel() {\n    if (handle.current != null) {\n      cancelAnimationFrame(handle.current);\n    }\n  };\n\n  useWillUnmount(cancel);\n  return useStableMemo(function () {\n    return {\n      request: function request(cancelPrevious, fn) {\n        if (!isMounted()) return;\n        if (cancelPrevious) cancel();\n        handle.current = requestAnimationFrame(fn || cancelPrevious);\n      },\n      cancel: cancel\n    };\n  }, []);\n}","map":{"version":3,"names":["useRef","useMounted","useStableMemo","useWillUnmount","useAnimationFrame","isMounted","handle","cancel","current","cancelAnimationFrame","request","cancelPrevious","fn","requestAnimationFrame"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/@restart/hooks/esm/useAnimationFrame.js"],"sourcesContent":["import { useRef } from 'react';\nimport useMounted from './useMounted';\nimport useStableMemo from './useStableMemo';\nimport useWillUnmount from './useWillUnmount';\n\n/**\n * Returns a controller object for requesting and cancelling an animation freame that is properly cleaned up\n * once the component unmounts. New requests cancel and replace existing ones.\n *\n * ```ts\n * const [style, setStyle] = useState({});\n * const animationFrame = useAnimationFrame();\n *\n * const handleMouseMove = (e) => {\n *   animationFrame.request(() => {\n *     setStyle({ top: e.clientY, left: e.clientY })\n *   })\n * }\n *\n * const handleMouseUp = () => {\n *   animationFrame.cancel()\n * }\n *\n * return (\n *   <div onMouseUp={handleMouseUp} onMouseMove={handleMouseMove}>\n *     <Ball style={style} />\n *   </div>\n * )\n * ```\n */\nexport default function useAnimationFrame() {\n  var isMounted = useMounted();\n  var handle = useRef();\n\n  var cancel = function cancel() {\n    if (handle.current != null) {\n      cancelAnimationFrame(handle.current);\n    }\n  };\n\n  useWillUnmount(cancel);\n  return useStableMemo(function () {\n    return {\n      request: function request(cancelPrevious, fn) {\n        if (!isMounted()) return;\n        if (cancelPrevious) cancel();\n        handle.current = requestAnimationFrame(fn || cancelPrevious);\n      },\n      cancel: cancel\n    };\n  }, []);\n}"],"mappings":"AAAA,SAASA,MAAT,QAAuB,OAAvB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAe,SAASC,iBAAT,GAA6B;EAC1C,IAAIC,SAAS,GAAGJ,UAAU,EAA1B;EACA,IAAIK,MAAM,GAAGN,MAAM,EAAnB;;EAEA,IAAIO,MAAM,GAAG,SAASA,MAAT,GAAkB;IAC7B,IAAID,MAAM,CAACE,OAAP,IAAkB,IAAtB,EAA4B;MAC1BC,oBAAoB,CAACH,MAAM,CAACE,OAAR,CAApB;IACD;EACF,CAJD;;EAMAL,cAAc,CAACI,MAAD,CAAd;EACA,OAAOL,aAAa,CAAC,YAAY;IAC/B,OAAO;MACLQ,OAAO,EAAE,SAASA,OAAT,CAAiBC,cAAjB,EAAiCC,EAAjC,EAAqC;QAC5C,IAAI,CAACP,SAAS,EAAd,EAAkB;QAClB,IAAIM,cAAJ,EAAoBJ,MAAM;QAC1BD,MAAM,CAACE,OAAP,GAAiBK,qBAAqB,CAACD,EAAE,IAAID,cAAP,CAAtC;MACD,CALI;MAMLJ,MAAM,EAAEA;IANH,CAAP;EAQD,CATmB,EASjB,EATiB,CAApB;AAUD"},"metadata":{},"sourceType":"module"}