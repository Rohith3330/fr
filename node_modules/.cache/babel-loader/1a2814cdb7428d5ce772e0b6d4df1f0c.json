{"ast":null,"code":"'use strict';\n\nexports.type = 'perItem';\nexports.active = false;\nexports.description = 'rounds list of values to the fixed precision';\nexports.params = {\n  floatPrecision: 3,\n  leadingZero: true,\n  defaultPx: true,\n  convertToPx: true\n};\n\nvar regNumericValues = /^([\\-+]?\\d*\\.?\\d+([eE][\\-+]?\\d+)?)(px|pt|pc|mm|cm|m|in|ft|em|ex|%)?$/,\n    regSeparator = /\\s+,?\\s*|,\\s*/,\n    removeLeadingZero = require('../lib/svgo/tools').removeLeadingZero,\n    absoluteLengths = {\n  // relative to px\n  cm: 96 / 2.54,\n  mm: 96 / 25.4,\n  in: 96,\n  pt: 4 / 3,\n  pc: 16\n};\n/**\n * Round list of values to the fixed precision.\n *\n * @example\n * <svg viewBox=\"0 0 200.28423 200.28423\" enable-background=\"new 0 0 200.28423 200.28423\">\n *         ⬇\n * <svg viewBox=\"0 0 200.284 200.284\" enable-background=\"new 0 0 200.284 200.284\">\n *\n *\n * <polygon points=\"208.250977 77.1308594 223.069336 ... \"/>\n *         ⬇\n * <polygon points=\"208.251 77.131 223.069 ... \"/>\n *\n *\n * @param {Object} item current iteration item\n * @param {Object} params plugin params\n * @return {Boolean} if false, item will be filtered out\n *\n * @author kiyopikko\n */\n\n\nexports.fn = function (item, params) {\n  if (item.hasAttr('points')) {\n    roundValues(item.attrs.points);\n  }\n\n  if (item.hasAttr('enable-background')) {\n    roundValues(item.attrs['enable-background']);\n  }\n\n  if (item.hasAttr('viewBox')) {\n    roundValues(item.attrs.viewBox);\n  }\n\n  if (item.hasAttr('stroke-dasharray')) {\n    roundValues(item.attrs['stroke-dasharray']);\n  }\n\n  if (item.hasAttr('dx')) {\n    roundValues(item.attrs.dx);\n  }\n\n  if (item.hasAttr('dy')) {\n    roundValues(item.attrs.dy);\n  }\n\n  if (item.hasAttr('x')) {\n    roundValues(item.attrs.x);\n  }\n\n  if (item.hasAttr('y')) {\n    roundValues(item.attrs.y);\n  }\n\n  function roundValues($prop) {\n    var num,\n        units,\n        match,\n        matchNew,\n        lists = $prop.value,\n        listsArr = lists.split(regSeparator),\n        roundedListArr = [],\n        roundedList;\n    listsArr.forEach(function (elem) {\n      match = elem.match(regNumericValues);\n      matchNew = elem.match(/new/); // if attribute value matches regNumericValues\n\n      if (match) {\n        // round it to the fixed precision\n        num = +(+match[1]).toFixed(params.floatPrecision), units = match[3] || ''; // convert absolute values to pixels\n\n        if (params.convertToPx && units && units in absoluteLengths) {\n          var pxNum = +(absoluteLengths[units] * match[1]).toFixed(params.floatPrecision);\n          if (String(pxNum).length < match[0].length) num = pxNum, units = 'px';\n        } // and remove leading zero\n\n\n        if (params.leadingZero) {\n          num = removeLeadingZero(num);\n        } // remove default 'px' units\n\n\n        if (params.defaultPx && units === 'px') {\n          units = '';\n        }\n\n        roundedListArr.push(num + units);\n      } // if attribute value is \"new\"(only enable-background).\n      else if (matchNew) {\n        roundedListArr.push('new');\n      } else if (elem) {\n        roundedListArr.push(elem);\n      }\n    });\n    roundedList = roundedListArr.join(' ');\n    $prop.value = roundedList;\n  }\n};","map":{"version":3,"names":["exports","type","active","description","params","floatPrecision","leadingZero","defaultPx","convertToPx","regNumericValues","regSeparator","removeLeadingZero","require","absoluteLengths","cm","mm","in","pt","pc","fn","item","hasAttr","roundValues","attrs","points","viewBox","dx","dy","x","y","$prop","num","units","match","matchNew","lists","value","listsArr","split","roundedListArr","roundedList","forEach","elem","toFixed","pxNum","String","length","push","join"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/svgo/plugins/cleanupListOfValues.js"],"sourcesContent":["'use strict';\n\nexports.type = 'perItem';\n\nexports.active = false;\n\nexports.description = 'rounds list of values to the fixed precision';\n\nexports.params = {\n    floatPrecision: 3,\n    leadingZero: true,\n    defaultPx: true,\n    convertToPx: true\n};\n\nvar regNumericValues = /^([\\-+]?\\d*\\.?\\d+([eE][\\-+]?\\d+)?)(px|pt|pc|mm|cm|m|in|ft|em|ex|%)?$/,\n    regSeparator = /\\s+,?\\s*|,\\s*/,\n    removeLeadingZero = require('../lib/svgo/tools').removeLeadingZero,\n    absoluteLengths = { // relative to px\n        cm: 96/2.54,\n        mm: 96/25.4,\n        in: 96,\n        pt: 4/3,\n        pc: 16\n    };\n\n/**\n * Round list of values to the fixed precision.\n *\n * @example\n * <svg viewBox=\"0 0 200.28423 200.28423\" enable-background=\"new 0 0 200.28423 200.28423\">\n *         ⬇\n * <svg viewBox=\"0 0 200.284 200.284\" enable-background=\"new 0 0 200.284 200.284\">\n *\n *\n * <polygon points=\"208.250977 77.1308594 223.069336 ... \"/>\n *         ⬇\n * <polygon points=\"208.251 77.131 223.069 ... \"/>\n *\n *\n * @param {Object} item current iteration item\n * @param {Object} params plugin params\n * @return {Boolean} if false, item will be filtered out\n *\n * @author kiyopikko\n */\nexports.fn = function(item, params) {\n\n\n    if ( item.hasAttr('points') ) {\n        roundValues(item.attrs.points);\n    }\n\n    if ( item.hasAttr('enable-background') ) {\n        roundValues(item.attrs['enable-background']);\n    }\n\n    if ( item.hasAttr('viewBox') ) {\n        roundValues(item.attrs.viewBox);\n    }\n\n    if ( item.hasAttr('stroke-dasharray') ) {\n        roundValues(item.attrs['stroke-dasharray']);\n    }\n\n    if ( item.hasAttr('dx') ) {\n        roundValues(item.attrs.dx);\n    }\n\n    if ( item.hasAttr('dy') ) {\n        roundValues(item.attrs.dy);\n    }\n\n    if ( item.hasAttr('x') ) {\n        roundValues(item.attrs.x);\n    }\n\n    if ( item.hasAttr('y') ) {\n        roundValues(item.attrs.y);\n    }\n\n\n    function roundValues($prop){\n\n        var num, units,\n            match,\n            matchNew,\n            lists = $prop.value,\n            listsArr = lists.split(regSeparator),\n            roundedListArr = [],\n            roundedList;\n\n        listsArr.forEach(function(elem){\n\n            match = elem.match(regNumericValues);\n            matchNew = elem.match(/new/);\n\n             // if attribute value matches regNumericValues\n            if (match) {\n                // round it to the fixed precision\n                num = +(+match[1]).toFixed(params.floatPrecision),\n                units = match[3] || '';\n\n                // convert absolute values to pixels\n                if (params.convertToPx && units && (units in absoluteLengths)) {\n                    var pxNum = +(absoluteLengths[units] * match[1]).toFixed(params.floatPrecision);\n\n                    if (String(pxNum).length < match[0].length)\n                        num = pxNum,\n                        units = 'px';\n                }\n\n                 // and remove leading zero\n                if (params.leadingZero) {\n                    num = removeLeadingZero(num);\n                }\n\n                // remove default 'px' units\n                if (params.defaultPx && units === 'px') {\n                    units = '';\n                }\n\n                roundedListArr.push(num+units);\n            }\n            // if attribute value is \"new\"(only enable-background).\n            else if (matchNew) {\n                roundedListArr.push('new');\n            } else if (elem) {\n                roundedListArr.push(elem);\n            }\n\n        });\n\n        roundedList = roundedListArr.join(' ');\n        $prop.value = roundedList;\n\n    }\n\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}