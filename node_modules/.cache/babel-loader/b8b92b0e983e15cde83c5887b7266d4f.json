{"ast":null,"code":"import * as t from \"@babel/types\";\nexport default function generateAsserts() {\n  let output = `/*\n * This file is auto-generated! Do not modify it directly.\n * To re-generate run 'make build'\n */\nimport type * as t from \"@babel/types\";\nimport type NodePath from \"../index\";\n\n\nexport interface NodePathAssetions {`;\n\n  for (const type of [...t.TYPES].sort()) {\n    output += `\n  assert${type}(\n    opts?: object,\n  ): asserts this is NodePath<t.${type}>;`;\n  }\n\n  output += `\n}`;\n  return output;\n}","map":{"version":3,"names":["t","generateAsserts","output","type","TYPES","sort"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/@babel/traverse/scripts/generators/asserts.js"],"sourcesContent":["import * as t from \"@babel/types\";\n\nexport default function generateAsserts() {\n  let output = `/*\n * This file is auto-generated! Do not modify it directly.\n * To re-generate run 'make build'\n */\nimport type * as t from \"@babel/types\";\nimport type NodePath from \"../index\";\n\n\nexport interface NodePathAssetions {`;\n\n  for (const type of [...t.TYPES].sort()) {\n    output += `\n  assert${type}(\n    opts?: object,\n  ): asserts this is NodePath<t.${type}>;`;\n  }\n\n  output += `\n}`;\n\n  return output;\n}\n"],"mappings":"AAAA,OAAO,KAAKA,CAAZ,MAAmB,cAAnB;AAEA,eAAe,SAASC,eAAT,GAA2B;EACxC,IAAIC,MAAM,GAAI;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCARE;;EAUA,KAAK,MAAMC,IAAX,IAAmB,CAAC,GAAGH,CAAC,CAACI,KAAN,EAAaC,IAAb,EAAnB,EAAwC;IACtCH,MAAM,IAAK;AACf,UAAUC,IAAK;AACf;AACA,kCAAkCA,IAAK,IAHnC;EAID;;EAEDD,MAAM,IAAK;AACb,EADE;EAGA,OAAOA,MAAP;AACD"},"metadata":{},"sourceType":"module"}