{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _helperPluginUtils = require(\"@babel/helper-plugin-utils\");\n\nvar _core = require(\"@babel/core\");\n\nvar _noHelperImplementation = require(\"./no-helper-implementation\");\n\nfunction buildLoopBody(path, declar, newBody) {\n  let block;\n  const bodyPath = path.get(\"body\");\n  const body = newBody != null ? newBody : bodyPath.node;\n\n  if (_core.types.isBlockStatement(body) && Object.keys(path.getBindingIdentifiers()).some(id => bodyPath.scope.hasOwnBinding(id))) {\n    block = _core.types.blockStatement([declar, body]);\n  } else {\n    block = _core.types.toBlock(body);\n    block.body.unshift(declar);\n  }\n\n  return block;\n}\n\nvar _default = (0, _helperPluginUtils.declare)((api, options) => {\n  var _options$assumeArray, _options$allowArrayLi, _api$assumption;\n\n  api.assertVersion(7);\n  {\n    const {\n      assumeArray,\n      allowArrayLike,\n      loose\n    } = options;\n\n    if (loose === true && assumeArray === true) {\n      throw new Error(`The loose and assumeArray options cannot be used together in @babel/plugin-transform-for-of`);\n    }\n\n    if (assumeArray === true && allowArrayLike === true) {\n      throw new Error(`The assumeArray and allowArrayLike options cannot be used together in @babel/plugin-transform-for-of`);\n    }\n\n    if (allowArrayLike && /^7\\.\\d\\./.test(api.version)) {\n      throw new Error(`The allowArrayLike is only supported when using @babel/core@^7.10.0`);\n    }\n  }\n  const iterableIsArray = (_options$assumeArray = options.assumeArray) != null ? _options$assumeArray : !options.loose && api.assumption(\"iterableIsArray\");\n  const arrayLikeIsIterable = (_options$allowArrayLi = options.allowArrayLike) != null ? _options$allowArrayLi : api.assumption(\"arrayLikeIsIterable\");\n  const skipteratorClosing = (_api$assumption = api.assumption(\"skipForOfIteratorClosing\")) != null ? _api$assumption : options.loose;\n\n  if (iterableIsArray && arrayLikeIsIterable) {\n    throw new Error(`The \"iterableIsArray\" and \"arrayLikeIsIterable\" assumptions are not compatible.`);\n  }\n\n  if (iterableIsArray) {\n    return {\n      name: \"transform-for-of\",\n      visitor: {\n        ForOfStatement(path) {\n          const {\n            scope\n          } = path;\n          const {\n            left,\n            right,\n            await: isAwait\n          } = path.node;\n\n          if (isAwait) {\n            return;\n          }\n\n          const i = scope.generateUidIdentifier(\"i\");\n          let array = scope.maybeGenerateMemoised(right, true);\n          const inits = [_core.types.variableDeclarator(i, _core.types.numericLiteral(0))];\n\n          if (array) {\n            inits.push(_core.types.variableDeclarator(array, right));\n          } else {\n            array = right;\n          }\n\n          const item = _core.types.memberExpression(_core.types.cloneNode(array), _core.types.cloneNode(i), true);\n\n          let assignment;\n\n          if (_core.types.isVariableDeclaration(left)) {\n            assignment = left;\n            assignment.declarations[0].init = item;\n          } else {\n            assignment = _core.types.expressionStatement(_core.types.assignmentExpression(\"=\", left, item));\n          }\n\n          path.replaceWith(_core.types.forStatement(_core.types.variableDeclaration(\"let\", inits), _core.types.binaryExpression(\"<\", _core.types.cloneNode(i), _core.types.memberExpression(_core.types.cloneNode(array), _core.types.identifier(\"length\"))), _core.types.updateExpression(\"++\", _core.types.cloneNode(i)), buildLoopBody(path, assignment)));\n        }\n\n      }\n    };\n  }\n\n  const buildForOfArray = (0, _core.template)`\n    for (var KEY = 0, NAME = ARR; KEY < NAME.length; KEY++) BODY;\n  `;\n  const buildForOfNoIteratorClosing = _core.template.statements`\n    for (var ITERATOR_HELPER = CREATE_ITERATOR_HELPER(OBJECT, ARRAY_LIKE_IS_ITERABLE), STEP_KEY;\n        !(STEP_KEY = ITERATOR_HELPER()).done;) BODY;\n  `;\n  const buildForOf = _core.template.statements`\n    var ITERATOR_HELPER = CREATE_ITERATOR_HELPER(OBJECT, ARRAY_LIKE_IS_ITERABLE), STEP_KEY;\n    try {\n      for (ITERATOR_HELPER.s(); !(STEP_KEY = ITERATOR_HELPER.n()).done;) BODY;\n    } catch (err) {\n      ITERATOR_HELPER.e(err);\n    } finally {\n      ITERATOR_HELPER.f();\n    }\n  `;\n  const builder = skipteratorClosing ? {\n    build: buildForOfNoIteratorClosing,\n    helper: \"createForOfIteratorHelperLoose\",\n    getContainer: nodes => nodes\n  } : {\n    build: buildForOf,\n    helper: \"createForOfIteratorHelper\",\n    getContainer: nodes => nodes[1].block.body\n  };\n\n  function _ForOfStatementArray(path) {\n    const {\n      node,\n      scope\n    } = path;\n    const right = scope.generateUidIdentifierBasedOnNode(node.right, \"arr\");\n    const iterationKey = scope.generateUidIdentifier(\"i\");\n    const loop = buildForOfArray({\n      BODY: node.body,\n      KEY: iterationKey,\n      NAME: right,\n      ARR: node.right\n    });\n\n    _core.types.inherits(loop, node);\n\n    const iterationValue = _core.types.memberExpression(_core.types.cloneNode(right), _core.types.cloneNode(iterationKey), true);\n\n    let declar;\n    const left = node.left;\n\n    if (_core.types.isVariableDeclaration(left)) {\n      left.declarations[0].init = iterationValue;\n      declar = left;\n    } else {\n      declar = _core.types.expressionStatement(_core.types.assignmentExpression(\"=\", left, iterationValue));\n    }\n\n    loop.body = buildLoopBody(path, declar, loop.body);\n    return loop;\n  }\n\n  return {\n    name: \"transform-for-of\",\n    visitor: {\n      ForOfStatement(path, state) {\n        const right = path.get(\"right\");\n\n        if (right.isArrayExpression() || right.isGenericType(\"Array\") || _core.types.isArrayTypeAnnotation(right.getTypeAnnotation())) {\n          path.replaceWith(_ForOfStatementArray(path));\n          return;\n        }\n\n        if (!state.availableHelper(builder.helper)) {\n          (0, _noHelperImplementation.default)(skipteratorClosing, path, state);\n          return;\n        }\n\n        const {\n          node,\n          parent,\n          scope\n        } = path;\n        const left = node.left;\n        let declar;\n        const stepKey = scope.generateUid(\"step\");\n\n        const stepValue = _core.types.memberExpression(_core.types.identifier(stepKey), _core.types.identifier(\"value\"));\n\n        if (_core.types.isVariableDeclaration(left)) {\n          declar = _core.types.variableDeclaration(left.kind, [_core.types.variableDeclarator(left.declarations[0].id, stepValue)]);\n        } else {\n          declar = _core.types.expressionStatement(_core.types.assignmentExpression(\"=\", left, stepValue));\n        }\n\n        const nodes = builder.build({\n          CREATE_ITERATOR_HELPER: state.addHelper(builder.helper),\n          ITERATOR_HELPER: scope.generateUidIdentifier(\"iterator\"),\n          ARRAY_LIKE_IS_ITERABLE: arrayLikeIsIterable ? _core.types.booleanLiteral(true) : null,\n          STEP_KEY: _core.types.identifier(stepKey),\n          OBJECT: node.right,\n          BODY: buildLoopBody(path, declar)\n        });\n        const container = builder.getContainer(nodes);\n\n        _core.types.inherits(container[0], node);\n\n        _core.types.inherits(container[0].body, node.body);\n\n        if (_core.types.isLabeledStatement(parent)) {\n          container[0] = _core.types.labeledStatement(parent.label, container[0]);\n          path.parentPath.replaceWithMultiple(nodes);\n          path.skip();\n        } else {\n          path.replaceWithMultiple(nodes);\n        }\n      }\n\n    }\n  };\n});\n\nexports.default = _default;","map":{"version":3,"names":["Object","defineProperty","exports","value","default","_helperPluginUtils","require","_core","_noHelperImplementation","buildLoopBody","path","declar","newBody","block","bodyPath","get","body","node","types","isBlockStatement","keys","getBindingIdentifiers","some","id","scope","hasOwnBinding","blockStatement","toBlock","unshift","_default","declare","api","options","_options$assumeArray","_options$allowArrayLi","_api$assumption","assertVersion","assumeArray","allowArrayLike","loose","Error","test","version","iterableIsArray","assumption","arrayLikeIsIterable","skipteratorClosing","name","visitor","ForOfStatement","left","right","await","isAwait","i","generateUidIdentifier","array","maybeGenerateMemoised","inits","variableDeclarator","numericLiteral","push","item","memberExpression","cloneNode","assignment","isVariableDeclaration","declarations","init","expressionStatement","assignmentExpression","replaceWith","forStatement","variableDeclaration","binaryExpression","identifier","updateExpression","buildForOfArray","template","buildForOfNoIteratorClosing","statements","buildForOf","builder","build","helper","getContainer","nodes","_ForOfStatementArray","generateUidIdentifierBasedOnNode","iterationKey","loop","BODY","KEY","NAME","ARR","inherits","iterationValue","state","isArrayExpression","isGenericType","isArrayTypeAnnotation","getTypeAnnotation","availableHelper","parent","stepKey","generateUid","stepValue","kind","CREATE_ITERATOR_HELPER","addHelper","ITERATOR_HELPER","ARRAY_LIKE_IS_ITERABLE","booleanLiteral","STEP_KEY","OBJECT","container","isLabeledStatement","labeledStatement","label","parentPath","replaceWithMultiple","skip"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/@babel/plugin-transform-for-of/lib/index.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _helperPluginUtils = require(\"@babel/helper-plugin-utils\");\n\nvar _core = require(\"@babel/core\");\n\nvar _noHelperImplementation = require(\"./no-helper-implementation\");\n\nfunction buildLoopBody(path, declar, newBody) {\n  let block;\n  const bodyPath = path.get(\"body\");\n  const body = newBody != null ? newBody : bodyPath.node;\n\n  if (_core.types.isBlockStatement(body) && Object.keys(path.getBindingIdentifiers()).some(id => bodyPath.scope.hasOwnBinding(id))) {\n    block = _core.types.blockStatement([declar, body]);\n  } else {\n    block = _core.types.toBlock(body);\n    block.body.unshift(declar);\n  }\n\n  return block;\n}\n\nvar _default = (0, _helperPluginUtils.declare)((api, options) => {\n  var _options$assumeArray, _options$allowArrayLi, _api$assumption;\n\n  api.assertVersion(7);\n  {\n    const {\n      assumeArray,\n      allowArrayLike,\n      loose\n    } = options;\n\n    if (loose === true && assumeArray === true) {\n      throw new Error(`The loose and assumeArray options cannot be used together in @babel/plugin-transform-for-of`);\n    }\n\n    if (assumeArray === true && allowArrayLike === true) {\n      throw new Error(`The assumeArray and allowArrayLike options cannot be used together in @babel/plugin-transform-for-of`);\n    }\n\n    if (allowArrayLike && /^7\\.\\d\\./.test(api.version)) {\n      throw new Error(`The allowArrayLike is only supported when using @babel/core@^7.10.0`);\n    }\n  }\n  const iterableIsArray = (_options$assumeArray = options.assumeArray) != null ? _options$assumeArray : !options.loose && api.assumption(\"iterableIsArray\");\n  const arrayLikeIsIterable = (_options$allowArrayLi = options.allowArrayLike) != null ? _options$allowArrayLi : api.assumption(\"arrayLikeIsIterable\");\n  const skipteratorClosing = (_api$assumption = api.assumption(\"skipForOfIteratorClosing\")) != null ? _api$assumption : options.loose;\n\n  if (iterableIsArray && arrayLikeIsIterable) {\n    throw new Error(`The \"iterableIsArray\" and \"arrayLikeIsIterable\" assumptions are not compatible.`);\n  }\n\n  if (iterableIsArray) {\n    return {\n      name: \"transform-for-of\",\n      visitor: {\n        ForOfStatement(path) {\n          const {\n            scope\n          } = path;\n          const {\n            left,\n            right,\n            await: isAwait\n          } = path.node;\n\n          if (isAwait) {\n            return;\n          }\n\n          const i = scope.generateUidIdentifier(\"i\");\n          let array = scope.maybeGenerateMemoised(right, true);\n          const inits = [_core.types.variableDeclarator(i, _core.types.numericLiteral(0))];\n\n          if (array) {\n            inits.push(_core.types.variableDeclarator(array, right));\n          } else {\n            array = right;\n          }\n\n          const item = _core.types.memberExpression(_core.types.cloneNode(array), _core.types.cloneNode(i), true);\n\n          let assignment;\n\n          if (_core.types.isVariableDeclaration(left)) {\n            assignment = left;\n            assignment.declarations[0].init = item;\n          } else {\n            assignment = _core.types.expressionStatement(_core.types.assignmentExpression(\"=\", left, item));\n          }\n\n          path.replaceWith(_core.types.forStatement(_core.types.variableDeclaration(\"let\", inits), _core.types.binaryExpression(\"<\", _core.types.cloneNode(i), _core.types.memberExpression(_core.types.cloneNode(array), _core.types.identifier(\"length\"))), _core.types.updateExpression(\"++\", _core.types.cloneNode(i)), buildLoopBody(path, assignment)));\n        }\n\n      }\n    };\n  }\n\n  const buildForOfArray = (0, _core.template)`\n    for (var KEY = 0, NAME = ARR; KEY < NAME.length; KEY++) BODY;\n  `;\n  const buildForOfNoIteratorClosing = _core.template.statements`\n    for (var ITERATOR_HELPER = CREATE_ITERATOR_HELPER(OBJECT, ARRAY_LIKE_IS_ITERABLE), STEP_KEY;\n        !(STEP_KEY = ITERATOR_HELPER()).done;) BODY;\n  `;\n  const buildForOf = _core.template.statements`\n    var ITERATOR_HELPER = CREATE_ITERATOR_HELPER(OBJECT, ARRAY_LIKE_IS_ITERABLE), STEP_KEY;\n    try {\n      for (ITERATOR_HELPER.s(); !(STEP_KEY = ITERATOR_HELPER.n()).done;) BODY;\n    } catch (err) {\n      ITERATOR_HELPER.e(err);\n    } finally {\n      ITERATOR_HELPER.f();\n    }\n  `;\n  const builder = skipteratorClosing ? {\n    build: buildForOfNoIteratorClosing,\n    helper: \"createForOfIteratorHelperLoose\",\n    getContainer: nodes => nodes\n  } : {\n    build: buildForOf,\n    helper: \"createForOfIteratorHelper\",\n    getContainer: nodes => nodes[1].block.body\n  };\n\n  function _ForOfStatementArray(path) {\n    const {\n      node,\n      scope\n    } = path;\n    const right = scope.generateUidIdentifierBasedOnNode(node.right, \"arr\");\n    const iterationKey = scope.generateUidIdentifier(\"i\");\n    const loop = buildForOfArray({\n      BODY: node.body,\n      KEY: iterationKey,\n      NAME: right,\n      ARR: node.right\n    });\n\n    _core.types.inherits(loop, node);\n\n    const iterationValue = _core.types.memberExpression(_core.types.cloneNode(right), _core.types.cloneNode(iterationKey), true);\n\n    let declar;\n    const left = node.left;\n\n    if (_core.types.isVariableDeclaration(left)) {\n      left.declarations[0].init = iterationValue;\n      declar = left;\n    } else {\n      declar = _core.types.expressionStatement(_core.types.assignmentExpression(\"=\", left, iterationValue));\n    }\n\n    loop.body = buildLoopBody(path, declar, loop.body);\n    return loop;\n  }\n\n  return {\n    name: \"transform-for-of\",\n    visitor: {\n      ForOfStatement(path, state) {\n        const right = path.get(\"right\");\n\n        if (right.isArrayExpression() || right.isGenericType(\"Array\") || _core.types.isArrayTypeAnnotation(right.getTypeAnnotation())) {\n          path.replaceWith(_ForOfStatementArray(path));\n          return;\n        }\n\n        if (!state.availableHelper(builder.helper)) {\n          (0, _noHelperImplementation.default)(skipteratorClosing, path, state);\n          return;\n        }\n\n        const {\n          node,\n          parent,\n          scope\n        } = path;\n        const left = node.left;\n        let declar;\n        const stepKey = scope.generateUid(\"step\");\n\n        const stepValue = _core.types.memberExpression(_core.types.identifier(stepKey), _core.types.identifier(\"value\"));\n\n        if (_core.types.isVariableDeclaration(left)) {\n          declar = _core.types.variableDeclaration(left.kind, [_core.types.variableDeclarator(left.declarations[0].id, stepValue)]);\n        } else {\n          declar = _core.types.expressionStatement(_core.types.assignmentExpression(\"=\", left, stepValue));\n        }\n\n        const nodes = builder.build({\n          CREATE_ITERATOR_HELPER: state.addHelper(builder.helper),\n          ITERATOR_HELPER: scope.generateUidIdentifier(\"iterator\"),\n          ARRAY_LIKE_IS_ITERABLE: arrayLikeIsIterable ? _core.types.booleanLiteral(true) : null,\n          STEP_KEY: _core.types.identifier(stepKey),\n          OBJECT: node.right,\n          BODY: buildLoopBody(path, declar)\n        });\n        const container = builder.getContainer(nodes);\n\n        _core.types.inherits(container[0], node);\n\n        _core.types.inherits(container[0].body, node.body);\n\n        if (_core.types.isLabeledStatement(parent)) {\n          container[0] = _core.types.labeledStatement(parent.label, container[0]);\n          path.parentPath.replaceWithMultiple(nodes);\n          path.skip();\n        } else {\n          path.replaceWithMultiple(nodes);\n        }\n      }\n\n    }\n  };\n});\n\nexports.default = _default;"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAC3CC,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAIC,kBAAkB,GAAGC,OAAO,CAAC,4BAAD,CAAhC;;AAEA,IAAIC,KAAK,GAAGD,OAAO,CAAC,aAAD,CAAnB;;AAEA,IAAIE,uBAAuB,GAAGF,OAAO,CAAC,4BAAD,CAArC;;AAEA,SAASG,aAAT,CAAuBC,IAAvB,EAA6BC,MAA7B,EAAqCC,OAArC,EAA8C;EAC5C,IAAIC,KAAJ;EACA,MAAMC,QAAQ,GAAGJ,IAAI,CAACK,GAAL,CAAS,MAAT,CAAjB;EACA,MAAMC,IAAI,GAAGJ,OAAO,IAAI,IAAX,GAAkBA,OAAlB,GAA4BE,QAAQ,CAACG,IAAlD;;EAEA,IAAIV,KAAK,CAACW,KAAN,CAAYC,gBAAZ,CAA6BH,IAA7B,KAAsChB,MAAM,CAACoB,IAAP,CAAYV,IAAI,CAACW,qBAAL,EAAZ,EAA0CC,IAA1C,CAA+CC,EAAE,IAAIT,QAAQ,CAACU,KAAT,CAAeC,aAAf,CAA6BF,EAA7B,CAArD,CAA1C,EAAkI;IAChIV,KAAK,GAAGN,KAAK,CAACW,KAAN,CAAYQ,cAAZ,CAA2B,CAACf,MAAD,EAASK,IAAT,CAA3B,CAAR;EACD,CAFD,MAEO;IACLH,KAAK,GAAGN,KAAK,CAACW,KAAN,CAAYS,OAAZ,CAAoBX,IAApB,CAAR;IACAH,KAAK,CAACG,IAAN,CAAWY,OAAX,CAAmBjB,MAAnB;EACD;;EAED,OAAOE,KAAP;AACD;;AAED,IAAIgB,QAAQ,GAAG,CAAC,GAAGxB,kBAAkB,CAACyB,OAAvB,EAAgC,CAACC,GAAD,EAAMC,OAAN,KAAkB;EAC/D,IAAIC,oBAAJ,EAA0BC,qBAA1B,EAAiDC,eAAjD;;EAEAJ,GAAG,CAACK,aAAJ,CAAkB,CAAlB;EACA;IACE,MAAM;MACJC,WADI;MAEJC,cAFI;MAGJC;IAHI,IAIFP,OAJJ;;IAMA,IAAIO,KAAK,KAAK,IAAV,IAAkBF,WAAW,KAAK,IAAtC,EAA4C;MAC1C,MAAM,IAAIG,KAAJ,CAAW,6FAAX,CAAN;IACD;;IAED,IAAIH,WAAW,KAAK,IAAhB,IAAwBC,cAAc,KAAK,IAA/C,EAAqD;MACnD,MAAM,IAAIE,KAAJ,CAAW,sGAAX,CAAN;IACD;;IAED,IAAIF,cAAc,IAAI,WAAWG,IAAX,CAAgBV,GAAG,CAACW,OAApB,CAAtB,EAAoD;MAClD,MAAM,IAAIF,KAAJ,CAAW,qEAAX,CAAN;IACD;EACF;EACD,MAAMG,eAAe,GAAG,CAACV,oBAAoB,GAAGD,OAAO,CAACK,WAAhC,KAAgD,IAAhD,GAAuDJ,oBAAvD,GAA8E,CAACD,OAAO,CAACO,KAAT,IAAkBR,GAAG,CAACa,UAAJ,CAAe,iBAAf,CAAxH;EACA,MAAMC,mBAAmB,GAAG,CAACX,qBAAqB,GAAGF,OAAO,CAACM,cAAjC,KAAoD,IAApD,GAA2DJ,qBAA3D,GAAmFH,GAAG,CAACa,UAAJ,CAAe,qBAAf,CAA/G;EACA,MAAME,kBAAkB,GAAG,CAACX,eAAe,GAAGJ,GAAG,CAACa,UAAJ,CAAe,0BAAf,CAAnB,KAAkE,IAAlE,GAAyET,eAAzE,GAA2FH,OAAO,CAACO,KAA9H;;EAEA,IAAII,eAAe,IAAIE,mBAAvB,EAA4C;IAC1C,MAAM,IAAIL,KAAJ,CAAW,iFAAX,CAAN;EACD;;EAED,IAAIG,eAAJ,EAAqB;IACnB,OAAO;MACLI,IAAI,EAAE,kBADD;MAELC,OAAO,EAAE;QACPC,cAAc,CAACvC,IAAD,EAAO;UACnB,MAAM;YACJc;UADI,IAEFd,IAFJ;UAGA,MAAM;YACJwC,IADI;YAEJC,KAFI;YAGJC,KAAK,EAAEC;UAHH,IAIF3C,IAAI,CAACO,IAJT;;UAMA,IAAIoC,OAAJ,EAAa;YACX;UACD;;UAED,MAAMC,CAAC,GAAG9B,KAAK,CAAC+B,qBAAN,CAA4B,GAA5B,CAAV;UACA,IAAIC,KAAK,GAAGhC,KAAK,CAACiC,qBAAN,CAA4BN,KAA5B,EAAmC,IAAnC,CAAZ;UACA,MAAMO,KAAK,GAAG,CAACnD,KAAK,CAACW,KAAN,CAAYyC,kBAAZ,CAA+BL,CAA/B,EAAkC/C,KAAK,CAACW,KAAN,CAAY0C,cAAZ,CAA2B,CAA3B,CAAlC,CAAD,CAAd;;UAEA,IAAIJ,KAAJ,EAAW;YACTE,KAAK,CAACG,IAAN,CAAWtD,KAAK,CAACW,KAAN,CAAYyC,kBAAZ,CAA+BH,KAA/B,EAAsCL,KAAtC,CAAX;UACD,CAFD,MAEO;YACLK,KAAK,GAAGL,KAAR;UACD;;UAED,MAAMW,IAAI,GAAGvD,KAAK,CAACW,KAAN,CAAY6C,gBAAZ,CAA6BxD,KAAK,CAACW,KAAN,CAAY8C,SAAZ,CAAsBR,KAAtB,CAA7B,EAA2DjD,KAAK,CAACW,KAAN,CAAY8C,SAAZ,CAAsBV,CAAtB,CAA3D,EAAqF,IAArF,CAAb;;UAEA,IAAIW,UAAJ;;UAEA,IAAI1D,KAAK,CAACW,KAAN,CAAYgD,qBAAZ,CAAkChB,IAAlC,CAAJ,EAA6C;YAC3Ce,UAAU,GAAGf,IAAb;YACAe,UAAU,CAACE,YAAX,CAAwB,CAAxB,EAA2BC,IAA3B,GAAkCN,IAAlC;UACD,CAHD,MAGO;YACLG,UAAU,GAAG1D,KAAK,CAACW,KAAN,CAAYmD,mBAAZ,CAAgC9D,KAAK,CAACW,KAAN,CAAYoD,oBAAZ,CAAiC,GAAjC,EAAsCpB,IAAtC,EAA4CY,IAA5C,CAAhC,CAAb;UACD;;UAEDpD,IAAI,CAAC6D,WAAL,CAAiBhE,KAAK,CAACW,KAAN,CAAYsD,YAAZ,CAAyBjE,KAAK,CAACW,KAAN,CAAYuD,mBAAZ,CAAgC,KAAhC,EAAuCf,KAAvC,CAAzB,EAAwEnD,KAAK,CAACW,KAAN,CAAYwD,gBAAZ,CAA6B,GAA7B,EAAkCnE,KAAK,CAACW,KAAN,CAAY8C,SAAZ,CAAsBV,CAAtB,CAAlC,EAA4D/C,KAAK,CAACW,KAAN,CAAY6C,gBAAZ,CAA6BxD,KAAK,CAACW,KAAN,CAAY8C,SAAZ,CAAsBR,KAAtB,CAA7B,EAA2DjD,KAAK,CAACW,KAAN,CAAYyD,UAAZ,CAAuB,QAAvB,CAA3D,CAA5D,CAAxE,EAAmOpE,KAAK,CAACW,KAAN,CAAY0D,gBAAZ,CAA6B,IAA7B,EAAmCrE,KAAK,CAACW,KAAN,CAAY8C,SAAZ,CAAsBV,CAAtB,CAAnC,CAAnO,EAAiS7C,aAAa,CAACC,IAAD,EAAOuD,UAAP,CAA9S,CAAjB;QACD;;MArCM;IAFJ,CAAP;EA2CD;;EAED,MAAMY,eAAe,GAAG,CAAC,GAAGtE,KAAK,CAACuE,QAAV,CAAoB;AAC9C;AACA,GAFE;EAGA,MAAMC,2BAA2B,GAAGxE,KAAK,CAACuE,QAAN,CAAeE,UAAW;AAChE;AACA;AACA,GAHE;EAIA,MAAMC,UAAU,GAAG1E,KAAK,CAACuE,QAAN,CAAeE,UAAW;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GATE;EAUA,MAAME,OAAO,GAAGpC,kBAAkB,GAAG;IACnCqC,KAAK,EAAEJ,2BAD4B;IAEnCK,MAAM,EAAE,gCAF2B;IAGnCC,YAAY,EAAEC,KAAK,IAAIA;EAHY,CAAH,GAI9B;IACFH,KAAK,EAAEF,UADL;IAEFG,MAAM,EAAE,2BAFN;IAGFC,YAAY,EAAEC,KAAK,IAAIA,KAAK,CAAC,CAAD,CAAL,CAASzE,KAAT,CAAeG;EAHpC,CAJJ;;EAUA,SAASuE,oBAAT,CAA8B7E,IAA9B,EAAoC;IAClC,MAAM;MACJO,IADI;MAEJO;IAFI,IAGFd,IAHJ;IAIA,MAAMyC,KAAK,GAAG3B,KAAK,CAACgE,gCAAN,CAAuCvE,IAAI,CAACkC,KAA5C,EAAmD,KAAnD,CAAd;IACA,MAAMsC,YAAY,GAAGjE,KAAK,CAAC+B,qBAAN,CAA4B,GAA5B,CAArB;IACA,MAAMmC,IAAI,GAAGb,eAAe,CAAC;MAC3Bc,IAAI,EAAE1E,IAAI,CAACD,IADgB;MAE3B4E,GAAG,EAAEH,YAFsB;MAG3BI,IAAI,EAAE1C,KAHqB;MAI3B2C,GAAG,EAAE7E,IAAI,CAACkC;IAJiB,CAAD,CAA5B;;IAOA5C,KAAK,CAACW,KAAN,CAAY6E,QAAZ,CAAqBL,IAArB,EAA2BzE,IAA3B;;IAEA,MAAM+E,cAAc,GAAGzF,KAAK,CAACW,KAAN,CAAY6C,gBAAZ,CAA6BxD,KAAK,CAACW,KAAN,CAAY8C,SAAZ,CAAsBb,KAAtB,CAA7B,EAA2D5C,KAAK,CAACW,KAAN,CAAY8C,SAAZ,CAAsByB,YAAtB,CAA3D,EAAgG,IAAhG,CAAvB;;IAEA,IAAI9E,MAAJ;IACA,MAAMuC,IAAI,GAAGjC,IAAI,CAACiC,IAAlB;;IAEA,IAAI3C,KAAK,CAACW,KAAN,CAAYgD,qBAAZ,CAAkChB,IAAlC,CAAJ,EAA6C;MAC3CA,IAAI,CAACiB,YAAL,CAAkB,CAAlB,EAAqBC,IAArB,GAA4B4B,cAA5B;MACArF,MAAM,GAAGuC,IAAT;IACD,CAHD,MAGO;MACLvC,MAAM,GAAGJ,KAAK,CAACW,KAAN,CAAYmD,mBAAZ,CAAgC9D,KAAK,CAACW,KAAN,CAAYoD,oBAAZ,CAAiC,GAAjC,EAAsCpB,IAAtC,EAA4C8C,cAA5C,CAAhC,CAAT;IACD;;IAEDN,IAAI,CAAC1E,IAAL,GAAYP,aAAa,CAACC,IAAD,EAAOC,MAAP,EAAe+E,IAAI,CAAC1E,IAApB,CAAzB;IACA,OAAO0E,IAAP;EACD;;EAED,OAAO;IACL3C,IAAI,EAAE,kBADD;IAELC,OAAO,EAAE;MACPC,cAAc,CAACvC,IAAD,EAAOuF,KAAP,EAAc;QAC1B,MAAM9C,KAAK,GAAGzC,IAAI,CAACK,GAAL,CAAS,OAAT,CAAd;;QAEA,IAAIoC,KAAK,CAAC+C,iBAAN,MAA6B/C,KAAK,CAACgD,aAAN,CAAoB,OAApB,CAA7B,IAA6D5F,KAAK,CAACW,KAAN,CAAYkF,qBAAZ,CAAkCjD,KAAK,CAACkD,iBAAN,EAAlC,CAAjE,EAA+H;UAC7H3F,IAAI,CAAC6D,WAAL,CAAiBgB,oBAAoB,CAAC7E,IAAD,CAArC;UACA;QACD;;QAED,IAAI,CAACuF,KAAK,CAACK,eAAN,CAAsBpB,OAAO,CAACE,MAA9B,CAAL,EAA4C;UAC1C,CAAC,GAAG5E,uBAAuB,CAACJ,OAA5B,EAAqC0C,kBAArC,EAAyDpC,IAAzD,EAA+DuF,KAA/D;UACA;QACD;;QAED,MAAM;UACJhF,IADI;UAEJsF,MAFI;UAGJ/E;QAHI,IAIFd,IAJJ;QAKA,MAAMwC,IAAI,GAAGjC,IAAI,CAACiC,IAAlB;QACA,IAAIvC,MAAJ;QACA,MAAM6F,OAAO,GAAGhF,KAAK,CAACiF,WAAN,CAAkB,MAAlB,CAAhB;;QAEA,MAAMC,SAAS,GAAGnG,KAAK,CAACW,KAAN,CAAY6C,gBAAZ,CAA6BxD,KAAK,CAACW,KAAN,CAAYyD,UAAZ,CAAuB6B,OAAvB,CAA7B,EAA8DjG,KAAK,CAACW,KAAN,CAAYyD,UAAZ,CAAuB,OAAvB,CAA9D,CAAlB;;QAEA,IAAIpE,KAAK,CAACW,KAAN,CAAYgD,qBAAZ,CAAkChB,IAAlC,CAAJ,EAA6C;UAC3CvC,MAAM,GAAGJ,KAAK,CAACW,KAAN,CAAYuD,mBAAZ,CAAgCvB,IAAI,CAACyD,IAArC,EAA2C,CAACpG,KAAK,CAACW,KAAN,CAAYyC,kBAAZ,CAA+BT,IAAI,CAACiB,YAAL,CAAkB,CAAlB,EAAqB5C,EAApD,EAAwDmF,SAAxD,CAAD,CAA3C,CAAT;QACD,CAFD,MAEO;UACL/F,MAAM,GAAGJ,KAAK,CAACW,KAAN,CAAYmD,mBAAZ,CAAgC9D,KAAK,CAACW,KAAN,CAAYoD,oBAAZ,CAAiC,GAAjC,EAAsCpB,IAAtC,EAA4CwD,SAA5C,CAAhC,CAAT;QACD;;QAED,MAAMpB,KAAK,GAAGJ,OAAO,CAACC,KAAR,CAAc;UAC1ByB,sBAAsB,EAAEX,KAAK,CAACY,SAAN,CAAgB3B,OAAO,CAACE,MAAxB,CADE;UAE1B0B,eAAe,EAAEtF,KAAK,CAAC+B,qBAAN,CAA4B,UAA5B,CAFS;UAG1BwD,sBAAsB,EAAElE,mBAAmB,GAAGtC,KAAK,CAACW,KAAN,CAAY8F,cAAZ,CAA2B,IAA3B,CAAH,GAAsC,IAHvD;UAI1BC,QAAQ,EAAE1G,KAAK,CAACW,KAAN,CAAYyD,UAAZ,CAAuB6B,OAAvB,CAJgB;UAK1BU,MAAM,EAAEjG,IAAI,CAACkC,KALa;UAM1BwC,IAAI,EAAElF,aAAa,CAACC,IAAD,EAAOC,MAAP;QANO,CAAd,CAAd;QAQA,MAAMwG,SAAS,GAAGjC,OAAO,CAACG,YAAR,CAAqBC,KAArB,CAAlB;;QAEA/E,KAAK,CAACW,KAAN,CAAY6E,QAAZ,CAAqBoB,SAAS,CAAC,CAAD,CAA9B,EAAmClG,IAAnC;;QAEAV,KAAK,CAACW,KAAN,CAAY6E,QAAZ,CAAqBoB,SAAS,CAAC,CAAD,CAAT,CAAanG,IAAlC,EAAwCC,IAAI,CAACD,IAA7C;;QAEA,IAAIT,KAAK,CAACW,KAAN,CAAYkG,kBAAZ,CAA+Bb,MAA/B,CAAJ,EAA4C;UAC1CY,SAAS,CAAC,CAAD,CAAT,GAAe5G,KAAK,CAACW,KAAN,CAAYmG,gBAAZ,CAA6Bd,MAAM,CAACe,KAApC,EAA2CH,SAAS,CAAC,CAAD,CAApD,CAAf;UACAzG,IAAI,CAAC6G,UAAL,CAAgBC,mBAAhB,CAAoClC,KAApC;UACA5E,IAAI,CAAC+G,IAAL;QACD,CAJD,MAIO;UACL/G,IAAI,CAAC8G,mBAAL,CAAyBlC,KAAzB;QACD;MACF;;IApDM;EAFJ,CAAP;AA0DD,CAlMc,CAAf;;AAoMApF,OAAO,CAACE,OAAR,GAAkByB,QAAlB"},"metadata":{},"sourceType":"script"}