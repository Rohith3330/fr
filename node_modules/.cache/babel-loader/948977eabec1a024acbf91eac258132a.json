{"ast":null,"code":"\"use strict\";\n/*--------------------------------------------------------------------------\r\n\r\n@sinclair/typebox/value\r\n\r\nThe MIT License (MIT)\r\n\r\nCopyright (c) 2022 Haydn Paterson (sinclair) <haydn.developer@gmail.com>\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in\r\nall copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\nTHE SOFTWARE.\r\n\r\n---------------------------------------------------------------------------*/\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ValuePointer = exports.ValuePointerRootDeleteError = exports.ValuePointerRootSetError = void 0;\n\nclass ValuePointerRootSetError extends Error {\n  constructor(value, path, update) {\n    super('ValuePointer: Cannot set root value');\n    this.value = value;\n    this.path = path;\n    this.update = update;\n  }\n\n}\n\nexports.ValuePointerRootSetError = ValuePointerRootSetError;\n\nclass ValuePointerRootDeleteError extends Error {\n  constructor(value, path) {\n    super('ValuePointer: Cannot delete root value');\n    this.value = value;\n    this.path = path;\n  }\n\n}\n\nexports.ValuePointerRootDeleteError = ValuePointerRootDeleteError;\n/** ValuePointer performs mutable operations on values using RFC6901 Json Pointers */\n\nvar ValuePointer;\n\n(function (ValuePointer) {\n  function Escape(component) {\n    return component.indexOf('~') === -1 ? component : component.replace(/~1/g, '/').replace(/~0/g, '~');\n  }\n  /** Formats the given pointer into navigable key components */\n\n\n  function* Format(pointer) {\n    if (pointer === '') return;\n    let [start, end] = [0, 0];\n\n    for (let i = 0; i < pointer.length; i++) {\n      const char = pointer.charAt(i);\n\n      if (char === '/') {\n        if (i === 0) {\n          start = i + 1;\n        } else {\n          end = i;\n          yield Escape(pointer.slice(start, end));\n          start = i + 1;\n        }\n      } else {\n        end = i;\n      }\n    }\n\n    yield Escape(pointer.slice(start));\n  }\n\n  ValuePointer.Format = Format;\n  /** Sets the value at the given pointer. If the value at the pointer does not exist it is created */\n\n  function Set(value, pointer, update) {\n    if (pointer === '') throw new ValuePointerRootSetError(value, pointer, update);\n    let [owner, next, key] = [null, value, ''];\n\n    for (const component of Format(pointer)) {\n      if (next[component] === undefined) next[component] = {};\n      owner = next;\n      next = next[component];\n      key = component;\n    }\n\n    owner[key] = update;\n  }\n\n  ValuePointer.Set = Set;\n  /** Deletes a value at the given pointer */\n\n  function Delete(value, pointer) {\n    if (pointer === '') throw new ValuePointerRootDeleteError(value, pointer);\n    let [owner, next, key] = [null, value, ''];\n\n    for (const component of Format(pointer)) {\n      if (next[component] === undefined || next[component] === null) return;\n      owner = next;\n      next = next[component];\n      key = component;\n    }\n\n    if (globalThis.Array.isArray(owner)) {\n      const index = parseInt(key);\n      owner.splice(index, 1);\n    } else {\n      delete owner[key];\n    }\n  }\n\n  ValuePointer.Delete = Delete;\n  /** Returns true if a value exists at the given pointer */\n\n  function Has(value, pointer) {\n    if (pointer === '') return true;\n    let [owner, next, key] = [null, value, ''];\n\n    for (const component of Format(pointer)) {\n      if (next[component] === undefined) return false;\n      owner = next;\n      next = next[component];\n      key = component;\n    }\n\n    return globalThis.Object.getOwnPropertyNames(owner).includes(key);\n  }\n\n  ValuePointer.Has = Has;\n  /** Gets the value at the given pointer */\n\n  function Get(value, pointer) {\n    if (pointer === '') return value;\n    let current = value;\n\n    for (const component of Format(pointer)) {\n      if (current[component] === undefined) return undefined;\n      current = current[component];\n    }\n\n    return current;\n  }\n\n  ValuePointer.Get = Get;\n})(ValuePointer = exports.ValuePointer || (exports.ValuePointer = {}));","map":{"version":3,"names":["Object","defineProperty","exports","value","ValuePointer","ValuePointerRootDeleteError","ValuePointerRootSetError","Error","constructor","path","update","Escape","component","indexOf","replace","Format","pointer","start","end","i","length","char","charAt","slice","Set","owner","next","key","undefined","Delete","globalThis","Array","isArray","index","parseInt","splice","Has","getOwnPropertyNames","includes","Get","current"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/@sinclair/typebox/value/pointer.js"],"sourcesContent":["\"use strict\";\r\n/*--------------------------------------------------------------------------\r\n\r\n@sinclair/typebox/value\r\n\r\nThe MIT License (MIT)\r\n\r\nCopyright (c) 2022 Haydn Paterson (sinclair) <haydn.developer@gmail.com>\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in\r\nall copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\nTHE SOFTWARE.\r\n\r\n---------------------------------------------------------------------------*/\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.ValuePointer = exports.ValuePointerRootDeleteError = exports.ValuePointerRootSetError = void 0;\r\nclass ValuePointerRootSetError extends Error {\r\n    constructor(value, path, update) {\r\n        super('ValuePointer: Cannot set root value');\r\n        this.value = value;\r\n        this.path = path;\r\n        this.update = update;\r\n    }\r\n}\r\nexports.ValuePointerRootSetError = ValuePointerRootSetError;\r\nclass ValuePointerRootDeleteError extends Error {\r\n    constructor(value, path) {\r\n        super('ValuePointer: Cannot delete root value');\r\n        this.value = value;\r\n        this.path = path;\r\n    }\r\n}\r\nexports.ValuePointerRootDeleteError = ValuePointerRootDeleteError;\r\n/** ValuePointer performs mutable operations on values using RFC6901 Json Pointers */\r\nvar ValuePointer;\r\n(function (ValuePointer) {\r\n    function Escape(component) {\r\n        return component.indexOf('~') === -1 ? component : component.replace(/~1/g, '/').replace(/~0/g, '~');\r\n    }\r\n    /** Formats the given pointer into navigable key components */\r\n    function* Format(pointer) {\r\n        if (pointer === '')\r\n            return;\r\n        let [start, end] = [0, 0];\r\n        for (let i = 0; i < pointer.length; i++) {\r\n            const char = pointer.charAt(i);\r\n            if (char === '/') {\r\n                if (i === 0) {\r\n                    start = i + 1;\r\n                }\r\n                else {\r\n                    end = i;\r\n                    yield Escape(pointer.slice(start, end));\r\n                    start = i + 1;\r\n                }\r\n            }\r\n            else {\r\n                end = i;\r\n            }\r\n        }\r\n        yield Escape(pointer.slice(start));\r\n    }\r\n    ValuePointer.Format = Format;\r\n    /** Sets the value at the given pointer. If the value at the pointer does not exist it is created */\r\n    function Set(value, pointer, update) {\r\n        if (pointer === '')\r\n            throw new ValuePointerRootSetError(value, pointer, update);\r\n        let [owner, next, key] = [null, value, ''];\r\n        for (const component of Format(pointer)) {\r\n            if (next[component] === undefined)\r\n                next[component] = {};\r\n            owner = next;\r\n            next = next[component];\r\n            key = component;\r\n        }\r\n        owner[key] = update;\r\n    }\r\n    ValuePointer.Set = Set;\r\n    /** Deletes a value at the given pointer */\r\n    function Delete(value, pointer) {\r\n        if (pointer === '')\r\n            throw new ValuePointerRootDeleteError(value, pointer);\r\n        let [owner, next, key] = [null, value, ''];\r\n        for (const component of Format(pointer)) {\r\n            if (next[component] === undefined || next[component] === null)\r\n                return;\r\n            owner = next;\r\n            next = next[component];\r\n            key = component;\r\n        }\r\n        if (globalThis.Array.isArray(owner)) {\r\n            const index = parseInt(key);\r\n            owner.splice(index, 1);\r\n        }\r\n        else {\r\n            delete owner[key];\r\n        }\r\n    }\r\n    ValuePointer.Delete = Delete;\r\n    /** Returns true if a value exists at the given pointer */\r\n    function Has(value, pointer) {\r\n        if (pointer === '')\r\n            return true;\r\n        let [owner, next, key] = [null, value, ''];\r\n        for (const component of Format(pointer)) {\r\n            if (next[component] === undefined)\r\n                return false;\r\n            owner = next;\r\n            next = next[component];\r\n            key = component;\r\n        }\r\n        return globalThis.Object.getOwnPropertyNames(owner).includes(key);\r\n    }\r\n    ValuePointer.Has = Has;\r\n    /** Gets the value at the given pointer */\r\n    function Get(value, pointer) {\r\n        if (pointer === '')\r\n            return value;\r\n        let current = value;\r\n        for (const component of Format(pointer)) {\r\n            if (current[component] === undefined)\r\n                return undefined;\r\n            current = current[component];\r\n        }\r\n        return current;\r\n    }\r\n    ValuePointer.Get = Get;\r\n})(ValuePointer = exports.ValuePointer || (exports.ValuePointer = {}));\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}