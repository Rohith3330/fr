{"ast":null,"code":"\"use strict\";\n\nvar util = _interopRequireWildcard(require(\"./util\"));\n\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\n\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      \"default\": obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache(nodeInterop);\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj[\"default\"] = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\nvar hasOwn = Object.prototype.hasOwnProperty; // The hoist function takes a FunctionExpression or FunctionDeclaration\n// and replaces any Declaration nodes in its body with assignments, then\n// returns a VariableDeclaration containing just the names of the removed\n// declarations.\n\nexports.hoist = function (funPath) {\n  var t = util.getTypes();\n  t.assertFunction(funPath.node);\n  var vars = {};\n\n  function varDeclToExpr(_ref, includeIdentifiers) {\n    var vdec = _ref.node,\n        scope = _ref.scope;\n    t.assertVariableDeclaration(vdec); // TODO assert.equal(vdec.kind, \"var\");\n\n    var exprs = [];\n    vdec.declarations.forEach(function (dec) {\n      // Note: We duplicate 'dec.id' here to ensure that the variable declaration IDs don't\n      // have the same 'loc' value, since that can make sourcemaps and retainLines behave poorly.\n      vars[dec.id.name] = t.identifier(dec.id.name); // Remove the binding, to avoid \"duplicate declaration\" errors when it will\n      // be injected again.\n\n      scope.removeBinding(dec.id.name);\n\n      if (dec.init) {\n        exprs.push(t.assignmentExpression(\"=\", dec.id, dec.init));\n      } else if (includeIdentifiers) {\n        exprs.push(dec.id);\n      }\n    });\n    if (exprs.length === 0) return null;\n    if (exprs.length === 1) return exprs[0];\n    return t.sequenceExpression(exprs);\n  }\n\n  funPath.get(\"body\").traverse({\n    VariableDeclaration: {\n      exit: function exit(path) {\n        var expr = varDeclToExpr(path, false);\n\n        if (expr === null) {\n          path.remove();\n        } else {\n          // We don't need to traverse this expression any further because\n          // there can't be any new declarations inside an expression.\n          util.replaceWithOrRemove(path, t.expressionStatement(expr));\n        } // Since the original node has been either removed or replaced,\n        // avoid traversing it any further.\n\n\n        path.skip();\n      }\n    },\n    ForStatement: function ForStatement(path) {\n      var init = path.get(\"init\");\n\n      if (init.isVariableDeclaration()) {\n        util.replaceWithOrRemove(init, varDeclToExpr(init, false));\n      }\n    },\n    ForXStatement: function ForXStatement(path) {\n      var left = path.get(\"left\");\n\n      if (left.isVariableDeclaration()) {\n        util.replaceWithOrRemove(left, varDeclToExpr(left, true));\n      }\n    },\n    FunctionDeclaration: function FunctionDeclaration(path) {\n      var node = path.node;\n      vars[node.id.name] = node.id;\n      var assignment = t.expressionStatement(t.assignmentExpression(\"=\", t.clone(node.id), t.functionExpression(path.scope.generateUidIdentifierBasedOnNode(node), node.params, node.body, node.generator, node.expression)));\n\n      if (path.parentPath.isBlockStatement()) {\n        // Insert the assignment form before the first statement in the\n        // enclosing block.\n        path.parentPath.unshiftContainer(\"body\", assignment); // Remove the function declaration now that we've inserted the\n        // equivalent assignment form at the beginning of the block.\n\n        path.remove();\n      } else {\n        // If the parent node is not a block statement, then we can just\n        // replace the declaration with the equivalent assignment form\n        // without worrying about hoisting it.\n        util.replaceWithOrRemove(path, assignment);\n      } // Remove the binding, to avoid \"duplicate declaration\" errors when it will\n      // be injected again.\n\n\n      path.scope.removeBinding(node.id.name); // Don't hoist variables out of inner functions.\n\n      path.skip();\n    },\n    FunctionExpression: function FunctionExpression(path) {\n      // Don't descend into nested function expressions.\n      path.skip();\n    },\n    ArrowFunctionExpression: function ArrowFunctionExpression(path) {\n      // Don't descend into nested function expressions.\n      path.skip();\n    }\n  });\n  var paramNames = {};\n  funPath.get(\"params\").forEach(function (paramPath) {\n    var param = paramPath.node;\n\n    if (t.isIdentifier(param)) {\n      paramNames[param.name] = param;\n    } else {// Variables declared by destructuring parameter patterns will be\n      // harmlessly re-declared.\n    }\n  });\n  var declarations = [];\n  Object.keys(vars).forEach(function (name) {\n    if (!hasOwn.call(paramNames, name)) {\n      declarations.push(t.variableDeclarator(vars[name], null));\n    }\n  });\n\n  if (declarations.length === 0) {\n    return null; // Be sure to handle this case!\n  }\n\n  return t.variableDeclaration(\"var\", declarations);\n};","map":{"version":3,"names":["util","_interopRequireWildcard","require","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","hasOwn","exports","hoist","funPath","t","getTypes","assertFunction","node","vars","varDeclToExpr","_ref","includeIdentifiers","vdec","scope","assertVariableDeclaration","exprs","declarations","forEach","dec","id","name","identifier","removeBinding","init","push","assignmentExpression","length","sequenceExpression","traverse","VariableDeclaration","exit","path","expr","remove","replaceWithOrRemove","expressionStatement","skip","ForStatement","isVariableDeclaration","ForXStatement","left","FunctionDeclaration","assignment","clone","functionExpression","generateUidIdentifierBasedOnNode","params","body","generator","expression","parentPath","isBlockStatement","unshiftContainer","FunctionExpression","ArrowFunctionExpression","paramNames","paramPath","param","isIdentifier","keys","variableDeclarator","variableDeclaration"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/regenerator-transform/lib/hoist.js"],"sourcesContent":["\"use strict\";\n\nvar util = _interopRequireWildcard(require(\"./util\"));\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar hasOwn = Object.prototype.hasOwnProperty; // The hoist function takes a FunctionExpression or FunctionDeclaration\n// and replaces any Declaration nodes in its body with assignments, then\n// returns a VariableDeclaration containing just the names of the removed\n// declarations.\n\nexports.hoist = function (funPath) {\n  var t = util.getTypes();\n  t.assertFunction(funPath.node);\n  var vars = {};\n\n  function varDeclToExpr(_ref, includeIdentifiers) {\n    var vdec = _ref.node,\n        scope = _ref.scope;\n    t.assertVariableDeclaration(vdec); // TODO assert.equal(vdec.kind, \"var\");\n\n    var exprs = [];\n    vdec.declarations.forEach(function (dec) {\n      // Note: We duplicate 'dec.id' here to ensure that the variable declaration IDs don't\n      // have the same 'loc' value, since that can make sourcemaps and retainLines behave poorly.\n      vars[dec.id.name] = t.identifier(dec.id.name); // Remove the binding, to avoid \"duplicate declaration\" errors when it will\n      // be injected again.\n\n      scope.removeBinding(dec.id.name);\n\n      if (dec.init) {\n        exprs.push(t.assignmentExpression(\"=\", dec.id, dec.init));\n      } else if (includeIdentifiers) {\n        exprs.push(dec.id);\n      }\n    });\n    if (exprs.length === 0) return null;\n    if (exprs.length === 1) return exprs[0];\n    return t.sequenceExpression(exprs);\n  }\n\n  funPath.get(\"body\").traverse({\n    VariableDeclaration: {\n      exit: function exit(path) {\n        var expr = varDeclToExpr(path, false);\n\n        if (expr === null) {\n          path.remove();\n        } else {\n          // We don't need to traverse this expression any further because\n          // there can't be any new declarations inside an expression.\n          util.replaceWithOrRemove(path, t.expressionStatement(expr));\n        } // Since the original node has been either removed or replaced,\n        // avoid traversing it any further.\n\n\n        path.skip();\n      }\n    },\n    ForStatement: function ForStatement(path) {\n      var init = path.get(\"init\");\n\n      if (init.isVariableDeclaration()) {\n        util.replaceWithOrRemove(init, varDeclToExpr(init, false));\n      }\n    },\n    ForXStatement: function ForXStatement(path) {\n      var left = path.get(\"left\");\n\n      if (left.isVariableDeclaration()) {\n        util.replaceWithOrRemove(left, varDeclToExpr(left, true));\n      }\n    },\n    FunctionDeclaration: function FunctionDeclaration(path) {\n      var node = path.node;\n      vars[node.id.name] = node.id;\n      var assignment = t.expressionStatement(t.assignmentExpression(\"=\", t.clone(node.id), t.functionExpression(path.scope.generateUidIdentifierBasedOnNode(node), node.params, node.body, node.generator, node.expression)));\n\n      if (path.parentPath.isBlockStatement()) {\n        // Insert the assignment form before the first statement in the\n        // enclosing block.\n        path.parentPath.unshiftContainer(\"body\", assignment); // Remove the function declaration now that we've inserted the\n        // equivalent assignment form at the beginning of the block.\n\n        path.remove();\n      } else {\n        // If the parent node is not a block statement, then we can just\n        // replace the declaration with the equivalent assignment form\n        // without worrying about hoisting it.\n        util.replaceWithOrRemove(path, assignment);\n      } // Remove the binding, to avoid \"duplicate declaration\" errors when it will\n      // be injected again.\n\n\n      path.scope.removeBinding(node.id.name); // Don't hoist variables out of inner functions.\n\n      path.skip();\n    },\n    FunctionExpression: function FunctionExpression(path) {\n      // Don't descend into nested function expressions.\n      path.skip();\n    },\n    ArrowFunctionExpression: function ArrowFunctionExpression(path) {\n      // Don't descend into nested function expressions.\n      path.skip();\n    }\n  });\n  var paramNames = {};\n  funPath.get(\"params\").forEach(function (paramPath) {\n    var param = paramPath.node;\n\n    if (t.isIdentifier(param)) {\n      paramNames[param.name] = param;\n    } else {// Variables declared by destructuring parameter patterns will be\n      // harmlessly re-declared.\n    }\n  });\n  var declarations = [];\n  Object.keys(vars).forEach(function (name) {\n    if (!hasOwn.call(paramNames, name)) {\n      declarations.push(t.variableDeclarator(vars[name], null));\n    }\n  });\n\n  if (declarations.length === 0) {\n    return null; // Be sure to handle this case!\n  }\n\n  return t.variableDeclaration(\"var\", declarations);\n};"],"mappings":"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"},"metadata":{},"sourceType":"script"}