{"ast":null,"code":"var path = require('path');\n\nvar url = require('url');\n\nvar isDataUriResource = require('../utils/is-data-uri-resource');\n\nvar DOUBLE_QUOTE = '\"';\nvar SINGLE_QUOTE = '\\'';\nvar URL_PREFIX = 'url(';\nvar URL_SUFFIX = ')';\nvar PROTOCOL_LESS_PREFIX_PATTERN = /^[^\\w\\d]*\\/\\//;\nvar QUOTE_PREFIX_PATTERN = /^[\"']/;\nvar QUOTE_SUFFIX_PATTERN = /[\"']$/;\nvar ROUND_BRACKETS_PATTERN = /[()]/;\nvar URL_PREFIX_PATTERN = /^url\\(/i;\nvar URL_SUFFIX_PATTERN = /\\)$/;\nvar WHITESPACE_PATTERN = /\\s/;\nvar isWindows = process.platform == 'win32';\n\nfunction rebase(uri, rebaseConfig) {\n  if (!rebaseConfig) {\n    return uri;\n  }\n\n  if (isAbsolute(uri) && !isRemote(rebaseConfig.toBase)) {\n    return uri;\n  }\n\n  if (isRemote(uri) || isSVGMarker(uri) || isInternal(uri) || isDataUriResource(uri)) {\n    return uri;\n  }\n\n  if (isRemote(rebaseConfig.toBase)) {\n    return url.resolve(rebaseConfig.toBase, uri);\n  }\n\n  return rebaseConfig.absolute ? normalize(absolute(uri, rebaseConfig)) : normalize(relative(uri, rebaseConfig));\n}\n\nfunction isAbsolute(uri) {\n  return path.isAbsolute(uri);\n}\n\nfunction isSVGMarker(uri) {\n  return uri[0] == '#';\n}\n\nfunction isInternal(uri) {\n  return /^\\w+:\\w+/.test(uri);\n}\n\nfunction isRemote(uri) {\n  return /^[^:]+?:\\/\\//.test(uri) || PROTOCOL_LESS_PREFIX_PATTERN.test(uri);\n}\n\nfunction absolute(uri, rebaseConfig) {\n  return path.resolve(path.join(rebaseConfig.fromBase || '', uri)).replace(rebaseConfig.toBase, '');\n}\n\nfunction relative(uri, rebaseConfig) {\n  return path.relative(rebaseConfig.toBase, path.join(rebaseConfig.fromBase || '', uri));\n}\n\nfunction normalize(uri) {\n  return isWindows ? uri.replace(/\\\\/g, '/') : uri;\n}\n\nfunction quoteFor(unquotedUrl) {\n  if (unquotedUrl.indexOf(SINGLE_QUOTE) > -1) {\n    return DOUBLE_QUOTE;\n  }\n\n  if (unquotedUrl.indexOf(DOUBLE_QUOTE) > -1) {\n    return SINGLE_QUOTE;\n  }\n\n  if (hasWhitespace(unquotedUrl) || hasRoundBrackets(unquotedUrl)) {\n    return SINGLE_QUOTE;\n  }\n\n  return '';\n}\n\nfunction hasWhitespace(url) {\n  return WHITESPACE_PATTERN.test(url);\n}\n\nfunction hasRoundBrackets(url) {\n  return ROUND_BRACKETS_PATTERN.test(url);\n}\n\nfunction rewriteUrl(originalUrl, rebaseConfig, pathOnly) {\n  var strippedUrl = originalUrl.replace(URL_PREFIX_PATTERN, '').replace(URL_SUFFIX_PATTERN, '').trim();\n  var unquotedUrl = strippedUrl.replace(QUOTE_PREFIX_PATTERN, '').replace(QUOTE_SUFFIX_PATTERN, '').trim();\n  var quote = strippedUrl[0] == SINGLE_QUOTE || strippedUrl[0] == DOUBLE_QUOTE ? strippedUrl[0] : quoteFor(unquotedUrl);\n  return pathOnly ? rebase(unquotedUrl, rebaseConfig) : URL_PREFIX + quote + rebase(unquotedUrl, rebaseConfig) + quote + URL_SUFFIX;\n}\n\nmodule.exports = rewriteUrl;","map":{"version":3,"names":["path","require","url","isDataUriResource","DOUBLE_QUOTE","SINGLE_QUOTE","URL_PREFIX","URL_SUFFIX","PROTOCOL_LESS_PREFIX_PATTERN","QUOTE_PREFIX_PATTERN","QUOTE_SUFFIX_PATTERN","ROUND_BRACKETS_PATTERN","URL_PREFIX_PATTERN","URL_SUFFIX_PATTERN","WHITESPACE_PATTERN","isWindows","process","platform","rebase","uri","rebaseConfig","isAbsolute","isRemote","toBase","isSVGMarker","isInternal","resolve","absolute","normalize","relative","test","join","fromBase","replace","quoteFor","unquotedUrl","indexOf","hasWhitespace","hasRoundBrackets","rewriteUrl","originalUrl","pathOnly","strippedUrl","trim","quote","module","exports"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/clean-css/lib/reader/rewrite-url.js"],"sourcesContent":["var path = require('path');\nvar url = require('url');\n\nvar isDataUriResource = require('../utils/is-data-uri-resource');\n\nvar DOUBLE_QUOTE = '\"';\nvar SINGLE_QUOTE = '\\'';\nvar URL_PREFIX = 'url(';\nvar URL_SUFFIX = ')';\n\nvar PROTOCOL_LESS_PREFIX_PATTERN = /^[^\\w\\d]*\\/\\//;\nvar QUOTE_PREFIX_PATTERN = /^[\"']/;\nvar QUOTE_SUFFIX_PATTERN = /[\"']$/;\nvar ROUND_BRACKETS_PATTERN = /[()]/;\nvar URL_PREFIX_PATTERN = /^url\\(/i;\nvar URL_SUFFIX_PATTERN = /\\)$/;\nvar WHITESPACE_PATTERN = /\\s/;\n\nvar isWindows = process.platform == 'win32';\n\nfunction rebase(uri, rebaseConfig) {\n  if (!rebaseConfig) {\n    return uri;\n  }\n\n  if (isAbsolute(uri) && !isRemote(rebaseConfig.toBase)) {\n    return uri;\n  }\n\n  if (isRemote(uri) || isSVGMarker(uri) || isInternal(uri) || isDataUriResource(uri)) {\n    return uri;\n  }\n\n  if (isRemote(rebaseConfig.toBase)) {\n    return url.resolve(rebaseConfig.toBase, uri);\n  }\n\n  return rebaseConfig.absolute\n    ? normalize(absolute(uri, rebaseConfig))\n    : normalize(relative(uri, rebaseConfig));\n}\n\nfunction isAbsolute(uri) {\n  return path.isAbsolute(uri);\n}\n\nfunction isSVGMarker(uri) {\n  return uri[0] == '#';\n}\n\nfunction isInternal(uri) {\n  return /^\\w+:\\w+/.test(uri);\n}\n\nfunction isRemote(uri) {\n  return /^[^:]+?:\\/\\//.test(uri) || PROTOCOL_LESS_PREFIX_PATTERN.test(uri);\n}\n\nfunction absolute(uri, rebaseConfig) {\n  return path\n    .resolve(path.join(rebaseConfig.fromBase || '', uri))\n    .replace(rebaseConfig.toBase, '');\n}\n\nfunction relative(uri, rebaseConfig) {\n  return path.relative(rebaseConfig.toBase, path.join(rebaseConfig.fromBase || '', uri));\n}\n\nfunction normalize(uri) {\n  return isWindows ? uri.replace(/\\\\/g, '/') : uri;\n}\n\nfunction quoteFor(unquotedUrl) {\n  if (unquotedUrl.indexOf(SINGLE_QUOTE) > -1) {\n    return DOUBLE_QUOTE;\n  } if (unquotedUrl.indexOf(DOUBLE_QUOTE) > -1) {\n    return SINGLE_QUOTE;\n  } if (hasWhitespace(unquotedUrl) || hasRoundBrackets(unquotedUrl)) {\n    return SINGLE_QUOTE;\n  }\n  return '';\n}\n\nfunction hasWhitespace(url) {\n  return WHITESPACE_PATTERN.test(url);\n}\n\nfunction hasRoundBrackets(url) {\n  return ROUND_BRACKETS_PATTERN.test(url);\n}\n\nfunction rewriteUrl(originalUrl, rebaseConfig, pathOnly) {\n  var strippedUrl = originalUrl\n    .replace(URL_PREFIX_PATTERN, '')\n    .replace(URL_SUFFIX_PATTERN, '')\n    .trim();\n\n  var unquotedUrl = strippedUrl\n    .replace(QUOTE_PREFIX_PATTERN, '')\n    .replace(QUOTE_SUFFIX_PATTERN, '')\n    .trim();\n\n  var quote = strippedUrl[0] == SINGLE_QUOTE || strippedUrl[0] == DOUBLE_QUOTE\n    ? strippedUrl[0]\n    : quoteFor(unquotedUrl);\n\n  return pathOnly\n    ? rebase(unquotedUrl, rebaseConfig)\n    : URL_PREFIX + quote + rebase(unquotedUrl, rebaseConfig) + quote + URL_SUFFIX;\n}\n\nmodule.exports = rewriteUrl;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}