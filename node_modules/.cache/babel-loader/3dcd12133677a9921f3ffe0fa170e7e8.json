{"ast":null,"code":"/**\n * This function removes any uses of CSS variables used as an alpha channel\n *\n * This is required for selectors like `:visited` which do not allow\n * changes in opacity or external control using CSS variables.\n *\n * @param {import('postcss').Container} container\n * @param {string[]} toRemove\n */\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"removeAlphaVariables\", {\n  enumerable: true,\n  get: () => removeAlphaVariables\n});\n\nfunction removeAlphaVariables(container, toRemove) {\n  container.walkDecls(decl => {\n    if (toRemove.includes(decl.prop)) {\n      decl.remove();\n      return;\n    }\n\n    for (let varName of toRemove) {\n      if (decl.value.includes(`/ var(${varName})`)) {\n        decl.value = decl.value.replace(`/ var(${varName})`, \"\");\n      }\n    }\n  });\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","enumerable","get","removeAlphaVariables","container","toRemove","walkDecls","decl","includes","prop","remove","varName","replace"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/tailwindcss/lib/util/removeAlphaVariables.js"],"sourcesContent":["/**\n * This function removes any uses of CSS variables used as an alpha channel\n *\n * This is required for selectors like `:visited` which do not allow\n * changes in opacity or external control using CSS variables.\n *\n * @param {import('postcss').Container} container\n * @param {string[]} toRemove\n */ \"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"removeAlphaVariables\", {\n    enumerable: true,\n    get: ()=>removeAlphaVariables\n});\nfunction removeAlphaVariables(container, toRemove) {\n    container.walkDecls((decl)=>{\n        if (toRemove.includes(decl.prop)) {\n            decl.remove();\n            return;\n        }\n        for (let varName of toRemove){\n            if (decl.value.includes(`/ var(${varName})`)) {\n                decl.value = decl.value.replace(`/ var(${varName})`, \"\");\n            }\n        }\n    });\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAI;;AACJA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EACzCC,KAAK,EAAE;AADkC,CAA7C;AAGAH,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,sBAA/B,EAAuD;EACnDE,UAAU,EAAE,IADuC;EAEnDC,GAAG,EAAE,MAAIC;AAF0C,CAAvD;;AAIA,SAASA,oBAAT,CAA8BC,SAA9B,EAAyCC,QAAzC,EAAmD;EAC/CD,SAAS,CAACE,SAAV,CAAqBC,IAAD,IAAQ;IACxB,IAAIF,QAAQ,CAACG,QAAT,CAAkBD,IAAI,CAACE,IAAvB,CAAJ,EAAkC;MAC9BF,IAAI,CAACG,MAAL;MACA;IACH;;IACD,KAAK,IAAIC,OAAT,IAAoBN,QAApB,EAA6B;MACzB,IAAIE,IAAI,CAACP,KAAL,CAAWQ,QAAX,CAAqB,SAAQG,OAAQ,GAArC,CAAJ,EAA8C;QAC1CJ,IAAI,CAACP,KAAL,GAAaO,IAAI,CAACP,KAAL,CAAWY,OAAX,CAAoB,SAAQD,OAAQ,GAApC,EAAwC,EAAxC,CAAb;MACH;IACJ;EACJ,CAVD;AAWH"},"metadata":{},"sourceType":"script"}