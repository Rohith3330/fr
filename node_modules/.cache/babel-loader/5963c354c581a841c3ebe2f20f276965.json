{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getContextPackagePath = getContextPackagePath;\nexports.getFilePackagePath = getFilePackagePath;\nexports.getFilePackageName = getFilePackageName;\n\nvar _path = require('path');\n\nvar _pkgUp = require('eslint-module-utils/pkgUp');\n\nvar _pkgUp2 = _interopRequireDefault(_pkgUp);\n\nvar _readPkgUp2 = require('eslint-module-utils/readPkgUp');\n\nvar _readPkgUp3 = _interopRequireDefault(_readPkgUp2);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nfunction getContextPackagePath(context) {\n  return getFilePackagePath(context.getPhysicalFilename ? context.getPhysicalFilename() : context.getFilename());\n}\n\nfunction getFilePackagePath(filePath) {\n  var fp = (0, _pkgUp2['default'])({\n    cwd: filePath\n  });\n  return (0, _path.dirname)(fp);\n}\n\nfunction getFilePackageName(filePath) {\n  var _readPkgUp = (0, _readPkgUp3['default'])({\n    cwd: filePath,\n    normalize: false\n  }),\n      pkg = _readPkgUp.pkg,\n      path = _readPkgUp.path;\n\n  if (pkg) {\n    // recursion in case of intermediate esm package.json without name found\n    return pkg.name || getFilePackageName((0, _path.dirname)((0, _path.dirname)(path)));\n  }\n\n  return null;\n}","map":{"version":3,"mappings":";;;;;QAKgBA;QAIAC,kB,GAAAA,kB;QAKAC,kB,GAAAA,kB;;AAdhB;;AACA;;;;AACA;;;;;;;;AAGO;;AAAA,SAASF,qBAAT,CAA+BG,OAA/B,EAAwC;EAC7C,OAAOF,mBAAmBE,QAAQC,mBAARD,GAA8BA,QAAQC,mBAARD,EAA9BA,GAA8DA,QAAQE,WAARF,EAAjFF,CAAP;AAGK;;AAAA,SAASA,kBAAT,CAA4BK,QAA5B,EAAsC;EAC3C,IAAMC,KAAK,wBAAM;IAAEC,KAAKF;EAAP,CAAN,CAAX;EACA,OAAO,mBAAQC,EAAR,CAAP;AAGK;;AAAA,SAASL,kBAAT,CAA4BI,QAA5B,EAAsC;EAAA,iBACrB,4BAAU;IAAEE,KAAKF,QAAP;IAAiBG,WAAW;EAA5B,CAAV,CADqB;EAAA,IACnCC,GADmC,cACnCA,GADmC;EAAA,IAC9BC,IAD8B,cAC9BA,IAD8B;;EAE3C,IAAID,GAAJ,EAAS;IACP;IACA,OAAOA,IAAIE,IAAJF,IAAYR,mBAAmB,mBAAQ,mBAAQS,IAAR,CAAR,CAAnBT,CAAnB;EACD;;EACD,OAAO,IAAP;AACD","names":["getContextPackagePath","getFilePackagePath","getFilePackageName","context","getPhysicalFilename","getFilename","filePath","fp","cwd","normalize","pkg","path","name"],"sources":["C:\\Users\\Rohith\\mern\\frontend\\node_modules\\eslint-plugin-import\\src\\core\\packagePath.js"],"sourcesContent":["import { dirname } from 'path';\nimport pkgUp from 'eslint-module-utils/pkgUp';\nimport readPkgUp from 'eslint-module-utils/readPkgUp';\n\n\nexport function getContextPackagePath(context) {\n  return getFilePackagePath(context.getPhysicalFilename ? context.getPhysicalFilename() : context.getFilename());\n}\n\nexport function getFilePackagePath(filePath) {\n  const fp = pkgUp({ cwd: filePath });\n  return dirname(fp);\n}\n\nexport function getFilePackageName(filePath) {\n  const { pkg, path } = readPkgUp({ cwd: filePath, normalize: false });\n  if (pkg) {\n    // recursion in case of intermediate esm package.json without name found\n    return pkg.name || getFilePackageName(dirname(dirname(path)));\n  }\n  return null;\n}\n"]},"metadata":{},"sourceType":"script"}