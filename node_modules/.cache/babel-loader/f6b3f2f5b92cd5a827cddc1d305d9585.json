{"ast":null,"code":"var assert = require('assert');\n\nvar hpack = require('../');\n\nvar fixtures = require('./fixtures');\n\ndescribe('hpack/decompressor', function () {\n  var decomp;\n  beforeEach(function () {\n    decomp = hpack.decompressor.create({\n      table: {\n        maxSize: 1024\n      }\n    });\n  });\n  describe('indexed field', function () {\n    it('should fail on 0-index', function (cb) {\n      decomp.write(new Buffer([0b10000000]));\n      decomp.execute(function (err) {\n        assert(/zero index/i.test(err.message), err.message);\n        cb();\n      });\n    });\n    it('should fetch entry from static table', function () {\n      decomp.write(new Buffer([0b10000000 | 2]));\n      decomp.execute();\n      var field = decomp.read();\n      assert.equal(field.name, ':method');\n      assert.equal(field.value, 'GET');\n    });\n    it('should fetch entry from the end of the static table', function () {\n      decomp.write(new Buffer([0b10000000 | 61]));\n      decomp.execute();\n      var field = decomp.read();\n      assert.equal(field.name, 'www-authenticate');\n      assert.equal(field.value, '');\n    });\n    it('should fail on OOB-index', function (cb) {\n      decomp.write(new Buffer([0b11000000]));\n      decomp.execute(function (err) {\n        assert(/field oob/i.test(err.message), err.message);\n        cb();\n      });\n    });\n  });\n  describe('literal field', function () {\n    it('should lookup name in the table (incremental)', function () {\n      var value = new Buffer('localhost');\n      var header = new Buffer([0b01000000 | 38, // 38th element from static table\n      value.length]);\n      decomp.write(Buffer.concat([header, value]));\n      decomp.execute();\n      var field = decomp.read();\n      assert.equal(field.name, 'host');\n      assert.equal(field.value, 'localhost');\n      decomp.write(new Buffer([0b10000000 | 62]));\n      decomp.execute();\n      var field = decomp.read();\n      assert.equal(field.name, 'host');\n      assert.equal(field.value, 'localhost');\n    });\n    it('should lookup name in the table (not-incremental)', function (cb) {\n      var value = new Buffer('localhost');\n      var header = new Buffer([0b00001111, 0b00000000 | 23, value.length]);\n      decomp.write(Buffer.concat([header, value]));\n      decomp.execute();\n      var field = decomp.read();\n      assert.equal(field.name, 'host');\n      assert.equal(field.value, 'localhost');\n      decomp.write(new Buffer([0b10000000 | 62]));\n      decomp.execute(function (err) {\n        assert(/field oob/i.test(err.message), err.message);\n        cb();\n      });\n    });\n    it('should evict header field from the table', function () {\n      var value = new Buffer('localhost');\n      var header = new Buffer([0b01000000 | 38, // 38th element from static table\n      value.length]);\n\n      for (var i = 0; i < 1000; i++) {\n        decomp.write(Buffer.concat([header, value]));\n        decomp.execute();\n        var field = decomp.read();\n        assert.equal(field.name, 'host');\n        assert.equal(field.value, 'localhost');\n      }\n\n      assert(decomp._table.size < decomp._table.maxSize);\n      assert.equal(decomp._table.dynamic.length, 22);\n    });\n  });\n  describe('update size', function () {\n    it('should evict header field from the table', function () {\n      var value = new Buffer('localhost');\n      var header = new Buffer([0b01000000 | 38, // 38th element from static table\n      value.length]);\n      decomp.write(Buffer.concat([header, value]));\n      decomp.execute();\n      var field = decomp.read();\n      assert.equal(field.name, 'host');\n      assert.equal(field.value, 'localhost');\n      assert.equal(decomp._table.dynamic.length, 1);\n      decomp.write(new Buffer([0b00100000]));\n      decomp.execute();\n      assert.equal(decomp._table.dynamic.length, 0);\n    });\n  });\n  describe('spec examples', function () {\n    var decomp;\n    beforeEach(function () {\n      decomp = hpack.decompressor.create({\n        table: {\n          maxSize: 256\n        }\n      });\n    });\n    var tests = fixtures.specExamples;\n    tests.forEach(function (test, i) {\n      var prev = tests[i - 1];\n      it('should give expected output on ' + test.id, function () {\n        var startFrom = test.continuation ? prev.decomp : decomp;\n        if (!startFrom) throw new Error('Previous test failed');\n        decomp = startFrom;\n        decomp.write(new Buffer(test.input.replace(/ /g, ''), 'hex'));\n        decomp.execute();\n        var output = [];\n\n        for (;;) {\n          var chunk = decomp.read();\n          if (!chunk) break;\n          output.push([chunk.name, chunk.value]);\n        }\n\n        assert.deepEqual(output, test.output); // Verify table contents\n\n        assert.deepEqual(decomp._table.dynamic.map(function (header) {\n          return [header.name, header.value, header.totalSize];\n        }).reverse(), test.table); // Verify table size\n\n        var expectedSize = test.table.reduce(function (acc, item) {\n          return acc + item[2];\n        }, 0);\n        assert.equal(decomp._table.size, expectedSize);\n        test.decomp = decomp;\n      });\n    });\n  });\n});","map":{"version":3,"names":["assert","require","hpack","fixtures","describe","decomp","beforeEach","decompressor","create","table","maxSize","it","cb","write","Buffer","execute","err","test","message","field","read","equal","name","value","header","length","concat","i","_table","size","dynamic","tests","specExamples","forEach","prev","id","startFrom","continuation","Error","input","replace","output","chunk","push","deepEqual","map","totalSize","reverse","expectedSize","reduce","acc","item"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/hpack.js/test/decompressor-test.js"],"sourcesContent":["var assert = require('assert');\nvar hpack = require('../');\nvar fixtures = require('./fixtures');\n\ndescribe('hpack/decompressor', function() {\n  var decomp;\n\n  beforeEach(function() {\n    decomp = hpack.decompressor.create({\n      table: {\n        maxSize: 1024\n      }\n    });\n  });\n\n  describe('indexed field', function() {\n    it('should fail on 0-index', function(cb) {\n      decomp.write(new Buffer([ 0b10000000 ]));\n      decomp.execute(function(err) {\n        assert(/zero index/i.test(err.message), err.message);\n        cb();\n      });\n    });\n\n    it('should fetch entry from static table', function() {\n      decomp.write(new Buffer([ 0b10000000 | 2 ]));\n      decomp.execute();\n      var field = decomp.read();\n      assert.equal(field.name, ':method');\n      assert.equal(field.value, 'GET');\n    });\n\n    it('should fetch entry from the end of the static table', function() {\n      decomp.write(new Buffer([ 0b10000000 | 61 ]));\n      decomp.execute();\n      var field = decomp.read();\n      assert.equal(field.name, 'www-authenticate');\n      assert.equal(field.value, '');\n    });\n\n    it('should fail on OOB-index', function(cb) {\n      decomp.write(new Buffer([ 0b11000000 ]));\n      decomp.execute(function(err) {\n        assert(/field oob/i.test(err.message), err.message);\n        cb();\n      });\n    });\n  });\n\n  describe('literal field', function() {\n    it('should lookup name in the table (incremental)', function() {\n      var value = new Buffer('localhost');\n      var header = new Buffer([\n        0b01000000 | 38,  // 38th element from static table\n        value.length\n      ]);\n      decomp.write(Buffer.concat([ header, value ]));\n      decomp.execute();\n\n      var field = decomp.read();\n      assert.equal(field.name, 'host');\n      assert.equal(field.value, 'localhost');\n\n      decomp.write(new Buffer([ 0b10000000 | 62 ]));\n      decomp.execute();\n      var field = decomp.read();\n      assert.equal(field.name, 'host');\n      assert.equal(field.value, 'localhost');\n    });\n\n    it('should lookup name in the table (not-incremental)', function(cb) {\n      var value = new Buffer('localhost');\n      var header = new Buffer([\n        0b00001111,\n        0b00000000 | 23,\n        value.length\n      ]);\n      decomp.write(Buffer.concat([ header, value ]));\n      decomp.execute();\n\n      var field = decomp.read();\n      assert.equal(field.name, 'host');\n      assert.equal(field.value, 'localhost');\n\n      decomp.write(new Buffer([ 0b10000000 | 62 ]));\n      decomp.execute(function(err) {\n        assert(/field oob/i.test(err.message), err.message);\n        cb();\n      });\n    });\n\n    it('should evict header field from the table', function() {\n      var value = new Buffer('localhost');\n      var header = new Buffer([\n        0b01000000 | 38,  // 38th element from static table\n        value.length\n      ]);\n      for (var i = 0; i < 1000; i++) {\n        decomp.write(Buffer.concat([ header, value ]));\n        decomp.execute();\n        var field = decomp.read();\n        assert.equal(field.name, 'host');\n        assert.equal(field.value, 'localhost');\n      }\n\n      assert(decomp._table.size < decomp._table.maxSize);\n      assert.equal(decomp._table.dynamic.length, 22);\n    });\n  });\n\n  describe('update size', function() {\n    it('should evict header field from the table', function() {\n      var value = new Buffer('localhost');\n      var header = new Buffer([\n        0b01000000 | 38,  // 38th element from static table\n        value.length\n      ]);\n\n      decomp.write(Buffer.concat([ header, value ]));\n      decomp.execute();\n      var field = decomp.read();\n      assert.equal(field.name, 'host');\n      assert.equal(field.value, 'localhost');\n      assert.equal(decomp._table.dynamic.length, 1);\n\n      decomp.write(new Buffer([\n        0b00100000\n      ]));\n      decomp.execute();\n\n      assert.equal(decomp._table.dynamic.length, 0);\n    });\n  });\n\n  describe('spec examples', function() {\n    var decomp;\n    beforeEach(function() {\n      decomp = hpack.decompressor.create({\n        table: {\n          maxSize: 256\n        }\n      });\n    });\n\n    var tests = fixtures.specExamples;\n\n    tests.forEach(function(test, i) {\n      var prev = tests[i - 1];\n      it('should give expected output on ' + test.id, function() {\n        var startFrom = test.continuation ? prev.decomp : decomp;\n        if (!startFrom)\n          throw new Error('Previous test failed');\n        decomp = startFrom;\n\n        decomp.write(new Buffer(test.input.replace(/ /g, ''), 'hex'));\n        decomp.execute();\n\n        var output = [];\n        for (;;) {\n          var chunk = decomp.read();\n          if (!chunk)\n            break;\n\n          output.push([ chunk.name, chunk.value ]);\n        }\n\n        assert.deepEqual(output, test.output);\n\n        // Verify table contents\n        assert.deepEqual(decomp._table.dynamic.map(function(header) {\n          return [ header.name, header.value, header.totalSize ];\n        }).reverse(), test.table);\n\n        // Verify table size\n        var expectedSize = test.table.reduce(function(acc, item) {\n          return acc + item[2];\n        }, 0);\n        assert.equal(decomp._table.size, expectedSize);\n\n        test.decomp = decomp;\n      });\n    });\n  });\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}