{"ast":null,"code":"'use strict';\n\nvar _docsUrl = require('../docsUrl');\n\nvar _docsUrl2 = _interopRequireDefault(_docsUrl);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nmodule.exports = {\n  meta: {\n    type: 'suggestion',\n    docs: {\n      url: (0, _docsUrl2['default'])('no-named-export')\n    },\n    schema: []\n  },\n  create: function () {\n    function create(context) {\n      // ignore non-modules\n      if (context.parserOptions.sourceType !== 'module') {\n        return {};\n      }\n\n      var message = 'Named exports are not allowed.';\n      return {\n        ExportAllDeclaration: function () {\n          function ExportAllDeclaration(node) {\n            context.report({\n              node: node,\n              message: message\n            });\n          }\n\n          return ExportAllDeclaration;\n        }(),\n        ExportNamedDeclaration: function () {\n          function ExportNamedDeclaration(node) {\n            if (node.specifiers.length === 0) {\n              return context.report({\n                node: node,\n                message: message\n              });\n            }\n\n            var someNamed = node.specifiers.some(function (specifier) {\n              return (specifier.exported.name || specifier.exported.value) !== 'default';\n            });\n\n            if (someNamed) {\n              context.report({\n                node: node,\n                message: message\n              });\n            }\n          }\n\n          return ExportNamedDeclaration;\n        }()\n      };\n    }\n\n    return create;\n  }()\n};","map":{"version":3,"mappings":";;AAAA;;;;;;;;;;AAEAA,OAAOC,OAAPD,GAAiB;EACfE,MAAM;IACJC,MAAM,YADF;IAEJC,MAAM;MAAEC,KAAK,0BAAQ,iBAAR;IAAP,CAFF;IAGJC,QAAQ;EAHJ,CADS;EAOfC,MAPe;IAAA,gBAORC,OAPQ,EAOC;MACd;MACA,IAAIA,QAAQC,aAARD,CAAsBE,UAAtBF,KAAqC,QAAzC,EAAmD;QACjD,OAAO,EAAP;MACD;;MAED,IAAMG,UAAU,gCAAhB;MAEA,OAAO;QACLC,oBADK;UAAA,8BACgBC,IADhB,EACsB;YACzBL,QAAQM,MAARN,CAAe;cAAEK,UAAF;cAAQF;YAAR,CAAfH;UAFG;;UAAA;QAAA;QAKLO,sBALK;UAAA,gCAKkBF,IALlB,EAKwB;YAC3B,IAAIA,KAAKG,UAALH,CAAgBI,MAAhBJ,KAA2B,CAA/B,EAAkC;cAChC,OAAOL,QAAQM,MAARN,CAAe;gBAAEK,UAAF;gBAAQF;cAAR,CAAfH,CAAP;YACD;;YAED,IAAMU,YAAYL,KAAKG,UAALH,CAAgBM,IAAhBN,CAAqB;cAAA,OAAa,CAACO,UAAUC,QAAVD,CAAmBE,IAAnBF,IAA2BA,UAAUC,QAAVD,CAAmBG,KAA/C,MAA0D,SAAvE;YAArB,EAAlB;;YACA,IAAIL,SAAJ,EAAe;cACbV,QAAQM,MAARN,CAAe;gBAAEK,UAAF;gBAAQF;cAAR,CAAfH;YACD;UAbE;;UAAA;QAAA;MAAA,CAAP;IAfa;;IAAA;EAAA;AAAA,CAAjBR","names":["module","exports","meta","type","docs","url","schema","create","context","parserOptions","sourceType","message","ExportAllDeclaration","node","report","ExportNamedDeclaration","specifiers","length","someNamed","some","specifier","exported","name","value"],"sources":["C:\\Users\\Rohith\\mern\\frontend\\node_modules\\eslint-plugin-import\\src\\rules\\no-named-export.js"],"sourcesContent":["import docsUrl from '../docsUrl';\n\nmodule.exports = {\n  meta: {\n    type: 'suggestion',\n    docs: { url: docsUrl('no-named-export') },\n    schema: [],\n  },\n\n  create(context) {\n    // ignore non-modules\n    if (context.parserOptions.sourceType !== 'module') {\n      return {};\n    }\n\n    const message = 'Named exports are not allowed.';\n\n    return {\n      ExportAllDeclaration(node) {\n        context.report({ node, message });\n      },\n\n      ExportNamedDeclaration(node) {\n        if (node.specifiers.length === 0) {\n          return context.report({ node, message });\n        }\n\n        const someNamed = node.specifiers.some(specifier => (specifier.exported.name || specifier.exported.value) !== 'default');\n        if (someNamed) {\n          context.report({ node, message });\n        }\n      },\n    };\n  },\n};\n"]},"metadata":{},"sourceType":"script"}