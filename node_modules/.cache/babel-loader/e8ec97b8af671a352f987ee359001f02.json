{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\Rohith\\\\mern\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\Rohith\\\\mern\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:\\\\Users\\\\Rohith\\\\mern\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"C:\\\\Users\\\\Rohith\\\\mern\\\\frontend\\\\src\\\\screens\\\\upload\\\\Upload.js\";\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nimport * as tf from \"@tensorflow/tfjs\";\nimport React, { useState, useEffect } from \"react\";\n// import NavBar from \"./Navbar.js\";\n//import \"./App.css\";\nvar idx2class1 = {\n  0: \"abomasnow\",\n  1: \"abra\",\n  2: \"absol\",\n  3: \"accelgor\",\n  4: \"aegislash-blade\",\n  5: \"aerodactyl\",\n  6: \"aggron\",\n  7: \"aipom\",\n  8: \"alakazam\",\n  9: \"alomomola\",\n  10: \"altaria\",\n  11: \"amaura\",\n  12: \"ambipom\",\n  13: \"amoonguss\",\n  14: \"ampharos\",\n  15: \"anorith\",\n  16: \"araquanid\",\n  17: \"arbok\",\n  18: \"arcanine\",\n  19: \"arceus\",\n  20: \"archen\",\n  21: \"archeops\",\n  22: \"ariados\",\n  23: \"armaldo\",\n  24: \"aromatisse\",\n  25: \"aron\",\n  26: \"articuno\",\n  27: \"audino\",\n  28: \"aurorus\",\n  29: \"avalugg\",\n  30: \"axew\",\n  31: \"azelf\",\n  32: \"azumarill\",\n  33: \"azurill\",\n  34: \"bagon\",\n  35: \"baltoy\",\n  36: \"banette\",\n  37: \"barbaracle\",\n  38: \"barboach\",\n  39: \"basculin-red-striped\",\n  40: \"bastiodon\",\n  41: \"bayleef\",\n  42: \"beartic\",\n  43: \"beautifly\",\n  44: \"beedrill\",\n  45: \"beheeyem\",\n  46: \"beldum\",\n  47: \"bellossom\",\n  48: \"bellsprout\",\n  49: \"bergmite\",\n  50: \"bewear\",\n  51: \"bibarel\",\n  52: \"bidoof\",\n  53: \"binacle\",\n  54: \"bisharp\",\n  55: \"blacephalon\",\n  56: \"blastoise\",\n  57: \"blaziken\",\n  58: \"blissey\",\n  59: \"blitzle\",\n  60: \"boldore\",\n  61: \"bonsly\",\n  62: \"bouffalant\",\n  63: \"bounsweet\",\n  64: \"braixen\",\n  65: \"braviary\",\n  66: \"breloom\",\n  67: \"brionne\",\n  68: \"bronzong\",\n  69: \"bronzor\",\n  70: \"bruxish\",\n  71: \"budew\",\n  72: \"buizel\",\n  73: \"bulbasaur\",\n  74: \"buneary\",\n  75: \"bunnelby\",\n  76: \"burmy\",\n  77: \"butterfree\",\n  78: \"buzzwole\",\n  79: \"cacnea\",\n  80: \"cacturne\",\n  81: \"camerupt\",\n  82: \"carbink\",\n  83: \"carnivine\",\n  84: \"carracosta\",\n  85: \"carvanha\",\n  86: \"cascoon\",\n  87: \"castform\",\n  88: \"caterpie\",\n  89: \"celebi\",\n  90: \"celesteela\",\n  91: \"chandelure\",\n  92: \"chansey\",\n  93: \"charizard\",\n  94: \"charjabug\",\n  95: \"charmander\",\n  96: \"charmeleon\",\n  97: \"chatot\",\n  98: \"cherrim\",\n  99: \"cherubi\",\n  100: \"chesnaught\",\n  101: \"chespin\",\n  102: \"chikorita\",\n  103: \"chimchar\",\n  104: \"chimecho\",\n  105: \"chinchou\",\n  106: \"chingling\",\n  107: \"cinccino\",\n  108: \"clamperl\",\n  109: \"clauncher\",\n  110: \"clawitzer\",\n  111: \"claydol\",\n  112: \"clefable\",\n  113: \"clefairy\",\n  114: \"cleffa\",\n  115: \"cloyster\",\n  116: \"cobalion\",\n  117: \"cofagrigus\",\n  118: \"combee\",\n  119: \"combusken\",\n  120: \"comfey\",\n  121: \"conkeldurr\",\n  122: \"corphish\",\n  123: \"corsola\",\n  124: \"cosmoem\",\n  125: \"cosmog\",\n  126: \"cottonee\",\n  127: \"crabominable\",\n  128: \"crabrawler\",\n  129: \"cradily\",\n  130: \"cranidos\",\n  131: \"crawdaunt\",\n  132: \"cresselia\",\n  133: \"croagunk\",\n  134: \"crobat\",\n  135: \"croconaw\",\n  136: \"crustle\",\n  137: \"cryogonal\",\n  138: \"cubchoo\",\n  139: \"cubone\",\n  140: \"cutiefly\",\n  141: \"cyndaquil\",\n  142: \"darkrai\",\n  143: \"darmanitan-standard\",\n  144: \"dartrix\",\n  145: \"darumaka\",\n  146: \"decidueye\",\n  147: \"dedenne\",\n  148: \"deerling\",\n  149: \"deino\",\n  150: \"delcatty\",\n  151: \"delibird\",\n  152: \"delphox\",\n  153: \"deoxys-normal\",\n  154: \"dewgong\",\n  155: \"dewott\",\n  156: \"dewpider\",\n  157: \"dhelmise\",\n  158: \"dialga\",\n  159: \"diancie\",\n  160: \"diggersby\",\n  161: \"diglett\",\n  162: \"ditto\",\n  163: \"dodrio\",\n  164: \"doduo\",\n  165: \"donphan\",\n  166: \"doublade\",\n  167: \"dragalge\",\n  168: \"dragonair\",\n  169: \"dragonite\",\n  170: \"drampa\",\n  171: \"drapion\",\n  172: \"dratini\",\n  173: \"drifblim\",\n  174: \"drifloon\",\n  175: \"drilbur\",\n  176: \"drowzee\",\n  177: \"druddigon\",\n  178: \"ducklett\",\n  179: \"dugtrio\",\n  180: \"dunsparce\",\n  181: \"duosion\",\n  182: \"durant\",\n  183: \"dusclops\",\n  184: \"dusknoir\",\n  185: \"duskull\",\n  186: \"dustox\",\n  187: \"dwebble\",\n  188: \"eelektrik\",\n  189: \"eelektross\",\n  190: \"eevee\",\n  191: \"ekans\",\n  192: \"electabuzz\",\n  193: \"electivire\",\n  194: \"electrike\",\n  195: \"electrode\",\n  196: \"elekid\",\n  197: \"elgyem\",\n  198: \"emboar\",\n  199: \"emolga\",\n  200: \"empoleon\",\n  201: \"entei\",\n  202: \"escavalier\",\n  203: \"espeon\",\n  204: \"espurr\",\n  205: \"excadrill\",\n  206: \"exeggcute\",\n  207: \"exeggutor\",\n  208: \"exploud\",\n  209: \"farfetchd\",\n  210: \"fearow\",\n  211: \"feebas\",\n  212: \"fennekin\",\n  213: \"feraligatr\",\n  214: \"ferroseed\",\n  215: \"ferrothorn\",\n  216: \"finneon\",\n  217: \"flaaffy\",\n  218: \"flabebe\",\n  219: \"flareon\",\n  220: \"fletchinder\",\n  221: \"fletchling\",\n  222: \"floatzel\",\n  223: \"floette\",\n  224: \"florges\",\n  225: \"flygon\",\n  226: \"fomantis\",\n  227: \"foongus\",\n  228: \"forretress\",\n  229: \"fraxure\",\n  230: \"frillish\",\n  231: \"froakie\",\n  232: \"frogadier\",\n  233: \"froslass\",\n  234: \"furfrou\",\n  235: \"furret\",\n  236: \"gabite\",\n  237: \"gallade\",\n  238: \"galvantula\",\n  239: \"garbodor\",\n  240: \"garchomp\",\n  241: \"gardevoir\",\n  242: \"gastly\",\n  243: \"gastrodon\",\n  244: \"genesect\",\n  245: \"gengar\",\n  246: \"geodude\",\n  247: \"gible\",\n  248: \"gigalith\",\n  249: \"girafarig\",\n  250: \"giratina-altered\",\n  251: \"glaceon\",\n  252: \"glalie\",\n  253: \"glameow\",\n  254: \"gligar\",\n  255: \"gliscor\",\n  256: \"gloom\",\n  257: \"gogoat\",\n  258: \"golbat\",\n  259: \"goldeen\",\n  260: \"golduck\",\n  261: \"golem\",\n  262: \"golett\",\n  263: \"golisopod\",\n  264: \"golurk\",\n  265: \"goodra\",\n  266: \"goomy\",\n  267: \"gorebyss\",\n  268: \"gothita\",\n  269: \"gothitelle\",\n  270: \"gothorita\",\n  271: \"gourgeist-average\",\n  272: \"granbull\",\n  273: \"graveler\",\n  274: \"greninja\",\n  275: \"grimer\",\n  276: \"grotle\",\n  277: \"groudon\",\n  278: \"grovyle\",\n  279: \"growlithe\",\n  280: \"grubbin\",\n  281: \"grumpig\",\n  282: \"gulpin\",\n  283: \"gumshoos\",\n  284: \"gurdurr\",\n  285: \"guzzlord\",\n  286: \"gyarados\",\n  287: \"hakamo-o\",\n  288: \"happiny\",\n  289: \"hariyama\",\n  290: \"haunter\",\n  291: \"hawlucha\",\n  292: \"haxorus\",\n  293: \"heatmor\",\n  294: \"heatran\",\n  295: \"heliolisk\",\n  296: \"helioptile\",\n  297: \"heracross\",\n  298: \"herdier\",\n  299: \"hippopotas\",\n  300: \"hippowdon\",\n  301: \"hitmonchan\",\n  302: \"hitmonlee\",\n  303: \"hitmontop\",\n  304: \"ho-oh\",\n  305: \"honchkrow\",\n  306: \"honedge\",\n  307: \"hoopa-confined\",\n  308: \"hoothoot\",\n  309: \"hoppip\",\n  310: \"horsea\",\n  311: \"houndoom\",\n  312: \"houndour\",\n  313: \"huntail\",\n  314: \"hydreigon\",\n  315: \"hypno\",\n  316: \"igglybuff\",\n  317: \"illumise\",\n  318: \"incineroar\",\n  319: \"infernape\",\n  320: \"inkay\",\n  321: \"ivysaur\",\n  322: \"jangmo-o\",\n  323: \"jellicent\",\n  324: \"jigglypuff\",\n  325: \"jirachi\",\n  326: \"jolteon\",\n  327: \"joltik\",\n  328: \"jumpluff\",\n  329: \"jynx\",\n  330: \"kabuto\",\n  331: \"kabutops\",\n  332: \"kadabra\",\n  333: \"kakuna\",\n  334: \"kangaskhan\",\n  335: \"karrablast\",\n  336: \"kartana\",\n  337: \"kecleon\",\n  338: \"keldeo-ordinary\",\n  339: \"kingdra\",\n  340: \"kingler\",\n  341: \"kirlia\",\n  342: \"klang\",\n  343: \"klefki\",\n  344: \"klink\",\n  345: \"klinklang\",\n  346: \"koffing\",\n  347: \"komala\",\n  348: \"kommo-o\",\n  349: \"krabby\",\n  350: \"kricketot\",\n  351: \"kricketune\",\n  352: \"krokorok\",\n  353: \"krookodile\",\n  354: \"kyogre\",\n  355: \"kyurem\",\n  356: \"lairon\",\n  357: \"lampent\",\n  358: \"landorus-incarnate\",\n  359: \"lanturn\",\n  360: \"lapras\",\n  361: \"larvesta\",\n  362: \"larvitar\",\n  363: \"latias\",\n  364: \"latios\",\n  365: \"leafeon\",\n  366: \"leavanny\",\n  367: \"ledian\",\n  368: \"ledyba\",\n  369: \"lickilicky\",\n  370: \"lickitung\",\n  371: \"liepard\",\n  372: \"lileep\",\n  373: \"lilligant\",\n  374: \"lillipup\",\n  375: \"linoone\",\n  376: \"litleo\",\n  377: \"litten\",\n  378: \"litwick\",\n  379: \"lombre\",\n  380: \"lopunny\",\n  381: \"lotad\",\n  382: \"loudred\",\n  383: \"lucario\",\n  384: \"ludicolo\",\n  385: \"lugia\",\n  386: \"lumineon\",\n  387: \"lunala\",\n  388: \"lunatone\",\n  389: \"lurantis\",\n  390: \"luvdisc\",\n  391: \"luxio\",\n  392: \"luxray\",\n  393: \"lycanroc-midday\",\n  394: \"machamp\",\n  395: \"machoke\",\n  396: \"machop\",\n  397: \"magby\",\n  398: \"magcargo\",\n  399: \"magearna\",\n  400: \"magikarp\",\n  401: \"magmar\",\n  402: \"magmortar\",\n  403: \"magnemite\",\n  404: \"magneton\",\n  405: \"magnezone\",\n  406: \"makuhita\",\n  407: \"malamar\",\n  408: \"mamoswine\",\n  409: \"manaphy\",\n  410: \"mandibuzz\",\n  411: \"manectric\",\n  412: \"mankey\",\n  413: \"mantine\",\n  414: \"mantyke\",\n  415: \"maractus\",\n  416: \"mareanie\",\n  417: \"mareep\",\n  418: \"marill\",\n  419: \"marowak\",\n  420: \"marshadow\",\n  421: \"marshtomp\",\n  422: \"masquerain\",\n  423: \"mawile\",\n  424: \"medicham\",\n  425: \"meditite\",\n  426: \"meganium\",\n  427: \"melmetal\",\n  428: \"meloetta-aria\",\n  429: \"meltan\",\n  430: \"meowstic-male\",\n  431: \"meowth\",\n  432: \"mesprit\",\n  433: \"metagross\",\n  434: \"metang\",\n  435: \"metapod\",\n  436: \"mew\",\n  437: \"mewtwo\",\n  438: \"mienfoo\",\n  439: \"mienshao\",\n  440: \"mightyena\",\n  441: \"milotic\",\n  442: \"miltank\",\n  443: \"mime-jr\",\n  444: \"mimikyu\",\n  445: \"minccino\",\n  446: \"minior-meteor\",\n  447: \"minun\",\n  448: \"misdreavus\",\n  449: \"mismagius\",\n  450: \"moltres\",\n  451: \"monferno\",\n  452: \"morelull\",\n  453: \"mothim\",\n  454: \"mr-mime\",\n  455: \"mudbray\",\n  456: \"mudkip\",\n  457: \"mudsdale\",\n  458: \"muk\",\n  459: \"munchlax\",\n  460: \"munna\",\n  461: \"murkrow\",\n  462: \"musharna\",\n  463: \"naganadel\",\n  464: \"natu\",\n  465: \"necrozma\",\n  466: \"nidoking\",\n  467: \"nidoqueen\",\n  468: \"nidoran-f\",\n  469: \"nidoran-m\",\n  470: \"nidorina\",\n  471: \"nidorino\",\n  472: \"nihilego\",\n  473: \"nincada\",\n  474: \"ninetales\",\n  475: \"ninjask\",\n  476: \"noctowl\",\n  477: \"noibat\",\n  478: \"noivern\",\n  479: \"nosepass\",\n  480: \"numel\",\n  481: \"nuzleaf\",\n  482: \"octillery\",\n  483: \"oddish\",\n  484: \"omanyte\",\n  485: \"omastar\",\n  486: \"onix\",\n  487: \"oranguru\",\n  488: \"oricorio-baile\",\n  489: \"oshawott\",\n  490: \"pachirisu\",\n  491: \"palkia\",\n  492: \"palossand\",\n  493: \"palpitoad\",\n  494: \"pancham\",\n  495: \"pangoro\",\n  496: \"panpour\",\n  497: \"pansage\",\n  498: \"pansear\",\n  499: \"paras\",\n  500: \"parasect\",\n  501: \"passimian\",\n  502: \"patrat\",\n  503: \"pawniard\",\n  504: \"pelipper\",\n  505: \"persian\",\n  506: \"petilil\",\n  507: \"phanpy\",\n  508: \"phantump\",\n  509: \"pheromosa\",\n  510: \"phione\",\n  511: \"pichu\",\n  512: \"pidgeot\",\n  513: \"pidgeotto\",\n  514: \"pidgey\",\n  515: \"pidove\",\n  516: \"pignite\",\n  517: \"pikachu\",\n  518: \"pikipek\",\n  519: \"piloswine\",\n  520: \"pineco\",\n  521: \"pinsir\",\n  522: \"piplup\",\n  523: \"plusle\",\n  524: \"poipole\",\n  525: \"politoed\",\n  526: \"poliwag\",\n  527: \"poliwhirl\",\n  528: \"poliwrath\",\n  529: \"ponyta\",\n  530: \"poochyena\",\n  531: \"popplio\",\n  532: \"porygon-z\",\n  533: \"porygon\",\n  534: \"porygon2\",\n  535: \"primarina\",\n  536: \"primeape\",\n  537: \"prinplup\",\n  538: \"probopass\",\n  539: \"psyduck\",\n  540: \"pumpkaboo-average\",\n  541: \"pupitar\",\n  542: \"purrloin\",\n  543: \"purugly\",\n  544: \"pyroar\",\n  545: \"pyukumuku\",\n  546: \"quagsire\",\n  547: \"quilava\",\n  548: \"quilladin\",\n  549: \"qwilfish\",\n  550: \"raichu\",\n  551: \"raikou\",\n  552: \"ralts\",\n  553: \"rampardos\",\n  554: \"rapidash\",\n  555: \"raticate\",\n  556: \"rattata\",\n  557: \"rayquaza\",\n  558: \"regice\",\n  559: \"regigigas\",\n  560: \"regirock\",\n  561: \"registeel\",\n  562: \"relicanth\",\n  563: \"remoraid\",\n  564: \"reshiram\",\n  565: \"reuniclus\",\n  566: \"rhydon\",\n  567: \"rhyhorn\",\n  568: \"rhyperior\",\n  569: \"ribombee\",\n  570: \"riolu\",\n  571: \"rockruff\",\n  572: \"roggenrola\",\n  573: \"roselia\",\n  574: \"roserade\",\n  575: \"rotom\",\n  576: \"rowlet\",\n  577: \"rufflet\",\n  578: \"sableye\",\n  579: \"salamence\",\n  580: \"salandit\",\n  581: \"salazzle\",\n  582: \"samurott\",\n  583: \"sandile\",\n  584: \"sandshrew\",\n  585: \"sandslash\",\n  586: \"sandygast\",\n  587: \"sawk\",\n  588: \"sawsbuck\",\n  589: \"scatterbug\",\n  590: \"sceptile\",\n  591: \"scizor\",\n  592: \"scolipede\",\n  593: \"scrafty\",\n  594: \"scraggy\",\n  595: \"scyther\",\n  596: \"seadra\",\n  597: \"seaking\",\n  598: \"sealeo\",\n  599: \"seedot\",\n  600: \"seel\",\n  601: \"seismitoad\",\n  602: \"sentret\",\n  603: \"serperior\",\n  604: \"servine\",\n  605: \"seviper\",\n  606: \"sewaddle\",\n  607: \"sharpedo\",\n  608: \"shaymin-land\",\n  609: \"shedinja\",\n  610: \"shelgon\",\n  611: \"shellder\",\n  612: \"shellos\",\n  613: \"shelmet\",\n  614: \"shieldon\",\n  615: \"shiftry\",\n  616: \"shiinotic\",\n  617: \"shinx\",\n  618: \"shroomish\",\n  619: \"shuckle\",\n  620: \"shuppet\",\n  621: \"sigilyph\",\n  622: \"silcoon\",\n  623: \"silvally\",\n  624: \"simipour\",\n  625: \"simisage\",\n  626: \"simisear\",\n  627: \"skarmory\",\n  628: \"skiddo\",\n  629: \"skiploom\",\n  630: \"skitty\",\n  631: \"skorupi\",\n  632: \"skrelp\",\n  633: \"skuntank\",\n  634: \"slaking\",\n  635: \"slakoth\",\n  636: \"sliggoo\",\n  637: \"slowbro\",\n  638: \"slowking\",\n  639: \"slowpoke\",\n  640: \"slugma\",\n  641: \"slurpuff\",\n  642: \"smeargle\",\n  643: \"smoochum\",\n  644: \"sneasel\",\n  645: \"snivy\",\n  646: \"snorlax\",\n  647: \"snorunt\",\n  648: \"snover\",\n  649: \"snubbull\",\n  650: \"solgaleo\",\n  651: \"solosis\",\n  652: \"solrock\",\n  653: \"spearow\",\n  654: \"spewpa\",\n  655: \"spheal\",\n  656: \"spinarak\",\n  657: \"spinda\",\n  658: \"spiritomb\",\n  659: \"spoink\",\n  660: \"spritzee\",\n  661: \"squirtle\",\n  662: \"stakataka\",\n  663: \"stantler\",\n  664: \"staraptor\",\n  665: \"staravia\",\n  666: \"starly\",\n  667: \"starmie\",\n  668: \"staryu\",\n  669: \"steelix\",\n  670: \"steenee\",\n  671: \"stoutland\",\n  672: \"stufful\",\n  673: \"stunfisk\",\n  674: \"stunky\",\n  675: \"sudowoodo\",\n  676: \"suicune\",\n  677: \"sunflora\",\n  678: \"sunkern\",\n  679: \"surskit\",\n  680: \"swablu\",\n  681: \"swadloon\",\n  682: \"swalot\",\n  683: \"swampert\",\n  684: \"swanna\",\n  685: \"swellow\",\n  686: \"swinub\",\n  687: \"swirlix\",\n  688: \"swoobat\",\n  689: \"sylveon\",\n  690: \"taillow\",\n  691: \"talonflame\",\n  692: \"tangela\",\n  693: \"tangrowth\",\n  694: \"tapu-bulu\",\n  695: \"tapu-fini\",\n  696: \"tapu-koko\",\n  697: \"tapu-lele\",\n  698: \"tauros\",\n  699: \"teddiursa\",\n  700: \"tentacool\",\n  701: \"tentacruel\",\n  702: \"tepig\",\n  703: \"terrakion\",\n  704: \"throh\",\n  705: \"thundurus-incarnate\",\n  706: \"timburr\",\n  707: \"tirtouga\",\n  708: \"togedemaru\",\n  709: \"togekiss\",\n  710: \"togepi\",\n  711: \"togetic\",\n  712: \"torchic\",\n  713: \"torkoal\",\n  714: \"tornadus-incarnate\",\n  715: \"torracat\",\n  716: \"torterra\",\n  717: \"totodile\",\n  718: \"toucannon\",\n  719: \"toxapex\",\n  720: \"toxicroak\",\n  721: \"tranquill\",\n  722: \"trapinch\",\n  723: \"treecko\",\n  724: \"trevenant\",\n  725: \"tropius\",\n  726: \"trubbish\",\n  727: \"trumbeak\",\n  728: \"tsareena\",\n  729: \"turtonator\",\n  730: \"turtwig\",\n  731: \"tympole\",\n  732: \"tynamo\",\n  733: \"type-null\",\n  734: \"typhlosion\",\n  735: \"tyranitar\",\n  736: \"tyrantrum\",\n  737: \"tyrogue\",\n  738: \"tyrunt\",\n  739: \"umbreon\",\n  740: \"unfezant\",\n  741: \"unown\",\n  742: \"ursaring\",\n  743: \"uxie\",\n  744: \"vanillish\",\n  745: \"vanillite\",\n  746: \"vanilluxe\",\n  747: \"vaporeon\",\n  748: \"venipede\",\n  749: \"venomoth\",\n  750: \"venonat\",\n  751: \"venusaur\",\n  752: \"vespiquen\",\n  753: \"vibrava\",\n  754: \"victini\",\n  755: \"victreebel\",\n  756: \"vigoroth\",\n  757: \"vikavolt\",\n  758: \"vileplume\",\n  759: \"virizion\",\n  760: \"vivillon\",\n  761: \"volbeat\",\n  762: \"volcanion\",\n  763: \"volcarona\",\n  764: \"voltorb\",\n  765: \"vullaby\",\n  766: \"vulpix\",\n  767: \"wailmer\",\n  768: \"wailord\",\n  769: \"walrein\",\n  770: \"wartortle\",\n  771: \"watchog\",\n  772: \"weavile\",\n  773: \"weedle\",\n  774: \"weepinbell\",\n  775: \"weezing\",\n  776: \"whimsicott\",\n  777: \"whirlipede\",\n  778: \"whiscash\",\n  779: \"whismur\",\n  780: \"wigglytuff\",\n  781: \"wimpod\",\n  782: \"wingull\",\n  783: \"wishiwashi-solo\",\n  784: \"wobbuffet\",\n  785: \"woobat\",\n  786: \"wooper\",\n  787: \"wormadam-plant\",\n  788: \"wurmple\",\n  789: \"wynaut\",\n  790: \"xatu\",\n  791: \"xerneas\",\n  792: \"xurkitree\",\n  793: \"yamask\",\n  794: \"yanma\",\n  795: \"yanmega\",\n  796: \"yungoos\",\n  797: \"yveltal\",\n  798: \"zangoose\",\n  799: \"zapdos\",\n  800: \"zebstrika\",\n  801: \"zekrom\",\n  802: \"zeraora\",\n  803: \"zigzagoon\",\n  804: \"zoroark\",\n  805: \"zorua\",\n  806: \"zubat\",\n  807: \"zweilous\",\n  808: \"zygarde-50\"\n};\nvar Upload = function Upload() {\n  // usestate for setting a javascript\n  // object for storing and using data\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    file = _useState2[0],\n    setFile = _useState2[1]; //   const [model, setModel] = useState(null);\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    processing = _useState4[0],\n    setProcessing = _useState4[1];\n  var _useState5 = useState(null),\n    _useState6 = _slicedToArray(_useState5, 2),\n    topkPredNames = _useState6[0],\n    setPrediction = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    imageLoaded = _useState8[0],\n    setImageLoaded = _useState8[1];\n  var _useState9 = useState([]),\n    _useState10 = _slicedToArray(_useState9, 2),\n    allpokemon = _useState10[0],\n    setAllpoke = _useState10[1];\n  var _useState11 = useState(null),\n    _useState12 = _slicedToArray(_useState11, 2),\n    model = _useState12[0],\n    setModel = _useState12[1];\n  function readImage(file) {\n    return new Promise(function (rs, rj) {\n      var fileReader = new FileReader();\n      fileReader.onload = function () {\n        return rs(fileReader.result);\n      };\n      fileReader.onerror = function () {\n        return rj(fileReader.error);\n      };\n      fileReader.readAsDataURL(file);\n    });\n  }\n  function createpoke(topkPredNames) {\n    // console.log(result)\n    topkPredNames.forEach( /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(pokemon) {\n        var res, data;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return fetch(\"https://pokeapi.co/api/v2/pokemon/\".concat(pokemon.name));\n              case 2:\n                res = _context.sent;\n                _context.next = 5;\n                return res.json();\n              case 5:\n                data = _context.sent;\n                console.log(\"lol\");\n                console.log(data);\n                // allpokemon.push(data)\n                setAllpoke(function (currentList) {\n                  return [].concat(_toConsumableArray(currentList), [data]);\n                });\n\n                // allpokemon.sort((a, b) => a.id - b.id)\n                console.log(\"lolol\");\n                console.log(allpokemon);\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n  }\n  function handleImgUpload(_x2) {\n    return _handleImgUpload.apply(this, arguments);\n  }\n  function _handleImgUpload() {\n    _handleImgUpload = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(event) {\n      var files, _file, fileData;\n      return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              files = event.target.files;\n              _file = files[0];\n              _context5.next = 4;\n              return readImage(_file);\n            case 4:\n              fileData = _context5.sent;\n              setFile(fileData);\n              setProcessing(true);\n            case 7:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n    return _handleImgUpload.apply(this, arguments);\n  }\n  var MODEL_HTTP_URL = \"api/pokeml/classify\";\n  var MODEL_INDEXEDDB_URL = \"indexeddb://poke-model\";\n  var getTopKPred = function getTopKPred(pred, k) {\n    var predIdx = [];\n    var predNames = [];\n    var topkPred = _toConsumableArray(pred).sort(function (a, b) {\n      return b - a;\n    }).slice(0, k);\n    // console.log(\"hh\");\n    console.log(topkPred);\n    topkPred.map(function (i) {\n      return predIdx.push(pred.indexOf(i));\n    });\n    console.log(\"k\");\n    console.log(predIdx);\n    // console.log(idx2class1)\n    predIdx.map(function (i) {\n      return predNames.push(idx2class1[i]);\n    });\n    // console.log(predNames);\n    return predNames;\n  };\n  var getTopKPredPokeObj = function getTopKPredPokeObj(pred, k) {\n    var predPokeName = getTopKPred(pred, k);\n    console.log(predPokeName);\n    return predPokeName;\n  };\n  useEffect(function () {\n    function fetchModel() {\n      return _fetchModel.apply(this, arguments);\n    }\n    function _fetchModel() {\n      _fetchModel = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var localClassifierModel, classifierModel;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                _context2.next = 3;\n                return tf.loadLayersModel(MODEL_INDEXEDDB_URL);\n              case 3:\n                localClassifierModel = _context2.sent;\n                setModel(localClassifierModel);\n                console.log(\"Model loaded from IndexedDB\");\n                _context2.next = 25;\n                break;\n              case 8:\n                _context2.prev = 8;\n                _context2.t0 = _context2[\"catch\"](0);\n                _context2.prev = 10;\n                _context2.next = 13;\n                return tf.loadLayersModel(MODEL_HTTP_URL);\n              case 13:\n                classifierModel = _context2.sent;\n                console.log(classifierModel);\n                setModel(classifierModel);\n                console.log(\"Model Loaded\");\n                _context2.next = 19;\n                return classifierModel.save(MODEL_INDEXEDDB_URL);\n              case 19:\n                console.log(\"Model saved to IndexedDB\");\n                _context2.next = 25;\n                break;\n              case 22:\n                _context2.prev = 22;\n                _context2.t1 = _context2[\"catch\"](10);\n                console.log(\"Unable to load model at all: \", _context2.t1);\n              case 25:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[0, 8], [10, 22]]);\n      }));\n      return _fetchModel.apply(this, arguments);\n    }\n    fetchModel();\n  }, []);\n  useEffect(function () {\n    function predict() {\n      return _predict.apply(this, arguments);\n    }\n    function _predict() {\n      _predict = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        var imageElement;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (imageLoaded && file) {\n                  imageElement = document.createElement(\"img\");\n                  imageElement.src = file;\n                  imageElement.onload = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n                    var tensor, y_pred, topkPredNames;\n                    return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n                      while (1) {\n                        switch (_context3.prev = _context3.next) {\n                          case 0:\n                            tensor = tf.browser.fromPixels(imageElement).resizeNearestNeighbor([120, 120]).toFloat().sub(127).div(127).expandDims();\n                            console.log(\"fuck\");\n                            _context3.next = 4;\n                            return model.predict(tensor).data();\n                          case 4:\n                            y_pred = _context3.sent;\n                            // console.log(y_pred);\n                            // console.log(pokemonState);\n                            topkPredNames = getTopKPredPokeObj(y_pred, 3); //   dispatch(setePredictions({ predictions: topkPredNames }));\n                            setPrediction(topkPredNames);\n                            createpoke(topkPredNames);\n                            console.log(topkPredNames);\n                            // console.log(\"hh\")\n                            console.log(\"-----------\");\n                            //   console.log(prediction);\n                            setProcessing(false);\n                            setImageLoaded(false);\n                            return _context3.abrupt(\"return\", topkPredNames);\n                          case 13:\n                          case \"end\":\n                            return _context3.stop();\n                        }\n                      }\n                    }, _callee3);\n                  }));\n                }\n              case 1:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n      return _predict.apply(this, arguments);\n    }\n    predict();\n  }, [imageLoaded, model, file]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"loginContainer\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 952,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"Form\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 953,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"upload-image\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 954,\n      columnNumber: 9\n    }\n  }, \"Upload image\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 955,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"image-selector\",\n    type: \"file\",\n    name: \"upload-image\",\n    accept: \"image/*\",\n    onChange: handleImgUpload,\n    disabled: !model || processing,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 956,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 963,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    onLoad: function onLoad() {\n      setImageLoaded(true);\n    },\n    alt: \"\",\n    src: file,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 964,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 972,\n      columnNumber: 7\n    }\n  }, processing ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 974,\n      columnNumber: 11\n    }\n  }, \"Loading ...\") : topkPredNames !== null ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 976,\n      columnNumber: 11\n    }\n  }, allpokemon && allpokemon.map(function (pokemonStats, index) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 978,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Thumb, {\n      key: index,\n      id: pokemonStats.id,\n      image: pokemonStats.sprites.other.dream_world.front_default,\n      name: pokemonStats.name,\n      type: pokemonStats.types[0].type.name,\n      base_experience: pokemonStats.base_experience,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 979,\n        columnNumber: 17\n      }\n    }));\n  })) : null));\n};\nexport default Upload;","map":{"version":3,"names":["tf","React","useState","useEffect","idx2class1","Upload","file","setFile","processing","setProcessing","topkPredNames","setPrediction","imageLoaded","setImageLoaded","allpokemon","setAllpoke","model","setModel","readImage","Promise","rs","rj","fileReader","FileReader","onload","result","onerror","error","readAsDataURL","createpoke","forEach","pokemon","fetch","name","res","json","data","console","log","currentList","handleImgUpload","event","files","target","_file","fileData","MODEL_HTTP_URL","MODEL_INDEXEDDB_URL","getTopKPred","pred","k","predIdx","predNames","topkPred","sort","a","b","slice","map","i","push","indexOf","getTopKPredPokeObj","predPokeName","fetchModel","loadLayersModel","localClassifierModel","classifierModel","save","predict","imageElement","document","createElement","src","tensor","browser","fromPixels","resizeNearestNeighbor","toFloat","sub","div","expandDims","y_pred","pokemonStats","index","id","sprites","other","dream_world","front_default","types","type","base_experience"],"sources":["C:/Users/Rohith/mern/frontend/src/screens/upload/Upload.js"],"sourcesContent":["import * as tf from \"@tensorflow/tfjs\";\r\nimport React, { useState, useEffect } from \"react\";\r\n// import NavBar from \"./Navbar.js\";\r\n//import \"./App.css\";\r\nconst idx2class1 = {\r\n  0: \"abomasnow\",\r\n  1: \"abra\",\r\n  2: \"absol\",\r\n  3: \"accelgor\",\r\n  4: \"aegislash-blade\",\r\n  5: \"aerodactyl\",\r\n  6: \"aggron\",\r\n  7: \"aipom\",\r\n  8: \"alakazam\",\r\n  9: \"alomomola\",\r\n  10: \"altaria\",\r\n  11: \"amaura\",\r\n  12: \"ambipom\",\r\n  13: \"amoonguss\",\r\n  14: \"ampharos\",\r\n  15: \"anorith\",\r\n  16: \"araquanid\",\r\n  17: \"arbok\",\r\n  18: \"arcanine\",\r\n  19: \"arceus\",\r\n  20: \"archen\",\r\n  21: \"archeops\",\r\n  22: \"ariados\",\r\n  23: \"armaldo\",\r\n  24: \"aromatisse\",\r\n  25: \"aron\",\r\n  26: \"articuno\",\r\n  27: \"audino\",\r\n  28: \"aurorus\",\r\n  29: \"avalugg\",\r\n  30: \"axew\",\r\n  31: \"azelf\",\r\n  32: \"azumarill\",\r\n  33: \"azurill\",\r\n  34: \"bagon\",\r\n  35: \"baltoy\",\r\n  36: \"banette\",\r\n  37: \"barbaracle\",\r\n  38: \"barboach\",\r\n  39: \"basculin-red-striped\",\r\n  40: \"bastiodon\",\r\n  41: \"bayleef\",\r\n  42: \"beartic\",\r\n  43: \"beautifly\",\r\n  44: \"beedrill\",\r\n  45: \"beheeyem\",\r\n  46: \"beldum\",\r\n  47: \"bellossom\",\r\n  48: \"bellsprout\",\r\n  49: \"bergmite\",\r\n  50: \"bewear\",\r\n  51: \"bibarel\",\r\n  52: \"bidoof\",\r\n  53: \"binacle\",\r\n  54: \"bisharp\",\r\n  55: \"blacephalon\",\r\n  56: \"blastoise\",\r\n  57: \"blaziken\",\r\n  58: \"blissey\",\r\n  59: \"blitzle\",\r\n  60: \"boldore\",\r\n  61: \"bonsly\",\r\n  62: \"bouffalant\",\r\n  63: \"bounsweet\",\r\n  64: \"braixen\",\r\n  65: \"braviary\",\r\n  66: \"breloom\",\r\n  67: \"brionne\",\r\n  68: \"bronzong\",\r\n  69: \"bronzor\",\r\n  70: \"bruxish\",\r\n  71: \"budew\",\r\n  72: \"buizel\",\r\n  73: \"bulbasaur\",\r\n  74: \"buneary\",\r\n  75: \"bunnelby\",\r\n  76: \"burmy\",\r\n  77: \"butterfree\",\r\n  78: \"buzzwole\",\r\n  79: \"cacnea\",\r\n  80: \"cacturne\",\r\n  81: \"camerupt\",\r\n  82: \"carbink\",\r\n  83: \"carnivine\",\r\n  84: \"carracosta\",\r\n  85: \"carvanha\",\r\n  86: \"cascoon\",\r\n  87: \"castform\",\r\n  88: \"caterpie\",\r\n  89: \"celebi\",\r\n  90: \"celesteela\",\r\n  91: \"chandelure\",\r\n  92: \"chansey\",\r\n  93: \"charizard\",\r\n  94: \"charjabug\",\r\n  95: \"charmander\",\r\n  96: \"charmeleon\",\r\n  97: \"chatot\",\r\n  98: \"cherrim\",\r\n  99: \"cherubi\",\r\n  100: \"chesnaught\",\r\n  101: \"chespin\",\r\n  102: \"chikorita\",\r\n  103: \"chimchar\",\r\n  104: \"chimecho\",\r\n  105: \"chinchou\",\r\n  106: \"chingling\",\r\n  107: \"cinccino\",\r\n  108: \"clamperl\",\r\n  109: \"clauncher\",\r\n  110: \"clawitzer\",\r\n  111: \"claydol\",\r\n  112: \"clefable\",\r\n  113: \"clefairy\",\r\n  114: \"cleffa\",\r\n  115: \"cloyster\",\r\n  116: \"cobalion\",\r\n  117: \"cofagrigus\",\r\n  118: \"combee\",\r\n  119: \"combusken\",\r\n  120: \"comfey\",\r\n  121: \"conkeldurr\",\r\n  122: \"corphish\",\r\n  123: \"corsola\",\r\n  124: \"cosmoem\",\r\n  125: \"cosmog\",\r\n  126: \"cottonee\",\r\n  127: \"crabominable\",\r\n  128: \"crabrawler\",\r\n  129: \"cradily\",\r\n  130: \"cranidos\",\r\n  131: \"crawdaunt\",\r\n  132: \"cresselia\",\r\n  133: \"croagunk\",\r\n  134: \"crobat\",\r\n  135: \"croconaw\",\r\n  136: \"crustle\",\r\n  137: \"cryogonal\",\r\n  138: \"cubchoo\",\r\n  139: \"cubone\",\r\n  140: \"cutiefly\",\r\n  141: \"cyndaquil\",\r\n  142: \"darkrai\",\r\n  143: \"darmanitan-standard\",\r\n  144: \"dartrix\",\r\n  145: \"darumaka\",\r\n  146: \"decidueye\",\r\n  147: \"dedenne\",\r\n  148: \"deerling\",\r\n  149: \"deino\",\r\n  150: \"delcatty\",\r\n  151: \"delibird\",\r\n  152: \"delphox\",\r\n  153: \"deoxys-normal\",\r\n  154: \"dewgong\",\r\n  155: \"dewott\",\r\n  156: \"dewpider\",\r\n  157: \"dhelmise\",\r\n  158: \"dialga\",\r\n  159: \"diancie\",\r\n  160: \"diggersby\",\r\n  161: \"diglett\",\r\n  162: \"ditto\",\r\n  163: \"dodrio\",\r\n  164: \"doduo\",\r\n  165: \"donphan\",\r\n  166: \"doublade\",\r\n  167: \"dragalge\",\r\n  168: \"dragonair\",\r\n  169: \"dragonite\",\r\n  170: \"drampa\",\r\n  171: \"drapion\",\r\n  172: \"dratini\",\r\n  173: \"drifblim\",\r\n  174: \"drifloon\",\r\n  175: \"drilbur\",\r\n  176: \"drowzee\",\r\n  177: \"druddigon\",\r\n  178: \"ducklett\",\r\n  179: \"dugtrio\",\r\n  180: \"dunsparce\",\r\n  181: \"duosion\",\r\n  182: \"durant\",\r\n  183: \"dusclops\",\r\n  184: \"dusknoir\",\r\n  185: \"duskull\",\r\n  186: \"dustox\",\r\n  187: \"dwebble\",\r\n  188: \"eelektrik\",\r\n  189: \"eelektross\",\r\n  190: \"eevee\",\r\n  191: \"ekans\",\r\n  192: \"electabuzz\",\r\n  193: \"electivire\",\r\n  194: \"electrike\",\r\n  195: \"electrode\",\r\n  196: \"elekid\",\r\n  197: \"elgyem\",\r\n  198: \"emboar\",\r\n  199: \"emolga\",\r\n  200: \"empoleon\",\r\n  201: \"entei\",\r\n  202: \"escavalier\",\r\n  203: \"espeon\",\r\n  204: \"espurr\",\r\n  205: \"excadrill\",\r\n  206: \"exeggcute\",\r\n  207: \"exeggutor\",\r\n  208: \"exploud\",\r\n  209: \"farfetchd\",\r\n  210: \"fearow\",\r\n  211: \"feebas\",\r\n  212: \"fennekin\",\r\n  213: \"feraligatr\",\r\n  214: \"ferroseed\",\r\n  215: \"ferrothorn\",\r\n  216: \"finneon\",\r\n  217: \"flaaffy\",\r\n  218: \"flabebe\",\r\n  219: \"flareon\",\r\n  220: \"fletchinder\",\r\n  221: \"fletchling\",\r\n  222: \"floatzel\",\r\n  223: \"floette\",\r\n  224: \"florges\",\r\n  225: \"flygon\",\r\n  226: \"fomantis\",\r\n  227: \"foongus\",\r\n  228: \"forretress\",\r\n  229: \"fraxure\",\r\n  230: \"frillish\",\r\n  231: \"froakie\",\r\n  232: \"frogadier\",\r\n  233: \"froslass\",\r\n  234: \"furfrou\",\r\n  235: \"furret\",\r\n  236: \"gabite\",\r\n  237: \"gallade\",\r\n  238: \"galvantula\",\r\n  239: \"garbodor\",\r\n  240: \"garchomp\",\r\n  241: \"gardevoir\",\r\n  242: \"gastly\",\r\n  243: \"gastrodon\",\r\n  244: \"genesect\",\r\n  245: \"gengar\",\r\n  246: \"geodude\",\r\n  247: \"gible\",\r\n  248: \"gigalith\",\r\n  249: \"girafarig\",\r\n  250: \"giratina-altered\",\r\n  251: \"glaceon\",\r\n  252: \"glalie\",\r\n  253: \"glameow\",\r\n  254: \"gligar\",\r\n  255: \"gliscor\",\r\n  256: \"gloom\",\r\n  257: \"gogoat\",\r\n  258: \"golbat\",\r\n  259: \"goldeen\",\r\n  260: \"golduck\",\r\n  261: \"golem\",\r\n  262: \"golett\",\r\n  263: \"golisopod\",\r\n  264: \"golurk\",\r\n  265: \"goodra\",\r\n  266: \"goomy\",\r\n  267: \"gorebyss\",\r\n  268: \"gothita\",\r\n  269: \"gothitelle\",\r\n  270: \"gothorita\",\r\n  271: \"gourgeist-average\",\r\n  272: \"granbull\",\r\n  273: \"graveler\",\r\n  274: \"greninja\",\r\n  275: \"grimer\",\r\n  276: \"grotle\",\r\n  277: \"groudon\",\r\n  278: \"grovyle\",\r\n  279: \"growlithe\",\r\n  280: \"grubbin\",\r\n  281: \"grumpig\",\r\n  282: \"gulpin\",\r\n  283: \"gumshoos\",\r\n  284: \"gurdurr\",\r\n  285: \"guzzlord\",\r\n  286: \"gyarados\",\r\n  287: \"hakamo-o\",\r\n  288: \"happiny\",\r\n  289: \"hariyama\",\r\n  290: \"haunter\",\r\n  291: \"hawlucha\",\r\n  292: \"haxorus\",\r\n  293: \"heatmor\",\r\n  294: \"heatran\",\r\n  295: \"heliolisk\",\r\n  296: \"helioptile\",\r\n  297: \"heracross\",\r\n  298: \"herdier\",\r\n  299: \"hippopotas\",\r\n  300: \"hippowdon\",\r\n  301: \"hitmonchan\",\r\n  302: \"hitmonlee\",\r\n  303: \"hitmontop\",\r\n  304: \"ho-oh\",\r\n  305: \"honchkrow\",\r\n  306: \"honedge\",\r\n  307: \"hoopa-confined\",\r\n  308: \"hoothoot\",\r\n  309: \"hoppip\",\r\n  310: \"horsea\",\r\n  311: \"houndoom\",\r\n  312: \"houndour\",\r\n  313: \"huntail\",\r\n  314: \"hydreigon\",\r\n  315: \"hypno\",\r\n  316: \"igglybuff\",\r\n  317: \"illumise\",\r\n  318: \"incineroar\",\r\n  319: \"infernape\",\r\n  320: \"inkay\",\r\n  321: \"ivysaur\",\r\n  322: \"jangmo-o\",\r\n  323: \"jellicent\",\r\n  324: \"jigglypuff\",\r\n  325: \"jirachi\",\r\n  326: \"jolteon\",\r\n  327: \"joltik\",\r\n  328: \"jumpluff\",\r\n  329: \"jynx\",\r\n  330: \"kabuto\",\r\n  331: \"kabutops\",\r\n  332: \"kadabra\",\r\n  333: \"kakuna\",\r\n  334: \"kangaskhan\",\r\n  335: \"karrablast\",\r\n  336: \"kartana\",\r\n  337: \"kecleon\",\r\n  338: \"keldeo-ordinary\",\r\n  339: \"kingdra\",\r\n  340: \"kingler\",\r\n  341: \"kirlia\",\r\n  342: \"klang\",\r\n  343: \"klefki\",\r\n  344: \"klink\",\r\n  345: \"klinklang\",\r\n  346: \"koffing\",\r\n  347: \"komala\",\r\n  348: \"kommo-o\",\r\n  349: \"krabby\",\r\n  350: \"kricketot\",\r\n  351: \"kricketune\",\r\n  352: \"krokorok\",\r\n  353: \"krookodile\",\r\n  354: \"kyogre\",\r\n  355: \"kyurem\",\r\n  356: \"lairon\",\r\n  357: \"lampent\",\r\n  358: \"landorus-incarnate\",\r\n  359: \"lanturn\",\r\n  360: \"lapras\",\r\n  361: \"larvesta\",\r\n  362: \"larvitar\",\r\n  363: \"latias\",\r\n  364: \"latios\",\r\n  365: \"leafeon\",\r\n  366: \"leavanny\",\r\n  367: \"ledian\",\r\n  368: \"ledyba\",\r\n  369: \"lickilicky\",\r\n  370: \"lickitung\",\r\n  371: \"liepard\",\r\n  372: \"lileep\",\r\n  373: \"lilligant\",\r\n  374: \"lillipup\",\r\n  375: \"linoone\",\r\n  376: \"litleo\",\r\n  377: \"litten\",\r\n  378: \"litwick\",\r\n  379: \"lombre\",\r\n  380: \"lopunny\",\r\n  381: \"lotad\",\r\n  382: \"loudred\",\r\n  383: \"lucario\",\r\n  384: \"ludicolo\",\r\n  385: \"lugia\",\r\n  386: \"lumineon\",\r\n  387: \"lunala\",\r\n  388: \"lunatone\",\r\n  389: \"lurantis\",\r\n  390: \"luvdisc\",\r\n  391: \"luxio\",\r\n  392: \"luxray\",\r\n  393: \"lycanroc-midday\",\r\n  394: \"machamp\",\r\n  395: \"machoke\",\r\n  396: \"machop\",\r\n  397: \"magby\",\r\n  398: \"magcargo\",\r\n  399: \"magearna\",\r\n  400: \"magikarp\",\r\n  401: \"magmar\",\r\n  402: \"magmortar\",\r\n  403: \"magnemite\",\r\n  404: \"magneton\",\r\n  405: \"magnezone\",\r\n  406: \"makuhita\",\r\n  407: \"malamar\",\r\n  408: \"mamoswine\",\r\n  409: \"manaphy\",\r\n  410: \"mandibuzz\",\r\n  411: \"manectric\",\r\n  412: \"mankey\",\r\n  413: \"mantine\",\r\n  414: \"mantyke\",\r\n  415: \"maractus\",\r\n  416: \"mareanie\",\r\n  417: \"mareep\",\r\n  418: \"marill\",\r\n  419: \"marowak\",\r\n  420: \"marshadow\",\r\n  421: \"marshtomp\",\r\n  422: \"masquerain\",\r\n  423: \"mawile\",\r\n  424: \"medicham\",\r\n  425: \"meditite\",\r\n  426: \"meganium\",\r\n  427: \"melmetal\",\r\n  428: \"meloetta-aria\",\r\n  429: \"meltan\",\r\n  430: \"meowstic-male\",\r\n  431: \"meowth\",\r\n  432: \"mesprit\",\r\n  433: \"metagross\",\r\n  434: \"metang\",\r\n  435: \"metapod\",\r\n  436: \"mew\",\r\n  437: \"mewtwo\",\r\n  438: \"mienfoo\",\r\n  439: \"mienshao\",\r\n  440: \"mightyena\",\r\n  441: \"milotic\",\r\n  442: \"miltank\",\r\n  443: \"mime-jr\",\r\n  444: \"mimikyu\",\r\n  445: \"minccino\",\r\n  446: \"minior-meteor\",\r\n  447: \"minun\",\r\n  448: \"misdreavus\",\r\n  449: \"mismagius\",\r\n  450: \"moltres\",\r\n  451: \"monferno\",\r\n  452: \"morelull\",\r\n  453: \"mothim\",\r\n  454: \"mr-mime\",\r\n  455: \"mudbray\",\r\n  456: \"mudkip\",\r\n  457: \"mudsdale\",\r\n  458: \"muk\",\r\n  459: \"munchlax\",\r\n  460: \"munna\",\r\n  461: \"murkrow\",\r\n  462: \"musharna\",\r\n  463: \"naganadel\",\r\n  464: \"natu\",\r\n  465: \"necrozma\",\r\n  466: \"nidoking\",\r\n  467: \"nidoqueen\",\r\n  468: \"nidoran-f\",\r\n  469: \"nidoran-m\",\r\n  470: \"nidorina\",\r\n  471: \"nidorino\",\r\n  472: \"nihilego\",\r\n  473: \"nincada\",\r\n  474: \"ninetales\",\r\n  475: \"ninjask\",\r\n  476: \"noctowl\",\r\n  477: \"noibat\",\r\n  478: \"noivern\",\r\n  479: \"nosepass\",\r\n  480: \"numel\",\r\n  481: \"nuzleaf\",\r\n  482: \"octillery\",\r\n  483: \"oddish\",\r\n  484: \"omanyte\",\r\n  485: \"omastar\",\r\n  486: \"onix\",\r\n  487: \"oranguru\",\r\n  488: \"oricorio-baile\",\r\n  489: \"oshawott\",\r\n  490: \"pachirisu\",\r\n  491: \"palkia\",\r\n  492: \"palossand\",\r\n  493: \"palpitoad\",\r\n  494: \"pancham\",\r\n  495: \"pangoro\",\r\n  496: \"panpour\",\r\n  497: \"pansage\",\r\n  498: \"pansear\",\r\n  499: \"paras\",\r\n  500: \"parasect\",\r\n  501: \"passimian\",\r\n  502: \"patrat\",\r\n  503: \"pawniard\",\r\n  504: \"pelipper\",\r\n  505: \"persian\",\r\n  506: \"petilil\",\r\n  507: \"phanpy\",\r\n  508: \"phantump\",\r\n  509: \"pheromosa\",\r\n  510: \"phione\",\r\n  511: \"pichu\",\r\n  512: \"pidgeot\",\r\n  513: \"pidgeotto\",\r\n  514: \"pidgey\",\r\n  515: \"pidove\",\r\n  516: \"pignite\",\r\n  517: \"pikachu\",\r\n  518: \"pikipek\",\r\n  519: \"piloswine\",\r\n  520: \"pineco\",\r\n  521: \"pinsir\",\r\n  522: \"piplup\",\r\n  523: \"plusle\",\r\n  524: \"poipole\",\r\n  525: \"politoed\",\r\n  526: \"poliwag\",\r\n  527: \"poliwhirl\",\r\n  528: \"poliwrath\",\r\n  529: \"ponyta\",\r\n  530: \"poochyena\",\r\n  531: \"popplio\",\r\n  532: \"porygon-z\",\r\n  533: \"porygon\",\r\n  534: \"porygon2\",\r\n  535: \"primarina\",\r\n  536: \"primeape\",\r\n  537: \"prinplup\",\r\n  538: \"probopass\",\r\n  539: \"psyduck\",\r\n  540: \"pumpkaboo-average\",\r\n  541: \"pupitar\",\r\n  542: \"purrloin\",\r\n  543: \"purugly\",\r\n  544: \"pyroar\",\r\n  545: \"pyukumuku\",\r\n  546: \"quagsire\",\r\n  547: \"quilava\",\r\n  548: \"quilladin\",\r\n  549: \"qwilfish\",\r\n  550: \"raichu\",\r\n  551: \"raikou\",\r\n  552: \"ralts\",\r\n  553: \"rampardos\",\r\n  554: \"rapidash\",\r\n  555: \"raticate\",\r\n  556: \"rattata\",\r\n  557: \"rayquaza\",\r\n  558: \"regice\",\r\n  559: \"regigigas\",\r\n  560: \"regirock\",\r\n  561: \"registeel\",\r\n  562: \"relicanth\",\r\n  563: \"remoraid\",\r\n  564: \"reshiram\",\r\n  565: \"reuniclus\",\r\n  566: \"rhydon\",\r\n  567: \"rhyhorn\",\r\n  568: \"rhyperior\",\r\n  569: \"ribombee\",\r\n  570: \"riolu\",\r\n  571: \"rockruff\",\r\n  572: \"roggenrola\",\r\n  573: \"roselia\",\r\n  574: \"roserade\",\r\n  575: \"rotom\",\r\n  576: \"rowlet\",\r\n  577: \"rufflet\",\r\n  578: \"sableye\",\r\n  579: \"salamence\",\r\n  580: \"salandit\",\r\n  581: \"salazzle\",\r\n  582: \"samurott\",\r\n  583: \"sandile\",\r\n  584: \"sandshrew\",\r\n  585: \"sandslash\",\r\n  586: \"sandygast\",\r\n  587: \"sawk\",\r\n  588: \"sawsbuck\",\r\n  589: \"scatterbug\",\r\n  590: \"sceptile\",\r\n  591: \"scizor\",\r\n  592: \"scolipede\",\r\n  593: \"scrafty\",\r\n  594: \"scraggy\",\r\n  595: \"scyther\",\r\n  596: \"seadra\",\r\n  597: \"seaking\",\r\n  598: \"sealeo\",\r\n  599: \"seedot\",\r\n  600: \"seel\",\r\n  601: \"seismitoad\",\r\n  602: \"sentret\",\r\n  603: \"serperior\",\r\n  604: \"servine\",\r\n  605: \"seviper\",\r\n  606: \"sewaddle\",\r\n  607: \"sharpedo\",\r\n  608: \"shaymin-land\",\r\n  609: \"shedinja\",\r\n  610: \"shelgon\",\r\n  611: \"shellder\",\r\n  612: \"shellos\",\r\n  613: \"shelmet\",\r\n  614: \"shieldon\",\r\n  615: \"shiftry\",\r\n  616: \"shiinotic\",\r\n  617: \"shinx\",\r\n  618: \"shroomish\",\r\n  619: \"shuckle\",\r\n  620: \"shuppet\",\r\n  621: \"sigilyph\",\r\n  622: \"silcoon\",\r\n  623: \"silvally\",\r\n  624: \"simipour\",\r\n  625: \"simisage\",\r\n  626: \"simisear\",\r\n  627: \"skarmory\",\r\n  628: \"skiddo\",\r\n  629: \"skiploom\",\r\n  630: \"skitty\",\r\n  631: \"skorupi\",\r\n  632: \"skrelp\",\r\n  633: \"skuntank\",\r\n  634: \"slaking\",\r\n  635: \"slakoth\",\r\n  636: \"sliggoo\",\r\n  637: \"slowbro\",\r\n  638: \"slowking\",\r\n  639: \"slowpoke\",\r\n  640: \"slugma\",\r\n  641: \"slurpuff\",\r\n  642: \"smeargle\",\r\n  643: \"smoochum\",\r\n  644: \"sneasel\",\r\n  645: \"snivy\",\r\n  646: \"snorlax\",\r\n  647: \"snorunt\",\r\n  648: \"snover\",\r\n  649: \"snubbull\",\r\n  650: \"solgaleo\",\r\n  651: \"solosis\",\r\n  652: \"solrock\",\r\n  653: \"spearow\",\r\n  654: \"spewpa\",\r\n  655: \"spheal\",\r\n  656: \"spinarak\",\r\n  657: \"spinda\",\r\n  658: \"spiritomb\",\r\n  659: \"spoink\",\r\n  660: \"spritzee\",\r\n  661: \"squirtle\",\r\n  662: \"stakataka\",\r\n  663: \"stantler\",\r\n  664: \"staraptor\",\r\n  665: \"staravia\",\r\n  666: \"starly\",\r\n  667: \"starmie\",\r\n  668: \"staryu\",\r\n  669: \"steelix\",\r\n  670: \"steenee\",\r\n  671: \"stoutland\",\r\n  672: \"stufful\",\r\n  673: \"stunfisk\",\r\n  674: \"stunky\",\r\n  675: \"sudowoodo\",\r\n  676: \"suicune\",\r\n  677: \"sunflora\",\r\n  678: \"sunkern\",\r\n  679: \"surskit\",\r\n  680: \"swablu\",\r\n  681: \"swadloon\",\r\n  682: \"swalot\",\r\n  683: \"swampert\",\r\n  684: \"swanna\",\r\n  685: \"swellow\",\r\n  686: \"swinub\",\r\n  687: \"swirlix\",\r\n  688: \"swoobat\",\r\n  689: \"sylveon\",\r\n  690: \"taillow\",\r\n  691: \"talonflame\",\r\n  692: \"tangela\",\r\n  693: \"tangrowth\",\r\n  694: \"tapu-bulu\",\r\n  695: \"tapu-fini\",\r\n  696: \"tapu-koko\",\r\n  697: \"tapu-lele\",\r\n  698: \"tauros\",\r\n  699: \"teddiursa\",\r\n  700: \"tentacool\",\r\n  701: \"tentacruel\",\r\n  702: \"tepig\",\r\n  703: \"terrakion\",\r\n  704: \"throh\",\r\n  705: \"thundurus-incarnate\",\r\n  706: \"timburr\",\r\n  707: \"tirtouga\",\r\n  708: \"togedemaru\",\r\n  709: \"togekiss\",\r\n  710: \"togepi\",\r\n  711: \"togetic\",\r\n  712: \"torchic\",\r\n  713: \"torkoal\",\r\n  714: \"tornadus-incarnate\",\r\n  715: \"torracat\",\r\n  716: \"torterra\",\r\n  717: \"totodile\",\r\n  718: \"toucannon\",\r\n  719: \"toxapex\",\r\n  720: \"toxicroak\",\r\n  721: \"tranquill\",\r\n  722: \"trapinch\",\r\n  723: \"treecko\",\r\n  724: \"trevenant\",\r\n  725: \"tropius\",\r\n  726: \"trubbish\",\r\n  727: \"trumbeak\",\r\n  728: \"tsareena\",\r\n  729: \"turtonator\",\r\n  730: \"turtwig\",\r\n  731: \"tympole\",\r\n  732: \"tynamo\",\r\n  733: \"type-null\",\r\n  734: \"typhlosion\",\r\n  735: \"tyranitar\",\r\n  736: \"tyrantrum\",\r\n  737: \"tyrogue\",\r\n  738: \"tyrunt\",\r\n  739: \"umbreon\",\r\n  740: \"unfezant\",\r\n  741: \"unown\",\r\n  742: \"ursaring\",\r\n  743: \"uxie\",\r\n  744: \"vanillish\",\r\n  745: \"vanillite\",\r\n  746: \"vanilluxe\",\r\n  747: \"vaporeon\",\r\n  748: \"venipede\",\r\n  749: \"venomoth\",\r\n  750: \"venonat\",\r\n  751: \"venusaur\",\r\n  752: \"vespiquen\",\r\n  753: \"vibrava\",\r\n  754: \"victini\",\r\n  755: \"victreebel\",\r\n  756: \"vigoroth\",\r\n  757: \"vikavolt\",\r\n  758: \"vileplume\",\r\n  759: \"virizion\",\r\n  760: \"vivillon\",\r\n  761: \"volbeat\",\r\n  762: \"volcanion\",\r\n  763: \"volcarona\",\r\n  764: \"voltorb\",\r\n  765: \"vullaby\",\r\n  766: \"vulpix\",\r\n  767: \"wailmer\",\r\n  768: \"wailord\",\r\n  769: \"walrein\",\r\n  770: \"wartortle\",\r\n  771: \"watchog\",\r\n  772: \"weavile\",\r\n  773: \"weedle\",\r\n  774: \"weepinbell\",\r\n  775: \"weezing\",\r\n  776: \"whimsicott\",\r\n  777: \"whirlipede\",\r\n  778: \"whiscash\",\r\n  779: \"whismur\",\r\n  780: \"wigglytuff\",\r\n  781: \"wimpod\",\r\n  782: \"wingull\",\r\n  783: \"wishiwashi-solo\",\r\n  784: \"wobbuffet\",\r\n  785: \"woobat\",\r\n  786: \"wooper\",\r\n  787: \"wormadam-plant\",\r\n  788: \"wurmple\",\r\n  789: \"wynaut\",\r\n  790: \"xatu\",\r\n  791: \"xerneas\",\r\n  792: \"xurkitree\",\r\n  793: \"yamask\",\r\n  794: \"yanma\",\r\n  795: \"yanmega\",\r\n  796: \"yungoos\",\r\n  797: \"yveltal\",\r\n  798: \"zangoose\",\r\n  799: \"zapdos\",\r\n  800: \"zebstrika\",\r\n  801: \"zekrom\",\r\n  802: \"zeraora\",\r\n  803: \"zigzagoon\",\r\n  804: \"zoroark\",\r\n  805: \"zorua\",\r\n  806: \"zubat\",\r\n  807: \"zweilous\",\r\n  808: \"zygarde-50\",\r\n};\r\nconst Upload = () => {\r\n  // usestate for setting a javascript\r\n  // object for storing and using data\r\n  const [file, setFile] = useState(null);\r\n  //   const [model, setModel] = useState(null);\r\n  const [processing, setProcessing] = useState(false);\r\n  const [topkPredNames, setPrediction] = useState(null);\r\n  const [imageLoaded, setImageLoaded] = useState(false);\r\n  const [allpokemon,setAllpoke]=useState([]);\r\n\r\n  const [model, setModel] = useState(null);\r\n  function readImage(file) {\r\n    return new Promise((rs, rj) => {\r\n      const fileReader = new FileReader();\r\n      fileReader.onload = () => rs(fileReader.result);\r\n      fileReader.onerror = () => rj(fileReader.error);\r\n      fileReader.readAsDataURL(file);\r\n    });\r\n  }\r\n  function createpoke (topkPredNames){\r\n    // console.log(result)\r\n    topkPredNames.forEach( async(pokemon) => {\r\n      const res=await fetch(`https://pokeapi.co/api/v2/pokemon/${pokemon.name}`)     \r\n      const data =await res.json()\r\n      console.log(\"lol\")\r\n      console.log(data);\r\n      // allpokemon.push(data)\r\n      setAllpoke(currentList=>[...currentList,data])\r\n      \r\n      // allpokemon.sort((a, b) => a.id - b.id)\r\n      console.log(\"lolol\")\r\n      console.log(allpokemon);\r\n    });\r\n  }\r\n  async function handleImgUpload(event) {\r\n    const {\r\n      target: { files },\r\n    } = event;\r\n\r\n    const _file = files[0];\r\n    const fileData = await readImage(_file);\r\n    setFile(fileData);\r\n    setProcessing(true);\r\n  }\r\n\r\n  const MODEL_HTTP_URL = \"api/pokeml/classify\";\r\n  const MODEL_INDEXEDDB_URL = \"indexeddb://poke-model\";\r\n\r\n  const getTopKPred = (pred, k) => {\r\n    const predIdx = [];\r\n    const predNames = [];\r\n\r\n    const topkPred = [...pred].sort((a, b) => b - a).slice(0, k);\r\n    // console.log(\"hh\");\r\n    console.log(topkPred);\r\n    topkPred.map((i) => predIdx.push(pred.indexOf(i)));\r\n    console.log(\"k\");\r\n    console.log(predIdx)\r\n    // console.log(idx2class1)\r\n    predIdx.map((i) => predNames.push(idx2class1[i]));\r\n    // console.log(predNames);\r\n    return predNames;\r\n  };\r\n\r\n  const getTopKPredPokeObj = (pred, k) => {\r\n    const predPokeName = getTopKPred(pred, k);\r\n    console.log(predPokeName);\r\n\r\n    return predPokeName;\r\n  };\r\n  useEffect(() => {\r\n    async function fetchModel() {\r\n      try {\r\n        const localClassifierModel = await tf.loadLayersModel(\r\n          MODEL_INDEXEDDB_URL\r\n        );\r\n\r\n        setModel(localClassifierModel);\r\n        console.log(\"Model loaded from IndexedDB\");\r\n      } catch (e) {\r\n        try {\r\n          const classifierModel = await tf.loadLayersModel(MODEL_HTTP_URL);\r\n\r\n          console.log(classifierModel);\r\n          setModel(classifierModel);\r\n          console.log(\"Model Loaded\");\r\n          await classifierModel.save(MODEL_INDEXEDDB_URL);\r\n          console.log(\"Model saved to IndexedDB\");\r\n        } catch (e) {\r\n          console.log(\"Unable to load model at all: \", e);\r\n        }\r\n      }\r\n    }\r\n    fetchModel();\r\n  }, []);\r\n  useEffect(() => {\r\n    async function predict() {\r\n      if (imageLoaded && file) {\r\n        const imageElement = document.createElement(\"img\");\r\n        imageElement.src = file;\r\n\r\n        imageElement.onload = async () => {\r\n          const tensor = tf.browser\r\n            .fromPixels(imageElement)\r\n            .resizeNearestNeighbor([120, 120])\r\n            .toFloat()\r\n            .sub(127)\r\n            .div(127)\r\n            .expandDims();\r\n\r\n          console.log(\"fuck\");\r\n          const y_pred = await model.predict(tensor).data();\r\n            // console.log(y_pred);\r\n          // console.log(pokemonState);\r\n\r\n          const topkPredNames = getTopKPredPokeObj(y_pred, 3);\r\n\r\n          //   dispatch(setePredictions({ predictions: topkPredNames }));\r\n          setPrediction(topkPredNames);\r\n          createpoke(topkPredNames);\r\n          console.log(topkPredNames);\r\n          // console.log(\"hh\")\r\n          console.log(\"-----------\");\r\n          //   console.log(prediction);\r\n          setProcessing(false);\r\n          setImageLoaded(false);\r\n          return topkPredNames;\r\n          //   setPrediction(parseInt(prediction, 10));\r\n        };\r\n      }\r\n    }\r\n\r\n    predict();\r\n  }, [imageLoaded, model, file]);\r\n\r\n  return (\r\n    <div className=\"loginContainer\">\r\n      <form className=\"Form\">\r\n        <label htmlFor=\"upload-image\">Upload image</label>\r\n        <br/>\r\n        <input id=\"image-selector\"\r\n          type=\"file\"\r\n          name=\"upload-image\"\r\n          accept=\"image/*\"\r\n          onChange={handleImgUpload}\r\n          disabled={!model || processing}/>\r\n      </form>\r\n      <div>\r\n        <img\r\n          onLoad={() => {\r\n            setImageLoaded(true);\r\n          }}\r\n          alt=\"\"\r\n          src={file}\r\n        />\r\n      </div>\r\n      <div>\r\n        {processing ? (\r\n          <p>Loading ...</p>\r\n        ) : topkPredNames !== null ? (\r\n          <div>\r\n            {allpokemon && allpokemon.map( (pokemonStats, index) => \r\n              <div>\r\n                <Thumb\r\n                key={index}\r\n                id={pokemonStats.id}\r\n                image={pokemonStats.sprites.other.dream_world.front_default}\r\n                name={pokemonStats.name}\r\n                type={pokemonStats.types[0].type.name}\r\n                base_experience={pokemonStats.base_experience}\r\n              />\r\n              </div>\r\n            )}\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Upload;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}