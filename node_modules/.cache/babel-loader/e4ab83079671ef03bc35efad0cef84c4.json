{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.pascalCase = exports.pascalCaseTransformMerge = exports.pascalCaseTransform = void 0;\n\nvar tslib_1 = require(\"tslib\");\n\nvar no_case_1 = require(\"no-case\");\n\nfunction pascalCaseTransform(input, index) {\n  var firstChar = input.charAt(0);\n  var lowerChars = input.substr(1).toLowerCase();\n\n  if (index > 0 && firstChar >= \"0\" && firstChar <= \"9\") {\n    return \"_\" + firstChar + lowerChars;\n  }\n\n  return \"\" + firstChar.toUpperCase() + lowerChars;\n}\n\nexports.pascalCaseTransform = pascalCaseTransform;\n\nfunction pascalCaseTransformMerge(input) {\n  return input.charAt(0).toUpperCase() + input.slice(1).toLowerCase();\n}\n\nexports.pascalCaseTransformMerge = pascalCaseTransformMerge;\n\nfunction pascalCase(input, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  return no_case_1.noCase(input, tslib_1.__assign({\n    delimiter: \"\",\n    transform: pascalCaseTransform\n  }, options));\n}\n\nexports.pascalCase = pascalCase;","map":{"version":3,"mappings":";;;;;;;;;AAAA;;AAIA,SAAgBA,mBAAhB,CAAoCC,KAApC,EAAmDC,KAAnD,EAAgE;EAC9D,IAAMC,SAAS,GAAGF,KAAK,CAACG,MAAN,CAAa,CAAb,CAAlB;EACA,IAAMC,UAAU,GAAGJ,KAAK,CAACK,MAAN,CAAa,CAAb,EAAgBC,WAAhB,EAAnB;;EACA,IAAIL,KAAK,GAAG,CAAR,IAAaC,SAAS,IAAI,GAA1B,IAAiCA,SAAS,IAAI,GAAlD,EAAuD;IACrD,OAAO,MAAIA,SAAJ,GAAgBE,UAAvB;EACD;;EACD,OAAO,KAAGF,SAAS,CAACK,WAAV,EAAH,GAA6BH,UAApC;AACD;;AAPDI;;AASA,SAAgBC,wBAAhB,CAAyCT,KAAzC,EAAsD;EACpD,OAAOA,KAAK,CAACG,MAAN,CAAa,CAAb,EAAgBI,WAAhB,KAAgCP,KAAK,CAACU,KAAN,CAAY,CAAZ,EAAeJ,WAAf,EAAvC;AACD;;AAFDE;;AAIA,SAAgBG,UAAhB,CAA2BX,KAA3B,EAA0CY,OAA1C,EAA+D;EAArB;IAAAA;EAAqB;;EAC7D,OAAOC,iBAAOb,KAAP,EAAYc;IACjBC,SAAS,EAAE,EADM;IAEjBC,SAAS,EAAEjB;EAFM,GAGda,OAHc,CAAZ,CAAP;AAKD;;AANDJ","names":["pascalCaseTransform","input","index","firstChar","charAt","lowerChars","substr","toLowerCase","toUpperCase","exports","pascalCaseTransformMerge","slice","pascalCase","options","no_case_1","tslib_1","delimiter","transform"],"sources":["C:\\Users\\Rohith\\mern\\frontend\\node_modules\\pascal-case\\src\\index.ts"],"sourcesContent":["import { noCase, Options } from \"no-case\";\n\nexport { Options };\n\nexport function pascalCaseTransform(input: string, index: number) {\n  const firstChar = input.charAt(0);\n  const lowerChars = input.substr(1).toLowerCase();\n  if (index > 0 && firstChar >= \"0\" && firstChar <= \"9\") {\n    return `_${firstChar}${lowerChars}`;\n  }\n  return `${firstChar.toUpperCase()}${lowerChars}`;\n}\n\nexport function pascalCaseTransformMerge(input: string) {\n  return input.charAt(0).toUpperCase() + input.slice(1).toLowerCase();\n}\n\nexport function pascalCase(input: string, options: Options = {}) {\n  return noCase(input, {\n    delimiter: \"\",\n    transform: pascalCaseTransform,\n    ...options,\n  });\n}\n"]},"metadata":{},"sourceType":"script"}