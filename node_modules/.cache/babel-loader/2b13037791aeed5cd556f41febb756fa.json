{"ast":null,"code":"'use strict';\n\nfunction createMap(values, ignoreCase) {\n  var map = {};\n  values.forEach(function (value) {\n    map[value] = 1;\n  });\n  return ignoreCase ? function (value) {\n    return map[value.toLowerCase()] === 1;\n  } : function (value) {\n    return map[value] === 1;\n  };\n}\n\nasync function replaceAsync(str, regex, asyncFn) {\n  const promises = [];\n  str.replace(regex, function (match) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    const promise = asyncFn(match, ...args);\n    promises.push(promise);\n  });\n  const data = await Promise.all(promises);\n  return str.replace(regex, () => data.shift());\n}\n\nexports.createMap = createMap;\n\nexports.createMapFromString = function (values, ignoreCase) {\n  return createMap(values.split(/,/), ignoreCase);\n};\n\nexports.replaceAsync = replaceAsync;","map":{"version":3,"names":["createMap","values","ignoreCase","map","forEach","value","toLowerCase","replaceAsync","str","regex","asyncFn","promises","replace","match","args","promise","push","data","Promise","all","shift","exports","createMapFromString","split"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/html-minifier-terser/src/utils.js"],"sourcesContent":["'use strict';\n\nfunction createMap(values, ignoreCase) {\n  var map = {};\n  values.forEach(function(value) {\n    map[value] = 1;\n  });\n  return ignoreCase ? function(value) {\n    return map[value.toLowerCase()] === 1;\n  } : function(value) {\n    return map[value] === 1;\n  };\n}\n\nasync function replaceAsync(str, regex, asyncFn) {\n  const promises = [];\n  str.replace(regex, (match, ...args) => {\n    const promise = asyncFn(match, ...args);\n    promises.push(promise);\n  });\n  const data = await Promise.all(promises);\n  return str.replace(regex, () => data.shift());\n}\n\n\nexports.createMap = createMap;\nexports.createMapFromString = function(values, ignoreCase) {\n  return createMap(values.split(/,/), ignoreCase);\n};\n\nexports.replaceAsync = replaceAsync;\n"],"mappings":"AAAA;;AAEA,SAASA,SAAT,CAAmBC,MAAnB,EAA2BC,UAA3B,EAAuC;EACrC,IAAIC,GAAG,GAAG,EAAV;EACAF,MAAM,CAACG,OAAP,CAAe,UAASC,KAAT,EAAgB;IAC7BF,GAAG,CAACE,KAAD,CAAH,GAAa,CAAb;EACD,CAFD;EAGA,OAAOH,UAAU,GAAG,UAASG,KAAT,EAAgB;IAClC,OAAOF,GAAG,CAACE,KAAK,CAACC,WAAN,EAAD,CAAH,KAA6B,CAApC;EACD,CAFgB,GAEb,UAASD,KAAT,EAAgB;IAClB,OAAOF,GAAG,CAACE,KAAD,CAAH,KAAe,CAAtB;EACD,CAJD;AAKD;;AAED,eAAeE,YAAf,CAA4BC,GAA5B,EAAiCC,KAAjC,EAAwCC,OAAxC,EAAiD;EAC/C,MAAMC,QAAQ,GAAG,EAAjB;EACAH,GAAG,CAACI,OAAJ,CAAYH,KAAZ,EAAmB,UAACI,KAAD,EAAoB;IAAA,kCAATC,IAAS;MAATA,IAAS;IAAA;;IACrC,MAAMC,OAAO,GAAGL,OAAO,CAACG,KAAD,EAAQ,GAAGC,IAAX,CAAvB;IACAH,QAAQ,CAACK,IAAT,CAAcD,OAAd;EACD,CAHD;EAIA,MAAME,IAAI,GAAG,MAAMC,OAAO,CAACC,GAAR,CAAYR,QAAZ,CAAnB;EACA,OAAOH,GAAG,CAACI,OAAJ,CAAYH,KAAZ,EAAmB,MAAMQ,IAAI,CAACG,KAAL,EAAzB,CAAP;AACD;;AAGDC,OAAO,CAACrB,SAAR,GAAoBA,SAApB;;AACAqB,OAAO,CAACC,mBAAR,GAA8B,UAASrB,MAAT,EAAiBC,UAAjB,EAA6B;EACzD,OAAOF,SAAS,CAACC,MAAM,CAACsB,KAAP,CAAa,GAAb,CAAD,EAAoBrB,UAApB,CAAhB;AACD,CAFD;;AAIAmB,OAAO,CAACd,YAAR,GAAuBA,YAAvB"},"metadata":{},"sourceType":"script"}