{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _utils = require(\"./utils\");\n\nfunction hasTests(node) {\n  return /^\\s*[xf]?(test|it|describe)(\\.\\w+|\\[['\"]\\w+['\"]\\])?\\s*\\(/mu.test(node.value);\n}\n\nvar _default = (0, _utils.createRule)({\n  name: __filename,\n  meta: {\n    docs: {\n      category: 'Best Practices',\n      description: 'Disallow commented out tests',\n      recommended: 'warn'\n    },\n    messages: {\n      commentedTests: 'Some tests seem to be commented'\n    },\n    schema: [],\n    type: 'suggestion'\n  },\n  defaultOptions: [],\n\n  create(context) {\n    const sourceCode = context.getSourceCode();\n\n    function checkNode(node) {\n      if (!hasTests(node)) {\n        return;\n      }\n\n      context.report({\n        messageId: 'commentedTests',\n        node\n      });\n    }\n\n    return {\n      Program() {\n        const comments = sourceCode.getAllComments();\n        comments.forEach(checkNode);\n      }\n\n    };\n  }\n\n});\n\nexports.default = _default;","map":{"version":3,"names":["Object","defineProperty","exports","value","default","_utils","require","hasTests","node","test","_default","createRule","name","__filename","meta","docs","category","description","recommended","messages","commentedTests","schema","type","defaultOptions","create","context","sourceCode","getSourceCode","checkNode","report","messageId","Program","comments","getAllComments","forEach"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/eslint-plugin-jest/lib/rules/no-commented-out-tests.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _utils = require(\"./utils\");\n\nfunction hasTests(node) {\n  return /^\\s*[xf]?(test|it|describe)(\\.\\w+|\\[['\"]\\w+['\"]\\])?\\s*\\(/mu.test(node.value);\n}\n\nvar _default = (0, _utils.createRule)({\n  name: __filename,\n  meta: {\n    docs: {\n      category: 'Best Practices',\n      description: 'Disallow commented out tests',\n      recommended: 'warn'\n    },\n    messages: {\n      commentedTests: 'Some tests seem to be commented'\n    },\n    schema: [],\n    type: 'suggestion'\n  },\n  defaultOptions: [],\n\n  create(context) {\n    const sourceCode = context.getSourceCode();\n\n    function checkNode(node) {\n      if (!hasTests(node)) {\n        return;\n      }\n\n      context.report({\n        messageId: 'commentedTests',\n        node\n      });\n    }\n\n    return {\n      Program() {\n        const comments = sourceCode.getAllComments();\n        comments.forEach(checkNode);\n      }\n\n    };\n  }\n\n});\n\nexports.default = _default;"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAC3CC,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAIC,MAAM,GAAGC,OAAO,CAAC,SAAD,CAApB;;AAEA,SAASC,QAAT,CAAkBC,IAAlB,EAAwB;EACtB,OAAO,6DAA6DC,IAA7D,CAAkED,IAAI,CAACL,KAAvE,CAAP;AACD;;AAED,IAAIO,QAAQ,GAAG,CAAC,GAAGL,MAAM,CAACM,UAAX,EAAuB;EACpCC,IAAI,EAAEC,UAD8B;EAEpCC,IAAI,EAAE;IACJC,IAAI,EAAE;MACJC,QAAQ,EAAE,gBADN;MAEJC,WAAW,EAAE,8BAFT;MAGJC,WAAW,EAAE;IAHT,CADF;IAMJC,QAAQ,EAAE;MACRC,cAAc,EAAE;IADR,CANN;IASJC,MAAM,EAAE,EATJ;IAUJC,IAAI,EAAE;EAVF,CAF8B;EAcpCC,cAAc,EAAE,EAdoB;;EAgBpCC,MAAM,CAACC,OAAD,EAAU;IACd,MAAMC,UAAU,GAAGD,OAAO,CAACE,aAAR,EAAnB;;IAEA,SAASC,SAAT,CAAmBpB,IAAnB,EAAyB;MACvB,IAAI,CAACD,QAAQ,CAACC,IAAD,CAAb,EAAqB;QACnB;MACD;;MAEDiB,OAAO,CAACI,MAAR,CAAe;QACbC,SAAS,EAAE,gBADE;QAEbtB;MAFa,CAAf;IAID;;IAED,OAAO;MACLuB,OAAO,GAAG;QACR,MAAMC,QAAQ,GAAGN,UAAU,CAACO,cAAX,EAAjB;QACAD,QAAQ,CAACE,OAAT,CAAiBN,SAAjB;MACD;;IAJI,CAAP;EAOD;;AArCmC,CAAvB,CAAf;;AAyCA1B,OAAO,CAACE,OAAR,GAAkBM,QAAlB"},"metadata":{},"sourceType":"script"}