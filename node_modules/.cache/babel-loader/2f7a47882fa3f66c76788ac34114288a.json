{"ast":null,"code":"var assert = require('assert');\n\nvar hpack = require('../');\n\ndescribe('hpack/encoder', function () {\n  var encoder;\n  beforeEach(function () {\n    encoder = hpack.encoder.create();\n  });\n\n  function expect(arr, enc) {\n    function isNumber(num) {\n      return typeof num === 'number';\n    }\n\n    var out = Buffer.concat(encoder.render()).toString('hex');\n\n    if (Array.isArray(arr) && !arr.every(isNumber)) {\n      arr = arr.map(function (item) {\n        return new Buffer(item, enc);\n      });\n      arr = Buffer.concat(arr);\n    } else {\n      arr = new Buffer(arr, enc);\n    }\n\n    var actual = arr.toString('hex');\n    assert.equal(out, actual);\n  }\n\n  describe('bit', function () {\n    it('should encode number bit-by-bit', function () {\n      [1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1].forEach(function (bit) {\n        encoder.encodeBit(bit);\n      });\n      expect([0b11101010, 0b10101111]);\n    });\n    it('should encode number using multiple bits', function () {\n      for (var i = 0; i < 8; i++) encoder.encodeBits(0b1011010, 7);\n\n      expect([0b10110101, 0b01101010, 0b11010101, 0b10101011, 0b01010110, 0b10101101, 0b01011010]);\n    });\n  });\n  describe('integer', function () {\n    it('should encode 10 in prefix-5 (C.1.1)', function () {\n      encoder.skipBits(3);\n      encoder.encodeInt(10);\n      expect([0x0a]);\n    });\n    it('should decode 1337 in prefix-5 (C.1.2)', function () {\n      encoder.skipBits(3);\n      encoder.encodeInt(1337);\n      expect([0b00011111, 0b10011010, 0b00001010]);\n    });\n    it('should decode 42 at octect boundary (C.1.3)', function () {\n      encoder.encodeInt(42);\n      expect([0b00101010]);\n    });\n    it('should regression 6-bit test', function () {\n      encoder.skipBits(2);\n      encoder.encodeInt(63);\n      expect([0b00111111, 0b00000000]);\n    });\n  });\n  describe('string', function () {\n    it('should encode literal from (C.2.1)', function () {\n      encoder.encodeStr(new Buffer('custom-key'), false);\n      expect([[0x0a], 'custom-key']);\n    });\n    it('should encode literal from (C.4.1)', function () {\n      encoder.encodeStr(new Buffer('www.example.com'), true);\n      expect('8c' + 'f1e3 c2e5 f23a 6ba0 ab90 f4ff'.replace(/ /g, ''), 'hex');\n    });\n    it('should decode literal from (C.4.2)', function () {\n      encoder.encodeStr(new Buffer('no-cache'), true);\n      expect('86' + 'a8eb 1064 9cbf'.replace(/ /g, ''), 'hex');\n    });\n    it('should encode literal from (C.4.3) #1', function () {\n      encoder.encodeStr(new Buffer('custom-key'), true);\n      expect('88' + '25a8 49e9 5ba9 7d7f'.replace(/ /g, ''), 'hex');\n    });\n    it('should encode literal from (C.4.3) #2', function () {\n      encoder.encodeStr(new Buffer('custom-value'), true);\n      expect('89' + '25a8 49e9 5bb8 e8b4 bf'.replace(/ /g, ''), 'hex');\n    });\n    it('should encode literal from (C.6.1) #1', function () {\n      encoder.encodeStr(new Buffer('Mon, 21 Oct 2013 20:13:21 GMT'), true);\n      expect(('96' + 'd07a be94 1054 d444 a820 0595 040b 8166' + 'e082 a62d 1bff').replace(/ /g, ''), 'hex');\n    });\n    it('should encode literal from (C.6.1) #2', function () {\n      encoder.encodeStr(new Buffer('https://www.example.com'), true);\n      expect(('91' + '9d29 ad17 1863 c78f 0b97 c8e9 ae82 ae43' + 'd3').replace(/ /g, ''), 'hex');\n    });\n    it('should encode many 5 bit chars', function () {\n      encoder.encodeStr(new Buffer('eeeeeeee'), true); // e = 00101, 0x294A5294A5 = 00101 x 8\n\n      expect('85294A5294A5', 'hex');\n    });\n    it('should encode many 5 bit chars with 3-bit EOS', function () {\n      // e = 00101, EOS=111,\n      // 0x294A5294A52F = 00101 x 9 + 111\n      encoder.encodeStr(new Buffer('eeeeeeeee'), true);\n      expect('86294A5294A52F', 'hex');\n    });\n    it('should decode many 5 bit chars with 2-bit EOS', function () {\n      // e = 00101, EOS=11,\n      // 0x294A5297 = 00101 x 6 + 11\n      encoder.encodeStr(new Buffer('eeeeee'), true);\n      expect('84294A5297', 'hex');\n    });\n    it('should decode many multi-octet chars', function () {\n      encoder.encodeStr([1, 1, 1, 1, 1, 1, 1, 1], true);\n      expect('97ffffb1ffff63fffec7fffd8ffffb1ffff63fffec7fffd8', 'hex');\n    });\n  });\n});","map":{"version":3,"names":["assert","require","hpack","describe","encoder","beforeEach","create","expect","arr","enc","isNumber","num","out","Buffer","concat","render","toString","Array","isArray","every","map","item","actual","equal","it","forEach","bit","encodeBit","i","encodeBits","skipBits","encodeInt","encodeStr","replace"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/hpack.js/test/encoder-test.js"],"sourcesContent":["var assert = require('assert');\nvar hpack = require('../');\n\ndescribe('hpack/encoder', function() {\n  var encoder;\n\n  beforeEach(function() {\n    encoder = hpack.encoder.create();\n  });\n\n  function expect(arr, enc) {\n    function isNumber(num) {\n      return typeof num === 'number';\n    }\n\n    var out = Buffer.concat(encoder.render()).toString('hex');\n    if (Array.isArray(arr) && !arr.every(isNumber)) {\n      arr = arr.map(function(item) {\n        return new Buffer(item, enc);\n      });\n      arr = Buffer.concat(arr);\n    } else {\n      arr = new Buffer(arr, enc);\n    }\n    var actual = arr.toString('hex');\n    assert.equal(out, actual);\n  }\n\n  describe('bit', function() {\n    it('should encode number bit-by-bit', function() {\n      [ 1, 1, 1, 0, 1, 0, 1, 0,\n        1, 0, 1, 0, 1, 1, 1, 1 ].forEach(function(bit) {\n        encoder.encodeBit(bit);\n      });\n      expect([\n        0b11101010,\n        0b10101111\n      ]);\n    });\n\n    it('should encode number using multiple bits', function() {\n      for (var i = 0; i < 8; i++)\n        encoder.encodeBits(0b1011010, 7);\n      expect([\n        0b10110101,\n        0b01101010,\n        0b11010101,\n        0b10101011,\n        0b01010110,\n        0b10101101,\n        0b01011010\n      ]);\n    });\n  });\n\n  describe('integer', function() {\n    it('should encode 10 in prefix-5 (C.1.1)', function() {\n      encoder.skipBits(3);\n      encoder.encodeInt(10);\n      expect([ 0x0a ]);\n    });\n\n    it('should decode 1337 in prefix-5 (C.1.2)', function() {\n      encoder.skipBits(3);\n      encoder.encodeInt(1337);\n      expect([\n        0b00011111,\n        0b10011010,\n        0b00001010\n      ]);\n    });\n\n    it('should decode 42 at octect boundary (C.1.3)', function() {\n      encoder.encodeInt(42);\n      expect([ 0b00101010 ]);\n    });\n\n    it('should regression 6-bit test', function() {\n      encoder.skipBits(2);\n      encoder.encodeInt(63);\n      expect([ 0b00111111, 0b00000000 ]);\n    });\n  });\n\n  describe('string', function() {\n    it('should encode literal from (C.2.1)', function() {\n      encoder.encodeStr(new Buffer('custom-key'), false);\n      expect([ [ 0x0a ], 'custom-key' ]);\n    });\n\n    it('should encode literal from (C.4.1)', function() {\n      encoder.encodeStr(new Buffer('www.example.com'), true);\n      expect('8c' +\n                 'f1e3 c2e5 f23a 6ba0 ab90 f4ff'.replace(/ /g, ''),\n             'hex');\n    });\n\n    it('should decode literal from (C.4.2)', function() {\n      encoder.encodeStr(new Buffer('no-cache'), true);\n      expect(\n        '86' +\n            'a8eb 1064 9cbf'.replace(/ /g, ''),\n        'hex');\n    });\n\n    it('should encode literal from (C.4.3) #1', function() {\n      encoder.encodeStr(new Buffer('custom-key'), true);\n      expect(\n        '88' +\n            '25a8 49e9 5ba9 7d7f'.replace(/ /g, ''),\n        'hex');\n    });\n\n    it('should encode literal from (C.4.3) #2', function() {\n      encoder.encodeStr(new Buffer('custom-value'), true);\n      expect(\n        '89' +\n            '25a8 49e9 5bb8 e8b4 bf'.replace(/ /g, ''),\n        'hex');\n    });\n\n    it('should encode literal from (C.6.1) #1', function() {\n      encoder.encodeStr(new Buffer('Mon, 21 Oct 2013 20:13:21 GMT'), true);\n      expect(\n        ('96' +\n            'd07a be94 1054 d444 a820 0595 040b 8166' +\n            'e082 a62d 1bff').replace(/ /g, ''),\n        'hex');\n    });\n\n    it('should encode literal from (C.6.1) #2', function() {\n      encoder.encodeStr(new Buffer('https://www.example.com'), true);\n      expect(\n        ('91' +\n            '9d29 ad17 1863 c78f 0b97 c8e9 ae82 ae43' +\n            'd3').replace(/ /g, ''),\n        'hex');\n    });\n\n    it('should encode many 5 bit chars', function() {\n      encoder.encodeStr(new Buffer('eeeeeeee'), true);\n      // e = 00101, 0x294A5294A5 = 00101 x 8\n      expect('85294A5294A5', 'hex');\n    });\n\n    it('should encode many 5 bit chars with 3-bit EOS', function() {\n      // e = 00101, EOS=111,\n      // 0x294A5294A52F = 00101 x 9 + 111\n      encoder.encodeStr(new Buffer('eeeeeeeee'), true);\n      expect('86294A5294A52F', 'hex');\n    });\n\n    it('should decode many 5 bit chars with 2-bit EOS', function() {\n      // e = 00101, EOS=11,\n      // 0x294A5297 = 00101 x 6 + 11\n      encoder.encodeStr(new Buffer('eeeeee'), true);\n      expect('84294A5297', 'hex');\n    });\n\n    it('should decode many multi-octet chars', function() {\n      encoder.encodeStr([ 1, 1, 1, 1, 1, 1, 1, 1 ], true);\n      expect('97ffffb1ffff63fffec7fffd8ffffb1ffff63fffec7fffd8',\n             'hex');\n    });\n  });\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}