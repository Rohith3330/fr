{"ast":null,"code":"/**\n * @fileoverview Utility functions for React pragma configuration\n * @author Yannick Croissant\n */\n'use strict';\n\nconst JSX_ANNOTATION_REGEX = /@jsx\\s+([^\\s]+)/; // Does not check for reserved keywords or unicode characters\n\nconst JS_IDENTIFIER_REGEX = /^[_$a-zA-Z][_$a-zA-Z0-9]*$/;\n/**\n * @param {Context} context\n * @returns {string}\n */\n\nfunction getCreateClassFromContext(context) {\n  let pragma = 'createReactClass'; // .eslintrc shared settings (https://eslint.org/docs/user-guide/configuring#adding-shared-settings)\n\n  if (context.settings.react && context.settings.react.createClass) {\n    pragma = context.settings.react.createClass;\n  }\n\n  if (!JS_IDENTIFIER_REGEX.test(pragma)) {\n    throw new Error(`createClass pragma ${pragma} is not a valid function name`);\n  }\n\n  return pragma;\n}\n/**\n * @param {Context} context\n * @returns {string}\n */\n\n\nfunction getFragmentFromContext(context) {\n  let pragma = 'Fragment'; // .eslintrc shared settings (https://eslint.org/docs/user-guide/configuring#adding-shared-settings)\n\n  if (context.settings.react && context.settings.react.fragment) {\n    pragma = context.settings.react.fragment;\n  }\n\n  if (!JS_IDENTIFIER_REGEX.test(pragma)) {\n    throw new Error(`Fragment pragma ${pragma} is not a valid identifier`);\n  }\n\n  return pragma;\n}\n/**\n * @param {Context} context\n * @returns {string}\n */\n\n\nfunction getFromContext(context) {\n  let pragma = 'React';\n  const sourceCode = context.getSourceCode();\n  const pragmaNode = sourceCode.getAllComments().find(node => JSX_ANNOTATION_REGEX.test(node.value));\n\n  if (pragmaNode) {\n    const matches = JSX_ANNOTATION_REGEX.exec(pragmaNode.value);\n    pragma = matches[1].split('.')[0]; // .eslintrc shared settings (https://eslint.org/docs/user-guide/configuring#adding-shared-settings)\n  } else if (context.settings.react && context.settings.react.pragma) {\n    pragma = context.settings.react.pragma;\n  }\n\n  if (!JS_IDENTIFIER_REGEX.test(pragma)) {\n    throw new Error(`React pragma ${pragma} is not a valid identifier`);\n  }\n\n  return pragma;\n}\n\nmodule.exports = {\n  getCreateClassFromContext,\n  getFragmentFromContext,\n  getFromContext\n};","map":{"version":3,"names":["JSX_ANNOTATION_REGEX","JS_IDENTIFIER_REGEX","getCreateClassFromContext","context","pragma","settings","react","createClass","test","Error","getFragmentFromContext","fragment","getFromContext","sourceCode","getSourceCode","pragmaNode","getAllComments","find","node","value","matches","exec","split","module","exports"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/eslint-plugin-react/lib/util/pragma.js"],"sourcesContent":["/**\n * @fileoverview Utility functions for React pragma configuration\n * @author Yannick Croissant\n */\n\n'use strict';\n\nconst JSX_ANNOTATION_REGEX = /@jsx\\s+([^\\s]+)/;\n// Does not check for reserved keywords or unicode characters\nconst JS_IDENTIFIER_REGEX = /^[_$a-zA-Z][_$a-zA-Z0-9]*$/;\n\n/**\n * @param {Context} context\n * @returns {string}\n */\nfunction getCreateClassFromContext(context) {\n  let pragma = 'createReactClass';\n  // .eslintrc shared settings (https://eslint.org/docs/user-guide/configuring#adding-shared-settings)\n  if (context.settings.react && context.settings.react.createClass) {\n    pragma = context.settings.react.createClass;\n  }\n  if (!JS_IDENTIFIER_REGEX.test(pragma)) {\n    throw new Error(`createClass pragma ${pragma} is not a valid function name`);\n  }\n  return pragma;\n}\n\n/**\n * @param {Context} context\n * @returns {string}\n */\nfunction getFragmentFromContext(context) {\n  let pragma = 'Fragment';\n  // .eslintrc shared settings (https://eslint.org/docs/user-guide/configuring#adding-shared-settings)\n  if (context.settings.react && context.settings.react.fragment) {\n    pragma = context.settings.react.fragment;\n  }\n  if (!JS_IDENTIFIER_REGEX.test(pragma)) {\n    throw new Error(`Fragment pragma ${pragma} is not a valid identifier`);\n  }\n  return pragma;\n}\n\n/**\n * @param {Context} context\n * @returns {string}\n */\nfunction getFromContext(context) {\n  let pragma = 'React';\n\n  const sourceCode = context.getSourceCode();\n  const pragmaNode = sourceCode.getAllComments().find((node) => JSX_ANNOTATION_REGEX.test(node.value));\n\n  if (pragmaNode) {\n    const matches = JSX_ANNOTATION_REGEX.exec(pragmaNode.value);\n    pragma = matches[1].split('.')[0];\n    // .eslintrc shared settings (https://eslint.org/docs/user-guide/configuring#adding-shared-settings)\n  } else if (context.settings.react && context.settings.react.pragma) {\n    pragma = context.settings.react.pragma;\n  }\n\n  if (!JS_IDENTIFIER_REGEX.test(pragma)) {\n    throw new Error(`React pragma ${pragma} is not a valid identifier`);\n  }\n  return pragma;\n}\n\nmodule.exports = {\n  getCreateClassFromContext,\n  getFragmentFromContext,\n  getFromContext,\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;;AAEA,MAAMA,oBAAoB,GAAG,iBAA7B,C,CACA;;AACA,MAAMC,mBAAmB,GAAG,4BAA5B;AAEA;AACA;AACA;AACA;;AACA,SAASC,yBAAT,CAAmCC,OAAnC,EAA4C;EAC1C,IAAIC,MAAM,GAAG,kBAAb,CAD0C,CAE1C;;EACA,IAAID,OAAO,CAACE,QAAR,CAAiBC,KAAjB,IAA0BH,OAAO,CAACE,QAAR,CAAiBC,KAAjB,CAAuBC,WAArD,EAAkE;IAChEH,MAAM,GAAGD,OAAO,CAACE,QAAR,CAAiBC,KAAjB,CAAuBC,WAAhC;EACD;;EACD,IAAI,CAACN,mBAAmB,CAACO,IAApB,CAAyBJ,MAAzB,CAAL,EAAuC;IACrC,MAAM,IAAIK,KAAJ,CAAW,sBAAqBL,MAAO,+BAAvC,CAAN;EACD;;EACD,OAAOA,MAAP;AACD;AAED;AACA;AACA;AACA;;;AACA,SAASM,sBAAT,CAAgCP,OAAhC,EAAyC;EACvC,IAAIC,MAAM,GAAG,UAAb,CADuC,CAEvC;;EACA,IAAID,OAAO,CAACE,QAAR,CAAiBC,KAAjB,IAA0BH,OAAO,CAACE,QAAR,CAAiBC,KAAjB,CAAuBK,QAArD,EAA+D;IAC7DP,MAAM,GAAGD,OAAO,CAACE,QAAR,CAAiBC,KAAjB,CAAuBK,QAAhC;EACD;;EACD,IAAI,CAACV,mBAAmB,CAACO,IAApB,CAAyBJ,MAAzB,CAAL,EAAuC;IACrC,MAAM,IAAIK,KAAJ,CAAW,mBAAkBL,MAAO,4BAApC,CAAN;EACD;;EACD,OAAOA,MAAP;AACD;AAED;AACA;AACA;AACA;;;AACA,SAASQ,cAAT,CAAwBT,OAAxB,EAAiC;EAC/B,IAAIC,MAAM,GAAG,OAAb;EAEA,MAAMS,UAAU,GAAGV,OAAO,CAACW,aAAR,EAAnB;EACA,MAAMC,UAAU,GAAGF,UAAU,CAACG,cAAX,GAA4BC,IAA5B,CAAkCC,IAAD,IAAUlB,oBAAoB,CAACQ,IAArB,CAA0BU,IAAI,CAACC,KAA/B,CAA3C,CAAnB;;EAEA,IAAIJ,UAAJ,EAAgB;IACd,MAAMK,OAAO,GAAGpB,oBAAoB,CAACqB,IAArB,CAA0BN,UAAU,CAACI,KAArC,CAAhB;IACAf,MAAM,GAAGgB,OAAO,CAAC,CAAD,CAAP,CAAWE,KAAX,CAAiB,GAAjB,EAAsB,CAAtB,CAAT,CAFc,CAGd;EACD,CAJD,MAIO,IAAInB,OAAO,CAACE,QAAR,CAAiBC,KAAjB,IAA0BH,OAAO,CAACE,QAAR,CAAiBC,KAAjB,CAAuBF,MAArD,EAA6D;IAClEA,MAAM,GAAGD,OAAO,CAACE,QAAR,CAAiBC,KAAjB,CAAuBF,MAAhC;EACD;;EAED,IAAI,CAACH,mBAAmB,CAACO,IAApB,CAAyBJ,MAAzB,CAAL,EAAuC;IACrC,MAAM,IAAIK,KAAJ,CAAW,gBAAeL,MAAO,4BAAjC,CAAN;EACD;;EACD,OAAOA,MAAP;AACD;;AAEDmB,MAAM,CAACC,OAAP,GAAiB;EACftB,yBADe;EAEfQ,sBAFe;EAGfE;AAHe,CAAjB"},"metadata":{},"sourceType":"script"}