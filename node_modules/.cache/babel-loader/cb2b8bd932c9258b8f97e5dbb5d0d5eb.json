{"ast":null,"code":"'use strict';\n\nvar callBound = require('call-bind/callBound');\n\nvar $SymbolValueOf = callBound('Symbol.prototype.valueOf', true);\n\nvar Type = require('./Type'); // https://262.ecma-international.org/9.0/#sec-thissymbolvalue\n\n\nmodule.exports = function thisSymbolValue(value) {\n  if (!$SymbolValueOf) {\n    throw new SyntaxError('Symbols are not supported; thisSymbolValue requires that `value` be a Symbol or a Symbol object');\n  }\n\n  if (Type(value) === 'Symbol') {\n    return value;\n  }\n\n  return $SymbolValueOf(value);\n};","map":{"version":3,"names":["callBound","require","$SymbolValueOf","Type","module","exports","thisSymbolValue","value","SyntaxError"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/es-abstract/2018/thisSymbolValue.js"],"sourcesContent":["'use strict';\n\nvar callBound = require('call-bind/callBound');\n\nvar $SymbolValueOf = callBound('Symbol.prototype.valueOf', true);\n\nvar Type = require('./Type');\n\n// https://262.ecma-international.org/9.0/#sec-thissymbolvalue\n\nmodule.exports = function thisSymbolValue(value) {\n\tif (!$SymbolValueOf) {\n\t\tthrow new SyntaxError('Symbols are not supported; thisSymbolValue requires that `value` be a Symbol or a Symbol object');\n\t}\n\tif (Type(value) === 'Symbol') {\n\t\treturn value;\n\t}\n\treturn $SymbolValueOf(value);\n};\n"],"mappings":"AAAA;;AAEA,IAAIA,SAAS,GAAGC,OAAO,CAAC,qBAAD,CAAvB;;AAEA,IAAIC,cAAc,GAAGF,SAAS,CAAC,0BAAD,EAA6B,IAA7B,CAA9B;;AAEA,IAAIG,IAAI,GAAGF,OAAO,CAAC,QAAD,CAAlB,C,CAEA;;;AAEAG,MAAM,CAACC,OAAP,GAAiB,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;EAChD,IAAI,CAACL,cAAL,EAAqB;IACpB,MAAM,IAAIM,WAAJ,CAAgB,iGAAhB,CAAN;EACA;;EACD,IAAIL,IAAI,CAACI,KAAD,CAAJ,KAAgB,QAApB,EAA8B;IAC7B,OAAOA,KAAP;EACA;;EACD,OAAOL,cAAc,CAACK,KAAD,CAArB;AACA,CARD"},"metadata":{},"sourceType":"script"}