{"ast":null,"code":"(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) : typeof define === 'function' && define.amd ? define(['exports'], factory) : (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.sdsl = {}));\n})(this, function (exports) {\n  'use strict';\n  /******************************************************************************\r\n  Copyright (c) Microsoft Corporation.\r\n    Permission to use, copy, modify, and/or distribute this software for any\r\n  purpose with or without fee is hereby granted.\r\n    THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\n  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\n  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\n  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\n  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\n  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\n  PERFORMANCE OF THIS SOFTWARE.\r\n  ***************************************************************************** */\n\n  /* global Reflect, Promise */\n\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  function __extends(d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  }\n\n  function __generator(thisArg, body) {\n    var _ = {\n      label: 0,\n      sent: function () {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n        f,\n        y,\n        t,\n        g;\n    return g = {\n      next: verb(0),\n      \"throw\": verb(1),\n      \"return\": verb(2)\n    }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n      return this;\n    }), g;\n\n    function verb(n) {\n      return function (v) {\n        return step([n, v]);\n      };\n    }\n\n    function step(op) {\n      if (f) throw new TypeError(\"Generator is already executing.\");\n\n      while (_) try {\n        if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n        if (y = 0, t) op = [op[0] & 2, t.value];\n\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n\n          case 4:\n            _.label++;\n            return {\n              value: op[1],\n              done: false\n            };\n\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n\n          case 7:\n            op = _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n\n            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n              break;\n            }\n\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n\n              _.ops.push(op);\n\n              break;\n            }\n\n            if (t[2]) _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n        }\n\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n\n      if (op[0] & 5) throw op[1];\n      return {\n        value: op[0] ? op[1] : void 0,\n        done: true\n      };\n    }\n  }\n\n  function __values(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator,\n        m = s && o[s],\n        i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n      next: function () {\n        if (o && i >= o.length) o = void 0;\n        return {\n          value: o && o[i++],\n          done: !o\n        };\n      }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n  }\n\n  function __read(o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o),\n        r,\n        ar = [],\n        e;\n\n    try {\n      while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    } catch (error) {\n      e = {\n        error: error\n      };\n    } finally {\n      try {\n        if (r && !r.done && (m = i[\"return\"])) m.call(i);\n      } finally {\n        if (e) throw e.error;\n      }\n    }\n\n    return ar;\n  }\n\n  function __spreadArray(to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n      if (ar || !(i in from)) {\n        if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n        ar[i] = from[i];\n      }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n  }\n\n  var ContainerIterator =\n  /** @class */\n  function () {\n    function ContainerIterator(iteratorType) {\n      if (iteratorType === void 0) {\n        iteratorType = ContainerIterator.NORMAL;\n      }\n\n      this.iteratorType = iteratorType;\n    }\n\n    ContainerIterator.NORMAL = false;\n    ContainerIterator.REVERSE = true;\n    return ContainerIterator;\n  }();\n\n  var Base =\n  /** @class */\n  function () {\n    function Base() {\n      /**\r\n       * @description Container's size.\r\n       * @protected\r\n       */\n      this.length = 0;\n    }\n    /**\r\n     * @return The size of the container.\r\n     */\n\n\n    Base.prototype.size = function () {\n      return this.length;\n    };\n    /**\r\n     * @return Boolean about if the container is empty.\r\n     */\n\n\n    Base.prototype.empty = function () {\n      return this.length === 0;\n    };\n\n    return Base;\n  }();\n\n  var Container =\n  /** @class */\n  function (_super) {\n    __extends(Container, _super);\n\n    function Container() {\n      return _super !== null && _super.apply(this, arguments) || this;\n    }\n\n    return Container;\n  }(Base);\n\n  var Stack =\n  /** @class */\n  function (_super) {\n    __extends(Stack, _super);\n\n    function Stack(container) {\n      if (container === void 0) {\n        container = [];\n      }\n\n      var _this = _super.call(this) || this;\n\n      _this.stack = [];\n      container.forEach(function (element) {\n        return _this.push(element);\n      });\n      return _this;\n    }\n\n    Stack.prototype.clear = function () {\n      this.length = 0;\n      this.stack.length = 0;\n    };\n    /**\r\n     * @description Insert element to stack's end.\r\n     */\n\n\n    Stack.prototype.push = function (element) {\n      this.stack.push(element);\n      this.length += 1;\n    };\n    /**\r\n     * @description Removes the end element.\r\n     */\n\n\n    Stack.prototype.pop = function () {\n      this.stack.pop();\n      if (this.length > 0) this.length -= 1;\n    };\n    /**\r\n     * @description Accesses the end element.\r\n     */\n\n\n    Stack.prototype.top = function () {\n      return this.stack[this.length - 1];\n    };\n\n    return Stack;\n  }(Base);\n\n  var SequentialContainer =\n  /** @class */\n  function (_super) {\n    __extends(SequentialContainer, _super);\n\n    function SequentialContainer() {\n      return _super !== null && _super.apply(this, arguments) || this;\n    }\n\n    return SequentialContainer;\n  }(Container);\n  /**\r\n   * @description Check if access is out of bounds.\r\n   * @param pos The position want to access.\r\n   * @param lower The lower bound.\r\n   * @param upper The upper bound.\r\n   * @return Boolean about if access is out of bounds.\r\n   */\n\n\n  function checkWithinAccessParams(pos, lower, upper) {\n    if (pos < lower || pos > upper) {\n      throw new RangeError();\n    }\n  }\n\n  var RandomIterator =\n  /** @class */\n  function (_super) {\n    __extends(RandomIterator, _super);\n\n    function RandomIterator(index, size, getElementByPos, setElementByPos, iteratorType) {\n      var _this = _super.call(this, iteratorType) || this;\n\n      _this.node = index;\n      _this.size = size;\n      _this.getElementByPos = getElementByPos;\n      _this.setElementByPos = setElementByPos;\n\n      if (_this.iteratorType === ContainerIterator.NORMAL) {\n        _this.pre = function () {\n          if (this.node === 0) {\n            throw new RangeError('Deque iterator access denied!');\n          }\n\n          this.node -= 1;\n          return this;\n        };\n\n        _this.next = function () {\n          if (this.node === this.size()) {\n            throw new RangeError('Deque Iterator access denied!');\n          }\n\n          this.node += 1;\n          return this;\n        };\n      } else {\n        _this.pre = function () {\n          if (this.node === this.size() - 1) {\n            throw new RangeError('Deque iterator access denied!');\n          }\n\n          this.node += 1;\n          return this;\n        };\n\n        _this.next = function () {\n          if (this.node === -1) {\n            throw new RangeError('Deque iterator access denied!');\n          }\n\n          this.node -= 1;\n          return this;\n        };\n      }\n\n      return _this;\n    }\n\n    Object.defineProperty(RandomIterator.prototype, \"pointer\", {\n      get: function () {\n        checkWithinAccessParams(this.node, 0, this.size() - 1);\n        return this.getElementByPos(this.node);\n      },\n      set: function (newValue) {\n        checkWithinAccessParams(this.node, 0, this.size() - 1);\n        this.setElementByPos(this.node, newValue);\n      },\n      enumerable: false,\n      configurable: true\n    });\n\n    RandomIterator.prototype.equals = function (obj) {\n      return this.node === obj.node;\n    };\n\n    return RandomIterator;\n  }(ContainerIterator);\n\n  var DequeIterator =\n  /** @class */\n  function (_super) {\n    __extends(DequeIterator, _super);\n\n    function DequeIterator() {\n      return _super !== null && _super.apply(this, arguments) || this;\n    }\n\n    DequeIterator.prototype.copy = function () {\n      return new DequeIterator(this.node, this.size, this.getElementByPos, this.setElementByPos, this.iteratorType);\n    };\n\n    return DequeIterator;\n  }(RandomIterator);\n\n  var Deque =\n  /** @class */\n  function (_super) {\n    __extends(Deque, _super);\n\n    function Deque(container, bucketSize) {\n      if (container === void 0) {\n        container = [];\n      }\n\n      if (bucketSize === void 0) {\n        bucketSize = 1 << 12;\n      }\n\n      var _this = _super.call(this) || this;\n\n      _this.first = 0;\n      _this.curFirst = 0;\n      _this.last = 0;\n      _this.curLast = 0;\n      _this.bucketNum = 0;\n      _this.map = [];\n\n      var _length;\n\n      if ('size' in container) {\n        if (typeof container.size === 'number') {\n          _length = container.size;\n        } else {\n          _length = container.size();\n        }\n      } else if ('length' in container) {\n        _length = container.length;\n      } else {\n        throw new RangeError('Can\\'t get container\\'s size!');\n      }\n\n      _this.bucketSize = bucketSize;\n      _this.bucketNum = Math.max(Math.ceil(_length / _this.bucketSize), 1);\n\n      for (var i = 0; i < _this.bucketNum; ++i) {\n        _this.map.push(new Array(_this.bucketSize));\n      }\n\n      var needBucketNum = Math.ceil(_length / _this.bucketSize);\n      _this.first = _this.last = (_this.bucketNum >> 1) - (needBucketNum >> 1);\n      _this.curFirst = _this.curLast = _this.bucketSize - _length % _this.bucketSize >> 1;\n      container.forEach(function (element) {\n        return _this.pushBack(element);\n      });\n      _this.size = _this.size.bind(_this);\n      _this.getElementByPos = _this.getElementByPos.bind(_this);\n      _this.setElementByPos = _this.setElementByPos.bind(_this);\n      return _this;\n    }\n    /**\r\n     * @description Growth the Deque.\r\n     * @private\r\n     */\n\n\n    Deque.prototype.reAllocate = function () {\n      var newMap = [];\n      var addBucketNum = Math.max(this.bucketNum >> 1, 1);\n\n      for (var i = 0; i < addBucketNum; ++i) {\n        newMap[i] = new Array(this.bucketSize);\n      }\n\n      for (var i = this.first; i < this.bucketNum; ++i) {\n        newMap[newMap.length] = this.map[i];\n      }\n\n      for (var i = 0; i < this.last; ++i) {\n        newMap[newMap.length] = this.map[i];\n      }\n\n      newMap[newMap.length] = __spreadArray([], __read(this.map[this.last]), false);\n      this.first = addBucketNum;\n      this.last = newMap.length - 1;\n\n      for (var i = 0; i < addBucketNum; ++i) {\n        newMap[newMap.length] = new Array(this.bucketSize);\n      }\n\n      this.map = newMap;\n      this.bucketNum = newMap.length;\n    };\n    /**\r\n     * @description Get the bucket position of the element and the pointer position by index.\r\n     * @param pos The element's index.\r\n     * @private\r\n     */\n\n\n    Deque.prototype.getElementIndex = function (pos) {\n      var offset = this.curFirst + pos + 1;\n      var offsetRemainder = offset % this.bucketSize;\n      var curNodePointerIndex = offsetRemainder - 1;\n      var curNodeBucketIndex = this.first + (offset - offsetRemainder) / this.bucketSize;\n      if (offsetRemainder === 0) curNodeBucketIndex -= 1;\n      curNodeBucketIndex %= this.bucketNum;\n      if (curNodePointerIndex < 0) curNodePointerIndex += this.bucketSize;\n      return {\n        curNodeBucketIndex: curNodeBucketIndex,\n        curNodePointerIndex: curNodePointerIndex\n      };\n    };\n\n    Deque.prototype.clear = function () {\n      this.map = [[]];\n      this.bucketNum = 1;\n      this.first = this.last = this.length = 0;\n      this.curFirst = this.curLast = this.bucketSize >> 1;\n    };\n\n    Deque.prototype.front = function () {\n      return this.map[this.first][this.curFirst];\n    };\n\n    Deque.prototype.back = function () {\n      return this.map[this.last][this.curLast];\n    };\n\n    Deque.prototype.begin = function () {\n      return new DequeIterator(0, this.size, this.getElementByPos, this.setElementByPos);\n    };\n\n    Deque.prototype.end = function () {\n      return new DequeIterator(this.length, this.size, this.getElementByPos, this.setElementByPos);\n    };\n\n    Deque.prototype.rBegin = function () {\n      return new DequeIterator(this.length - 1, this.size, this.getElementByPos, this.setElementByPos, ContainerIterator.REVERSE);\n    };\n\n    Deque.prototype.rEnd = function () {\n      return new DequeIterator(-1, this.size, this.getElementByPos, this.setElementByPos, ContainerIterator.REVERSE);\n    };\n\n    Deque.prototype.pushBack = function (element) {\n      if (this.length) {\n        if (this.curLast < this.bucketSize - 1) {\n          this.curLast += 1;\n        } else if (this.last < this.bucketNum - 1) {\n          this.last += 1;\n          this.curLast = 0;\n        } else {\n          this.last = 0;\n          this.curLast = 0;\n        }\n\n        if (this.last === this.first && this.curLast === this.curFirst) this.reAllocate();\n      }\n\n      this.length += 1;\n      this.map[this.last][this.curLast] = element;\n    };\n\n    Deque.prototype.popBack = function () {\n      if (!this.length) return;\n      this.map[this.last][this.curLast] = undefined;\n\n      if (this.length !== 1) {\n        if (this.curLast > 0) {\n          this.curLast -= 1;\n        } else if (this.last > 0) {\n          this.last -= 1;\n          this.curLast = this.bucketSize - 1;\n        } else {\n          this.last = this.bucketNum - 1;\n          this.curLast = this.bucketSize - 1;\n        }\n      }\n\n      this.length -= 1;\n    };\n    /**\r\n     * @description Push the element to the front.\r\n     * @param element The element you want to push.\r\n     */\n\n\n    Deque.prototype.pushFront = function (element) {\n      if (this.length) {\n        if (this.curFirst > 0) {\n          this.curFirst -= 1;\n        } else if (this.first > 0) {\n          this.first -= 1;\n          this.curFirst = this.bucketSize - 1;\n        } else {\n          this.first = this.bucketNum - 1;\n          this.curFirst = this.bucketSize - 1;\n        }\n\n        if (this.first === this.last && this.curFirst === this.curLast) this.reAllocate();\n      }\n\n      this.length += 1;\n      this.map[this.first][this.curFirst] = element;\n    };\n    /**\r\n     * @description Remove the first element.\r\n     */\n\n\n    Deque.prototype.popFront = function () {\n      if (!this.length) return;\n      this.map[this.first][this.curFirst] = undefined;\n\n      if (this.length !== 1) {\n        if (this.curFirst < this.bucketSize - 1) {\n          this.curFirst += 1;\n        } else if (this.first < this.bucketNum - 1) {\n          this.first += 1;\n          this.curFirst = 0;\n        } else {\n          this.first = 0;\n          this.curFirst = 0;\n        }\n      }\n\n      this.length -= 1;\n    };\n\n    Deque.prototype.forEach = function (callback) {\n      for (var i = 0; i < this.length; ++i) {\n        callback(this.getElementByPos(i), i);\n      }\n    };\n\n    Deque.prototype.getElementByPos = function (pos) {\n      checkWithinAccessParams(pos, 0, this.length - 1);\n\n      var _a = this.getElementIndex(pos),\n          curNodeBucketIndex = _a.curNodeBucketIndex,\n          curNodePointerIndex = _a.curNodePointerIndex;\n\n      return this.map[curNodeBucketIndex][curNodePointerIndex];\n    };\n\n    Deque.prototype.setElementByPos = function (pos, element) {\n      checkWithinAccessParams(pos, 0, this.length - 1);\n\n      var _a = this.getElementIndex(pos),\n          curNodeBucketIndex = _a.curNodeBucketIndex,\n          curNodePointerIndex = _a.curNodePointerIndex;\n\n      this.map[curNodeBucketIndex][curNodePointerIndex] = element;\n    };\n\n    Deque.prototype.insert = function (pos, element, num) {\n      if (num === void 0) {\n        num = 1;\n      }\n\n      checkWithinAccessParams(pos, 0, this.length);\n\n      if (pos === 0) {\n        while (num--) this.pushFront(element);\n      } else if (pos === this.length) {\n        while (num--) this.pushBack(element);\n      } else {\n        var arr = [];\n\n        for (var i = pos; i < this.length; ++i) {\n          arr.push(this.getElementByPos(i));\n        }\n\n        this.cut(pos - 1);\n\n        for (var i = 0; i < num; ++i) this.pushBack(element);\n\n        for (var i = 0; i < arr.length; ++i) this.pushBack(arr[i]);\n      }\n    };\n    /**\r\n     * @description Remove all elements after the specified position (excluding the specified position).\r\n     * @param pos The previous position of the first removed element.\r\n     * @example deque.cut(1); // Then deque's size will be 2. deque -> [0, 1]\r\n     */\n\n\n    Deque.prototype.cut = function (pos) {\n      if (pos < 0) {\n        this.clear();\n        return;\n      }\n\n      var _a = this.getElementIndex(pos),\n          curNodeBucketIndex = _a.curNodeBucketIndex,\n          curNodePointerIndex = _a.curNodePointerIndex;\n\n      this.last = curNodeBucketIndex;\n      this.curLast = curNodePointerIndex;\n      this.length = pos + 1;\n    };\n\n    Deque.prototype.eraseElementByPos = function (pos) {\n      var _this = this;\n\n      checkWithinAccessParams(pos, 0, this.length - 1);\n      if (pos === 0) this.popFront();else if (pos === this.length - 1) this.popBack();else {\n        var arr = [];\n\n        for (var i = pos + 1; i < this.length; ++i) {\n          arr.push(this.getElementByPos(i));\n        }\n\n        this.cut(pos);\n        this.popBack();\n        arr.forEach(function (element) {\n          return _this.pushBack(element);\n        });\n      }\n    };\n\n    Deque.prototype.eraseElementByValue = function (value) {\n      if (!this.length) return;\n      var arr = [];\n\n      for (var i = 0; i < this.length; ++i) {\n        var element = this.getElementByPos(i);\n        if (element !== value) arr.push(element);\n      }\n\n      var _length = arr.length;\n\n      for (var i = 0; i < _length; ++i) this.setElementByPos(i, arr[i]);\n\n      this.cut(_length - 1);\n    };\n\n    Deque.prototype.eraseElementByIterator = function (iter) {\n      // @ts-ignore\n      var node = iter.node;\n      this.eraseElementByPos(node);\n      iter = iter.next();\n      return iter;\n    };\n\n    Deque.prototype.find = function (element) {\n      for (var i = 0; i < this.length; ++i) {\n        if (this.getElementByPos(i) === element) {\n          return new DequeIterator(i, this.size, this.getElementByPos, this.setElementByPos);\n        }\n      }\n\n      return this.end();\n    };\n\n    Deque.prototype.reverse = function () {\n      var l = 0;\n      var r = this.length - 1;\n\n      while (l < r) {\n        var tmp = this.getElementByPos(l);\n        this.setElementByPos(l, this.getElementByPos(r));\n        this.setElementByPos(r, tmp);\n        l += 1;\n        r -= 1;\n      }\n    };\n\n    Deque.prototype.unique = function () {\n      if (this.length <= 1) return;\n      var index = 1;\n      var pre = this.getElementByPos(0);\n\n      for (var i = 1; i < this.length; ++i) {\n        var cur = this.getElementByPos(i);\n\n        if (cur !== pre) {\n          pre = cur;\n          this.setElementByPos(index++, cur);\n        }\n      }\n\n      while (this.length > index) this.popBack();\n    };\n\n    Deque.prototype.sort = function (cmp) {\n      var arr = [];\n\n      for (var i = 0; i < this.length; ++i) {\n        arr.push(this.getElementByPos(i));\n      }\n\n      arr.sort(cmp);\n\n      for (var i = 0; i < this.length; ++i) this.setElementByPos(i, arr[i]);\n    };\n    /**\r\n     * @description Remove as much useless space as possible.\r\n     */\n\n\n    Deque.prototype.shrinkToFit = function () {\n      if (!this.length) return;\n      var arr = [];\n      this.forEach(function (element) {\n        return arr.push(element);\n      });\n      this.bucketNum = Math.max(Math.ceil(this.length / this.bucketSize), 1);\n      this.length = this.first = this.last = this.curFirst = this.curLast = 0;\n      this.map = [];\n\n      for (var i = 0; i < this.bucketNum; ++i) {\n        this.map.push(new Array(this.bucketSize));\n      }\n\n      for (var i = 0; i < arr.length; ++i) this.pushBack(arr[i]);\n    };\n\n    Deque.prototype[Symbol.iterator] = function () {\n      return function () {\n        var i;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              i = 0;\n              _a.label = 1;\n\n            case 1:\n              if (!(i < this.length)) return [3\n              /*break*/\n              , 4];\n              return [4\n              /*yield*/\n              , this.getElementByPos(i)];\n\n            case 2:\n              _a.sent();\n\n              _a.label = 3;\n\n            case 3:\n              ++i;\n              return [3\n              /*break*/\n              , 1];\n\n            case 4:\n              return [2\n              /*return*/\n              ];\n          }\n        });\n      }.bind(this)();\n    };\n\n    return Deque;\n  }(SequentialContainer);\n\n  var Queue =\n  /** @class */\n  function (_super) {\n    __extends(Queue, _super);\n\n    function Queue(container) {\n      if (container === void 0) {\n        container = [];\n      }\n\n      var _this = _super.call(this) || this;\n\n      _this.queue = new Deque(container);\n      _this.length = _this.queue.size();\n      return _this;\n    }\n\n    Queue.prototype.clear = function () {\n      this.queue.clear();\n      this.length = 0;\n    };\n    /**\r\n     * @description Inserts element to queue's end.\r\n     */\n\n\n    Queue.prototype.push = function (element) {\n      this.queue.pushBack(element);\n      this.length += 1;\n    };\n    /**\r\n     * @description Removes the first element.\r\n     */\n\n\n    Queue.prototype.pop = function () {\n      this.queue.popFront();\n      if (this.length) this.length -= 1;\n    };\n    /**\r\n     * @description Access the first element.\r\n     */\n\n\n    Queue.prototype.front = function () {\n      return this.queue.front();\n    };\n\n    return Queue;\n  }(Base);\n\n  var PriorityQueue =\n  /** @class */\n  function (_super) {\n    __extends(PriorityQueue, _super);\n    /**\r\n     * @description PriorityQueue's constructor.\r\n     * @param container Initialize container, must have a forEach function.\r\n     * @param cmp Compare function.\r\n     * @param copy When the container is an array, you can choose to directly operate on the original object of\r\n     *             the array or perform a shallow copy. The default is shallow copy.\r\n     */\n\n\n    function PriorityQueue(container, cmp, copy) {\n      var _a;\n\n      if (container === void 0) {\n        container = [];\n      }\n\n      if (cmp === void 0) {\n        cmp = function (x, y) {\n          if (x > y) return -1;\n          if (x < y) return 1;\n          return 0;\n        };\n      }\n\n      if (copy === void 0) {\n        copy = true;\n      }\n\n      var _this = _super.call(this) || this;\n\n      _this.cmp = cmp;\n\n      if (Array.isArray(container)) {\n        _this.priorityQueue = copy ? __spreadArray([], __read(container), false) : container;\n      } else {\n        _this.priorityQueue = [];\n        container.forEach(function (element) {\n          return _this.priorityQueue.push(element);\n        });\n      }\n\n      _this.length = _this.priorityQueue.length;\n\n      for (var parent_1 = _this.length - 1 >> 1; parent_1 >= 0; --parent_1) {\n        var curParent = parent_1;\n        var curChild = curParent << 1 | 1;\n\n        while (curChild < _this.length) {\n          var left = curChild;\n          var right = left + 1;\n          var minChild = left;\n\n          if (right < _this.length && _this.cmp(_this.priorityQueue[left], _this.priorityQueue[right]) > 0) {\n            minChild = right;\n          }\n\n          if (_this.cmp(_this.priorityQueue[curParent], _this.priorityQueue[minChild]) <= 0) break;\n          _a = __read([_this.priorityQueue[minChild], _this.priorityQueue[curParent]], 2), _this.priorityQueue[curParent] = _a[0], _this.priorityQueue[minChild] = _a[1];\n          curParent = minChild;\n          curChild = curParent << 1 | 1;\n        }\n      }\n\n      return _this;\n    }\n    /**\r\n     * @description Adjusting parent's children to suit the nature of the heap.\r\n     * @param parent Parent's index.\r\n     * @private\r\n     */\n\n\n    PriorityQueue.prototype.adjust = function (parent) {\n      var _a, _b;\n\n      var left = parent << 1 | 1;\n      var right = (parent << 1) + 2;\n\n      if (left < this.length && this.cmp(this.priorityQueue[parent], this.priorityQueue[left]) > 0) {\n        _a = __read([this.priorityQueue[left], this.priorityQueue[parent]], 2), this.priorityQueue[parent] = _a[0], this.priorityQueue[left] = _a[1];\n      }\n\n      if (right < this.length && this.cmp(this.priorityQueue[parent], this.priorityQueue[right]) > 0) {\n        _b = __read([this.priorityQueue[right], this.priorityQueue[parent]], 2), this.priorityQueue[parent] = _b[0], this.priorityQueue[right] = _b[1];\n      }\n    };\n\n    PriorityQueue.prototype.clear = function () {\n      this.length = 0;\n      this.priorityQueue.length = 0;\n    };\n    /**\r\n     * @description Push element into a container in order.\r\n     * @param element The element you want to push.\r\n     */\n\n\n    PriorityQueue.prototype.push = function (element) {\n      this.priorityQueue.push(element);\n      this.length += 1;\n      if (this.length === 1) return;\n      var curNode = this.length - 1;\n\n      while (curNode > 0) {\n        var parent_2 = curNode - 1 >> 1;\n        if (this.cmp(this.priorityQueue[parent_2], element) <= 0) break;\n        this.adjust(parent_2);\n        curNode = parent_2;\n      }\n    };\n    /**\r\n     * @description Removes the top element.\r\n     */\n\n\n    PriorityQueue.prototype.pop = function () {\n      if (!this.length) return;\n      var last = this.priorityQueue[this.length - 1];\n      this.length -= 1;\n      var parent = 0;\n\n      while (parent < this.length) {\n        var left = parent << 1 | 1;\n        var right = (parent << 1) + 2;\n        if (left >= this.length) break;\n        var minChild = left;\n\n        if (right < this.length && this.cmp(this.priorityQueue[left], this.priorityQueue[right]) > 0) {\n          minChild = right;\n        }\n\n        if (this.cmp(this.priorityQueue[minChild], last) >= 0) break;\n        this.priorityQueue[parent] = this.priorityQueue[minChild];\n        parent = minChild;\n      }\n\n      this.priorityQueue[parent] = last;\n      this.priorityQueue.pop();\n    };\n    /**\r\n     * @description Accesses the top element.\r\n     */\n\n\n    PriorityQueue.prototype.top = function () {\n      return this.priorityQueue[0];\n    };\n\n    return PriorityQueue;\n  }(Base);\n\n  var VectorIterator =\n  /** @class */\n  function (_super) {\n    __extends(VectorIterator, _super);\n\n    function VectorIterator() {\n      return _super !== null && _super.apply(this, arguments) || this;\n    }\n\n    VectorIterator.prototype.copy = function () {\n      return new VectorIterator(this.node, this.size, this.getElementByPos, this.setElementByPos, this.iteratorType);\n    };\n\n    return VectorIterator;\n  }(RandomIterator);\n\n  var Vector =\n  /** @class */\n  function (_super) {\n    __extends(Vector, _super);\n    /**\r\n     * @description Vector's constructor.\r\n     * @param container Initialize container, must have a forEach function.\r\n     * @param copy When the container is an array, you can choose to directly operate on the original object of\r\n     *             the array or perform a shallow copy. The default is shallow copy.\r\n     */\n\n\n    function Vector(container, copy) {\n      if (container === void 0) {\n        container = [];\n      }\n\n      if (copy === void 0) {\n        copy = true;\n      }\n\n      var _this = _super.call(this) || this;\n\n      if (Array.isArray(container)) {\n        _this.vector = copy ? __spreadArray([], __read(container), false) : container;\n        _this.length = container.length;\n      } else {\n        _this.vector = [];\n        container.forEach(function (element) {\n          return _this.pushBack(element);\n        });\n      }\n\n      _this.size = _this.size.bind(_this);\n      _this.getElementByPos = _this.getElementByPos.bind(_this);\n      _this.setElementByPos = _this.setElementByPos.bind(_this);\n      return _this;\n    }\n\n    Vector.prototype.clear = function () {\n      this.length = 0;\n      this.vector.length = 0;\n    };\n\n    Vector.prototype.begin = function () {\n      return new VectorIterator(0, this.size, this.getElementByPos, this.setElementByPos);\n    };\n\n    Vector.prototype.end = function () {\n      return new VectorIterator(this.length, this.size, this.getElementByPos, this.setElementByPos);\n    };\n\n    Vector.prototype.rBegin = function () {\n      return new VectorIterator(this.length - 1, this.size, this.getElementByPos, this.setElementByPos, ContainerIterator.REVERSE);\n    };\n\n    Vector.prototype.rEnd = function () {\n      return new VectorIterator(-1, this.size, this.getElementByPos, this.setElementByPos, ContainerIterator.REVERSE);\n    };\n\n    Vector.prototype.front = function () {\n      return this.vector[0];\n    };\n\n    Vector.prototype.back = function () {\n      return this.vector[this.length - 1];\n    };\n\n    Vector.prototype.forEach = function (callback) {\n      for (var i = 0; i < this.length; ++i) {\n        callback(this.vector[i], i);\n      }\n    };\n\n    Vector.prototype.getElementByPos = function (pos) {\n      checkWithinAccessParams(pos, 0, this.length - 1);\n      return this.vector[pos];\n    };\n\n    Vector.prototype.eraseElementByPos = function (pos) {\n      checkWithinAccessParams(pos, 0, this.length - 1);\n      this.vector.splice(pos, 1);\n      this.length -= 1;\n    };\n\n    Vector.prototype.eraseElementByValue = function (value) {\n      var index = 0;\n\n      for (var i = 0; i < this.length; ++i) {\n        if (this.vector[i] !== value) {\n          this.vector[index++] = this.vector[i];\n        }\n      }\n\n      this.length = this.vector.length = index;\n    };\n\n    Vector.prototype.eraseElementByIterator = function (iter) {\n      // @ts-ignore\n      var node = iter.node;\n      iter = iter.next();\n      this.eraseElementByPos(node);\n      return iter;\n    };\n\n    Vector.prototype.pushBack = function (element) {\n      this.vector.push(element);\n      this.length += 1;\n    };\n\n    Vector.prototype.popBack = function () {\n      if (!this.length) return;\n      this.vector.pop();\n      this.length -= 1;\n    };\n\n    Vector.prototype.setElementByPos = function (pos, element) {\n      checkWithinAccessParams(pos, 0, this.length - 1);\n      this.vector[pos] = element;\n    };\n\n    Vector.prototype.insert = function (pos, element, num) {\n      var _a;\n\n      if (num === void 0) {\n        num = 1;\n      }\n\n      checkWithinAccessParams(pos, 0, this.length);\n\n      (_a = this.vector).splice.apply(_a, __spreadArray([pos, 0], __read(new Array(num).fill(element)), false));\n\n      this.length += num;\n    };\n\n    Vector.prototype.find = function (element) {\n      for (var i = 0; i < this.length; ++i) {\n        if (this.vector[i] === element) {\n          return new VectorIterator(i, this.size, this.getElementByPos, this.getElementByPos);\n        }\n      }\n\n      return this.end();\n    };\n\n    Vector.prototype.reverse = function () {\n      this.vector.reverse();\n    };\n\n    Vector.prototype.unique = function () {\n      var index = 1;\n\n      for (var i = 1; i < this.length; ++i) {\n        if (this.vector[i] !== this.vector[i - 1]) {\n          this.vector[index++] = this.vector[i];\n        }\n      }\n\n      this.length = this.vector.length = index;\n    };\n\n    Vector.prototype.sort = function (cmp) {\n      this.vector.sort(cmp);\n    };\n\n    Vector.prototype[Symbol.iterator] = function () {\n      return function () {\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [5\n              /*yield**/\n              , __values(this.vector)];\n\n            case 1:\n              return [2\n              /*return*/\n              , _a.sent()];\n          }\n        });\n      }.bind(this)();\n    };\n\n    return Vector;\n  }(SequentialContainer);\n\n  var LinkNode =\n  /** @class */\n  function () {\n    function LinkNode(element) {\n      this.value = undefined;\n      this.pre = undefined;\n      this.next = undefined;\n      this.value = element;\n    }\n\n    return LinkNode;\n  }();\n\n  var LinkListIterator =\n  /** @class */\n  function (_super) {\n    __extends(LinkListIterator, _super);\n\n    function LinkListIterator(node, header, iteratorType) {\n      var _this = _super.call(this, iteratorType) || this;\n\n      _this.node = node;\n      _this.header = header;\n\n      if (_this.iteratorType === ContainerIterator.NORMAL) {\n        _this.pre = function () {\n          if (this.node.pre === this.header) {\n            throw new RangeError('LinkList iterator access denied!');\n          }\n\n          this.node = this.node.pre;\n          return this;\n        };\n\n        _this.next = function () {\n          if (this.node === this.header) {\n            throw new RangeError('LinkList iterator access denied!');\n          }\n\n          this.node = this.node.next;\n          return this;\n        };\n      } else {\n        _this.pre = function () {\n          if (this.node.next === this.header) {\n            throw new RangeError('LinkList iterator access denied!');\n          }\n\n          this.node = this.node.next;\n          return this;\n        };\n\n        _this.next = function () {\n          if (this.node === this.header) {\n            throw new RangeError('LinkList iterator access denied!');\n          }\n\n          this.node = this.node.pre;\n          return this;\n        };\n      }\n\n      return _this;\n    }\n\n    Object.defineProperty(LinkListIterator.prototype, \"pointer\", {\n      get: function () {\n        if (this.node === this.header) {\n          throw new RangeError('LinkList iterator access denied!');\n        }\n\n        return this.node.value;\n      },\n      set: function (newValue) {\n        if (this.node === this.header) {\n          throw new RangeError('LinkList iterator access denied!');\n        }\n\n        this.node.value = newValue;\n      },\n      enumerable: false,\n      configurable: true\n    });\n\n    LinkListIterator.prototype.equals = function (obj) {\n      return this.node === obj.node;\n    };\n\n    LinkListIterator.prototype.copy = function () {\n      return new LinkListIterator(this.node, this.header, this.iteratorType);\n    };\n\n    return LinkListIterator;\n  }(ContainerIterator);\n\n  var LinkList =\n  /** @class */\n  function (_super) {\n    __extends(LinkList, _super);\n\n    function LinkList(container) {\n      if (container === void 0) {\n        container = [];\n      }\n\n      var _this = _super.call(this) || this;\n\n      _this.header = new LinkNode();\n      _this.head = undefined;\n      _this.tail = undefined;\n      container.forEach(function (element) {\n        return _this.pushBack(element);\n      });\n      return _this;\n    }\n\n    LinkList.prototype.clear = function () {\n      this.length = 0;\n      this.head = this.tail = undefined;\n      this.header.pre = this.header.next = undefined;\n    };\n\n    LinkList.prototype.begin = function () {\n      return new LinkListIterator(this.head || this.header, this.header);\n    };\n\n    LinkList.prototype.end = function () {\n      return new LinkListIterator(this.header, this.header);\n    };\n\n    LinkList.prototype.rBegin = function () {\n      return new LinkListIterator(this.tail || this.header, this.header, ContainerIterator.REVERSE);\n    };\n\n    LinkList.prototype.rEnd = function () {\n      return new LinkListIterator(this.header, this.header, ContainerIterator.REVERSE);\n    };\n\n    LinkList.prototype.front = function () {\n      return this.head ? this.head.value : undefined;\n    };\n\n    LinkList.prototype.back = function () {\n      return this.tail ? this.tail.value : undefined;\n    };\n\n    LinkList.prototype.forEach = function (callback) {\n      if (!this.length) return;\n      var curNode = this.head;\n      var index = 0;\n\n      while (curNode !== this.header) {\n        callback(curNode.value, index++);\n        curNode = curNode.next;\n      }\n    };\n\n    LinkList.prototype.getElementByPos = function (pos) {\n      checkWithinAccessParams(pos, 0, this.length - 1);\n      var curNode = this.head;\n\n      while (pos--) {\n        curNode = curNode.next;\n      }\n\n      return curNode.value;\n    };\n\n    LinkList.prototype.eraseElementByPos = function (pos) {\n      checkWithinAccessParams(pos, 0, this.length - 1);\n      if (pos === 0) this.popFront();else if (pos === this.length - 1) this.popBack();else {\n        var curNode = this.head;\n\n        while (pos--) {\n          curNode = curNode.next;\n        }\n\n        curNode = curNode;\n        var pre = curNode.pre;\n        var next = curNode.next;\n        next.pre = pre;\n        pre.next = next;\n        this.length -= 1;\n      }\n    };\n\n    LinkList.prototype.eraseElementByValue = function (value) {\n      while (this.head && this.head.value === value) this.popFront();\n\n      while (this.tail && this.tail.value === value) this.popBack();\n\n      if (!this.head) return;\n      var curNode = this.head;\n\n      while (curNode !== this.header) {\n        if (curNode.value === value) {\n          var pre = curNode.pre;\n          var next = curNode.next;\n          if (next) next.pre = pre;\n          if (pre) pre.next = next;\n          this.length -= 1;\n        }\n\n        curNode = curNode.next;\n      }\n    };\n\n    LinkList.prototype.eraseElementByIterator = function (iter) {\n      // @ts-ignore\n      var node = iter.node;\n\n      if (node === this.header) {\n        throw new RangeError('Invalid iterator');\n      }\n\n      iter = iter.next();\n      if (this.head === node) this.popFront();else if (this.tail === node) this.popBack();else {\n        var pre = node.pre;\n        var next = node.next;\n        if (next) next.pre = pre;\n        if (pre) pre.next = next;\n        this.length -= 1;\n      }\n      return iter;\n    };\n\n    LinkList.prototype.pushBack = function (element) {\n      this.length += 1;\n      var newTail = new LinkNode(element);\n\n      if (!this.tail) {\n        this.head = this.tail = newTail;\n        this.header.next = this.head;\n        this.head.pre = this.header;\n      } else {\n        this.tail.next = newTail;\n        newTail.pre = this.tail;\n        this.tail = newTail;\n      }\n\n      this.tail.next = this.header;\n      this.header.pre = this.tail;\n    };\n\n    LinkList.prototype.popBack = function () {\n      if (!this.tail) return;\n      this.length -= 1;\n\n      if (this.head === this.tail) {\n        this.head = this.tail = undefined;\n        this.header.next = undefined;\n      } else {\n        this.tail = this.tail.pre;\n        if (this.tail) this.tail.next = undefined;\n      }\n\n      this.header.pre = this.tail;\n      if (this.tail) this.tail.next = this.header;\n    };\n\n    LinkList.prototype.setElementByPos = function (pos, element) {\n      checkWithinAccessParams(pos, 0, this.length - 1);\n      var curNode = this.head;\n\n      while (pos--) {\n        curNode = curNode.next;\n      }\n\n      curNode.value = element;\n    };\n\n    LinkList.prototype.insert = function (pos, element, num) {\n      if (num === void 0) {\n        num = 1;\n      }\n\n      checkWithinAccessParams(pos, 0, this.length);\n      if (num <= 0) return;\n\n      if (pos === 0) {\n        while (num--) this.pushFront(element);\n      } else if (pos === this.length) {\n        while (num--) this.pushBack(element);\n      } else {\n        var curNode = this.head;\n\n        for (var i = 1; i < pos; ++i) {\n          curNode = curNode.next;\n        }\n\n        var next = curNode.next;\n        this.length += num;\n\n        while (num--) {\n          curNode.next = new LinkNode(element);\n          curNode.next.pre = curNode;\n          curNode = curNode.next;\n        }\n\n        curNode.next = next;\n        if (next) next.pre = curNode;\n      }\n    };\n\n    LinkList.prototype.find = function (element) {\n      if (!this.head) return this.end();\n      var curNode = this.head;\n\n      while (curNode !== this.header) {\n        if (curNode.value === element) {\n          return new LinkListIterator(curNode, this.header);\n        }\n\n        curNode = curNode.next;\n      }\n\n      return this.end();\n    };\n\n    LinkList.prototype.reverse = function () {\n      if (this.length <= 1) return;\n      var pHead = this.head;\n      var pTail = this.tail;\n      var cnt = 0;\n\n      while (cnt << 1 < this.length) {\n        var tmp = pHead.value;\n        pHead.value = pTail.value;\n        pTail.value = tmp;\n        pHead = pHead.next;\n        pTail = pTail.pre;\n        cnt += 1;\n      }\n    };\n\n    LinkList.prototype.unique = function () {\n      if (this.length <= 1) return;\n      var curNode = this.head;\n\n      while (curNode !== this.header) {\n        var tmpNode = curNode;\n\n        while (tmpNode.next && tmpNode.value === tmpNode.next.value) {\n          tmpNode = tmpNode.next;\n          this.length -= 1;\n        }\n\n        curNode.next = tmpNode.next;\n        if (curNode.next) curNode.next.pre = curNode;\n        curNode = curNode.next;\n      }\n    };\n\n    LinkList.prototype.sort = function (cmp) {\n      if (this.length <= 1) return;\n      var arr = [];\n      this.forEach(function (element) {\n        return arr.push(element);\n      });\n      arr.sort(cmp);\n      var curNode = this.head;\n      arr.forEach(function (element) {\n        curNode.value = element;\n        curNode = curNode.next;\n      });\n    };\n    /**\r\n     * @description Push an element to the front.\r\n     * @param element The element you want to push.\r\n     */\n\n\n    LinkList.prototype.pushFront = function (element) {\n      this.length += 1;\n      var newHead = new LinkNode(element);\n\n      if (!this.head) {\n        this.head = this.tail = newHead;\n        this.tail.next = this.header;\n        this.header.pre = this.tail;\n      } else {\n        newHead.next = this.head;\n        this.head.pre = newHead;\n        this.head = newHead;\n      }\n\n      this.header.next = this.head;\n      this.head.pre = this.header;\n    };\n    /**\r\n     * @description Removes the first element.\r\n     */\n\n\n    LinkList.prototype.popFront = function () {\n      if (!this.head) return;\n      this.length -= 1;\n\n      if (this.head === this.tail) {\n        this.head = this.tail = undefined;\n        this.header.pre = this.tail;\n      } else {\n        this.head = this.head.next;\n        if (this.head) this.head.pre = this.header;\n      }\n\n      this.header.next = this.head;\n    };\n    /**\r\n     * @description Merges two sorted lists.\r\n     * @param list The other list you want to merge (must be sorted).\r\n     */\n\n\n    LinkList.prototype.merge = function (list) {\n      var _this = this;\n\n      if (!this.head) {\n        list.forEach(function (element) {\n          return _this.pushBack(element);\n        });\n        return;\n      }\n\n      var curNode = this.head;\n      list.forEach(function (element) {\n        while (curNode && curNode !== _this.header && curNode.value <= element) {\n          curNode = curNode.next;\n        }\n\n        if (curNode === _this.header) {\n          _this.pushBack(element);\n\n          curNode = _this.tail;\n        } else if (curNode === _this.head) {\n          _this.pushFront(element);\n\n          curNode = _this.head;\n        } else {\n          _this.length += 1;\n          var pre = curNode.pre;\n          pre.next = new LinkNode(element);\n          pre.next.pre = pre;\n          pre.next.next = curNode;\n          curNode.pre = pre.next;\n        }\n      });\n    };\n\n    LinkList.prototype[Symbol.iterator] = function () {\n      return function () {\n        var curNode;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              if (!this.head) return [2\n              /*return*/\n              ];\n              curNode = this.head;\n              _a.label = 1;\n\n            case 1:\n              if (!(curNode !== this.header)) return [3\n              /*break*/\n              , 3];\n              return [4\n              /*yield*/\n              , curNode.value];\n\n            case 2:\n              _a.sent();\n\n              curNode = curNode.next;\n              return [3\n              /*break*/\n              , 1];\n\n            case 3:\n              return [2\n              /*return*/\n              ];\n          }\n        });\n      }.bind(this)();\n    };\n\n    return LinkList;\n  }(SequentialContainer);\n\n  var TreeNode =\n  /** @class */\n  function () {\n    function TreeNode(key, value) {\n      this.color = true;\n      this.key = undefined;\n      this.value = undefined;\n      this.left = undefined;\n      this.right = undefined;\n      this.parent = undefined;\n      this.key = key;\n      this.value = value;\n    }\n    /**\r\n     * @description Get the pre node.\r\n     * @return TreeNode about the pre node.\r\n     */\n\n\n    TreeNode.prototype.pre = function () {\n      var preNode = this;\n\n      if (preNode.color === TreeNode.RED && preNode.parent.parent === preNode) {\n        preNode = preNode.right;\n      } else if (preNode.left) {\n        preNode = preNode.left;\n\n        while (preNode.right) {\n          preNode = preNode.right;\n        }\n      } else {\n        var pre = preNode.parent;\n\n        while (pre.left === preNode) {\n          preNode = pre;\n          pre = preNode.parent;\n        }\n\n        preNode = pre;\n      }\n\n      return preNode;\n    };\n    /**\r\n     * @description Get the next node.\r\n     * @return TreeNode about the next node.\r\n     */\n\n\n    TreeNode.prototype.next = function () {\n      var nextNode = this;\n\n      if (nextNode.right) {\n        nextNode = nextNode.right;\n\n        while (nextNode.left) {\n          nextNode = nextNode.left;\n        }\n      } else {\n        var pre = nextNode.parent;\n\n        while (pre.right === nextNode) {\n          nextNode = pre;\n          pre = nextNode.parent;\n        }\n\n        if (nextNode.right !== pre) {\n          nextNode = pre;\n        }\n      }\n\n      return nextNode;\n    };\n    /**\r\n     * @description Rotate left.\r\n     * @return TreeNode about moved to original position after rotation.\r\n     */\n\n\n    TreeNode.prototype.rotateLeft = function () {\n      var PP = this.parent;\n      var V = this.right;\n      var R = V.left;\n      if (PP.parent === this) PP.parent = V;else if (PP.left === this) PP.left = V;else PP.right = V;\n      V.parent = PP;\n      V.left = this;\n      this.parent = V;\n      this.right = R;\n      if (R) R.parent = this;\n      return V;\n    };\n    /**\r\n     * @description Rotate left.\r\n     * @return TreeNode about moved to original position after rotation.\r\n     */\n\n\n    TreeNode.prototype.rotateRight = function () {\n      var PP = this.parent;\n      var F = this.left;\n      var K = F.right;\n      if (PP.parent === this) PP.parent = F;else if (PP.left === this) PP.left = F;else PP.right = F;\n      F.parent = PP;\n      F.right = this;\n      this.parent = F;\n      this.left = K;\n      if (K) K.parent = this;\n      return F;\n    };\n    /**\r\n     * @description Remove this.\r\n     */\n\n\n    TreeNode.prototype.remove = function () {\n      var parent = this.parent;\n\n      if (this === parent.left) {\n        parent.left = undefined;\n      } else parent.right = undefined;\n    };\n\n    TreeNode.RED = true;\n    TreeNode.BLACK = false;\n    return TreeNode;\n  }();\n\n  var TreeContainer =\n  /** @class */\n  function (_super) {\n    __extends(TreeContainer, _super);\n\n    function TreeContainer(cmp) {\n      if (cmp === void 0) {\n        cmp = function (x, y) {\n          if (x < y) return -1;\n          if (x > y) return 1;\n          return 0;\n        };\n      }\n\n      var _this = _super.call(this) || this;\n\n      _this.root = undefined;\n      _this.header = new TreeNode();\n      /**\r\n       * @description InOrder traversal the tree.\r\n       * @protected\r\n       */\n\n      _this.inOrderTraversal = function (curNode, callback) {\n        if (curNode === undefined) return false;\n\n        var ifReturn = _this.inOrderTraversal(curNode.left, callback);\n\n        if (ifReturn) return true;\n        if (callback(curNode)) return true;\n        return _this.inOrderTraversal(curNode.right, callback);\n      };\n\n      _this.cmp = cmp;\n      return _this;\n    }\n    /**\r\n     * @param curNode The starting node of the search.\r\n     * @param key The key you want to search.\r\n     * @return TreeNode which key is greater than or equals to the given key.\r\n     * @protected\r\n     */\n\n\n    TreeContainer.prototype._lowerBound = function (curNode, key) {\n      var resNode;\n\n      while (curNode) {\n        var cmpResult = this.cmp(curNode.key, key);\n\n        if (cmpResult < 0) {\n          curNode = curNode.right;\n        } else if (cmpResult > 0) {\n          resNode = curNode;\n          curNode = curNode.left;\n        } else return curNode;\n      }\n\n      return resNode === undefined ? this.header : resNode;\n    };\n    /**\r\n     * @param curNode The starting node of the search.\r\n     * @param key The key you want to search.\r\n     * @return TreeNode which key is greater than the given key.\r\n     * @protected\r\n     */\n\n\n    TreeContainer.prototype._upperBound = function (curNode, key) {\n      var resNode;\n\n      while (curNode) {\n        var cmpResult = this.cmp(curNode.key, key);\n\n        if (cmpResult <= 0) {\n          curNode = curNode.right;\n        } else if (cmpResult > 0) {\n          resNode = curNode;\n          curNode = curNode.left;\n        }\n      }\n\n      return resNode === undefined ? this.header : resNode;\n    };\n    /**\r\n     * @param curNode The starting node of the search.\r\n     * @param key The key you want to search.\r\n     * @return TreeNode which key is less than or equals to the given key.\r\n     * @protected\r\n     */\n\n\n    TreeContainer.prototype._reverseLowerBound = function (curNode, key) {\n      var resNode;\n\n      while (curNode) {\n        var cmpResult = this.cmp(curNode.key, key);\n\n        if (cmpResult < 0) {\n          resNode = curNode;\n          curNode = curNode.right;\n        } else if (cmpResult > 0) {\n          curNode = curNode.left;\n        } else return curNode;\n      }\n\n      return resNode === undefined ? this.header : resNode;\n    };\n    /**\r\n     * @param curNode The starting node of the search.\r\n     * @param key The key you want to search.\r\n     * @return TreeNode which key is less than the given key.\r\n     * @protected\r\n     */\n\n\n    TreeContainer.prototype._reverseUpperBound = function (curNode, key) {\n      var resNode;\n\n      while (curNode) {\n        var cmpResult = this.cmp(curNode.key, key);\n\n        if (cmpResult < 0) {\n          resNode = curNode;\n          curNode = curNode.right;\n        } else if (cmpResult >= 0) {\n          curNode = curNode.left;\n        }\n      }\n\n      return resNode === undefined ? this.header : resNode;\n    };\n    /**\r\n     * @description Make self balance after erase a node.\r\n     * @param curNode The node want to remove.\r\n     * @protected\r\n     */\n\n\n    TreeContainer.prototype.eraseNodeSelfBalance = function (curNode) {\n      while (true) {\n        var parentNode = curNode.parent;\n        if (parentNode === this.header) return;\n\n        if (curNode.color === TreeNode.RED) {\n          curNode.color = TreeNode.BLACK;\n          return;\n        }\n\n        if (curNode === parentNode.left) {\n          var brother = parentNode.right;\n\n          if (brother.color === TreeNode.RED) {\n            brother.color = TreeNode.BLACK;\n            parentNode.color = TreeNode.RED;\n\n            if (parentNode === this.root) {\n              this.root = parentNode.rotateLeft();\n            } else parentNode.rotateLeft();\n          } else if (brother.color === TreeNode.BLACK) {\n            if (brother.right && brother.right.color === TreeNode.RED) {\n              brother.color = parentNode.color;\n              parentNode.color = TreeNode.BLACK;\n              brother.right.color = TreeNode.BLACK;\n\n              if (parentNode === this.root) {\n                this.root = parentNode.rotateLeft();\n              } else parentNode.rotateLeft();\n\n              return;\n            } else if (brother.left && brother.left.color === TreeNode.RED) {\n              brother.color = TreeNode.RED;\n              brother.left.color = TreeNode.BLACK;\n              brother.rotateRight();\n            } else {\n              brother.color = TreeNode.RED;\n              curNode = parentNode;\n            }\n          }\n        } else {\n          var brother = parentNode.left;\n\n          if (brother.color === TreeNode.RED) {\n            brother.color = TreeNode.BLACK;\n            parentNode.color = TreeNode.RED;\n\n            if (parentNode === this.root) {\n              this.root = parentNode.rotateRight();\n            } else parentNode.rotateRight();\n          } else {\n            if (brother.left && brother.left.color === TreeNode.RED) {\n              brother.color = parentNode.color;\n              parentNode.color = TreeNode.BLACK;\n              brother.left.color = TreeNode.BLACK;\n\n              if (parentNode === this.root) {\n                this.root = parentNode.rotateRight();\n              } else parentNode.rotateRight();\n\n              return;\n            } else if (brother.right && brother.right.color === TreeNode.RED) {\n              brother.color = TreeNode.RED;\n              brother.right.color = TreeNode.BLACK;\n              brother.rotateLeft();\n            } else {\n              brother.color = TreeNode.RED;\n              curNode = parentNode;\n            }\n          }\n        }\n      }\n    };\n    /**\r\n     * @description Remove a node.\r\n     * @param curNode The node you want to remove.\r\n     * @protected\r\n     */\n\n\n    TreeContainer.prototype.eraseNode = function (curNode) {\n      var _a, _b;\n\n      if (this.length === 1) {\n        this.clear();\n        return;\n      }\n\n      var swapNode = curNode;\n\n      while (swapNode.left || swapNode.right) {\n        if (swapNode.right) {\n          swapNode = swapNode.right;\n\n          while (swapNode.left) swapNode = swapNode.left;\n        } else if (swapNode.left) {\n          swapNode = swapNode.left;\n        }\n\n        _a = __read([swapNode.key, curNode.key], 2), curNode.key = _a[0], swapNode.key = _a[1];\n        _b = __read([swapNode.value, curNode.value], 2), curNode.value = _b[0], swapNode.value = _b[1];\n        curNode = swapNode;\n      }\n\n      if (this.header.left === swapNode) {\n        this.header.left = swapNode.parent;\n      } else if (this.header.right === swapNode) {\n        this.header.right = swapNode.parent;\n      }\n\n      this.eraseNodeSelfBalance(swapNode);\n      swapNode.remove();\n      this.length -= 1;\n      this.root.color = TreeNode.BLACK;\n    };\n    /**\r\n     * @description Make self balance after insert a node.\r\n     * @param curNode The node want to insert.\r\n     * @protected\r\n     */\n\n\n    TreeContainer.prototype.insertNodeSelfBalance = function (curNode) {\n      while (true) {\n        var parentNode = curNode.parent;\n        if (parentNode.color === TreeNode.BLACK) return;\n        var grandParent = parentNode.parent;\n\n        if (parentNode === grandParent.left) {\n          var uncle = grandParent.right;\n\n          if (uncle && uncle.color === TreeNode.RED) {\n            uncle.color = parentNode.color = TreeNode.BLACK;\n            if (grandParent === this.root) return;\n            grandParent.color = TreeNode.RED;\n            curNode = grandParent;\n            continue;\n          } else if (curNode === parentNode.right) {\n            curNode.color = TreeNode.BLACK;\n            if (curNode.left) curNode.left.parent = parentNode;\n            if (curNode.right) curNode.right.parent = grandParent;\n            parentNode.right = curNode.left;\n            grandParent.left = curNode.right;\n            curNode.left = parentNode;\n            curNode.right = grandParent;\n\n            if (grandParent === this.root) {\n              this.root = curNode;\n              this.header.parent = curNode;\n            } else {\n              var GP = grandParent.parent;\n\n              if (GP.left === grandParent) {\n                GP.left = curNode;\n              } else GP.right = curNode;\n            }\n\n            curNode.parent = grandParent.parent;\n            parentNode.parent = curNode;\n            grandParent.parent = curNode;\n          } else {\n            parentNode.color = TreeNode.BLACK;\n\n            if (grandParent === this.root) {\n              this.root = grandParent.rotateRight();\n            } else grandParent.rotateRight();\n          }\n\n          grandParent.color = TreeNode.RED;\n        } else {\n          var uncle = grandParent.left;\n\n          if (uncle && uncle.color === TreeNode.RED) {\n            uncle.color = parentNode.color = TreeNode.BLACK;\n            if (grandParent === this.root) return;\n            grandParent.color = TreeNode.RED;\n            curNode = grandParent;\n            continue;\n          } else if (curNode === parentNode.left) {\n            curNode.color = TreeNode.BLACK;\n            if (curNode.left) curNode.left.parent = grandParent;\n            if (curNode.right) curNode.right.parent = parentNode;\n            grandParent.right = curNode.left;\n            parentNode.left = curNode.right;\n            curNode.left = grandParent;\n            curNode.right = parentNode;\n\n            if (grandParent === this.root) {\n              this.root = curNode;\n              this.header.parent = curNode;\n            } else {\n              var GP = grandParent.parent;\n\n              if (GP.left === grandParent) {\n                GP.left = curNode;\n              } else GP.right = curNode;\n            }\n\n            curNode.parent = grandParent.parent;\n            parentNode.parent = curNode;\n            grandParent.parent = curNode;\n          } else {\n            parentNode.color = TreeNode.BLACK;\n\n            if (grandParent === this.root) {\n              this.root = grandParent.rotateLeft();\n            } else grandParent.rotateLeft();\n          }\n\n          grandParent.color = TreeNode.RED;\n        }\n\n        return;\n      }\n    };\n    /**\r\n     * @description Find node which key is equals to the given key.\r\n     * @param curNode The starting node of the search.\r\n     * @param key The key you want to search.\r\n     * @protected\r\n     */\n\n\n    TreeContainer.prototype.findElementNode = function (curNode, key) {\n      while (curNode) {\n        var cmpResult = this.cmp(curNode.key, key);\n\n        if (cmpResult < 0) {\n          curNode = curNode.right;\n        } else if (cmpResult > 0) {\n          curNode = curNode.left;\n        } else return curNode;\n      }\n\n      return curNode;\n    };\n    /**\r\n     * @description Insert a key-value pair or set value by the given key.\r\n     * @param key The key want to insert.\r\n     * @param value The value want to set.\r\n     * @param hint You can give an iterator hint to improve insertion efficiency.\r\n     * @protected\r\n     */\n\n\n    TreeContainer.prototype.set = function (key, value, hint) {\n      if (this.root === undefined) {\n        this.length += 1;\n        this.root = new TreeNode(key, value);\n        this.root.color = TreeNode.BLACK;\n        this.root.parent = this.header;\n        this.header.parent = this.root;\n        this.header.left = this.root;\n        this.header.right = this.root;\n        return;\n      }\n\n      var curNode;\n      var minNode = this.header.left;\n      var compareToMin = this.cmp(minNode.key, key);\n\n      if (compareToMin === 0) {\n        minNode.value = value;\n        return;\n      } else if (compareToMin > 0) {\n        minNode.left = new TreeNode(key, value);\n        minNode.left.parent = minNode;\n        curNode = minNode.left;\n        this.header.left = curNode;\n      } else {\n        var maxNode = this.header.right;\n        var compareToMax = this.cmp(maxNode.key, key);\n\n        if (compareToMax === 0) {\n          maxNode.value = value;\n          return;\n        } else if (compareToMax < 0) {\n          maxNode.right = new TreeNode(key, value);\n          maxNode.right.parent = maxNode;\n          curNode = maxNode.right;\n          this.header.right = curNode;\n        } else {\n          if (hint !== undefined) {\n            // @ts-ignore\n            var iterNode = hint.node;\n\n            if (iterNode !== this.header) {\n              var iterCmpRes = this.cmp(iterNode.key, key);\n\n              if (iterCmpRes === 0) {\n                iterNode.value = value;\n                return;\n              } else if (iterCmpRes > 0) {\n                var preNode = iterNode.pre();\n                var preCmpRes = this.cmp(preNode.key, key);\n\n                if (preCmpRes === 0) {\n                  preNode.value = value;\n                  return;\n                } else if (preCmpRes < 0) {\n                  curNode = new TreeNode(key, value);\n\n                  if (preNode.right === undefined) {\n                    preNode.right = curNode;\n                    curNode.parent = preNode;\n                  } else {\n                    iterNode.left = curNode;\n                    curNode.parent = iterNode;\n                  }\n                }\n              }\n            }\n          }\n\n          if (curNode === undefined) {\n            curNode = this.root;\n\n            while (true) {\n              var cmpResult = this.cmp(curNode.key, key);\n\n              if (cmpResult > 0) {\n                if (curNode.left === undefined) {\n                  curNode.left = new TreeNode(key, value);\n                  curNode.left.parent = curNode;\n                  curNode = curNode.left;\n                  break;\n                }\n\n                curNode = curNode.left;\n              } else if (cmpResult < 0) {\n                if (curNode.right === undefined) {\n                  curNode.right = new TreeNode(key, value);\n                  curNode.right.parent = curNode;\n                  curNode = curNode.right;\n                  break;\n                }\n\n                curNode = curNode.right;\n              } else {\n                curNode.value = value;\n                return;\n              }\n            }\n          }\n        }\n      }\n\n      this.length += 1;\n      this.insertNodeSelfBalance(curNode);\n    };\n\n    TreeContainer.prototype.clear = function () {\n      this.length = 0;\n      this.root = undefined;\n      this.header.parent = undefined;\n      this.header.left = this.header.right = undefined;\n    };\n    /**\r\n     * @description Update node's key by iterator.\r\n     * @param iter The iterator you want to change.\r\n     * @param key The key you want to update.\r\n     * @return Boolean about if the modification is successful.\r\n     */\n\n\n    TreeContainer.prototype.updateKeyByIterator = function (iter, key) {\n      // @ts-ignore\n      var node = iter.node;\n\n      if (node === this.header) {\n        throw new TypeError('Invalid iterator!');\n      }\n\n      if (this.length === 1) {\n        node.key = key;\n        return true;\n      }\n\n      if (node === this.header.left) {\n        if (this.cmp(node.next().key, key) > 0) {\n          node.key = key;\n          return true;\n        }\n\n        return false;\n      }\n\n      if (node === this.header.right) {\n        if (this.cmp(node.pre().key, key) < 0) {\n          node.key = key;\n          return true;\n        }\n\n        return false;\n      }\n\n      var preKey = node.pre().key;\n      if (this.cmp(preKey, key) >= 0) return false;\n      var nextKey = node.next().key;\n      if (this.cmp(nextKey, key) <= 0) return false;\n      node.key = key;\n      return true;\n    };\n\n    TreeContainer.prototype.eraseElementByPos = function (pos) {\n      var _this = this;\n\n      checkWithinAccessParams(pos, 0, this.length - 1);\n      var index = 0;\n      this.inOrderTraversal(this.root, function (curNode) {\n        if (pos === index) {\n          _this.eraseNode(curNode);\n\n          return true;\n        }\n\n        index += 1;\n        return false;\n      });\n    };\n    /**\r\n     * @description Remove the element of the specified key.\r\n     * @param key The key you want to remove.\r\n     */\n\n\n    TreeContainer.prototype.eraseElementByKey = function (key) {\n      if (!this.length) return;\n      var curNode = this.findElementNode(this.root, key);\n      if (curNode === undefined) return;\n      this.eraseNode(curNode);\n    };\n\n    TreeContainer.prototype.eraseElementByIterator = function (iter) {\n      // @ts-ignore\n      var node = iter.node;\n\n      if (node === this.header) {\n        throw new RangeError('Invalid iterator');\n      }\n\n      if (node.right === undefined) {\n        iter = iter.next();\n      }\n\n      this.eraseNode(node);\n      return iter;\n    };\n    /**\r\n     * @description Get the height of the tree.\r\n     * @return Number about the height of the RB-tree.\r\n     */\n\n\n    TreeContainer.prototype.getHeight = function () {\n      if (!this.length) return 0;\n\n      var traversal = function (curNode) {\n        if (!curNode) return 0;\n        return Math.max(traversal(curNode.left), traversal(curNode.right)) + 1;\n      };\n\n      return traversal(this.root);\n    };\n\n    return TreeContainer;\n  }(Container);\n\n  var TreeIterator =\n  /** @class */\n  function (_super) {\n    __extends(TreeIterator, _super);\n\n    function TreeIterator(node, header, iteratorType) {\n      var _this = _super.call(this, iteratorType) || this;\n\n      _this.node = node;\n      _this.header = header;\n\n      if (_this.iteratorType === ContainerIterator.NORMAL) {\n        _this.pre = function () {\n          if (this.node === this.header.left) {\n            throw new RangeError('LinkList iterator access denied!');\n          }\n\n          this.node = this.node.pre();\n          return this;\n        };\n\n        _this.next = function () {\n          if (this.node === this.header) {\n            throw new RangeError('LinkList iterator access denied!');\n          }\n\n          this.node = this.node.next();\n          return this;\n        };\n      } else {\n        _this.pre = function () {\n          if (this.node === this.header.right) {\n            throw new RangeError('LinkList iterator access denied!');\n          }\n\n          this.node = this.node.next();\n          return this;\n        };\n\n        _this.next = function () {\n          if (this.node === this.header) {\n            throw new RangeError('LinkList iterator access denied!');\n          }\n\n          this.node = this.node.pre();\n          return this;\n        };\n      }\n\n      return _this;\n    }\n\n    TreeIterator.prototype.equals = function (obj) {\n      return this.node === obj.node;\n    };\n\n    return TreeIterator;\n  }(ContainerIterator);\n\n  var OrderedSetIterator =\n  /** @class */\n  function (_super) {\n    __extends(OrderedSetIterator, _super);\n\n    function OrderedSetIterator() {\n      return _super !== null && _super.apply(this, arguments) || this;\n    }\n\n    Object.defineProperty(OrderedSetIterator.prototype, \"pointer\", {\n      get: function () {\n        if (this.node === this.header) {\n          throw new RangeError('OrderedSet iterator access denied!');\n        }\n\n        return this.node.key;\n      },\n      enumerable: false,\n      configurable: true\n    });\n\n    OrderedSetIterator.prototype.copy = function () {\n      return new OrderedSetIterator(this.node, this.header, this.iteratorType);\n    };\n\n    return OrderedSetIterator;\n  }(TreeIterator);\n\n  var OrderedSet =\n  /** @class */\n  function (_super) {\n    __extends(OrderedSet, _super);\n\n    function OrderedSet(container, cmp) {\n      if (container === void 0) {\n        container = [];\n      }\n\n      var _this = _super.call(this, cmp) || this;\n\n      _this.iterationFunc = function (curNode) {\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              if (curNode === undefined) return [2\n              /*return*/\n              ];\n              return [5\n              /*yield**/\n              , __values(this.iterationFunc(curNode.left))];\n\n            case 1:\n              _a.sent();\n\n              return [4\n              /*yield*/\n              , curNode.key];\n\n            case 2:\n              _a.sent();\n\n              return [5\n              /*yield**/\n              , __values(this.iterationFunc(curNode.right))];\n\n            case 3:\n              _a.sent();\n\n              return [2\n              /*return*/\n              ];\n          }\n        });\n      };\n\n      container.forEach(function (element) {\n        return _this.insert(element);\n      });\n      _this.iterationFunc = _this.iterationFunc.bind(_this);\n      return _this;\n    }\n\n    OrderedSet.prototype.begin = function () {\n      return new OrderedSetIterator(this.header.left || this.header, this.header);\n    };\n\n    OrderedSet.prototype.end = function () {\n      return new OrderedSetIterator(this.header, this.header);\n    };\n\n    OrderedSet.prototype.rBegin = function () {\n      return new OrderedSetIterator(this.header.right || this.header, this.header, ContainerIterator.REVERSE);\n    };\n\n    OrderedSet.prototype.rEnd = function () {\n      return new OrderedSetIterator(this.header, this.header, ContainerIterator.REVERSE);\n    };\n\n    OrderedSet.prototype.front = function () {\n      return this.header.left ? this.header.left.key : undefined;\n    };\n\n    OrderedSet.prototype.back = function () {\n      return this.header.right ? this.header.right.key : undefined;\n    };\n\n    OrderedSet.prototype.forEach = function (callback) {\n      var e_1, _a;\n\n      var index = 0;\n\n      try {\n        for (var _b = __values(this), _c = _b.next(); !_c.done; _c = _b.next()) {\n          var element = _c.value;\n          callback(element, index++);\n        }\n      } catch (e_1_1) {\n        e_1 = {\n          error: e_1_1\n        };\n      } finally {\n        try {\n          if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        } finally {\n          if (e_1) throw e_1.error;\n        }\n      }\n    };\n\n    OrderedSet.prototype.getElementByPos = function (pos) {\n      var e_2, _a;\n\n      checkWithinAccessParams(pos, 0, this.length - 1);\n      var res;\n      var index = 0;\n\n      try {\n        for (var _b = __values(this), _c = _b.next(); !_c.done; _c = _b.next()) {\n          var element = _c.value;\n\n          if (index === pos) {\n            res = element;\n          }\n\n          index += 1;\n        }\n      } catch (e_2_1) {\n        e_2 = {\n          error: e_2_1\n        };\n      } finally {\n        try {\n          if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        } finally {\n          if (e_2) throw e_2.error;\n        }\n      }\n\n      return res;\n    };\n    /**\r\n     * @description Insert element to set.\r\n     * @param key The key want to insert.\r\n     * @param hint You can give an iterator hint to improve insertion efficiency.\r\n     */\n\n\n    OrderedSet.prototype.insert = function (key, hint) {\n      this.set(key, undefined, hint);\n    };\n\n    OrderedSet.prototype.find = function (element) {\n      var curNode = this.findElementNode(this.root, element);\n\n      if (curNode !== undefined) {\n        return new OrderedSetIterator(curNode, this.header);\n      }\n\n      return this.end();\n    };\n\n    OrderedSet.prototype.lowerBound = function (key) {\n      var resNode = this._lowerBound(this.root, key);\n\n      return new OrderedSetIterator(resNode, this.header);\n    };\n\n    OrderedSet.prototype.upperBound = function (key) {\n      var resNode = this._upperBound(this.root, key);\n\n      return new OrderedSetIterator(resNode, this.header);\n    };\n\n    OrderedSet.prototype.reverseLowerBound = function (key) {\n      var resNode = this._reverseLowerBound(this.root, key);\n\n      return new OrderedSetIterator(resNode, this.header);\n    };\n\n    OrderedSet.prototype.reverseUpperBound = function (key) {\n      var resNode = this._reverseUpperBound(this.root, key);\n\n      return new OrderedSetIterator(resNode, this.header);\n    };\n\n    OrderedSet.prototype.union = function (other) {\n      var _this = this;\n\n      other.forEach(function (element) {\n        return _this.insert(element);\n      });\n    };\n\n    OrderedSet.prototype[Symbol.iterator] = function () {\n      return this.iterationFunc(this.root);\n    };\n\n    return OrderedSet;\n  }(TreeContainer);\n\n  var OrderedMapIterator =\n  /** @class */\n  function (_super) {\n    __extends(OrderedMapIterator, _super);\n\n    function OrderedMapIterator() {\n      return _super !== null && _super.apply(this, arguments) || this;\n    }\n\n    Object.defineProperty(OrderedMapIterator.prototype, \"pointer\", {\n      get: function () {\n        var _this = this;\n\n        if (this.node === this.header) {\n          throw new RangeError('OrderedMap iterator access denied');\n        }\n\n        return new Proxy([], {\n          get: function (_, props) {\n            if (props === '0') return _this.node.key;else if (props === '1') return _this.node.value;\n          },\n          set: function (_, props, newValue) {\n            if (props !== '1') {\n              throw new TypeError('props must be 1');\n            }\n\n            _this.node.value = newValue;\n            return true;\n          }\n        });\n      },\n      enumerable: false,\n      configurable: true\n    });\n\n    OrderedMapIterator.prototype.copy = function () {\n      return new OrderedMapIterator(this.node, this.header, this.iteratorType);\n    };\n\n    return OrderedMapIterator;\n  }(TreeIterator);\n\n  var OrderedMap =\n  /** @class */\n  function (_super) {\n    __extends(OrderedMap, _super);\n\n    function OrderedMap(container, cmp) {\n      if (container === void 0) {\n        container = [];\n      }\n\n      var _this = _super.call(this, cmp) || this;\n\n      _this.iterationFunc = function (curNode) {\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              if (curNode === undefined) return [2\n              /*return*/\n              ];\n              return [5\n              /*yield**/\n              , __values(this.iterationFunc(curNode.left))];\n\n            case 1:\n              _a.sent();\n\n              return [4\n              /*yield*/\n              , [curNode.key, curNode.value]];\n\n            case 2:\n              _a.sent();\n\n              return [5\n              /*yield**/\n              , __values(this.iterationFunc(curNode.right))];\n\n            case 3:\n              _a.sent();\n\n              return [2\n              /*return*/\n              ];\n          }\n        });\n      };\n\n      _this.iterationFunc = _this.iterationFunc.bind(_this);\n      container.forEach(function (_a) {\n        var _b = __read(_a, 2),\n            key = _b[0],\n            value = _b[1];\n\n        return _this.setElement(key, value);\n      });\n      return _this;\n    }\n\n    OrderedMap.prototype.begin = function () {\n      return new OrderedMapIterator(this.header.left || this.header, this.header);\n    };\n\n    OrderedMap.prototype.end = function () {\n      return new OrderedMapIterator(this.header, this.header);\n    };\n\n    OrderedMap.prototype.rBegin = function () {\n      return new OrderedMapIterator(this.header.right || this.header, this.header, ContainerIterator.REVERSE);\n    };\n\n    OrderedMap.prototype.rEnd = function () {\n      return new OrderedMapIterator(this.header, this.header, ContainerIterator.REVERSE);\n    };\n\n    OrderedMap.prototype.front = function () {\n      if (!this.length) return undefined;\n      var minNode = this.header.left;\n      return [minNode.key, minNode.value];\n    };\n\n    OrderedMap.prototype.back = function () {\n      if (!this.length) return undefined;\n      var maxNode = this.header.right;\n      return [maxNode.key, maxNode.value];\n    };\n\n    OrderedMap.prototype.forEach = function (callback) {\n      var e_1, _a;\n\n      var index = 0;\n\n      try {\n        for (var _b = __values(this), _c = _b.next(); !_c.done; _c = _b.next()) {\n          var pair = _c.value;\n          callback(pair, index++);\n        }\n      } catch (e_1_1) {\n        e_1 = {\n          error: e_1_1\n        };\n      } finally {\n        try {\n          if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        } finally {\n          if (e_1) throw e_1.error;\n        }\n      }\n    };\n\n    OrderedMap.prototype.lowerBound = function (key) {\n      var resNode = this._lowerBound(this.root, key);\n\n      return new OrderedMapIterator(resNode, this.header);\n    };\n\n    OrderedMap.prototype.upperBound = function (key) {\n      var resNode = this._upperBound(this.root, key);\n\n      return new OrderedMapIterator(resNode, this.header);\n    };\n\n    OrderedMap.prototype.reverseLowerBound = function (key) {\n      var resNode = this._reverseLowerBound(this.root, key);\n\n      return new OrderedMapIterator(resNode, this.header);\n    };\n\n    OrderedMap.prototype.reverseUpperBound = function (key) {\n      var resNode = this._reverseUpperBound(this.root, key);\n\n      return new OrderedMapIterator(resNode, this.header);\n    };\n    /**\r\n     * @description Insert a key-value pair or set value by the given key.\r\n     * @param key The key want to insert.\r\n     * @param value The value want to set.\r\n     * @param hint You can give an iterator hint to improve insertion efficiency.\r\n     */\n\n\n    OrderedMap.prototype.setElement = function (key, value, hint) {\n      this.set(key, value, hint);\n    };\n\n    OrderedMap.prototype.find = function (key) {\n      var curNode = this.findElementNode(this.root, key);\n\n      if (curNode !== undefined) {\n        return new OrderedMapIterator(curNode, this.header);\n      }\n\n      return this.end();\n    };\n    /**\r\n     * @description Get the value of the element of the specified key.\r\n     */\n\n\n    OrderedMap.prototype.getElementByKey = function (key) {\n      var curNode = this.findElementNode(this.root, key);\n      return curNode ? curNode.value : undefined;\n    };\n\n    OrderedMap.prototype.getElementByPos = function (pos) {\n      var e_2, _a;\n\n      checkWithinAccessParams(pos, 0, this.length - 1);\n      var res;\n      var index = 0;\n\n      try {\n        for (var _b = __values(this), _c = _b.next(); !_c.done; _c = _b.next()) {\n          var pair = _c.value;\n\n          if (index === pos) {\n            res = pair;\n            break;\n          }\n\n          index += 1;\n        }\n      } catch (e_2_1) {\n        e_2 = {\n          error: e_2_1\n        };\n      } finally {\n        try {\n          if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        } finally {\n          if (e_2) throw e_2.error;\n        }\n      }\n\n      return res;\n    };\n\n    OrderedMap.prototype.union = function (other) {\n      var _this = this;\n\n      other.forEach(function (_a) {\n        var _b = __read(_a, 2),\n            key = _b[0],\n            value = _b[1];\n\n        return _this.setElement(key, value);\n      });\n    };\n\n    OrderedMap.prototype[Symbol.iterator] = function () {\n      return this.iterationFunc(this.root);\n    };\n\n    return OrderedMap;\n  }(TreeContainer);\n\n  var HashContainer =\n  /** @class */\n  function (_super) {\n    __extends(HashContainer, _super);\n\n    function HashContainer(initBucketNum, hashFunc) {\n      if (initBucketNum === void 0) {\n        initBucketNum = 16;\n      }\n\n      if (hashFunc === void 0) {\n        hashFunc = function (x) {\n          var str;\n\n          if (typeof x !== 'string') {\n            str = JSON.stringify(x);\n          } else str = x;\n\n          var hashCode = 0;\n          var strLength = str.length;\n\n          for (var i = 0; i < strLength; i++) {\n            var ch = str.charCodeAt(i);\n            hashCode = (hashCode << 5) - hashCode + ch;\n            hashCode |= 0;\n          }\n\n          return hashCode >>> 0;\n        };\n      }\n\n      var _this = _super.call(this) || this;\n\n      if (initBucketNum < 16 || (initBucketNum & initBucketNum - 1) !== 0) {\n        throw new RangeError('InitBucketNum range error');\n      }\n\n      _this.bucketNum = _this.initBucketNum = initBucketNum;\n      _this.hashFunc = hashFunc;\n      return _this;\n    }\n\n    HashContainer.prototype.clear = function () {\n      this.length = 0;\n      this.bucketNum = this.initBucketNum;\n      this.hashTable = [];\n    };\n\n    HashContainer.sigma = 0.75;\n    HashContainer.treeifyThreshold = 8;\n    HashContainer.untreeifyThreshold = 6;\n    HashContainer.minTreeifySize = 64;\n    HashContainer.maxBucketNum = 1 << 30;\n    return HashContainer;\n  }(Base);\n\n  var HashSet =\n  /** @class */\n  function (_super) {\n    __extends(HashSet, _super);\n\n    function HashSet(container, initBucketNum, hashFunc) {\n      if (container === void 0) {\n        container = [];\n      }\n\n      var _this = _super.call(this, initBucketNum, hashFunc) || this;\n\n      _this.hashTable = [];\n      container.forEach(function (element) {\n        return _this.insert(element);\n      });\n      return _this;\n    }\n\n    HashSet.prototype.reAllocate = function () {\n      var _this = this;\n\n      if (this.bucketNum >= HashContainer.maxBucketNum) return;\n      var newHashTable = [];\n      var originalBucketNum = this.bucketNum;\n      this.bucketNum <<= 1;\n      var keys = Object.keys(this.hashTable);\n      var keyNums = keys.length;\n\n      var _loop_1 = function (i) {\n        var index = parseInt(keys[i]);\n        var container = this_1.hashTable[index];\n        var size = container.size();\n        if (size === 0) return \"continue\";\n\n        if (size === 1) {\n          var element = container.front();\n          newHashTable[this_1.hashFunc(element) & this_1.bucketNum - 1] = new Vector([element], false);\n          return \"continue\";\n        }\n\n        var lowList = [];\n        var highList = [];\n        container.forEach(function (element) {\n          var hashCode = _this.hashFunc(element);\n\n          if ((hashCode & originalBucketNum) === 0) {\n            lowList.push(element);\n          } else highList.push(element);\n        });\n\n        if (container instanceof OrderedSet) {\n          if (lowList.length > HashContainer.untreeifyThreshold) {\n            newHashTable[index] = new OrderedSet(lowList);\n          } else if (lowList.length) {\n            newHashTable[index] = new Vector(lowList, false);\n          }\n\n          if (highList.length > HashContainer.untreeifyThreshold) {\n            newHashTable[index + originalBucketNum] = new OrderedSet(highList);\n          } else if (highList.length) {\n            newHashTable[index + originalBucketNum] = new Vector(highList, false);\n          }\n        } else {\n          if (lowList.length >= HashContainer.treeifyThreshold) {\n            newHashTable[index] = new OrderedSet(lowList);\n          } else if (lowList.length) {\n            newHashTable[index] = new Vector(lowList, false);\n          }\n\n          if (highList.length >= HashContainer.treeifyThreshold) {\n            newHashTable[index + originalBucketNum] = new OrderedSet(highList);\n          } else if (highList.length) {\n            newHashTable[index + originalBucketNum] = new Vector(highList, false);\n          }\n        }\n      };\n\n      var this_1 = this;\n\n      for (var i = 0; i < keyNums; ++i) {\n        _loop_1(i);\n      }\n\n      this.hashTable = newHashTable;\n    };\n\n    HashSet.prototype.forEach = function (callback) {\n      var containers = Object.values(this.hashTable);\n      var containersNum = containers.length;\n      var index = 0;\n\n      for (var i = 0; i < containersNum; ++i) {\n        containers[i].forEach(function (element) {\n          return callback(element, index++);\n        });\n      }\n    };\n    /**\r\n     * @description Insert element to hash set.\r\n     * @param element The element you want to insert.\r\n     */\n\n\n    HashSet.prototype.insert = function (element) {\n      var index = this.hashFunc(element) & this.bucketNum - 1;\n      var container = this.hashTable[index];\n\n      if (!container) {\n        this.hashTable[index] = new Vector([element], false);\n        this.length += 1;\n      } else {\n        var preSize = container.size();\n\n        if (container instanceof Vector) {\n          if (!container.find(element).equals(container.end())) return;\n          container.pushBack(element);\n\n          if (preSize + 1 >= HashContainer.treeifyThreshold) {\n            if (this.bucketNum <= HashContainer.minTreeifySize) {\n              this.length += 1;\n              this.reAllocate();\n              return;\n            }\n\n            this.hashTable[index] = new OrderedSet(container);\n          }\n\n          this.length += 1;\n        } else {\n          container.insert(element);\n          var curSize = container.size();\n          this.length += curSize - preSize;\n        }\n      }\n\n      if (this.length > this.bucketNum * HashContainer.sigma) {\n        this.reAllocate();\n      }\n    };\n\n    HashSet.prototype.eraseElementByKey = function (key) {\n      var index = this.hashFunc(key) & this.bucketNum - 1;\n      var container = this.hashTable[index];\n      if (!container) return;\n      var preSize = container.size();\n      if (preSize === 0) return;\n\n      if (container instanceof Vector) {\n        container.eraseElementByValue(key);\n        var curSize = container.size();\n        this.length += curSize - preSize;\n      } else {\n        container.eraseElementByKey(key);\n        var curSize = container.size();\n        this.length += curSize - preSize;\n\n        if (curSize <= HashContainer.untreeifyThreshold) {\n          this.hashTable[index] = new Vector(container);\n        }\n      }\n    };\n\n    HashSet.prototype.find = function (element) {\n      var index = this.hashFunc(element) & this.bucketNum - 1;\n      var container = this.hashTable[index];\n      if (!container) return false;\n      return !container.find(element).equals(container.end());\n    };\n\n    HashSet.prototype[Symbol.iterator] = function () {\n      return function () {\n        var containers, containersNum, i, container, container_1, container_1_1, element, e_1_1;\n\n        var e_1, _a;\n\n        return __generator(this, function (_b) {\n          switch (_b.label) {\n            case 0:\n              containers = Object.values(this.hashTable);\n              containersNum = containers.length;\n              i = 0;\n              _b.label = 1;\n\n            case 1:\n              if (!(i < containersNum)) return [3\n              /*break*/\n              , 10];\n              container = containers[i];\n              _b.label = 2;\n\n            case 2:\n              _b.trys.push([2, 7, 8, 9]);\n\n              container_1 = (e_1 = void 0, __values(container)), container_1_1 = container_1.next();\n              _b.label = 3;\n\n            case 3:\n              if (!!container_1_1.done) return [3\n              /*break*/\n              , 6];\n              element = container_1_1.value;\n              return [4\n              /*yield*/\n              , element];\n\n            case 4:\n              _b.sent();\n\n              _b.label = 5;\n\n            case 5:\n              container_1_1 = container_1.next();\n              return [3\n              /*break*/\n              , 3];\n\n            case 6:\n              return [3\n              /*break*/\n              , 9];\n\n            case 7:\n              e_1_1 = _b.sent();\n              e_1 = {\n                error: e_1_1\n              };\n              return [3\n              /*break*/\n              , 9];\n\n            case 8:\n              try {\n                if (container_1_1 && !container_1_1.done && (_a = container_1.return)) _a.call(container_1);\n              } finally {\n                if (e_1) throw e_1.error;\n              }\n\n              return [7\n              /*endfinally*/\n              ];\n\n            case 9:\n              ++i;\n              return [3\n              /*break*/\n              , 1];\n\n            case 10:\n              return [2\n              /*return*/\n              ];\n          }\n        });\n      }.bind(this)();\n    };\n\n    return HashSet;\n  }(HashContainer);\n\n  var HashMap =\n  /** @class */\n  function (_super) {\n    __extends(HashMap, _super);\n\n    function HashMap(container, initBucketNum, hashFunc) {\n      if (container === void 0) {\n        container = [];\n      }\n\n      var _this = _super.call(this, initBucketNum, hashFunc) || this;\n\n      _this.hashTable = [];\n      container.forEach(function (element) {\n        return _this.setElement(element[0], element[1]);\n      });\n      return _this;\n    }\n\n    HashMap.prototype.reAllocate = function () {\n      var _this = this;\n\n      if (this.bucketNum >= HashContainer.maxBucketNum) return;\n      var newHashTable = [];\n      var originalBucketNum = this.bucketNum;\n      this.bucketNum <<= 1;\n      var keys = Object.keys(this.hashTable);\n      var keyNums = keys.length;\n\n      var _loop_1 = function (i) {\n        var index = parseInt(keys[i]);\n        var container = this_1.hashTable[index];\n        var size = container.size();\n        if (size === 0) return \"continue\";\n\n        if (size === 1) {\n          var element = container.front();\n          newHashTable[this_1.hashFunc(element[0]) & this_1.bucketNum - 1] = new Vector([element], false);\n          return \"continue\";\n        }\n\n        var lowList = [];\n        var highList = [];\n        container.forEach(function (element) {\n          var hashCode = _this.hashFunc(element[0]);\n\n          if ((hashCode & originalBucketNum) === 0) {\n            lowList.push(element);\n          } else highList.push(element);\n        });\n\n        if (container instanceof OrderedMap) {\n          if (lowList.length > HashContainer.untreeifyThreshold) {\n            newHashTable[index] = new OrderedMap(lowList);\n          } else if (lowList.length) {\n            newHashTable[index] = new Vector(lowList, false);\n          }\n\n          if (highList.length > HashContainer.untreeifyThreshold) {\n            newHashTable[index + originalBucketNum] = new OrderedMap(highList);\n          } else if (highList.length) {\n            newHashTable[index + originalBucketNum] = new Vector(highList, false);\n          }\n        } else {\n          if (lowList.length >= HashContainer.treeifyThreshold) {\n            newHashTable[index] = new OrderedMap(lowList);\n          } else if (lowList.length) {\n            newHashTable[index] = new Vector(lowList, false);\n          }\n\n          if (highList.length >= HashContainer.treeifyThreshold) {\n            newHashTable[index + originalBucketNum] = new OrderedMap(highList);\n          } else if (highList.length) {\n            newHashTable[index + originalBucketNum] = new Vector(highList, false);\n          }\n        }\n      };\n\n      var this_1 = this;\n\n      for (var i = 0; i < keyNums; ++i) {\n        _loop_1(i);\n      }\n\n      this.hashTable = newHashTable;\n    };\n\n    HashMap.prototype.forEach = function (callback) {\n      var containers = Object.values(this.hashTable);\n      var containersNum = containers.length;\n      var index = 0;\n\n      for (var i = 0; i < containersNum; ++i) {\n        containers[i].forEach(function (element) {\n          return callback(element, index++);\n        });\n      }\n    };\n    /**\r\n     * @description Insert a new key-value pair to hash map or set value by key.\r\n     * @param key The key you want to insert.\r\n     * @param value The value you want to insert.\r\n     * @example HashMap.setElement(1, 2); // insert a key-value pair [1, 2]\r\n     */\n\n\n    HashMap.prototype.setElement = function (key, value) {\n      var e_1, _a;\n\n      var index = this.hashFunc(key) & this.bucketNum - 1;\n      var container = this.hashTable[index];\n\n      if (!container) {\n        this.length += 1;\n        this.hashTable[index] = new Vector([[key, value]], false);\n      } else {\n        var preSize = container.size();\n\n        if (container instanceof Vector) {\n          try {\n            for (var container_1 = __values(container), container_1_1 = container_1.next(); !container_1_1.done; container_1_1 = container_1.next()) {\n              var pair = container_1_1.value;\n\n              if (pair[0] === key) {\n                pair[1] = value;\n                return;\n              }\n            }\n          } catch (e_1_1) {\n            e_1 = {\n              error: e_1_1\n            };\n          } finally {\n            try {\n              if (container_1_1 && !container_1_1.done && (_a = container_1.return)) _a.call(container_1);\n            } finally {\n              if (e_1) throw e_1.error;\n            }\n          }\n\n          container.pushBack([key, value]);\n\n          if (preSize + 1 >= HashMap.treeifyThreshold) {\n            if (this.bucketNum <= HashMap.minTreeifySize) {\n              this.length += 1;\n              this.reAllocate();\n              return;\n            }\n\n            this.hashTable[index] = new OrderedMap(this.hashTable[index]);\n          }\n\n          this.length += 1;\n        } else {\n          container.setElement(key, value);\n          var curSize = container.size();\n          this.length += curSize - preSize;\n        }\n      }\n\n      if (this.length > this.bucketNum * HashMap.sigma) {\n        this.reAllocate();\n      }\n    };\n    /**\r\n     * @description Get the value of the element which has the specified key.\r\n     * @param key The key you want to get.\r\n     */\n\n\n    HashMap.prototype.getElementByKey = function (key) {\n      var e_2, _a;\n\n      var index = this.hashFunc(key) & this.bucketNum - 1;\n      var container = this.hashTable[index];\n      if (!container) return undefined;\n\n      if (container instanceof OrderedMap) {\n        return container.getElementByKey(key);\n      } else {\n        try {\n          for (var container_2 = __values(container), container_2_1 = container_2.next(); !container_2_1.done; container_2_1 = container_2.next()) {\n            var pair = container_2_1.value;\n            if (pair[0] === key) return pair[1];\n          }\n        } catch (e_2_1) {\n          e_2 = {\n            error: e_2_1\n          };\n        } finally {\n          try {\n            if (container_2_1 && !container_2_1.done && (_a = container_2.return)) _a.call(container_2);\n          } finally {\n            if (e_2) throw e_2.error;\n          }\n        }\n\n        return undefined;\n      }\n    };\n\n    HashMap.prototype.eraseElementByKey = function (key) {\n      var e_3, _a;\n\n      var index = this.hashFunc(key) & this.bucketNum - 1;\n      var container = this.hashTable[index];\n      if (!container) return;\n\n      if (container instanceof Vector) {\n        var pos = 0;\n\n        try {\n          for (var container_3 = __values(container), container_3_1 = container_3.next(); !container_3_1.done; container_3_1 = container_3.next()) {\n            var pair = container_3_1.value;\n\n            if (pair[0] === key) {\n              container.eraseElementByPos(pos);\n              this.length -= 1;\n              return;\n            }\n\n            pos += 1;\n          }\n        } catch (e_3_1) {\n          e_3 = {\n            error: e_3_1\n          };\n        } finally {\n          try {\n            if (container_3_1 && !container_3_1.done && (_a = container_3.return)) _a.call(container_3);\n          } finally {\n            if (e_3) throw e_3.error;\n          }\n        }\n      } else {\n        var preSize = container.size();\n        container.eraseElementByKey(key);\n        var curSize = container.size();\n        this.length += curSize - preSize;\n\n        if (curSize <= HashContainer.untreeifyThreshold) {\n          this.hashTable[index] = new Vector(container);\n        }\n      }\n    };\n\n    HashMap.prototype.find = function (key) {\n      var e_4, _a;\n\n      var index = this.hashFunc(key) & this.bucketNum - 1;\n      var container = this.hashTable[index];\n      if (!container) return false;\n\n      if (container instanceof OrderedMap) {\n        return !container.find(key).equals(container.end());\n      }\n\n      try {\n        for (var container_4 = __values(container), container_4_1 = container_4.next(); !container_4_1.done; container_4_1 = container_4.next()) {\n          var pair = container_4_1.value;\n          if (pair[0] === key) return true;\n        }\n      } catch (e_4_1) {\n        e_4 = {\n          error: e_4_1\n        };\n      } finally {\n        try {\n          if (container_4_1 && !container_4_1.done && (_a = container_4.return)) _a.call(container_4);\n        } finally {\n          if (e_4) throw e_4.error;\n        }\n      }\n\n      return false;\n    };\n\n    HashMap.prototype[Symbol.iterator] = function () {\n      return function () {\n        var containers, containersNum, i, container, container_5, container_5_1, element, e_5_1;\n\n        var e_5, _a;\n\n        return __generator(this, function (_b) {\n          switch (_b.label) {\n            case 0:\n              containers = Object.values(this.hashTable);\n              containersNum = containers.length;\n              i = 0;\n              _b.label = 1;\n\n            case 1:\n              if (!(i < containersNum)) return [3\n              /*break*/\n              , 10];\n              container = containers[i];\n              _b.label = 2;\n\n            case 2:\n              _b.trys.push([2, 7, 8, 9]);\n\n              container_5 = (e_5 = void 0, __values(container)), container_5_1 = container_5.next();\n              _b.label = 3;\n\n            case 3:\n              if (!!container_5_1.done) return [3\n              /*break*/\n              , 6];\n              element = container_5_1.value;\n              return [4\n              /*yield*/\n              , element];\n\n            case 4:\n              _b.sent();\n\n              _b.label = 5;\n\n            case 5:\n              container_5_1 = container_5.next();\n              return [3\n              /*break*/\n              , 3];\n\n            case 6:\n              return [3\n              /*break*/\n              , 9];\n\n            case 7:\n              e_5_1 = _b.sent();\n              e_5 = {\n                error: e_5_1\n              };\n              return [3\n              /*break*/\n              , 9];\n\n            case 8:\n              try {\n                if (container_5_1 && !container_5_1.done && (_a = container_5.return)) _a.call(container_5);\n              } finally {\n                if (e_5) throw e_5.error;\n              }\n\n              return [7\n              /*endfinally*/\n              ];\n\n            case 9:\n              ++i;\n              return [3\n              /*break*/\n              , 1];\n\n            case 10:\n              return [2\n              /*return*/\n              ];\n          }\n        });\n      }.bind(this)();\n    };\n\n    return HashMap;\n  }(HashContainer);\n\n  exports.Container = Container;\n  exports.ContainerIterator = ContainerIterator;\n  exports.Deque = Deque;\n  exports.DequeIterator = DequeIterator;\n  exports.HashContainer = HashContainer;\n  exports.HashMap = HashMap;\n  exports.HashSet = HashSet;\n  exports.LinkList = LinkList;\n  exports.LinkListIterator = LinkListIterator;\n  exports.OrderedMap = OrderedMap;\n  exports.OrderedMapIterator = OrderedMapIterator;\n  exports.OrderedSet = OrderedSet;\n  exports.OrderedSetIterator = OrderedSetIterator;\n  exports.PriorityQueue = PriorityQueue;\n  exports.Queue = Queue;\n  exports.SequentialContainer = SequentialContainer;\n  exports.Stack = Stack;\n  exports.TreeContainer = TreeContainer;\n  exports.Vector = Vector;\n  exports.VectorIterator = VectorIterator;\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n});","map":{"version":3,"names":["global","factory","exports","module","define","amd","globalThis","self","sdsl","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","__extends","TypeError","String","__","constructor","create","__generator","thisArg","body","_","label","sent","t","trys","ops","f","y","g","next","verb","Symbol","iterator","n","v","step","op","done","value","pop","length","push","e","__values","o","s","m","i","__read","r","ar","error","__spreadArray","to","from","pack","arguments","l","slice","concat","ContainerIterator","iteratorType","NORMAL","REVERSE","Base","size","empty","Container","_super","apply","Stack","container","_this","stack","forEach","element","clear","top","SequentialContainer","checkWithinAccessParams","pos","lower","upper","RangeError","RandomIterator","index","getElementByPos","setElementByPos","node","pre","defineProperty","get","set","newValue","enumerable","configurable","equals","obj","DequeIterator","copy","Deque","bucketSize","first","curFirst","last","curLast","bucketNum","map","_length","Math","max","ceil","needBucketNum","pushBack","bind","reAllocate","newMap","addBucketNum","getElementIndex","offset","offsetRemainder","curNodePointerIndex","curNodeBucketIndex","front","back","begin","end","rBegin","rEnd","popBack","undefined","pushFront","popFront","callback","_a","insert","num","arr","cut","eraseElementByPos","eraseElementByValue","eraseElementByIterator","iter","find","reverse","tmp","unique","cur","sort","cmp","shrinkToFit","Queue","queue","PriorityQueue","x","isArray","priorityQueue","parent_1","curParent","curChild","left","right","minChild","adjust","parent","_b","curNode","parent_2","VectorIterator","Vector","vector","splice","fill","LinkNode","LinkListIterator","header","LinkList","head","tail","newTail","pHead","pTail","cnt","tmpNode","newHead","merge","list","TreeNode","key","color","preNode","RED","nextNode","rotateLeft","PP","V","R","rotateRight","F","K","remove","BLACK","TreeContainer","root","inOrderTraversal","ifReturn","_lowerBound","resNode","cmpResult","_upperBound","_reverseLowerBound","_reverseUpperBound","eraseNodeSelfBalance","parentNode","brother","eraseNode","swapNode","insertNodeSelfBalance","grandParent","uncle","GP","findElementNode","hint","minNode","compareToMin","maxNode","compareToMax","iterNode","iterCmpRes","preCmpRes","updateKeyByIterator","preKey","nextKey","eraseElementByKey","getHeight","traversal","TreeIterator","OrderedSetIterator","OrderedSet","iterationFunc","e_1","_c","e_1_1","return","e_2","res","e_2_1","lowerBound","upperBound","reverseLowerBound","reverseUpperBound","union","other","OrderedMapIterator","Proxy","props","OrderedMap","setElement","pair","getElementByKey","HashContainer","initBucketNum","hashFunc","str","JSON","stringify","hashCode","strLength","ch","charCodeAt","hashTable","sigma","treeifyThreshold","untreeifyThreshold","minTreeifySize","maxBucketNum","HashSet","newHashTable","originalBucketNum","keys","keyNums","_loop_1","parseInt","this_1","lowList","highList","containers","values","containersNum","preSize","curSize","container_1","container_1_1","HashMap","container_2","container_2_1","e_3","container_3","container_3_1","e_3_1","e_4","container_4","container_4_1","e_4_1","container_5","container_5_1","e_5_1","e_5"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/js-sdsl/dist/umd/js-sdsl.js"],"sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n    typeof define === 'function' && define.amd ? define(['exports'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.sdsl = {}));\n})(this, (function (exports) { 'use strict';\n\n    /******************************************************************************\r\n    Copyright (c) Microsoft Corporation.\r\n\r\n    Permission to use, copy, modify, and/or distribute this software for any\r\n    purpose with or without fee is hereby granted.\r\n\r\n    THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\n    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\n    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\n    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\n    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\n    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\n    PERFORMANCE OF THIS SOFTWARE.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = function(d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n\r\n    function __extends(d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    function __generator(thisArg, body) {\r\n        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n        return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n        function verb(n) { return function (v) { return step([n, v]); }; }\r\n        function step(op) {\r\n            if (f) throw new TypeError(\"Generator is already executing.\");\r\n            while (_) try {\r\n                if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n                if (y = 0, t) op = [op[0] & 2, t.value];\r\n                switch (op[0]) {\r\n                    case 0: case 1: t = op; break;\r\n                    case 4: _.label++; return { value: op[1], done: false };\r\n                    case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                    case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                    default:\r\n                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                        if (t[2]) _.ops.pop();\r\n                        _.trys.pop(); continue;\r\n                }\r\n                op = body.call(thisArg, _);\r\n            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n        }\r\n    }\r\n\r\n    function __values(o) {\r\n        var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n        if (m) return m.call(o);\r\n        if (o && typeof o.length === \"number\") return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n        throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n    }\r\n\r\n    function __read(o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    }\r\n\r\n    function __spreadArray(to, from, pack) {\r\n        if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n            if (ar || !(i in from)) {\r\n                if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n                ar[i] = from[i];\r\n            }\r\n        }\r\n        return to.concat(ar || Array.prototype.slice.call(from));\r\n    }\n\n    var ContainerIterator = /** @class */ (function () {\r\n        function ContainerIterator(iteratorType) {\r\n            if (iteratorType === void 0) { iteratorType = ContainerIterator.NORMAL; }\r\n            this.iteratorType = iteratorType;\r\n        }\r\n        ContainerIterator.NORMAL = false;\r\n        ContainerIterator.REVERSE = true;\r\n        return ContainerIterator;\r\n    }());\r\n    var Base = /** @class */ (function () {\r\n        function Base() {\r\n            /**\r\n             * @description Container's size.\r\n             * @protected\r\n             */\r\n            this.length = 0;\r\n        }\r\n        /**\r\n         * @return The size of the container.\r\n         */\r\n        Base.prototype.size = function () {\r\n            return this.length;\r\n        };\r\n        /**\r\n         * @return Boolean about if the container is empty.\r\n         */\r\n        Base.prototype.empty = function () {\r\n            return this.length === 0;\r\n        };\r\n        return Base;\r\n    }());\r\n    var Container = /** @class */ (function (_super) {\r\n        __extends(Container, _super);\r\n        function Container() {\r\n            return _super !== null && _super.apply(this, arguments) || this;\r\n        }\r\n        return Container;\r\n    }(Base));\n\n    var Stack = /** @class */ (function (_super) {\r\n        __extends(Stack, _super);\r\n        function Stack(container) {\r\n            if (container === void 0) { container = []; }\r\n            var _this = _super.call(this) || this;\r\n            _this.stack = [];\r\n            container.forEach(function (element) { return _this.push(element); });\r\n            return _this;\r\n        }\r\n        Stack.prototype.clear = function () {\r\n            this.length = 0;\r\n            this.stack.length = 0;\r\n        };\r\n        /**\r\n         * @description Insert element to stack's end.\r\n         */\r\n        Stack.prototype.push = function (element) {\r\n            this.stack.push(element);\r\n            this.length += 1;\r\n        };\r\n        /**\r\n         * @description Removes the end element.\r\n         */\r\n        Stack.prototype.pop = function () {\r\n            this.stack.pop();\r\n            if (this.length > 0)\r\n                this.length -= 1;\r\n        };\r\n        /**\r\n         * @description Accesses the end element.\r\n         */\r\n        Stack.prototype.top = function () {\r\n            return this.stack[this.length - 1];\r\n        };\r\n        return Stack;\r\n    }(Base));\n\n    var SequentialContainer = /** @class */ (function (_super) {\r\n        __extends(SequentialContainer, _super);\r\n        function SequentialContainer() {\r\n            return _super !== null && _super.apply(this, arguments) || this;\r\n        }\r\n        return SequentialContainer;\r\n    }(Container));\n\n    /**\r\n     * @description Check if access is out of bounds.\r\n     * @param pos The position want to access.\r\n     * @param lower The lower bound.\r\n     * @param upper The upper bound.\r\n     * @return Boolean about if access is out of bounds.\r\n     */\r\n    function checkWithinAccessParams(pos, lower, upper) {\r\n        if (pos < lower || pos > upper) {\r\n            throw new RangeError();\r\n        }\r\n    }\n\n    var RandomIterator = /** @class */ (function (_super) {\r\n        __extends(RandomIterator, _super);\r\n        function RandomIterator(index, size, getElementByPos, setElementByPos, iteratorType) {\r\n            var _this = _super.call(this, iteratorType) || this;\r\n            _this.node = index;\r\n            _this.size = size;\r\n            _this.getElementByPos = getElementByPos;\r\n            _this.setElementByPos = setElementByPos;\r\n            if (_this.iteratorType === ContainerIterator.NORMAL) {\r\n                _this.pre = function () {\r\n                    if (this.node === 0) {\r\n                        throw new RangeError('Deque iterator access denied!');\r\n                    }\r\n                    this.node -= 1;\r\n                    return this;\r\n                };\r\n                _this.next = function () {\r\n                    if (this.node === this.size()) {\r\n                        throw new RangeError('Deque Iterator access denied!');\r\n                    }\r\n                    this.node += 1;\r\n                    return this;\r\n                };\r\n            }\r\n            else {\r\n                _this.pre = function () {\r\n                    if (this.node === this.size() - 1) {\r\n                        throw new RangeError('Deque iterator access denied!');\r\n                    }\r\n                    this.node += 1;\r\n                    return this;\r\n                };\r\n                _this.next = function () {\r\n                    if (this.node === -1) {\r\n                        throw new RangeError('Deque iterator access denied!');\r\n                    }\r\n                    this.node -= 1;\r\n                    return this;\r\n                };\r\n            }\r\n            return _this;\r\n        }\r\n        Object.defineProperty(RandomIterator.prototype, \"pointer\", {\r\n            get: function () {\r\n                checkWithinAccessParams(this.node, 0, this.size() - 1);\r\n                return this.getElementByPos(this.node);\r\n            },\r\n            set: function (newValue) {\r\n                checkWithinAccessParams(this.node, 0, this.size() - 1);\r\n                this.setElementByPos(this.node, newValue);\r\n            },\r\n            enumerable: false,\r\n            configurable: true\r\n        });\r\n        RandomIterator.prototype.equals = function (obj) {\r\n            return this.node === obj.node;\r\n        };\r\n        return RandomIterator;\r\n    }(ContainerIterator));\n\n    var DequeIterator = /** @class */ (function (_super) {\r\n        __extends(DequeIterator, _super);\r\n        function DequeIterator() {\r\n            return _super !== null && _super.apply(this, arguments) || this;\r\n        }\r\n        DequeIterator.prototype.copy = function () {\r\n            return new DequeIterator(this.node, this.size, this.getElementByPos, this.setElementByPos, this.iteratorType);\r\n        };\r\n        return DequeIterator;\r\n    }(RandomIterator));\r\n    var Deque = /** @class */ (function (_super) {\r\n        __extends(Deque, _super);\r\n        function Deque(container, bucketSize) {\r\n            if (container === void 0) { container = []; }\r\n            if (bucketSize === void 0) { bucketSize = (1 << 12); }\r\n            var _this = _super.call(this) || this;\r\n            _this.first = 0;\r\n            _this.curFirst = 0;\r\n            _this.last = 0;\r\n            _this.curLast = 0;\r\n            _this.bucketNum = 0;\r\n            _this.map = [];\r\n            var _length;\r\n            if ('size' in container) {\r\n                if (typeof container.size === 'number') {\r\n                    _length = container.size;\r\n                }\r\n                else {\r\n                    _length = container.size();\r\n                }\r\n            }\r\n            else if ('length' in container) {\r\n                _length = container.length;\r\n            }\r\n            else {\r\n                throw new RangeError('Can\\'t get container\\'s size!');\r\n            }\r\n            _this.bucketSize = bucketSize;\r\n            _this.bucketNum = Math.max(Math.ceil(_length / _this.bucketSize), 1);\r\n            for (var i = 0; i < _this.bucketNum; ++i) {\r\n                _this.map.push(new Array(_this.bucketSize));\r\n            }\r\n            var needBucketNum = Math.ceil(_length / _this.bucketSize);\r\n            _this.first = _this.last = (_this.bucketNum >> 1) - (needBucketNum >> 1);\r\n            _this.curFirst = _this.curLast = (_this.bucketSize - _length % _this.bucketSize) >> 1;\r\n            container.forEach(function (element) { return _this.pushBack(element); });\r\n            _this.size = _this.size.bind(_this);\r\n            _this.getElementByPos = _this.getElementByPos.bind(_this);\r\n            _this.setElementByPos = _this.setElementByPos.bind(_this);\r\n            return _this;\r\n        }\r\n        /**\r\n         * @description Growth the Deque.\r\n         * @private\r\n         */\r\n        Deque.prototype.reAllocate = function () {\r\n            var newMap = [];\r\n            var addBucketNum = Math.max(this.bucketNum >> 1, 1);\r\n            for (var i = 0; i < addBucketNum; ++i) {\r\n                newMap[i] = new Array(this.bucketSize);\r\n            }\r\n            for (var i = this.first; i < this.bucketNum; ++i) {\r\n                newMap[newMap.length] = this.map[i];\r\n            }\r\n            for (var i = 0; i < this.last; ++i) {\r\n                newMap[newMap.length] = this.map[i];\r\n            }\r\n            newMap[newMap.length] = __spreadArray([], __read(this.map[this.last]), false);\r\n            this.first = addBucketNum;\r\n            this.last = newMap.length - 1;\r\n            for (var i = 0; i < addBucketNum; ++i) {\r\n                newMap[newMap.length] = new Array(this.bucketSize);\r\n            }\r\n            this.map = newMap;\r\n            this.bucketNum = newMap.length;\r\n        };\r\n        /**\r\n         * @description Get the bucket position of the element and the pointer position by index.\r\n         * @param pos The element's index.\r\n         * @private\r\n         */\r\n        Deque.prototype.getElementIndex = function (pos) {\r\n            var offset = this.curFirst + pos + 1;\r\n            var offsetRemainder = offset % this.bucketSize;\r\n            var curNodePointerIndex = offsetRemainder - 1;\r\n            var curNodeBucketIndex = this.first + (offset - offsetRemainder) / this.bucketSize;\r\n            if (offsetRemainder === 0)\r\n                curNodeBucketIndex -= 1;\r\n            curNodeBucketIndex %= this.bucketNum;\r\n            if (curNodePointerIndex < 0)\r\n                curNodePointerIndex += this.bucketSize;\r\n            return { curNodeBucketIndex: curNodeBucketIndex, curNodePointerIndex: curNodePointerIndex };\r\n        };\r\n        Deque.prototype.clear = function () {\r\n            this.map = [[]];\r\n            this.bucketNum = 1;\r\n            this.first = this.last = this.length = 0;\r\n            this.curFirst = this.curLast = this.bucketSize >> 1;\r\n        };\r\n        Deque.prototype.front = function () {\r\n            return this.map[this.first][this.curFirst];\r\n        };\r\n        Deque.prototype.back = function () {\r\n            return this.map[this.last][this.curLast];\r\n        };\r\n        Deque.prototype.begin = function () {\r\n            return new DequeIterator(0, this.size, this.getElementByPos, this.setElementByPos);\r\n        };\r\n        Deque.prototype.end = function () {\r\n            return new DequeIterator(this.length, this.size, this.getElementByPos, this.setElementByPos);\r\n        };\r\n        Deque.prototype.rBegin = function () {\r\n            return new DequeIterator(this.length - 1, this.size, this.getElementByPos, this.setElementByPos, ContainerIterator.REVERSE);\r\n        };\r\n        Deque.prototype.rEnd = function () {\r\n            return new DequeIterator(-1, this.size, this.getElementByPos, this.setElementByPos, ContainerIterator.REVERSE);\r\n        };\r\n        Deque.prototype.pushBack = function (element) {\r\n            if (this.length) {\r\n                if (this.curLast < this.bucketSize - 1) {\r\n                    this.curLast += 1;\r\n                }\r\n                else if (this.last < this.bucketNum - 1) {\r\n                    this.last += 1;\r\n                    this.curLast = 0;\r\n                }\r\n                else {\r\n                    this.last = 0;\r\n                    this.curLast = 0;\r\n                }\r\n                if (this.last === this.first &&\r\n                    this.curLast === this.curFirst)\r\n                    this.reAllocate();\r\n            }\r\n            this.length += 1;\r\n            this.map[this.last][this.curLast] = element;\r\n        };\r\n        Deque.prototype.popBack = function () {\r\n            if (!this.length)\r\n                return;\r\n            this.map[this.last][this.curLast] = undefined;\r\n            if (this.length !== 1) {\r\n                if (this.curLast > 0) {\r\n                    this.curLast -= 1;\r\n                }\r\n                else if (this.last > 0) {\r\n                    this.last -= 1;\r\n                    this.curLast = this.bucketSize - 1;\r\n                }\r\n                else {\r\n                    this.last = this.bucketNum - 1;\r\n                    this.curLast = this.bucketSize - 1;\r\n                }\r\n            }\r\n            this.length -= 1;\r\n        };\r\n        /**\r\n         * @description Push the element to the front.\r\n         * @param element The element you want to push.\r\n         */\r\n        Deque.prototype.pushFront = function (element) {\r\n            if (this.length) {\r\n                if (this.curFirst > 0) {\r\n                    this.curFirst -= 1;\r\n                }\r\n                else if (this.first > 0) {\r\n                    this.first -= 1;\r\n                    this.curFirst = this.bucketSize - 1;\r\n                }\r\n                else {\r\n                    this.first = this.bucketNum - 1;\r\n                    this.curFirst = this.bucketSize - 1;\r\n                }\r\n                if (this.first === this.last &&\r\n                    this.curFirst === this.curLast)\r\n                    this.reAllocate();\r\n            }\r\n            this.length += 1;\r\n            this.map[this.first][this.curFirst] = element;\r\n        };\r\n        /**\r\n         * @description Remove the first element.\r\n         */\r\n        Deque.prototype.popFront = function () {\r\n            if (!this.length)\r\n                return;\r\n            this.map[this.first][this.curFirst] = undefined;\r\n            if (this.length !== 1) {\r\n                if (this.curFirst < this.bucketSize - 1) {\r\n                    this.curFirst += 1;\r\n                }\r\n                else if (this.first < this.bucketNum - 1) {\r\n                    this.first += 1;\r\n                    this.curFirst = 0;\r\n                }\r\n                else {\r\n                    this.first = 0;\r\n                    this.curFirst = 0;\r\n                }\r\n            }\r\n            this.length -= 1;\r\n        };\r\n        Deque.prototype.forEach = function (callback) {\r\n            for (var i = 0; i < this.length; ++i) {\r\n                callback(this.getElementByPos(i), i);\r\n            }\r\n        };\r\n        Deque.prototype.getElementByPos = function (pos) {\r\n            checkWithinAccessParams(pos, 0, this.length - 1);\r\n            var _a = this.getElementIndex(pos), curNodeBucketIndex = _a.curNodeBucketIndex, curNodePointerIndex = _a.curNodePointerIndex;\r\n            return this.map[curNodeBucketIndex][curNodePointerIndex];\r\n        };\r\n        Deque.prototype.setElementByPos = function (pos, element) {\r\n            checkWithinAccessParams(pos, 0, this.length - 1);\r\n            var _a = this.getElementIndex(pos), curNodeBucketIndex = _a.curNodeBucketIndex, curNodePointerIndex = _a.curNodePointerIndex;\r\n            this.map[curNodeBucketIndex][curNodePointerIndex] = element;\r\n        };\r\n        Deque.prototype.insert = function (pos, element, num) {\r\n            if (num === void 0) { num = 1; }\r\n            checkWithinAccessParams(pos, 0, this.length);\r\n            if (pos === 0) {\r\n                while (num--)\r\n                    this.pushFront(element);\r\n            }\r\n            else if (pos === this.length) {\r\n                while (num--)\r\n                    this.pushBack(element);\r\n            }\r\n            else {\r\n                var arr = [];\r\n                for (var i = pos; i < this.length; ++i) {\r\n                    arr.push(this.getElementByPos(i));\r\n                }\r\n                this.cut(pos - 1);\r\n                for (var i = 0; i < num; ++i)\r\n                    this.pushBack(element);\r\n                for (var i = 0; i < arr.length; ++i)\r\n                    this.pushBack(arr[i]);\r\n            }\r\n        };\r\n        /**\r\n         * @description Remove all elements after the specified position (excluding the specified position).\r\n         * @param pos The previous position of the first removed element.\r\n         * @example deque.cut(1); // Then deque's size will be 2. deque -> [0, 1]\r\n         */\r\n        Deque.prototype.cut = function (pos) {\r\n            if (pos < 0) {\r\n                this.clear();\r\n                return;\r\n            }\r\n            var _a = this.getElementIndex(pos), curNodeBucketIndex = _a.curNodeBucketIndex, curNodePointerIndex = _a.curNodePointerIndex;\r\n            this.last = curNodeBucketIndex;\r\n            this.curLast = curNodePointerIndex;\r\n            this.length = pos + 1;\r\n        };\r\n        Deque.prototype.eraseElementByPos = function (pos) {\r\n            var _this = this;\r\n            checkWithinAccessParams(pos, 0, this.length - 1);\r\n            if (pos === 0)\r\n                this.popFront();\r\n            else if (pos === this.length - 1)\r\n                this.popBack();\r\n            else {\r\n                var arr = [];\r\n                for (var i = pos + 1; i < this.length; ++i) {\r\n                    arr.push(this.getElementByPos(i));\r\n                }\r\n                this.cut(pos);\r\n                this.popBack();\r\n                arr.forEach(function (element) { return _this.pushBack(element); });\r\n            }\r\n        };\r\n        Deque.prototype.eraseElementByValue = function (value) {\r\n            if (!this.length)\r\n                return;\r\n            var arr = [];\r\n            for (var i = 0; i < this.length; ++i) {\r\n                var element = this.getElementByPos(i);\r\n                if (element !== value)\r\n                    arr.push(element);\r\n            }\r\n            var _length = arr.length;\r\n            for (var i = 0; i < _length; ++i)\r\n                this.setElementByPos(i, arr[i]);\r\n            this.cut(_length - 1);\r\n        };\r\n        Deque.prototype.eraseElementByIterator = function (iter) {\r\n            // @ts-ignore\r\n            var node = iter.node;\r\n            this.eraseElementByPos(node);\r\n            iter = iter.next();\r\n            return iter;\r\n        };\r\n        Deque.prototype.find = function (element) {\r\n            for (var i = 0; i < this.length; ++i) {\r\n                if (this.getElementByPos(i) === element) {\r\n                    return new DequeIterator(i, this.size, this.getElementByPos, this.setElementByPos);\r\n                }\r\n            }\r\n            return this.end();\r\n        };\r\n        Deque.prototype.reverse = function () {\r\n            var l = 0;\r\n            var r = this.length - 1;\r\n            while (l < r) {\r\n                var tmp = this.getElementByPos(l);\r\n                this.setElementByPos(l, this.getElementByPos(r));\r\n                this.setElementByPos(r, tmp);\r\n                l += 1;\r\n                r -= 1;\r\n            }\r\n        };\r\n        Deque.prototype.unique = function () {\r\n            if (this.length <= 1)\r\n                return;\r\n            var index = 1;\r\n            var pre = this.getElementByPos(0);\r\n            for (var i = 1; i < this.length; ++i) {\r\n                var cur = this.getElementByPos(i);\r\n                if (cur !== pre) {\r\n                    pre = cur;\r\n                    this.setElementByPos(index++, cur);\r\n                }\r\n            }\r\n            while (this.length > index)\r\n                this.popBack();\r\n        };\r\n        Deque.prototype.sort = function (cmp) {\r\n            var arr = [];\r\n            for (var i = 0; i < this.length; ++i) {\r\n                arr.push(this.getElementByPos(i));\r\n            }\r\n            arr.sort(cmp);\r\n            for (var i = 0; i < this.length; ++i)\r\n                this.setElementByPos(i, arr[i]);\r\n        };\r\n        /**\r\n         * @description Remove as much useless space as possible.\r\n         */\r\n        Deque.prototype.shrinkToFit = function () {\r\n            if (!this.length)\r\n                return;\r\n            var arr = [];\r\n            this.forEach(function (element) { return arr.push(element); });\r\n            this.bucketNum = Math.max(Math.ceil(this.length / this.bucketSize), 1);\r\n            this.length = this.first = this.last = this.curFirst = this.curLast = 0;\r\n            this.map = [];\r\n            for (var i = 0; i < this.bucketNum; ++i) {\r\n                this.map.push(new Array(this.bucketSize));\r\n            }\r\n            for (var i = 0; i < arr.length; ++i)\r\n                this.pushBack(arr[i]);\r\n        };\r\n        Deque.prototype[Symbol.iterator] = function () {\r\n            return function () {\r\n                var i;\r\n                return __generator(this, function (_a) {\r\n                    switch (_a.label) {\r\n                        case 0:\r\n                            i = 0;\r\n                            _a.label = 1;\r\n                        case 1:\r\n                            if (!(i < this.length)) return [3 /*break*/, 4];\r\n                            return [4 /*yield*/, this.getElementByPos(i)];\r\n                        case 2:\r\n                            _a.sent();\r\n                            _a.label = 3;\r\n                        case 3:\r\n                            ++i;\r\n                            return [3 /*break*/, 1];\r\n                        case 4: return [2 /*return*/];\r\n                    }\r\n                });\r\n            }.bind(this)();\r\n        };\r\n        return Deque;\r\n    }(SequentialContainer));\n\n    var Queue = /** @class */ (function (_super) {\r\n        __extends(Queue, _super);\r\n        function Queue(container) {\r\n            if (container === void 0) { container = []; }\r\n            var _this = _super.call(this) || this;\r\n            _this.queue = new Deque(container);\r\n            _this.length = _this.queue.size();\r\n            return _this;\r\n        }\r\n        Queue.prototype.clear = function () {\r\n            this.queue.clear();\r\n            this.length = 0;\r\n        };\r\n        /**\r\n         * @description Inserts element to queue's end.\r\n         */\r\n        Queue.prototype.push = function (element) {\r\n            this.queue.pushBack(element);\r\n            this.length += 1;\r\n        };\r\n        /**\r\n         * @description Removes the first element.\r\n         */\r\n        Queue.prototype.pop = function () {\r\n            this.queue.popFront();\r\n            if (this.length)\r\n                this.length -= 1;\r\n        };\r\n        /**\r\n         * @description Access the first element.\r\n         */\r\n        Queue.prototype.front = function () {\r\n            return this.queue.front();\r\n        };\r\n        return Queue;\r\n    }(Base));\n\n    var PriorityQueue = /** @class */ (function (_super) {\r\n        __extends(PriorityQueue, _super);\r\n        /**\r\n         * @description PriorityQueue's constructor.\r\n         * @param container Initialize container, must have a forEach function.\r\n         * @param cmp Compare function.\r\n         * @param copy When the container is an array, you can choose to directly operate on the original object of\r\n         *             the array or perform a shallow copy. The default is shallow copy.\r\n         */\r\n        function PriorityQueue(container, cmp, copy) {\r\n            var _a;\r\n            if (container === void 0) { container = []; }\r\n            if (cmp === void 0) { cmp = function (x, y) {\r\n                if (x > y)\r\n                    return -1;\r\n                if (x < y)\r\n                    return 1;\r\n                return 0;\r\n            }; }\r\n            if (copy === void 0) { copy = true; }\r\n            var _this = _super.call(this) || this;\r\n            _this.cmp = cmp;\r\n            if (Array.isArray(container)) {\r\n                _this.priorityQueue = copy ? __spreadArray([], __read(container), false) : container;\r\n            }\r\n            else {\r\n                _this.priorityQueue = [];\r\n                container.forEach(function (element) { return _this.priorityQueue.push(element); });\r\n            }\r\n            _this.length = _this.priorityQueue.length;\r\n            for (var parent_1 = (_this.length - 1) >> 1; parent_1 >= 0; --parent_1) {\r\n                var curParent = parent_1;\r\n                var curChild = (curParent << 1) | 1;\r\n                while (curChild < _this.length) {\r\n                    var left = curChild;\r\n                    var right = left + 1;\r\n                    var minChild = left;\r\n                    if (right < _this.length &&\r\n                        _this.cmp(_this.priorityQueue[left], _this.priorityQueue[right]) > 0) {\r\n                        minChild = right;\r\n                    }\r\n                    if (_this.cmp(_this.priorityQueue[curParent], _this.priorityQueue[minChild]) <= 0)\r\n                        break;\r\n                    _a = __read([_this.priorityQueue[minChild], _this.priorityQueue[curParent]], 2), _this.priorityQueue[curParent] = _a[0], _this.priorityQueue[minChild] = _a[1];\r\n                    curParent = minChild;\r\n                    curChild = (curParent << 1) | 1;\r\n                }\r\n            }\r\n            return _this;\r\n        }\r\n        /**\r\n         * @description Adjusting parent's children to suit the nature of the heap.\r\n         * @param parent Parent's index.\r\n         * @private\r\n         */\r\n        PriorityQueue.prototype.adjust = function (parent) {\r\n            var _a, _b;\r\n            var left = (parent << 1) | 1;\r\n            var right = (parent << 1) + 2;\r\n            if (left < this.length &&\r\n                this.cmp(this.priorityQueue[parent], this.priorityQueue[left]) > 0) {\r\n                _a = __read([this.priorityQueue[left], this.priorityQueue[parent]], 2), this.priorityQueue[parent] = _a[0], this.priorityQueue[left] = _a[1];\r\n            }\r\n            if (right < this.length &&\r\n                this.cmp(this.priorityQueue[parent], this.priorityQueue[right]) > 0) {\r\n                _b = __read([this.priorityQueue[right], this.priorityQueue[parent]], 2), this.priorityQueue[parent] = _b[0], this.priorityQueue[right] = _b[1];\r\n            }\r\n        };\r\n        PriorityQueue.prototype.clear = function () {\r\n            this.length = 0;\r\n            this.priorityQueue.length = 0;\r\n        };\r\n        /**\r\n         * @description Push element into a container in order.\r\n         * @param element The element you want to push.\r\n         */\r\n        PriorityQueue.prototype.push = function (element) {\r\n            this.priorityQueue.push(element);\r\n            this.length += 1;\r\n            if (this.length === 1)\r\n                return;\r\n            var curNode = this.length - 1;\r\n            while (curNode > 0) {\r\n                var parent_2 = (curNode - 1) >> 1;\r\n                if (this.cmp(this.priorityQueue[parent_2], element) <= 0)\r\n                    break;\r\n                this.adjust(parent_2);\r\n                curNode = parent_2;\r\n            }\r\n        };\r\n        /**\r\n         * @description Removes the top element.\r\n         */\r\n        PriorityQueue.prototype.pop = function () {\r\n            if (!this.length)\r\n                return;\r\n            var last = this.priorityQueue[this.length - 1];\r\n            this.length -= 1;\r\n            var parent = 0;\r\n            while (parent < this.length) {\r\n                var left = (parent << 1) | 1;\r\n                var right = (parent << 1) + 2;\r\n                if (left >= this.length)\r\n                    break;\r\n                var minChild = left;\r\n                if (right < this.length &&\r\n                    this.cmp(this.priorityQueue[left], this.priorityQueue[right]) > 0) {\r\n                    minChild = right;\r\n                }\r\n                if (this.cmp(this.priorityQueue[minChild], last) >= 0)\r\n                    break;\r\n                this.priorityQueue[parent] = this.priorityQueue[minChild];\r\n                parent = minChild;\r\n            }\r\n            this.priorityQueue[parent] = last;\r\n            this.priorityQueue.pop();\r\n        };\r\n        /**\r\n         * @description Accesses the top element.\r\n         */\r\n        PriorityQueue.prototype.top = function () {\r\n            return this.priorityQueue[0];\r\n        };\r\n        return PriorityQueue;\r\n    }(Base));\n\n    var VectorIterator = /** @class */ (function (_super) {\r\n        __extends(VectorIterator, _super);\r\n        function VectorIterator() {\r\n            return _super !== null && _super.apply(this, arguments) || this;\r\n        }\r\n        VectorIterator.prototype.copy = function () {\r\n            return new VectorIterator(this.node, this.size, this.getElementByPos, this.setElementByPos, this.iteratorType);\r\n        };\r\n        return VectorIterator;\r\n    }(RandomIterator));\r\n    var Vector = /** @class */ (function (_super) {\r\n        __extends(Vector, _super);\r\n        /**\r\n         * @description Vector's constructor.\r\n         * @param container Initialize container, must have a forEach function.\r\n         * @param copy When the container is an array, you can choose to directly operate on the original object of\r\n         *             the array or perform a shallow copy. The default is shallow copy.\r\n         */\r\n        function Vector(container, copy) {\r\n            if (container === void 0) { container = []; }\r\n            if (copy === void 0) { copy = true; }\r\n            var _this = _super.call(this) || this;\r\n            if (Array.isArray(container)) {\r\n                _this.vector = copy ? __spreadArray([], __read(container), false) : container;\r\n                _this.length = container.length;\r\n            }\r\n            else {\r\n                _this.vector = [];\r\n                container.forEach(function (element) { return _this.pushBack(element); });\r\n            }\r\n            _this.size = _this.size.bind(_this);\r\n            _this.getElementByPos = _this.getElementByPos.bind(_this);\r\n            _this.setElementByPos = _this.setElementByPos.bind(_this);\r\n            return _this;\r\n        }\r\n        Vector.prototype.clear = function () {\r\n            this.length = 0;\r\n            this.vector.length = 0;\r\n        };\r\n        Vector.prototype.begin = function () {\r\n            return new VectorIterator(0, this.size, this.getElementByPos, this.setElementByPos);\r\n        };\r\n        Vector.prototype.end = function () {\r\n            return new VectorIterator(this.length, this.size, this.getElementByPos, this.setElementByPos);\r\n        };\r\n        Vector.prototype.rBegin = function () {\r\n            return new VectorIterator(this.length - 1, this.size, this.getElementByPos, this.setElementByPos, ContainerIterator.REVERSE);\r\n        };\r\n        Vector.prototype.rEnd = function () {\r\n            return new VectorIterator(-1, this.size, this.getElementByPos, this.setElementByPos, ContainerIterator.REVERSE);\r\n        };\r\n        Vector.prototype.front = function () {\r\n            return this.vector[0];\r\n        };\r\n        Vector.prototype.back = function () {\r\n            return this.vector[this.length - 1];\r\n        };\r\n        Vector.prototype.forEach = function (callback) {\r\n            for (var i = 0; i < this.length; ++i) {\r\n                callback(this.vector[i], i);\r\n            }\r\n        };\r\n        Vector.prototype.getElementByPos = function (pos) {\r\n            checkWithinAccessParams(pos, 0, this.length - 1);\r\n            return this.vector[pos];\r\n        };\r\n        Vector.prototype.eraseElementByPos = function (pos) {\r\n            checkWithinAccessParams(pos, 0, this.length - 1);\r\n            this.vector.splice(pos, 1);\r\n            this.length -= 1;\r\n        };\r\n        Vector.prototype.eraseElementByValue = function (value) {\r\n            var index = 0;\r\n            for (var i = 0; i < this.length; ++i) {\r\n                if (this.vector[i] !== value) {\r\n                    this.vector[index++] = this.vector[i];\r\n                }\r\n            }\r\n            this.length = this.vector.length = index;\r\n        };\r\n        Vector.prototype.eraseElementByIterator = function (iter) {\r\n            // @ts-ignore\r\n            var node = iter.node;\r\n            iter = iter.next();\r\n            this.eraseElementByPos(node);\r\n            return iter;\r\n        };\r\n        Vector.prototype.pushBack = function (element) {\r\n            this.vector.push(element);\r\n            this.length += 1;\r\n        };\r\n        Vector.prototype.popBack = function () {\r\n            if (!this.length)\r\n                return;\r\n            this.vector.pop();\r\n            this.length -= 1;\r\n        };\r\n        Vector.prototype.setElementByPos = function (pos, element) {\r\n            checkWithinAccessParams(pos, 0, this.length - 1);\r\n            this.vector[pos] = element;\r\n        };\r\n        Vector.prototype.insert = function (pos, element, num) {\r\n            var _a;\r\n            if (num === void 0) { num = 1; }\r\n            checkWithinAccessParams(pos, 0, this.length);\r\n            (_a = this.vector).splice.apply(_a, __spreadArray([pos, 0], __read(new Array(num).fill(element)), false));\r\n            this.length += num;\r\n        };\r\n        Vector.prototype.find = function (element) {\r\n            for (var i = 0; i < this.length; ++i) {\r\n                if (this.vector[i] === element) {\r\n                    return new VectorIterator(i, this.size, this.getElementByPos, this.getElementByPos);\r\n                }\r\n            }\r\n            return this.end();\r\n        };\r\n        Vector.prototype.reverse = function () {\r\n            this.vector.reverse();\r\n        };\r\n        Vector.prototype.unique = function () {\r\n            var index = 1;\r\n            for (var i = 1; i < this.length; ++i) {\r\n                if (this.vector[i] !== this.vector[i - 1]) {\r\n                    this.vector[index++] = this.vector[i];\r\n                }\r\n            }\r\n            this.length = this.vector.length = index;\r\n        };\r\n        Vector.prototype.sort = function (cmp) {\r\n            this.vector.sort(cmp);\r\n        };\r\n        Vector.prototype[Symbol.iterator] = function () {\r\n            return function () {\r\n                return __generator(this, function (_a) {\r\n                    switch (_a.label) {\r\n                        case 0: return [5 /*yield**/, __values(this.vector)];\r\n                        case 1: return [2 /*return*/, _a.sent()];\r\n                    }\r\n                });\r\n            }.bind(this)();\r\n        };\r\n        return Vector;\r\n    }(SequentialContainer));\n\n    var LinkNode = /** @class */ (function () {\r\n        function LinkNode(element) {\r\n            this.value = undefined;\r\n            this.pre = undefined;\r\n            this.next = undefined;\r\n            this.value = element;\r\n        }\r\n        return LinkNode;\r\n    }());\r\n    var LinkListIterator = /** @class */ (function (_super) {\r\n        __extends(LinkListIterator, _super);\r\n        function LinkListIterator(node, header, iteratorType) {\r\n            var _this = _super.call(this, iteratorType) || this;\r\n            _this.node = node;\r\n            _this.header = header;\r\n            if (_this.iteratorType === ContainerIterator.NORMAL) {\r\n                _this.pre = function () {\r\n                    if (this.node.pre === this.header) {\r\n                        throw new RangeError('LinkList iterator access denied!');\r\n                    }\r\n                    this.node = this.node.pre;\r\n                    return this;\r\n                };\r\n                _this.next = function () {\r\n                    if (this.node === this.header) {\r\n                        throw new RangeError('LinkList iterator access denied!');\r\n                    }\r\n                    this.node = this.node.next;\r\n                    return this;\r\n                };\r\n            }\r\n            else {\r\n                _this.pre = function () {\r\n                    if (this.node.next === this.header) {\r\n                        throw new RangeError('LinkList iterator access denied!');\r\n                    }\r\n                    this.node = this.node.next;\r\n                    return this;\r\n                };\r\n                _this.next = function () {\r\n                    if (this.node === this.header) {\r\n                        throw new RangeError('LinkList iterator access denied!');\r\n                    }\r\n                    this.node = this.node.pre;\r\n                    return this;\r\n                };\r\n            }\r\n            return _this;\r\n        }\r\n        Object.defineProperty(LinkListIterator.prototype, \"pointer\", {\r\n            get: function () {\r\n                if (this.node === this.header) {\r\n                    throw new RangeError('LinkList iterator access denied!');\r\n                }\r\n                return this.node.value;\r\n            },\r\n            set: function (newValue) {\r\n                if (this.node === this.header) {\r\n                    throw new RangeError('LinkList iterator access denied!');\r\n                }\r\n                this.node.value = newValue;\r\n            },\r\n            enumerable: false,\r\n            configurable: true\r\n        });\r\n        LinkListIterator.prototype.equals = function (obj) {\r\n            return this.node === obj.node;\r\n        };\r\n        LinkListIterator.prototype.copy = function () {\r\n            return new LinkListIterator(this.node, this.header, this.iteratorType);\r\n        };\r\n        return LinkListIterator;\r\n    }(ContainerIterator));\r\n    var LinkList = /** @class */ (function (_super) {\r\n        __extends(LinkList, _super);\r\n        function LinkList(container) {\r\n            if (container === void 0) { container = []; }\r\n            var _this = _super.call(this) || this;\r\n            _this.header = new LinkNode();\r\n            _this.head = undefined;\r\n            _this.tail = undefined;\r\n            container.forEach(function (element) { return _this.pushBack(element); });\r\n            return _this;\r\n        }\r\n        LinkList.prototype.clear = function () {\r\n            this.length = 0;\r\n            this.head = this.tail = undefined;\r\n            this.header.pre = this.header.next = undefined;\r\n        };\r\n        LinkList.prototype.begin = function () {\r\n            return new LinkListIterator(this.head || this.header, this.header);\r\n        };\r\n        LinkList.prototype.end = function () {\r\n            return new LinkListIterator(this.header, this.header);\r\n        };\r\n        LinkList.prototype.rBegin = function () {\r\n            return new LinkListIterator(this.tail || this.header, this.header, ContainerIterator.REVERSE);\r\n        };\r\n        LinkList.prototype.rEnd = function () {\r\n            return new LinkListIterator(this.header, this.header, ContainerIterator.REVERSE);\r\n        };\r\n        LinkList.prototype.front = function () {\r\n            return this.head ? this.head.value : undefined;\r\n        };\r\n        LinkList.prototype.back = function () {\r\n            return this.tail ? this.tail.value : undefined;\r\n        };\r\n        LinkList.prototype.forEach = function (callback) {\r\n            if (!this.length)\r\n                return;\r\n            var curNode = this.head;\r\n            var index = 0;\r\n            while (curNode !== this.header) {\r\n                callback(curNode.value, index++);\r\n                curNode = curNode.next;\r\n            }\r\n        };\r\n        LinkList.prototype.getElementByPos = function (pos) {\r\n            checkWithinAccessParams(pos, 0, this.length - 1);\r\n            var curNode = this.head;\r\n            while (pos--) {\r\n                curNode = curNode.next;\r\n            }\r\n            return curNode.value;\r\n        };\r\n        LinkList.prototype.eraseElementByPos = function (pos) {\r\n            checkWithinAccessParams(pos, 0, this.length - 1);\r\n            if (pos === 0)\r\n                this.popFront();\r\n            else if (pos === this.length - 1)\r\n                this.popBack();\r\n            else {\r\n                var curNode = this.head;\r\n                while (pos--) {\r\n                    curNode = curNode.next;\r\n                }\r\n                curNode = curNode;\r\n                var pre = curNode.pre;\r\n                var next = curNode.next;\r\n                next.pre = pre;\r\n                pre.next = next;\r\n                this.length -= 1;\r\n            }\r\n        };\r\n        LinkList.prototype.eraseElementByValue = function (value) {\r\n            while (this.head && this.head.value === value)\r\n                this.popFront();\r\n            while (this.tail && this.tail.value === value)\r\n                this.popBack();\r\n            if (!this.head)\r\n                return;\r\n            var curNode = this.head;\r\n            while (curNode !== this.header) {\r\n                if (curNode.value === value) {\r\n                    var pre = curNode.pre;\r\n                    var next = curNode.next;\r\n                    if (next)\r\n                        next.pre = pre;\r\n                    if (pre)\r\n                        pre.next = next;\r\n                    this.length -= 1;\r\n                }\r\n                curNode = curNode.next;\r\n            }\r\n        };\r\n        LinkList.prototype.eraseElementByIterator = function (iter) {\r\n            // @ts-ignore\r\n            var node = iter.node;\r\n            if (node === this.header) {\r\n                throw new RangeError('Invalid iterator');\r\n            }\r\n            iter = iter.next();\r\n            if (this.head === node)\r\n                this.popFront();\r\n            else if (this.tail === node)\r\n                this.popBack();\r\n            else {\r\n                var pre = node.pre;\r\n                var next = node.next;\r\n                if (next)\r\n                    next.pre = pre;\r\n                if (pre)\r\n                    pre.next = next;\r\n                this.length -= 1;\r\n            }\r\n            return iter;\r\n        };\r\n        LinkList.prototype.pushBack = function (element) {\r\n            this.length += 1;\r\n            var newTail = new LinkNode(element);\r\n            if (!this.tail) {\r\n                this.head = this.tail = newTail;\r\n                this.header.next = this.head;\r\n                this.head.pre = this.header;\r\n            }\r\n            else {\r\n                this.tail.next = newTail;\r\n                newTail.pre = this.tail;\r\n                this.tail = newTail;\r\n            }\r\n            this.tail.next = this.header;\r\n            this.header.pre = this.tail;\r\n        };\r\n        LinkList.prototype.popBack = function () {\r\n            if (!this.tail)\r\n                return;\r\n            this.length -= 1;\r\n            if (this.head === this.tail) {\r\n                this.head = this.tail = undefined;\r\n                this.header.next = undefined;\r\n            }\r\n            else {\r\n                this.tail = this.tail.pre;\r\n                if (this.tail)\r\n                    this.tail.next = undefined;\r\n            }\r\n            this.header.pre = this.tail;\r\n            if (this.tail)\r\n                this.tail.next = this.header;\r\n        };\r\n        LinkList.prototype.setElementByPos = function (pos, element) {\r\n            checkWithinAccessParams(pos, 0, this.length - 1);\r\n            var curNode = this.head;\r\n            while (pos--) {\r\n                curNode = curNode.next;\r\n            }\r\n            curNode.value = element;\r\n        };\r\n        LinkList.prototype.insert = function (pos, element, num) {\r\n            if (num === void 0) { num = 1; }\r\n            checkWithinAccessParams(pos, 0, this.length);\r\n            if (num <= 0)\r\n                return;\r\n            if (pos === 0) {\r\n                while (num--)\r\n                    this.pushFront(element);\r\n            }\r\n            else if (pos === this.length) {\r\n                while (num--)\r\n                    this.pushBack(element);\r\n            }\r\n            else {\r\n                var curNode = this.head;\r\n                for (var i = 1; i < pos; ++i) {\r\n                    curNode = curNode.next;\r\n                }\r\n                var next = curNode.next;\r\n                this.length += num;\r\n                while (num--) {\r\n                    curNode.next = new LinkNode(element);\r\n                    curNode.next.pre = curNode;\r\n                    curNode = curNode.next;\r\n                }\r\n                curNode.next = next;\r\n                if (next)\r\n                    next.pre = curNode;\r\n            }\r\n        };\r\n        LinkList.prototype.find = function (element) {\r\n            if (!this.head)\r\n                return this.end();\r\n            var curNode = this.head;\r\n            while (curNode !== this.header) {\r\n                if (curNode.value === element) {\r\n                    return new LinkListIterator(curNode, this.header);\r\n                }\r\n                curNode = curNode.next;\r\n            }\r\n            return this.end();\r\n        };\r\n        LinkList.prototype.reverse = function () {\r\n            if (this.length <= 1)\r\n                return;\r\n            var pHead = this.head;\r\n            var pTail = this.tail;\r\n            var cnt = 0;\r\n            while ((cnt << 1) < this.length) {\r\n                var tmp = pHead.value;\r\n                pHead.value = pTail.value;\r\n                pTail.value = tmp;\r\n                pHead = pHead.next;\r\n                pTail = pTail.pre;\r\n                cnt += 1;\r\n            }\r\n        };\r\n        LinkList.prototype.unique = function () {\r\n            if (this.length <= 1)\r\n                return;\r\n            var curNode = this.head;\r\n            while (curNode !== this.header) {\r\n                var tmpNode = curNode;\r\n                while (tmpNode.next && tmpNode.value === tmpNode.next.value) {\r\n                    tmpNode = tmpNode.next;\r\n                    this.length -= 1;\r\n                }\r\n                curNode.next = tmpNode.next;\r\n                if (curNode.next)\r\n                    curNode.next.pre = curNode;\r\n                curNode = curNode.next;\r\n            }\r\n        };\r\n        LinkList.prototype.sort = function (cmp) {\r\n            if (this.length <= 1)\r\n                return;\r\n            var arr = [];\r\n            this.forEach(function (element) { return arr.push(element); });\r\n            arr.sort(cmp);\r\n            var curNode = this.head;\r\n            arr.forEach(function (element) {\r\n                curNode.value = element;\r\n                curNode = curNode.next;\r\n            });\r\n        };\r\n        /**\r\n         * @description Push an element to the front.\r\n         * @param element The element you want to push.\r\n         */\r\n        LinkList.prototype.pushFront = function (element) {\r\n            this.length += 1;\r\n            var newHead = new LinkNode(element);\r\n            if (!this.head) {\r\n                this.head = this.tail = newHead;\r\n                this.tail.next = this.header;\r\n                this.header.pre = this.tail;\r\n            }\r\n            else {\r\n                newHead.next = this.head;\r\n                this.head.pre = newHead;\r\n                this.head = newHead;\r\n            }\r\n            this.header.next = this.head;\r\n            this.head.pre = this.header;\r\n        };\r\n        /**\r\n         * @description Removes the first element.\r\n         */\r\n        LinkList.prototype.popFront = function () {\r\n            if (!this.head)\r\n                return;\r\n            this.length -= 1;\r\n            if (this.head === this.tail) {\r\n                this.head = this.tail = undefined;\r\n                this.header.pre = this.tail;\r\n            }\r\n            else {\r\n                this.head = this.head.next;\r\n                if (this.head)\r\n                    this.head.pre = this.header;\r\n            }\r\n            this.header.next = this.head;\r\n        };\r\n        /**\r\n         * @description Merges two sorted lists.\r\n         * @param list The other list you want to merge (must be sorted).\r\n         */\r\n        LinkList.prototype.merge = function (list) {\r\n            var _this = this;\r\n            if (!this.head) {\r\n                list.forEach(function (element) { return _this.pushBack(element); });\r\n                return;\r\n            }\r\n            var curNode = this.head;\r\n            list.forEach(function (element) {\r\n                while (curNode &&\r\n                    curNode !== _this.header &&\r\n                    curNode.value <= element) {\r\n                    curNode = curNode.next;\r\n                }\r\n                if (curNode === _this.header) {\r\n                    _this.pushBack(element);\r\n                    curNode = _this.tail;\r\n                }\r\n                else if (curNode === _this.head) {\r\n                    _this.pushFront(element);\r\n                    curNode = _this.head;\r\n                }\r\n                else {\r\n                    _this.length += 1;\r\n                    var pre = curNode.pre;\r\n                    pre.next = new LinkNode(element);\r\n                    pre.next.pre = pre;\r\n                    pre.next.next = curNode;\r\n                    curNode.pre = pre.next;\r\n                }\r\n            });\r\n        };\r\n        LinkList.prototype[Symbol.iterator] = function () {\r\n            return function () {\r\n                var curNode;\r\n                return __generator(this, function (_a) {\r\n                    switch (_a.label) {\r\n                        case 0:\r\n                            if (!this.head)\r\n                                return [2 /*return*/];\r\n                            curNode = this.head;\r\n                            _a.label = 1;\r\n                        case 1:\r\n                            if (!(curNode !== this.header)) return [3 /*break*/, 3];\r\n                            return [4 /*yield*/, curNode.value];\r\n                        case 2:\r\n                            _a.sent();\r\n                            curNode = curNode.next;\r\n                            return [3 /*break*/, 1];\r\n                        case 3: return [2 /*return*/];\r\n                    }\r\n                });\r\n            }.bind(this)();\r\n        };\r\n        return LinkList;\r\n    }(SequentialContainer));\n\n    var TreeNode = /** @class */ (function () {\r\n        function TreeNode(key, value) {\r\n            this.color = true;\r\n            this.key = undefined;\r\n            this.value = undefined;\r\n            this.left = undefined;\r\n            this.right = undefined;\r\n            this.parent = undefined;\r\n            this.key = key;\r\n            this.value = value;\r\n        }\r\n        /**\r\n         * @description Get the pre node.\r\n         * @return TreeNode about the pre node.\r\n         */\r\n        TreeNode.prototype.pre = function () {\r\n            var preNode = this;\r\n            if (preNode.color === TreeNode.RED &&\r\n                preNode.parent.parent === preNode) {\r\n                preNode = preNode.right;\r\n            }\r\n            else if (preNode.left) {\r\n                preNode = preNode.left;\r\n                while (preNode.right) {\r\n                    preNode = preNode.right;\r\n                }\r\n            }\r\n            else {\r\n                var pre = preNode.parent;\r\n                while (pre.left === preNode) {\r\n                    preNode = pre;\r\n                    pre = preNode.parent;\r\n                }\r\n                preNode = pre;\r\n            }\r\n            return preNode;\r\n        };\r\n        /**\r\n         * @description Get the next node.\r\n         * @return TreeNode about the next node.\r\n         */\r\n        TreeNode.prototype.next = function () {\r\n            var nextNode = this;\r\n            if (nextNode.right) {\r\n                nextNode = nextNode.right;\r\n                while (nextNode.left) {\r\n                    nextNode = nextNode.left;\r\n                }\r\n            }\r\n            else {\r\n                var pre = nextNode.parent;\r\n                while (pre.right === nextNode) {\r\n                    nextNode = pre;\r\n                    pre = nextNode.parent;\r\n                }\r\n                if (nextNode.right !== pre) {\r\n                    nextNode = pre;\r\n                }\r\n            }\r\n            return nextNode;\r\n        };\r\n        /**\r\n         * @description Rotate left.\r\n         * @return TreeNode about moved to original position after rotation.\r\n         */\r\n        TreeNode.prototype.rotateLeft = function () {\r\n            var PP = this.parent;\r\n            var V = this.right;\r\n            var R = V.left;\r\n            if (PP.parent === this)\r\n                PP.parent = V;\r\n            else if (PP.left === this)\r\n                PP.left = V;\r\n            else\r\n                PP.right = V;\r\n            V.parent = PP;\r\n            V.left = this;\r\n            this.parent = V;\r\n            this.right = R;\r\n            if (R)\r\n                R.parent = this;\r\n            return V;\r\n        };\r\n        /**\r\n         * @description Rotate left.\r\n         * @return TreeNode about moved to original position after rotation.\r\n         */\r\n        TreeNode.prototype.rotateRight = function () {\r\n            var PP = this.parent;\r\n            var F = this.left;\r\n            var K = F.right;\r\n            if (PP.parent === this)\r\n                PP.parent = F;\r\n            else if (PP.left === this)\r\n                PP.left = F;\r\n            else\r\n                PP.right = F;\r\n            F.parent = PP;\r\n            F.right = this;\r\n            this.parent = F;\r\n            this.left = K;\r\n            if (K)\r\n                K.parent = this;\r\n            return F;\r\n        };\r\n        /**\r\n         * @description Remove this.\r\n         */\r\n        TreeNode.prototype.remove = function () {\r\n            var parent = this.parent;\r\n            if (this === parent.left) {\r\n                parent.left = undefined;\r\n            }\r\n            else\r\n                parent.right = undefined;\r\n        };\r\n        TreeNode.RED = true;\r\n        TreeNode.BLACK = false;\r\n        return TreeNode;\r\n    }());\n\n    var TreeContainer = /** @class */ (function (_super) {\r\n        __extends(TreeContainer, _super);\r\n        function TreeContainer(cmp) {\r\n            if (cmp === void 0) { cmp = function (x, y) {\r\n                if (x < y)\r\n                    return -1;\r\n                if (x > y)\r\n                    return 1;\r\n                return 0;\r\n            }; }\r\n            var _this = _super.call(this) || this;\r\n            _this.root = undefined;\r\n            _this.header = new TreeNode();\r\n            /**\r\n             * @description InOrder traversal the tree.\r\n             * @protected\r\n             */\r\n            _this.inOrderTraversal = function (curNode, callback) {\r\n                if (curNode === undefined)\r\n                    return false;\r\n                var ifReturn = _this.inOrderTraversal(curNode.left, callback);\r\n                if (ifReturn)\r\n                    return true;\r\n                if (callback(curNode))\r\n                    return true;\r\n                return _this.inOrderTraversal(curNode.right, callback);\r\n            };\r\n            _this.cmp = cmp;\r\n            return _this;\r\n        }\r\n        /**\r\n         * @param curNode The starting node of the search.\r\n         * @param key The key you want to search.\r\n         * @return TreeNode which key is greater than or equals to the given key.\r\n         * @protected\r\n         */\r\n        TreeContainer.prototype._lowerBound = function (curNode, key) {\r\n            var resNode;\r\n            while (curNode) {\r\n                var cmpResult = this.cmp(curNode.key, key);\r\n                if (cmpResult < 0) {\r\n                    curNode = curNode.right;\r\n                }\r\n                else if (cmpResult > 0) {\r\n                    resNode = curNode;\r\n                    curNode = curNode.left;\r\n                }\r\n                else\r\n                    return curNode;\r\n            }\r\n            return resNode === undefined ? this.header : resNode;\r\n        };\r\n        /**\r\n         * @param curNode The starting node of the search.\r\n         * @param key The key you want to search.\r\n         * @return TreeNode which key is greater than the given key.\r\n         * @protected\r\n         */\r\n        TreeContainer.prototype._upperBound = function (curNode, key) {\r\n            var resNode;\r\n            while (curNode) {\r\n                var cmpResult = this.cmp(curNode.key, key);\r\n                if (cmpResult <= 0) {\r\n                    curNode = curNode.right;\r\n                }\r\n                else if (cmpResult > 0) {\r\n                    resNode = curNode;\r\n                    curNode = curNode.left;\r\n                }\r\n            }\r\n            return resNode === undefined ? this.header : resNode;\r\n        };\r\n        /**\r\n         * @param curNode The starting node of the search.\r\n         * @param key The key you want to search.\r\n         * @return TreeNode which key is less than or equals to the given key.\r\n         * @protected\r\n         */\r\n        TreeContainer.prototype._reverseLowerBound = function (curNode, key) {\r\n            var resNode;\r\n            while (curNode) {\r\n                var cmpResult = this.cmp(curNode.key, key);\r\n                if (cmpResult < 0) {\r\n                    resNode = curNode;\r\n                    curNode = curNode.right;\r\n                }\r\n                else if (cmpResult > 0) {\r\n                    curNode = curNode.left;\r\n                }\r\n                else\r\n                    return curNode;\r\n            }\r\n            return resNode === undefined ? this.header : resNode;\r\n        };\r\n        /**\r\n         * @param curNode The starting node of the search.\r\n         * @param key The key you want to search.\r\n         * @return TreeNode which key is less than the given key.\r\n         * @protected\r\n         */\r\n        TreeContainer.prototype._reverseUpperBound = function (curNode, key) {\r\n            var resNode;\r\n            while (curNode) {\r\n                var cmpResult = this.cmp(curNode.key, key);\r\n                if (cmpResult < 0) {\r\n                    resNode = curNode;\r\n                    curNode = curNode.right;\r\n                }\r\n                else if (cmpResult >= 0) {\r\n                    curNode = curNode.left;\r\n                }\r\n            }\r\n            return resNode === undefined ? this.header : resNode;\r\n        };\r\n        /**\r\n         * @description Make self balance after erase a node.\r\n         * @param curNode The node want to remove.\r\n         * @protected\r\n         */\r\n        TreeContainer.prototype.eraseNodeSelfBalance = function (curNode) {\r\n            while (true) {\r\n                var parentNode = curNode.parent;\r\n                if (parentNode === this.header)\r\n                    return;\r\n                if (curNode.color === TreeNode.RED) {\r\n                    curNode.color = TreeNode.BLACK;\r\n                    return;\r\n                }\r\n                if (curNode === parentNode.left) {\r\n                    var brother = parentNode.right;\r\n                    if (brother.color === TreeNode.RED) {\r\n                        brother.color = TreeNode.BLACK;\r\n                        parentNode.color = TreeNode.RED;\r\n                        if (parentNode === this.root) {\r\n                            this.root = parentNode.rotateLeft();\r\n                        }\r\n                        else\r\n                            parentNode.rotateLeft();\r\n                    }\r\n                    else if (brother.color === TreeNode.BLACK) {\r\n                        if (brother.right && brother.right.color === TreeNode.RED) {\r\n                            brother.color = parentNode.color;\r\n                            parentNode.color = TreeNode.BLACK;\r\n                            brother.right.color = TreeNode.BLACK;\r\n                            if (parentNode === this.root) {\r\n                                this.root = parentNode.rotateLeft();\r\n                            }\r\n                            else\r\n                                parentNode.rotateLeft();\r\n                            return;\r\n                        }\r\n                        else if (brother.left && brother.left.color === TreeNode.RED) {\r\n                            brother.color = TreeNode.RED;\r\n                            brother.left.color = TreeNode.BLACK;\r\n                            brother.rotateRight();\r\n                        }\r\n                        else {\r\n                            brother.color = TreeNode.RED;\r\n                            curNode = parentNode;\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    var brother = parentNode.left;\r\n                    if (brother.color === TreeNode.RED) {\r\n                        brother.color = TreeNode.BLACK;\r\n                        parentNode.color = TreeNode.RED;\r\n                        if (parentNode === this.root) {\r\n                            this.root = parentNode.rotateRight();\r\n                        }\r\n                        else\r\n                            parentNode.rotateRight();\r\n                    }\r\n                    else {\r\n                        if (brother.left && brother.left.color === TreeNode.RED) {\r\n                            brother.color = parentNode.color;\r\n                            parentNode.color = TreeNode.BLACK;\r\n                            brother.left.color = TreeNode.BLACK;\r\n                            if (parentNode === this.root) {\r\n                                this.root = parentNode.rotateRight();\r\n                            }\r\n                            else\r\n                                parentNode.rotateRight();\r\n                            return;\r\n                        }\r\n                        else if (brother.right && brother.right.color === TreeNode.RED) {\r\n                            brother.color = TreeNode.RED;\r\n                            brother.right.color = TreeNode.BLACK;\r\n                            brother.rotateLeft();\r\n                        }\r\n                        else {\r\n                            brother.color = TreeNode.RED;\r\n                            curNode = parentNode;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        /**\r\n         * @description Remove a node.\r\n         * @param curNode The node you want to remove.\r\n         * @protected\r\n         */\r\n        TreeContainer.prototype.eraseNode = function (curNode) {\r\n            var _a, _b;\r\n            if (this.length === 1) {\r\n                this.clear();\r\n                return;\r\n            }\r\n            var swapNode = curNode;\r\n            while (swapNode.left || swapNode.right) {\r\n                if (swapNode.right) {\r\n                    swapNode = swapNode.right;\r\n                    while (swapNode.left)\r\n                        swapNode = swapNode.left;\r\n                }\r\n                else if (swapNode.left) {\r\n                    swapNode = swapNode.left;\r\n                }\r\n                _a = __read([swapNode.key, curNode.key], 2), curNode.key = _a[0], swapNode.key = _a[1];\r\n                _b = __read([swapNode.value, curNode.value], 2), curNode.value = _b[0], swapNode.value = _b[1];\r\n                curNode = swapNode;\r\n            }\r\n            if (this.header.left === swapNode) {\r\n                this.header.left = swapNode.parent;\r\n            }\r\n            else if (this.header.right === swapNode) {\r\n                this.header.right = swapNode.parent;\r\n            }\r\n            this.eraseNodeSelfBalance(swapNode);\r\n            swapNode.remove();\r\n            this.length -= 1;\r\n            this.root.color = TreeNode.BLACK;\r\n        };\r\n        /**\r\n         * @description Make self balance after insert a node.\r\n         * @param curNode The node want to insert.\r\n         * @protected\r\n         */\r\n        TreeContainer.prototype.insertNodeSelfBalance = function (curNode) {\r\n            while (true) {\r\n                var parentNode = curNode.parent;\r\n                if (parentNode.color === TreeNode.BLACK)\r\n                    return;\r\n                var grandParent = parentNode.parent;\r\n                if (parentNode === grandParent.left) {\r\n                    var uncle = grandParent.right;\r\n                    if (uncle && uncle.color === TreeNode.RED) {\r\n                        uncle.color = parentNode.color = TreeNode.BLACK;\r\n                        if (grandParent === this.root)\r\n                            return;\r\n                        grandParent.color = TreeNode.RED;\r\n                        curNode = grandParent;\r\n                        continue;\r\n                    }\r\n                    else if (curNode === parentNode.right) {\r\n                        curNode.color = TreeNode.BLACK;\r\n                        if (curNode.left)\r\n                            curNode.left.parent = parentNode;\r\n                        if (curNode.right)\r\n                            curNode.right.parent = grandParent;\r\n                        parentNode.right = curNode.left;\r\n                        grandParent.left = curNode.right;\r\n                        curNode.left = parentNode;\r\n                        curNode.right = grandParent;\r\n                        if (grandParent === this.root) {\r\n                            this.root = curNode;\r\n                            this.header.parent = curNode;\r\n                        }\r\n                        else {\r\n                            var GP = grandParent.parent;\r\n                            if (GP.left === grandParent) {\r\n                                GP.left = curNode;\r\n                            }\r\n                            else\r\n                                GP.right = curNode;\r\n                        }\r\n                        curNode.parent = grandParent.parent;\r\n                        parentNode.parent = curNode;\r\n                        grandParent.parent = curNode;\r\n                    }\r\n                    else {\r\n                        parentNode.color = TreeNode.BLACK;\r\n                        if (grandParent === this.root) {\r\n                            this.root = grandParent.rotateRight();\r\n                        }\r\n                        else\r\n                            grandParent.rotateRight();\r\n                    }\r\n                    grandParent.color = TreeNode.RED;\r\n                }\r\n                else {\r\n                    var uncle = grandParent.left;\r\n                    if (uncle && uncle.color === TreeNode.RED) {\r\n                        uncle.color = parentNode.color = TreeNode.BLACK;\r\n                        if (grandParent === this.root)\r\n                            return;\r\n                        grandParent.color = TreeNode.RED;\r\n                        curNode = grandParent;\r\n                        continue;\r\n                    }\r\n                    else if (curNode === parentNode.left) {\r\n                        curNode.color = TreeNode.BLACK;\r\n                        if (curNode.left)\r\n                            curNode.left.parent = grandParent;\r\n                        if (curNode.right)\r\n                            curNode.right.parent = parentNode;\r\n                        grandParent.right = curNode.left;\r\n                        parentNode.left = curNode.right;\r\n                        curNode.left = grandParent;\r\n                        curNode.right = parentNode;\r\n                        if (grandParent === this.root) {\r\n                            this.root = curNode;\r\n                            this.header.parent = curNode;\r\n                        }\r\n                        else {\r\n                            var GP = grandParent.parent;\r\n                            if (GP.left === grandParent) {\r\n                                GP.left = curNode;\r\n                            }\r\n                            else\r\n                                GP.right = curNode;\r\n                        }\r\n                        curNode.parent = grandParent.parent;\r\n                        parentNode.parent = curNode;\r\n                        grandParent.parent = curNode;\r\n                    }\r\n                    else {\r\n                        parentNode.color = TreeNode.BLACK;\r\n                        if (grandParent === this.root) {\r\n                            this.root = grandParent.rotateLeft();\r\n                        }\r\n                        else\r\n                            grandParent.rotateLeft();\r\n                    }\r\n                    grandParent.color = TreeNode.RED;\r\n                }\r\n                return;\r\n            }\r\n        };\r\n        /**\r\n         * @description Find node which key is equals to the given key.\r\n         * @param curNode The starting node of the search.\r\n         * @param key The key you want to search.\r\n         * @protected\r\n         */\r\n        TreeContainer.prototype.findElementNode = function (curNode, key) {\r\n            while (curNode) {\r\n                var cmpResult = this.cmp(curNode.key, key);\r\n                if (cmpResult < 0) {\r\n                    curNode = curNode.right;\r\n                }\r\n                else if (cmpResult > 0) {\r\n                    curNode = curNode.left;\r\n                }\r\n                else\r\n                    return curNode;\r\n            }\r\n            return curNode;\r\n        };\r\n        /**\r\n         * @description Insert a key-value pair or set value by the given key.\r\n         * @param key The key want to insert.\r\n         * @param value The value want to set.\r\n         * @param hint You can give an iterator hint to improve insertion efficiency.\r\n         * @protected\r\n         */\r\n        TreeContainer.prototype.set = function (key, value, hint) {\r\n            if (this.root === undefined) {\r\n                this.length += 1;\r\n                this.root = new TreeNode(key, value);\r\n                this.root.color = TreeNode.BLACK;\r\n                this.root.parent = this.header;\r\n                this.header.parent = this.root;\r\n                this.header.left = this.root;\r\n                this.header.right = this.root;\r\n                return;\r\n            }\r\n            var curNode;\r\n            var minNode = this.header.left;\r\n            var compareToMin = this.cmp(minNode.key, key);\r\n            if (compareToMin === 0) {\r\n                minNode.value = value;\r\n                return;\r\n            }\r\n            else if (compareToMin > 0) {\r\n                minNode.left = new TreeNode(key, value);\r\n                minNode.left.parent = minNode;\r\n                curNode = minNode.left;\r\n                this.header.left = curNode;\r\n            }\r\n            else {\r\n                var maxNode = this.header.right;\r\n                var compareToMax = this.cmp(maxNode.key, key);\r\n                if (compareToMax === 0) {\r\n                    maxNode.value = value;\r\n                    return;\r\n                }\r\n                else if (compareToMax < 0) {\r\n                    maxNode.right = new TreeNode(key, value);\r\n                    maxNode.right.parent = maxNode;\r\n                    curNode = maxNode.right;\r\n                    this.header.right = curNode;\r\n                }\r\n                else {\r\n                    if (hint !== undefined) {\r\n                        // @ts-ignore\r\n                        var iterNode = hint.node;\r\n                        if (iterNode !== this.header) {\r\n                            var iterCmpRes = this.cmp(iterNode.key, key);\r\n                            if (iterCmpRes === 0) {\r\n                                iterNode.value = value;\r\n                                return;\r\n                            }\r\n                            else if (iterCmpRes > 0) {\r\n                                var preNode = iterNode.pre();\r\n                                var preCmpRes = this.cmp(preNode.key, key);\r\n                                if (preCmpRes === 0) {\r\n                                    preNode.value = value;\r\n                                    return;\r\n                                }\r\n                                else if (preCmpRes < 0) {\r\n                                    curNode = new TreeNode(key, value);\r\n                                    if (preNode.right === undefined) {\r\n                                        preNode.right = curNode;\r\n                                        curNode.parent = preNode;\r\n                                    }\r\n                                    else {\r\n                                        iterNode.left = curNode;\r\n                                        curNode.parent = iterNode;\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    if (curNode === undefined) {\r\n                        curNode = this.root;\r\n                        while (true) {\r\n                            var cmpResult = this.cmp(curNode.key, key);\r\n                            if (cmpResult > 0) {\r\n                                if (curNode.left === undefined) {\r\n                                    curNode.left = new TreeNode(key, value);\r\n                                    curNode.left.parent = curNode;\r\n                                    curNode = curNode.left;\r\n                                    break;\r\n                                }\r\n                                curNode = curNode.left;\r\n                            }\r\n                            else if (cmpResult < 0) {\r\n                                if (curNode.right === undefined) {\r\n                                    curNode.right = new TreeNode(key, value);\r\n                                    curNode.right.parent = curNode;\r\n                                    curNode = curNode.right;\r\n                                    break;\r\n                                }\r\n                                curNode = curNode.right;\r\n                            }\r\n                            else {\r\n                                curNode.value = value;\r\n                                return;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            this.length += 1;\r\n            this.insertNodeSelfBalance(curNode);\r\n        };\r\n        TreeContainer.prototype.clear = function () {\r\n            this.length = 0;\r\n            this.root = undefined;\r\n            this.header.parent = undefined;\r\n            this.header.left = this.header.right = undefined;\r\n        };\r\n        /**\r\n         * @description Update node's key by iterator.\r\n         * @param iter The iterator you want to change.\r\n         * @param key The key you want to update.\r\n         * @return Boolean about if the modification is successful.\r\n         */\r\n        TreeContainer.prototype.updateKeyByIterator = function (iter, key) {\r\n            // @ts-ignore\r\n            var node = iter.node;\r\n            if (node === this.header) {\r\n                throw new TypeError('Invalid iterator!');\r\n            }\r\n            if (this.length === 1) {\r\n                node.key = key;\r\n                return true;\r\n            }\r\n            if (node === this.header.left) {\r\n                if (this.cmp(node.next().key, key) > 0) {\r\n                    node.key = key;\r\n                    return true;\r\n                }\r\n                return false;\r\n            }\r\n            if (node === this.header.right) {\r\n                if (this.cmp(node.pre().key, key) < 0) {\r\n                    node.key = key;\r\n                    return true;\r\n                }\r\n                return false;\r\n            }\r\n            var preKey = node.pre().key;\r\n            if (this.cmp(preKey, key) >= 0)\r\n                return false;\r\n            var nextKey = node.next().key;\r\n            if (this.cmp(nextKey, key) <= 0)\r\n                return false;\r\n            node.key = key;\r\n            return true;\r\n        };\r\n        TreeContainer.prototype.eraseElementByPos = function (pos) {\r\n            var _this = this;\r\n            checkWithinAccessParams(pos, 0, this.length - 1);\r\n            var index = 0;\r\n            this.inOrderTraversal(this.root, function (curNode) {\r\n                if (pos === index) {\r\n                    _this.eraseNode(curNode);\r\n                    return true;\r\n                }\r\n                index += 1;\r\n                return false;\r\n            });\r\n        };\r\n        /**\r\n         * @description Remove the element of the specified key.\r\n         * @param key The key you want to remove.\r\n         */\r\n        TreeContainer.prototype.eraseElementByKey = function (key) {\r\n            if (!this.length)\r\n                return;\r\n            var curNode = this.findElementNode(this.root, key);\r\n            if (curNode === undefined)\r\n                return;\r\n            this.eraseNode(curNode);\r\n        };\r\n        TreeContainer.prototype.eraseElementByIterator = function (iter) {\r\n            // @ts-ignore\r\n            var node = iter.node;\r\n            if (node === this.header) {\r\n                throw new RangeError('Invalid iterator');\r\n            }\r\n            if (node.right === undefined) {\r\n                iter = iter.next();\r\n            }\r\n            this.eraseNode(node);\r\n            return iter;\r\n        };\r\n        /**\r\n         * @description Get the height of the tree.\r\n         * @return Number about the height of the RB-tree.\r\n         */\r\n        TreeContainer.prototype.getHeight = function () {\r\n            if (!this.length)\r\n                return 0;\r\n            var traversal = function (curNode) {\r\n                if (!curNode)\r\n                    return 0;\r\n                return Math.max(traversal(curNode.left), traversal(curNode.right)) + 1;\r\n            };\r\n            return traversal(this.root);\r\n        };\r\n        return TreeContainer;\r\n    }(Container));\n\n    var TreeIterator = /** @class */ (function (_super) {\r\n        __extends(TreeIterator, _super);\r\n        function TreeIterator(node, header, iteratorType) {\r\n            var _this = _super.call(this, iteratorType) || this;\r\n            _this.node = node;\r\n            _this.header = header;\r\n            if (_this.iteratorType === ContainerIterator.NORMAL) {\r\n                _this.pre = function () {\r\n                    if (this.node === this.header.left) {\r\n                        throw new RangeError('LinkList iterator access denied!');\r\n                    }\r\n                    this.node = this.node.pre();\r\n                    return this;\r\n                };\r\n                _this.next = function () {\r\n                    if (this.node === this.header) {\r\n                        throw new RangeError('LinkList iterator access denied!');\r\n                    }\r\n                    this.node = this.node.next();\r\n                    return this;\r\n                };\r\n            }\r\n            else {\r\n                _this.pre = function () {\r\n                    if (this.node === this.header.right) {\r\n                        throw new RangeError('LinkList iterator access denied!');\r\n                    }\r\n                    this.node = this.node.next();\r\n                    return this;\r\n                };\r\n                _this.next = function () {\r\n                    if (this.node === this.header) {\r\n                        throw new RangeError('LinkList iterator access denied!');\r\n                    }\r\n                    this.node = this.node.pre();\r\n                    return this;\r\n                };\r\n            }\r\n            return _this;\r\n        }\r\n        TreeIterator.prototype.equals = function (obj) {\r\n            return this.node === obj.node;\r\n        };\r\n        return TreeIterator;\r\n    }(ContainerIterator));\n\n    var OrderedSetIterator = /** @class */ (function (_super) {\r\n        __extends(OrderedSetIterator, _super);\r\n        function OrderedSetIterator() {\r\n            return _super !== null && _super.apply(this, arguments) || this;\r\n        }\r\n        Object.defineProperty(OrderedSetIterator.prototype, \"pointer\", {\r\n            get: function () {\r\n                if (this.node === this.header) {\r\n                    throw new RangeError('OrderedSet iterator access denied!');\r\n                }\r\n                return this.node.key;\r\n            },\r\n            enumerable: false,\r\n            configurable: true\r\n        });\r\n        OrderedSetIterator.prototype.copy = function () {\r\n            return new OrderedSetIterator(this.node, this.header, this.iteratorType);\r\n        };\r\n        return OrderedSetIterator;\r\n    }(TreeIterator));\r\n    var OrderedSet = /** @class */ (function (_super) {\r\n        __extends(OrderedSet, _super);\r\n        function OrderedSet(container, cmp) {\r\n            if (container === void 0) { container = []; }\r\n            var _this = _super.call(this, cmp) || this;\r\n            _this.iterationFunc = function (curNode) {\r\n                return __generator(this, function (_a) {\r\n                    switch (_a.label) {\r\n                        case 0:\r\n                            if (curNode === undefined)\r\n                                return [2 /*return*/];\r\n                            return [5 /*yield**/, __values(this.iterationFunc(curNode.left))];\r\n                        case 1:\r\n                            _a.sent();\r\n                            return [4 /*yield*/, curNode.key];\r\n                        case 2:\r\n                            _a.sent();\r\n                            return [5 /*yield**/, __values(this.iterationFunc(curNode.right))];\r\n                        case 3:\r\n                            _a.sent();\r\n                            return [2 /*return*/];\r\n                    }\r\n                });\r\n            };\r\n            container.forEach(function (element) { return _this.insert(element); });\r\n            _this.iterationFunc = _this.iterationFunc.bind(_this);\r\n            return _this;\r\n        }\r\n        OrderedSet.prototype.begin = function () {\r\n            return new OrderedSetIterator(this.header.left || this.header, this.header);\r\n        };\r\n        OrderedSet.prototype.end = function () {\r\n            return new OrderedSetIterator(this.header, this.header);\r\n        };\r\n        OrderedSet.prototype.rBegin = function () {\r\n            return new OrderedSetIterator(this.header.right || this.header, this.header, ContainerIterator.REVERSE);\r\n        };\r\n        OrderedSet.prototype.rEnd = function () {\r\n            return new OrderedSetIterator(this.header, this.header, ContainerIterator.REVERSE);\r\n        };\r\n        OrderedSet.prototype.front = function () {\r\n            return this.header.left ? this.header.left.key : undefined;\r\n        };\r\n        OrderedSet.prototype.back = function () {\r\n            return this.header.right ? this.header.right.key : undefined;\r\n        };\r\n        OrderedSet.prototype.forEach = function (callback) {\r\n            var e_1, _a;\r\n            var index = 0;\r\n            try {\r\n                for (var _b = __values(this), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                    var element = _c.value;\r\n                    callback(element, index++);\r\n                }\r\n            }\r\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n            finally {\r\n                try {\r\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n                }\r\n                finally { if (e_1) throw e_1.error; }\r\n            }\r\n        };\r\n        OrderedSet.prototype.getElementByPos = function (pos) {\r\n            var e_2, _a;\r\n            checkWithinAccessParams(pos, 0, this.length - 1);\r\n            var res;\r\n            var index = 0;\r\n            try {\r\n                for (var _b = __values(this), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                    var element = _c.value;\r\n                    if (index === pos) {\r\n                        res = element;\r\n                    }\r\n                    index += 1;\r\n                }\r\n            }\r\n            catch (e_2_1) { e_2 = { error: e_2_1 }; }\r\n            finally {\r\n                try {\r\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n                }\r\n                finally { if (e_2) throw e_2.error; }\r\n            }\r\n            return res;\r\n        };\r\n        /**\r\n         * @description Insert element to set.\r\n         * @param key The key want to insert.\r\n         * @param hint You can give an iterator hint to improve insertion efficiency.\r\n         */\r\n        OrderedSet.prototype.insert = function (key, hint) {\r\n            this.set(key, undefined, hint);\r\n        };\r\n        OrderedSet.prototype.find = function (element) {\r\n            var curNode = this.findElementNode(this.root, element);\r\n            if (curNode !== undefined) {\r\n                return new OrderedSetIterator(curNode, this.header);\r\n            }\r\n            return this.end();\r\n        };\r\n        OrderedSet.prototype.lowerBound = function (key) {\r\n            var resNode = this._lowerBound(this.root, key);\r\n            return new OrderedSetIterator(resNode, this.header);\r\n        };\r\n        OrderedSet.prototype.upperBound = function (key) {\r\n            var resNode = this._upperBound(this.root, key);\r\n            return new OrderedSetIterator(resNode, this.header);\r\n        };\r\n        OrderedSet.prototype.reverseLowerBound = function (key) {\r\n            var resNode = this._reverseLowerBound(this.root, key);\r\n            return new OrderedSetIterator(resNode, this.header);\r\n        };\r\n        OrderedSet.prototype.reverseUpperBound = function (key) {\r\n            var resNode = this._reverseUpperBound(this.root, key);\r\n            return new OrderedSetIterator(resNode, this.header);\r\n        };\r\n        OrderedSet.prototype.union = function (other) {\r\n            var _this = this;\r\n            other.forEach(function (element) { return _this.insert(element); });\r\n        };\r\n        OrderedSet.prototype[Symbol.iterator] = function () {\r\n            return this.iterationFunc(this.root);\r\n        };\r\n        return OrderedSet;\r\n    }(TreeContainer));\n\n    var OrderedMapIterator = /** @class */ (function (_super) {\r\n        __extends(OrderedMapIterator, _super);\r\n        function OrderedMapIterator() {\r\n            return _super !== null && _super.apply(this, arguments) || this;\r\n        }\r\n        Object.defineProperty(OrderedMapIterator.prototype, \"pointer\", {\r\n            get: function () {\r\n                var _this = this;\r\n                if (this.node === this.header) {\r\n                    throw new RangeError('OrderedMap iterator access denied');\r\n                }\r\n                return new Proxy([], {\r\n                    get: function (_, props) {\r\n                        if (props === '0')\r\n                            return _this.node.key;\r\n                        else if (props === '1')\r\n                            return _this.node.value;\r\n                    },\r\n                    set: function (_, props, newValue) {\r\n                        if (props !== '1') {\r\n                            throw new TypeError('props must be 1');\r\n                        }\r\n                        _this.node.value = newValue;\r\n                        return true;\r\n                    }\r\n                });\r\n            },\r\n            enumerable: false,\r\n            configurable: true\r\n        });\r\n        OrderedMapIterator.prototype.copy = function () {\r\n            return new OrderedMapIterator(this.node, this.header, this.iteratorType);\r\n        };\r\n        return OrderedMapIterator;\r\n    }(TreeIterator));\r\n    var OrderedMap = /** @class */ (function (_super) {\r\n        __extends(OrderedMap, _super);\r\n        function OrderedMap(container, cmp) {\r\n            if (container === void 0) { container = []; }\r\n            var _this = _super.call(this, cmp) || this;\r\n            _this.iterationFunc = function (curNode) {\r\n                return __generator(this, function (_a) {\r\n                    switch (_a.label) {\r\n                        case 0:\r\n                            if (curNode === undefined)\r\n                                return [2 /*return*/];\r\n                            return [5 /*yield**/, __values(this.iterationFunc(curNode.left))];\r\n                        case 1:\r\n                            _a.sent();\r\n                            return [4 /*yield*/, [curNode.key, curNode.value]];\r\n                        case 2:\r\n                            _a.sent();\r\n                            return [5 /*yield**/, __values(this.iterationFunc(curNode.right))];\r\n                        case 3:\r\n                            _a.sent();\r\n                            return [2 /*return*/];\r\n                    }\r\n                });\r\n            };\r\n            _this.iterationFunc = _this.iterationFunc.bind(_this);\r\n            container.forEach(function (_a) {\r\n                var _b = __read(_a, 2), key = _b[0], value = _b[1];\r\n                return _this.setElement(key, value);\r\n            });\r\n            return _this;\r\n        }\r\n        OrderedMap.prototype.begin = function () {\r\n            return new OrderedMapIterator(this.header.left || this.header, this.header);\r\n        };\r\n        OrderedMap.prototype.end = function () {\r\n            return new OrderedMapIterator(this.header, this.header);\r\n        };\r\n        OrderedMap.prototype.rBegin = function () {\r\n            return new OrderedMapIterator(this.header.right || this.header, this.header, ContainerIterator.REVERSE);\r\n        };\r\n        OrderedMap.prototype.rEnd = function () {\r\n            return new OrderedMapIterator(this.header, this.header, ContainerIterator.REVERSE);\r\n        };\r\n        OrderedMap.prototype.front = function () {\r\n            if (!this.length)\r\n                return undefined;\r\n            var minNode = this.header.left;\r\n            return [minNode.key, minNode.value];\r\n        };\r\n        OrderedMap.prototype.back = function () {\r\n            if (!this.length)\r\n                return undefined;\r\n            var maxNode = this.header.right;\r\n            return [maxNode.key, maxNode.value];\r\n        };\r\n        OrderedMap.prototype.forEach = function (callback) {\r\n            var e_1, _a;\r\n            var index = 0;\r\n            try {\r\n                for (var _b = __values(this), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                    var pair = _c.value;\r\n                    callback(pair, index++);\r\n                }\r\n            }\r\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n            finally {\r\n                try {\r\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n                }\r\n                finally { if (e_1) throw e_1.error; }\r\n            }\r\n        };\r\n        OrderedMap.prototype.lowerBound = function (key) {\r\n            var resNode = this._lowerBound(this.root, key);\r\n            return new OrderedMapIterator(resNode, this.header);\r\n        };\r\n        OrderedMap.prototype.upperBound = function (key) {\r\n            var resNode = this._upperBound(this.root, key);\r\n            return new OrderedMapIterator(resNode, this.header);\r\n        };\r\n        OrderedMap.prototype.reverseLowerBound = function (key) {\r\n            var resNode = this._reverseLowerBound(this.root, key);\r\n            return new OrderedMapIterator(resNode, this.header);\r\n        };\r\n        OrderedMap.prototype.reverseUpperBound = function (key) {\r\n            var resNode = this._reverseUpperBound(this.root, key);\r\n            return new OrderedMapIterator(resNode, this.header);\r\n        };\r\n        /**\r\n         * @description Insert a key-value pair or set value by the given key.\r\n         * @param key The key want to insert.\r\n         * @param value The value want to set.\r\n         * @param hint You can give an iterator hint to improve insertion efficiency.\r\n         */\r\n        OrderedMap.prototype.setElement = function (key, value, hint) {\r\n            this.set(key, value, hint);\r\n        };\r\n        OrderedMap.prototype.find = function (key) {\r\n            var curNode = this.findElementNode(this.root, key);\r\n            if (curNode !== undefined) {\r\n                return new OrderedMapIterator(curNode, this.header);\r\n            }\r\n            return this.end();\r\n        };\r\n        /**\r\n         * @description Get the value of the element of the specified key.\r\n         */\r\n        OrderedMap.prototype.getElementByKey = function (key) {\r\n            var curNode = this.findElementNode(this.root, key);\r\n            return curNode ? curNode.value : undefined;\r\n        };\r\n        OrderedMap.prototype.getElementByPos = function (pos) {\r\n            var e_2, _a;\r\n            checkWithinAccessParams(pos, 0, this.length - 1);\r\n            var res;\r\n            var index = 0;\r\n            try {\r\n                for (var _b = __values(this), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                    var pair = _c.value;\r\n                    if (index === pos) {\r\n                        res = pair;\r\n                        break;\r\n                    }\r\n                    index += 1;\r\n                }\r\n            }\r\n            catch (e_2_1) { e_2 = { error: e_2_1 }; }\r\n            finally {\r\n                try {\r\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n                }\r\n                finally { if (e_2) throw e_2.error; }\r\n            }\r\n            return res;\r\n        };\r\n        OrderedMap.prototype.union = function (other) {\r\n            var _this = this;\r\n            other.forEach(function (_a) {\r\n                var _b = __read(_a, 2), key = _b[0], value = _b[1];\r\n                return _this.setElement(key, value);\r\n            });\r\n        };\r\n        OrderedMap.prototype[Symbol.iterator] = function () {\r\n            return this.iterationFunc(this.root);\r\n        };\r\n        return OrderedMap;\r\n    }(TreeContainer));\n\n    var HashContainer = /** @class */ (function (_super) {\r\n        __extends(HashContainer, _super);\r\n        function HashContainer(initBucketNum, hashFunc) {\r\n            if (initBucketNum === void 0) { initBucketNum = 16; }\r\n            if (hashFunc === void 0) { hashFunc = function (x) {\r\n                var str;\r\n                if (typeof x !== 'string') {\r\n                    str = JSON.stringify(x);\r\n                }\r\n                else\r\n                    str = x;\r\n                var hashCode = 0;\r\n                var strLength = str.length;\r\n                for (var i = 0; i < strLength; i++) {\r\n                    var ch = str.charCodeAt(i);\r\n                    hashCode = ((hashCode << 5) - hashCode) + ch;\r\n                    hashCode |= 0;\r\n                }\r\n                return hashCode >>> 0;\r\n            }; }\r\n            var _this = _super.call(this) || this;\r\n            if (initBucketNum < 16 || (initBucketNum & (initBucketNum - 1)) !== 0) {\r\n                throw new RangeError('InitBucketNum range error');\r\n            }\r\n            _this.bucketNum = _this.initBucketNum = initBucketNum;\r\n            _this.hashFunc = hashFunc;\r\n            return _this;\r\n        }\r\n        HashContainer.prototype.clear = function () {\r\n            this.length = 0;\r\n            this.bucketNum = this.initBucketNum;\r\n            this.hashTable = [];\r\n        };\r\n        HashContainer.sigma = 0.75;\r\n        HashContainer.treeifyThreshold = 8;\r\n        HashContainer.untreeifyThreshold = 6;\r\n        HashContainer.minTreeifySize = 64;\r\n        HashContainer.maxBucketNum = (1 << 30);\r\n        return HashContainer;\r\n    }(Base));\n\n    var HashSet = /** @class */ (function (_super) {\r\n        __extends(HashSet, _super);\r\n        function HashSet(container, initBucketNum, hashFunc) {\r\n            if (container === void 0) { container = []; }\r\n            var _this = _super.call(this, initBucketNum, hashFunc) || this;\r\n            _this.hashTable = [];\r\n            container.forEach(function (element) { return _this.insert(element); });\r\n            return _this;\r\n        }\r\n        HashSet.prototype.reAllocate = function () {\r\n            var _this = this;\r\n            if (this.bucketNum >= HashContainer.maxBucketNum)\r\n                return;\r\n            var newHashTable = [];\r\n            var originalBucketNum = this.bucketNum;\r\n            this.bucketNum <<= 1;\r\n            var keys = Object.keys(this.hashTable);\r\n            var keyNums = keys.length;\r\n            var _loop_1 = function (i) {\r\n                var index = parseInt(keys[i]);\r\n                var container = this_1.hashTable[index];\r\n                var size = container.size();\r\n                if (size === 0)\r\n                    return \"continue\";\r\n                if (size === 1) {\r\n                    var element = container.front();\r\n                    newHashTable[this_1.hashFunc(element) & (this_1.bucketNum - 1)] = new Vector([element], false);\r\n                    return \"continue\";\r\n                }\r\n                var lowList = [];\r\n                var highList = [];\r\n                container.forEach(function (element) {\r\n                    var hashCode = _this.hashFunc(element);\r\n                    if ((hashCode & originalBucketNum) === 0) {\r\n                        lowList.push(element);\r\n                    }\r\n                    else\r\n                        highList.push(element);\r\n                });\r\n                if (container instanceof OrderedSet) {\r\n                    if (lowList.length > HashContainer.untreeifyThreshold) {\r\n                        newHashTable[index] = new OrderedSet(lowList);\r\n                    }\r\n                    else if (lowList.length) {\r\n                        newHashTable[index] = new Vector(lowList, false);\r\n                    }\r\n                    if (highList.length > HashContainer.untreeifyThreshold) {\r\n                        newHashTable[index + originalBucketNum] = new OrderedSet(highList);\r\n                    }\r\n                    else if (highList.length) {\r\n                        newHashTable[index + originalBucketNum] = new Vector(highList, false);\r\n                    }\r\n                }\r\n                else {\r\n                    if (lowList.length >= HashContainer.treeifyThreshold) {\r\n                        newHashTable[index] = new OrderedSet(lowList);\r\n                    }\r\n                    else if (lowList.length) {\r\n                        newHashTable[index] = new Vector(lowList, false);\r\n                    }\r\n                    if (highList.length >= HashContainer.treeifyThreshold) {\r\n                        newHashTable[index + originalBucketNum] = new OrderedSet(highList);\r\n                    }\r\n                    else if (highList.length) {\r\n                        newHashTable[index + originalBucketNum] = new Vector(highList, false);\r\n                    }\r\n                }\r\n            };\r\n            var this_1 = this;\r\n            for (var i = 0; i < keyNums; ++i) {\r\n                _loop_1(i);\r\n            }\r\n            this.hashTable = newHashTable;\r\n        };\r\n        HashSet.prototype.forEach = function (callback) {\r\n            var containers = Object.values(this.hashTable);\r\n            var containersNum = containers.length;\r\n            var index = 0;\r\n            for (var i = 0; i < containersNum; ++i) {\r\n                containers[i].forEach(function (element) { return callback(element, index++); });\r\n            }\r\n        };\r\n        /**\r\n         * @description Insert element to hash set.\r\n         * @param element The element you want to insert.\r\n         */\r\n        HashSet.prototype.insert = function (element) {\r\n            var index = this.hashFunc(element) & (this.bucketNum - 1);\r\n            var container = this.hashTable[index];\r\n            if (!container) {\r\n                this.hashTable[index] = new Vector([element], false);\r\n                this.length += 1;\r\n            }\r\n            else {\r\n                var preSize = container.size();\r\n                if (container instanceof Vector) {\r\n                    if (!container.find(element)\r\n                        .equals(container.end()))\r\n                        return;\r\n                    container.pushBack(element);\r\n                    if (preSize + 1 >= HashContainer.treeifyThreshold) {\r\n                        if (this.bucketNum <= HashContainer.minTreeifySize) {\r\n                            this.length += 1;\r\n                            this.reAllocate();\r\n                            return;\r\n                        }\r\n                        this.hashTable[index] = new OrderedSet(container);\r\n                    }\r\n                    this.length += 1;\r\n                }\r\n                else {\r\n                    container.insert(element);\r\n                    var curSize = container.size();\r\n                    this.length += curSize - preSize;\r\n                }\r\n            }\r\n            if (this.length > this.bucketNum * HashContainer.sigma) {\r\n                this.reAllocate();\r\n            }\r\n        };\r\n        HashSet.prototype.eraseElementByKey = function (key) {\r\n            var index = this.hashFunc(key) & (this.bucketNum - 1);\r\n            var container = this.hashTable[index];\r\n            if (!container)\r\n                return;\r\n            var preSize = container.size();\r\n            if (preSize === 0)\r\n                return;\r\n            if (container instanceof Vector) {\r\n                container.eraseElementByValue(key);\r\n                var curSize = container.size();\r\n                this.length += curSize - preSize;\r\n            }\r\n            else {\r\n                container.eraseElementByKey(key);\r\n                var curSize = container.size();\r\n                this.length += curSize - preSize;\r\n                if (curSize <= HashContainer.untreeifyThreshold) {\r\n                    this.hashTable[index] = new Vector(container);\r\n                }\r\n            }\r\n        };\r\n        HashSet.prototype.find = function (element) {\r\n            var index = this.hashFunc(element) & (this.bucketNum - 1);\r\n            var container = this.hashTable[index];\r\n            if (!container)\r\n                return false;\r\n            return !container.find(element)\r\n                .equals(container.end());\r\n        };\r\n        HashSet.prototype[Symbol.iterator] = function () {\r\n            return function () {\r\n                var containers, containersNum, i, container, container_1, container_1_1, element, e_1_1;\r\n                var e_1, _a;\r\n                return __generator(this, function (_b) {\r\n                    switch (_b.label) {\r\n                        case 0:\r\n                            containers = Object.values(this.hashTable);\r\n                            containersNum = containers.length;\r\n                            i = 0;\r\n                            _b.label = 1;\r\n                        case 1:\r\n                            if (!(i < containersNum)) return [3 /*break*/, 10];\r\n                            container = containers[i];\r\n                            _b.label = 2;\r\n                        case 2:\r\n                            _b.trys.push([2, 7, 8, 9]);\r\n                            container_1 = (e_1 = void 0, __values(container)), container_1_1 = container_1.next();\r\n                            _b.label = 3;\r\n                        case 3:\r\n                            if (!!container_1_1.done) return [3 /*break*/, 6];\r\n                            element = container_1_1.value;\r\n                            return [4 /*yield*/, element];\r\n                        case 4:\r\n                            _b.sent();\r\n                            _b.label = 5;\r\n                        case 5:\r\n                            container_1_1 = container_1.next();\r\n                            return [3 /*break*/, 3];\r\n                        case 6: return [3 /*break*/, 9];\r\n                        case 7:\r\n                            e_1_1 = _b.sent();\r\n                            e_1 = { error: e_1_1 };\r\n                            return [3 /*break*/, 9];\r\n                        case 8:\r\n                            try {\r\n                                if (container_1_1 && !container_1_1.done && (_a = container_1.return)) _a.call(container_1);\r\n                            }\r\n                            finally { if (e_1) throw e_1.error; }\r\n                            return [7 /*endfinally*/];\r\n                        case 9:\r\n                            ++i;\r\n                            return [3 /*break*/, 1];\r\n                        case 10: return [2 /*return*/];\r\n                    }\r\n                });\r\n            }.bind(this)();\r\n        };\r\n        return HashSet;\r\n    }(HashContainer));\n\n    var HashMap = /** @class */ (function (_super) {\r\n        __extends(HashMap, _super);\r\n        function HashMap(container, initBucketNum, hashFunc) {\r\n            if (container === void 0) { container = []; }\r\n            var _this = _super.call(this, initBucketNum, hashFunc) || this;\r\n            _this.hashTable = [];\r\n            container.forEach(function (element) { return _this.setElement(element[0], element[1]); });\r\n            return _this;\r\n        }\r\n        HashMap.prototype.reAllocate = function () {\r\n            var _this = this;\r\n            if (this.bucketNum >= HashContainer.maxBucketNum)\r\n                return;\r\n            var newHashTable = [];\r\n            var originalBucketNum = this.bucketNum;\r\n            this.bucketNum <<= 1;\r\n            var keys = Object.keys(this.hashTable);\r\n            var keyNums = keys.length;\r\n            var _loop_1 = function (i) {\r\n                var index = parseInt(keys[i]);\r\n                var container = this_1.hashTable[index];\r\n                var size = container.size();\r\n                if (size === 0)\r\n                    return \"continue\";\r\n                if (size === 1) {\r\n                    var element = container.front();\r\n                    newHashTable[this_1.hashFunc(element[0]) & (this_1.bucketNum - 1)] = new Vector([element], false);\r\n                    return \"continue\";\r\n                }\r\n                var lowList = [];\r\n                var highList = [];\r\n                container.forEach(function (element) {\r\n                    var hashCode = _this.hashFunc(element[0]);\r\n                    if ((hashCode & originalBucketNum) === 0) {\r\n                        lowList.push(element);\r\n                    }\r\n                    else\r\n                        highList.push(element);\r\n                });\r\n                if (container instanceof OrderedMap) {\r\n                    if (lowList.length > HashContainer.untreeifyThreshold) {\r\n                        newHashTable[index] = new OrderedMap(lowList);\r\n                    }\r\n                    else if (lowList.length) {\r\n                        newHashTable[index] = new Vector(lowList, false);\r\n                    }\r\n                    if (highList.length > HashContainer.untreeifyThreshold) {\r\n                        newHashTable[index + originalBucketNum] = new OrderedMap(highList);\r\n                    }\r\n                    else if (highList.length) {\r\n                        newHashTable[index + originalBucketNum] = new Vector(highList, false);\r\n                    }\r\n                }\r\n                else {\r\n                    if (lowList.length >= HashContainer.treeifyThreshold) {\r\n                        newHashTable[index] = new OrderedMap(lowList);\r\n                    }\r\n                    else if (lowList.length) {\r\n                        newHashTable[index] = new Vector(lowList, false);\r\n                    }\r\n                    if (highList.length >= HashContainer.treeifyThreshold) {\r\n                        newHashTable[index + originalBucketNum] = new OrderedMap(highList);\r\n                    }\r\n                    else if (highList.length) {\r\n                        newHashTable[index + originalBucketNum] = new Vector(highList, false);\r\n                    }\r\n                }\r\n            };\r\n            var this_1 = this;\r\n            for (var i = 0; i < keyNums; ++i) {\r\n                _loop_1(i);\r\n            }\r\n            this.hashTable = newHashTable;\r\n        };\r\n        HashMap.prototype.forEach = function (callback) {\r\n            var containers = Object.values(this.hashTable);\r\n            var containersNum = containers.length;\r\n            var index = 0;\r\n            for (var i = 0; i < containersNum; ++i) {\r\n                containers[i].forEach(function (element) { return callback(element, index++); });\r\n            }\r\n        };\r\n        /**\r\n         * @description Insert a new key-value pair to hash map or set value by key.\r\n         * @param key The key you want to insert.\r\n         * @param value The value you want to insert.\r\n         * @example HashMap.setElement(1, 2); // insert a key-value pair [1, 2]\r\n         */\r\n        HashMap.prototype.setElement = function (key, value) {\r\n            var e_1, _a;\r\n            var index = this.hashFunc(key) & (this.bucketNum - 1);\r\n            var container = this.hashTable[index];\r\n            if (!container) {\r\n                this.length += 1;\r\n                this.hashTable[index] = new Vector([[key, value]], false);\r\n            }\r\n            else {\r\n                var preSize = container.size();\r\n                if (container instanceof Vector) {\r\n                    try {\r\n                        for (var container_1 = __values(container), container_1_1 = container_1.next(); !container_1_1.done; container_1_1 = container_1.next()) {\r\n                            var pair = container_1_1.value;\r\n                            if (pair[0] === key) {\r\n                                pair[1] = value;\r\n                                return;\r\n                            }\r\n                        }\r\n                    }\r\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n                    finally {\r\n                        try {\r\n                            if (container_1_1 && !container_1_1.done && (_a = container_1.return)) _a.call(container_1);\r\n                        }\r\n                        finally { if (e_1) throw e_1.error; }\r\n                    }\r\n                    container.pushBack([key, value]);\r\n                    if (preSize + 1 >= HashMap.treeifyThreshold) {\r\n                        if (this.bucketNum <= HashMap.minTreeifySize) {\r\n                            this.length += 1;\r\n                            this.reAllocate();\r\n                            return;\r\n                        }\r\n                        this.hashTable[index] = new OrderedMap(this.hashTable[index]);\r\n                    }\r\n                    this.length += 1;\r\n                }\r\n                else {\r\n                    container.setElement(key, value);\r\n                    var curSize = container.size();\r\n                    this.length += curSize - preSize;\r\n                }\r\n            }\r\n            if (this.length > this.bucketNum * HashMap.sigma) {\r\n                this.reAllocate();\r\n            }\r\n        };\r\n        /**\r\n         * @description Get the value of the element which has the specified key.\r\n         * @param key The key you want to get.\r\n         */\r\n        HashMap.prototype.getElementByKey = function (key) {\r\n            var e_2, _a;\r\n            var index = this.hashFunc(key) & (this.bucketNum - 1);\r\n            var container = this.hashTable[index];\r\n            if (!container)\r\n                return undefined;\r\n            if (container instanceof OrderedMap) {\r\n                return container.getElementByKey(key);\r\n            }\r\n            else {\r\n                try {\r\n                    for (var container_2 = __values(container), container_2_1 = container_2.next(); !container_2_1.done; container_2_1 = container_2.next()) {\r\n                        var pair = container_2_1.value;\r\n                        if (pair[0] === key)\r\n                            return pair[1];\r\n                    }\r\n                }\r\n                catch (e_2_1) { e_2 = { error: e_2_1 }; }\r\n                finally {\r\n                    try {\r\n                        if (container_2_1 && !container_2_1.done && (_a = container_2.return)) _a.call(container_2);\r\n                    }\r\n                    finally { if (e_2) throw e_2.error; }\r\n                }\r\n                return undefined;\r\n            }\r\n        };\r\n        HashMap.prototype.eraseElementByKey = function (key) {\r\n            var e_3, _a;\r\n            var index = this.hashFunc(key) & (this.bucketNum - 1);\r\n            var container = this.hashTable[index];\r\n            if (!container)\r\n                return;\r\n            if (container instanceof Vector) {\r\n                var pos = 0;\r\n                try {\r\n                    for (var container_3 = __values(container), container_3_1 = container_3.next(); !container_3_1.done; container_3_1 = container_3.next()) {\r\n                        var pair = container_3_1.value;\r\n                        if (pair[0] === key) {\r\n                            container.eraseElementByPos(pos);\r\n                            this.length -= 1;\r\n                            return;\r\n                        }\r\n                        pos += 1;\r\n                    }\r\n                }\r\n                catch (e_3_1) { e_3 = { error: e_3_1 }; }\r\n                finally {\r\n                    try {\r\n                        if (container_3_1 && !container_3_1.done && (_a = container_3.return)) _a.call(container_3);\r\n                    }\r\n                    finally { if (e_3) throw e_3.error; }\r\n                }\r\n            }\r\n            else {\r\n                var preSize = container.size();\r\n                container.eraseElementByKey(key);\r\n                var curSize = container.size();\r\n                this.length += curSize - preSize;\r\n                if (curSize <= HashContainer.untreeifyThreshold) {\r\n                    this.hashTable[index] = new Vector(container);\r\n                }\r\n            }\r\n        };\r\n        HashMap.prototype.find = function (key) {\r\n            var e_4, _a;\r\n            var index = this.hashFunc(key) & (this.bucketNum - 1);\r\n            var container = this.hashTable[index];\r\n            if (!container)\r\n                return false;\r\n            if (container instanceof OrderedMap) {\r\n                return !container.find(key)\r\n                    .equals(container.end());\r\n            }\r\n            try {\r\n                for (var container_4 = __values(container), container_4_1 = container_4.next(); !container_4_1.done; container_4_1 = container_4.next()) {\r\n                    var pair = container_4_1.value;\r\n                    if (pair[0] === key)\r\n                        return true;\r\n                }\r\n            }\r\n            catch (e_4_1) { e_4 = { error: e_4_1 }; }\r\n            finally {\r\n                try {\r\n                    if (container_4_1 && !container_4_1.done && (_a = container_4.return)) _a.call(container_4);\r\n                }\r\n                finally { if (e_4) throw e_4.error; }\r\n            }\r\n            return false;\r\n        };\r\n        HashMap.prototype[Symbol.iterator] = function () {\r\n            return function () {\r\n                var containers, containersNum, i, container, container_5, container_5_1, element, e_5_1;\r\n                var e_5, _a;\r\n                return __generator(this, function (_b) {\r\n                    switch (_b.label) {\r\n                        case 0:\r\n                            containers = Object.values(this.hashTable);\r\n                            containersNum = containers.length;\r\n                            i = 0;\r\n                            _b.label = 1;\r\n                        case 1:\r\n                            if (!(i < containersNum)) return [3 /*break*/, 10];\r\n                            container = containers[i];\r\n                            _b.label = 2;\r\n                        case 2:\r\n                            _b.trys.push([2, 7, 8, 9]);\r\n                            container_5 = (e_5 = void 0, __values(container)), container_5_1 = container_5.next();\r\n                            _b.label = 3;\r\n                        case 3:\r\n                            if (!!container_5_1.done) return [3 /*break*/, 6];\r\n                            element = container_5_1.value;\r\n                            return [4 /*yield*/, element];\r\n                        case 4:\r\n                            _b.sent();\r\n                            _b.label = 5;\r\n                        case 5:\r\n                            container_5_1 = container_5.next();\r\n                            return [3 /*break*/, 3];\r\n                        case 6: return [3 /*break*/, 9];\r\n                        case 7:\r\n                            e_5_1 = _b.sent();\r\n                            e_5 = { error: e_5_1 };\r\n                            return [3 /*break*/, 9];\r\n                        case 8:\r\n                            try {\r\n                                if (container_5_1 && !container_5_1.done && (_a = container_5.return)) _a.call(container_5);\r\n                            }\r\n                            finally { if (e_5) throw e_5.error; }\r\n                            return [7 /*endfinally*/];\r\n                        case 9:\r\n                            ++i;\r\n                            return [3 /*break*/, 1];\r\n                        case 10: return [2 /*return*/];\r\n                    }\r\n                });\r\n            }.bind(this)();\r\n        };\r\n        return HashMap;\r\n    }(HashContainer));\n\n    exports.Container = Container;\n    exports.ContainerIterator = ContainerIterator;\n    exports.Deque = Deque;\n    exports.DequeIterator = DequeIterator;\n    exports.HashContainer = HashContainer;\n    exports.HashMap = HashMap;\n    exports.HashSet = HashSet;\n    exports.LinkList = LinkList;\n    exports.LinkListIterator = LinkListIterator;\n    exports.OrderedMap = OrderedMap;\n    exports.OrderedMapIterator = OrderedMapIterator;\n    exports.OrderedSet = OrderedSet;\n    exports.OrderedSetIterator = OrderedSetIterator;\n    exports.PriorityQueue = PriorityQueue;\n    exports.Queue = Queue;\n    exports.SequentialContainer = SequentialContainer;\n    exports.Stack = Stack;\n    exports.TreeContainer = TreeContainer;\n    exports.Vector = Vector;\n    exports.VectorIterator = VectorIterator;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}