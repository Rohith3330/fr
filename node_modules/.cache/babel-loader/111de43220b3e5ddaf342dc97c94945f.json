{"ast":null,"code":"export default function (_context) {\n  return (root, result) => {\n    let found = false;\n    root.walkAtRules('tailwind', node => {\n      if (found) return false;\n\n      if (node.parent && node.parent.type !== 'root') {\n        found = true;\n        node.warn(result, ['Nested @tailwind rules were detected, but are not supported.', \"Consider using a prefix to scope Tailwind's classes: https://tailwindcss.com/docs/configuration#prefix\", 'Alternatively, use the important selector strategy: https://tailwindcss.com/docs/configuration#selector-strategy'].join('\\n'));\n        return false;\n      }\n    });\n    root.walkRules(rule => {\n      if (found) return false;\n      rule.walkRules(nestedRule => {\n        found = true;\n        nestedRule.warn(result, ['Nested CSS was detected, but CSS nesting has not been configured correctly.', 'Please enable a CSS nesting plugin *before* Tailwind in your configuration.', 'See how here: https://tailwindcss.com/docs/using-with-preprocessors#nesting'].join('\\n'));\n        return false;\n      });\n    });\n  };\n}","map":{"version":3,"names":["_context","root","result","found","walkAtRules","node","parent","type","warn","join","walkRules","rule","nestedRule"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/tailwindcss/src/lib/detectNesting.js"],"sourcesContent":["export default function (_context) {\n  return (root, result) => {\n    let found = false\n\n    root.walkAtRules('tailwind', (node) => {\n      if (found) return false\n\n      if (node.parent && node.parent.type !== 'root') {\n        found = true\n        node.warn(\n          result,\n          [\n            'Nested @tailwind rules were detected, but are not supported.',\n            \"Consider using a prefix to scope Tailwind's classes: https://tailwindcss.com/docs/configuration#prefix\",\n            'Alternatively, use the important selector strategy: https://tailwindcss.com/docs/configuration#selector-strategy',\n          ].join('\\n')\n        )\n        return false\n      }\n    })\n\n    root.walkRules((rule) => {\n      if (found) return false\n\n      rule.walkRules((nestedRule) => {\n        found = true\n        nestedRule.warn(\n          result,\n          [\n            'Nested CSS was detected, but CSS nesting has not been configured correctly.',\n            'Please enable a CSS nesting plugin *before* Tailwind in your configuration.',\n            'See how here: https://tailwindcss.com/docs/using-with-preprocessors#nesting',\n          ].join('\\n')\n        )\n        return false\n      })\n    })\n  }\n}\n"],"mappings":"AAAA,eAAe,UAAUA,QAAV,EAAoB;EACjC,OAAO,CAACC,IAAD,EAAOC,MAAP,KAAkB;IACvB,IAAIC,KAAK,GAAG,KAAZ;IAEAF,IAAI,CAACG,WAAL,CAAiB,UAAjB,EAA8BC,IAAD,IAAU;MACrC,IAAIF,KAAJ,EAAW,OAAO,KAAP;;MAEX,IAAIE,IAAI,CAACC,MAAL,IAAeD,IAAI,CAACC,MAAL,CAAYC,IAAZ,KAAqB,MAAxC,EAAgD;QAC9CJ,KAAK,GAAG,IAAR;QACAE,IAAI,CAACG,IAAL,CACEN,MADF,EAEE,CACE,8DADF,EAEE,wGAFF,EAGE,kHAHF,EAIEO,IAJF,CAIO,IAJP,CAFF;QAQA,OAAO,KAAP;MACD;IACF,CAfD;IAiBAR,IAAI,CAACS,SAAL,CAAgBC,IAAD,IAAU;MACvB,IAAIR,KAAJ,EAAW,OAAO,KAAP;MAEXQ,IAAI,CAACD,SAAL,CAAgBE,UAAD,IAAgB;QAC7BT,KAAK,GAAG,IAAR;QACAS,UAAU,CAACJ,IAAX,CACEN,MADF,EAEE,CACE,6EADF,EAEE,6EAFF,EAGE,6EAHF,EAIEO,IAJF,CAIO,IAJP,CAFF;QAQA,OAAO,KAAP;MACD,CAXD;IAYD,CAfD;EAgBD,CApCD;AAqCD"},"metadata":{},"sourceType":"module"}