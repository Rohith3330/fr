{"ast":null,"code":"/*! js-yaml 4.1.0 https://github.com/nodeca/js-yaml @license MIT */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) : typeof define === 'function' && define.amd ? define(['exports'], factory) : (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.jsyaml = {}));\n})(this, function (exports) {\n  'use strict';\n\n  function isNothing(subject) {\n    return typeof subject === 'undefined' || subject === null;\n  }\n\n  function isObject(subject) {\n    return typeof subject === 'object' && subject !== null;\n  }\n\n  function toArray(sequence) {\n    if (Array.isArray(sequence)) return sequence;else if (isNothing(sequence)) return [];\n    return [sequence];\n  }\n\n  function extend(target, source) {\n    var index, length, key, sourceKeys;\n\n    if (source) {\n      sourceKeys = Object.keys(source);\n\n      for (index = 0, length = sourceKeys.length; index < length; index += 1) {\n        key = sourceKeys[index];\n        target[key] = source[key];\n      }\n    }\n\n    return target;\n  }\n\n  function repeat(string, count) {\n    var result = '',\n        cycle;\n\n    for (cycle = 0; cycle < count; cycle += 1) {\n      result += string;\n    }\n\n    return result;\n  }\n\n  function isNegativeZero(number) {\n    return number === 0 && Number.NEGATIVE_INFINITY === 1 / number;\n  }\n\n  var isNothing_1 = isNothing;\n  var isObject_1 = isObject;\n  var toArray_1 = toArray;\n  var repeat_1 = repeat;\n  var isNegativeZero_1 = isNegativeZero;\n  var extend_1 = extend;\n  var common = {\n    isNothing: isNothing_1,\n    isObject: isObject_1,\n    toArray: toArray_1,\n    repeat: repeat_1,\n    isNegativeZero: isNegativeZero_1,\n    extend: extend_1\n  }; // YAML error class. http://stackoverflow.com/questions/8458984\n\n  function formatError(exception, compact) {\n    var where = '',\n        message = exception.reason || '(unknown reason)';\n    if (!exception.mark) return message;\n\n    if (exception.mark.name) {\n      where += 'in \"' + exception.mark.name + '\" ';\n    }\n\n    where += '(' + (exception.mark.line + 1) + ':' + (exception.mark.column + 1) + ')';\n\n    if (!compact && exception.mark.snippet) {\n      where += '\\n\\n' + exception.mark.snippet;\n    }\n\n    return message + ' ' + where;\n  }\n\n  function YAMLException$1(reason, mark) {\n    // Super constructor\n    Error.call(this);\n    this.name = 'YAMLException';\n    this.reason = reason;\n    this.mark = mark;\n    this.message = formatError(this, false); // Include stack trace in error object\n\n    if (Error.captureStackTrace) {\n      // Chrome and NodeJS\n      Error.captureStackTrace(this, this.constructor);\n    } else {\n      // FF, IE 10+ and Safari 6+. Fallback for others\n      this.stack = new Error().stack || '';\n    }\n  } // Inherit from Error\n\n\n  YAMLException$1.prototype = Object.create(Error.prototype);\n  YAMLException$1.prototype.constructor = YAMLException$1;\n\n  YAMLException$1.prototype.toString = function toString(compact) {\n    return this.name + ': ' + formatError(this, compact);\n  };\n\n  var exception = YAMLException$1; // get snippet for a single line, respecting maxLength\n\n  function getLine(buffer, lineStart, lineEnd, position, maxLineLength) {\n    var head = '';\n    var tail = '';\n    var maxHalfLength = Math.floor(maxLineLength / 2) - 1;\n\n    if (position - lineStart > maxHalfLength) {\n      head = ' ... ';\n      lineStart = position - maxHalfLength + head.length;\n    }\n\n    if (lineEnd - position > maxHalfLength) {\n      tail = ' ...';\n      lineEnd = position + maxHalfLength - tail.length;\n    }\n\n    return {\n      str: head + buffer.slice(lineStart, lineEnd).replace(/\\t/g, '→') + tail,\n      pos: position - lineStart + head.length // relative position\n\n    };\n  }\n\n  function padStart(string, max) {\n    return common.repeat(' ', max - string.length) + string;\n  }\n\n  function makeSnippet(mark, options) {\n    options = Object.create(options || null);\n    if (!mark.buffer) return null;\n    if (!options.maxLength) options.maxLength = 79;\n    if (typeof options.indent !== 'number') options.indent = 1;\n    if (typeof options.linesBefore !== 'number') options.linesBefore = 3;\n    if (typeof options.linesAfter !== 'number') options.linesAfter = 2;\n    var re = /\\r?\\n|\\r|\\0/g;\n    var lineStarts = [0];\n    var lineEnds = [];\n    var match;\n    var foundLineNo = -1;\n\n    while (match = re.exec(mark.buffer)) {\n      lineEnds.push(match.index);\n      lineStarts.push(match.index + match[0].length);\n\n      if (mark.position <= match.index && foundLineNo < 0) {\n        foundLineNo = lineStarts.length - 2;\n      }\n    }\n\n    if (foundLineNo < 0) foundLineNo = lineStarts.length - 1;\n    var result = '',\n        i,\n        line;\n    var lineNoLength = Math.min(mark.line + options.linesAfter, lineEnds.length).toString().length;\n    var maxLineLength = options.maxLength - (options.indent + lineNoLength + 3);\n\n    for (i = 1; i <= options.linesBefore; i++) {\n      if (foundLineNo - i < 0) break;\n      line = getLine(mark.buffer, lineStarts[foundLineNo - i], lineEnds[foundLineNo - i], mark.position - (lineStarts[foundLineNo] - lineStarts[foundLineNo - i]), maxLineLength);\n      result = common.repeat(' ', options.indent) + padStart((mark.line - i + 1).toString(), lineNoLength) + ' | ' + line.str + '\\n' + result;\n    }\n\n    line = getLine(mark.buffer, lineStarts[foundLineNo], lineEnds[foundLineNo], mark.position, maxLineLength);\n    result += common.repeat(' ', options.indent) + padStart((mark.line + 1).toString(), lineNoLength) + ' | ' + line.str + '\\n';\n    result += common.repeat('-', options.indent + lineNoLength + 3 + line.pos) + '^' + '\\n';\n\n    for (i = 1; i <= options.linesAfter; i++) {\n      if (foundLineNo + i >= lineEnds.length) break;\n      line = getLine(mark.buffer, lineStarts[foundLineNo + i], lineEnds[foundLineNo + i], mark.position - (lineStarts[foundLineNo] - lineStarts[foundLineNo + i]), maxLineLength);\n      result += common.repeat(' ', options.indent) + padStart((mark.line + i + 1).toString(), lineNoLength) + ' | ' + line.str + '\\n';\n    }\n\n    return result.replace(/\\n$/, '');\n  }\n\n  var snippet = makeSnippet;\n  var TYPE_CONSTRUCTOR_OPTIONS = ['kind', 'multi', 'resolve', 'construct', 'instanceOf', 'predicate', 'represent', 'representName', 'defaultStyle', 'styleAliases'];\n  var YAML_NODE_KINDS = ['scalar', 'sequence', 'mapping'];\n\n  function compileStyleAliases(map) {\n    var result = {};\n\n    if (map !== null) {\n      Object.keys(map).forEach(function (style) {\n        map[style].forEach(function (alias) {\n          result[String(alias)] = style;\n        });\n      });\n    }\n\n    return result;\n  }\n\n  function Type$1(tag, options) {\n    options = options || {};\n    Object.keys(options).forEach(function (name) {\n      if (TYPE_CONSTRUCTOR_OPTIONS.indexOf(name) === -1) {\n        throw new exception('Unknown option \"' + name + '\" is met in definition of \"' + tag + '\" YAML type.');\n      }\n    }); // TODO: Add tag format check.\n\n    this.options = options; // keep original options in case user wants to extend this type later\n\n    this.tag = tag;\n    this.kind = options['kind'] || null;\n\n    this.resolve = options['resolve'] || function () {\n      return true;\n    };\n\n    this.construct = options['construct'] || function (data) {\n      return data;\n    };\n\n    this.instanceOf = options['instanceOf'] || null;\n    this.predicate = options['predicate'] || null;\n    this.represent = options['represent'] || null;\n    this.representName = options['representName'] || null;\n    this.defaultStyle = options['defaultStyle'] || null;\n    this.multi = options['multi'] || false;\n    this.styleAliases = compileStyleAliases(options['styleAliases'] || null);\n\n    if (YAML_NODE_KINDS.indexOf(this.kind) === -1) {\n      throw new exception('Unknown kind \"' + this.kind + '\" is specified for \"' + tag + '\" YAML type.');\n    }\n  }\n\n  var type = Type$1;\n  /*eslint-disable max-len*/\n\n  function compileList(schema, name) {\n    var result = [];\n    schema[name].forEach(function (currentType) {\n      var newIndex = result.length;\n      result.forEach(function (previousType, previousIndex) {\n        if (previousType.tag === currentType.tag && previousType.kind === currentType.kind && previousType.multi === currentType.multi) {\n          newIndex = previousIndex;\n        }\n      });\n      result[newIndex] = currentType;\n    });\n    return result;\n  }\n\n  function\n    /* lists... */\n  compileMap() {\n    var result = {\n      scalar: {},\n      sequence: {},\n      mapping: {},\n      fallback: {},\n      multi: {\n        scalar: [],\n        sequence: [],\n        mapping: [],\n        fallback: []\n      }\n    },\n        index,\n        length;\n\n    function collectType(type) {\n      if (type.multi) {\n        result.multi[type.kind].push(type);\n        result.multi['fallback'].push(type);\n      } else {\n        result[type.kind][type.tag] = result['fallback'][type.tag] = type;\n      }\n    }\n\n    for (index = 0, length = arguments.length; index < length; index += 1) {\n      arguments[index].forEach(collectType);\n    }\n\n    return result;\n  }\n\n  function Schema$1(definition) {\n    return this.extend(definition);\n  }\n\n  Schema$1.prototype.extend = function extend(definition) {\n    var implicit = [];\n    var explicit = [];\n\n    if (definition instanceof type) {\n      // Schema.extend(type)\n      explicit.push(definition);\n    } else if (Array.isArray(definition)) {\n      // Schema.extend([ type1, type2, ... ])\n      explicit = explicit.concat(definition);\n    } else if (definition && (Array.isArray(definition.implicit) || Array.isArray(definition.explicit))) {\n      // Schema.extend({ explicit: [ type1, type2, ... ], implicit: [ type1, type2, ... ] })\n      if (definition.implicit) implicit = implicit.concat(definition.implicit);\n      if (definition.explicit) explicit = explicit.concat(definition.explicit);\n    } else {\n      throw new exception('Schema.extend argument should be a Type, [ Type ], ' + 'or a schema definition ({ implicit: [...], explicit: [...] })');\n    }\n\n    implicit.forEach(function (type$1) {\n      if (!(type$1 instanceof type)) {\n        throw new exception('Specified list of YAML types (or a single Type object) contains a non-Type object.');\n      }\n\n      if (type$1.loadKind && type$1.loadKind !== 'scalar') {\n        throw new exception('There is a non-scalar type in the implicit list of a schema. Implicit resolving of such types is not supported.');\n      }\n\n      if (type$1.multi) {\n        throw new exception('There is a multi type in the implicit list of a schema. Multi tags can only be listed as explicit.');\n      }\n    });\n    explicit.forEach(function (type$1) {\n      if (!(type$1 instanceof type)) {\n        throw new exception('Specified list of YAML types (or a single Type object) contains a non-Type object.');\n      }\n    });\n    var result = Object.create(Schema$1.prototype);\n    result.implicit = (this.implicit || []).concat(implicit);\n    result.explicit = (this.explicit || []).concat(explicit);\n    result.compiledImplicit = compileList(result, 'implicit');\n    result.compiledExplicit = compileList(result, 'explicit');\n    result.compiledTypeMap = compileMap(result.compiledImplicit, result.compiledExplicit);\n    return result;\n  };\n\n  var schema = Schema$1;\n  var str = new type('tag:yaml.org,2002:str', {\n    kind: 'scalar',\n    construct: function (data) {\n      return data !== null ? data : '';\n    }\n  });\n  var seq = new type('tag:yaml.org,2002:seq', {\n    kind: 'sequence',\n    construct: function (data) {\n      return data !== null ? data : [];\n    }\n  });\n  var map = new type('tag:yaml.org,2002:map', {\n    kind: 'mapping',\n    construct: function (data) {\n      return data !== null ? data : {};\n    }\n  });\n  var failsafe = new schema({\n    explicit: [str, seq, map]\n  });\n\n  function resolveYamlNull(data) {\n    if (data === null) return true;\n    var max = data.length;\n    return max === 1 && data === '~' || max === 4 && (data === 'null' || data === 'Null' || data === 'NULL');\n  }\n\n  function constructYamlNull() {\n    return null;\n  }\n\n  function isNull(object) {\n    return object === null;\n  }\n\n  var _null = new type('tag:yaml.org,2002:null', {\n    kind: 'scalar',\n    resolve: resolveYamlNull,\n    construct: constructYamlNull,\n    predicate: isNull,\n    represent: {\n      canonical: function () {\n        return '~';\n      },\n      lowercase: function () {\n        return 'null';\n      },\n      uppercase: function () {\n        return 'NULL';\n      },\n      camelcase: function () {\n        return 'Null';\n      },\n      empty: function () {\n        return '';\n      }\n    },\n    defaultStyle: 'lowercase'\n  });\n\n  function resolveYamlBoolean(data) {\n    if (data === null) return false;\n    var max = data.length;\n    return max === 4 && (data === 'true' || data === 'True' || data === 'TRUE') || max === 5 && (data === 'false' || data === 'False' || data === 'FALSE');\n  }\n\n  function constructYamlBoolean(data) {\n    return data === 'true' || data === 'True' || data === 'TRUE';\n  }\n\n  function isBoolean(object) {\n    return Object.prototype.toString.call(object) === '[object Boolean]';\n  }\n\n  var bool = new type('tag:yaml.org,2002:bool', {\n    kind: 'scalar',\n    resolve: resolveYamlBoolean,\n    construct: constructYamlBoolean,\n    predicate: isBoolean,\n    represent: {\n      lowercase: function (object) {\n        return object ? 'true' : 'false';\n      },\n      uppercase: function (object) {\n        return object ? 'TRUE' : 'FALSE';\n      },\n      camelcase: function (object) {\n        return object ? 'True' : 'False';\n      }\n    },\n    defaultStyle: 'lowercase'\n  });\n\n  function isHexCode(c) {\n    return 0x30\n    /* 0 */\n    <= c && c <= 0x39\n    /* 9 */\n    || 0x41\n    /* A */\n    <= c && c <= 0x46\n    /* F */\n    || 0x61\n    /* a */\n    <= c && c <= 0x66\n    /* f */\n    ;\n  }\n\n  function isOctCode(c) {\n    return 0x30\n    /* 0 */\n    <= c && c <= 0x37\n    /* 7 */\n    ;\n  }\n\n  function isDecCode(c) {\n    return 0x30\n    /* 0 */\n    <= c && c <= 0x39\n    /* 9 */\n    ;\n  }\n\n  function resolveYamlInteger(data) {\n    if (data === null) return false;\n    var max = data.length,\n        index = 0,\n        hasDigits = false,\n        ch;\n    if (!max) return false;\n    ch = data[index]; // sign\n\n    if (ch === '-' || ch === '+') {\n      ch = data[++index];\n    }\n\n    if (ch === '0') {\n      // 0\n      if (index + 1 === max) return true;\n      ch = data[++index]; // base 2, base 8, base 16\n\n      if (ch === 'b') {\n        // base 2\n        index++;\n\n        for (; index < max; index++) {\n          ch = data[index];\n          if (ch === '_') continue;\n          if (ch !== '0' && ch !== '1') return false;\n          hasDigits = true;\n        }\n\n        return hasDigits && ch !== '_';\n      }\n\n      if (ch === 'x') {\n        // base 16\n        index++;\n\n        for (; index < max; index++) {\n          ch = data[index];\n          if (ch === '_') continue;\n          if (!isHexCode(data.charCodeAt(index))) return false;\n          hasDigits = true;\n        }\n\n        return hasDigits && ch !== '_';\n      }\n\n      if (ch === 'o') {\n        // base 8\n        index++;\n\n        for (; index < max; index++) {\n          ch = data[index];\n          if (ch === '_') continue;\n          if (!isOctCode(data.charCodeAt(index))) return false;\n          hasDigits = true;\n        }\n\n        return hasDigits && ch !== '_';\n      }\n    } // base 10 (except 0)\n    // value should not start with `_`;\n\n\n    if (ch === '_') return false;\n\n    for (; index < max; index++) {\n      ch = data[index];\n      if (ch === '_') continue;\n\n      if (!isDecCode(data.charCodeAt(index))) {\n        return false;\n      }\n\n      hasDigits = true;\n    } // Should have digits and should not end with `_`\n\n\n    if (!hasDigits || ch === '_') return false;\n    return true;\n  }\n\n  function constructYamlInteger(data) {\n    var value = data,\n        sign = 1,\n        ch;\n\n    if (value.indexOf('_') !== -1) {\n      value = value.replace(/_/g, '');\n    }\n\n    ch = value[0];\n\n    if (ch === '-' || ch === '+') {\n      if (ch === '-') sign = -1;\n      value = value.slice(1);\n      ch = value[0];\n    }\n\n    if (value === '0') return 0;\n\n    if (ch === '0') {\n      if (value[1] === 'b') return sign * parseInt(value.slice(2), 2);\n      if (value[1] === 'x') return sign * parseInt(value.slice(2), 16);\n      if (value[1] === 'o') return sign * parseInt(value.slice(2), 8);\n    }\n\n    return sign * parseInt(value, 10);\n  }\n\n  function isInteger(object) {\n    return Object.prototype.toString.call(object) === '[object Number]' && object % 1 === 0 && !common.isNegativeZero(object);\n  }\n\n  var int = new type('tag:yaml.org,2002:int', {\n    kind: 'scalar',\n    resolve: resolveYamlInteger,\n    construct: constructYamlInteger,\n    predicate: isInteger,\n    represent: {\n      binary: function (obj) {\n        return obj >= 0 ? '0b' + obj.toString(2) : '-0b' + obj.toString(2).slice(1);\n      },\n      octal: function (obj) {\n        return obj >= 0 ? '0o' + obj.toString(8) : '-0o' + obj.toString(8).slice(1);\n      },\n      decimal: function (obj) {\n        return obj.toString(10);\n      },\n\n      /* eslint-disable max-len */\n      hexadecimal: function (obj) {\n        return obj >= 0 ? '0x' + obj.toString(16).toUpperCase() : '-0x' + obj.toString(16).toUpperCase().slice(1);\n      }\n    },\n    defaultStyle: 'decimal',\n    styleAliases: {\n      binary: [2, 'bin'],\n      octal: [8, 'oct'],\n      decimal: [10, 'dec'],\n      hexadecimal: [16, 'hex']\n    }\n  });\n  var YAML_FLOAT_PATTERN = new RegExp( // 2.5e4, 2.5 and integers\n  '^(?:[-+]?(?:[0-9][0-9_]*)(?:\\\\.[0-9_]*)?(?:[eE][-+]?[0-9]+)?' + // .2e4, .2\n  // special case, seems not from spec\n  '|\\\\.[0-9_]+(?:[eE][-+]?[0-9]+)?' + // .inf\n  '|[-+]?\\\\.(?:inf|Inf|INF)' + // .nan\n  '|\\\\.(?:nan|NaN|NAN))$');\n\n  function resolveYamlFloat(data) {\n    if (data === null) return false;\n\n    if (!YAML_FLOAT_PATTERN.test(data) || // Quick hack to not allow integers end with `_`\n    // Probably should update regexp & check speed\n    data[data.length - 1] === '_') {\n      return false;\n    }\n\n    return true;\n  }\n\n  function constructYamlFloat(data) {\n    var value, sign;\n    value = data.replace(/_/g, '').toLowerCase();\n    sign = value[0] === '-' ? -1 : 1;\n\n    if ('+-'.indexOf(value[0]) >= 0) {\n      value = value.slice(1);\n    }\n\n    if (value === '.inf') {\n      return sign === 1 ? Number.POSITIVE_INFINITY : Number.NEGATIVE_INFINITY;\n    } else if (value === '.nan') {\n      return NaN;\n    }\n\n    return sign * parseFloat(value, 10);\n  }\n\n  var SCIENTIFIC_WITHOUT_DOT = /^[-+]?[0-9]+e/;\n\n  function representYamlFloat(object, style) {\n    var res;\n\n    if (isNaN(object)) {\n      switch (style) {\n        case 'lowercase':\n          return '.nan';\n\n        case 'uppercase':\n          return '.NAN';\n\n        case 'camelcase':\n          return '.NaN';\n      }\n    } else if (Number.POSITIVE_INFINITY === object) {\n      switch (style) {\n        case 'lowercase':\n          return '.inf';\n\n        case 'uppercase':\n          return '.INF';\n\n        case 'camelcase':\n          return '.Inf';\n      }\n    } else if (Number.NEGATIVE_INFINITY === object) {\n      switch (style) {\n        case 'lowercase':\n          return '-.inf';\n\n        case 'uppercase':\n          return '-.INF';\n\n        case 'camelcase':\n          return '-.Inf';\n      }\n    } else if (common.isNegativeZero(object)) {\n      return '-0.0';\n    }\n\n    res = object.toString(10); // JS stringifier can build scientific format without dots: 5e-100,\n    // while YAML requres dot: 5.e-100. Fix it with simple hack\n\n    return SCIENTIFIC_WITHOUT_DOT.test(res) ? res.replace('e', '.e') : res;\n  }\n\n  function isFloat(object) {\n    return Object.prototype.toString.call(object) === '[object Number]' && (object % 1 !== 0 || common.isNegativeZero(object));\n  }\n\n  var float = new type('tag:yaml.org,2002:float', {\n    kind: 'scalar',\n    resolve: resolveYamlFloat,\n    construct: constructYamlFloat,\n    predicate: isFloat,\n    represent: representYamlFloat,\n    defaultStyle: 'lowercase'\n  });\n  var json = failsafe.extend({\n    implicit: [_null, bool, int, float]\n  });\n  var core = json;\n  var YAML_DATE_REGEXP = new RegExp('^([0-9][0-9][0-9][0-9])' + // [1] year\n  '-([0-9][0-9])' + // [2] month\n  '-([0-9][0-9])$'); // [3] day\n\n  var YAML_TIMESTAMP_REGEXP = new RegExp('^([0-9][0-9][0-9][0-9])' + // [1] year\n  '-([0-9][0-9]?)' + // [2] month\n  '-([0-9][0-9]?)' + // [3] day\n  '(?:[Tt]|[ \\\\t]+)' + // ...\n  '([0-9][0-9]?)' + // [4] hour\n  ':([0-9][0-9])' + // [5] minute\n  ':([0-9][0-9])' + // [6] second\n  '(?:\\\\.([0-9]*))?' + // [7] fraction\n  '(?:[ \\\\t]*(Z|([-+])([0-9][0-9]?)' + // [8] tz [9] tz_sign [10] tz_hour\n  '(?::([0-9][0-9]))?))?$'); // [11] tz_minute\n\n  function resolveYamlTimestamp(data) {\n    if (data === null) return false;\n    if (YAML_DATE_REGEXP.exec(data) !== null) return true;\n    if (YAML_TIMESTAMP_REGEXP.exec(data) !== null) return true;\n    return false;\n  }\n\n  function constructYamlTimestamp(data) {\n    var match,\n        year,\n        month,\n        day,\n        hour,\n        minute,\n        second,\n        fraction = 0,\n        delta = null,\n        tz_hour,\n        tz_minute,\n        date;\n    match = YAML_DATE_REGEXP.exec(data);\n    if (match === null) match = YAML_TIMESTAMP_REGEXP.exec(data);\n    if (match === null) throw new Error('Date resolve error'); // match: [1] year [2] month [3] day\n\n    year = +match[1];\n    month = +match[2] - 1; // JS month starts with 0\n\n    day = +match[3];\n\n    if (!match[4]) {\n      // no hour\n      return new Date(Date.UTC(year, month, day));\n    } // match: [4] hour [5] minute [6] second [7] fraction\n\n\n    hour = +match[4];\n    minute = +match[5];\n    second = +match[6];\n\n    if (match[7]) {\n      fraction = match[7].slice(0, 3);\n\n      while (fraction.length < 3) {\n        // milli-seconds\n        fraction += '0';\n      }\n\n      fraction = +fraction;\n    } // match: [8] tz [9] tz_sign [10] tz_hour [11] tz_minute\n\n\n    if (match[9]) {\n      tz_hour = +match[10];\n      tz_minute = +(match[11] || 0);\n      delta = (tz_hour * 60 + tz_minute) * 60000; // delta in mili-seconds\n\n      if (match[9] === '-') delta = -delta;\n    }\n\n    date = new Date(Date.UTC(year, month, day, hour, minute, second, fraction));\n    if (delta) date.setTime(date.getTime() - delta);\n    return date;\n  }\n\n  function representYamlTimestamp(object\n  /*, style*/\n  ) {\n    return object.toISOString();\n  }\n\n  var timestamp = new type('tag:yaml.org,2002:timestamp', {\n    kind: 'scalar',\n    resolve: resolveYamlTimestamp,\n    construct: constructYamlTimestamp,\n    instanceOf: Date,\n    represent: representYamlTimestamp\n  });\n\n  function resolveYamlMerge(data) {\n    return data === '<<' || data === null;\n  }\n\n  var merge = new type('tag:yaml.org,2002:merge', {\n    kind: 'scalar',\n    resolve: resolveYamlMerge\n  });\n  /*eslint-disable no-bitwise*/\n  // [ 64, 65, 66 ] -> [ padding, CR, LF ]\n\n  var BASE64_MAP = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\\n\\r';\n\n  function resolveYamlBinary(data) {\n    if (data === null) return false;\n    var code,\n        idx,\n        bitlen = 0,\n        max = data.length,\n        map = BASE64_MAP; // Convert one by one.\n\n    for (idx = 0; idx < max; idx++) {\n      code = map.indexOf(data.charAt(idx)); // Skip CR/LF\n\n      if (code > 64) continue; // Fail on illegal characters\n\n      if (code < 0) return false;\n      bitlen += 6;\n    } // If there are any bits left, source was corrupted\n\n\n    return bitlen % 8 === 0;\n  }\n\n  function constructYamlBinary(data) {\n    var idx,\n        tailbits,\n        input = data.replace(/[\\r\\n=]/g, ''),\n        // remove CR/LF & padding to simplify scan\n    max = input.length,\n        map = BASE64_MAP,\n        bits = 0,\n        result = []; // Collect by 6*4 bits (3 bytes)\n\n    for (idx = 0; idx < max; idx++) {\n      if (idx % 4 === 0 && idx) {\n        result.push(bits >> 16 & 0xFF);\n        result.push(bits >> 8 & 0xFF);\n        result.push(bits & 0xFF);\n      }\n\n      bits = bits << 6 | map.indexOf(input.charAt(idx));\n    } // Dump tail\n\n\n    tailbits = max % 4 * 6;\n\n    if (tailbits === 0) {\n      result.push(bits >> 16 & 0xFF);\n      result.push(bits >> 8 & 0xFF);\n      result.push(bits & 0xFF);\n    } else if (tailbits === 18) {\n      result.push(bits >> 10 & 0xFF);\n      result.push(bits >> 2 & 0xFF);\n    } else if (tailbits === 12) {\n      result.push(bits >> 4 & 0xFF);\n    }\n\n    return new Uint8Array(result);\n  }\n\n  function representYamlBinary(object\n  /*, style*/\n  ) {\n    var result = '',\n        bits = 0,\n        idx,\n        tail,\n        max = object.length,\n        map = BASE64_MAP; // Convert every three bytes to 4 ASCII characters.\n\n    for (idx = 0; idx < max; idx++) {\n      if (idx % 3 === 0 && idx) {\n        result += map[bits >> 18 & 0x3F];\n        result += map[bits >> 12 & 0x3F];\n        result += map[bits >> 6 & 0x3F];\n        result += map[bits & 0x3F];\n      }\n\n      bits = (bits << 8) + object[idx];\n    } // Dump tail\n\n\n    tail = max % 3;\n\n    if (tail === 0) {\n      result += map[bits >> 18 & 0x3F];\n      result += map[bits >> 12 & 0x3F];\n      result += map[bits >> 6 & 0x3F];\n      result += map[bits & 0x3F];\n    } else if (tail === 2) {\n      result += map[bits >> 10 & 0x3F];\n      result += map[bits >> 4 & 0x3F];\n      result += map[bits << 2 & 0x3F];\n      result += map[64];\n    } else if (tail === 1) {\n      result += map[bits >> 2 & 0x3F];\n      result += map[bits << 4 & 0x3F];\n      result += map[64];\n      result += map[64];\n    }\n\n    return result;\n  }\n\n  function isBinary(obj) {\n    return Object.prototype.toString.call(obj) === '[object Uint8Array]';\n  }\n\n  var binary = new type('tag:yaml.org,2002:binary', {\n    kind: 'scalar',\n    resolve: resolveYamlBinary,\n    construct: constructYamlBinary,\n    predicate: isBinary,\n    represent: representYamlBinary\n  });\n  var _hasOwnProperty$3 = Object.prototype.hasOwnProperty;\n  var _toString$2 = Object.prototype.toString;\n\n  function resolveYamlOmap(data) {\n    if (data === null) return true;\n    var objectKeys = [],\n        index,\n        length,\n        pair,\n        pairKey,\n        pairHasKey,\n        object = data;\n\n    for (index = 0, length = object.length; index < length; index += 1) {\n      pair = object[index];\n      pairHasKey = false;\n      if (_toString$2.call(pair) !== '[object Object]') return false;\n\n      for (pairKey in pair) {\n        if (_hasOwnProperty$3.call(pair, pairKey)) {\n          if (!pairHasKey) pairHasKey = true;else return false;\n        }\n      }\n\n      if (!pairHasKey) return false;\n      if (objectKeys.indexOf(pairKey) === -1) objectKeys.push(pairKey);else return false;\n    }\n\n    return true;\n  }\n\n  function constructYamlOmap(data) {\n    return data !== null ? data : [];\n  }\n\n  var omap = new type('tag:yaml.org,2002:omap', {\n    kind: 'sequence',\n    resolve: resolveYamlOmap,\n    construct: constructYamlOmap\n  });\n  var _toString$1 = Object.prototype.toString;\n\n  function resolveYamlPairs(data) {\n    if (data === null) return true;\n    var index,\n        length,\n        pair,\n        keys,\n        result,\n        object = data;\n    result = new Array(object.length);\n\n    for (index = 0, length = object.length; index < length; index += 1) {\n      pair = object[index];\n      if (_toString$1.call(pair) !== '[object Object]') return false;\n      keys = Object.keys(pair);\n      if (keys.length !== 1) return false;\n      result[index] = [keys[0], pair[keys[0]]];\n    }\n\n    return true;\n  }\n\n  function constructYamlPairs(data) {\n    if (data === null) return [];\n    var index,\n        length,\n        pair,\n        keys,\n        result,\n        object = data;\n    result = new Array(object.length);\n\n    for (index = 0, length = object.length; index < length; index += 1) {\n      pair = object[index];\n      keys = Object.keys(pair);\n      result[index] = [keys[0], pair[keys[0]]];\n    }\n\n    return result;\n  }\n\n  var pairs = new type('tag:yaml.org,2002:pairs', {\n    kind: 'sequence',\n    resolve: resolveYamlPairs,\n    construct: constructYamlPairs\n  });\n  var _hasOwnProperty$2 = Object.prototype.hasOwnProperty;\n\n  function resolveYamlSet(data) {\n    if (data === null) return true;\n    var key,\n        object = data;\n\n    for (key in object) {\n      if (_hasOwnProperty$2.call(object, key)) {\n        if (object[key] !== null) return false;\n      }\n    }\n\n    return true;\n  }\n\n  function constructYamlSet(data) {\n    return data !== null ? data : {};\n  }\n\n  var set = new type('tag:yaml.org,2002:set', {\n    kind: 'mapping',\n    resolve: resolveYamlSet,\n    construct: constructYamlSet\n  });\n\n  var _default = core.extend({\n    implicit: [timestamp, merge],\n    explicit: [binary, omap, pairs, set]\n  });\n  /*eslint-disable max-len,no-use-before-define*/\n\n\n  var _hasOwnProperty$1 = Object.prototype.hasOwnProperty;\n  var CONTEXT_FLOW_IN = 1;\n  var CONTEXT_FLOW_OUT = 2;\n  var CONTEXT_BLOCK_IN = 3;\n  var CONTEXT_BLOCK_OUT = 4;\n  var CHOMPING_CLIP = 1;\n  var CHOMPING_STRIP = 2;\n  var CHOMPING_KEEP = 3;\n  var PATTERN_NON_PRINTABLE = /[\\x00-\\x08\\x0B\\x0C\\x0E-\\x1F\\x7F-\\x84\\x86-\\x9F\\uFFFE\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/;\n  var PATTERN_NON_ASCII_LINE_BREAKS = /[\\x85\\u2028\\u2029]/;\n  var PATTERN_FLOW_INDICATORS = /[,\\[\\]\\{\\}]/;\n  var PATTERN_TAG_HANDLE = /^(?:!|!!|![a-z\\-]+!)$/i;\n  var PATTERN_TAG_URI = /^(?:!|[^,\\[\\]\\{\\}])(?:%[0-9a-f]{2}|[0-9a-z\\-#;\\/\\?:@&=\\+\\$,_\\.!~\\*'\\(\\)\\[\\]])*$/i;\n\n  function _class(obj) {\n    return Object.prototype.toString.call(obj);\n  }\n\n  function is_EOL(c) {\n    return c === 0x0A\n    /* LF */\n    || c === 0x0D\n    /* CR */\n    ;\n  }\n\n  function is_WHITE_SPACE(c) {\n    return c === 0x09\n    /* Tab */\n    || c === 0x20\n    /* Space */\n    ;\n  }\n\n  function is_WS_OR_EOL(c) {\n    return c === 0x09\n    /* Tab */\n    || c === 0x20\n    /* Space */\n    || c === 0x0A\n    /* LF */\n    || c === 0x0D\n    /* CR */\n    ;\n  }\n\n  function is_FLOW_INDICATOR(c) {\n    return c === 0x2C\n    /* , */\n    || c === 0x5B\n    /* [ */\n    || c === 0x5D\n    /* ] */\n    || c === 0x7B\n    /* { */\n    || c === 0x7D\n    /* } */\n    ;\n  }\n\n  function fromHexCode(c) {\n    var lc;\n\n    if (0x30\n    /* 0 */\n    <= c && c <= 0x39\n    /* 9 */\n    ) {\n      return c - 0x30;\n    }\n    /*eslint-disable no-bitwise*/\n\n\n    lc = c | 0x20;\n\n    if (0x61\n    /* a */\n    <= lc && lc <= 0x66\n    /* f */\n    ) {\n      return lc - 0x61 + 10;\n    }\n\n    return -1;\n  }\n\n  function escapedHexLen(c) {\n    if (c === 0x78\n    /* x */\n    ) {\n      return 2;\n    }\n\n    if (c === 0x75\n    /* u */\n    ) {\n      return 4;\n    }\n\n    if (c === 0x55\n    /* U */\n    ) {\n      return 8;\n    }\n\n    return 0;\n  }\n\n  function fromDecimalCode(c) {\n    if (0x30\n    /* 0 */\n    <= c && c <= 0x39\n    /* 9 */\n    ) {\n      return c - 0x30;\n    }\n\n    return -1;\n  }\n\n  function simpleEscapeSequence(c) {\n    /* eslint-disable indent */\n    return c === 0x30\n    /* 0 */\n    ? '\\x00' : c === 0x61\n    /* a */\n    ? '\\x07' : c === 0x62\n    /* b */\n    ? '\\x08' : c === 0x74\n    /* t */\n    ? '\\x09' : c === 0x09\n    /* Tab */\n    ? '\\x09' : c === 0x6E\n    /* n */\n    ? '\\x0A' : c === 0x76\n    /* v */\n    ? '\\x0B' : c === 0x66\n    /* f */\n    ? '\\x0C' : c === 0x72\n    /* r */\n    ? '\\x0D' : c === 0x65\n    /* e */\n    ? '\\x1B' : c === 0x20\n    /* Space */\n    ? ' ' : c === 0x22\n    /* \" */\n    ? '\\x22' : c === 0x2F\n    /* / */\n    ? '/' : c === 0x5C\n    /* \\ */\n    ? '\\x5C' : c === 0x4E\n    /* N */\n    ? '\\x85' : c === 0x5F\n    /* _ */\n    ? '\\xA0' : c === 0x4C\n    /* L */\n    ? '\\u2028' : c === 0x50\n    /* P */\n    ? '\\u2029' : '';\n  }\n\n  function charFromCodepoint(c) {\n    if (c <= 0xFFFF) {\n      return String.fromCharCode(c);\n    } // Encode UTF-16 surrogate pair\n    // https://en.wikipedia.org/wiki/UTF-16#Code_points_U.2B010000_to_U.2B10FFFF\n\n\n    return String.fromCharCode((c - 0x010000 >> 10) + 0xD800, (c - 0x010000 & 0x03FF) + 0xDC00);\n  }\n\n  var simpleEscapeCheck = new Array(256); // integer, for fast access\n\n  var simpleEscapeMap = new Array(256);\n\n  for (var i = 0; i < 256; i++) {\n    simpleEscapeCheck[i] = simpleEscapeSequence(i) ? 1 : 0;\n    simpleEscapeMap[i] = simpleEscapeSequence(i);\n  }\n\n  function State$1(input, options) {\n    this.input = input;\n    this.filename = options['filename'] || null;\n    this.schema = options['schema'] || _default;\n    this.onWarning = options['onWarning'] || null; // (Hidden) Remove? makes the loader to expect YAML 1.1 documents\n    // if such documents have no explicit %YAML directive\n\n    this.legacy = options['legacy'] || false;\n    this.json = options['json'] || false;\n    this.listener = options['listener'] || null;\n    this.implicitTypes = this.schema.compiledImplicit;\n    this.typeMap = this.schema.compiledTypeMap;\n    this.length = input.length;\n    this.position = 0;\n    this.line = 0;\n    this.lineStart = 0;\n    this.lineIndent = 0; // position of first leading tab in the current line,\n    // used to make sure there are no tabs in the indentation\n\n    this.firstTabInLine = -1;\n    this.documents = [];\n    /*\n    this.version;\n    this.checkLineBreaks;\n    this.tagMap;\n    this.anchorMap;\n    this.tag;\n    this.anchor;\n    this.kind;\n    this.result;*/\n  }\n\n  function generateError(state, message) {\n    var mark = {\n      name: state.filename,\n      buffer: state.input.slice(0, -1),\n      // omit trailing \\0\n      position: state.position,\n      line: state.line,\n      column: state.position - state.lineStart\n    };\n    mark.snippet = snippet(mark);\n    return new exception(message, mark);\n  }\n\n  function throwError(state, message) {\n    throw generateError(state, message);\n  }\n\n  function throwWarning(state, message) {\n    if (state.onWarning) {\n      state.onWarning.call(null, generateError(state, message));\n    }\n  }\n\n  var directiveHandlers = {\n    YAML: function handleYamlDirective(state, name, args) {\n      var match, major, minor;\n\n      if (state.version !== null) {\n        throwError(state, 'duplication of %YAML directive');\n      }\n\n      if (args.length !== 1) {\n        throwError(state, 'YAML directive accepts exactly one argument');\n      }\n\n      match = /^([0-9]+)\\.([0-9]+)$/.exec(args[0]);\n\n      if (match === null) {\n        throwError(state, 'ill-formed argument of the YAML directive');\n      }\n\n      major = parseInt(match[1], 10);\n      minor = parseInt(match[2], 10);\n\n      if (major !== 1) {\n        throwError(state, 'unacceptable YAML version of the document');\n      }\n\n      state.version = args[0];\n      state.checkLineBreaks = minor < 2;\n\n      if (minor !== 1 && minor !== 2) {\n        throwWarning(state, 'unsupported YAML version of the document');\n      }\n    },\n    TAG: function handleTagDirective(state, name, args) {\n      var handle, prefix;\n\n      if (args.length !== 2) {\n        throwError(state, 'TAG directive accepts exactly two arguments');\n      }\n\n      handle = args[0];\n      prefix = args[1];\n\n      if (!PATTERN_TAG_HANDLE.test(handle)) {\n        throwError(state, 'ill-formed tag handle (first argument) of the TAG directive');\n      }\n\n      if (_hasOwnProperty$1.call(state.tagMap, handle)) {\n        throwError(state, 'there is a previously declared suffix for \"' + handle + '\" tag handle');\n      }\n\n      if (!PATTERN_TAG_URI.test(prefix)) {\n        throwError(state, 'ill-formed tag prefix (second argument) of the TAG directive');\n      }\n\n      try {\n        prefix = decodeURIComponent(prefix);\n      } catch (err) {\n        throwError(state, 'tag prefix is malformed: ' + prefix);\n      }\n\n      state.tagMap[handle] = prefix;\n    }\n  };\n\n  function captureSegment(state, start, end, checkJson) {\n    var _position, _length, _character, _result;\n\n    if (start < end) {\n      _result = state.input.slice(start, end);\n\n      if (checkJson) {\n        for (_position = 0, _length = _result.length; _position < _length; _position += 1) {\n          _character = _result.charCodeAt(_position);\n\n          if (!(_character === 0x09 || 0x20 <= _character && _character <= 0x10FFFF)) {\n            throwError(state, 'expected valid JSON character');\n          }\n        }\n      } else if (PATTERN_NON_PRINTABLE.test(_result)) {\n        throwError(state, 'the stream contains non-printable characters');\n      }\n\n      state.result += _result;\n    }\n  }\n\n  function mergeMappings(state, destination, source, overridableKeys) {\n    var sourceKeys, key, index, quantity;\n\n    if (!common.isObject(source)) {\n      throwError(state, 'cannot merge mappings; the provided source object is unacceptable');\n    }\n\n    sourceKeys = Object.keys(source);\n\n    for (index = 0, quantity = sourceKeys.length; index < quantity; index += 1) {\n      key = sourceKeys[index];\n\n      if (!_hasOwnProperty$1.call(destination, key)) {\n        destination[key] = source[key];\n        overridableKeys[key] = true;\n      }\n    }\n  }\n\n  function storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode, startLine, startLineStart, startPos) {\n    var index, quantity; // The output is a plain object here, so keys can only be strings.\n    // We need to convert keyNode to a string, but doing so can hang the process\n    // (deeply nested arrays that explode exponentially using aliases).\n\n    if (Array.isArray(keyNode)) {\n      keyNode = Array.prototype.slice.call(keyNode);\n\n      for (index = 0, quantity = keyNode.length; index < quantity; index += 1) {\n        if (Array.isArray(keyNode[index])) {\n          throwError(state, 'nested arrays are not supported inside keys');\n        }\n\n        if (typeof keyNode === 'object' && _class(keyNode[index]) === '[object Object]') {\n          keyNode[index] = '[object Object]';\n        }\n      }\n    } // Avoid code execution in load() via toString property\n    // (still use its own toString for arrays, timestamps,\n    // and whatever user schema extensions happen to have @@toStringTag)\n\n\n    if (typeof keyNode === 'object' && _class(keyNode) === '[object Object]') {\n      keyNode = '[object Object]';\n    }\n\n    keyNode = String(keyNode);\n\n    if (_result === null) {\n      _result = {};\n    }\n\n    if (keyTag === 'tag:yaml.org,2002:merge') {\n      if (Array.isArray(valueNode)) {\n        for (index = 0, quantity = valueNode.length; index < quantity; index += 1) {\n          mergeMappings(state, _result, valueNode[index], overridableKeys);\n        }\n      } else {\n        mergeMappings(state, _result, valueNode, overridableKeys);\n      }\n    } else {\n      if (!state.json && !_hasOwnProperty$1.call(overridableKeys, keyNode) && _hasOwnProperty$1.call(_result, keyNode)) {\n        state.line = startLine || state.line;\n        state.lineStart = startLineStart || state.lineStart;\n        state.position = startPos || state.position;\n        throwError(state, 'duplicated mapping key');\n      } // used for this specific key only because Object.defineProperty is slow\n\n\n      if (keyNode === '__proto__') {\n        Object.defineProperty(_result, keyNode, {\n          configurable: true,\n          enumerable: true,\n          writable: true,\n          value: valueNode\n        });\n      } else {\n        _result[keyNode] = valueNode;\n      }\n\n      delete overridableKeys[keyNode];\n    }\n\n    return _result;\n  }\n\n  function readLineBreak(state) {\n    var ch;\n    ch = state.input.charCodeAt(state.position);\n\n    if (ch === 0x0A\n    /* LF */\n    ) {\n      state.position++;\n    } else if (ch === 0x0D\n    /* CR */\n    ) {\n      state.position++;\n\n      if (state.input.charCodeAt(state.position) === 0x0A\n      /* LF */\n      ) {\n        state.position++;\n      }\n    } else {\n      throwError(state, 'a line break is expected');\n    }\n\n    state.line += 1;\n    state.lineStart = state.position;\n    state.firstTabInLine = -1;\n  }\n\n  function skipSeparationSpace(state, allowComments, checkIndent) {\n    var lineBreaks = 0,\n        ch = state.input.charCodeAt(state.position);\n\n    while (ch !== 0) {\n      while (is_WHITE_SPACE(ch)) {\n        if (ch === 0x09\n        /* Tab */\n        && state.firstTabInLine === -1) {\n          state.firstTabInLine = state.position;\n        }\n\n        ch = state.input.charCodeAt(++state.position);\n      }\n\n      if (allowComments && ch === 0x23\n      /* # */\n      ) {\n        do {\n          ch = state.input.charCodeAt(++state.position);\n        } while (ch !== 0x0A\n        /* LF */\n        && ch !== 0x0D\n        /* CR */\n        && ch !== 0);\n      }\n\n      if (is_EOL(ch)) {\n        readLineBreak(state);\n        ch = state.input.charCodeAt(state.position);\n        lineBreaks++;\n        state.lineIndent = 0;\n\n        while (ch === 0x20\n        /* Space */\n        ) {\n          state.lineIndent++;\n          ch = state.input.charCodeAt(++state.position);\n        }\n      } else {\n        break;\n      }\n    }\n\n    if (checkIndent !== -1 && lineBreaks !== 0 && state.lineIndent < checkIndent) {\n      throwWarning(state, 'deficient indentation');\n    }\n\n    return lineBreaks;\n  }\n\n  function testDocumentSeparator(state) {\n    var _position = state.position,\n        ch;\n    ch = state.input.charCodeAt(_position); // Condition state.position === state.lineStart is tested\n    // in parent on each call, for efficiency. No needs to test here again.\n\n    if ((ch === 0x2D\n    /* - */\n    || ch === 0x2E\n    /* . */\n    ) && ch === state.input.charCodeAt(_position + 1) && ch === state.input.charCodeAt(_position + 2)) {\n      _position += 3;\n      ch = state.input.charCodeAt(_position);\n\n      if (ch === 0 || is_WS_OR_EOL(ch)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  function writeFoldedLines(state, count) {\n    if (count === 1) {\n      state.result += ' ';\n    } else if (count > 1) {\n      state.result += common.repeat('\\n', count - 1);\n    }\n  }\n\n  function readPlainScalar(state, nodeIndent, withinFlowCollection) {\n    var preceding,\n        following,\n        captureStart,\n        captureEnd,\n        hasPendingContent,\n        _line,\n        _lineStart,\n        _lineIndent,\n        _kind = state.kind,\n        _result = state.result,\n        ch;\n\n    ch = state.input.charCodeAt(state.position);\n\n    if (is_WS_OR_EOL(ch) || is_FLOW_INDICATOR(ch) || ch === 0x23\n    /* # */\n    || ch === 0x26\n    /* & */\n    || ch === 0x2A\n    /* * */\n    || ch === 0x21\n    /* ! */\n    || ch === 0x7C\n    /* | */\n    || ch === 0x3E\n    /* > */\n    || ch === 0x27\n    /* ' */\n    || ch === 0x22\n    /* \" */\n    || ch === 0x25\n    /* % */\n    || ch === 0x40\n    /* @ */\n    || ch === 0x60\n    /* ` */\n    ) {\n      return false;\n    }\n\n    if (ch === 0x3F\n    /* ? */\n    || ch === 0x2D\n    /* - */\n    ) {\n      following = state.input.charCodeAt(state.position + 1);\n\n      if (is_WS_OR_EOL(following) || withinFlowCollection && is_FLOW_INDICATOR(following)) {\n        return false;\n      }\n    }\n\n    state.kind = 'scalar';\n    state.result = '';\n    captureStart = captureEnd = state.position;\n    hasPendingContent = false;\n\n    while (ch !== 0) {\n      if (ch === 0x3A\n      /* : */\n      ) {\n        following = state.input.charCodeAt(state.position + 1);\n\n        if (is_WS_OR_EOL(following) || withinFlowCollection && is_FLOW_INDICATOR(following)) {\n          break;\n        }\n      } else if (ch === 0x23\n      /* # */\n      ) {\n        preceding = state.input.charCodeAt(state.position - 1);\n\n        if (is_WS_OR_EOL(preceding)) {\n          break;\n        }\n      } else if (state.position === state.lineStart && testDocumentSeparator(state) || withinFlowCollection && is_FLOW_INDICATOR(ch)) {\n        break;\n      } else if (is_EOL(ch)) {\n        _line = state.line;\n        _lineStart = state.lineStart;\n        _lineIndent = state.lineIndent;\n        skipSeparationSpace(state, false, -1);\n\n        if (state.lineIndent >= nodeIndent) {\n          hasPendingContent = true;\n          ch = state.input.charCodeAt(state.position);\n          continue;\n        } else {\n          state.position = captureEnd;\n          state.line = _line;\n          state.lineStart = _lineStart;\n          state.lineIndent = _lineIndent;\n          break;\n        }\n      }\n\n      if (hasPendingContent) {\n        captureSegment(state, captureStart, captureEnd, false);\n        writeFoldedLines(state, state.line - _line);\n        captureStart = captureEnd = state.position;\n        hasPendingContent = false;\n      }\n\n      if (!is_WHITE_SPACE(ch)) {\n        captureEnd = state.position + 1;\n      }\n\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    captureSegment(state, captureStart, captureEnd, false);\n\n    if (state.result) {\n      return true;\n    }\n\n    state.kind = _kind;\n    state.result = _result;\n    return false;\n  }\n\n  function readSingleQuotedScalar(state, nodeIndent) {\n    var ch, captureStart, captureEnd;\n    ch = state.input.charCodeAt(state.position);\n\n    if (ch !== 0x27\n    /* ' */\n    ) {\n      return false;\n    }\n\n    state.kind = 'scalar';\n    state.result = '';\n    state.position++;\n    captureStart = captureEnd = state.position;\n\n    while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n      if (ch === 0x27\n      /* ' */\n      ) {\n        captureSegment(state, captureStart, state.position, true);\n        ch = state.input.charCodeAt(++state.position);\n\n        if (ch === 0x27\n        /* ' */\n        ) {\n          captureStart = state.position;\n          state.position++;\n          captureEnd = state.position;\n        } else {\n          return true;\n        }\n      } else if (is_EOL(ch)) {\n        captureSegment(state, captureStart, captureEnd, true);\n        writeFoldedLines(state, skipSeparationSpace(state, false, nodeIndent));\n        captureStart = captureEnd = state.position;\n      } else if (state.position === state.lineStart && testDocumentSeparator(state)) {\n        throwError(state, 'unexpected end of the document within a single quoted scalar');\n      } else {\n        state.position++;\n        captureEnd = state.position;\n      }\n    }\n\n    throwError(state, 'unexpected end of the stream within a single quoted scalar');\n  }\n\n  function readDoubleQuotedScalar(state, nodeIndent) {\n    var captureStart, captureEnd, hexLength, hexResult, tmp, ch;\n    ch = state.input.charCodeAt(state.position);\n\n    if (ch !== 0x22\n    /* \" */\n    ) {\n      return false;\n    }\n\n    state.kind = 'scalar';\n    state.result = '';\n    state.position++;\n    captureStart = captureEnd = state.position;\n\n    while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n      if (ch === 0x22\n      /* \" */\n      ) {\n        captureSegment(state, captureStart, state.position, true);\n        state.position++;\n        return true;\n      } else if (ch === 0x5C\n      /* \\ */\n      ) {\n        captureSegment(state, captureStart, state.position, true);\n        ch = state.input.charCodeAt(++state.position);\n\n        if (is_EOL(ch)) {\n          skipSeparationSpace(state, false, nodeIndent); // TODO: rework to inline fn with no type cast?\n        } else if (ch < 256 && simpleEscapeCheck[ch]) {\n          state.result += simpleEscapeMap[ch];\n          state.position++;\n        } else if ((tmp = escapedHexLen(ch)) > 0) {\n          hexLength = tmp;\n          hexResult = 0;\n\n          for (; hexLength > 0; hexLength--) {\n            ch = state.input.charCodeAt(++state.position);\n\n            if ((tmp = fromHexCode(ch)) >= 0) {\n              hexResult = (hexResult << 4) + tmp;\n            } else {\n              throwError(state, 'expected hexadecimal character');\n            }\n          }\n\n          state.result += charFromCodepoint(hexResult);\n          state.position++;\n        } else {\n          throwError(state, 'unknown escape sequence');\n        }\n\n        captureStart = captureEnd = state.position;\n      } else if (is_EOL(ch)) {\n        captureSegment(state, captureStart, captureEnd, true);\n        writeFoldedLines(state, skipSeparationSpace(state, false, nodeIndent));\n        captureStart = captureEnd = state.position;\n      } else if (state.position === state.lineStart && testDocumentSeparator(state)) {\n        throwError(state, 'unexpected end of the document within a double quoted scalar');\n      } else {\n        state.position++;\n        captureEnd = state.position;\n      }\n    }\n\n    throwError(state, 'unexpected end of the stream within a double quoted scalar');\n  }\n\n  function readFlowCollection(state, nodeIndent) {\n    var readNext = true,\n        _line,\n        _lineStart,\n        _pos,\n        _tag = state.tag,\n        _result,\n        _anchor = state.anchor,\n        following,\n        terminator,\n        isPair,\n        isExplicitPair,\n        isMapping,\n        overridableKeys = Object.create(null),\n        keyNode,\n        keyTag,\n        valueNode,\n        ch;\n\n    ch = state.input.charCodeAt(state.position);\n\n    if (ch === 0x5B\n    /* [ */\n    ) {\n      terminator = 0x5D;\n      /* ] */\n\n      isMapping = false;\n      _result = [];\n    } else if (ch === 0x7B\n    /* { */\n    ) {\n      terminator = 0x7D;\n      /* } */\n\n      isMapping = true;\n      _result = {};\n    } else {\n      return false;\n    }\n\n    if (state.anchor !== null) {\n      state.anchorMap[state.anchor] = _result;\n    }\n\n    ch = state.input.charCodeAt(++state.position);\n\n    while (ch !== 0) {\n      skipSeparationSpace(state, true, nodeIndent);\n      ch = state.input.charCodeAt(state.position);\n\n      if (ch === terminator) {\n        state.position++;\n        state.tag = _tag;\n        state.anchor = _anchor;\n        state.kind = isMapping ? 'mapping' : 'sequence';\n        state.result = _result;\n        return true;\n      } else if (!readNext) {\n        throwError(state, 'missed comma between flow collection entries');\n      } else if (ch === 0x2C\n      /* , */\n      ) {\n        // \"flow collection entries can never be completely empty\", as per YAML 1.2, section 7.4\n        throwError(state, \"expected the node content, but found ','\");\n      }\n\n      keyTag = keyNode = valueNode = null;\n      isPair = isExplicitPair = false;\n\n      if (ch === 0x3F\n      /* ? */\n      ) {\n        following = state.input.charCodeAt(state.position + 1);\n\n        if (is_WS_OR_EOL(following)) {\n          isPair = isExplicitPair = true;\n          state.position++;\n          skipSeparationSpace(state, true, nodeIndent);\n        }\n      }\n\n      _line = state.line; // Save the current line.\n\n      _lineStart = state.lineStart;\n      _pos = state.position;\n      composeNode(state, nodeIndent, CONTEXT_FLOW_IN, false, true);\n      keyTag = state.tag;\n      keyNode = state.result;\n      skipSeparationSpace(state, true, nodeIndent);\n      ch = state.input.charCodeAt(state.position);\n\n      if ((isExplicitPair || state.line === _line) && ch === 0x3A\n      /* : */\n      ) {\n        isPair = true;\n        ch = state.input.charCodeAt(++state.position);\n        skipSeparationSpace(state, true, nodeIndent);\n        composeNode(state, nodeIndent, CONTEXT_FLOW_IN, false, true);\n        valueNode = state.result;\n      }\n\n      if (isMapping) {\n        storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode, _line, _lineStart, _pos);\n      } else if (isPair) {\n        _result.push(storeMappingPair(state, null, overridableKeys, keyTag, keyNode, valueNode, _line, _lineStart, _pos));\n      } else {\n        _result.push(keyNode);\n      }\n\n      skipSeparationSpace(state, true, nodeIndent);\n      ch = state.input.charCodeAt(state.position);\n\n      if (ch === 0x2C\n      /* , */\n      ) {\n        readNext = true;\n        ch = state.input.charCodeAt(++state.position);\n      } else {\n        readNext = false;\n      }\n    }\n\n    throwError(state, 'unexpected end of the stream within a flow collection');\n  }\n\n  function readBlockScalar(state, nodeIndent) {\n    var captureStart,\n        folding,\n        chomping = CHOMPING_CLIP,\n        didReadContent = false,\n        detectedIndent = false,\n        textIndent = nodeIndent,\n        emptyLines = 0,\n        atMoreIndented = false,\n        tmp,\n        ch;\n    ch = state.input.charCodeAt(state.position);\n\n    if (ch === 0x7C\n    /* | */\n    ) {\n      folding = false;\n    } else if (ch === 0x3E\n    /* > */\n    ) {\n      folding = true;\n    } else {\n      return false;\n    }\n\n    state.kind = 'scalar';\n    state.result = '';\n\n    while (ch !== 0) {\n      ch = state.input.charCodeAt(++state.position);\n\n      if (ch === 0x2B\n      /* + */\n      || ch === 0x2D\n      /* - */\n      ) {\n        if (CHOMPING_CLIP === chomping) {\n          chomping = ch === 0x2B\n          /* + */\n          ? CHOMPING_KEEP : CHOMPING_STRIP;\n        } else {\n          throwError(state, 'repeat of a chomping mode identifier');\n        }\n      } else if ((tmp = fromDecimalCode(ch)) >= 0) {\n        if (tmp === 0) {\n          throwError(state, 'bad explicit indentation width of a block scalar; it cannot be less than one');\n        } else if (!detectedIndent) {\n          textIndent = nodeIndent + tmp - 1;\n          detectedIndent = true;\n        } else {\n          throwError(state, 'repeat of an indentation width identifier');\n        }\n      } else {\n        break;\n      }\n    }\n\n    if (is_WHITE_SPACE(ch)) {\n      do {\n        ch = state.input.charCodeAt(++state.position);\n      } while (is_WHITE_SPACE(ch));\n\n      if (ch === 0x23\n      /* # */\n      ) {\n        do {\n          ch = state.input.charCodeAt(++state.position);\n        } while (!is_EOL(ch) && ch !== 0);\n      }\n    }\n\n    while (ch !== 0) {\n      readLineBreak(state);\n      state.lineIndent = 0;\n      ch = state.input.charCodeAt(state.position);\n\n      while ((!detectedIndent || state.lineIndent < textIndent) && ch === 0x20\n      /* Space */\n      ) {\n        state.lineIndent++;\n        ch = state.input.charCodeAt(++state.position);\n      }\n\n      if (!detectedIndent && state.lineIndent > textIndent) {\n        textIndent = state.lineIndent;\n      }\n\n      if (is_EOL(ch)) {\n        emptyLines++;\n        continue;\n      } // End of the scalar.\n\n\n      if (state.lineIndent < textIndent) {\n        // Perform the chomping.\n        if (chomping === CHOMPING_KEEP) {\n          state.result += common.repeat('\\n', didReadContent ? 1 + emptyLines : emptyLines);\n        } else if (chomping === CHOMPING_CLIP) {\n          if (didReadContent) {\n            // i.e. only if the scalar is not empty.\n            state.result += '\\n';\n          }\n        } // Break this `while` cycle and go to the funciton's epilogue.\n\n\n        break;\n      } // Folded style: use fancy rules to handle line breaks.\n\n\n      if (folding) {\n        // Lines starting with white space characters (more-indented lines) are not folded.\n        if (is_WHITE_SPACE(ch)) {\n          atMoreIndented = true; // except for the first content line (cf. Example 8.1)\n\n          state.result += common.repeat('\\n', didReadContent ? 1 + emptyLines : emptyLines); // End of more-indented block.\n        } else if (atMoreIndented) {\n          atMoreIndented = false;\n          state.result += common.repeat('\\n', emptyLines + 1); // Just one line break - perceive as the same line.\n        } else if (emptyLines === 0) {\n          if (didReadContent) {\n            // i.e. only if we have already read some scalar content.\n            state.result += ' ';\n          } // Several line breaks - perceive as different lines.\n\n        } else {\n          state.result += common.repeat('\\n', emptyLines);\n        } // Literal style: just add exact number of line breaks between content lines.\n\n      } else {\n        // Keep all line breaks except the header line break.\n        state.result += common.repeat('\\n', didReadContent ? 1 + emptyLines : emptyLines);\n      }\n\n      didReadContent = true;\n      detectedIndent = true;\n      emptyLines = 0;\n      captureStart = state.position;\n\n      while (!is_EOL(ch) && ch !== 0) {\n        ch = state.input.charCodeAt(++state.position);\n      }\n\n      captureSegment(state, captureStart, state.position, false);\n    }\n\n    return true;\n  }\n\n  function readBlockSequence(state, nodeIndent) {\n    var _line,\n        _tag = state.tag,\n        _anchor = state.anchor,\n        _result = [],\n        following,\n        detected = false,\n        ch; // there is a leading tab before this token, so it can't be a block sequence/mapping;\n    // it can still be flow sequence/mapping or a scalar\n\n\n    if (state.firstTabInLine !== -1) return false;\n\n    if (state.anchor !== null) {\n      state.anchorMap[state.anchor] = _result;\n    }\n\n    ch = state.input.charCodeAt(state.position);\n\n    while (ch !== 0) {\n      if (state.firstTabInLine !== -1) {\n        state.position = state.firstTabInLine;\n        throwError(state, 'tab characters must not be used in indentation');\n      }\n\n      if (ch !== 0x2D\n      /* - */\n      ) {\n        break;\n      }\n\n      following = state.input.charCodeAt(state.position + 1);\n\n      if (!is_WS_OR_EOL(following)) {\n        break;\n      }\n\n      detected = true;\n      state.position++;\n\n      if (skipSeparationSpace(state, true, -1)) {\n        if (state.lineIndent <= nodeIndent) {\n          _result.push(null);\n\n          ch = state.input.charCodeAt(state.position);\n          continue;\n        }\n      }\n\n      _line = state.line;\n      composeNode(state, nodeIndent, CONTEXT_BLOCK_IN, false, true);\n\n      _result.push(state.result);\n\n      skipSeparationSpace(state, true, -1);\n      ch = state.input.charCodeAt(state.position);\n\n      if ((state.line === _line || state.lineIndent > nodeIndent) && ch !== 0) {\n        throwError(state, 'bad indentation of a sequence entry');\n      } else if (state.lineIndent < nodeIndent) {\n        break;\n      }\n    }\n\n    if (detected) {\n      state.tag = _tag;\n      state.anchor = _anchor;\n      state.kind = 'sequence';\n      state.result = _result;\n      return true;\n    }\n\n    return false;\n  }\n\n  function readBlockMapping(state, nodeIndent, flowIndent) {\n    var following,\n        allowCompact,\n        _line,\n        _keyLine,\n        _keyLineStart,\n        _keyPos,\n        _tag = state.tag,\n        _anchor = state.anchor,\n        _result = {},\n        overridableKeys = Object.create(null),\n        keyTag = null,\n        keyNode = null,\n        valueNode = null,\n        atExplicitKey = false,\n        detected = false,\n        ch; // there is a leading tab before this token, so it can't be a block sequence/mapping;\n    // it can still be flow sequence/mapping or a scalar\n\n\n    if (state.firstTabInLine !== -1) return false;\n\n    if (state.anchor !== null) {\n      state.anchorMap[state.anchor] = _result;\n    }\n\n    ch = state.input.charCodeAt(state.position);\n\n    while (ch !== 0) {\n      if (!atExplicitKey && state.firstTabInLine !== -1) {\n        state.position = state.firstTabInLine;\n        throwError(state, 'tab characters must not be used in indentation');\n      }\n\n      following = state.input.charCodeAt(state.position + 1);\n      _line = state.line; // Save the current line.\n      //\n      // Explicit notation case. There are two separate blocks:\n      // first for the key (denoted by \"?\") and second for the value (denoted by \":\")\n      //\n\n      if ((ch === 0x3F\n      /* ? */\n      || ch === 0x3A\n      /* : */\n      ) && is_WS_OR_EOL(following)) {\n        if (ch === 0x3F\n        /* ? */\n        ) {\n          if (atExplicitKey) {\n            storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null, _keyLine, _keyLineStart, _keyPos);\n            keyTag = keyNode = valueNode = null;\n          }\n\n          detected = true;\n          atExplicitKey = true;\n          allowCompact = true;\n        } else if (atExplicitKey) {\n          // i.e. 0x3A/* : */ === character after the explicit key.\n          atExplicitKey = false;\n          allowCompact = true;\n        } else {\n          throwError(state, 'incomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line');\n        }\n\n        state.position += 1;\n        ch = following; //\n        // Implicit notation case. Flow-style node as the key first, then \":\", and the value.\n        //\n      } else {\n        _keyLine = state.line;\n        _keyLineStart = state.lineStart;\n        _keyPos = state.position;\n\n        if (!composeNode(state, flowIndent, CONTEXT_FLOW_OUT, false, true)) {\n          // Neither implicit nor explicit notation.\n          // Reading is done. Go to the epilogue.\n          break;\n        }\n\n        if (state.line === _line) {\n          ch = state.input.charCodeAt(state.position);\n\n          while (is_WHITE_SPACE(ch)) {\n            ch = state.input.charCodeAt(++state.position);\n          }\n\n          if (ch === 0x3A\n          /* : */\n          ) {\n            ch = state.input.charCodeAt(++state.position);\n\n            if (!is_WS_OR_EOL(ch)) {\n              throwError(state, 'a whitespace character is expected after the key-value separator within a block mapping');\n            }\n\n            if (atExplicitKey) {\n              storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null, _keyLine, _keyLineStart, _keyPos);\n              keyTag = keyNode = valueNode = null;\n            }\n\n            detected = true;\n            atExplicitKey = false;\n            allowCompact = false;\n            keyTag = state.tag;\n            keyNode = state.result;\n          } else if (detected) {\n            throwError(state, 'can not read an implicit mapping pair; a colon is missed');\n          } else {\n            state.tag = _tag;\n            state.anchor = _anchor;\n            return true; // Keep the result of `composeNode`.\n          }\n        } else if (detected) {\n          throwError(state, 'can not read a block mapping entry; a multiline key may not be an implicit key');\n        } else {\n          state.tag = _tag;\n          state.anchor = _anchor;\n          return true; // Keep the result of `composeNode`.\n        }\n      } //\n      // Common reading code for both explicit and implicit notations.\n      //\n\n\n      if (state.line === _line || state.lineIndent > nodeIndent) {\n        if (atExplicitKey) {\n          _keyLine = state.line;\n          _keyLineStart = state.lineStart;\n          _keyPos = state.position;\n        }\n\n        if (composeNode(state, nodeIndent, CONTEXT_BLOCK_OUT, true, allowCompact)) {\n          if (atExplicitKey) {\n            keyNode = state.result;\n          } else {\n            valueNode = state.result;\n          }\n        }\n\n        if (!atExplicitKey) {\n          storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode, _keyLine, _keyLineStart, _keyPos);\n          keyTag = keyNode = valueNode = null;\n        }\n\n        skipSeparationSpace(state, true, -1);\n        ch = state.input.charCodeAt(state.position);\n      }\n\n      if ((state.line === _line || state.lineIndent > nodeIndent) && ch !== 0) {\n        throwError(state, 'bad indentation of a mapping entry');\n      } else if (state.lineIndent < nodeIndent) {\n        break;\n      }\n    } //\n    // Epilogue.\n    //\n    // Special case: last mapping's node contains only the key in explicit notation.\n\n\n    if (atExplicitKey) {\n      storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null, _keyLine, _keyLineStart, _keyPos);\n    } // Expose the resulting mapping.\n\n\n    if (detected) {\n      state.tag = _tag;\n      state.anchor = _anchor;\n      state.kind = 'mapping';\n      state.result = _result;\n    }\n\n    return detected;\n  }\n\n  function readTagProperty(state) {\n    var _position,\n        isVerbatim = false,\n        isNamed = false,\n        tagHandle,\n        tagName,\n        ch;\n\n    ch = state.input.charCodeAt(state.position);\n    if (ch !== 0x21\n    /* ! */\n    ) return false;\n\n    if (state.tag !== null) {\n      throwError(state, 'duplication of a tag property');\n    }\n\n    ch = state.input.charCodeAt(++state.position);\n\n    if (ch === 0x3C\n    /* < */\n    ) {\n      isVerbatim = true;\n      ch = state.input.charCodeAt(++state.position);\n    } else if (ch === 0x21\n    /* ! */\n    ) {\n      isNamed = true;\n      tagHandle = '!!';\n      ch = state.input.charCodeAt(++state.position);\n    } else {\n      tagHandle = '!';\n    }\n\n    _position = state.position;\n\n    if (isVerbatim) {\n      do {\n        ch = state.input.charCodeAt(++state.position);\n      } while (ch !== 0 && ch !== 0x3E\n      /* > */\n      );\n\n      if (state.position < state.length) {\n        tagName = state.input.slice(_position, state.position);\n        ch = state.input.charCodeAt(++state.position);\n      } else {\n        throwError(state, 'unexpected end of the stream within a verbatim tag');\n      }\n    } else {\n      while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n        if (ch === 0x21\n        /* ! */\n        ) {\n          if (!isNamed) {\n            tagHandle = state.input.slice(_position - 1, state.position + 1);\n\n            if (!PATTERN_TAG_HANDLE.test(tagHandle)) {\n              throwError(state, 'named tag handle cannot contain such characters');\n            }\n\n            isNamed = true;\n            _position = state.position + 1;\n          } else {\n            throwError(state, 'tag suffix cannot contain exclamation marks');\n          }\n        }\n\n        ch = state.input.charCodeAt(++state.position);\n      }\n\n      tagName = state.input.slice(_position, state.position);\n\n      if (PATTERN_FLOW_INDICATORS.test(tagName)) {\n        throwError(state, 'tag suffix cannot contain flow indicator characters');\n      }\n    }\n\n    if (tagName && !PATTERN_TAG_URI.test(tagName)) {\n      throwError(state, 'tag name cannot contain such characters: ' + tagName);\n    }\n\n    try {\n      tagName = decodeURIComponent(tagName);\n    } catch (err) {\n      throwError(state, 'tag name is malformed: ' + tagName);\n    }\n\n    if (isVerbatim) {\n      state.tag = tagName;\n    } else if (_hasOwnProperty$1.call(state.tagMap, tagHandle)) {\n      state.tag = state.tagMap[tagHandle] + tagName;\n    } else if (tagHandle === '!') {\n      state.tag = '!' + tagName;\n    } else if (tagHandle === '!!') {\n      state.tag = 'tag:yaml.org,2002:' + tagName;\n    } else {\n      throwError(state, 'undeclared tag handle \"' + tagHandle + '\"');\n    }\n\n    return true;\n  }\n\n  function readAnchorProperty(state) {\n    var _position, ch;\n\n    ch = state.input.charCodeAt(state.position);\n    if (ch !== 0x26\n    /* & */\n    ) return false;\n\n    if (state.anchor !== null) {\n      throwError(state, 'duplication of an anchor property');\n    }\n\n    ch = state.input.charCodeAt(++state.position);\n    _position = state.position;\n\n    while (ch !== 0 && !is_WS_OR_EOL(ch) && !is_FLOW_INDICATOR(ch)) {\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    if (state.position === _position) {\n      throwError(state, 'name of an anchor node must contain at least one character');\n    }\n\n    state.anchor = state.input.slice(_position, state.position);\n    return true;\n  }\n\n  function readAlias(state) {\n    var _position, alias, ch;\n\n    ch = state.input.charCodeAt(state.position);\n    if (ch !== 0x2A\n    /* * */\n    ) return false;\n    ch = state.input.charCodeAt(++state.position);\n    _position = state.position;\n\n    while (ch !== 0 && !is_WS_OR_EOL(ch) && !is_FLOW_INDICATOR(ch)) {\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    if (state.position === _position) {\n      throwError(state, 'name of an alias node must contain at least one character');\n    }\n\n    alias = state.input.slice(_position, state.position);\n\n    if (!_hasOwnProperty$1.call(state.anchorMap, alias)) {\n      throwError(state, 'unidentified alias \"' + alias + '\"');\n    }\n\n    state.result = state.anchorMap[alias];\n    skipSeparationSpace(state, true, -1);\n    return true;\n  }\n\n  function composeNode(state, parentIndent, nodeContext, allowToSeek, allowCompact) {\n    var allowBlockStyles,\n        allowBlockScalars,\n        allowBlockCollections,\n        indentStatus = 1,\n        // 1: this>parent, 0: this=parent, -1: this<parent\n    atNewLine = false,\n        hasContent = false,\n        typeIndex,\n        typeQuantity,\n        typeList,\n        type,\n        flowIndent,\n        blockIndent;\n\n    if (state.listener !== null) {\n      state.listener('open', state);\n    }\n\n    state.tag = null;\n    state.anchor = null;\n    state.kind = null;\n    state.result = null;\n    allowBlockStyles = allowBlockScalars = allowBlockCollections = CONTEXT_BLOCK_OUT === nodeContext || CONTEXT_BLOCK_IN === nodeContext;\n\n    if (allowToSeek) {\n      if (skipSeparationSpace(state, true, -1)) {\n        atNewLine = true;\n\n        if (state.lineIndent > parentIndent) {\n          indentStatus = 1;\n        } else if (state.lineIndent === parentIndent) {\n          indentStatus = 0;\n        } else if (state.lineIndent < parentIndent) {\n          indentStatus = -1;\n        }\n      }\n    }\n\n    if (indentStatus === 1) {\n      while (readTagProperty(state) || readAnchorProperty(state)) {\n        if (skipSeparationSpace(state, true, -1)) {\n          atNewLine = true;\n          allowBlockCollections = allowBlockStyles;\n\n          if (state.lineIndent > parentIndent) {\n            indentStatus = 1;\n          } else if (state.lineIndent === parentIndent) {\n            indentStatus = 0;\n          } else if (state.lineIndent < parentIndent) {\n            indentStatus = -1;\n          }\n        } else {\n          allowBlockCollections = false;\n        }\n      }\n    }\n\n    if (allowBlockCollections) {\n      allowBlockCollections = atNewLine || allowCompact;\n    }\n\n    if (indentStatus === 1 || CONTEXT_BLOCK_OUT === nodeContext) {\n      if (CONTEXT_FLOW_IN === nodeContext || CONTEXT_FLOW_OUT === nodeContext) {\n        flowIndent = parentIndent;\n      } else {\n        flowIndent = parentIndent + 1;\n      }\n\n      blockIndent = state.position - state.lineStart;\n\n      if (indentStatus === 1) {\n        if (allowBlockCollections && (readBlockSequence(state, blockIndent) || readBlockMapping(state, blockIndent, flowIndent)) || readFlowCollection(state, flowIndent)) {\n          hasContent = true;\n        } else {\n          if (allowBlockScalars && readBlockScalar(state, flowIndent) || readSingleQuotedScalar(state, flowIndent) || readDoubleQuotedScalar(state, flowIndent)) {\n            hasContent = true;\n          } else if (readAlias(state)) {\n            hasContent = true;\n\n            if (state.tag !== null || state.anchor !== null) {\n              throwError(state, 'alias node should not have any properties');\n            }\n          } else if (readPlainScalar(state, flowIndent, CONTEXT_FLOW_IN === nodeContext)) {\n            hasContent = true;\n\n            if (state.tag === null) {\n              state.tag = '?';\n            }\n          }\n\n          if (state.anchor !== null) {\n            state.anchorMap[state.anchor] = state.result;\n          }\n        }\n      } else if (indentStatus === 0) {\n        // Special case: block sequences are allowed to have same indentation level as the parent.\n        // http://www.yaml.org/spec/1.2/spec.html#id2799784\n        hasContent = allowBlockCollections && readBlockSequence(state, blockIndent);\n      }\n    }\n\n    if (state.tag === null) {\n      if (state.anchor !== null) {\n        state.anchorMap[state.anchor] = state.result;\n      }\n    } else if (state.tag === '?') {\n      // Implicit resolving is not allowed for non-scalar types, and '?'\n      // non-specific tag is only automatically assigned to plain scalars.\n      //\n      // We only need to check kind conformity in case user explicitly assigns '?'\n      // tag, for example like this: \"!<?> [0]\"\n      //\n      if (state.result !== null && state.kind !== 'scalar') {\n        throwError(state, 'unacceptable node kind for !<?> tag; it should be \"scalar\", not \"' + state.kind + '\"');\n      }\n\n      for (typeIndex = 0, typeQuantity = state.implicitTypes.length; typeIndex < typeQuantity; typeIndex += 1) {\n        type = state.implicitTypes[typeIndex];\n\n        if (type.resolve(state.result)) {\n          // `state.result` updated in resolver if matched\n          state.result = type.construct(state.result);\n          state.tag = type.tag;\n\n          if (state.anchor !== null) {\n            state.anchorMap[state.anchor] = state.result;\n          }\n\n          break;\n        }\n      }\n    } else if (state.tag !== '!') {\n      if (_hasOwnProperty$1.call(state.typeMap[state.kind || 'fallback'], state.tag)) {\n        type = state.typeMap[state.kind || 'fallback'][state.tag];\n      } else {\n        // looking for multi type\n        type = null;\n        typeList = state.typeMap.multi[state.kind || 'fallback'];\n\n        for (typeIndex = 0, typeQuantity = typeList.length; typeIndex < typeQuantity; typeIndex += 1) {\n          if (state.tag.slice(0, typeList[typeIndex].tag.length) === typeList[typeIndex].tag) {\n            type = typeList[typeIndex];\n            break;\n          }\n        }\n      }\n\n      if (!type) {\n        throwError(state, 'unknown tag !<' + state.tag + '>');\n      }\n\n      if (state.result !== null && type.kind !== state.kind) {\n        throwError(state, 'unacceptable node kind for !<' + state.tag + '> tag; it should be \"' + type.kind + '\", not \"' + state.kind + '\"');\n      }\n\n      if (!type.resolve(state.result, state.tag)) {\n        // `state.result` updated in resolver if matched\n        throwError(state, 'cannot resolve a node with !<' + state.tag + '> explicit tag');\n      } else {\n        state.result = type.construct(state.result, state.tag);\n\n        if (state.anchor !== null) {\n          state.anchorMap[state.anchor] = state.result;\n        }\n      }\n    }\n\n    if (state.listener !== null) {\n      state.listener('close', state);\n    }\n\n    return state.tag !== null || state.anchor !== null || hasContent;\n  }\n\n  function readDocument(state) {\n    var documentStart = state.position,\n        _position,\n        directiveName,\n        directiveArgs,\n        hasDirectives = false,\n        ch;\n\n    state.version = null;\n    state.checkLineBreaks = state.legacy;\n    state.tagMap = Object.create(null);\n    state.anchorMap = Object.create(null);\n\n    while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n      skipSeparationSpace(state, true, -1);\n      ch = state.input.charCodeAt(state.position);\n\n      if (state.lineIndent > 0 || ch !== 0x25\n      /* % */\n      ) {\n        break;\n      }\n\n      hasDirectives = true;\n      ch = state.input.charCodeAt(++state.position);\n      _position = state.position;\n\n      while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n        ch = state.input.charCodeAt(++state.position);\n      }\n\n      directiveName = state.input.slice(_position, state.position);\n      directiveArgs = [];\n\n      if (directiveName.length < 1) {\n        throwError(state, 'directive name must not be less than one character in length');\n      }\n\n      while (ch !== 0) {\n        while (is_WHITE_SPACE(ch)) {\n          ch = state.input.charCodeAt(++state.position);\n        }\n\n        if (ch === 0x23\n        /* # */\n        ) {\n          do {\n            ch = state.input.charCodeAt(++state.position);\n          } while (ch !== 0 && !is_EOL(ch));\n\n          break;\n        }\n\n        if (is_EOL(ch)) break;\n        _position = state.position;\n\n        while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n          ch = state.input.charCodeAt(++state.position);\n        }\n\n        directiveArgs.push(state.input.slice(_position, state.position));\n      }\n\n      if (ch !== 0) readLineBreak(state);\n\n      if (_hasOwnProperty$1.call(directiveHandlers, directiveName)) {\n        directiveHandlers[directiveName](state, directiveName, directiveArgs);\n      } else {\n        throwWarning(state, 'unknown document directive \"' + directiveName + '\"');\n      }\n    }\n\n    skipSeparationSpace(state, true, -1);\n\n    if (state.lineIndent === 0 && state.input.charCodeAt(state.position) === 0x2D\n    /* - */\n    && state.input.charCodeAt(state.position + 1) === 0x2D\n    /* - */\n    && state.input.charCodeAt(state.position + 2) === 0x2D\n    /* - */\n    ) {\n      state.position += 3;\n      skipSeparationSpace(state, true, -1);\n    } else if (hasDirectives) {\n      throwError(state, 'directives end mark is expected');\n    }\n\n    composeNode(state, state.lineIndent - 1, CONTEXT_BLOCK_OUT, false, true);\n    skipSeparationSpace(state, true, -1);\n\n    if (state.checkLineBreaks && PATTERN_NON_ASCII_LINE_BREAKS.test(state.input.slice(documentStart, state.position))) {\n      throwWarning(state, 'non-ASCII line breaks are interpreted as content');\n    }\n\n    state.documents.push(state.result);\n\n    if (state.position === state.lineStart && testDocumentSeparator(state)) {\n      if (state.input.charCodeAt(state.position) === 0x2E\n      /* . */\n      ) {\n        state.position += 3;\n        skipSeparationSpace(state, true, -1);\n      }\n\n      return;\n    }\n\n    if (state.position < state.length - 1) {\n      throwError(state, 'end of the stream or a document separator is expected');\n    } else {\n      return;\n    }\n  }\n\n  function loadDocuments(input, options) {\n    input = String(input);\n    options = options || {};\n\n    if (input.length !== 0) {\n      // Add tailing `\\n` if not exists\n      if (input.charCodeAt(input.length - 1) !== 0x0A\n      /* LF */\n      && input.charCodeAt(input.length - 1) !== 0x0D\n      /* CR */\n      ) {\n        input += '\\n';\n      } // Strip BOM\n\n\n      if (input.charCodeAt(0) === 0xFEFF) {\n        input = input.slice(1);\n      }\n    }\n\n    var state = new State$1(input, options);\n    var nullpos = input.indexOf('\\0');\n\n    if (nullpos !== -1) {\n      state.position = nullpos;\n      throwError(state, 'null byte is not allowed in input');\n    } // Use 0 as string terminator. That significantly simplifies bounds check.\n\n\n    state.input += '\\0';\n\n    while (state.input.charCodeAt(state.position) === 0x20\n    /* Space */\n    ) {\n      state.lineIndent += 1;\n      state.position += 1;\n    }\n\n    while (state.position < state.length - 1) {\n      readDocument(state);\n    }\n\n    return state.documents;\n  }\n\n  function loadAll$1(input, iterator, options) {\n    if (iterator !== null && typeof iterator === 'object' && typeof options === 'undefined') {\n      options = iterator;\n      iterator = null;\n    }\n\n    var documents = loadDocuments(input, options);\n\n    if (typeof iterator !== 'function') {\n      return documents;\n    }\n\n    for (var index = 0, length = documents.length; index < length; index += 1) {\n      iterator(documents[index]);\n    }\n  }\n\n  function load$1(input, options) {\n    var documents = loadDocuments(input, options);\n\n    if (documents.length === 0) {\n      /*eslint-disable no-undefined*/\n      return undefined;\n    } else if (documents.length === 1) {\n      return documents[0];\n    }\n\n    throw new exception('expected a single document in the stream, but found more');\n  }\n\n  var loadAll_1 = loadAll$1;\n  var load_1 = load$1;\n  var loader = {\n    loadAll: loadAll_1,\n    load: load_1\n  };\n  /*eslint-disable no-use-before-define*/\n\n  var _toString = Object.prototype.toString;\n  var _hasOwnProperty = Object.prototype.hasOwnProperty;\n  var CHAR_BOM = 0xFEFF;\n  var CHAR_TAB = 0x09;\n  /* Tab */\n\n  var CHAR_LINE_FEED = 0x0A;\n  /* LF */\n\n  var CHAR_CARRIAGE_RETURN = 0x0D;\n  /* CR */\n\n  var CHAR_SPACE = 0x20;\n  /* Space */\n\n  var CHAR_EXCLAMATION = 0x21;\n  /* ! */\n\n  var CHAR_DOUBLE_QUOTE = 0x22;\n  /* \" */\n\n  var CHAR_SHARP = 0x23;\n  /* # */\n\n  var CHAR_PERCENT = 0x25;\n  /* % */\n\n  var CHAR_AMPERSAND = 0x26;\n  /* & */\n\n  var CHAR_SINGLE_QUOTE = 0x27;\n  /* ' */\n\n  var CHAR_ASTERISK = 0x2A;\n  /* * */\n\n  var CHAR_COMMA = 0x2C;\n  /* , */\n\n  var CHAR_MINUS = 0x2D;\n  /* - */\n\n  var CHAR_COLON = 0x3A;\n  /* : */\n\n  var CHAR_EQUALS = 0x3D;\n  /* = */\n\n  var CHAR_GREATER_THAN = 0x3E;\n  /* > */\n\n  var CHAR_QUESTION = 0x3F;\n  /* ? */\n\n  var CHAR_COMMERCIAL_AT = 0x40;\n  /* @ */\n\n  var CHAR_LEFT_SQUARE_BRACKET = 0x5B;\n  /* [ */\n\n  var CHAR_RIGHT_SQUARE_BRACKET = 0x5D;\n  /* ] */\n\n  var CHAR_GRAVE_ACCENT = 0x60;\n  /* ` */\n\n  var CHAR_LEFT_CURLY_BRACKET = 0x7B;\n  /* { */\n\n  var CHAR_VERTICAL_LINE = 0x7C;\n  /* | */\n\n  var CHAR_RIGHT_CURLY_BRACKET = 0x7D;\n  /* } */\n\n  var ESCAPE_SEQUENCES = {};\n  ESCAPE_SEQUENCES[0x00] = '\\\\0';\n  ESCAPE_SEQUENCES[0x07] = '\\\\a';\n  ESCAPE_SEQUENCES[0x08] = '\\\\b';\n  ESCAPE_SEQUENCES[0x09] = '\\\\t';\n  ESCAPE_SEQUENCES[0x0A] = '\\\\n';\n  ESCAPE_SEQUENCES[0x0B] = '\\\\v';\n  ESCAPE_SEQUENCES[0x0C] = '\\\\f';\n  ESCAPE_SEQUENCES[0x0D] = '\\\\r';\n  ESCAPE_SEQUENCES[0x1B] = '\\\\e';\n  ESCAPE_SEQUENCES[0x22] = '\\\\\"';\n  ESCAPE_SEQUENCES[0x5C] = '\\\\\\\\';\n  ESCAPE_SEQUENCES[0x85] = '\\\\N';\n  ESCAPE_SEQUENCES[0xA0] = '\\\\_';\n  ESCAPE_SEQUENCES[0x2028] = '\\\\L';\n  ESCAPE_SEQUENCES[0x2029] = '\\\\P';\n  var DEPRECATED_BOOLEANS_SYNTAX = ['y', 'Y', 'yes', 'Yes', 'YES', 'on', 'On', 'ON', 'n', 'N', 'no', 'No', 'NO', 'off', 'Off', 'OFF'];\n  var DEPRECATED_BASE60_SYNTAX = /^[-+]?[0-9_]+(?::[0-9_]+)+(?:\\.[0-9_]*)?$/;\n\n  function compileStyleMap(schema, map) {\n    var result, keys, index, length, tag, style, type;\n    if (map === null) return {};\n    result = {};\n    keys = Object.keys(map);\n\n    for (index = 0, length = keys.length; index < length; index += 1) {\n      tag = keys[index];\n      style = String(map[tag]);\n\n      if (tag.slice(0, 2) === '!!') {\n        tag = 'tag:yaml.org,2002:' + tag.slice(2);\n      }\n\n      type = schema.compiledTypeMap['fallback'][tag];\n\n      if (type && _hasOwnProperty.call(type.styleAliases, style)) {\n        style = type.styleAliases[style];\n      }\n\n      result[tag] = style;\n    }\n\n    return result;\n  }\n\n  function encodeHex(character) {\n    var string, handle, length;\n    string = character.toString(16).toUpperCase();\n\n    if (character <= 0xFF) {\n      handle = 'x';\n      length = 2;\n    } else if (character <= 0xFFFF) {\n      handle = 'u';\n      length = 4;\n    } else if (character <= 0xFFFFFFFF) {\n      handle = 'U';\n      length = 8;\n    } else {\n      throw new exception('code point within a string may not be greater than 0xFFFFFFFF');\n    }\n\n    return '\\\\' + handle + common.repeat('0', length - string.length) + string;\n  }\n\n  var QUOTING_TYPE_SINGLE = 1,\n      QUOTING_TYPE_DOUBLE = 2;\n\n  function State(options) {\n    this.schema = options['schema'] || _default;\n    this.indent = Math.max(1, options['indent'] || 2);\n    this.noArrayIndent = options['noArrayIndent'] || false;\n    this.skipInvalid = options['skipInvalid'] || false;\n    this.flowLevel = common.isNothing(options['flowLevel']) ? -1 : options['flowLevel'];\n    this.styleMap = compileStyleMap(this.schema, options['styles'] || null);\n    this.sortKeys = options['sortKeys'] || false;\n    this.lineWidth = options['lineWidth'] || 80;\n    this.noRefs = options['noRefs'] || false;\n    this.noCompatMode = options['noCompatMode'] || false;\n    this.condenseFlow = options['condenseFlow'] || false;\n    this.quotingType = options['quotingType'] === '\"' ? QUOTING_TYPE_DOUBLE : QUOTING_TYPE_SINGLE;\n    this.forceQuotes = options['forceQuotes'] || false;\n    this.replacer = typeof options['replacer'] === 'function' ? options['replacer'] : null;\n    this.implicitTypes = this.schema.compiledImplicit;\n    this.explicitTypes = this.schema.compiledExplicit;\n    this.tag = null;\n    this.result = '';\n    this.duplicates = [];\n    this.usedDuplicates = null;\n  } // Indents every line in a string. Empty lines (\\n only) are not indented.\n\n\n  function indentString(string, spaces) {\n    var ind = common.repeat(' ', spaces),\n        position = 0,\n        next = -1,\n        result = '',\n        line,\n        length = string.length;\n\n    while (position < length) {\n      next = string.indexOf('\\n', position);\n\n      if (next === -1) {\n        line = string.slice(position);\n        position = length;\n      } else {\n        line = string.slice(position, next + 1);\n        position = next + 1;\n      }\n\n      if (line.length && line !== '\\n') result += ind;\n      result += line;\n    }\n\n    return result;\n  }\n\n  function generateNextLine(state, level) {\n    return '\\n' + common.repeat(' ', state.indent * level);\n  }\n\n  function testImplicitResolving(state, str) {\n    var index, length, type;\n\n    for (index = 0, length = state.implicitTypes.length; index < length; index += 1) {\n      type = state.implicitTypes[index];\n\n      if (type.resolve(str)) {\n        return true;\n      }\n    }\n\n    return false;\n  } // [33] s-white ::= s-space | s-tab\n\n\n  function isWhitespace(c) {\n    return c === CHAR_SPACE || c === CHAR_TAB;\n  } // Returns true if the character can be printed without escaping.\n  // From YAML 1.2: \"any allowed characters known to be non-printable\n  // should also be escaped. [However,] This isn’t mandatory\"\n  // Derived from nb-char - \\t - #x85 - #xA0 - #x2028 - #x2029.\n\n\n  function isPrintable(c) {\n    return 0x00020 <= c && c <= 0x00007E || 0x000A1 <= c && c <= 0x00D7FF && c !== 0x2028 && c !== 0x2029 || 0x0E000 <= c && c <= 0x00FFFD && c !== CHAR_BOM || 0x10000 <= c && c <= 0x10FFFF;\n  } // [34] ns-char ::= nb-char - s-white\n  // [27] nb-char ::= c-printable - b-char - c-byte-order-mark\n  // [26] b-char  ::= b-line-feed | b-carriage-return\n  // Including s-white (for some reason, examples doesn't match specs in this aspect)\n  // ns-char ::= c-printable - b-line-feed - b-carriage-return - c-byte-order-mark\n\n\n  function isNsCharOrWhitespace(c) {\n    return isPrintable(c) && c !== CHAR_BOM // - b-char\n    && c !== CHAR_CARRIAGE_RETURN && c !== CHAR_LINE_FEED;\n  } // [127]  ns-plain-safe(c) ::= c = flow-out  ⇒ ns-plain-safe-out\n  //                             c = flow-in   ⇒ ns-plain-safe-in\n  //                             c = block-key ⇒ ns-plain-safe-out\n  //                             c = flow-key  ⇒ ns-plain-safe-in\n  // [128] ns-plain-safe-out ::= ns-char\n  // [129]  ns-plain-safe-in ::= ns-char - c-flow-indicator\n  // [130]  ns-plain-char(c) ::=  ( ns-plain-safe(c) - “:” - “#” )\n  //                            | ( /* An ns-char preceding */ “#” )\n  //                            | ( “:” /* Followed by an ns-plain-safe(c) */ )\n\n\n  function isPlainSafe(c, prev, inblock) {\n    var cIsNsCharOrWhitespace = isNsCharOrWhitespace(c);\n    var cIsNsChar = cIsNsCharOrWhitespace && !isWhitespace(c);\n    return ( // ns-plain-safe\n    inblock ? // c = flow-in\n    cIsNsCharOrWhitespace : cIsNsCharOrWhitespace // - c-flow-indicator\n    && c !== CHAR_COMMA && c !== CHAR_LEFT_SQUARE_BRACKET && c !== CHAR_RIGHT_SQUARE_BRACKET && c !== CHAR_LEFT_CURLY_BRACKET && c !== CHAR_RIGHT_CURLY_BRACKET // ns-plain-char\n    ) && c !== CHAR_SHARP // false on '#'\n    && !(prev === CHAR_COLON && !cIsNsChar) // false on ': '\n    || isNsCharOrWhitespace(prev) && !isWhitespace(prev) && c === CHAR_SHARP // change to true on '[^ ]#'\n    || prev === CHAR_COLON && cIsNsChar; // change to true on ':[^ ]'\n  } // Simplified test for values allowed as the first character in plain style.\n\n\n  function isPlainSafeFirst(c) {\n    // Uses a subset of ns-char - c-indicator\n    // where ns-char = nb-char - s-white.\n    // No support of ( ( “?” | “:” | “-” ) /* Followed by an ns-plain-safe(c)) */ ) part\n    return isPrintable(c) && c !== CHAR_BOM && !isWhitespace(c) // - s-white\n    // - (c-indicator ::=\n    // “-” | “?” | “:” | “,” | “[” | “]” | “{” | “}”\n    && c !== CHAR_MINUS && c !== CHAR_QUESTION && c !== CHAR_COLON && c !== CHAR_COMMA && c !== CHAR_LEFT_SQUARE_BRACKET && c !== CHAR_RIGHT_SQUARE_BRACKET && c !== CHAR_LEFT_CURLY_BRACKET && c !== CHAR_RIGHT_CURLY_BRACKET // | “#” | “&” | “*” | “!” | “|” | “=” | “>” | “'” | “\"”\n    && c !== CHAR_SHARP && c !== CHAR_AMPERSAND && c !== CHAR_ASTERISK && c !== CHAR_EXCLAMATION && c !== CHAR_VERTICAL_LINE && c !== CHAR_EQUALS && c !== CHAR_GREATER_THAN && c !== CHAR_SINGLE_QUOTE && c !== CHAR_DOUBLE_QUOTE // | “%” | “@” | “`”)\n    && c !== CHAR_PERCENT && c !== CHAR_COMMERCIAL_AT && c !== CHAR_GRAVE_ACCENT;\n  } // Simplified test for values allowed as the last character in plain style.\n\n\n  function isPlainSafeLast(c) {\n    // just not whitespace or colon, it will be checked to be plain character later\n    return !isWhitespace(c) && c !== CHAR_COLON;\n  } // Same as 'string'.codePointAt(pos), but works in older browsers.\n\n\n  function codePointAt(string, pos) {\n    var first = string.charCodeAt(pos),\n        second;\n\n    if (first >= 0xD800 && first <= 0xDBFF && pos + 1 < string.length) {\n      second = string.charCodeAt(pos + 1);\n\n      if (second >= 0xDC00 && second <= 0xDFFF) {\n        // https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n        return (first - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n      }\n    }\n\n    return first;\n  } // Determines whether block indentation indicator is required.\n\n\n  function needIndentIndicator(string) {\n    var leadingSpaceRe = /^\\n* /;\n    return leadingSpaceRe.test(string);\n  }\n\n  var STYLE_PLAIN = 1,\n      STYLE_SINGLE = 2,\n      STYLE_LITERAL = 3,\n      STYLE_FOLDED = 4,\n      STYLE_DOUBLE = 5; // Determines which scalar styles are possible and returns the preferred style.\n  // lineWidth = -1 => no limit.\n  // Pre-conditions: str.length > 0.\n  // Post-conditions:\n  //    STYLE_PLAIN or STYLE_SINGLE => no \\n are in the string.\n  //    STYLE_LITERAL => no lines are suitable for folding (or lineWidth is -1).\n  //    STYLE_FOLDED => a line > lineWidth and can be folded (and lineWidth != -1).\n\n  function chooseScalarStyle(string, singleLineOnly, indentPerLevel, lineWidth, testAmbiguousType, quotingType, forceQuotes, inblock) {\n    var i;\n    var char = 0;\n    var prevChar = null;\n    var hasLineBreak = false;\n    var hasFoldableLine = false; // only checked if shouldTrackWidth\n\n    var shouldTrackWidth = lineWidth !== -1;\n    var previousLineBreak = -1; // count the first line correctly\n\n    var plain = isPlainSafeFirst(codePointAt(string, 0)) && isPlainSafeLast(codePointAt(string, string.length - 1));\n\n    if (singleLineOnly || forceQuotes) {\n      // Case: no block styles.\n      // Check for disallowed characters to rule out plain and single.\n      for (i = 0; i < string.length; char >= 0x10000 ? i += 2 : i++) {\n        char = codePointAt(string, i);\n\n        if (!isPrintable(char)) {\n          return STYLE_DOUBLE;\n        }\n\n        plain = plain && isPlainSafe(char, prevChar, inblock);\n        prevChar = char;\n      }\n    } else {\n      // Case: block styles permitted.\n      for (i = 0; i < string.length; char >= 0x10000 ? i += 2 : i++) {\n        char = codePointAt(string, i);\n\n        if (char === CHAR_LINE_FEED) {\n          hasLineBreak = true; // Check if any line can be folded.\n\n          if (shouldTrackWidth) {\n            hasFoldableLine = hasFoldableLine || // Foldable line = too long, and not more-indented.\n            i - previousLineBreak - 1 > lineWidth && string[previousLineBreak + 1] !== ' ';\n            previousLineBreak = i;\n          }\n        } else if (!isPrintable(char)) {\n          return STYLE_DOUBLE;\n        }\n\n        plain = plain && isPlainSafe(char, prevChar, inblock);\n        prevChar = char;\n      } // in case the end is missing a \\n\n\n\n      hasFoldableLine = hasFoldableLine || shouldTrackWidth && i - previousLineBreak - 1 > lineWidth && string[previousLineBreak + 1] !== ' ';\n    } // Although every style can represent \\n without escaping, prefer block styles\n    // for multiline, since they're more readable and they don't add empty lines.\n    // Also prefer folding a super-long line.\n\n\n    if (!hasLineBreak && !hasFoldableLine) {\n      // Strings interpretable as another type have to be quoted;\n      // e.g. the string 'true' vs. the boolean true.\n      if (plain && !forceQuotes && !testAmbiguousType(string)) {\n        return STYLE_PLAIN;\n      }\n\n      return quotingType === QUOTING_TYPE_DOUBLE ? STYLE_DOUBLE : STYLE_SINGLE;\n    } // Edge case: block indentation indicator can only have one digit.\n\n\n    if (indentPerLevel > 9 && needIndentIndicator(string)) {\n      return STYLE_DOUBLE;\n    } // At this point we know block styles are valid.\n    // Prefer literal style unless we want to fold.\n\n\n    if (!forceQuotes) {\n      return hasFoldableLine ? STYLE_FOLDED : STYLE_LITERAL;\n    }\n\n    return quotingType === QUOTING_TYPE_DOUBLE ? STYLE_DOUBLE : STYLE_SINGLE;\n  } // Note: line breaking/folding is implemented for only the folded style.\n  // NB. We drop the last trailing newline (if any) of a returned block scalar\n  //  since the dumper adds its own newline. This always works:\n  //    • No ending newline => unaffected; already using strip \"-\" chomping.\n  //    • Ending newline    => removed then restored.\n  //  Importantly, this keeps the \"+\" chomp indicator from gaining an extra line.\n\n\n  function writeScalar(state, string, level, iskey, inblock) {\n    state.dump = function () {\n      if (string.length === 0) {\n        return state.quotingType === QUOTING_TYPE_DOUBLE ? '\"\"' : \"''\";\n      }\n\n      if (!state.noCompatMode) {\n        if (DEPRECATED_BOOLEANS_SYNTAX.indexOf(string) !== -1 || DEPRECATED_BASE60_SYNTAX.test(string)) {\n          return state.quotingType === QUOTING_TYPE_DOUBLE ? '\"' + string + '\"' : \"'\" + string + \"'\";\n        }\n      }\n\n      var indent = state.indent * Math.max(1, level); // no 0-indent scalars\n      // As indentation gets deeper, let the width decrease monotonically\n      // to the lower bound min(state.lineWidth, 40).\n      // Note that this implies\n      //  state.lineWidth ≤ 40 + state.indent: width is fixed at the lower bound.\n      //  state.lineWidth > 40 + state.indent: width decreases until the lower bound.\n      // This behaves better than a constant minimum width which disallows narrower options,\n      // or an indent threshold which causes the width to suddenly increase.\n\n      var lineWidth = state.lineWidth === -1 ? -1 : Math.max(Math.min(state.lineWidth, 40), state.lineWidth - indent); // Without knowing if keys are implicit/explicit, assume implicit for safety.\n\n      var singleLineOnly = iskey // No block styles in flow mode.\n      || state.flowLevel > -1 && level >= state.flowLevel;\n\n      function testAmbiguity(string) {\n        return testImplicitResolving(state, string);\n      }\n\n      switch (chooseScalarStyle(string, singleLineOnly, state.indent, lineWidth, testAmbiguity, state.quotingType, state.forceQuotes && !iskey, inblock)) {\n        case STYLE_PLAIN:\n          return string;\n\n        case STYLE_SINGLE:\n          return \"'\" + string.replace(/'/g, \"''\") + \"'\";\n\n        case STYLE_LITERAL:\n          return '|' + blockHeader(string, state.indent) + dropEndingNewline(indentString(string, indent));\n\n        case STYLE_FOLDED:\n          return '>' + blockHeader(string, state.indent) + dropEndingNewline(indentString(foldString(string, lineWidth), indent));\n\n        case STYLE_DOUBLE:\n          return '\"' + escapeString(string) + '\"';\n\n        default:\n          throw new exception('impossible error: invalid scalar style');\n      }\n    }();\n  } // Pre-conditions: string is valid for a block scalar, 1 <= indentPerLevel <= 9.\n\n\n  function blockHeader(string, indentPerLevel) {\n    var indentIndicator = needIndentIndicator(string) ? String(indentPerLevel) : ''; // note the special case: the string '\\n' counts as a \"trailing\" empty line.\n\n    var clip = string[string.length - 1] === '\\n';\n    var keep = clip && (string[string.length - 2] === '\\n' || string === '\\n');\n    var chomp = keep ? '+' : clip ? '' : '-';\n    return indentIndicator + chomp + '\\n';\n  } // (See the note for writeScalar.)\n\n\n  function dropEndingNewline(string) {\n    return string[string.length - 1] === '\\n' ? string.slice(0, -1) : string;\n  } // Note: a long line without a suitable break point will exceed the width limit.\n  // Pre-conditions: every char in str isPrintable, str.length > 0, width > 0.\n\n\n  function foldString(string, width) {\n    // In folded style, $k$ consecutive newlines output as $k+1$ newlines—\n    // unless they're before or after a more-indented line, or at the very\n    // beginning or end, in which case $k$ maps to $k$.\n    // Therefore, parse each chunk as newline(s) followed by a content line.\n    var lineRe = /(\\n+)([^\\n]*)/g; // first line (possibly an empty line)\n\n    var result = function () {\n      var nextLF = string.indexOf('\\n');\n      nextLF = nextLF !== -1 ? nextLF : string.length;\n      lineRe.lastIndex = nextLF;\n      return foldLine(string.slice(0, nextLF), width);\n    }(); // If we haven't reached the first content line yet, don't add an extra \\n.\n\n\n    var prevMoreIndented = string[0] === '\\n' || string[0] === ' ';\n    var moreIndented; // rest of the lines\n\n    var match;\n\n    while (match = lineRe.exec(string)) {\n      var prefix = match[1],\n          line = match[2];\n      moreIndented = line[0] === ' ';\n      result += prefix + (!prevMoreIndented && !moreIndented && line !== '' ? '\\n' : '') + foldLine(line, width);\n      prevMoreIndented = moreIndented;\n    }\n\n    return result;\n  } // Greedy line breaking.\n  // Picks the longest line under the limit each time,\n  // otherwise settles for the shortest line over the limit.\n  // NB. More-indented lines *cannot* be folded, as that would add an extra \\n.\n\n\n  function foldLine(line, width) {\n    if (line === '' || line[0] === ' ') return line; // Since a more-indented line adds a \\n, breaks can't be followed by a space.\n\n    var breakRe = / [^ ]/g; // note: the match index will always be <= length-2.\n\n    var match; // start is an inclusive index. end, curr, and next are exclusive.\n\n    var start = 0,\n        end,\n        curr = 0,\n        next = 0;\n    var result = ''; // Invariants: 0 <= start <= length-1.\n    //   0 <= curr <= next <= max(0, length-2). curr - start <= width.\n    // Inside the loop:\n    //   A match implies length >= 2, so curr and next are <= length-2.\n\n    while (match = breakRe.exec(line)) {\n      next = match.index; // maintain invariant: curr - start <= width\n\n      if (next - start > width) {\n        end = curr > start ? curr : next; // derive end <= length-2\n\n        result += '\\n' + line.slice(start, end); // skip the space that was output as \\n\n\n        start = end + 1; // derive start <= length-1\n      }\n\n      curr = next;\n    } // By the invariants, start <= length-1, so there is something left over.\n    // It is either the whole string or a part starting from non-whitespace.\n\n\n    result += '\\n'; // Insert a break if the remainder is too long and there is a break available.\n\n    if (line.length - start > width && curr > start) {\n      result += line.slice(start, curr) + '\\n' + line.slice(curr + 1);\n    } else {\n      result += line.slice(start);\n    }\n\n    return result.slice(1); // drop extra \\n joiner\n  } // Escapes a double-quoted string.\n\n\n  function escapeString(string) {\n    var result = '';\n    var char = 0;\n    var escapeSeq;\n\n    for (var i = 0; i < string.length; char >= 0x10000 ? i += 2 : i++) {\n      char = codePointAt(string, i);\n      escapeSeq = ESCAPE_SEQUENCES[char];\n\n      if (!escapeSeq && isPrintable(char)) {\n        result += string[i];\n        if (char >= 0x10000) result += string[i + 1];\n      } else {\n        result += escapeSeq || encodeHex(char);\n      }\n    }\n\n    return result;\n  }\n\n  function writeFlowSequence(state, level, object) {\n    var _result = '',\n        _tag = state.tag,\n        index,\n        length,\n        value;\n\n    for (index = 0, length = object.length; index < length; index += 1) {\n      value = object[index];\n\n      if (state.replacer) {\n        value = state.replacer.call(object, String(index), value);\n      } // Write only valid elements, put null instead of invalid elements.\n\n\n      if (writeNode(state, level, value, false, false) || typeof value === 'undefined' && writeNode(state, level, null, false, false)) {\n        if (_result !== '') _result += ',' + (!state.condenseFlow ? ' ' : '');\n        _result += state.dump;\n      }\n    }\n\n    state.tag = _tag;\n    state.dump = '[' + _result + ']';\n  }\n\n  function writeBlockSequence(state, level, object, compact) {\n    var _result = '',\n        _tag = state.tag,\n        index,\n        length,\n        value;\n\n    for (index = 0, length = object.length; index < length; index += 1) {\n      value = object[index];\n\n      if (state.replacer) {\n        value = state.replacer.call(object, String(index), value);\n      } // Write only valid elements, put null instead of invalid elements.\n\n\n      if (writeNode(state, level + 1, value, true, true, false, true) || typeof value === 'undefined' && writeNode(state, level + 1, null, true, true, false, true)) {\n        if (!compact || _result !== '') {\n          _result += generateNextLine(state, level);\n        }\n\n        if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {\n          _result += '-';\n        } else {\n          _result += '- ';\n        }\n\n        _result += state.dump;\n      }\n    }\n\n    state.tag = _tag;\n    state.dump = _result || '[]'; // Empty sequence if no valid values.\n  }\n\n  function writeFlowMapping(state, level, object) {\n    var _result = '',\n        _tag = state.tag,\n        objectKeyList = Object.keys(object),\n        index,\n        length,\n        objectKey,\n        objectValue,\n        pairBuffer;\n\n    for (index = 0, length = objectKeyList.length; index < length; index += 1) {\n      pairBuffer = '';\n      if (_result !== '') pairBuffer += ', ';\n      if (state.condenseFlow) pairBuffer += '\"';\n      objectKey = objectKeyList[index];\n      objectValue = object[objectKey];\n\n      if (state.replacer) {\n        objectValue = state.replacer.call(object, objectKey, objectValue);\n      }\n\n      if (!writeNode(state, level, objectKey, false, false)) {\n        continue; // Skip this pair because of invalid key;\n      }\n\n      if (state.dump.length > 1024) pairBuffer += '? ';\n      pairBuffer += state.dump + (state.condenseFlow ? '\"' : '') + ':' + (state.condenseFlow ? '' : ' ');\n\n      if (!writeNode(state, level, objectValue, false, false)) {\n        continue; // Skip this pair because of invalid value.\n      }\n\n      pairBuffer += state.dump; // Both key and value are valid.\n\n      _result += pairBuffer;\n    }\n\n    state.tag = _tag;\n    state.dump = '{' + _result + '}';\n  }\n\n  function writeBlockMapping(state, level, object, compact) {\n    var _result = '',\n        _tag = state.tag,\n        objectKeyList = Object.keys(object),\n        index,\n        length,\n        objectKey,\n        objectValue,\n        explicitPair,\n        pairBuffer; // Allow sorting keys so that the output file is deterministic\n\n    if (state.sortKeys === true) {\n      // Default sorting\n      objectKeyList.sort();\n    } else if (typeof state.sortKeys === 'function') {\n      // Custom sort function\n      objectKeyList.sort(state.sortKeys);\n    } else if (state.sortKeys) {\n      // Something is wrong\n      throw new exception('sortKeys must be a boolean or a function');\n    }\n\n    for (index = 0, length = objectKeyList.length; index < length; index += 1) {\n      pairBuffer = '';\n\n      if (!compact || _result !== '') {\n        pairBuffer += generateNextLine(state, level);\n      }\n\n      objectKey = objectKeyList[index];\n      objectValue = object[objectKey];\n\n      if (state.replacer) {\n        objectValue = state.replacer.call(object, objectKey, objectValue);\n      }\n\n      if (!writeNode(state, level + 1, objectKey, true, true, true)) {\n        continue; // Skip this pair because of invalid key.\n      }\n\n      explicitPair = state.tag !== null && state.tag !== '?' || state.dump && state.dump.length > 1024;\n\n      if (explicitPair) {\n        if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {\n          pairBuffer += '?';\n        } else {\n          pairBuffer += '? ';\n        }\n      }\n\n      pairBuffer += state.dump;\n\n      if (explicitPair) {\n        pairBuffer += generateNextLine(state, level);\n      }\n\n      if (!writeNode(state, level + 1, objectValue, true, explicitPair)) {\n        continue; // Skip this pair because of invalid value.\n      }\n\n      if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {\n        pairBuffer += ':';\n      } else {\n        pairBuffer += ': ';\n      }\n\n      pairBuffer += state.dump; // Both key and value are valid.\n\n      _result += pairBuffer;\n    }\n\n    state.tag = _tag;\n    state.dump = _result || '{}'; // Empty mapping if no valid pairs.\n  }\n\n  function detectType(state, object, explicit) {\n    var _result, typeList, index, length, type, style;\n\n    typeList = explicit ? state.explicitTypes : state.implicitTypes;\n\n    for (index = 0, length = typeList.length; index < length; index += 1) {\n      type = typeList[index];\n\n      if ((type.instanceOf || type.predicate) && (!type.instanceOf || typeof object === 'object' && object instanceof type.instanceOf) && (!type.predicate || type.predicate(object))) {\n        if (explicit) {\n          if (type.multi && type.representName) {\n            state.tag = type.representName(object);\n          } else {\n            state.tag = type.tag;\n          }\n        } else {\n          state.tag = '?';\n        }\n\n        if (type.represent) {\n          style = state.styleMap[type.tag] || type.defaultStyle;\n\n          if (_toString.call(type.represent) === '[object Function]') {\n            _result = type.represent(object, style);\n          } else if (_hasOwnProperty.call(type.represent, style)) {\n            _result = type.represent[style](object, style);\n          } else {\n            throw new exception('!<' + type.tag + '> tag resolver accepts not \"' + style + '\" style');\n          }\n\n          state.dump = _result;\n        }\n\n        return true;\n      }\n    }\n\n    return false;\n  } // Serializes `object` and writes it to global `result`.\n  // Returns true on success, or false on invalid object.\n  //\n\n\n  function writeNode(state, level, object, block, compact, iskey, isblockseq) {\n    state.tag = null;\n    state.dump = object;\n\n    if (!detectType(state, object, false)) {\n      detectType(state, object, true);\n    }\n\n    var type = _toString.call(state.dump);\n\n    var inblock = block;\n    var tagStr;\n\n    if (block) {\n      block = state.flowLevel < 0 || state.flowLevel > level;\n    }\n\n    var objectOrArray = type === '[object Object]' || type === '[object Array]',\n        duplicateIndex,\n        duplicate;\n\n    if (objectOrArray) {\n      duplicateIndex = state.duplicates.indexOf(object);\n      duplicate = duplicateIndex !== -1;\n    }\n\n    if (state.tag !== null && state.tag !== '?' || duplicate || state.indent !== 2 && level > 0) {\n      compact = false;\n    }\n\n    if (duplicate && state.usedDuplicates[duplicateIndex]) {\n      state.dump = '*ref_' + duplicateIndex;\n    } else {\n      if (objectOrArray && duplicate && !state.usedDuplicates[duplicateIndex]) {\n        state.usedDuplicates[duplicateIndex] = true;\n      }\n\n      if (type === '[object Object]') {\n        if (block && Object.keys(state.dump).length !== 0) {\n          writeBlockMapping(state, level, state.dump, compact);\n\n          if (duplicate) {\n            state.dump = '&ref_' + duplicateIndex + state.dump;\n          }\n        } else {\n          writeFlowMapping(state, level, state.dump);\n\n          if (duplicate) {\n            state.dump = '&ref_' + duplicateIndex + ' ' + state.dump;\n          }\n        }\n      } else if (type === '[object Array]') {\n        if (block && state.dump.length !== 0) {\n          if (state.noArrayIndent && !isblockseq && level > 0) {\n            writeBlockSequence(state, level - 1, state.dump, compact);\n          } else {\n            writeBlockSequence(state, level, state.dump, compact);\n          }\n\n          if (duplicate) {\n            state.dump = '&ref_' + duplicateIndex + state.dump;\n          }\n        } else {\n          writeFlowSequence(state, level, state.dump);\n\n          if (duplicate) {\n            state.dump = '&ref_' + duplicateIndex + ' ' + state.dump;\n          }\n        }\n      } else if (type === '[object String]') {\n        if (state.tag !== '?') {\n          writeScalar(state, state.dump, level, iskey, inblock);\n        }\n      } else if (type === '[object Undefined]') {\n        return false;\n      } else {\n        if (state.skipInvalid) return false;\n        throw new exception('unacceptable kind of an object to dump ' + type);\n      }\n\n      if (state.tag !== null && state.tag !== '?') {\n        // Need to encode all characters except those allowed by the spec:\n        //\n        // [35] ns-dec-digit    ::=  [#x30-#x39] /* 0-9 */\n        // [36] ns-hex-digit    ::=  ns-dec-digit\n        //                         | [#x41-#x46] /* A-F */ | [#x61-#x66] /* a-f */\n        // [37] ns-ascii-letter ::=  [#x41-#x5A] /* A-Z */ | [#x61-#x7A] /* a-z */\n        // [38] ns-word-char    ::=  ns-dec-digit | ns-ascii-letter | “-”\n        // [39] ns-uri-char     ::=  “%” ns-hex-digit ns-hex-digit | ns-word-char | “#”\n        //                         | “;” | “/” | “?” | “:” | “@” | “&” | “=” | “+” | “$” | “,”\n        //                         | “_” | “.” | “!” | “~” | “*” | “'” | “(” | “)” | “[” | “]”\n        //\n        // Also need to encode '!' because it has special meaning (end of tag prefix).\n        //\n        tagStr = encodeURI(state.tag[0] === '!' ? state.tag.slice(1) : state.tag).replace(/!/g, '%21');\n\n        if (state.tag[0] === '!') {\n          tagStr = '!' + tagStr;\n        } else if (tagStr.slice(0, 18) === 'tag:yaml.org,2002:') {\n          tagStr = '!!' + tagStr.slice(18);\n        } else {\n          tagStr = '!<' + tagStr + '>';\n        }\n\n        state.dump = tagStr + ' ' + state.dump;\n      }\n    }\n\n    return true;\n  }\n\n  function getDuplicateReferences(object, state) {\n    var objects = [],\n        duplicatesIndexes = [],\n        index,\n        length;\n    inspectNode(object, objects, duplicatesIndexes);\n\n    for (index = 0, length = duplicatesIndexes.length; index < length; index += 1) {\n      state.duplicates.push(objects[duplicatesIndexes[index]]);\n    }\n\n    state.usedDuplicates = new Array(length);\n  }\n\n  function inspectNode(object, objects, duplicatesIndexes) {\n    var objectKeyList, index, length;\n\n    if (object !== null && typeof object === 'object') {\n      index = objects.indexOf(object);\n\n      if (index !== -1) {\n        if (duplicatesIndexes.indexOf(index) === -1) {\n          duplicatesIndexes.push(index);\n        }\n      } else {\n        objects.push(object);\n\n        if (Array.isArray(object)) {\n          for (index = 0, length = object.length; index < length; index += 1) {\n            inspectNode(object[index], objects, duplicatesIndexes);\n          }\n        } else {\n          objectKeyList = Object.keys(object);\n\n          for (index = 0, length = objectKeyList.length; index < length; index += 1) {\n            inspectNode(object[objectKeyList[index]], objects, duplicatesIndexes);\n          }\n        }\n      }\n    }\n  }\n\n  function dump$1(input, options) {\n    options = options || {};\n    var state = new State(options);\n    if (!state.noRefs) getDuplicateReferences(input, state);\n    var value = input;\n\n    if (state.replacer) {\n      value = state.replacer.call({\n        '': value\n      }, '', value);\n    }\n\n    if (writeNode(state, 0, value, true, true)) return state.dump + '\\n';\n    return '';\n  }\n\n  var dump_1 = dump$1;\n  var dumper = {\n    dump: dump_1\n  };\n\n  function renamed(from, to) {\n    return function () {\n      throw new Error('Function yaml.' + from + ' is removed in js-yaml 4. ' + 'Use yaml.' + to + ' instead, which is now safe by default.');\n    };\n  }\n\n  var Type = type;\n  var Schema = schema;\n  var FAILSAFE_SCHEMA = failsafe;\n  var JSON_SCHEMA = json;\n  var CORE_SCHEMA = core;\n  var DEFAULT_SCHEMA = _default;\n  var load = loader.load;\n  var loadAll = loader.loadAll;\n  var dump = dumper.dump;\n  var YAMLException = exception; // Re-export all types in case user wants to create custom schema\n\n  var types = {\n    binary: binary,\n    float: float,\n    map: map,\n    null: _null,\n    pairs: pairs,\n    set: set,\n    timestamp: timestamp,\n    bool: bool,\n    int: int,\n    merge: merge,\n    omap: omap,\n    seq: seq,\n    str: str\n  }; // Removed functions from JS-YAML 3.0.x\n\n  var safeLoad = renamed('safeLoad', 'load');\n  var safeLoadAll = renamed('safeLoadAll', 'loadAll');\n  var safeDump = renamed('safeDump', 'dump');\n  var jsYaml = {\n    Type: Type,\n    Schema: Schema,\n    FAILSAFE_SCHEMA: FAILSAFE_SCHEMA,\n    JSON_SCHEMA: JSON_SCHEMA,\n    CORE_SCHEMA: CORE_SCHEMA,\n    DEFAULT_SCHEMA: DEFAULT_SCHEMA,\n    load: load,\n    loadAll: loadAll,\n    dump: dump,\n    YAMLException: YAMLException,\n    types: types,\n    safeLoad: safeLoad,\n    safeLoadAll: safeLoadAll,\n    safeDump: safeDump\n  };\n  exports.CORE_SCHEMA = CORE_SCHEMA;\n  exports.DEFAULT_SCHEMA = DEFAULT_SCHEMA;\n  exports.FAILSAFE_SCHEMA = FAILSAFE_SCHEMA;\n  exports.JSON_SCHEMA = JSON_SCHEMA;\n  exports.Schema = Schema;\n  exports.Type = Type;\n  exports.YAMLException = YAMLException;\n  exports.default = jsYaml;\n  exports.dump = dump;\n  exports.load = load;\n  exports.loadAll = loadAll;\n  exports.safeDump = safeDump;\n  exports.safeLoad = safeLoad;\n  exports.safeLoadAll = safeLoadAll;\n  exports.types = types;\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n});","map":{"version":3,"names":["global","factory","exports","module","define","amd","globalThis","self","jsyaml","isNothing","subject","isObject","toArray","sequence","Array","isArray","extend","target","source","index","length","key","sourceKeys","Object","keys","repeat","string","count","result","cycle","isNegativeZero","number","Number","NEGATIVE_INFINITY","isNothing_1","isObject_1","toArray_1","repeat_1","isNegativeZero_1","extend_1","common","formatError","exception","compact","where","message","reason","mark","name","line","column","snippet","YAMLException$1","Error","call","captureStackTrace","constructor","stack","prototype","create","toString","getLine","buffer","lineStart","lineEnd","position","maxLineLength","head","tail","maxHalfLength","Math","floor","str","slice","replace","pos","padStart","max","makeSnippet","options","maxLength","indent","linesBefore","linesAfter","re","lineStarts","lineEnds","match","foundLineNo","exec","push","i","lineNoLength","min","TYPE_CONSTRUCTOR_OPTIONS","YAML_NODE_KINDS","compileStyleAliases","map","forEach","style","alias","String","Type$1","tag","indexOf","kind","resolve","construct","data","instanceOf","predicate","represent","representName","defaultStyle","multi","styleAliases","type","compileList","schema","currentType","newIndex","previousType","previousIndex","compileMap","scalar","mapping","fallback","collectType","arguments","Schema$1","definition","implicit","explicit","concat","type$1","loadKind","compiledImplicit","compiledExplicit","compiledTypeMap","seq","failsafe","resolveYamlNull","constructYamlNull","isNull","object","_null","canonical","lowercase","uppercase","camelcase","empty","resolveYamlBoolean","constructYamlBoolean","isBoolean","bool","isHexCode","c","isOctCode","isDecCode","resolveYamlInteger","hasDigits","ch","charCodeAt","constructYamlInteger","value","sign","parseInt","isInteger","int","binary","obj","octal","decimal","hexadecimal","toUpperCase","YAML_FLOAT_PATTERN","RegExp","resolveYamlFloat","test","constructYamlFloat","toLowerCase","POSITIVE_INFINITY","NaN","parseFloat","SCIENTIFIC_WITHOUT_DOT","representYamlFloat","res","isNaN","isFloat","float","json","core","YAML_DATE_REGEXP","YAML_TIMESTAMP_REGEXP","resolveYamlTimestamp","constructYamlTimestamp","year","month","day","hour","minute","second","fraction","delta","tz_hour","tz_minute","date","Date","UTC","setTime","getTime","representYamlTimestamp","toISOString","timestamp","resolveYamlMerge","merge","BASE64_MAP","resolveYamlBinary","code","idx","bitlen","charAt","constructYamlBinary","tailbits","input","bits","Uint8Array","representYamlBinary","isBinary","_hasOwnProperty$3","hasOwnProperty","_toString$2","resolveYamlOmap","objectKeys","pair","pairKey","pairHasKey","constructYamlOmap","omap","_toString$1","resolveYamlPairs","constructYamlPairs","pairs","_hasOwnProperty$2","resolveYamlSet","constructYamlSet","set","_default","_hasOwnProperty$1","CONTEXT_FLOW_IN","CONTEXT_FLOW_OUT","CONTEXT_BLOCK_IN","CONTEXT_BLOCK_OUT","CHOMPING_CLIP","CHOMPING_STRIP","CHOMPING_KEEP","PATTERN_NON_PRINTABLE","PATTERN_NON_ASCII_LINE_BREAKS","PATTERN_FLOW_INDICATORS","PATTERN_TAG_HANDLE","PATTERN_TAG_URI","_class","is_EOL","is_WHITE_SPACE","is_WS_OR_EOL","is_FLOW_INDICATOR","fromHexCode","lc","escapedHexLen","fromDecimalCode","simpleEscapeSequence","charFromCodepoint","fromCharCode","simpleEscapeCheck","simpleEscapeMap","State$1","filename","onWarning","legacy","listener","implicitTypes","typeMap","lineIndent","firstTabInLine","documents","generateError","state","throwError","throwWarning","directiveHandlers","YAML","handleYamlDirective","args","major","minor","version","checkLineBreaks","TAG","handleTagDirective","handle","prefix","tagMap","decodeURIComponent","err","captureSegment","start","end","checkJson","_position","_length","_character","_result","mergeMappings","destination","overridableKeys","quantity","storeMappingPair","keyTag","keyNode","valueNode","startLine","startLineStart","startPos","defineProperty","configurable","enumerable","writable","readLineBreak","skipSeparationSpace","allowComments","checkIndent","lineBreaks","testDocumentSeparator","writeFoldedLines","readPlainScalar","nodeIndent","withinFlowCollection","preceding","following","captureStart","captureEnd","hasPendingContent","_line","_lineStart","_lineIndent","_kind","readSingleQuotedScalar","readDoubleQuotedScalar","hexLength","hexResult","tmp","readFlowCollection","readNext","_pos","_tag","_anchor","anchor","terminator","isPair","isExplicitPair","isMapping","anchorMap","composeNode","readBlockScalar","folding","chomping","didReadContent","detectedIndent","textIndent","emptyLines","atMoreIndented","readBlockSequence","detected","readBlockMapping","flowIndent","allowCompact","_keyLine","_keyLineStart","_keyPos","atExplicitKey","readTagProperty","isVerbatim","isNamed","tagHandle","tagName","readAnchorProperty","readAlias","parentIndent","nodeContext","allowToSeek","allowBlockStyles","allowBlockScalars","allowBlockCollections","indentStatus","atNewLine","hasContent","typeIndex","typeQuantity","typeList","blockIndent","readDocument","documentStart","directiveName","directiveArgs","hasDirectives","loadDocuments","nullpos","loadAll$1","iterator","load$1","undefined","loadAll_1","load_1","loader","loadAll","load","_toString","_hasOwnProperty","CHAR_BOM","CHAR_TAB","CHAR_LINE_FEED","CHAR_CARRIAGE_RETURN","CHAR_SPACE","CHAR_EXCLAMATION","CHAR_DOUBLE_QUOTE","CHAR_SHARP","CHAR_PERCENT","CHAR_AMPERSAND","CHAR_SINGLE_QUOTE","CHAR_ASTERISK","CHAR_COMMA","CHAR_MINUS","CHAR_COLON","CHAR_EQUALS","CHAR_GREATER_THAN","CHAR_QUESTION","CHAR_COMMERCIAL_AT","CHAR_LEFT_SQUARE_BRACKET","CHAR_RIGHT_SQUARE_BRACKET","CHAR_GRAVE_ACCENT","CHAR_LEFT_CURLY_BRACKET","CHAR_VERTICAL_LINE","CHAR_RIGHT_CURLY_BRACKET","ESCAPE_SEQUENCES","DEPRECATED_BOOLEANS_SYNTAX","DEPRECATED_BASE60_SYNTAX","compileStyleMap","encodeHex","character","QUOTING_TYPE_SINGLE","QUOTING_TYPE_DOUBLE","State","noArrayIndent","skipInvalid","flowLevel","styleMap","sortKeys","lineWidth","noRefs","noCompatMode","condenseFlow","quotingType","forceQuotes","replacer","explicitTypes","duplicates","usedDuplicates","indentString","spaces","ind","next","generateNextLine","level","testImplicitResolving","isWhitespace","isPrintable","isNsCharOrWhitespace","isPlainSafe","prev","inblock","cIsNsCharOrWhitespace","cIsNsChar","isPlainSafeFirst","isPlainSafeLast","codePointAt","first","needIndentIndicator","leadingSpaceRe","STYLE_PLAIN","STYLE_SINGLE","STYLE_LITERAL","STYLE_FOLDED","STYLE_DOUBLE","chooseScalarStyle","singleLineOnly","indentPerLevel","testAmbiguousType","char","prevChar","hasLineBreak","hasFoldableLine","shouldTrackWidth","previousLineBreak","plain","writeScalar","iskey","dump","testAmbiguity","blockHeader","dropEndingNewline","foldString","escapeString","indentIndicator","clip","keep","chomp","width","lineRe","nextLF","lastIndex","foldLine","prevMoreIndented","moreIndented","breakRe","curr","escapeSeq","writeFlowSequence","writeNode","writeBlockSequence","writeFlowMapping","objectKeyList","objectKey","objectValue","pairBuffer","writeBlockMapping","explicitPair","sort","detectType","block","isblockseq","tagStr","objectOrArray","duplicateIndex","duplicate","encodeURI","getDuplicateReferences","objects","duplicatesIndexes","inspectNode","dump$1","dump_1","dumper","renamed","from","to","Type","Schema","FAILSAFE_SCHEMA","JSON_SCHEMA","CORE_SCHEMA","DEFAULT_SCHEMA","YAMLException","types","null","safeLoad","safeLoadAll","safeDump","jsYaml","default"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/eslint/node_modules/js-yaml/dist/js-yaml.js"],"sourcesContent":["\n/*! js-yaml 4.1.0 https://github.com/nodeca/js-yaml @license MIT */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.jsyaml = {}));\n}(this, (function (exports) { 'use strict';\n\n  function isNothing(subject) {\n    return (typeof subject === 'undefined') || (subject === null);\n  }\n\n\n  function isObject(subject) {\n    return (typeof subject === 'object') && (subject !== null);\n  }\n\n\n  function toArray(sequence) {\n    if (Array.isArray(sequence)) return sequence;\n    else if (isNothing(sequence)) return [];\n\n    return [ sequence ];\n  }\n\n\n  function extend(target, source) {\n    var index, length, key, sourceKeys;\n\n    if (source) {\n      sourceKeys = Object.keys(source);\n\n      for (index = 0, length = sourceKeys.length; index < length; index += 1) {\n        key = sourceKeys[index];\n        target[key] = source[key];\n      }\n    }\n\n    return target;\n  }\n\n\n  function repeat(string, count) {\n    var result = '', cycle;\n\n    for (cycle = 0; cycle < count; cycle += 1) {\n      result += string;\n    }\n\n    return result;\n  }\n\n\n  function isNegativeZero(number) {\n    return (number === 0) && (Number.NEGATIVE_INFINITY === 1 / number);\n  }\n\n\n  var isNothing_1      = isNothing;\n  var isObject_1       = isObject;\n  var toArray_1        = toArray;\n  var repeat_1         = repeat;\n  var isNegativeZero_1 = isNegativeZero;\n  var extend_1         = extend;\n\n  var common = {\n  \tisNothing: isNothing_1,\n  \tisObject: isObject_1,\n  \ttoArray: toArray_1,\n  \trepeat: repeat_1,\n  \tisNegativeZero: isNegativeZero_1,\n  \textend: extend_1\n  };\n\n  // YAML error class. http://stackoverflow.com/questions/8458984\n\n\n  function formatError(exception, compact) {\n    var where = '', message = exception.reason || '(unknown reason)';\n\n    if (!exception.mark) return message;\n\n    if (exception.mark.name) {\n      where += 'in \"' + exception.mark.name + '\" ';\n    }\n\n    where += '(' + (exception.mark.line + 1) + ':' + (exception.mark.column + 1) + ')';\n\n    if (!compact && exception.mark.snippet) {\n      where += '\\n\\n' + exception.mark.snippet;\n    }\n\n    return message + ' ' + where;\n  }\n\n\n  function YAMLException$1(reason, mark) {\n    // Super constructor\n    Error.call(this);\n\n    this.name = 'YAMLException';\n    this.reason = reason;\n    this.mark = mark;\n    this.message = formatError(this, false);\n\n    // Include stack trace in error object\n    if (Error.captureStackTrace) {\n      // Chrome and NodeJS\n      Error.captureStackTrace(this, this.constructor);\n    } else {\n      // FF, IE 10+ and Safari 6+. Fallback for others\n      this.stack = (new Error()).stack || '';\n    }\n  }\n\n\n  // Inherit from Error\n  YAMLException$1.prototype = Object.create(Error.prototype);\n  YAMLException$1.prototype.constructor = YAMLException$1;\n\n\n  YAMLException$1.prototype.toString = function toString(compact) {\n    return this.name + ': ' + formatError(this, compact);\n  };\n\n\n  var exception = YAMLException$1;\n\n  // get snippet for a single line, respecting maxLength\n  function getLine(buffer, lineStart, lineEnd, position, maxLineLength) {\n    var head = '';\n    var tail = '';\n    var maxHalfLength = Math.floor(maxLineLength / 2) - 1;\n\n    if (position - lineStart > maxHalfLength) {\n      head = ' ... ';\n      lineStart = position - maxHalfLength + head.length;\n    }\n\n    if (lineEnd - position > maxHalfLength) {\n      tail = ' ...';\n      lineEnd = position + maxHalfLength - tail.length;\n    }\n\n    return {\n      str: head + buffer.slice(lineStart, lineEnd).replace(/\\t/g, '→') + tail,\n      pos: position - lineStart + head.length // relative position\n    };\n  }\n\n\n  function padStart(string, max) {\n    return common.repeat(' ', max - string.length) + string;\n  }\n\n\n  function makeSnippet(mark, options) {\n    options = Object.create(options || null);\n\n    if (!mark.buffer) return null;\n\n    if (!options.maxLength) options.maxLength = 79;\n    if (typeof options.indent      !== 'number') options.indent      = 1;\n    if (typeof options.linesBefore !== 'number') options.linesBefore = 3;\n    if (typeof options.linesAfter  !== 'number') options.linesAfter  = 2;\n\n    var re = /\\r?\\n|\\r|\\0/g;\n    var lineStarts = [ 0 ];\n    var lineEnds = [];\n    var match;\n    var foundLineNo = -1;\n\n    while ((match = re.exec(mark.buffer))) {\n      lineEnds.push(match.index);\n      lineStarts.push(match.index + match[0].length);\n\n      if (mark.position <= match.index && foundLineNo < 0) {\n        foundLineNo = lineStarts.length - 2;\n      }\n    }\n\n    if (foundLineNo < 0) foundLineNo = lineStarts.length - 1;\n\n    var result = '', i, line;\n    var lineNoLength = Math.min(mark.line + options.linesAfter, lineEnds.length).toString().length;\n    var maxLineLength = options.maxLength - (options.indent + lineNoLength + 3);\n\n    for (i = 1; i <= options.linesBefore; i++) {\n      if (foundLineNo - i < 0) break;\n      line = getLine(\n        mark.buffer,\n        lineStarts[foundLineNo - i],\n        lineEnds[foundLineNo - i],\n        mark.position - (lineStarts[foundLineNo] - lineStarts[foundLineNo - i]),\n        maxLineLength\n      );\n      result = common.repeat(' ', options.indent) + padStart((mark.line - i + 1).toString(), lineNoLength) +\n        ' | ' + line.str + '\\n' + result;\n    }\n\n    line = getLine(mark.buffer, lineStarts[foundLineNo], lineEnds[foundLineNo], mark.position, maxLineLength);\n    result += common.repeat(' ', options.indent) + padStart((mark.line + 1).toString(), lineNoLength) +\n      ' | ' + line.str + '\\n';\n    result += common.repeat('-', options.indent + lineNoLength + 3 + line.pos) + '^' + '\\n';\n\n    for (i = 1; i <= options.linesAfter; i++) {\n      if (foundLineNo + i >= lineEnds.length) break;\n      line = getLine(\n        mark.buffer,\n        lineStarts[foundLineNo + i],\n        lineEnds[foundLineNo + i],\n        mark.position - (lineStarts[foundLineNo] - lineStarts[foundLineNo + i]),\n        maxLineLength\n      );\n      result += common.repeat(' ', options.indent) + padStart((mark.line + i + 1).toString(), lineNoLength) +\n        ' | ' + line.str + '\\n';\n    }\n\n    return result.replace(/\\n$/, '');\n  }\n\n\n  var snippet = makeSnippet;\n\n  var TYPE_CONSTRUCTOR_OPTIONS = [\n    'kind',\n    'multi',\n    'resolve',\n    'construct',\n    'instanceOf',\n    'predicate',\n    'represent',\n    'representName',\n    'defaultStyle',\n    'styleAliases'\n  ];\n\n  var YAML_NODE_KINDS = [\n    'scalar',\n    'sequence',\n    'mapping'\n  ];\n\n  function compileStyleAliases(map) {\n    var result = {};\n\n    if (map !== null) {\n      Object.keys(map).forEach(function (style) {\n        map[style].forEach(function (alias) {\n          result[String(alias)] = style;\n        });\n      });\n    }\n\n    return result;\n  }\n\n  function Type$1(tag, options) {\n    options = options || {};\n\n    Object.keys(options).forEach(function (name) {\n      if (TYPE_CONSTRUCTOR_OPTIONS.indexOf(name) === -1) {\n        throw new exception('Unknown option \"' + name + '\" is met in definition of \"' + tag + '\" YAML type.');\n      }\n    });\n\n    // TODO: Add tag format check.\n    this.options       = options; // keep original options in case user wants to extend this type later\n    this.tag           = tag;\n    this.kind          = options['kind']          || null;\n    this.resolve       = options['resolve']       || function () { return true; };\n    this.construct     = options['construct']     || function (data) { return data; };\n    this.instanceOf    = options['instanceOf']    || null;\n    this.predicate     = options['predicate']     || null;\n    this.represent     = options['represent']     || null;\n    this.representName = options['representName'] || null;\n    this.defaultStyle  = options['defaultStyle']  || null;\n    this.multi         = options['multi']         || false;\n    this.styleAliases  = compileStyleAliases(options['styleAliases'] || null);\n\n    if (YAML_NODE_KINDS.indexOf(this.kind) === -1) {\n      throw new exception('Unknown kind \"' + this.kind + '\" is specified for \"' + tag + '\" YAML type.');\n    }\n  }\n\n  var type = Type$1;\n\n  /*eslint-disable max-len*/\n\n\n\n\n\n  function compileList(schema, name) {\n    var result = [];\n\n    schema[name].forEach(function (currentType) {\n      var newIndex = result.length;\n\n      result.forEach(function (previousType, previousIndex) {\n        if (previousType.tag === currentType.tag &&\n            previousType.kind === currentType.kind &&\n            previousType.multi === currentType.multi) {\n\n          newIndex = previousIndex;\n        }\n      });\n\n      result[newIndex] = currentType;\n    });\n\n    return result;\n  }\n\n\n  function compileMap(/* lists... */) {\n    var result = {\n          scalar: {},\n          sequence: {},\n          mapping: {},\n          fallback: {},\n          multi: {\n            scalar: [],\n            sequence: [],\n            mapping: [],\n            fallback: []\n          }\n        }, index, length;\n\n    function collectType(type) {\n      if (type.multi) {\n        result.multi[type.kind].push(type);\n        result.multi['fallback'].push(type);\n      } else {\n        result[type.kind][type.tag] = result['fallback'][type.tag] = type;\n      }\n    }\n\n    for (index = 0, length = arguments.length; index < length; index += 1) {\n      arguments[index].forEach(collectType);\n    }\n    return result;\n  }\n\n\n  function Schema$1(definition) {\n    return this.extend(definition);\n  }\n\n\n  Schema$1.prototype.extend = function extend(definition) {\n    var implicit = [];\n    var explicit = [];\n\n    if (definition instanceof type) {\n      // Schema.extend(type)\n      explicit.push(definition);\n\n    } else if (Array.isArray(definition)) {\n      // Schema.extend([ type1, type2, ... ])\n      explicit = explicit.concat(definition);\n\n    } else if (definition && (Array.isArray(definition.implicit) || Array.isArray(definition.explicit))) {\n      // Schema.extend({ explicit: [ type1, type2, ... ], implicit: [ type1, type2, ... ] })\n      if (definition.implicit) implicit = implicit.concat(definition.implicit);\n      if (definition.explicit) explicit = explicit.concat(definition.explicit);\n\n    } else {\n      throw new exception('Schema.extend argument should be a Type, [ Type ], ' +\n        'or a schema definition ({ implicit: [...], explicit: [...] })');\n    }\n\n    implicit.forEach(function (type$1) {\n      if (!(type$1 instanceof type)) {\n        throw new exception('Specified list of YAML types (or a single Type object) contains a non-Type object.');\n      }\n\n      if (type$1.loadKind && type$1.loadKind !== 'scalar') {\n        throw new exception('There is a non-scalar type in the implicit list of a schema. Implicit resolving of such types is not supported.');\n      }\n\n      if (type$1.multi) {\n        throw new exception('There is a multi type in the implicit list of a schema. Multi tags can only be listed as explicit.');\n      }\n    });\n\n    explicit.forEach(function (type$1) {\n      if (!(type$1 instanceof type)) {\n        throw new exception('Specified list of YAML types (or a single Type object) contains a non-Type object.');\n      }\n    });\n\n    var result = Object.create(Schema$1.prototype);\n\n    result.implicit = (this.implicit || []).concat(implicit);\n    result.explicit = (this.explicit || []).concat(explicit);\n\n    result.compiledImplicit = compileList(result, 'implicit');\n    result.compiledExplicit = compileList(result, 'explicit');\n    result.compiledTypeMap  = compileMap(result.compiledImplicit, result.compiledExplicit);\n\n    return result;\n  };\n\n\n  var schema = Schema$1;\n\n  var str = new type('tag:yaml.org,2002:str', {\n    kind: 'scalar',\n    construct: function (data) { return data !== null ? data : ''; }\n  });\n\n  var seq = new type('tag:yaml.org,2002:seq', {\n    kind: 'sequence',\n    construct: function (data) { return data !== null ? data : []; }\n  });\n\n  var map = new type('tag:yaml.org,2002:map', {\n    kind: 'mapping',\n    construct: function (data) { return data !== null ? data : {}; }\n  });\n\n  var failsafe = new schema({\n    explicit: [\n      str,\n      seq,\n      map\n    ]\n  });\n\n  function resolveYamlNull(data) {\n    if (data === null) return true;\n\n    var max = data.length;\n\n    return (max === 1 && data === '~') ||\n           (max === 4 && (data === 'null' || data === 'Null' || data === 'NULL'));\n  }\n\n  function constructYamlNull() {\n    return null;\n  }\n\n  function isNull(object) {\n    return object === null;\n  }\n\n  var _null = new type('tag:yaml.org,2002:null', {\n    kind: 'scalar',\n    resolve: resolveYamlNull,\n    construct: constructYamlNull,\n    predicate: isNull,\n    represent: {\n      canonical: function () { return '~';    },\n      lowercase: function () { return 'null'; },\n      uppercase: function () { return 'NULL'; },\n      camelcase: function () { return 'Null'; },\n      empty:     function () { return '';     }\n    },\n    defaultStyle: 'lowercase'\n  });\n\n  function resolveYamlBoolean(data) {\n    if (data === null) return false;\n\n    var max = data.length;\n\n    return (max === 4 && (data === 'true' || data === 'True' || data === 'TRUE')) ||\n           (max === 5 && (data === 'false' || data === 'False' || data === 'FALSE'));\n  }\n\n  function constructYamlBoolean(data) {\n    return data === 'true' ||\n           data === 'True' ||\n           data === 'TRUE';\n  }\n\n  function isBoolean(object) {\n    return Object.prototype.toString.call(object) === '[object Boolean]';\n  }\n\n  var bool = new type('tag:yaml.org,2002:bool', {\n    kind: 'scalar',\n    resolve: resolveYamlBoolean,\n    construct: constructYamlBoolean,\n    predicate: isBoolean,\n    represent: {\n      lowercase: function (object) { return object ? 'true' : 'false'; },\n      uppercase: function (object) { return object ? 'TRUE' : 'FALSE'; },\n      camelcase: function (object) { return object ? 'True' : 'False'; }\n    },\n    defaultStyle: 'lowercase'\n  });\n\n  function isHexCode(c) {\n    return ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */)) ||\n           ((0x41/* A */ <= c) && (c <= 0x46/* F */)) ||\n           ((0x61/* a */ <= c) && (c <= 0x66/* f */));\n  }\n\n  function isOctCode(c) {\n    return ((0x30/* 0 */ <= c) && (c <= 0x37/* 7 */));\n  }\n\n  function isDecCode(c) {\n    return ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */));\n  }\n\n  function resolveYamlInteger(data) {\n    if (data === null) return false;\n\n    var max = data.length,\n        index = 0,\n        hasDigits = false,\n        ch;\n\n    if (!max) return false;\n\n    ch = data[index];\n\n    // sign\n    if (ch === '-' || ch === '+') {\n      ch = data[++index];\n    }\n\n    if (ch === '0') {\n      // 0\n      if (index + 1 === max) return true;\n      ch = data[++index];\n\n      // base 2, base 8, base 16\n\n      if (ch === 'b') {\n        // base 2\n        index++;\n\n        for (; index < max; index++) {\n          ch = data[index];\n          if (ch === '_') continue;\n          if (ch !== '0' && ch !== '1') return false;\n          hasDigits = true;\n        }\n        return hasDigits && ch !== '_';\n      }\n\n\n      if (ch === 'x') {\n        // base 16\n        index++;\n\n        for (; index < max; index++) {\n          ch = data[index];\n          if (ch === '_') continue;\n          if (!isHexCode(data.charCodeAt(index))) return false;\n          hasDigits = true;\n        }\n        return hasDigits && ch !== '_';\n      }\n\n\n      if (ch === 'o') {\n        // base 8\n        index++;\n\n        for (; index < max; index++) {\n          ch = data[index];\n          if (ch === '_') continue;\n          if (!isOctCode(data.charCodeAt(index))) return false;\n          hasDigits = true;\n        }\n        return hasDigits && ch !== '_';\n      }\n    }\n\n    // base 10 (except 0)\n\n    // value should not start with `_`;\n    if (ch === '_') return false;\n\n    for (; index < max; index++) {\n      ch = data[index];\n      if (ch === '_') continue;\n      if (!isDecCode(data.charCodeAt(index))) {\n        return false;\n      }\n      hasDigits = true;\n    }\n\n    // Should have digits and should not end with `_`\n    if (!hasDigits || ch === '_') return false;\n\n    return true;\n  }\n\n  function constructYamlInteger(data) {\n    var value = data, sign = 1, ch;\n\n    if (value.indexOf('_') !== -1) {\n      value = value.replace(/_/g, '');\n    }\n\n    ch = value[0];\n\n    if (ch === '-' || ch === '+') {\n      if (ch === '-') sign = -1;\n      value = value.slice(1);\n      ch = value[0];\n    }\n\n    if (value === '0') return 0;\n\n    if (ch === '0') {\n      if (value[1] === 'b') return sign * parseInt(value.slice(2), 2);\n      if (value[1] === 'x') return sign * parseInt(value.slice(2), 16);\n      if (value[1] === 'o') return sign * parseInt(value.slice(2), 8);\n    }\n\n    return sign * parseInt(value, 10);\n  }\n\n  function isInteger(object) {\n    return (Object.prototype.toString.call(object)) === '[object Number]' &&\n           (object % 1 === 0 && !common.isNegativeZero(object));\n  }\n\n  var int = new type('tag:yaml.org,2002:int', {\n    kind: 'scalar',\n    resolve: resolveYamlInteger,\n    construct: constructYamlInteger,\n    predicate: isInteger,\n    represent: {\n      binary:      function (obj) { return obj >= 0 ? '0b' + obj.toString(2) : '-0b' + obj.toString(2).slice(1); },\n      octal:       function (obj) { return obj >= 0 ? '0o'  + obj.toString(8) : '-0o'  + obj.toString(8).slice(1); },\n      decimal:     function (obj) { return obj.toString(10); },\n      /* eslint-disable max-len */\n      hexadecimal: function (obj) { return obj >= 0 ? '0x' + obj.toString(16).toUpperCase() :  '-0x' + obj.toString(16).toUpperCase().slice(1); }\n    },\n    defaultStyle: 'decimal',\n    styleAliases: {\n      binary:      [ 2,  'bin' ],\n      octal:       [ 8,  'oct' ],\n      decimal:     [ 10, 'dec' ],\n      hexadecimal: [ 16, 'hex' ]\n    }\n  });\n\n  var YAML_FLOAT_PATTERN = new RegExp(\n    // 2.5e4, 2.5 and integers\n    '^(?:[-+]?(?:[0-9][0-9_]*)(?:\\\\.[0-9_]*)?(?:[eE][-+]?[0-9]+)?' +\n    // .2e4, .2\n    // special case, seems not from spec\n    '|\\\\.[0-9_]+(?:[eE][-+]?[0-9]+)?' +\n    // .inf\n    '|[-+]?\\\\.(?:inf|Inf|INF)' +\n    // .nan\n    '|\\\\.(?:nan|NaN|NAN))$');\n\n  function resolveYamlFloat(data) {\n    if (data === null) return false;\n\n    if (!YAML_FLOAT_PATTERN.test(data) ||\n        // Quick hack to not allow integers end with `_`\n        // Probably should update regexp & check speed\n        data[data.length - 1] === '_') {\n      return false;\n    }\n\n    return true;\n  }\n\n  function constructYamlFloat(data) {\n    var value, sign;\n\n    value  = data.replace(/_/g, '').toLowerCase();\n    sign   = value[0] === '-' ? -1 : 1;\n\n    if ('+-'.indexOf(value[0]) >= 0) {\n      value = value.slice(1);\n    }\n\n    if (value === '.inf') {\n      return (sign === 1) ? Number.POSITIVE_INFINITY : Number.NEGATIVE_INFINITY;\n\n    } else if (value === '.nan') {\n      return NaN;\n    }\n    return sign * parseFloat(value, 10);\n  }\n\n\n  var SCIENTIFIC_WITHOUT_DOT = /^[-+]?[0-9]+e/;\n\n  function representYamlFloat(object, style) {\n    var res;\n\n    if (isNaN(object)) {\n      switch (style) {\n        case 'lowercase': return '.nan';\n        case 'uppercase': return '.NAN';\n        case 'camelcase': return '.NaN';\n      }\n    } else if (Number.POSITIVE_INFINITY === object) {\n      switch (style) {\n        case 'lowercase': return '.inf';\n        case 'uppercase': return '.INF';\n        case 'camelcase': return '.Inf';\n      }\n    } else if (Number.NEGATIVE_INFINITY === object) {\n      switch (style) {\n        case 'lowercase': return '-.inf';\n        case 'uppercase': return '-.INF';\n        case 'camelcase': return '-.Inf';\n      }\n    } else if (common.isNegativeZero(object)) {\n      return '-0.0';\n    }\n\n    res = object.toString(10);\n\n    // JS stringifier can build scientific format without dots: 5e-100,\n    // while YAML requres dot: 5.e-100. Fix it with simple hack\n\n    return SCIENTIFIC_WITHOUT_DOT.test(res) ? res.replace('e', '.e') : res;\n  }\n\n  function isFloat(object) {\n    return (Object.prototype.toString.call(object) === '[object Number]') &&\n           (object % 1 !== 0 || common.isNegativeZero(object));\n  }\n\n  var float = new type('tag:yaml.org,2002:float', {\n    kind: 'scalar',\n    resolve: resolveYamlFloat,\n    construct: constructYamlFloat,\n    predicate: isFloat,\n    represent: representYamlFloat,\n    defaultStyle: 'lowercase'\n  });\n\n  var json = failsafe.extend({\n    implicit: [\n      _null,\n      bool,\n      int,\n      float\n    ]\n  });\n\n  var core = json;\n\n  var YAML_DATE_REGEXP = new RegExp(\n    '^([0-9][0-9][0-9][0-9])'          + // [1] year\n    '-([0-9][0-9])'                    + // [2] month\n    '-([0-9][0-9])$');                   // [3] day\n\n  var YAML_TIMESTAMP_REGEXP = new RegExp(\n    '^([0-9][0-9][0-9][0-9])'          + // [1] year\n    '-([0-9][0-9]?)'                   + // [2] month\n    '-([0-9][0-9]?)'                   + // [3] day\n    '(?:[Tt]|[ \\\\t]+)'                 + // ...\n    '([0-9][0-9]?)'                    + // [4] hour\n    ':([0-9][0-9])'                    + // [5] minute\n    ':([0-9][0-9])'                    + // [6] second\n    '(?:\\\\.([0-9]*))?'                 + // [7] fraction\n    '(?:[ \\\\t]*(Z|([-+])([0-9][0-9]?)' + // [8] tz [9] tz_sign [10] tz_hour\n    '(?::([0-9][0-9]))?))?$');           // [11] tz_minute\n\n  function resolveYamlTimestamp(data) {\n    if (data === null) return false;\n    if (YAML_DATE_REGEXP.exec(data) !== null) return true;\n    if (YAML_TIMESTAMP_REGEXP.exec(data) !== null) return true;\n    return false;\n  }\n\n  function constructYamlTimestamp(data) {\n    var match, year, month, day, hour, minute, second, fraction = 0,\n        delta = null, tz_hour, tz_minute, date;\n\n    match = YAML_DATE_REGEXP.exec(data);\n    if (match === null) match = YAML_TIMESTAMP_REGEXP.exec(data);\n\n    if (match === null) throw new Error('Date resolve error');\n\n    // match: [1] year [2] month [3] day\n\n    year = +(match[1]);\n    month = +(match[2]) - 1; // JS month starts with 0\n    day = +(match[3]);\n\n    if (!match[4]) { // no hour\n      return new Date(Date.UTC(year, month, day));\n    }\n\n    // match: [4] hour [5] minute [6] second [7] fraction\n\n    hour = +(match[4]);\n    minute = +(match[5]);\n    second = +(match[6]);\n\n    if (match[7]) {\n      fraction = match[7].slice(0, 3);\n      while (fraction.length < 3) { // milli-seconds\n        fraction += '0';\n      }\n      fraction = +fraction;\n    }\n\n    // match: [8] tz [9] tz_sign [10] tz_hour [11] tz_minute\n\n    if (match[9]) {\n      tz_hour = +(match[10]);\n      tz_minute = +(match[11] || 0);\n      delta = (tz_hour * 60 + tz_minute) * 60000; // delta in mili-seconds\n      if (match[9] === '-') delta = -delta;\n    }\n\n    date = new Date(Date.UTC(year, month, day, hour, minute, second, fraction));\n\n    if (delta) date.setTime(date.getTime() - delta);\n\n    return date;\n  }\n\n  function representYamlTimestamp(object /*, style*/) {\n    return object.toISOString();\n  }\n\n  var timestamp = new type('tag:yaml.org,2002:timestamp', {\n    kind: 'scalar',\n    resolve: resolveYamlTimestamp,\n    construct: constructYamlTimestamp,\n    instanceOf: Date,\n    represent: representYamlTimestamp\n  });\n\n  function resolveYamlMerge(data) {\n    return data === '<<' || data === null;\n  }\n\n  var merge = new type('tag:yaml.org,2002:merge', {\n    kind: 'scalar',\n    resolve: resolveYamlMerge\n  });\n\n  /*eslint-disable no-bitwise*/\n\n\n\n\n\n  // [ 64, 65, 66 ] -> [ padding, CR, LF ]\n  var BASE64_MAP = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\\n\\r';\n\n\n  function resolveYamlBinary(data) {\n    if (data === null) return false;\n\n    var code, idx, bitlen = 0, max = data.length, map = BASE64_MAP;\n\n    // Convert one by one.\n    for (idx = 0; idx < max; idx++) {\n      code = map.indexOf(data.charAt(idx));\n\n      // Skip CR/LF\n      if (code > 64) continue;\n\n      // Fail on illegal characters\n      if (code < 0) return false;\n\n      bitlen += 6;\n    }\n\n    // If there are any bits left, source was corrupted\n    return (bitlen % 8) === 0;\n  }\n\n  function constructYamlBinary(data) {\n    var idx, tailbits,\n        input = data.replace(/[\\r\\n=]/g, ''), // remove CR/LF & padding to simplify scan\n        max = input.length,\n        map = BASE64_MAP,\n        bits = 0,\n        result = [];\n\n    // Collect by 6*4 bits (3 bytes)\n\n    for (idx = 0; idx < max; idx++) {\n      if ((idx % 4 === 0) && idx) {\n        result.push((bits >> 16) & 0xFF);\n        result.push((bits >> 8) & 0xFF);\n        result.push(bits & 0xFF);\n      }\n\n      bits = (bits << 6) | map.indexOf(input.charAt(idx));\n    }\n\n    // Dump tail\n\n    tailbits = (max % 4) * 6;\n\n    if (tailbits === 0) {\n      result.push((bits >> 16) & 0xFF);\n      result.push((bits >> 8) & 0xFF);\n      result.push(bits & 0xFF);\n    } else if (tailbits === 18) {\n      result.push((bits >> 10) & 0xFF);\n      result.push((bits >> 2) & 0xFF);\n    } else if (tailbits === 12) {\n      result.push((bits >> 4) & 0xFF);\n    }\n\n    return new Uint8Array(result);\n  }\n\n  function representYamlBinary(object /*, style*/) {\n    var result = '', bits = 0, idx, tail,\n        max = object.length,\n        map = BASE64_MAP;\n\n    // Convert every three bytes to 4 ASCII characters.\n\n    for (idx = 0; idx < max; idx++) {\n      if ((idx % 3 === 0) && idx) {\n        result += map[(bits >> 18) & 0x3F];\n        result += map[(bits >> 12) & 0x3F];\n        result += map[(bits >> 6) & 0x3F];\n        result += map[bits & 0x3F];\n      }\n\n      bits = (bits << 8) + object[idx];\n    }\n\n    // Dump tail\n\n    tail = max % 3;\n\n    if (tail === 0) {\n      result += map[(bits >> 18) & 0x3F];\n      result += map[(bits >> 12) & 0x3F];\n      result += map[(bits >> 6) & 0x3F];\n      result += map[bits & 0x3F];\n    } else if (tail === 2) {\n      result += map[(bits >> 10) & 0x3F];\n      result += map[(bits >> 4) & 0x3F];\n      result += map[(bits << 2) & 0x3F];\n      result += map[64];\n    } else if (tail === 1) {\n      result += map[(bits >> 2) & 0x3F];\n      result += map[(bits << 4) & 0x3F];\n      result += map[64];\n      result += map[64];\n    }\n\n    return result;\n  }\n\n  function isBinary(obj) {\n    return Object.prototype.toString.call(obj) ===  '[object Uint8Array]';\n  }\n\n  var binary = new type('tag:yaml.org,2002:binary', {\n    kind: 'scalar',\n    resolve: resolveYamlBinary,\n    construct: constructYamlBinary,\n    predicate: isBinary,\n    represent: representYamlBinary\n  });\n\n  var _hasOwnProperty$3 = Object.prototype.hasOwnProperty;\n  var _toString$2       = Object.prototype.toString;\n\n  function resolveYamlOmap(data) {\n    if (data === null) return true;\n\n    var objectKeys = [], index, length, pair, pairKey, pairHasKey,\n        object = data;\n\n    for (index = 0, length = object.length; index < length; index += 1) {\n      pair = object[index];\n      pairHasKey = false;\n\n      if (_toString$2.call(pair) !== '[object Object]') return false;\n\n      for (pairKey in pair) {\n        if (_hasOwnProperty$3.call(pair, pairKey)) {\n          if (!pairHasKey) pairHasKey = true;\n          else return false;\n        }\n      }\n\n      if (!pairHasKey) return false;\n\n      if (objectKeys.indexOf(pairKey) === -1) objectKeys.push(pairKey);\n      else return false;\n    }\n\n    return true;\n  }\n\n  function constructYamlOmap(data) {\n    return data !== null ? data : [];\n  }\n\n  var omap = new type('tag:yaml.org,2002:omap', {\n    kind: 'sequence',\n    resolve: resolveYamlOmap,\n    construct: constructYamlOmap\n  });\n\n  var _toString$1 = Object.prototype.toString;\n\n  function resolveYamlPairs(data) {\n    if (data === null) return true;\n\n    var index, length, pair, keys, result,\n        object = data;\n\n    result = new Array(object.length);\n\n    for (index = 0, length = object.length; index < length; index += 1) {\n      pair = object[index];\n\n      if (_toString$1.call(pair) !== '[object Object]') return false;\n\n      keys = Object.keys(pair);\n\n      if (keys.length !== 1) return false;\n\n      result[index] = [ keys[0], pair[keys[0]] ];\n    }\n\n    return true;\n  }\n\n  function constructYamlPairs(data) {\n    if (data === null) return [];\n\n    var index, length, pair, keys, result,\n        object = data;\n\n    result = new Array(object.length);\n\n    for (index = 0, length = object.length; index < length; index += 1) {\n      pair = object[index];\n\n      keys = Object.keys(pair);\n\n      result[index] = [ keys[0], pair[keys[0]] ];\n    }\n\n    return result;\n  }\n\n  var pairs = new type('tag:yaml.org,2002:pairs', {\n    kind: 'sequence',\n    resolve: resolveYamlPairs,\n    construct: constructYamlPairs\n  });\n\n  var _hasOwnProperty$2 = Object.prototype.hasOwnProperty;\n\n  function resolveYamlSet(data) {\n    if (data === null) return true;\n\n    var key, object = data;\n\n    for (key in object) {\n      if (_hasOwnProperty$2.call(object, key)) {\n        if (object[key] !== null) return false;\n      }\n    }\n\n    return true;\n  }\n\n  function constructYamlSet(data) {\n    return data !== null ? data : {};\n  }\n\n  var set = new type('tag:yaml.org,2002:set', {\n    kind: 'mapping',\n    resolve: resolveYamlSet,\n    construct: constructYamlSet\n  });\n\n  var _default = core.extend({\n    implicit: [\n      timestamp,\n      merge\n    ],\n    explicit: [\n      binary,\n      omap,\n      pairs,\n      set\n    ]\n  });\n\n  /*eslint-disable max-len,no-use-before-define*/\n\n\n\n\n\n\n\n  var _hasOwnProperty$1 = Object.prototype.hasOwnProperty;\n\n\n  var CONTEXT_FLOW_IN   = 1;\n  var CONTEXT_FLOW_OUT  = 2;\n  var CONTEXT_BLOCK_IN  = 3;\n  var CONTEXT_BLOCK_OUT = 4;\n\n\n  var CHOMPING_CLIP  = 1;\n  var CHOMPING_STRIP = 2;\n  var CHOMPING_KEEP  = 3;\n\n\n  var PATTERN_NON_PRINTABLE         = /[\\x00-\\x08\\x0B\\x0C\\x0E-\\x1F\\x7F-\\x84\\x86-\\x9F\\uFFFE\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/;\n  var PATTERN_NON_ASCII_LINE_BREAKS = /[\\x85\\u2028\\u2029]/;\n  var PATTERN_FLOW_INDICATORS       = /[,\\[\\]\\{\\}]/;\n  var PATTERN_TAG_HANDLE            = /^(?:!|!!|![a-z\\-]+!)$/i;\n  var PATTERN_TAG_URI               = /^(?:!|[^,\\[\\]\\{\\}])(?:%[0-9a-f]{2}|[0-9a-z\\-#;\\/\\?:@&=\\+\\$,_\\.!~\\*'\\(\\)\\[\\]])*$/i;\n\n\n  function _class(obj) { return Object.prototype.toString.call(obj); }\n\n  function is_EOL(c) {\n    return (c === 0x0A/* LF */) || (c === 0x0D/* CR */);\n  }\n\n  function is_WHITE_SPACE(c) {\n    return (c === 0x09/* Tab */) || (c === 0x20/* Space */);\n  }\n\n  function is_WS_OR_EOL(c) {\n    return (c === 0x09/* Tab */) ||\n           (c === 0x20/* Space */) ||\n           (c === 0x0A/* LF */) ||\n           (c === 0x0D/* CR */);\n  }\n\n  function is_FLOW_INDICATOR(c) {\n    return c === 0x2C/* , */ ||\n           c === 0x5B/* [ */ ||\n           c === 0x5D/* ] */ ||\n           c === 0x7B/* { */ ||\n           c === 0x7D/* } */;\n  }\n\n  function fromHexCode(c) {\n    var lc;\n\n    if ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */)) {\n      return c - 0x30;\n    }\n\n    /*eslint-disable no-bitwise*/\n    lc = c | 0x20;\n\n    if ((0x61/* a */ <= lc) && (lc <= 0x66/* f */)) {\n      return lc - 0x61 + 10;\n    }\n\n    return -1;\n  }\n\n  function escapedHexLen(c) {\n    if (c === 0x78/* x */) { return 2; }\n    if (c === 0x75/* u */) { return 4; }\n    if (c === 0x55/* U */) { return 8; }\n    return 0;\n  }\n\n  function fromDecimalCode(c) {\n    if ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */)) {\n      return c - 0x30;\n    }\n\n    return -1;\n  }\n\n  function simpleEscapeSequence(c) {\n    /* eslint-disable indent */\n    return (c === 0x30/* 0 */) ? '\\x00' :\n          (c === 0x61/* a */) ? '\\x07' :\n          (c === 0x62/* b */) ? '\\x08' :\n          (c === 0x74/* t */) ? '\\x09' :\n          (c === 0x09/* Tab */) ? '\\x09' :\n          (c === 0x6E/* n */) ? '\\x0A' :\n          (c === 0x76/* v */) ? '\\x0B' :\n          (c === 0x66/* f */) ? '\\x0C' :\n          (c === 0x72/* r */) ? '\\x0D' :\n          (c === 0x65/* e */) ? '\\x1B' :\n          (c === 0x20/* Space */) ? ' ' :\n          (c === 0x22/* \" */) ? '\\x22' :\n          (c === 0x2F/* / */) ? '/' :\n          (c === 0x5C/* \\ */) ? '\\x5C' :\n          (c === 0x4E/* N */) ? '\\x85' :\n          (c === 0x5F/* _ */) ? '\\xA0' :\n          (c === 0x4C/* L */) ? '\\u2028' :\n          (c === 0x50/* P */) ? '\\u2029' : '';\n  }\n\n  function charFromCodepoint(c) {\n    if (c <= 0xFFFF) {\n      return String.fromCharCode(c);\n    }\n    // Encode UTF-16 surrogate pair\n    // https://en.wikipedia.org/wiki/UTF-16#Code_points_U.2B010000_to_U.2B10FFFF\n    return String.fromCharCode(\n      ((c - 0x010000) >> 10) + 0xD800,\n      ((c - 0x010000) & 0x03FF) + 0xDC00\n    );\n  }\n\n  var simpleEscapeCheck = new Array(256); // integer, for fast access\n  var simpleEscapeMap = new Array(256);\n  for (var i = 0; i < 256; i++) {\n    simpleEscapeCheck[i] = simpleEscapeSequence(i) ? 1 : 0;\n    simpleEscapeMap[i] = simpleEscapeSequence(i);\n  }\n\n\n  function State$1(input, options) {\n    this.input = input;\n\n    this.filename  = options['filename']  || null;\n    this.schema    = options['schema']    || _default;\n    this.onWarning = options['onWarning'] || null;\n    // (Hidden) Remove? makes the loader to expect YAML 1.1 documents\n    // if such documents have no explicit %YAML directive\n    this.legacy    = options['legacy']    || false;\n\n    this.json      = options['json']      || false;\n    this.listener  = options['listener']  || null;\n\n    this.implicitTypes = this.schema.compiledImplicit;\n    this.typeMap       = this.schema.compiledTypeMap;\n\n    this.length     = input.length;\n    this.position   = 0;\n    this.line       = 0;\n    this.lineStart  = 0;\n    this.lineIndent = 0;\n\n    // position of first leading tab in the current line,\n    // used to make sure there are no tabs in the indentation\n    this.firstTabInLine = -1;\n\n    this.documents = [];\n\n    /*\n    this.version;\n    this.checkLineBreaks;\n    this.tagMap;\n    this.anchorMap;\n    this.tag;\n    this.anchor;\n    this.kind;\n    this.result;*/\n\n  }\n\n\n  function generateError(state, message) {\n    var mark = {\n      name:     state.filename,\n      buffer:   state.input.slice(0, -1), // omit trailing \\0\n      position: state.position,\n      line:     state.line,\n      column:   state.position - state.lineStart\n    };\n\n    mark.snippet = snippet(mark);\n\n    return new exception(message, mark);\n  }\n\n  function throwError(state, message) {\n    throw generateError(state, message);\n  }\n\n  function throwWarning(state, message) {\n    if (state.onWarning) {\n      state.onWarning.call(null, generateError(state, message));\n    }\n  }\n\n\n  var directiveHandlers = {\n\n    YAML: function handleYamlDirective(state, name, args) {\n\n      var match, major, minor;\n\n      if (state.version !== null) {\n        throwError(state, 'duplication of %YAML directive');\n      }\n\n      if (args.length !== 1) {\n        throwError(state, 'YAML directive accepts exactly one argument');\n      }\n\n      match = /^([0-9]+)\\.([0-9]+)$/.exec(args[0]);\n\n      if (match === null) {\n        throwError(state, 'ill-formed argument of the YAML directive');\n      }\n\n      major = parseInt(match[1], 10);\n      minor = parseInt(match[2], 10);\n\n      if (major !== 1) {\n        throwError(state, 'unacceptable YAML version of the document');\n      }\n\n      state.version = args[0];\n      state.checkLineBreaks = (minor < 2);\n\n      if (minor !== 1 && minor !== 2) {\n        throwWarning(state, 'unsupported YAML version of the document');\n      }\n    },\n\n    TAG: function handleTagDirective(state, name, args) {\n\n      var handle, prefix;\n\n      if (args.length !== 2) {\n        throwError(state, 'TAG directive accepts exactly two arguments');\n      }\n\n      handle = args[0];\n      prefix = args[1];\n\n      if (!PATTERN_TAG_HANDLE.test(handle)) {\n        throwError(state, 'ill-formed tag handle (first argument) of the TAG directive');\n      }\n\n      if (_hasOwnProperty$1.call(state.tagMap, handle)) {\n        throwError(state, 'there is a previously declared suffix for \"' + handle + '\" tag handle');\n      }\n\n      if (!PATTERN_TAG_URI.test(prefix)) {\n        throwError(state, 'ill-formed tag prefix (second argument) of the TAG directive');\n      }\n\n      try {\n        prefix = decodeURIComponent(prefix);\n      } catch (err) {\n        throwError(state, 'tag prefix is malformed: ' + prefix);\n      }\n\n      state.tagMap[handle] = prefix;\n    }\n  };\n\n\n  function captureSegment(state, start, end, checkJson) {\n    var _position, _length, _character, _result;\n\n    if (start < end) {\n      _result = state.input.slice(start, end);\n\n      if (checkJson) {\n        for (_position = 0, _length = _result.length; _position < _length; _position += 1) {\n          _character = _result.charCodeAt(_position);\n          if (!(_character === 0x09 ||\n                (0x20 <= _character && _character <= 0x10FFFF))) {\n            throwError(state, 'expected valid JSON character');\n          }\n        }\n      } else if (PATTERN_NON_PRINTABLE.test(_result)) {\n        throwError(state, 'the stream contains non-printable characters');\n      }\n\n      state.result += _result;\n    }\n  }\n\n  function mergeMappings(state, destination, source, overridableKeys) {\n    var sourceKeys, key, index, quantity;\n\n    if (!common.isObject(source)) {\n      throwError(state, 'cannot merge mappings; the provided source object is unacceptable');\n    }\n\n    sourceKeys = Object.keys(source);\n\n    for (index = 0, quantity = sourceKeys.length; index < quantity; index += 1) {\n      key = sourceKeys[index];\n\n      if (!_hasOwnProperty$1.call(destination, key)) {\n        destination[key] = source[key];\n        overridableKeys[key] = true;\n      }\n    }\n  }\n\n  function storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode,\n    startLine, startLineStart, startPos) {\n\n    var index, quantity;\n\n    // The output is a plain object here, so keys can only be strings.\n    // We need to convert keyNode to a string, but doing so can hang the process\n    // (deeply nested arrays that explode exponentially using aliases).\n    if (Array.isArray(keyNode)) {\n      keyNode = Array.prototype.slice.call(keyNode);\n\n      for (index = 0, quantity = keyNode.length; index < quantity; index += 1) {\n        if (Array.isArray(keyNode[index])) {\n          throwError(state, 'nested arrays are not supported inside keys');\n        }\n\n        if (typeof keyNode === 'object' && _class(keyNode[index]) === '[object Object]') {\n          keyNode[index] = '[object Object]';\n        }\n      }\n    }\n\n    // Avoid code execution in load() via toString property\n    // (still use its own toString for arrays, timestamps,\n    // and whatever user schema extensions happen to have @@toStringTag)\n    if (typeof keyNode === 'object' && _class(keyNode) === '[object Object]') {\n      keyNode = '[object Object]';\n    }\n\n\n    keyNode = String(keyNode);\n\n    if (_result === null) {\n      _result = {};\n    }\n\n    if (keyTag === 'tag:yaml.org,2002:merge') {\n      if (Array.isArray(valueNode)) {\n        for (index = 0, quantity = valueNode.length; index < quantity; index += 1) {\n          mergeMappings(state, _result, valueNode[index], overridableKeys);\n        }\n      } else {\n        mergeMappings(state, _result, valueNode, overridableKeys);\n      }\n    } else {\n      if (!state.json &&\n          !_hasOwnProperty$1.call(overridableKeys, keyNode) &&\n          _hasOwnProperty$1.call(_result, keyNode)) {\n        state.line = startLine || state.line;\n        state.lineStart = startLineStart || state.lineStart;\n        state.position = startPos || state.position;\n        throwError(state, 'duplicated mapping key');\n      }\n\n      // used for this specific key only because Object.defineProperty is slow\n      if (keyNode === '__proto__') {\n        Object.defineProperty(_result, keyNode, {\n          configurable: true,\n          enumerable: true,\n          writable: true,\n          value: valueNode\n        });\n      } else {\n        _result[keyNode] = valueNode;\n      }\n      delete overridableKeys[keyNode];\n    }\n\n    return _result;\n  }\n\n  function readLineBreak(state) {\n    var ch;\n\n    ch = state.input.charCodeAt(state.position);\n\n    if (ch === 0x0A/* LF */) {\n      state.position++;\n    } else if (ch === 0x0D/* CR */) {\n      state.position++;\n      if (state.input.charCodeAt(state.position) === 0x0A/* LF */) {\n        state.position++;\n      }\n    } else {\n      throwError(state, 'a line break is expected');\n    }\n\n    state.line += 1;\n    state.lineStart = state.position;\n    state.firstTabInLine = -1;\n  }\n\n  function skipSeparationSpace(state, allowComments, checkIndent) {\n    var lineBreaks = 0,\n        ch = state.input.charCodeAt(state.position);\n\n    while (ch !== 0) {\n      while (is_WHITE_SPACE(ch)) {\n        if (ch === 0x09/* Tab */ && state.firstTabInLine === -1) {\n          state.firstTabInLine = state.position;\n        }\n        ch = state.input.charCodeAt(++state.position);\n      }\n\n      if (allowComments && ch === 0x23/* # */) {\n        do {\n          ch = state.input.charCodeAt(++state.position);\n        } while (ch !== 0x0A/* LF */ && ch !== 0x0D/* CR */ && ch !== 0);\n      }\n\n      if (is_EOL(ch)) {\n        readLineBreak(state);\n\n        ch = state.input.charCodeAt(state.position);\n        lineBreaks++;\n        state.lineIndent = 0;\n\n        while (ch === 0x20/* Space */) {\n          state.lineIndent++;\n          ch = state.input.charCodeAt(++state.position);\n        }\n      } else {\n        break;\n      }\n    }\n\n    if (checkIndent !== -1 && lineBreaks !== 0 && state.lineIndent < checkIndent) {\n      throwWarning(state, 'deficient indentation');\n    }\n\n    return lineBreaks;\n  }\n\n  function testDocumentSeparator(state) {\n    var _position = state.position,\n        ch;\n\n    ch = state.input.charCodeAt(_position);\n\n    // Condition state.position === state.lineStart is tested\n    // in parent on each call, for efficiency. No needs to test here again.\n    if ((ch === 0x2D/* - */ || ch === 0x2E/* . */) &&\n        ch === state.input.charCodeAt(_position + 1) &&\n        ch === state.input.charCodeAt(_position + 2)) {\n\n      _position += 3;\n\n      ch = state.input.charCodeAt(_position);\n\n      if (ch === 0 || is_WS_OR_EOL(ch)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  function writeFoldedLines(state, count) {\n    if (count === 1) {\n      state.result += ' ';\n    } else if (count > 1) {\n      state.result += common.repeat('\\n', count - 1);\n    }\n  }\n\n\n  function readPlainScalar(state, nodeIndent, withinFlowCollection) {\n    var preceding,\n        following,\n        captureStart,\n        captureEnd,\n        hasPendingContent,\n        _line,\n        _lineStart,\n        _lineIndent,\n        _kind = state.kind,\n        _result = state.result,\n        ch;\n\n    ch = state.input.charCodeAt(state.position);\n\n    if (is_WS_OR_EOL(ch)      ||\n        is_FLOW_INDICATOR(ch) ||\n        ch === 0x23/* # */    ||\n        ch === 0x26/* & */    ||\n        ch === 0x2A/* * */    ||\n        ch === 0x21/* ! */    ||\n        ch === 0x7C/* | */    ||\n        ch === 0x3E/* > */    ||\n        ch === 0x27/* ' */    ||\n        ch === 0x22/* \" */    ||\n        ch === 0x25/* % */    ||\n        ch === 0x40/* @ */    ||\n        ch === 0x60/* ` */) {\n      return false;\n    }\n\n    if (ch === 0x3F/* ? */ || ch === 0x2D/* - */) {\n      following = state.input.charCodeAt(state.position + 1);\n\n      if (is_WS_OR_EOL(following) ||\n          withinFlowCollection && is_FLOW_INDICATOR(following)) {\n        return false;\n      }\n    }\n\n    state.kind = 'scalar';\n    state.result = '';\n    captureStart = captureEnd = state.position;\n    hasPendingContent = false;\n\n    while (ch !== 0) {\n      if (ch === 0x3A/* : */) {\n        following = state.input.charCodeAt(state.position + 1);\n\n        if (is_WS_OR_EOL(following) ||\n            withinFlowCollection && is_FLOW_INDICATOR(following)) {\n          break;\n        }\n\n      } else if (ch === 0x23/* # */) {\n        preceding = state.input.charCodeAt(state.position - 1);\n\n        if (is_WS_OR_EOL(preceding)) {\n          break;\n        }\n\n      } else if ((state.position === state.lineStart && testDocumentSeparator(state)) ||\n                 withinFlowCollection && is_FLOW_INDICATOR(ch)) {\n        break;\n\n      } else if (is_EOL(ch)) {\n        _line = state.line;\n        _lineStart = state.lineStart;\n        _lineIndent = state.lineIndent;\n        skipSeparationSpace(state, false, -1);\n\n        if (state.lineIndent >= nodeIndent) {\n          hasPendingContent = true;\n          ch = state.input.charCodeAt(state.position);\n          continue;\n        } else {\n          state.position = captureEnd;\n          state.line = _line;\n          state.lineStart = _lineStart;\n          state.lineIndent = _lineIndent;\n          break;\n        }\n      }\n\n      if (hasPendingContent) {\n        captureSegment(state, captureStart, captureEnd, false);\n        writeFoldedLines(state, state.line - _line);\n        captureStart = captureEnd = state.position;\n        hasPendingContent = false;\n      }\n\n      if (!is_WHITE_SPACE(ch)) {\n        captureEnd = state.position + 1;\n      }\n\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    captureSegment(state, captureStart, captureEnd, false);\n\n    if (state.result) {\n      return true;\n    }\n\n    state.kind = _kind;\n    state.result = _result;\n    return false;\n  }\n\n  function readSingleQuotedScalar(state, nodeIndent) {\n    var ch,\n        captureStart, captureEnd;\n\n    ch = state.input.charCodeAt(state.position);\n\n    if (ch !== 0x27/* ' */) {\n      return false;\n    }\n\n    state.kind = 'scalar';\n    state.result = '';\n    state.position++;\n    captureStart = captureEnd = state.position;\n\n    while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n      if (ch === 0x27/* ' */) {\n        captureSegment(state, captureStart, state.position, true);\n        ch = state.input.charCodeAt(++state.position);\n\n        if (ch === 0x27/* ' */) {\n          captureStart = state.position;\n          state.position++;\n          captureEnd = state.position;\n        } else {\n          return true;\n        }\n\n      } else if (is_EOL(ch)) {\n        captureSegment(state, captureStart, captureEnd, true);\n        writeFoldedLines(state, skipSeparationSpace(state, false, nodeIndent));\n        captureStart = captureEnd = state.position;\n\n      } else if (state.position === state.lineStart && testDocumentSeparator(state)) {\n        throwError(state, 'unexpected end of the document within a single quoted scalar');\n\n      } else {\n        state.position++;\n        captureEnd = state.position;\n      }\n    }\n\n    throwError(state, 'unexpected end of the stream within a single quoted scalar');\n  }\n\n  function readDoubleQuotedScalar(state, nodeIndent) {\n    var captureStart,\n        captureEnd,\n        hexLength,\n        hexResult,\n        tmp,\n        ch;\n\n    ch = state.input.charCodeAt(state.position);\n\n    if (ch !== 0x22/* \" */) {\n      return false;\n    }\n\n    state.kind = 'scalar';\n    state.result = '';\n    state.position++;\n    captureStart = captureEnd = state.position;\n\n    while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n      if (ch === 0x22/* \" */) {\n        captureSegment(state, captureStart, state.position, true);\n        state.position++;\n        return true;\n\n      } else if (ch === 0x5C/* \\ */) {\n        captureSegment(state, captureStart, state.position, true);\n        ch = state.input.charCodeAt(++state.position);\n\n        if (is_EOL(ch)) {\n          skipSeparationSpace(state, false, nodeIndent);\n\n          // TODO: rework to inline fn with no type cast?\n        } else if (ch < 256 && simpleEscapeCheck[ch]) {\n          state.result += simpleEscapeMap[ch];\n          state.position++;\n\n        } else if ((tmp = escapedHexLen(ch)) > 0) {\n          hexLength = tmp;\n          hexResult = 0;\n\n          for (; hexLength > 0; hexLength--) {\n            ch = state.input.charCodeAt(++state.position);\n\n            if ((tmp = fromHexCode(ch)) >= 0) {\n              hexResult = (hexResult << 4) + tmp;\n\n            } else {\n              throwError(state, 'expected hexadecimal character');\n            }\n          }\n\n          state.result += charFromCodepoint(hexResult);\n\n          state.position++;\n\n        } else {\n          throwError(state, 'unknown escape sequence');\n        }\n\n        captureStart = captureEnd = state.position;\n\n      } else if (is_EOL(ch)) {\n        captureSegment(state, captureStart, captureEnd, true);\n        writeFoldedLines(state, skipSeparationSpace(state, false, nodeIndent));\n        captureStart = captureEnd = state.position;\n\n      } else if (state.position === state.lineStart && testDocumentSeparator(state)) {\n        throwError(state, 'unexpected end of the document within a double quoted scalar');\n\n      } else {\n        state.position++;\n        captureEnd = state.position;\n      }\n    }\n\n    throwError(state, 'unexpected end of the stream within a double quoted scalar');\n  }\n\n  function readFlowCollection(state, nodeIndent) {\n    var readNext = true,\n        _line,\n        _lineStart,\n        _pos,\n        _tag     = state.tag,\n        _result,\n        _anchor  = state.anchor,\n        following,\n        terminator,\n        isPair,\n        isExplicitPair,\n        isMapping,\n        overridableKeys = Object.create(null),\n        keyNode,\n        keyTag,\n        valueNode,\n        ch;\n\n    ch = state.input.charCodeAt(state.position);\n\n    if (ch === 0x5B/* [ */) {\n      terminator = 0x5D;/* ] */\n      isMapping = false;\n      _result = [];\n    } else if (ch === 0x7B/* { */) {\n      terminator = 0x7D;/* } */\n      isMapping = true;\n      _result = {};\n    } else {\n      return false;\n    }\n\n    if (state.anchor !== null) {\n      state.anchorMap[state.anchor] = _result;\n    }\n\n    ch = state.input.charCodeAt(++state.position);\n\n    while (ch !== 0) {\n      skipSeparationSpace(state, true, nodeIndent);\n\n      ch = state.input.charCodeAt(state.position);\n\n      if (ch === terminator) {\n        state.position++;\n        state.tag = _tag;\n        state.anchor = _anchor;\n        state.kind = isMapping ? 'mapping' : 'sequence';\n        state.result = _result;\n        return true;\n      } else if (!readNext) {\n        throwError(state, 'missed comma between flow collection entries');\n      } else if (ch === 0x2C/* , */) {\n        // \"flow collection entries can never be completely empty\", as per YAML 1.2, section 7.4\n        throwError(state, \"expected the node content, but found ','\");\n      }\n\n      keyTag = keyNode = valueNode = null;\n      isPair = isExplicitPair = false;\n\n      if (ch === 0x3F/* ? */) {\n        following = state.input.charCodeAt(state.position + 1);\n\n        if (is_WS_OR_EOL(following)) {\n          isPair = isExplicitPair = true;\n          state.position++;\n          skipSeparationSpace(state, true, nodeIndent);\n        }\n      }\n\n      _line = state.line; // Save the current line.\n      _lineStart = state.lineStart;\n      _pos = state.position;\n      composeNode(state, nodeIndent, CONTEXT_FLOW_IN, false, true);\n      keyTag = state.tag;\n      keyNode = state.result;\n      skipSeparationSpace(state, true, nodeIndent);\n\n      ch = state.input.charCodeAt(state.position);\n\n      if ((isExplicitPair || state.line === _line) && ch === 0x3A/* : */) {\n        isPair = true;\n        ch = state.input.charCodeAt(++state.position);\n        skipSeparationSpace(state, true, nodeIndent);\n        composeNode(state, nodeIndent, CONTEXT_FLOW_IN, false, true);\n        valueNode = state.result;\n      }\n\n      if (isMapping) {\n        storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode, _line, _lineStart, _pos);\n      } else if (isPair) {\n        _result.push(storeMappingPair(state, null, overridableKeys, keyTag, keyNode, valueNode, _line, _lineStart, _pos));\n      } else {\n        _result.push(keyNode);\n      }\n\n      skipSeparationSpace(state, true, nodeIndent);\n\n      ch = state.input.charCodeAt(state.position);\n\n      if (ch === 0x2C/* , */) {\n        readNext = true;\n        ch = state.input.charCodeAt(++state.position);\n      } else {\n        readNext = false;\n      }\n    }\n\n    throwError(state, 'unexpected end of the stream within a flow collection');\n  }\n\n  function readBlockScalar(state, nodeIndent) {\n    var captureStart,\n        folding,\n        chomping       = CHOMPING_CLIP,\n        didReadContent = false,\n        detectedIndent = false,\n        textIndent     = nodeIndent,\n        emptyLines     = 0,\n        atMoreIndented = false,\n        tmp,\n        ch;\n\n    ch = state.input.charCodeAt(state.position);\n\n    if (ch === 0x7C/* | */) {\n      folding = false;\n    } else if (ch === 0x3E/* > */) {\n      folding = true;\n    } else {\n      return false;\n    }\n\n    state.kind = 'scalar';\n    state.result = '';\n\n    while (ch !== 0) {\n      ch = state.input.charCodeAt(++state.position);\n\n      if (ch === 0x2B/* + */ || ch === 0x2D/* - */) {\n        if (CHOMPING_CLIP === chomping) {\n          chomping = (ch === 0x2B/* + */) ? CHOMPING_KEEP : CHOMPING_STRIP;\n        } else {\n          throwError(state, 'repeat of a chomping mode identifier');\n        }\n\n      } else if ((tmp = fromDecimalCode(ch)) >= 0) {\n        if (tmp === 0) {\n          throwError(state, 'bad explicit indentation width of a block scalar; it cannot be less than one');\n        } else if (!detectedIndent) {\n          textIndent = nodeIndent + tmp - 1;\n          detectedIndent = true;\n        } else {\n          throwError(state, 'repeat of an indentation width identifier');\n        }\n\n      } else {\n        break;\n      }\n    }\n\n    if (is_WHITE_SPACE(ch)) {\n      do { ch = state.input.charCodeAt(++state.position); }\n      while (is_WHITE_SPACE(ch));\n\n      if (ch === 0x23/* # */) {\n        do { ch = state.input.charCodeAt(++state.position); }\n        while (!is_EOL(ch) && (ch !== 0));\n      }\n    }\n\n    while (ch !== 0) {\n      readLineBreak(state);\n      state.lineIndent = 0;\n\n      ch = state.input.charCodeAt(state.position);\n\n      while ((!detectedIndent || state.lineIndent < textIndent) &&\n             (ch === 0x20/* Space */)) {\n        state.lineIndent++;\n        ch = state.input.charCodeAt(++state.position);\n      }\n\n      if (!detectedIndent && state.lineIndent > textIndent) {\n        textIndent = state.lineIndent;\n      }\n\n      if (is_EOL(ch)) {\n        emptyLines++;\n        continue;\n      }\n\n      // End of the scalar.\n      if (state.lineIndent < textIndent) {\n\n        // Perform the chomping.\n        if (chomping === CHOMPING_KEEP) {\n          state.result += common.repeat('\\n', didReadContent ? 1 + emptyLines : emptyLines);\n        } else if (chomping === CHOMPING_CLIP) {\n          if (didReadContent) { // i.e. only if the scalar is not empty.\n            state.result += '\\n';\n          }\n        }\n\n        // Break this `while` cycle and go to the funciton's epilogue.\n        break;\n      }\n\n      // Folded style: use fancy rules to handle line breaks.\n      if (folding) {\n\n        // Lines starting with white space characters (more-indented lines) are not folded.\n        if (is_WHITE_SPACE(ch)) {\n          atMoreIndented = true;\n          // except for the first content line (cf. Example 8.1)\n          state.result += common.repeat('\\n', didReadContent ? 1 + emptyLines : emptyLines);\n\n        // End of more-indented block.\n        } else if (atMoreIndented) {\n          atMoreIndented = false;\n          state.result += common.repeat('\\n', emptyLines + 1);\n\n        // Just one line break - perceive as the same line.\n        } else if (emptyLines === 0) {\n          if (didReadContent) { // i.e. only if we have already read some scalar content.\n            state.result += ' ';\n          }\n\n        // Several line breaks - perceive as different lines.\n        } else {\n          state.result += common.repeat('\\n', emptyLines);\n        }\n\n      // Literal style: just add exact number of line breaks between content lines.\n      } else {\n        // Keep all line breaks except the header line break.\n        state.result += common.repeat('\\n', didReadContent ? 1 + emptyLines : emptyLines);\n      }\n\n      didReadContent = true;\n      detectedIndent = true;\n      emptyLines = 0;\n      captureStart = state.position;\n\n      while (!is_EOL(ch) && (ch !== 0)) {\n        ch = state.input.charCodeAt(++state.position);\n      }\n\n      captureSegment(state, captureStart, state.position, false);\n    }\n\n    return true;\n  }\n\n  function readBlockSequence(state, nodeIndent) {\n    var _line,\n        _tag      = state.tag,\n        _anchor   = state.anchor,\n        _result   = [],\n        following,\n        detected  = false,\n        ch;\n\n    // there is a leading tab before this token, so it can't be a block sequence/mapping;\n    // it can still be flow sequence/mapping or a scalar\n    if (state.firstTabInLine !== -1) return false;\n\n    if (state.anchor !== null) {\n      state.anchorMap[state.anchor] = _result;\n    }\n\n    ch = state.input.charCodeAt(state.position);\n\n    while (ch !== 0) {\n      if (state.firstTabInLine !== -1) {\n        state.position = state.firstTabInLine;\n        throwError(state, 'tab characters must not be used in indentation');\n      }\n\n      if (ch !== 0x2D/* - */) {\n        break;\n      }\n\n      following = state.input.charCodeAt(state.position + 1);\n\n      if (!is_WS_OR_EOL(following)) {\n        break;\n      }\n\n      detected = true;\n      state.position++;\n\n      if (skipSeparationSpace(state, true, -1)) {\n        if (state.lineIndent <= nodeIndent) {\n          _result.push(null);\n          ch = state.input.charCodeAt(state.position);\n          continue;\n        }\n      }\n\n      _line = state.line;\n      composeNode(state, nodeIndent, CONTEXT_BLOCK_IN, false, true);\n      _result.push(state.result);\n      skipSeparationSpace(state, true, -1);\n\n      ch = state.input.charCodeAt(state.position);\n\n      if ((state.line === _line || state.lineIndent > nodeIndent) && (ch !== 0)) {\n        throwError(state, 'bad indentation of a sequence entry');\n      } else if (state.lineIndent < nodeIndent) {\n        break;\n      }\n    }\n\n    if (detected) {\n      state.tag = _tag;\n      state.anchor = _anchor;\n      state.kind = 'sequence';\n      state.result = _result;\n      return true;\n    }\n    return false;\n  }\n\n  function readBlockMapping(state, nodeIndent, flowIndent) {\n    var following,\n        allowCompact,\n        _line,\n        _keyLine,\n        _keyLineStart,\n        _keyPos,\n        _tag          = state.tag,\n        _anchor       = state.anchor,\n        _result       = {},\n        overridableKeys = Object.create(null),\n        keyTag        = null,\n        keyNode       = null,\n        valueNode     = null,\n        atExplicitKey = false,\n        detected      = false,\n        ch;\n\n    // there is a leading tab before this token, so it can't be a block sequence/mapping;\n    // it can still be flow sequence/mapping or a scalar\n    if (state.firstTabInLine !== -1) return false;\n\n    if (state.anchor !== null) {\n      state.anchorMap[state.anchor] = _result;\n    }\n\n    ch = state.input.charCodeAt(state.position);\n\n    while (ch !== 0) {\n      if (!atExplicitKey && state.firstTabInLine !== -1) {\n        state.position = state.firstTabInLine;\n        throwError(state, 'tab characters must not be used in indentation');\n      }\n\n      following = state.input.charCodeAt(state.position + 1);\n      _line = state.line; // Save the current line.\n\n      //\n      // Explicit notation case. There are two separate blocks:\n      // first for the key (denoted by \"?\") and second for the value (denoted by \":\")\n      //\n      if ((ch === 0x3F/* ? */ || ch === 0x3A/* : */) && is_WS_OR_EOL(following)) {\n\n        if (ch === 0x3F/* ? */) {\n          if (atExplicitKey) {\n            storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null, _keyLine, _keyLineStart, _keyPos);\n            keyTag = keyNode = valueNode = null;\n          }\n\n          detected = true;\n          atExplicitKey = true;\n          allowCompact = true;\n\n        } else if (atExplicitKey) {\n          // i.e. 0x3A/* : */ === character after the explicit key.\n          atExplicitKey = false;\n          allowCompact = true;\n\n        } else {\n          throwError(state, 'incomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line');\n        }\n\n        state.position += 1;\n        ch = following;\n\n      //\n      // Implicit notation case. Flow-style node as the key first, then \":\", and the value.\n      //\n      } else {\n        _keyLine = state.line;\n        _keyLineStart = state.lineStart;\n        _keyPos = state.position;\n\n        if (!composeNode(state, flowIndent, CONTEXT_FLOW_OUT, false, true)) {\n          // Neither implicit nor explicit notation.\n          // Reading is done. Go to the epilogue.\n          break;\n        }\n\n        if (state.line === _line) {\n          ch = state.input.charCodeAt(state.position);\n\n          while (is_WHITE_SPACE(ch)) {\n            ch = state.input.charCodeAt(++state.position);\n          }\n\n          if (ch === 0x3A/* : */) {\n            ch = state.input.charCodeAt(++state.position);\n\n            if (!is_WS_OR_EOL(ch)) {\n              throwError(state, 'a whitespace character is expected after the key-value separator within a block mapping');\n            }\n\n            if (atExplicitKey) {\n              storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null, _keyLine, _keyLineStart, _keyPos);\n              keyTag = keyNode = valueNode = null;\n            }\n\n            detected = true;\n            atExplicitKey = false;\n            allowCompact = false;\n            keyTag = state.tag;\n            keyNode = state.result;\n\n          } else if (detected) {\n            throwError(state, 'can not read an implicit mapping pair; a colon is missed');\n\n          } else {\n            state.tag = _tag;\n            state.anchor = _anchor;\n            return true; // Keep the result of `composeNode`.\n          }\n\n        } else if (detected) {\n          throwError(state, 'can not read a block mapping entry; a multiline key may not be an implicit key');\n\n        } else {\n          state.tag = _tag;\n          state.anchor = _anchor;\n          return true; // Keep the result of `composeNode`.\n        }\n      }\n\n      //\n      // Common reading code for both explicit and implicit notations.\n      //\n      if (state.line === _line || state.lineIndent > nodeIndent) {\n        if (atExplicitKey) {\n          _keyLine = state.line;\n          _keyLineStart = state.lineStart;\n          _keyPos = state.position;\n        }\n\n        if (composeNode(state, nodeIndent, CONTEXT_BLOCK_OUT, true, allowCompact)) {\n          if (atExplicitKey) {\n            keyNode = state.result;\n          } else {\n            valueNode = state.result;\n          }\n        }\n\n        if (!atExplicitKey) {\n          storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode, _keyLine, _keyLineStart, _keyPos);\n          keyTag = keyNode = valueNode = null;\n        }\n\n        skipSeparationSpace(state, true, -1);\n        ch = state.input.charCodeAt(state.position);\n      }\n\n      if ((state.line === _line || state.lineIndent > nodeIndent) && (ch !== 0)) {\n        throwError(state, 'bad indentation of a mapping entry');\n      } else if (state.lineIndent < nodeIndent) {\n        break;\n      }\n    }\n\n    //\n    // Epilogue.\n    //\n\n    // Special case: last mapping's node contains only the key in explicit notation.\n    if (atExplicitKey) {\n      storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null, _keyLine, _keyLineStart, _keyPos);\n    }\n\n    // Expose the resulting mapping.\n    if (detected) {\n      state.tag = _tag;\n      state.anchor = _anchor;\n      state.kind = 'mapping';\n      state.result = _result;\n    }\n\n    return detected;\n  }\n\n  function readTagProperty(state) {\n    var _position,\n        isVerbatim = false,\n        isNamed    = false,\n        tagHandle,\n        tagName,\n        ch;\n\n    ch = state.input.charCodeAt(state.position);\n\n    if (ch !== 0x21/* ! */) return false;\n\n    if (state.tag !== null) {\n      throwError(state, 'duplication of a tag property');\n    }\n\n    ch = state.input.charCodeAt(++state.position);\n\n    if (ch === 0x3C/* < */) {\n      isVerbatim = true;\n      ch = state.input.charCodeAt(++state.position);\n\n    } else if (ch === 0x21/* ! */) {\n      isNamed = true;\n      tagHandle = '!!';\n      ch = state.input.charCodeAt(++state.position);\n\n    } else {\n      tagHandle = '!';\n    }\n\n    _position = state.position;\n\n    if (isVerbatim) {\n      do { ch = state.input.charCodeAt(++state.position); }\n      while (ch !== 0 && ch !== 0x3E/* > */);\n\n      if (state.position < state.length) {\n        tagName = state.input.slice(_position, state.position);\n        ch = state.input.charCodeAt(++state.position);\n      } else {\n        throwError(state, 'unexpected end of the stream within a verbatim tag');\n      }\n    } else {\n      while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n\n        if (ch === 0x21/* ! */) {\n          if (!isNamed) {\n            tagHandle = state.input.slice(_position - 1, state.position + 1);\n\n            if (!PATTERN_TAG_HANDLE.test(tagHandle)) {\n              throwError(state, 'named tag handle cannot contain such characters');\n            }\n\n            isNamed = true;\n            _position = state.position + 1;\n          } else {\n            throwError(state, 'tag suffix cannot contain exclamation marks');\n          }\n        }\n\n        ch = state.input.charCodeAt(++state.position);\n      }\n\n      tagName = state.input.slice(_position, state.position);\n\n      if (PATTERN_FLOW_INDICATORS.test(tagName)) {\n        throwError(state, 'tag suffix cannot contain flow indicator characters');\n      }\n    }\n\n    if (tagName && !PATTERN_TAG_URI.test(tagName)) {\n      throwError(state, 'tag name cannot contain such characters: ' + tagName);\n    }\n\n    try {\n      tagName = decodeURIComponent(tagName);\n    } catch (err) {\n      throwError(state, 'tag name is malformed: ' + tagName);\n    }\n\n    if (isVerbatim) {\n      state.tag = tagName;\n\n    } else if (_hasOwnProperty$1.call(state.tagMap, tagHandle)) {\n      state.tag = state.tagMap[tagHandle] + tagName;\n\n    } else if (tagHandle === '!') {\n      state.tag = '!' + tagName;\n\n    } else if (tagHandle === '!!') {\n      state.tag = 'tag:yaml.org,2002:' + tagName;\n\n    } else {\n      throwError(state, 'undeclared tag handle \"' + tagHandle + '\"');\n    }\n\n    return true;\n  }\n\n  function readAnchorProperty(state) {\n    var _position,\n        ch;\n\n    ch = state.input.charCodeAt(state.position);\n\n    if (ch !== 0x26/* & */) return false;\n\n    if (state.anchor !== null) {\n      throwError(state, 'duplication of an anchor property');\n    }\n\n    ch = state.input.charCodeAt(++state.position);\n    _position = state.position;\n\n    while (ch !== 0 && !is_WS_OR_EOL(ch) && !is_FLOW_INDICATOR(ch)) {\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    if (state.position === _position) {\n      throwError(state, 'name of an anchor node must contain at least one character');\n    }\n\n    state.anchor = state.input.slice(_position, state.position);\n    return true;\n  }\n\n  function readAlias(state) {\n    var _position, alias,\n        ch;\n\n    ch = state.input.charCodeAt(state.position);\n\n    if (ch !== 0x2A/* * */) return false;\n\n    ch = state.input.charCodeAt(++state.position);\n    _position = state.position;\n\n    while (ch !== 0 && !is_WS_OR_EOL(ch) && !is_FLOW_INDICATOR(ch)) {\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    if (state.position === _position) {\n      throwError(state, 'name of an alias node must contain at least one character');\n    }\n\n    alias = state.input.slice(_position, state.position);\n\n    if (!_hasOwnProperty$1.call(state.anchorMap, alias)) {\n      throwError(state, 'unidentified alias \"' + alias + '\"');\n    }\n\n    state.result = state.anchorMap[alias];\n    skipSeparationSpace(state, true, -1);\n    return true;\n  }\n\n  function composeNode(state, parentIndent, nodeContext, allowToSeek, allowCompact) {\n    var allowBlockStyles,\n        allowBlockScalars,\n        allowBlockCollections,\n        indentStatus = 1, // 1: this>parent, 0: this=parent, -1: this<parent\n        atNewLine  = false,\n        hasContent = false,\n        typeIndex,\n        typeQuantity,\n        typeList,\n        type,\n        flowIndent,\n        blockIndent;\n\n    if (state.listener !== null) {\n      state.listener('open', state);\n    }\n\n    state.tag    = null;\n    state.anchor = null;\n    state.kind   = null;\n    state.result = null;\n\n    allowBlockStyles = allowBlockScalars = allowBlockCollections =\n      CONTEXT_BLOCK_OUT === nodeContext ||\n      CONTEXT_BLOCK_IN  === nodeContext;\n\n    if (allowToSeek) {\n      if (skipSeparationSpace(state, true, -1)) {\n        atNewLine = true;\n\n        if (state.lineIndent > parentIndent) {\n          indentStatus = 1;\n        } else if (state.lineIndent === parentIndent) {\n          indentStatus = 0;\n        } else if (state.lineIndent < parentIndent) {\n          indentStatus = -1;\n        }\n      }\n    }\n\n    if (indentStatus === 1) {\n      while (readTagProperty(state) || readAnchorProperty(state)) {\n        if (skipSeparationSpace(state, true, -1)) {\n          atNewLine = true;\n          allowBlockCollections = allowBlockStyles;\n\n          if (state.lineIndent > parentIndent) {\n            indentStatus = 1;\n          } else if (state.lineIndent === parentIndent) {\n            indentStatus = 0;\n          } else if (state.lineIndent < parentIndent) {\n            indentStatus = -1;\n          }\n        } else {\n          allowBlockCollections = false;\n        }\n      }\n    }\n\n    if (allowBlockCollections) {\n      allowBlockCollections = atNewLine || allowCompact;\n    }\n\n    if (indentStatus === 1 || CONTEXT_BLOCK_OUT === nodeContext) {\n      if (CONTEXT_FLOW_IN === nodeContext || CONTEXT_FLOW_OUT === nodeContext) {\n        flowIndent = parentIndent;\n      } else {\n        flowIndent = parentIndent + 1;\n      }\n\n      blockIndent = state.position - state.lineStart;\n\n      if (indentStatus === 1) {\n        if (allowBlockCollections &&\n            (readBlockSequence(state, blockIndent) ||\n             readBlockMapping(state, blockIndent, flowIndent)) ||\n            readFlowCollection(state, flowIndent)) {\n          hasContent = true;\n        } else {\n          if ((allowBlockScalars && readBlockScalar(state, flowIndent)) ||\n              readSingleQuotedScalar(state, flowIndent) ||\n              readDoubleQuotedScalar(state, flowIndent)) {\n            hasContent = true;\n\n          } else if (readAlias(state)) {\n            hasContent = true;\n\n            if (state.tag !== null || state.anchor !== null) {\n              throwError(state, 'alias node should not have any properties');\n            }\n\n          } else if (readPlainScalar(state, flowIndent, CONTEXT_FLOW_IN === nodeContext)) {\n            hasContent = true;\n\n            if (state.tag === null) {\n              state.tag = '?';\n            }\n          }\n\n          if (state.anchor !== null) {\n            state.anchorMap[state.anchor] = state.result;\n          }\n        }\n      } else if (indentStatus === 0) {\n        // Special case: block sequences are allowed to have same indentation level as the parent.\n        // http://www.yaml.org/spec/1.2/spec.html#id2799784\n        hasContent = allowBlockCollections && readBlockSequence(state, blockIndent);\n      }\n    }\n\n    if (state.tag === null) {\n      if (state.anchor !== null) {\n        state.anchorMap[state.anchor] = state.result;\n      }\n\n    } else if (state.tag === '?') {\n      // Implicit resolving is not allowed for non-scalar types, and '?'\n      // non-specific tag is only automatically assigned to plain scalars.\n      //\n      // We only need to check kind conformity in case user explicitly assigns '?'\n      // tag, for example like this: \"!<?> [0]\"\n      //\n      if (state.result !== null && state.kind !== 'scalar') {\n        throwError(state, 'unacceptable node kind for !<?> tag; it should be \"scalar\", not \"' + state.kind + '\"');\n      }\n\n      for (typeIndex = 0, typeQuantity = state.implicitTypes.length; typeIndex < typeQuantity; typeIndex += 1) {\n        type = state.implicitTypes[typeIndex];\n\n        if (type.resolve(state.result)) { // `state.result` updated in resolver if matched\n          state.result = type.construct(state.result);\n          state.tag = type.tag;\n          if (state.anchor !== null) {\n            state.anchorMap[state.anchor] = state.result;\n          }\n          break;\n        }\n      }\n    } else if (state.tag !== '!') {\n      if (_hasOwnProperty$1.call(state.typeMap[state.kind || 'fallback'], state.tag)) {\n        type = state.typeMap[state.kind || 'fallback'][state.tag];\n      } else {\n        // looking for multi type\n        type = null;\n        typeList = state.typeMap.multi[state.kind || 'fallback'];\n\n        for (typeIndex = 0, typeQuantity = typeList.length; typeIndex < typeQuantity; typeIndex += 1) {\n          if (state.tag.slice(0, typeList[typeIndex].tag.length) === typeList[typeIndex].tag) {\n            type = typeList[typeIndex];\n            break;\n          }\n        }\n      }\n\n      if (!type) {\n        throwError(state, 'unknown tag !<' + state.tag + '>');\n      }\n\n      if (state.result !== null && type.kind !== state.kind) {\n        throwError(state, 'unacceptable node kind for !<' + state.tag + '> tag; it should be \"' + type.kind + '\", not \"' + state.kind + '\"');\n      }\n\n      if (!type.resolve(state.result, state.tag)) { // `state.result` updated in resolver if matched\n        throwError(state, 'cannot resolve a node with !<' + state.tag + '> explicit tag');\n      } else {\n        state.result = type.construct(state.result, state.tag);\n        if (state.anchor !== null) {\n          state.anchorMap[state.anchor] = state.result;\n        }\n      }\n    }\n\n    if (state.listener !== null) {\n      state.listener('close', state);\n    }\n    return state.tag !== null ||  state.anchor !== null || hasContent;\n  }\n\n  function readDocument(state) {\n    var documentStart = state.position,\n        _position,\n        directiveName,\n        directiveArgs,\n        hasDirectives = false,\n        ch;\n\n    state.version = null;\n    state.checkLineBreaks = state.legacy;\n    state.tagMap = Object.create(null);\n    state.anchorMap = Object.create(null);\n\n    while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n      skipSeparationSpace(state, true, -1);\n\n      ch = state.input.charCodeAt(state.position);\n\n      if (state.lineIndent > 0 || ch !== 0x25/* % */) {\n        break;\n      }\n\n      hasDirectives = true;\n      ch = state.input.charCodeAt(++state.position);\n      _position = state.position;\n\n      while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n        ch = state.input.charCodeAt(++state.position);\n      }\n\n      directiveName = state.input.slice(_position, state.position);\n      directiveArgs = [];\n\n      if (directiveName.length < 1) {\n        throwError(state, 'directive name must not be less than one character in length');\n      }\n\n      while (ch !== 0) {\n        while (is_WHITE_SPACE(ch)) {\n          ch = state.input.charCodeAt(++state.position);\n        }\n\n        if (ch === 0x23/* # */) {\n          do { ch = state.input.charCodeAt(++state.position); }\n          while (ch !== 0 && !is_EOL(ch));\n          break;\n        }\n\n        if (is_EOL(ch)) break;\n\n        _position = state.position;\n\n        while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n          ch = state.input.charCodeAt(++state.position);\n        }\n\n        directiveArgs.push(state.input.slice(_position, state.position));\n      }\n\n      if (ch !== 0) readLineBreak(state);\n\n      if (_hasOwnProperty$1.call(directiveHandlers, directiveName)) {\n        directiveHandlers[directiveName](state, directiveName, directiveArgs);\n      } else {\n        throwWarning(state, 'unknown document directive \"' + directiveName + '\"');\n      }\n    }\n\n    skipSeparationSpace(state, true, -1);\n\n    if (state.lineIndent === 0 &&\n        state.input.charCodeAt(state.position)     === 0x2D/* - */ &&\n        state.input.charCodeAt(state.position + 1) === 0x2D/* - */ &&\n        state.input.charCodeAt(state.position + 2) === 0x2D/* - */) {\n      state.position += 3;\n      skipSeparationSpace(state, true, -1);\n\n    } else if (hasDirectives) {\n      throwError(state, 'directives end mark is expected');\n    }\n\n    composeNode(state, state.lineIndent - 1, CONTEXT_BLOCK_OUT, false, true);\n    skipSeparationSpace(state, true, -1);\n\n    if (state.checkLineBreaks &&\n        PATTERN_NON_ASCII_LINE_BREAKS.test(state.input.slice(documentStart, state.position))) {\n      throwWarning(state, 'non-ASCII line breaks are interpreted as content');\n    }\n\n    state.documents.push(state.result);\n\n    if (state.position === state.lineStart && testDocumentSeparator(state)) {\n\n      if (state.input.charCodeAt(state.position) === 0x2E/* . */) {\n        state.position += 3;\n        skipSeparationSpace(state, true, -1);\n      }\n      return;\n    }\n\n    if (state.position < (state.length - 1)) {\n      throwError(state, 'end of the stream or a document separator is expected');\n    } else {\n      return;\n    }\n  }\n\n\n  function loadDocuments(input, options) {\n    input = String(input);\n    options = options || {};\n\n    if (input.length !== 0) {\n\n      // Add tailing `\\n` if not exists\n      if (input.charCodeAt(input.length - 1) !== 0x0A/* LF */ &&\n          input.charCodeAt(input.length - 1) !== 0x0D/* CR */) {\n        input += '\\n';\n      }\n\n      // Strip BOM\n      if (input.charCodeAt(0) === 0xFEFF) {\n        input = input.slice(1);\n      }\n    }\n\n    var state = new State$1(input, options);\n\n    var nullpos = input.indexOf('\\0');\n\n    if (nullpos !== -1) {\n      state.position = nullpos;\n      throwError(state, 'null byte is not allowed in input');\n    }\n\n    // Use 0 as string terminator. That significantly simplifies bounds check.\n    state.input += '\\0';\n\n    while (state.input.charCodeAt(state.position) === 0x20/* Space */) {\n      state.lineIndent += 1;\n      state.position += 1;\n    }\n\n    while (state.position < (state.length - 1)) {\n      readDocument(state);\n    }\n\n    return state.documents;\n  }\n\n\n  function loadAll$1(input, iterator, options) {\n    if (iterator !== null && typeof iterator === 'object' && typeof options === 'undefined') {\n      options = iterator;\n      iterator = null;\n    }\n\n    var documents = loadDocuments(input, options);\n\n    if (typeof iterator !== 'function') {\n      return documents;\n    }\n\n    for (var index = 0, length = documents.length; index < length; index += 1) {\n      iterator(documents[index]);\n    }\n  }\n\n\n  function load$1(input, options) {\n    var documents = loadDocuments(input, options);\n\n    if (documents.length === 0) {\n      /*eslint-disable no-undefined*/\n      return undefined;\n    } else if (documents.length === 1) {\n      return documents[0];\n    }\n    throw new exception('expected a single document in the stream, but found more');\n  }\n\n\n  var loadAll_1 = loadAll$1;\n  var load_1    = load$1;\n\n  var loader = {\n  \tloadAll: loadAll_1,\n  \tload: load_1\n  };\n\n  /*eslint-disable no-use-before-define*/\n\n\n\n\n\n  var _toString       = Object.prototype.toString;\n  var _hasOwnProperty = Object.prototype.hasOwnProperty;\n\n  var CHAR_BOM                  = 0xFEFF;\n  var CHAR_TAB                  = 0x09; /* Tab */\n  var CHAR_LINE_FEED            = 0x0A; /* LF */\n  var CHAR_CARRIAGE_RETURN      = 0x0D; /* CR */\n  var CHAR_SPACE                = 0x20; /* Space */\n  var CHAR_EXCLAMATION          = 0x21; /* ! */\n  var CHAR_DOUBLE_QUOTE         = 0x22; /* \" */\n  var CHAR_SHARP                = 0x23; /* # */\n  var CHAR_PERCENT              = 0x25; /* % */\n  var CHAR_AMPERSAND            = 0x26; /* & */\n  var CHAR_SINGLE_QUOTE         = 0x27; /* ' */\n  var CHAR_ASTERISK             = 0x2A; /* * */\n  var CHAR_COMMA                = 0x2C; /* , */\n  var CHAR_MINUS                = 0x2D; /* - */\n  var CHAR_COLON                = 0x3A; /* : */\n  var CHAR_EQUALS               = 0x3D; /* = */\n  var CHAR_GREATER_THAN         = 0x3E; /* > */\n  var CHAR_QUESTION             = 0x3F; /* ? */\n  var CHAR_COMMERCIAL_AT        = 0x40; /* @ */\n  var CHAR_LEFT_SQUARE_BRACKET  = 0x5B; /* [ */\n  var CHAR_RIGHT_SQUARE_BRACKET = 0x5D; /* ] */\n  var CHAR_GRAVE_ACCENT         = 0x60; /* ` */\n  var CHAR_LEFT_CURLY_BRACKET   = 0x7B; /* { */\n  var CHAR_VERTICAL_LINE        = 0x7C; /* | */\n  var CHAR_RIGHT_CURLY_BRACKET  = 0x7D; /* } */\n\n  var ESCAPE_SEQUENCES = {};\n\n  ESCAPE_SEQUENCES[0x00]   = '\\\\0';\n  ESCAPE_SEQUENCES[0x07]   = '\\\\a';\n  ESCAPE_SEQUENCES[0x08]   = '\\\\b';\n  ESCAPE_SEQUENCES[0x09]   = '\\\\t';\n  ESCAPE_SEQUENCES[0x0A]   = '\\\\n';\n  ESCAPE_SEQUENCES[0x0B]   = '\\\\v';\n  ESCAPE_SEQUENCES[0x0C]   = '\\\\f';\n  ESCAPE_SEQUENCES[0x0D]   = '\\\\r';\n  ESCAPE_SEQUENCES[0x1B]   = '\\\\e';\n  ESCAPE_SEQUENCES[0x22]   = '\\\\\"';\n  ESCAPE_SEQUENCES[0x5C]   = '\\\\\\\\';\n  ESCAPE_SEQUENCES[0x85]   = '\\\\N';\n  ESCAPE_SEQUENCES[0xA0]   = '\\\\_';\n  ESCAPE_SEQUENCES[0x2028] = '\\\\L';\n  ESCAPE_SEQUENCES[0x2029] = '\\\\P';\n\n  var DEPRECATED_BOOLEANS_SYNTAX = [\n    'y', 'Y', 'yes', 'Yes', 'YES', 'on', 'On', 'ON',\n    'n', 'N', 'no', 'No', 'NO', 'off', 'Off', 'OFF'\n  ];\n\n  var DEPRECATED_BASE60_SYNTAX = /^[-+]?[0-9_]+(?::[0-9_]+)+(?:\\.[0-9_]*)?$/;\n\n  function compileStyleMap(schema, map) {\n    var result, keys, index, length, tag, style, type;\n\n    if (map === null) return {};\n\n    result = {};\n    keys = Object.keys(map);\n\n    for (index = 0, length = keys.length; index < length; index += 1) {\n      tag = keys[index];\n      style = String(map[tag]);\n\n      if (tag.slice(0, 2) === '!!') {\n        tag = 'tag:yaml.org,2002:' + tag.slice(2);\n      }\n      type = schema.compiledTypeMap['fallback'][tag];\n\n      if (type && _hasOwnProperty.call(type.styleAliases, style)) {\n        style = type.styleAliases[style];\n      }\n\n      result[tag] = style;\n    }\n\n    return result;\n  }\n\n  function encodeHex(character) {\n    var string, handle, length;\n\n    string = character.toString(16).toUpperCase();\n\n    if (character <= 0xFF) {\n      handle = 'x';\n      length = 2;\n    } else if (character <= 0xFFFF) {\n      handle = 'u';\n      length = 4;\n    } else if (character <= 0xFFFFFFFF) {\n      handle = 'U';\n      length = 8;\n    } else {\n      throw new exception('code point within a string may not be greater than 0xFFFFFFFF');\n    }\n\n    return '\\\\' + handle + common.repeat('0', length - string.length) + string;\n  }\n\n\n  var QUOTING_TYPE_SINGLE = 1,\n      QUOTING_TYPE_DOUBLE = 2;\n\n  function State(options) {\n    this.schema        = options['schema'] || _default;\n    this.indent        = Math.max(1, (options['indent'] || 2));\n    this.noArrayIndent = options['noArrayIndent'] || false;\n    this.skipInvalid   = options['skipInvalid'] || false;\n    this.flowLevel     = (common.isNothing(options['flowLevel']) ? -1 : options['flowLevel']);\n    this.styleMap      = compileStyleMap(this.schema, options['styles'] || null);\n    this.sortKeys      = options['sortKeys'] || false;\n    this.lineWidth     = options['lineWidth'] || 80;\n    this.noRefs        = options['noRefs'] || false;\n    this.noCompatMode  = options['noCompatMode'] || false;\n    this.condenseFlow  = options['condenseFlow'] || false;\n    this.quotingType   = options['quotingType'] === '\"' ? QUOTING_TYPE_DOUBLE : QUOTING_TYPE_SINGLE;\n    this.forceQuotes   = options['forceQuotes'] || false;\n    this.replacer      = typeof options['replacer'] === 'function' ? options['replacer'] : null;\n\n    this.implicitTypes = this.schema.compiledImplicit;\n    this.explicitTypes = this.schema.compiledExplicit;\n\n    this.tag = null;\n    this.result = '';\n\n    this.duplicates = [];\n    this.usedDuplicates = null;\n  }\n\n  // Indents every line in a string. Empty lines (\\n only) are not indented.\n  function indentString(string, spaces) {\n    var ind = common.repeat(' ', spaces),\n        position = 0,\n        next = -1,\n        result = '',\n        line,\n        length = string.length;\n\n    while (position < length) {\n      next = string.indexOf('\\n', position);\n      if (next === -1) {\n        line = string.slice(position);\n        position = length;\n      } else {\n        line = string.slice(position, next + 1);\n        position = next + 1;\n      }\n\n      if (line.length && line !== '\\n') result += ind;\n\n      result += line;\n    }\n\n    return result;\n  }\n\n  function generateNextLine(state, level) {\n    return '\\n' + common.repeat(' ', state.indent * level);\n  }\n\n  function testImplicitResolving(state, str) {\n    var index, length, type;\n\n    for (index = 0, length = state.implicitTypes.length; index < length; index += 1) {\n      type = state.implicitTypes[index];\n\n      if (type.resolve(str)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  // [33] s-white ::= s-space | s-tab\n  function isWhitespace(c) {\n    return c === CHAR_SPACE || c === CHAR_TAB;\n  }\n\n  // Returns true if the character can be printed without escaping.\n  // From YAML 1.2: \"any allowed characters known to be non-printable\n  // should also be escaped. [However,] This isn’t mandatory\"\n  // Derived from nb-char - \\t - #x85 - #xA0 - #x2028 - #x2029.\n  function isPrintable(c) {\n    return  (0x00020 <= c && c <= 0x00007E)\n        || ((0x000A1 <= c && c <= 0x00D7FF) && c !== 0x2028 && c !== 0x2029)\n        || ((0x0E000 <= c && c <= 0x00FFFD) && c !== CHAR_BOM)\n        ||  (0x10000 <= c && c <= 0x10FFFF);\n  }\n\n  // [34] ns-char ::= nb-char - s-white\n  // [27] nb-char ::= c-printable - b-char - c-byte-order-mark\n  // [26] b-char  ::= b-line-feed | b-carriage-return\n  // Including s-white (for some reason, examples doesn't match specs in this aspect)\n  // ns-char ::= c-printable - b-line-feed - b-carriage-return - c-byte-order-mark\n  function isNsCharOrWhitespace(c) {\n    return isPrintable(c)\n      && c !== CHAR_BOM\n      // - b-char\n      && c !== CHAR_CARRIAGE_RETURN\n      && c !== CHAR_LINE_FEED;\n  }\n\n  // [127]  ns-plain-safe(c) ::= c = flow-out  ⇒ ns-plain-safe-out\n  //                             c = flow-in   ⇒ ns-plain-safe-in\n  //                             c = block-key ⇒ ns-plain-safe-out\n  //                             c = flow-key  ⇒ ns-plain-safe-in\n  // [128] ns-plain-safe-out ::= ns-char\n  // [129]  ns-plain-safe-in ::= ns-char - c-flow-indicator\n  // [130]  ns-plain-char(c) ::=  ( ns-plain-safe(c) - “:” - “#” )\n  //                            | ( /* An ns-char preceding */ “#” )\n  //                            | ( “:” /* Followed by an ns-plain-safe(c) */ )\n  function isPlainSafe(c, prev, inblock) {\n    var cIsNsCharOrWhitespace = isNsCharOrWhitespace(c);\n    var cIsNsChar = cIsNsCharOrWhitespace && !isWhitespace(c);\n    return (\n      // ns-plain-safe\n      inblock ? // c = flow-in\n        cIsNsCharOrWhitespace\n        : cIsNsCharOrWhitespace\n          // - c-flow-indicator\n          && c !== CHAR_COMMA\n          && c !== CHAR_LEFT_SQUARE_BRACKET\n          && c !== CHAR_RIGHT_SQUARE_BRACKET\n          && c !== CHAR_LEFT_CURLY_BRACKET\n          && c !== CHAR_RIGHT_CURLY_BRACKET\n    )\n      // ns-plain-char\n      && c !== CHAR_SHARP // false on '#'\n      && !(prev === CHAR_COLON && !cIsNsChar) // false on ': '\n      || (isNsCharOrWhitespace(prev) && !isWhitespace(prev) && c === CHAR_SHARP) // change to true on '[^ ]#'\n      || (prev === CHAR_COLON && cIsNsChar); // change to true on ':[^ ]'\n  }\n\n  // Simplified test for values allowed as the first character in plain style.\n  function isPlainSafeFirst(c) {\n    // Uses a subset of ns-char - c-indicator\n    // where ns-char = nb-char - s-white.\n    // No support of ( ( “?” | “:” | “-” ) /* Followed by an ns-plain-safe(c)) */ ) part\n    return isPrintable(c) && c !== CHAR_BOM\n      && !isWhitespace(c) // - s-white\n      // - (c-indicator ::=\n      // “-” | “?” | “:” | “,” | “[” | “]” | “{” | “}”\n      && c !== CHAR_MINUS\n      && c !== CHAR_QUESTION\n      && c !== CHAR_COLON\n      && c !== CHAR_COMMA\n      && c !== CHAR_LEFT_SQUARE_BRACKET\n      && c !== CHAR_RIGHT_SQUARE_BRACKET\n      && c !== CHAR_LEFT_CURLY_BRACKET\n      && c !== CHAR_RIGHT_CURLY_BRACKET\n      // | “#” | “&” | “*” | “!” | “|” | “=” | “>” | “'” | “\"”\n      && c !== CHAR_SHARP\n      && c !== CHAR_AMPERSAND\n      && c !== CHAR_ASTERISK\n      && c !== CHAR_EXCLAMATION\n      && c !== CHAR_VERTICAL_LINE\n      && c !== CHAR_EQUALS\n      && c !== CHAR_GREATER_THAN\n      && c !== CHAR_SINGLE_QUOTE\n      && c !== CHAR_DOUBLE_QUOTE\n      // | “%” | “@” | “`”)\n      && c !== CHAR_PERCENT\n      && c !== CHAR_COMMERCIAL_AT\n      && c !== CHAR_GRAVE_ACCENT;\n  }\n\n  // Simplified test for values allowed as the last character in plain style.\n  function isPlainSafeLast(c) {\n    // just not whitespace or colon, it will be checked to be plain character later\n    return !isWhitespace(c) && c !== CHAR_COLON;\n  }\n\n  // Same as 'string'.codePointAt(pos), but works in older browsers.\n  function codePointAt(string, pos) {\n    var first = string.charCodeAt(pos), second;\n    if (first >= 0xD800 && first <= 0xDBFF && pos + 1 < string.length) {\n      second = string.charCodeAt(pos + 1);\n      if (second >= 0xDC00 && second <= 0xDFFF) {\n        // https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n        return (first - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n      }\n    }\n    return first;\n  }\n\n  // Determines whether block indentation indicator is required.\n  function needIndentIndicator(string) {\n    var leadingSpaceRe = /^\\n* /;\n    return leadingSpaceRe.test(string);\n  }\n\n  var STYLE_PLAIN   = 1,\n      STYLE_SINGLE  = 2,\n      STYLE_LITERAL = 3,\n      STYLE_FOLDED  = 4,\n      STYLE_DOUBLE  = 5;\n\n  // Determines which scalar styles are possible and returns the preferred style.\n  // lineWidth = -1 => no limit.\n  // Pre-conditions: str.length > 0.\n  // Post-conditions:\n  //    STYLE_PLAIN or STYLE_SINGLE => no \\n are in the string.\n  //    STYLE_LITERAL => no lines are suitable for folding (or lineWidth is -1).\n  //    STYLE_FOLDED => a line > lineWidth and can be folded (and lineWidth != -1).\n  function chooseScalarStyle(string, singleLineOnly, indentPerLevel, lineWidth,\n    testAmbiguousType, quotingType, forceQuotes, inblock) {\n\n    var i;\n    var char = 0;\n    var prevChar = null;\n    var hasLineBreak = false;\n    var hasFoldableLine = false; // only checked if shouldTrackWidth\n    var shouldTrackWidth = lineWidth !== -1;\n    var previousLineBreak = -1; // count the first line correctly\n    var plain = isPlainSafeFirst(codePointAt(string, 0))\n            && isPlainSafeLast(codePointAt(string, string.length - 1));\n\n    if (singleLineOnly || forceQuotes) {\n      // Case: no block styles.\n      // Check for disallowed characters to rule out plain and single.\n      for (i = 0; i < string.length; char >= 0x10000 ? i += 2 : i++) {\n        char = codePointAt(string, i);\n        if (!isPrintable(char)) {\n          return STYLE_DOUBLE;\n        }\n        plain = plain && isPlainSafe(char, prevChar, inblock);\n        prevChar = char;\n      }\n    } else {\n      // Case: block styles permitted.\n      for (i = 0; i < string.length; char >= 0x10000 ? i += 2 : i++) {\n        char = codePointAt(string, i);\n        if (char === CHAR_LINE_FEED) {\n          hasLineBreak = true;\n          // Check if any line can be folded.\n          if (shouldTrackWidth) {\n            hasFoldableLine = hasFoldableLine ||\n              // Foldable line = too long, and not more-indented.\n              (i - previousLineBreak - 1 > lineWidth &&\n               string[previousLineBreak + 1] !== ' ');\n            previousLineBreak = i;\n          }\n        } else if (!isPrintable(char)) {\n          return STYLE_DOUBLE;\n        }\n        plain = plain && isPlainSafe(char, prevChar, inblock);\n        prevChar = char;\n      }\n      // in case the end is missing a \\n\n      hasFoldableLine = hasFoldableLine || (shouldTrackWidth &&\n        (i - previousLineBreak - 1 > lineWidth &&\n         string[previousLineBreak + 1] !== ' '));\n    }\n    // Although every style can represent \\n without escaping, prefer block styles\n    // for multiline, since they're more readable and they don't add empty lines.\n    // Also prefer folding a super-long line.\n    if (!hasLineBreak && !hasFoldableLine) {\n      // Strings interpretable as another type have to be quoted;\n      // e.g. the string 'true' vs. the boolean true.\n      if (plain && !forceQuotes && !testAmbiguousType(string)) {\n        return STYLE_PLAIN;\n      }\n      return quotingType === QUOTING_TYPE_DOUBLE ? STYLE_DOUBLE : STYLE_SINGLE;\n    }\n    // Edge case: block indentation indicator can only have one digit.\n    if (indentPerLevel > 9 && needIndentIndicator(string)) {\n      return STYLE_DOUBLE;\n    }\n    // At this point we know block styles are valid.\n    // Prefer literal style unless we want to fold.\n    if (!forceQuotes) {\n      return hasFoldableLine ? STYLE_FOLDED : STYLE_LITERAL;\n    }\n    return quotingType === QUOTING_TYPE_DOUBLE ? STYLE_DOUBLE : STYLE_SINGLE;\n  }\n\n  // Note: line breaking/folding is implemented for only the folded style.\n  // NB. We drop the last trailing newline (if any) of a returned block scalar\n  //  since the dumper adds its own newline. This always works:\n  //    • No ending newline => unaffected; already using strip \"-\" chomping.\n  //    • Ending newline    => removed then restored.\n  //  Importantly, this keeps the \"+\" chomp indicator from gaining an extra line.\n  function writeScalar(state, string, level, iskey, inblock) {\n    state.dump = (function () {\n      if (string.length === 0) {\n        return state.quotingType === QUOTING_TYPE_DOUBLE ? '\"\"' : \"''\";\n      }\n      if (!state.noCompatMode) {\n        if (DEPRECATED_BOOLEANS_SYNTAX.indexOf(string) !== -1 || DEPRECATED_BASE60_SYNTAX.test(string)) {\n          return state.quotingType === QUOTING_TYPE_DOUBLE ? ('\"' + string + '\"') : (\"'\" + string + \"'\");\n        }\n      }\n\n      var indent = state.indent * Math.max(1, level); // no 0-indent scalars\n      // As indentation gets deeper, let the width decrease monotonically\n      // to the lower bound min(state.lineWidth, 40).\n      // Note that this implies\n      //  state.lineWidth ≤ 40 + state.indent: width is fixed at the lower bound.\n      //  state.lineWidth > 40 + state.indent: width decreases until the lower bound.\n      // This behaves better than a constant minimum width which disallows narrower options,\n      // or an indent threshold which causes the width to suddenly increase.\n      var lineWidth = state.lineWidth === -1\n        ? -1 : Math.max(Math.min(state.lineWidth, 40), state.lineWidth - indent);\n\n      // Without knowing if keys are implicit/explicit, assume implicit for safety.\n      var singleLineOnly = iskey\n        // No block styles in flow mode.\n        || (state.flowLevel > -1 && level >= state.flowLevel);\n      function testAmbiguity(string) {\n        return testImplicitResolving(state, string);\n      }\n\n      switch (chooseScalarStyle(string, singleLineOnly, state.indent, lineWidth,\n        testAmbiguity, state.quotingType, state.forceQuotes && !iskey, inblock)) {\n\n        case STYLE_PLAIN:\n          return string;\n        case STYLE_SINGLE:\n          return \"'\" + string.replace(/'/g, \"''\") + \"'\";\n        case STYLE_LITERAL:\n          return '|' + blockHeader(string, state.indent)\n            + dropEndingNewline(indentString(string, indent));\n        case STYLE_FOLDED:\n          return '>' + blockHeader(string, state.indent)\n            + dropEndingNewline(indentString(foldString(string, lineWidth), indent));\n        case STYLE_DOUBLE:\n          return '\"' + escapeString(string) + '\"';\n        default:\n          throw new exception('impossible error: invalid scalar style');\n      }\n    }());\n  }\n\n  // Pre-conditions: string is valid for a block scalar, 1 <= indentPerLevel <= 9.\n  function blockHeader(string, indentPerLevel) {\n    var indentIndicator = needIndentIndicator(string) ? String(indentPerLevel) : '';\n\n    // note the special case: the string '\\n' counts as a \"trailing\" empty line.\n    var clip =          string[string.length - 1] === '\\n';\n    var keep = clip && (string[string.length - 2] === '\\n' || string === '\\n');\n    var chomp = keep ? '+' : (clip ? '' : '-');\n\n    return indentIndicator + chomp + '\\n';\n  }\n\n  // (See the note for writeScalar.)\n  function dropEndingNewline(string) {\n    return string[string.length - 1] === '\\n' ? string.slice(0, -1) : string;\n  }\n\n  // Note: a long line without a suitable break point will exceed the width limit.\n  // Pre-conditions: every char in str isPrintable, str.length > 0, width > 0.\n  function foldString(string, width) {\n    // In folded style, $k$ consecutive newlines output as $k+1$ newlines—\n    // unless they're before or after a more-indented line, or at the very\n    // beginning or end, in which case $k$ maps to $k$.\n    // Therefore, parse each chunk as newline(s) followed by a content line.\n    var lineRe = /(\\n+)([^\\n]*)/g;\n\n    // first line (possibly an empty line)\n    var result = (function () {\n      var nextLF = string.indexOf('\\n');\n      nextLF = nextLF !== -1 ? nextLF : string.length;\n      lineRe.lastIndex = nextLF;\n      return foldLine(string.slice(0, nextLF), width);\n    }());\n    // If we haven't reached the first content line yet, don't add an extra \\n.\n    var prevMoreIndented = string[0] === '\\n' || string[0] === ' ';\n    var moreIndented;\n\n    // rest of the lines\n    var match;\n    while ((match = lineRe.exec(string))) {\n      var prefix = match[1], line = match[2];\n      moreIndented = (line[0] === ' ');\n      result += prefix\n        + (!prevMoreIndented && !moreIndented && line !== ''\n          ? '\\n' : '')\n        + foldLine(line, width);\n      prevMoreIndented = moreIndented;\n    }\n\n    return result;\n  }\n\n  // Greedy line breaking.\n  // Picks the longest line under the limit each time,\n  // otherwise settles for the shortest line over the limit.\n  // NB. More-indented lines *cannot* be folded, as that would add an extra \\n.\n  function foldLine(line, width) {\n    if (line === '' || line[0] === ' ') return line;\n\n    // Since a more-indented line adds a \\n, breaks can't be followed by a space.\n    var breakRe = / [^ ]/g; // note: the match index will always be <= length-2.\n    var match;\n    // start is an inclusive index. end, curr, and next are exclusive.\n    var start = 0, end, curr = 0, next = 0;\n    var result = '';\n\n    // Invariants: 0 <= start <= length-1.\n    //   0 <= curr <= next <= max(0, length-2). curr - start <= width.\n    // Inside the loop:\n    //   A match implies length >= 2, so curr and next are <= length-2.\n    while ((match = breakRe.exec(line))) {\n      next = match.index;\n      // maintain invariant: curr - start <= width\n      if (next - start > width) {\n        end = (curr > start) ? curr : next; // derive end <= length-2\n        result += '\\n' + line.slice(start, end);\n        // skip the space that was output as \\n\n        start = end + 1;                    // derive start <= length-1\n      }\n      curr = next;\n    }\n\n    // By the invariants, start <= length-1, so there is something left over.\n    // It is either the whole string or a part starting from non-whitespace.\n    result += '\\n';\n    // Insert a break if the remainder is too long and there is a break available.\n    if (line.length - start > width && curr > start) {\n      result += line.slice(start, curr) + '\\n' + line.slice(curr + 1);\n    } else {\n      result += line.slice(start);\n    }\n\n    return result.slice(1); // drop extra \\n joiner\n  }\n\n  // Escapes a double-quoted string.\n  function escapeString(string) {\n    var result = '';\n    var char = 0;\n    var escapeSeq;\n\n    for (var i = 0; i < string.length; char >= 0x10000 ? i += 2 : i++) {\n      char = codePointAt(string, i);\n      escapeSeq = ESCAPE_SEQUENCES[char];\n\n      if (!escapeSeq && isPrintable(char)) {\n        result += string[i];\n        if (char >= 0x10000) result += string[i + 1];\n      } else {\n        result += escapeSeq || encodeHex(char);\n      }\n    }\n\n    return result;\n  }\n\n  function writeFlowSequence(state, level, object) {\n    var _result = '',\n        _tag    = state.tag,\n        index,\n        length,\n        value;\n\n    for (index = 0, length = object.length; index < length; index += 1) {\n      value = object[index];\n\n      if (state.replacer) {\n        value = state.replacer.call(object, String(index), value);\n      }\n\n      // Write only valid elements, put null instead of invalid elements.\n      if (writeNode(state, level, value, false, false) ||\n          (typeof value === 'undefined' &&\n           writeNode(state, level, null, false, false))) {\n\n        if (_result !== '') _result += ',' + (!state.condenseFlow ? ' ' : '');\n        _result += state.dump;\n      }\n    }\n\n    state.tag = _tag;\n    state.dump = '[' + _result + ']';\n  }\n\n  function writeBlockSequence(state, level, object, compact) {\n    var _result = '',\n        _tag    = state.tag,\n        index,\n        length,\n        value;\n\n    for (index = 0, length = object.length; index < length; index += 1) {\n      value = object[index];\n\n      if (state.replacer) {\n        value = state.replacer.call(object, String(index), value);\n      }\n\n      // Write only valid elements, put null instead of invalid elements.\n      if (writeNode(state, level + 1, value, true, true, false, true) ||\n          (typeof value === 'undefined' &&\n           writeNode(state, level + 1, null, true, true, false, true))) {\n\n        if (!compact || _result !== '') {\n          _result += generateNextLine(state, level);\n        }\n\n        if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {\n          _result += '-';\n        } else {\n          _result += '- ';\n        }\n\n        _result += state.dump;\n      }\n    }\n\n    state.tag = _tag;\n    state.dump = _result || '[]'; // Empty sequence if no valid values.\n  }\n\n  function writeFlowMapping(state, level, object) {\n    var _result       = '',\n        _tag          = state.tag,\n        objectKeyList = Object.keys(object),\n        index,\n        length,\n        objectKey,\n        objectValue,\n        pairBuffer;\n\n    for (index = 0, length = objectKeyList.length; index < length; index += 1) {\n\n      pairBuffer = '';\n      if (_result !== '') pairBuffer += ', ';\n\n      if (state.condenseFlow) pairBuffer += '\"';\n\n      objectKey = objectKeyList[index];\n      objectValue = object[objectKey];\n\n      if (state.replacer) {\n        objectValue = state.replacer.call(object, objectKey, objectValue);\n      }\n\n      if (!writeNode(state, level, objectKey, false, false)) {\n        continue; // Skip this pair because of invalid key;\n      }\n\n      if (state.dump.length > 1024) pairBuffer += '? ';\n\n      pairBuffer += state.dump + (state.condenseFlow ? '\"' : '') + ':' + (state.condenseFlow ? '' : ' ');\n\n      if (!writeNode(state, level, objectValue, false, false)) {\n        continue; // Skip this pair because of invalid value.\n      }\n\n      pairBuffer += state.dump;\n\n      // Both key and value are valid.\n      _result += pairBuffer;\n    }\n\n    state.tag = _tag;\n    state.dump = '{' + _result + '}';\n  }\n\n  function writeBlockMapping(state, level, object, compact) {\n    var _result       = '',\n        _tag          = state.tag,\n        objectKeyList = Object.keys(object),\n        index,\n        length,\n        objectKey,\n        objectValue,\n        explicitPair,\n        pairBuffer;\n\n    // Allow sorting keys so that the output file is deterministic\n    if (state.sortKeys === true) {\n      // Default sorting\n      objectKeyList.sort();\n    } else if (typeof state.sortKeys === 'function') {\n      // Custom sort function\n      objectKeyList.sort(state.sortKeys);\n    } else if (state.sortKeys) {\n      // Something is wrong\n      throw new exception('sortKeys must be a boolean or a function');\n    }\n\n    for (index = 0, length = objectKeyList.length; index < length; index += 1) {\n      pairBuffer = '';\n\n      if (!compact || _result !== '') {\n        pairBuffer += generateNextLine(state, level);\n      }\n\n      objectKey = objectKeyList[index];\n      objectValue = object[objectKey];\n\n      if (state.replacer) {\n        objectValue = state.replacer.call(object, objectKey, objectValue);\n      }\n\n      if (!writeNode(state, level + 1, objectKey, true, true, true)) {\n        continue; // Skip this pair because of invalid key.\n      }\n\n      explicitPair = (state.tag !== null && state.tag !== '?') ||\n                     (state.dump && state.dump.length > 1024);\n\n      if (explicitPair) {\n        if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {\n          pairBuffer += '?';\n        } else {\n          pairBuffer += '? ';\n        }\n      }\n\n      pairBuffer += state.dump;\n\n      if (explicitPair) {\n        pairBuffer += generateNextLine(state, level);\n      }\n\n      if (!writeNode(state, level + 1, objectValue, true, explicitPair)) {\n        continue; // Skip this pair because of invalid value.\n      }\n\n      if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {\n        pairBuffer += ':';\n      } else {\n        pairBuffer += ': ';\n      }\n\n      pairBuffer += state.dump;\n\n      // Both key and value are valid.\n      _result += pairBuffer;\n    }\n\n    state.tag = _tag;\n    state.dump = _result || '{}'; // Empty mapping if no valid pairs.\n  }\n\n  function detectType(state, object, explicit) {\n    var _result, typeList, index, length, type, style;\n\n    typeList = explicit ? state.explicitTypes : state.implicitTypes;\n\n    for (index = 0, length = typeList.length; index < length; index += 1) {\n      type = typeList[index];\n\n      if ((type.instanceOf  || type.predicate) &&\n          (!type.instanceOf || ((typeof object === 'object') && (object instanceof type.instanceOf))) &&\n          (!type.predicate  || type.predicate(object))) {\n\n        if (explicit) {\n          if (type.multi && type.representName) {\n            state.tag = type.representName(object);\n          } else {\n            state.tag = type.tag;\n          }\n        } else {\n          state.tag = '?';\n        }\n\n        if (type.represent) {\n          style = state.styleMap[type.tag] || type.defaultStyle;\n\n          if (_toString.call(type.represent) === '[object Function]') {\n            _result = type.represent(object, style);\n          } else if (_hasOwnProperty.call(type.represent, style)) {\n            _result = type.represent[style](object, style);\n          } else {\n            throw new exception('!<' + type.tag + '> tag resolver accepts not \"' + style + '\" style');\n          }\n\n          state.dump = _result;\n        }\n\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  // Serializes `object` and writes it to global `result`.\n  // Returns true on success, or false on invalid object.\n  //\n  function writeNode(state, level, object, block, compact, iskey, isblockseq) {\n    state.tag = null;\n    state.dump = object;\n\n    if (!detectType(state, object, false)) {\n      detectType(state, object, true);\n    }\n\n    var type = _toString.call(state.dump);\n    var inblock = block;\n    var tagStr;\n\n    if (block) {\n      block = (state.flowLevel < 0 || state.flowLevel > level);\n    }\n\n    var objectOrArray = type === '[object Object]' || type === '[object Array]',\n        duplicateIndex,\n        duplicate;\n\n    if (objectOrArray) {\n      duplicateIndex = state.duplicates.indexOf(object);\n      duplicate = duplicateIndex !== -1;\n    }\n\n    if ((state.tag !== null && state.tag !== '?') || duplicate || (state.indent !== 2 && level > 0)) {\n      compact = false;\n    }\n\n    if (duplicate && state.usedDuplicates[duplicateIndex]) {\n      state.dump = '*ref_' + duplicateIndex;\n    } else {\n      if (objectOrArray && duplicate && !state.usedDuplicates[duplicateIndex]) {\n        state.usedDuplicates[duplicateIndex] = true;\n      }\n      if (type === '[object Object]') {\n        if (block && (Object.keys(state.dump).length !== 0)) {\n          writeBlockMapping(state, level, state.dump, compact);\n          if (duplicate) {\n            state.dump = '&ref_' + duplicateIndex + state.dump;\n          }\n        } else {\n          writeFlowMapping(state, level, state.dump);\n          if (duplicate) {\n            state.dump = '&ref_' + duplicateIndex + ' ' + state.dump;\n          }\n        }\n      } else if (type === '[object Array]') {\n        if (block && (state.dump.length !== 0)) {\n          if (state.noArrayIndent && !isblockseq && level > 0) {\n            writeBlockSequence(state, level - 1, state.dump, compact);\n          } else {\n            writeBlockSequence(state, level, state.dump, compact);\n          }\n          if (duplicate) {\n            state.dump = '&ref_' + duplicateIndex + state.dump;\n          }\n        } else {\n          writeFlowSequence(state, level, state.dump);\n          if (duplicate) {\n            state.dump = '&ref_' + duplicateIndex + ' ' + state.dump;\n          }\n        }\n      } else if (type === '[object String]') {\n        if (state.tag !== '?') {\n          writeScalar(state, state.dump, level, iskey, inblock);\n        }\n      } else if (type === '[object Undefined]') {\n        return false;\n      } else {\n        if (state.skipInvalid) return false;\n        throw new exception('unacceptable kind of an object to dump ' + type);\n      }\n\n      if (state.tag !== null && state.tag !== '?') {\n        // Need to encode all characters except those allowed by the spec:\n        //\n        // [35] ns-dec-digit    ::=  [#x30-#x39] /* 0-9 */\n        // [36] ns-hex-digit    ::=  ns-dec-digit\n        //                         | [#x41-#x46] /* A-F */ | [#x61-#x66] /* a-f */\n        // [37] ns-ascii-letter ::=  [#x41-#x5A] /* A-Z */ | [#x61-#x7A] /* a-z */\n        // [38] ns-word-char    ::=  ns-dec-digit | ns-ascii-letter | “-”\n        // [39] ns-uri-char     ::=  “%” ns-hex-digit ns-hex-digit | ns-word-char | “#”\n        //                         | “;” | “/” | “?” | “:” | “@” | “&” | “=” | “+” | “$” | “,”\n        //                         | “_” | “.” | “!” | “~” | “*” | “'” | “(” | “)” | “[” | “]”\n        //\n        // Also need to encode '!' because it has special meaning (end of tag prefix).\n        //\n        tagStr = encodeURI(\n          state.tag[0] === '!' ? state.tag.slice(1) : state.tag\n        ).replace(/!/g, '%21');\n\n        if (state.tag[0] === '!') {\n          tagStr = '!' + tagStr;\n        } else if (tagStr.slice(0, 18) === 'tag:yaml.org,2002:') {\n          tagStr = '!!' + tagStr.slice(18);\n        } else {\n          tagStr = '!<' + tagStr + '>';\n        }\n\n        state.dump = tagStr + ' ' + state.dump;\n      }\n    }\n\n    return true;\n  }\n\n  function getDuplicateReferences(object, state) {\n    var objects = [],\n        duplicatesIndexes = [],\n        index,\n        length;\n\n    inspectNode(object, objects, duplicatesIndexes);\n\n    for (index = 0, length = duplicatesIndexes.length; index < length; index += 1) {\n      state.duplicates.push(objects[duplicatesIndexes[index]]);\n    }\n    state.usedDuplicates = new Array(length);\n  }\n\n  function inspectNode(object, objects, duplicatesIndexes) {\n    var objectKeyList,\n        index,\n        length;\n\n    if (object !== null && typeof object === 'object') {\n      index = objects.indexOf(object);\n      if (index !== -1) {\n        if (duplicatesIndexes.indexOf(index) === -1) {\n          duplicatesIndexes.push(index);\n        }\n      } else {\n        objects.push(object);\n\n        if (Array.isArray(object)) {\n          for (index = 0, length = object.length; index < length; index += 1) {\n            inspectNode(object[index], objects, duplicatesIndexes);\n          }\n        } else {\n          objectKeyList = Object.keys(object);\n\n          for (index = 0, length = objectKeyList.length; index < length; index += 1) {\n            inspectNode(object[objectKeyList[index]], objects, duplicatesIndexes);\n          }\n        }\n      }\n    }\n  }\n\n  function dump$1(input, options) {\n    options = options || {};\n\n    var state = new State(options);\n\n    if (!state.noRefs) getDuplicateReferences(input, state);\n\n    var value = input;\n\n    if (state.replacer) {\n      value = state.replacer.call({ '': value }, '', value);\n    }\n\n    if (writeNode(state, 0, value, true, true)) return state.dump + '\\n';\n\n    return '';\n  }\n\n  var dump_1 = dump$1;\n\n  var dumper = {\n  \tdump: dump_1\n  };\n\n  function renamed(from, to) {\n    return function () {\n      throw new Error('Function yaml.' + from + ' is removed in js-yaml 4. ' +\n        'Use yaml.' + to + ' instead, which is now safe by default.');\n    };\n  }\n\n\n  var Type                = type;\n  var Schema              = schema;\n  var FAILSAFE_SCHEMA     = failsafe;\n  var JSON_SCHEMA         = json;\n  var CORE_SCHEMA         = core;\n  var DEFAULT_SCHEMA      = _default;\n  var load                = loader.load;\n  var loadAll             = loader.loadAll;\n  var dump                = dumper.dump;\n  var YAMLException       = exception;\n\n  // Re-export all types in case user wants to create custom schema\n  var types = {\n    binary:    binary,\n    float:     float,\n    map:       map,\n    null:      _null,\n    pairs:     pairs,\n    set:       set,\n    timestamp: timestamp,\n    bool:      bool,\n    int:       int,\n    merge:     merge,\n    omap:      omap,\n    seq:       seq,\n    str:       str\n  };\n\n  // Removed functions from JS-YAML 3.0.x\n  var safeLoad            = renamed('safeLoad', 'load');\n  var safeLoadAll         = renamed('safeLoadAll', 'loadAll');\n  var safeDump            = renamed('safeDump', 'dump');\n\n  var jsYaml = {\n  \tType: Type,\n  \tSchema: Schema,\n  \tFAILSAFE_SCHEMA: FAILSAFE_SCHEMA,\n  \tJSON_SCHEMA: JSON_SCHEMA,\n  \tCORE_SCHEMA: CORE_SCHEMA,\n  \tDEFAULT_SCHEMA: DEFAULT_SCHEMA,\n  \tload: load,\n  \tloadAll: loadAll,\n  \tdump: dump,\n  \tYAMLException: YAMLException,\n  \ttypes: types,\n  \tsafeLoad: safeLoad,\n  \tsafeLoadAll: safeLoadAll,\n  \tsafeDump: safeDump\n  };\n\n  exports.CORE_SCHEMA = CORE_SCHEMA;\n  exports.DEFAULT_SCHEMA = DEFAULT_SCHEMA;\n  exports.FAILSAFE_SCHEMA = FAILSAFE_SCHEMA;\n  exports.JSON_SCHEMA = JSON_SCHEMA;\n  exports.Schema = Schema;\n  exports.Type = Type;\n  exports.YAMLException = YAMLException;\n  exports.default = jsYaml;\n  exports.dump = dump;\n  exports.load = load;\n  exports.loadAll = loadAll;\n  exports.safeDump = safeDump;\n  exports.safeLoad = safeLoad;\n  exports.safeLoadAll = safeLoadAll;\n  exports.types = types;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}