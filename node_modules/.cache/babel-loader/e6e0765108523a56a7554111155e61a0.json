{"ast":null,"code":"#!/usr/bin/env node\n\nvar mdns = require('./')();\n\nvar path = require('path');\n\nvar os = require('os');\n\nvar announcing = process.argv.indexOf('--announce') > -1;\n\nif (process.argv.length < 3) {\n  console.error('Usage: %s <hostname>', path.basename(process.argv[1]));\n  process.exit(1);\n}\n\nvar hostname = process.argv[2];\n\nif (announcing) {\n  var ip = getIp();\n  mdns.on('query', function (query, rinfo) {\n    query.questions.forEach(function (q) {\n      if (q.name === hostname) {\n        console.log('Responding %s -> %s', q.name, ip);\n        mdns.respond({\n          answers: [{\n            type: 'A',\n            name: q.name,\n            data: ip\n          }]\n        }, {\n          port: rinfo.port\n        });\n      }\n    });\n  });\n} else {\n  mdns.on('response', function (response) {\n    response.answers.forEach(function (answer) {\n      if (answer.name === hostname) {\n        console.log(answer.data);\n        process.exit();\n      }\n    });\n  });\n  mdns.query(hostname, 'A'); // Give responses 3 seconds to respond\n\n  setTimeout(function () {\n    console.error('Hostname not found');\n    process.exit(1);\n  }, 3000);\n}\n\nfunction getIp() {\n  var networks = os.networkInterfaces();\n  var found = '127.0.0.1';\n  Object.keys(networks).forEach(function (k) {\n    var n = networks[k];\n    n.forEach(function (addr) {\n      if (addr.family === 'IPv4' && !addr.internal) {\n        found = addr.address;\n      }\n    });\n  });\n  return found;\n}","map":{"version":3,"names":["mdns","require","path","os","announcing","process","argv","indexOf","length","console","error","basename","exit","hostname","ip","getIp","on","query","rinfo","questions","forEach","q","name","log","respond","answers","type","data","port","response","answer","setTimeout","networks","networkInterfaces","found","Object","keys","k","n","addr","family","internal","address"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/multicast-dns/cli.js"],"sourcesContent":["#!/usr/bin/env node\n\nvar mdns = require('./')()\nvar path = require('path')\nvar os = require('os')\n\nvar announcing = process.argv.indexOf('--announce') > -1\n\nif (process.argv.length < 3) {\n  console.error('Usage: %s <hostname>', path.basename(process.argv[1]))\n  process.exit(1)\n}\nvar hostname = process.argv[2]\n\nif (announcing) {\n  var ip = getIp()\n  mdns.on('query', function (query, rinfo) {\n    query.questions.forEach(function (q) {\n      if (q.name === hostname) {\n        console.log('Responding %s -> %s', q.name, ip)\n        mdns.respond({\n          answers: [{\n            type: 'A',\n            name: q.name,\n            data: ip\n          }]\n        }, {port: rinfo.port})\n      }\n    })\n  })\n} else {\n  mdns.on('response', function (response) {\n    response.answers.forEach(function (answer) {\n      if (answer.name === hostname) {\n        console.log(answer.data)\n        process.exit()\n      }\n    })\n  })\n\n  mdns.query(hostname, 'A')\n\n  // Give responses 3 seconds to respond\n  setTimeout(function () {\n    console.error('Hostname not found')\n    process.exit(1)\n  }, 3000)\n}\n\nfunction getIp () {\n  var networks = os.networkInterfaces()\n  var found = '127.0.0.1'\n\n  Object.keys(networks).forEach(function (k) {\n    var n = networks[k]\n    n.forEach(function (addr) {\n      if (addr.family === 'IPv4' && !addr.internal) {\n        found = addr.address\n      }\n    })\n  })\n\n  return found\n}\n"],"mappings":"AAAA;;AAEA,IAAIA,IAAI,GAAGC,OAAO,CAAC,IAAD,CAAP,EAAX;;AACA,IAAIC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAAlB;;AACA,IAAIE,EAAE,GAAGF,OAAO,CAAC,IAAD,CAAhB;;AAEA,IAAIG,UAAU,GAAGC,OAAO,CAACC,IAAR,CAAaC,OAAb,CAAqB,YAArB,IAAqC,CAAC,CAAvD;;AAEA,IAAIF,OAAO,CAACC,IAAR,CAAaE,MAAb,GAAsB,CAA1B,EAA6B;EAC3BC,OAAO,CAACC,KAAR,CAAc,sBAAd,EAAsCR,IAAI,CAACS,QAAL,CAAcN,OAAO,CAACC,IAAR,CAAa,CAAb,CAAd,CAAtC;EACAD,OAAO,CAACO,IAAR,CAAa,CAAb;AACD;;AACD,IAAIC,QAAQ,GAAGR,OAAO,CAACC,IAAR,CAAa,CAAb,CAAf;;AAEA,IAAIF,UAAJ,EAAgB;EACd,IAAIU,EAAE,GAAGC,KAAK,EAAd;EACAf,IAAI,CAACgB,EAAL,CAAQ,OAAR,EAAiB,UAAUC,KAAV,EAAiBC,KAAjB,EAAwB;IACvCD,KAAK,CAACE,SAAN,CAAgBC,OAAhB,CAAwB,UAAUC,CAAV,EAAa;MACnC,IAAIA,CAAC,CAACC,IAAF,KAAWT,QAAf,EAAyB;QACvBJ,OAAO,CAACc,GAAR,CAAY,qBAAZ,EAAmCF,CAAC,CAACC,IAArC,EAA2CR,EAA3C;QACAd,IAAI,CAACwB,OAAL,CAAa;UACXC,OAAO,EAAE,CAAC;YACRC,IAAI,EAAE,GADE;YAERJ,IAAI,EAAED,CAAC,CAACC,IAFA;YAGRK,IAAI,EAAEb;UAHE,CAAD;QADE,CAAb,EAMG;UAACc,IAAI,EAAEV,KAAK,CAACU;QAAb,CANH;MAOD;IACF,CAXD;EAYD,CAbD;AAcD,CAhBD,MAgBO;EACL5B,IAAI,CAACgB,EAAL,CAAQ,UAAR,EAAoB,UAAUa,QAAV,EAAoB;IACtCA,QAAQ,CAACJ,OAAT,CAAiBL,OAAjB,CAAyB,UAAUU,MAAV,EAAkB;MACzC,IAAIA,MAAM,CAACR,IAAP,KAAgBT,QAApB,EAA8B;QAC5BJ,OAAO,CAACc,GAAR,CAAYO,MAAM,CAACH,IAAnB;QACAtB,OAAO,CAACO,IAAR;MACD;IACF,CALD;EAMD,CAPD;EASAZ,IAAI,CAACiB,KAAL,CAAWJ,QAAX,EAAqB,GAArB,EAVK,CAYL;;EACAkB,UAAU,CAAC,YAAY;IACrBtB,OAAO,CAACC,KAAR,CAAc,oBAAd;IACAL,OAAO,CAACO,IAAR,CAAa,CAAb;EACD,CAHS,EAGP,IAHO,CAAV;AAID;;AAED,SAASG,KAAT,GAAkB;EAChB,IAAIiB,QAAQ,GAAG7B,EAAE,CAAC8B,iBAAH,EAAf;EACA,IAAIC,KAAK,GAAG,WAAZ;EAEAC,MAAM,CAACC,IAAP,CAAYJ,QAAZ,EAAsBZ,OAAtB,CAA8B,UAAUiB,CAAV,EAAa;IACzC,IAAIC,CAAC,GAAGN,QAAQ,CAACK,CAAD,CAAhB;IACAC,CAAC,CAAClB,OAAF,CAAU,UAAUmB,IAAV,EAAgB;MACxB,IAAIA,IAAI,CAACC,MAAL,KAAgB,MAAhB,IAA0B,CAACD,IAAI,CAACE,QAApC,EAA8C;QAC5CP,KAAK,GAAGK,IAAI,CAACG,OAAb;MACD;IACF,CAJD;EAKD,CAPD;EASA,OAAOR,KAAP;AACD"},"metadata":{},"sourceType":"script"}