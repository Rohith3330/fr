{"ast":null,"code":"/**\n * @fileOverview Enforce all defaultProps are defined in propTypes\n * @author Vitor Balocco\n * @author Roy Sutton\n */\n'use strict';\n\nconst Components = require('../util/Components');\n\nconst docsUrl = require('../util/docsUrl');\n\nconst report = require('../util/report'); // ------------------------------------------------------------------------------\n// Rule Definition\n// ------------------------------------------------------------------------------\n\n\nconst messages = {\n  requiredHasDefault: 'defaultProp \"{{name}}\" defined for isRequired propType.',\n  defaultHasNoType: 'defaultProp \"{{name}}\" has no corresponding propTypes declaration.'\n};\nmodule.exports = {\n  meta: {\n    docs: {\n      description: 'Enforce all defaultProps have a corresponding non-required PropType',\n      category: 'Best Practices',\n      url: docsUrl('default-props-match-prop-types')\n    },\n    messages,\n    schema: [{\n      type: 'object',\n      properties: {\n        allowRequiredDefaults: {\n          default: false,\n          type: 'boolean'\n        }\n      },\n      additionalProperties: false\n    }]\n  },\n  create: Components.detect((context, components) => {\n    const configuration = context.options[0] || {};\n    const allowRequiredDefaults = configuration.allowRequiredDefaults || false;\n    /**\n     * Reports all defaultProps passed in that don't have an appropriate propTypes counterpart.\n     * @param  {Object[]} propTypes    Array of propTypes to check.\n     * @param  {Object}   defaultProps Object of defaultProps to check. Keys are the props names.\n     * @return {void}\n     */\n\n    function reportInvalidDefaultProps(propTypes, defaultProps) {\n      // If this defaultProps is \"unresolved\" or the propTypes is undefined, then we should ignore\n      // this component and not report any errors for it, to avoid false-positives with e.g.\n      // external defaultProps/propTypes declarations or spread operators.\n      if (defaultProps === 'unresolved' || !propTypes || Object.keys(propTypes).length === 0) {\n        return;\n      }\n\n      Object.keys(defaultProps).forEach(defaultPropName => {\n        const defaultProp = defaultProps[defaultPropName];\n        const prop = propTypes[defaultPropName];\n\n        if (prop && (allowRequiredDefaults || !prop.isRequired)) {\n          return;\n        }\n\n        if (prop) {\n          report(context, messages.requiredHasDefault, 'requiredHasDefault', {\n            node: defaultProp.node,\n            data: {\n              name: defaultPropName\n            }\n          });\n        } else {\n          report(context, messages.defaultHasNoType, 'defaultHasNoType', {\n            node: defaultProp.node,\n            data: {\n              name: defaultPropName\n            }\n          });\n        }\n      });\n    } // --------------------------------------------------------------------------\n    // Public API\n    // --------------------------------------------------------------------------\n\n\n    return {\n      'Program:exit'() {\n        const list = components.list(); // If no defaultProps could be found, we don't report anything.\n\n        Object.keys(list).filter(component => list[component].defaultProps).forEach(component => {\n          reportInvalidDefaultProps(list[component].declaredPropTypes, list[component].defaultProps || {});\n        });\n      }\n\n    };\n  })\n};","map":{"version":3,"names":["Components","require","docsUrl","report","messages","requiredHasDefault","defaultHasNoType","module","exports","meta","docs","description","category","url","schema","type","properties","allowRequiredDefaults","default","additionalProperties","create","detect","context","components","configuration","options","reportInvalidDefaultProps","propTypes","defaultProps","Object","keys","length","forEach","defaultPropName","defaultProp","prop","isRequired","node","data","name","list","filter","component","declaredPropTypes"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/eslint-plugin-react/lib/rules/default-props-match-prop-types.js"],"sourcesContent":["/**\n * @fileOverview Enforce all defaultProps are defined in propTypes\n * @author Vitor Balocco\n * @author Roy Sutton\n */\n\n'use strict';\n\nconst Components = require('../util/Components');\nconst docsUrl = require('../util/docsUrl');\nconst report = require('../util/report');\n\n// ------------------------------------------------------------------------------\n// Rule Definition\n// ------------------------------------------------------------------------------\n\nconst messages = {\n  requiredHasDefault: 'defaultProp \"{{name}}\" defined for isRequired propType.',\n  defaultHasNoType: 'defaultProp \"{{name}}\" has no corresponding propTypes declaration.',\n};\n\nmodule.exports = {\n  meta: {\n    docs: {\n      description: 'Enforce all defaultProps have a corresponding non-required PropType',\n      category: 'Best Practices',\n      url: docsUrl('default-props-match-prop-types'),\n    },\n\n    messages,\n\n    schema: [{\n      type: 'object',\n      properties: {\n        allowRequiredDefaults: {\n          default: false,\n          type: 'boolean',\n        },\n      },\n      additionalProperties: false,\n    }],\n  },\n\n  create: Components.detect((context, components) => {\n    const configuration = context.options[0] || {};\n    const allowRequiredDefaults = configuration.allowRequiredDefaults || false;\n\n    /**\n     * Reports all defaultProps passed in that don't have an appropriate propTypes counterpart.\n     * @param  {Object[]} propTypes    Array of propTypes to check.\n     * @param  {Object}   defaultProps Object of defaultProps to check. Keys are the props names.\n     * @return {void}\n     */\n    function reportInvalidDefaultProps(propTypes, defaultProps) {\n      // If this defaultProps is \"unresolved\" or the propTypes is undefined, then we should ignore\n      // this component and not report any errors for it, to avoid false-positives with e.g.\n      // external defaultProps/propTypes declarations or spread operators.\n      if (defaultProps === 'unresolved' || !propTypes || Object.keys(propTypes).length === 0) {\n        return;\n      }\n\n      Object.keys(defaultProps).forEach((defaultPropName) => {\n        const defaultProp = defaultProps[defaultPropName];\n        const prop = propTypes[defaultPropName];\n\n        if (prop && (allowRequiredDefaults || !prop.isRequired)) {\n          return;\n        }\n\n        if (prop) {\n          report(context, messages.requiredHasDefault, 'requiredHasDefault', {\n            node: defaultProp.node,\n            data: {\n              name: defaultPropName,\n            },\n          });\n        } else {\n          report(context, messages.defaultHasNoType, 'defaultHasNoType', {\n            node: defaultProp.node,\n            data: {\n              name: defaultPropName,\n            },\n          });\n        }\n      });\n    }\n\n    // --------------------------------------------------------------------------\n    // Public API\n    // --------------------------------------------------------------------------\n\n    return {\n      'Program:exit'() {\n        const list = components.list();\n\n        // If no defaultProps could be found, we don't report anything.\n        Object.keys(list).filter((component) => list[component].defaultProps).forEach((component) => {\n          reportInvalidDefaultProps(\n            list[component].declaredPropTypes,\n            list[component].defaultProps || {}\n          );\n        });\n      },\n    };\n  }),\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AAEA;;AAEA,MAAMA,UAAU,GAAGC,OAAO,CAAC,oBAAD,CAA1B;;AACA,MAAMC,OAAO,GAAGD,OAAO,CAAC,iBAAD,CAAvB;;AACA,MAAME,MAAM,GAAGF,OAAO,CAAC,gBAAD,CAAtB,C,CAEA;AACA;AACA;;;AAEA,MAAMG,QAAQ,GAAG;EACfC,kBAAkB,EAAE,yDADL;EAEfC,gBAAgB,EAAE;AAFH,CAAjB;AAKAC,MAAM,CAACC,OAAP,GAAiB;EACfC,IAAI,EAAE;IACJC,IAAI,EAAE;MACJC,WAAW,EAAE,qEADT;MAEJC,QAAQ,EAAE,gBAFN;MAGJC,GAAG,EAAEX,OAAO,CAAC,gCAAD;IAHR,CADF;IAOJE,QAPI;IASJU,MAAM,EAAE,CAAC;MACPC,IAAI,EAAE,QADC;MAEPC,UAAU,EAAE;QACVC,qBAAqB,EAAE;UACrBC,OAAO,EAAE,KADY;UAErBH,IAAI,EAAE;QAFe;MADb,CAFL;MAQPI,oBAAoB,EAAE;IARf,CAAD;EATJ,CADS;EAsBfC,MAAM,EAAEpB,UAAU,CAACqB,MAAX,CAAkB,CAACC,OAAD,EAAUC,UAAV,KAAyB;IACjD,MAAMC,aAAa,GAAGF,OAAO,CAACG,OAAR,CAAgB,CAAhB,KAAsB,EAA5C;IACA,MAAMR,qBAAqB,GAAGO,aAAa,CAACP,qBAAd,IAAuC,KAArE;IAEA;AACJ;AACA;AACA;AACA;AACA;;IACI,SAASS,yBAAT,CAAmCC,SAAnC,EAA8CC,YAA9C,EAA4D;MAC1D;MACA;MACA;MACA,IAAIA,YAAY,KAAK,YAAjB,IAAiC,CAACD,SAAlC,IAA+CE,MAAM,CAACC,IAAP,CAAYH,SAAZ,EAAuBI,MAAvB,KAAkC,CAArF,EAAwF;QACtF;MACD;;MAEDF,MAAM,CAACC,IAAP,CAAYF,YAAZ,EAA0BI,OAA1B,CAAmCC,eAAD,IAAqB;QACrD,MAAMC,WAAW,GAAGN,YAAY,CAACK,eAAD,CAAhC;QACA,MAAME,IAAI,GAAGR,SAAS,CAACM,eAAD,CAAtB;;QAEA,IAAIE,IAAI,KAAKlB,qBAAqB,IAAI,CAACkB,IAAI,CAACC,UAApC,CAAR,EAAyD;UACvD;QACD;;QAED,IAAID,IAAJ,EAAU;UACRhC,MAAM,CAACmB,OAAD,EAAUlB,QAAQ,CAACC,kBAAnB,EAAuC,oBAAvC,EAA6D;YACjEgC,IAAI,EAAEH,WAAW,CAACG,IAD+C;YAEjEC,IAAI,EAAE;cACJC,IAAI,EAAEN;YADF;UAF2D,CAA7D,CAAN;QAMD,CAPD,MAOO;UACL9B,MAAM,CAACmB,OAAD,EAAUlB,QAAQ,CAACE,gBAAnB,EAAqC,kBAArC,EAAyD;YAC7D+B,IAAI,EAAEH,WAAW,CAACG,IAD2C;YAE7DC,IAAI,EAAE;cACJC,IAAI,EAAEN;YADF;UAFuD,CAAzD,CAAN;QAMD;MACF,CAvBD;IAwBD,CA1CgD,CA4CjD;IACA;IACA;;;IAEA,OAAO;MACL,iBAAiB;QACf,MAAMO,IAAI,GAAGjB,UAAU,CAACiB,IAAX,EAAb,CADe,CAGf;;QACAX,MAAM,CAACC,IAAP,CAAYU,IAAZ,EAAkBC,MAAlB,CAA0BC,SAAD,IAAeF,IAAI,CAACE,SAAD,CAAJ,CAAgBd,YAAxD,EAAsEI,OAAtE,CAA+EU,SAAD,IAAe;UAC3FhB,yBAAyB,CACvBc,IAAI,CAACE,SAAD,CAAJ,CAAgBC,iBADO,EAEvBH,IAAI,CAACE,SAAD,CAAJ,CAAgBd,YAAhB,IAAgC,EAFT,CAAzB;QAID,CALD;MAMD;;IAXI,CAAP;EAaD,CA7DO;AAtBO,CAAjB"},"metadata":{},"sourceType":"script"}