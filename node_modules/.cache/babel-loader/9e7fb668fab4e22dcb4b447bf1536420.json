{"ast":null,"code":"/**\n * @fileoverview Utility functions for React and Flow version configuration\n * @author Yannick Croissant\n */\n'use strict';\n\nconst fs = require('fs');\n\nconst resolve = require('resolve');\n\nconst path = require('path');\n\nconst semver = require('semver');\n\nconst error = require('./error');\n\nlet warnedForMissingVersion = false;\n\nfunction resetWarningFlag() {\n  warnedForMissingVersion = false;\n}\n\nlet cachedDetectedReactVersion;\n\nfunction resetDetectedVersion() {\n  cachedDetectedReactVersion = undefined;\n}\n\nfunction resolveBasedir(contextOrFilename) {\n  if (contextOrFilename) {\n    const filename = typeof contextOrFilename === 'string' ? contextOrFilename : contextOrFilename.getFilename();\n    const dirname = path.dirname(filename);\n\n    try {\n      if (fs.statSync(filename).isFile()) {\n        // dirname must be dir here\n        return dirname;\n      }\n    } catch (err) {\n      // https://github.com/eslint/eslint/issues/11989\n      if (err.code === 'ENOTDIR') {\n        // virtual filename could be recursive\n        return resolveBasedir(dirname);\n      }\n    }\n  }\n\n  return process.cwd();\n} // TODO, semver-major: remove context fallback\n\n\nfunction detectReactVersion(context) {\n  if (cachedDetectedReactVersion) {\n    return cachedDetectedReactVersion;\n  }\n\n  const basedir = resolveBasedir(context);\n\n  try {\n    const reactPath = resolve.sync('react', {\n      basedir\n    });\n\n    const react = require(reactPath); // eslint-disable-line global-require, import/no-dynamic-require\n\n\n    cachedDetectedReactVersion = react.version;\n    return cachedDetectedReactVersion;\n  } catch (e) {\n    if (e.code === 'MODULE_NOT_FOUND') {\n      if (!warnedForMissingVersion) {\n        error('Warning: React version was set to \"detect\" in eslint-plugin-react settings, ' + 'but the \"react\" package is not installed. Assuming latest React version for linting.');\n        warnedForMissingVersion = true;\n      }\n\n      cachedDetectedReactVersion = '999.999.999';\n      return cachedDetectedReactVersion;\n    }\n\n    throw e;\n  }\n}\n\nconst defaultVersion = '999.999.999';\n\nfunction getReactVersionFromContext(context) {\n  let confVer = defaultVersion; // .eslintrc shared settings (https://eslint.org/docs/user-guide/configuring#adding-shared-settings)\n\n  if (context.settings && context.settings.react && context.settings.react.version) {\n    let settingsVersion = context.settings.react.version;\n\n    if (settingsVersion === 'detect') {\n      settingsVersion = detectReactVersion(context);\n    }\n\n    if (typeof settingsVersion !== 'string') {\n      error('Warning: React version specified in eslint-plugin-react-settings must be a string; ' + `got “${typeof settingsVersion}”`);\n    }\n\n    confVer = String(settingsVersion);\n  } else if (!warnedForMissingVersion) {\n    error('Warning: React version not specified in eslint-plugin-react settings. ' + 'See https://github.com/jsx-eslint/eslint-plugin-react#configuration .');\n    warnedForMissingVersion = true;\n  }\n\n  confVer = /^[0-9]+\\.[0-9]+$/.test(confVer) ? `${confVer}.0` : confVer;\n  const result = semver.coerce(confVer.split('.').map(part => Number(part)).join('.'));\n\n  if (!result) {\n    error(`Warning: React version specified in eslint-plugin-react-settings must be a valid semver version, or \"detect\"; got “${confVer}”`);\n  }\n\n  return result ? result.version : defaultVersion;\n} // TODO, semver-major: remove context fallback\n\n\nfunction detectFlowVersion(context) {\n  const basedir = resolveBasedir(context);\n\n  try {\n    const flowPackageJsonPath = resolve.sync('flow-bin/package.json', {\n      basedir\n    });\n\n    const flowPackageJson = require(flowPackageJsonPath); // eslint-disable-line global-require, import/no-dynamic-require\n\n\n    return flowPackageJson.version;\n  } catch (e) {\n    if (e.code === 'MODULE_NOT_FOUND') {\n      error('Warning: Flow version was set to \"detect\" in eslint-plugin-react settings, ' + 'but the \"flow-bin\" package is not installed. Assuming latest Flow version for linting.');\n      return '999.999.999';\n    }\n\n    throw e;\n  }\n}\n\nfunction getFlowVersionFromContext(context) {\n  let confVer = defaultVersion; // .eslintrc shared settings (https://eslint.org/docs/user-guide/configuring#adding-shared-settings)\n\n  if (context.settings.react && context.settings.react.flowVersion) {\n    let flowVersion = context.settings.react.flowVersion;\n\n    if (flowVersion === 'detect') {\n      flowVersion = detectFlowVersion(context);\n    }\n\n    if (typeof flowVersion !== 'string') {\n      error('Warning: Flow version specified in eslint-plugin-react-settings must be a string; ' + `got “${typeof flowVersion}”`);\n    }\n\n    confVer = String(flowVersion);\n  } else {\n    throw 'Could not retrieve flowVersion from settings'; // eslint-disable-line no-throw-literal\n  }\n\n  confVer = /^[0-9]+\\.[0-9]+$/.test(confVer) ? `${confVer}.0` : confVer;\n  const result = semver.coerce(confVer.split('.').map(part => Number(part)).join('.'));\n\n  if (!result) {\n    error(`Warning: Flow version specified in eslint-plugin-react-settings must be a valid semver version, or \"detect\"; got “${confVer}”`);\n  }\n\n  return result ? result.version : defaultVersion;\n}\n\nfunction test(semverRange, confVer) {\n  return semver.satisfies(confVer, semverRange);\n}\n\nfunction testReactVersion(context, semverRange) {\n  return test(semverRange, getReactVersionFromContext(context));\n}\n\nfunction testFlowVersion(context, semverRange) {\n  return test(semverRange, getFlowVersionFromContext(context));\n}\n\nmodule.exports = {\n  testReactVersion,\n  testFlowVersion,\n  resetWarningFlag,\n  resetDetectedVersion\n};","map":{"version":3,"names":["fs","require","resolve","path","semver","error","warnedForMissingVersion","resetWarningFlag","cachedDetectedReactVersion","resetDetectedVersion","undefined","resolveBasedir","contextOrFilename","filename","getFilename","dirname","statSync","isFile","err","code","process","cwd","detectReactVersion","context","basedir","reactPath","sync","react","version","e","defaultVersion","getReactVersionFromContext","confVer","settings","settingsVersion","String","test","result","coerce","split","map","part","Number","join","detectFlowVersion","flowPackageJsonPath","flowPackageJson","getFlowVersionFromContext","flowVersion","semverRange","satisfies","testReactVersion","testFlowVersion","module","exports"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/eslint-plugin-react/lib/util/version.js"],"sourcesContent":["/**\n * @fileoverview Utility functions for React and Flow version configuration\n * @author Yannick Croissant\n */\n\n'use strict';\n\nconst fs = require('fs');\nconst resolve = require('resolve');\nconst path = require('path');\nconst semver = require('semver');\nconst error = require('./error');\n\nlet warnedForMissingVersion = false;\n\nfunction resetWarningFlag() {\n  warnedForMissingVersion = false;\n}\n\nlet cachedDetectedReactVersion;\n\nfunction resetDetectedVersion() {\n  cachedDetectedReactVersion = undefined;\n}\n\nfunction resolveBasedir(contextOrFilename) {\n  if (contextOrFilename) {\n    const filename = typeof contextOrFilename === 'string' ? contextOrFilename : contextOrFilename.getFilename();\n    const dirname = path.dirname(filename);\n    try {\n      if (fs.statSync(filename).isFile()) {\n        // dirname must be dir here\n        return dirname;\n      }\n    } catch (err) {\n      // https://github.com/eslint/eslint/issues/11989\n      if (err.code === 'ENOTDIR') {\n        // virtual filename could be recursive\n        return resolveBasedir(dirname);\n      }\n    }\n  }\n  return process.cwd();\n}\n\n// TODO, semver-major: remove context fallback\nfunction detectReactVersion(context) {\n  if (cachedDetectedReactVersion) {\n    return cachedDetectedReactVersion;\n  }\n\n  const basedir = resolveBasedir(context);\n\n  try {\n    const reactPath = resolve.sync('react', { basedir });\n    const react = require(reactPath); // eslint-disable-line global-require, import/no-dynamic-require\n    cachedDetectedReactVersion = react.version;\n    return cachedDetectedReactVersion;\n  } catch (e) {\n    if (e.code === 'MODULE_NOT_FOUND') {\n      if (!warnedForMissingVersion) {\n        error('Warning: React version was set to \"detect\" in eslint-plugin-react settings, '\n        + 'but the \"react\" package is not installed. Assuming latest React version for linting.');\n        warnedForMissingVersion = true;\n      }\n      cachedDetectedReactVersion = '999.999.999';\n      return cachedDetectedReactVersion;\n    }\n    throw e;\n  }\n}\n\nconst defaultVersion = '999.999.999';\n\nfunction getReactVersionFromContext(context) {\n  let confVer = defaultVersion;\n  // .eslintrc shared settings (https://eslint.org/docs/user-guide/configuring#adding-shared-settings)\n  if (context.settings && context.settings.react && context.settings.react.version) {\n    let settingsVersion = context.settings.react.version;\n    if (settingsVersion === 'detect') {\n      settingsVersion = detectReactVersion(context);\n    }\n    if (typeof settingsVersion !== 'string') {\n      error('Warning: React version specified in eslint-plugin-react-settings must be a string; '\n        + `got “${typeof settingsVersion}”`);\n    }\n    confVer = String(settingsVersion);\n  } else if (!warnedForMissingVersion) {\n    error('Warning: React version not specified in eslint-plugin-react settings. '\n      + 'See https://github.com/jsx-eslint/eslint-plugin-react#configuration .');\n    warnedForMissingVersion = true;\n  }\n  confVer = /^[0-9]+\\.[0-9]+$/.test(confVer) ? `${confVer}.0` : confVer;\n  const result = semver.coerce(confVer.split('.').map((part) => Number(part)).join('.'));\n  if (!result) {\n    error(`Warning: React version specified in eslint-plugin-react-settings must be a valid semver version, or \"detect\"; got “${confVer}”`);\n  }\n  return result ? result.version : defaultVersion;\n}\n\n// TODO, semver-major: remove context fallback\nfunction detectFlowVersion(context) {\n  const basedir = resolveBasedir(context);\n\n  try {\n    const flowPackageJsonPath = resolve.sync('flow-bin/package.json', { basedir });\n    const flowPackageJson = require(flowPackageJsonPath); // eslint-disable-line global-require, import/no-dynamic-require\n    return flowPackageJson.version;\n  } catch (e) {\n    if (e.code === 'MODULE_NOT_FOUND') {\n      error('Warning: Flow version was set to \"detect\" in eslint-plugin-react settings, '\n        + 'but the \"flow-bin\" package is not installed. Assuming latest Flow version for linting.');\n      return '999.999.999';\n    }\n    throw e;\n  }\n}\n\nfunction getFlowVersionFromContext(context) {\n  let confVer = defaultVersion;\n  // .eslintrc shared settings (https://eslint.org/docs/user-guide/configuring#adding-shared-settings)\n  if (context.settings.react && context.settings.react.flowVersion) {\n    let flowVersion = context.settings.react.flowVersion;\n    if (flowVersion === 'detect') {\n      flowVersion = detectFlowVersion(context);\n    }\n    if (typeof flowVersion !== 'string') {\n      error('Warning: Flow version specified in eslint-plugin-react-settings must be a string; '\n        + `got “${typeof flowVersion}”`);\n    }\n    confVer = String(flowVersion);\n  } else {\n    throw 'Could not retrieve flowVersion from settings'; // eslint-disable-line no-throw-literal\n  }\n  confVer = /^[0-9]+\\.[0-9]+$/.test(confVer) ? `${confVer}.0` : confVer;\n  const result = semver.coerce(confVer.split('.').map((part) => Number(part)).join('.'));\n  if (!result) {\n    error(`Warning: Flow version specified in eslint-plugin-react-settings must be a valid semver version, or \"detect\"; got “${confVer}”`);\n  }\n  return result ? result.version : defaultVersion;\n}\n\nfunction test(semverRange, confVer) {\n  return semver.satisfies(confVer, semverRange);\n}\n\nfunction testReactVersion(context, semverRange) {\n  return test(semverRange, getReactVersionFromContext(context));\n}\n\nfunction testFlowVersion(context, semverRange) {\n  return test(semverRange, getFlowVersionFromContext(context));\n}\n\nmodule.exports = {\n  testReactVersion,\n  testFlowVersion,\n  resetWarningFlag,\n  resetDetectedVersion,\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}