{"ast":null,"code":"\"use strict\"; // builtin tooling\n\nconst path = require(\"path\"); // placeholder tooling\n\n\nlet sugarss;\n\nmodule.exports = function processContent(result, content, filename, options, postcss) {\n  const {\n    plugins\n  } = options;\n  const ext = path.extname(filename);\n  const parserList = []; // SugarSS support:\n\n  if (ext === \".sss\") {\n    if (!sugarss) {\n      try {\n        sugarss = require(\"sugarss\");\n      } catch {} // Ignore\n\n    }\n\n    if (sugarss) return runPostcss(postcss, content, filename, plugins, [sugarss]);\n  } // Syntax support:\n\n\n  if (result.opts.syntax && result.opts.syntax.parse) {\n    parserList.push(result.opts.syntax.parse);\n  } // Parser support:\n\n\n  if (result.opts.parser) parserList.push(result.opts.parser); // Try the default as a last resort:\n\n  parserList.push(null);\n  return runPostcss(postcss, content, filename, plugins, parserList);\n};\n\nfunction runPostcss(postcss, content, filename, plugins, parsers, index) {\n  if (!index) index = 0;\n  return postcss(plugins).process(content, {\n    from: filename,\n    parser: parsers[index]\n  }).catch(err => {\n    // If there's an error, try the next parser\n    index++; // If there are no parsers left, throw it\n\n    if (index === parsers.length) throw err;\n    return runPostcss(postcss, content, filename, plugins, parsers, index);\n  });\n}","map":{"version":3,"names":["path","require","sugarss","module","exports","processContent","result","content","filename","options","postcss","plugins","ext","extname","parserList","runPostcss","opts","syntax","parse","push","parser","parsers","index","process","from","catch","err","length"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/postcss-import/lib/process-content.js"],"sourcesContent":["\"use strict\"\n\n// builtin tooling\nconst path = require(\"path\")\n\n// placeholder tooling\nlet sugarss\n\nmodule.exports = function processContent(\n  result,\n  content,\n  filename,\n  options,\n  postcss\n) {\n  const { plugins } = options\n  const ext = path.extname(filename)\n\n  const parserList = []\n\n  // SugarSS support:\n  if (ext === \".sss\") {\n    if (!sugarss) {\n      try {\n        sugarss = require(\"sugarss\")\n      } catch {} // Ignore\n    }\n    if (sugarss)\n      return runPostcss(postcss, content, filename, plugins, [sugarss])\n  }\n\n  // Syntax support:\n  if (result.opts.syntax && result.opts.syntax.parse) {\n    parserList.push(result.opts.syntax.parse)\n  }\n\n  // Parser support:\n  if (result.opts.parser) parserList.push(result.opts.parser)\n  // Try the default as a last resort:\n  parserList.push(null)\n\n  return runPostcss(postcss, content, filename, plugins, parserList)\n}\n\nfunction runPostcss(postcss, content, filename, plugins, parsers, index) {\n  if (!index) index = 0\n  return postcss(plugins)\n    .process(content, {\n      from: filename,\n      parser: parsers[index],\n    })\n    .catch(err => {\n      // If there's an error, try the next parser\n      index++\n      // If there are no parsers left, throw it\n      if (index === parsers.length) throw err\n      return runPostcss(postcss, content, filename, plugins, parsers, index)\n    })\n}\n"],"mappings":"AAAA,a,CAEA;;AACA,MAAMA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB,C,CAEA;;;AACA,IAAIC,OAAJ;;AAEAC,MAAM,CAACC,OAAP,GAAiB,SAASC,cAAT,CACfC,MADe,EAEfC,OAFe,EAGfC,QAHe,EAIfC,OAJe,EAKfC,OALe,EAMf;EACA,MAAM;IAAEC;EAAF,IAAcF,OAApB;EACA,MAAMG,GAAG,GAAGZ,IAAI,CAACa,OAAL,CAAaL,QAAb,CAAZ;EAEA,MAAMM,UAAU,GAAG,EAAnB,CAJA,CAMA;;EACA,IAAIF,GAAG,KAAK,MAAZ,EAAoB;IAClB,IAAI,CAACV,OAAL,EAAc;MACZ,IAAI;QACFA,OAAO,GAAGD,OAAO,CAAC,SAAD,CAAjB;MACD,CAFD,CAEE,MAAM,CAAE,CAHE,CAGD;;IACZ;;IACD,IAAIC,OAAJ,EACE,OAAOa,UAAU,CAACL,OAAD,EAAUH,OAAV,EAAmBC,QAAnB,EAA6BG,OAA7B,EAAsC,CAACT,OAAD,CAAtC,CAAjB;EACH,CAfD,CAiBA;;;EACA,IAAII,MAAM,CAACU,IAAP,CAAYC,MAAZ,IAAsBX,MAAM,CAACU,IAAP,CAAYC,MAAZ,CAAmBC,KAA7C,EAAoD;IAClDJ,UAAU,CAACK,IAAX,CAAgBb,MAAM,CAACU,IAAP,CAAYC,MAAZ,CAAmBC,KAAnC;EACD,CApBD,CAsBA;;;EACA,IAAIZ,MAAM,CAACU,IAAP,CAAYI,MAAhB,EAAwBN,UAAU,CAACK,IAAX,CAAgBb,MAAM,CAACU,IAAP,CAAYI,MAA5B,EAvBxB,CAwBA;;EACAN,UAAU,CAACK,IAAX,CAAgB,IAAhB;EAEA,OAAOJ,UAAU,CAACL,OAAD,EAAUH,OAAV,EAAmBC,QAAnB,EAA6BG,OAA7B,EAAsCG,UAAtC,CAAjB;AACD,CAlCD;;AAoCA,SAASC,UAAT,CAAoBL,OAApB,EAA6BH,OAA7B,EAAsCC,QAAtC,EAAgDG,OAAhD,EAAyDU,OAAzD,EAAkEC,KAAlE,EAAyE;EACvE,IAAI,CAACA,KAAL,EAAYA,KAAK,GAAG,CAAR;EACZ,OAAOZ,OAAO,CAACC,OAAD,CAAP,CACJY,OADI,CACIhB,OADJ,EACa;IAChBiB,IAAI,EAAEhB,QADU;IAEhBY,MAAM,EAAEC,OAAO,CAACC,KAAD;EAFC,CADb,EAKJG,KALI,CAKEC,GAAG,IAAI;IACZ;IACAJ,KAAK,GAFO,CAGZ;;IACA,IAAIA,KAAK,KAAKD,OAAO,CAACM,MAAtB,EAA8B,MAAMD,GAAN;IAC9B,OAAOX,UAAU,CAACL,OAAD,EAAUH,OAAV,EAAmBC,QAAnB,EAA6BG,OAA7B,EAAsCU,OAAtC,EAA+CC,KAA/C,CAAjB;EACD,CAXI,CAAP;AAYD"},"metadata":{},"sourceType":"script"}