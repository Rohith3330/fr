{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Browser = void 0;\n\nconst dns_txt_1 = __importDefault(require(\"./dns-txt\"));\n\nconst dns_equal_1 = __importDefault(require(\"dns-equal\"));\n\nconst events_1 = require(\"events\");\n\nconst service_types_1 = require(\"./service-types\");\n\nconst filter_service_1 = __importDefault(require(\"./utils/filter-service\"));\n\nconst filter_txt_1 = __importDefault(require(\"./utils/filter-txt\"));\n\nconst TLD = '.local';\nconst WILDCARD = '_services._dns-sd._udp' + TLD;\n\nclass Browser extends events_1.EventEmitter {\n  constructor(mdns, opts, onup) {\n    super();\n    this.onresponse = null;\n    this.serviceMap = {};\n    this.wildcard = false;\n    this._services = [];\n    if (typeof opts === 'function') return new Browser(mdns, null, opts);\n    this.mdns = mdns;\n\n    if (opts != null && opts.txt != null) {\n      this.txt = new dns_txt_1.default(opts.txt);\n    } else {\n      this.txt = new dns_txt_1.default();\n    }\n\n    if (!opts || !opts.type) {\n      this.name = WILDCARD;\n      this.wildcard = true;\n    } else {\n      this.name = (0, service_types_1.toString)({\n        name: opts.type,\n        protocol: opts.protocol || 'tcp'\n      }) + TLD;\n      if (opts.name) this.name = opts.name + '.' + this.name;\n      this.wildcard = false;\n    }\n\n    if (opts != null && opts.txt !== undefined) this.txtQuery = (0, filter_txt_1.default)(opts.txt);\n    if (onup) this.on('up', onup);\n    this.start();\n  }\n\n  start() {\n    if (this.onresponse || this.name === undefined) return;\n    var self = this;\n    var nameMap = {};\n    if (!this.wildcard) nameMap[this.name] = true;\n\n    this.onresponse = (packet, rinfo) => {\n      if (self.wildcard) {\n        packet.answers.forEach(answer => {\n          if (answer.type !== 'PTR' || answer.name !== self.name || answer.name in nameMap) return;\n          nameMap[answer.data] = true;\n          self.mdns.query(answer.data, 'PTR');\n        });\n      }\n\n      Object.keys(nameMap).forEach(function (name) {\n        self.goodbyes(name, packet).forEach(self.removeService.bind(self));\n        var matches = self.buildServicesFor(name, packet, self.txt, rinfo);\n        if (matches.length === 0) return;\n        matches.forEach(service => {\n          if (self.serviceMap[service.fqdn]) return;\n          self.addService(service);\n        });\n      });\n    };\n\n    this.mdns.on('response', this.onresponse);\n    this.update();\n  }\n\n  stop() {\n    if (!this.onresponse) return;\n    this.mdns.removeListener('response', this.onresponse);\n    this.onresponse = null;\n  }\n\n  update() {\n    this.mdns.query(this.name, 'PTR');\n  }\n\n  get services() {\n    return this._services;\n  }\n\n  addService(service) {\n    if ((0, filter_service_1.default)(service, this.txtQuery) === false) return;\n\n    this._services.push(service);\n\n    this.serviceMap[service.fqdn] = true;\n    this.emit('up', service);\n  }\n\n  removeService(fqdn) {\n    var service, index;\n\n    this._services.some(function (s, i) {\n      if ((0, dns_equal_1.default)(s.fqdn, fqdn)) {\n        service = s;\n        index = i;\n        return true;\n      }\n    });\n\n    if (!service || index === undefined) return;\n\n    this._services.splice(index, 1);\n\n    delete this.serviceMap[fqdn];\n    this.emit('down', service);\n  }\n\n  goodbyes(name, packet) {\n    return packet.answers.concat(packet.additionals).filter(rr => rr.type === 'PTR' && rr.ttl === 0 && (0, dns_equal_1.default)(rr.name, name)).map(rr => rr.data);\n  }\n\n  buildServicesFor(name, packet, txt, referer) {\n    var records = packet.answers.concat(packet.additionals).filter(rr => rr.ttl > 0);\n    return records.filter(rr => rr.type === 'PTR' && (0, dns_equal_1.default)(rr.name, name)).map(ptr => {\n      const service = {\n        addresses: []\n      };\n      records.filter(rr => {\n        return (rr.type === 'SRV' || rr.type === 'TXT') && (0, dns_equal_1.default)(rr.name, ptr.data);\n      }).forEach(rr => {\n        if (rr.type === 'SRV') {\n          var parts = rr.name.split('.');\n          var name = parts[0];\n          var types = (0, service_types_1.toType)(parts.slice(1, -1).join('.'));\n          service.name = name;\n          service.fqdn = rr.name;\n          service.host = rr.data.target;\n          service.referer = referer;\n          service.port = rr.data.port;\n          service.type = types.name;\n          service.protocol = types.protocol;\n          service.subtypes = types.subtypes;\n        } else if (rr.type === 'TXT') {\n          service.rawTxt = rr.data;\n          service.txt = this.txt.decodeAll(rr.data);\n        }\n      });\n      if (!service.name) return;\n      records.filter(rr => (rr.type === 'A' || rr.type === 'AAAA') && (0, dns_equal_1.default)(rr.name, service.host)).forEach(rr => service.addresses.push(rr.data));\n      return service;\n    }).filter(rr => !!rr);\n  }\n\n}\n\nexports.Browser = Browser;\nexports.default = Browser;","map":{"version":3,"mappings":"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","names":["TLD","WILDCARD","Browser","events_1","constructor","mdns","opts","onup","txt","dns_txt_1","type","name","wildcard","protocol","undefined","txtQuery","on","start","onresponse","self","nameMap","packet","rinfo","answers","forEach","answer","data","query","Object","keys","goodbyes","removeService","bind","matches","buildServicesFor","length","service","serviceMap","fqdn","addService","update","stop","removeListener","services","_services","push","emit","index","some","s","i","splice","concat","additionals","filter","rr","ttl","map","referer","records","ptr","addresses","parts","split","types","slice","join","host","target","port","subtypes","rawTxt","decodeAll","exports"],"sources":["../../src/lib/browser.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}