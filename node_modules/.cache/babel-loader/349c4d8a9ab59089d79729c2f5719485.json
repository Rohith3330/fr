{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _jsxAstUtils = require(\"jsx-ast-utils\");\n/**\n * Returns boolean indicating that the aria-hidden prop\n * is present or the value is true. Will also return true if\n * there is an input with type='hidden'.\n *\n * <div aria-hidden /> is equivalent to the DOM as <div aria-hidden=true />.\n */\n\n\nvar isHiddenFromScreenReader = function isHiddenFromScreenReader(type, attributes) {\n  if (type.toUpperCase() === 'INPUT') {\n    var hidden = (0, _jsxAstUtils.getLiteralPropValue)((0, _jsxAstUtils.getProp)(attributes, 'type'));\n\n    if (hidden && hidden.toUpperCase() === 'HIDDEN') {\n      return true;\n    }\n  }\n\n  var ariaHidden = (0, _jsxAstUtils.getPropValue)((0, _jsxAstUtils.getProp)(attributes, 'aria-hidden'));\n  return ariaHidden === true;\n};\n\nvar _default = isHiddenFromScreenReader;\nexports[\"default\"] = _default;\nmodule.exports = exports.default;","map":{"version":3,"names":["Object","defineProperty","exports","value","_jsxAstUtils","require","isHiddenFromScreenReader","type","attributes","toUpperCase","hidden","getLiteralPropValue","getProp","ariaHidden","getPropValue","_default","module","default"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/eslint-plugin-jsx-a11y/lib/util/isHiddenFromScreenReader.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _jsxAstUtils = require(\"jsx-ast-utils\");\n\n/**\n * Returns boolean indicating that the aria-hidden prop\n * is present or the value is true. Will also return true if\n * there is an input with type='hidden'.\n *\n * <div aria-hidden /> is equivalent to the DOM as <div aria-hidden=true />.\n */\nvar isHiddenFromScreenReader = function isHiddenFromScreenReader(type, attributes) {\n  if (type.toUpperCase() === 'INPUT') {\n    var hidden = (0, _jsxAstUtils.getLiteralPropValue)((0, _jsxAstUtils.getProp)(attributes, 'type'));\n\n    if (hidden && hidden.toUpperCase() === 'HIDDEN') {\n      return true;\n    }\n  }\n\n  var ariaHidden = (0, _jsxAstUtils.getPropValue)((0, _jsxAstUtils.getProp)(attributes, 'aria-hidden'));\n  return ariaHidden === true;\n};\n\nvar _default = isHiddenFromScreenReader;\nexports[\"default\"] = _default;\nmodule.exports = exports.default;"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAC3CC,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAAC,SAAD,CAAP,GAAqB,KAAK,CAA1B;;AAEA,IAAIE,YAAY,GAAGC,OAAO,CAAC,eAAD,CAA1B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIC,wBAAwB,GAAG,SAASA,wBAAT,CAAkCC,IAAlC,EAAwCC,UAAxC,EAAoD;EACjF,IAAID,IAAI,CAACE,WAAL,OAAuB,OAA3B,EAAoC;IAClC,IAAIC,MAAM,GAAG,CAAC,GAAGN,YAAY,CAACO,mBAAjB,EAAsC,CAAC,GAAGP,YAAY,CAACQ,OAAjB,EAA0BJ,UAA1B,EAAsC,MAAtC,CAAtC,CAAb;;IAEA,IAAIE,MAAM,IAAIA,MAAM,CAACD,WAAP,OAAyB,QAAvC,EAAiD;MAC/C,OAAO,IAAP;IACD;EACF;;EAED,IAAII,UAAU,GAAG,CAAC,GAAGT,YAAY,CAACU,YAAjB,EAA+B,CAAC,GAAGV,YAAY,CAACQ,OAAjB,EAA0BJ,UAA1B,EAAsC,aAAtC,CAA/B,CAAjB;EACA,OAAOK,UAAU,KAAK,IAAtB;AACD,CAXD;;AAaA,IAAIE,QAAQ,GAAGT,wBAAf;AACAJ,OAAO,CAAC,SAAD,CAAP,GAAqBa,QAArB;AACAC,MAAM,CAACd,OAAP,GAAiBA,OAAO,CAACe,OAAzB"},"metadata":{},"sourceType":"script"}