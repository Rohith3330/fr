{"ast":null,"code":"var hasInherit = require('./has-inherit');\n\nvar hasUnset = require('./has-unset');\n\nvar everyValuesPair = require('./every-values-pair');\n\nvar findComponentIn = require('./find-component-in');\n\nvar isComponentOf = require('./is-component-of');\n\nvar isMergeableShorthand = require('./is-mergeable-shorthand');\n\nvar overridesNonComponentShorthand = require('./overrides-non-component-shorthand');\n\nvar sameVendorPrefixesIn = require('./../../vendor-prefixes').same;\n\nvar configuration = require('../../configuration');\n\nvar deepClone = require('../../clone').deep;\n\nvar restoreWithComponents = require('../restore-with-components');\n\nvar shallowClone = require('../../clone').shallow;\n\nvar restoreFromOptimizing = require('../../restore-from-optimizing');\n\nvar Token = require('../../../tokenizer/token');\n\nvar Marker = require('../../../tokenizer/marker');\n\nvar serializeProperty = require('../../../writer/one-time').property;\n\nfunction sameValue(_validator, value1, value2) {\n  return value1 === value2;\n}\n\nfunction wouldBreakCompatibility(property, validator) {\n  for (var i = 0; i < property.components.length; i++) {\n    var component = property.components[i];\n    var descriptor = configuration[component.name];\n    var canOverride = descriptor && descriptor.canOverride || sameValue;\n\n    var _component = shallowClone(component);\n\n    _component.value = [[Token.PROPERTY_VALUE, descriptor.defaultValue]];\n\n    if (!everyValuesPair(canOverride.bind(null, validator), _component, component)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction overrideIntoMultiplex(property, by) {\n  by.unused = true;\n  turnIntoMultiplex(by, multiplexSize(property));\n  property.value = by.value;\n}\n\nfunction overrideByMultiplex(property, by) {\n  by.unused = true;\n  property.multiplex = true;\n  property.value = by.value;\n}\n\nfunction overrideSimple(property, by) {\n  by.unused = true;\n  property.value = by.value;\n}\n\nfunction override(property, by) {\n  if (by.multiplex) {\n    overrideByMultiplex(property, by);\n  } else if (property.multiplex) {\n    overrideIntoMultiplex(property, by);\n  } else {\n    overrideSimple(property, by);\n  }\n}\n\nfunction overrideShorthand(property, by) {\n  by.unused = true;\n\n  for (var i = 0, l = property.components.length; i < l; i++) {\n    override(property.components[i], by.components[i]);\n  }\n}\n\nfunction turnIntoMultiplex(property, size) {\n  property.multiplex = true;\n\n  if (configuration[property.name].shorthand) {\n    turnShorthandValueIntoMultiplex(property, size);\n  } else {\n    turnLonghandValueIntoMultiplex(property, size);\n  }\n}\n\nfunction turnShorthandValueIntoMultiplex(property, size) {\n  var component;\n  var i, l;\n\n  for (i = 0, l = property.components.length; i < l; i++) {\n    component = property.components[i];\n\n    if (!component.multiplex) {\n      turnLonghandValueIntoMultiplex(component, size);\n    }\n  }\n}\n\nfunction turnLonghandValueIntoMultiplex(property, size) {\n  var descriptor = configuration[property.name];\n  var withRealValue = descriptor.intoMultiplexMode == 'real';\n  var withValue = descriptor.intoMultiplexMode == 'real' ? property.value.slice(0) : descriptor.intoMultiplexMode == 'placeholder' ? descriptor.placeholderValue : descriptor.defaultValue;\n  var i = multiplexSize(property);\n  var j;\n  var m = withValue.length;\n\n  for (; i < size; i++) {\n    property.value.push([Token.PROPERTY_VALUE, Marker.COMMA]);\n\n    if (Array.isArray(withValue)) {\n      for (j = 0; j < m; j++) {\n        property.value.push(withRealValue ? withValue[j] : [Token.PROPERTY_VALUE, withValue[j]]);\n      }\n    } else {\n      property.value.push(withRealValue ? withValue : [Token.PROPERTY_VALUE, withValue]);\n    }\n  }\n}\n\nfunction multiplexSize(component) {\n  var size = 0;\n\n  for (var i = 0, l = component.value.length; i < l; i++) {\n    if (component.value[i][1] == Marker.COMMA) {\n      size++;\n    }\n  }\n\n  return size + 1;\n}\n\nfunction lengthOf(property) {\n  var fakeAsArray = [Token.PROPERTY, [Token.PROPERTY_NAME, property.name]].concat(property.value);\n  return serializeProperty([fakeAsArray], 0).length;\n}\n\nfunction moreSameShorthands(properties, startAt, name) {\n  // Since we run the main loop in `compactOverrides` backwards, at this point some\n  // properties may not be marked as unused.\n  // We should consider reverting the order if possible\n  var count = 0;\n\n  for (var i = startAt; i >= 0; i--) {\n    if (properties[i].name == name && !properties[i].unused) {\n      count++;\n    }\n\n    if (count > 1) {\n      break;\n    }\n  }\n\n  return count > 1;\n}\n\nfunction overridingFunction(shorthand, validator) {\n  for (var i = 0, l = shorthand.components.length; i < l; i++) {\n    if (!anyValue(validator.isUrl, shorthand.components[i]) && anyValue(validator.isFunction, shorthand.components[i])) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction anyValue(fn, property) {\n  for (var i = 0, l = property.value.length; i < l; i++) {\n    if (property.value[i][1] == Marker.COMMA) {\n      continue;\n    }\n\n    if (fn(property.value[i][1])) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction wouldResultInLongerValue(left, right) {\n  if (!left.multiplex && !right.multiplex || left.multiplex && right.multiplex) {\n    return false;\n  }\n\n  var multiplex = left.multiplex ? left : right;\n  var simple = left.multiplex ? right : left;\n  var component;\n  var multiplexClone = deepClone(multiplex);\n  restoreFromOptimizing([multiplexClone], restoreWithComponents);\n  var simpleClone = deepClone(simple);\n  restoreFromOptimizing([simpleClone], restoreWithComponents);\n  var lengthBefore = lengthOf(multiplexClone) + 1 + lengthOf(simpleClone);\n\n  if (left.multiplex) {\n    component = findComponentIn(multiplexClone, simpleClone);\n    overrideIntoMultiplex(component, simpleClone);\n  } else {\n    component = findComponentIn(simpleClone, multiplexClone);\n    turnIntoMultiplex(simpleClone, multiplexSize(multiplexClone));\n    overrideByMultiplex(component, multiplexClone);\n  }\n\n  restoreFromOptimizing([simpleClone], restoreWithComponents);\n  var lengthAfter = lengthOf(simpleClone);\n  return lengthBefore <= lengthAfter;\n}\n\nfunction isCompactable(property) {\n  return property.name in configuration;\n}\n\nfunction noneOverrideHack(left, right) {\n  return !left.multiplex && (left.name == 'background' || left.name == 'background-image') && right.multiplex && (right.name == 'background' || right.name == 'background-image') && anyLayerIsNone(right.value);\n}\n\nfunction anyLayerIsNone(values) {\n  var layers = intoLayers(values);\n\n  for (var i = 0, l = layers.length; i < l; i++) {\n    if (layers[i].length == 1 && layers[i][0][1] == 'none') {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction intoLayers(values) {\n  var layers = [];\n\n  for (var i = 0, layer = [], l = values.length; i < l; i++) {\n    var value = values[i];\n\n    if (value[1] == Marker.COMMA) {\n      layers.push(layer);\n      layer = [];\n    } else {\n      layer.push(value);\n    }\n  }\n\n  layers.push(layer);\n  return layers;\n}\n\nfunction overrideProperties(properties, withMerging, compatibility, validator) {\n  var mayOverride, right, left, component;\n  var overriddenComponents;\n  var overriddenComponent;\n  var overridingComponent;\n  var overridable;\n  var i, j, k;\n\n  propertyLoop: for (i = properties.length - 1; i >= 0; i--) {\n    right = properties[i];\n\n    if (!isCompactable(right)) {\n      continue;\n    }\n\n    if (right.block) {\n      continue;\n    }\n\n    mayOverride = configuration[right.name].canOverride || sameValue;\n\n    traverseLoop: for (j = i - 1; j >= 0; j--) {\n      left = properties[j];\n\n      if (!isCompactable(left)) {\n        continue;\n      }\n\n      if (left.block) {\n        continue;\n      }\n\n      if (left.dynamic || right.dynamic) {\n        continue;\n      }\n\n      if (left.unused || right.unused) {\n        continue;\n      }\n\n      if (left.hack && !right.hack && !right.important || !left.hack && !left.important && right.hack) {\n        continue;\n      }\n\n      if (left.important == right.important && left.hack[0] != right.hack[0]) {\n        continue;\n      }\n\n      if (left.important == right.important && (left.hack[0] != right.hack[0] || left.hack[1] && left.hack[1] != right.hack[1])) {\n        continue;\n      }\n\n      if (hasInherit(right)) {\n        continue;\n      }\n\n      if (noneOverrideHack(left, right)) {\n        continue;\n      }\n\n      if (right.shorthand && isComponentOf(right, left)) {\n        // maybe `left` can be overridden by `right` which is a shorthand?\n        if (!right.important && left.important) {\n          continue;\n        }\n\n        if (!sameVendorPrefixesIn([left], right.components)) {\n          continue;\n        }\n\n        if (!anyValue(validator.isFunction, left) && overridingFunction(right, validator)) {\n          continue;\n        }\n\n        if (!isMergeableShorthand(right)) {\n          left.unused = true;\n          continue;\n        }\n\n        component = findComponentIn(right, left);\n        mayOverride = configuration[left.name].canOverride || sameValue;\n\n        if (everyValuesPair(mayOverride.bind(null, validator), left, component)) {\n          left.unused = true;\n        }\n      } else if (right.shorthand && overridesNonComponentShorthand(right, left)) {\n        // `right` is a shorthand while `left` can be overriden by it, think `border` and `border-top`\n        if (!right.important && left.important) {\n          continue;\n        }\n\n        if (!sameVendorPrefixesIn([left], right.components)) {\n          continue;\n        }\n\n        if (!anyValue(validator.isFunction, left) && overridingFunction(right, validator)) {\n          continue;\n        }\n\n        overriddenComponents = left.shorthand ? left.components : [left];\n\n        for (k = overriddenComponents.length - 1; k >= 0; k--) {\n          overriddenComponent = overriddenComponents[k];\n          overridingComponent = findComponentIn(right, overriddenComponent);\n          mayOverride = configuration[overriddenComponent.name].canOverride || sameValue;\n\n          if (!everyValuesPair(mayOverride.bind(null, validator), left, overridingComponent)) {\n            continue traverseLoop;\n          }\n        }\n\n        left.unused = true;\n      } else if (withMerging && left.shorthand && !right.shorthand && isComponentOf(left, right, true)) {\n        // maybe `right` can be pulled into `left` which is a shorthand?\n        if (right.important && !left.important) {\n          continue;\n        }\n\n        if (!right.important && left.important) {\n          right.unused = true;\n          continue;\n        } // Pending more clever algorithm in #527\n\n\n        if (moreSameShorthands(properties, i - 1, left.name)) {\n          continue;\n        }\n\n        if (overridingFunction(left, validator)) {\n          continue;\n        }\n\n        if (!isMergeableShorthand(left)) {\n          continue;\n        }\n\n        if (hasUnset(left) || hasUnset(right)) {\n          continue;\n        }\n\n        component = findComponentIn(left, right);\n\n        if (everyValuesPair(mayOverride.bind(null, validator), component, right)) {\n          var disabledBackgroundMerging = !compatibility.properties.backgroundClipMerging && component.name.indexOf('background-clip') > -1 || !compatibility.properties.backgroundOriginMerging && component.name.indexOf('background-origin') > -1 || !compatibility.properties.backgroundSizeMerging && component.name.indexOf('background-size') > -1;\n          var nonMergeableValue = configuration[right.name].nonMergeableValue === right.value[0][1];\n\n          if (disabledBackgroundMerging || nonMergeableValue) {\n            continue;\n          }\n\n          if (!compatibility.properties.merging && wouldBreakCompatibility(left, validator)) {\n            continue;\n          }\n\n          if (component.value[0][1] != right.value[0][1] && (hasInherit(left) || hasInherit(right))) {\n            continue;\n          }\n\n          if (wouldResultInLongerValue(left, right)) {\n            continue;\n          }\n\n          if (!left.multiplex && right.multiplex) {\n            turnIntoMultiplex(left, multiplexSize(right));\n          }\n\n          override(component, right);\n          left.dirty = true;\n        }\n      } else if (withMerging && left.shorthand && right.shorthand && left.name == right.name) {\n        // merge if all components can be merged\n        if (!left.multiplex && right.multiplex) {\n          continue;\n        }\n\n        if (!right.important && left.important) {\n          right.unused = true;\n          continue propertyLoop;\n        }\n\n        if (right.important && !left.important) {\n          left.unused = true;\n          continue;\n        }\n\n        if (!isMergeableShorthand(right)) {\n          left.unused = true;\n          continue;\n        }\n\n        for (k = left.components.length - 1; k >= 0; k--) {\n          var leftComponent = left.components[k];\n          var rightComponent = right.components[k];\n          mayOverride = configuration[leftComponent.name].canOverride || sameValue;\n\n          if (!everyValuesPair(mayOverride.bind(null, validator), leftComponent, rightComponent)) {\n            continue propertyLoop;\n          }\n        }\n\n        overrideShorthand(left, right);\n        left.dirty = true;\n      } else if (withMerging && left.shorthand && right.shorthand && isComponentOf(left, right)) {\n        // border is a shorthand but any of its components is a shorthand too\n        if (!left.important && right.important) {\n          continue;\n        }\n\n        component = findComponentIn(left, right);\n        mayOverride = configuration[right.name].canOverride || sameValue;\n\n        if (!everyValuesPair(mayOverride.bind(null, validator), component, right)) {\n          continue;\n        }\n\n        if (left.important && !right.important) {\n          right.unused = true;\n          continue;\n        }\n\n        var rightRestored = configuration[right.name].restore(right, configuration);\n\n        if (rightRestored.length > 1) {\n          continue;\n        }\n\n        component = findComponentIn(left, right);\n        override(component, right);\n        right.dirty = true;\n      } else if (left.name == right.name) {\n        // two non-shorthands should be merged based on understandability\n        overridable = true;\n\n        if (right.shorthand) {\n          for (k = right.components.length - 1; k >= 0 && overridable; k--) {\n            overriddenComponent = left.components[k];\n            overridingComponent = right.components[k];\n            mayOverride = configuration[overridingComponent.name].canOverride || sameValue;\n            overridable = everyValuesPair(mayOverride.bind(null, validator), overriddenComponent, overridingComponent);\n          }\n        } else {\n          mayOverride = configuration[right.name].canOverride || sameValue;\n          overridable = everyValuesPair(mayOverride.bind(null, validator), left, right);\n        }\n\n        if (left.important && !right.important && overridable) {\n          right.unused = true;\n          continue;\n        }\n\n        if (!left.important && right.important && overridable) {\n          left.unused = true;\n          continue;\n        }\n\n        if (!overridable) {\n          continue;\n        }\n\n        left.unused = true;\n      }\n    }\n  }\n}\n\nmodule.exports = overrideProperties;","map":{"version":3,"names":["hasInherit","require","hasUnset","everyValuesPair","findComponentIn","isComponentOf","isMergeableShorthand","overridesNonComponentShorthand","sameVendorPrefixesIn","same","configuration","deepClone","deep","restoreWithComponents","shallowClone","shallow","restoreFromOptimizing","Token","Marker","serializeProperty","property","sameValue","_validator","value1","value2","wouldBreakCompatibility","validator","i","components","length","component","descriptor","name","canOverride","_component","value","PROPERTY_VALUE","defaultValue","bind","overrideIntoMultiplex","by","unused","turnIntoMultiplex","multiplexSize","overrideByMultiplex","multiplex","overrideSimple","override","overrideShorthand","l","size","shorthand","turnShorthandValueIntoMultiplex","turnLonghandValueIntoMultiplex","withRealValue","intoMultiplexMode","withValue","slice","placeholderValue","j","m","push","COMMA","Array","isArray","lengthOf","fakeAsArray","PROPERTY","PROPERTY_NAME","concat","moreSameShorthands","properties","startAt","count","overridingFunction","anyValue","isUrl","isFunction","fn","wouldResultInLongerValue","left","right","simple","multiplexClone","simpleClone","lengthBefore","lengthAfter","isCompactable","noneOverrideHack","anyLayerIsNone","values","layers","intoLayers","layer","overrideProperties","withMerging","compatibility","mayOverride","overriddenComponents","overriddenComponent","overridingComponent","overridable","k","propertyLoop","block","traverseLoop","dynamic","hack","important","disabledBackgroundMerging","backgroundClipMerging","indexOf","backgroundOriginMerging","backgroundSizeMerging","nonMergeableValue","merging","dirty","leftComponent","rightComponent","rightRestored","restore","module","exports"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/clean-css/lib/optimizer/level-2/properties/override-properties.js"],"sourcesContent":["var hasInherit = require('./has-inherit');\nvar hasUnset = require('./has-unset');\nvar everyValuesPair = require('./every-values-pair');\nvar findComponentIn = require('./find-component-in');\nvar isComponentOf = require('./is-component-of');\nvar isMergeableShorthand = require('./is-mergeable-shorthand');\nvar overridesNonComponentShorthand = require('./overrides-non-component-shorthand');\nvar sameVendorPrefixesIn = require('./../../vendor-prefixes').same;\n\nvar configuration = require('../../configuration');\nvar deepClone = require('../../clone').deep;\nvar restoreWithComponents = require('../restore-with-components');\nvar shallowClone = require('../../clone').shallow;\n\nvar restoreFromOptimizing = require('../../restore-from-optimizing');\n\nvar Token = require('../../../tokenizer/token');\nvar Marker = require('../../../tokenizer/marker');\n\nvar serializeProperty = require('../../../writer/one-time').property;\n\nfunction sameValue(_validator, value1, value2) {\n  return value1 === value2;\n}\n\nfunction wouldBreakCompatibility(property, validator) {\n  for (var i = 0; i < property.components.length; i++) {\n    var component = property.components[i];\n    var descriptor = configuration[component.name];\n    var canOverride = descriptor && descriptor.canOverride || sameValue;\n\n    var _component = shallowClone(component);\n    _component.value = [[Token.PROPERTY_VALUE, descriptor.defaultValue]];\n\n    if (!everyValuesPair(canOverride.bind(null, validator), _component, component)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction overrideIntoMultiplex(property, by) {\n  by.unused = true;\n\n  turnIntoMultiplex(by, multiplexSize(property));\n  property.value = by.value;\n}\n\nfunction overrideByMultiplex(property, by) {\n  by.unused = true;\n  property.multiplex = true;\n  property.value = by.value;\n}\n\nfunction overrideSimple(property, by) {\n  by.unused = true;\n  property.value = by.value;\n}\n\nfunction override(property, by) {\n  if (by.multiplex) {\n    overrideByMultiplex(property, by);\n  } else if (property.multiplex) {\n    overrideIntoMultiplex(property, by);\n  } else {\n    overrideSimple(property, by);\n  }\n}\n\nfunction overrideShorthand(property, by) {\n  by.unused = true;\n\n  for (var i = 0, l = property.components.length; i < l; i++) {\n    override(property.components[i], by.components[i]);\n  }\n}\n\nfunction turnIntoMultiplex(property, size) {\n  property.multiplex = true;\n\n  if (configuration[property.name].shorthand) {\n    turnShorthandValueIntoMultiplex(property, size);\n  } else {\n    turnLonghandValueIntoMultiplex(property, size);\n  }\n}\n\nfunction turnShorthandValueIntoMultiplex(property, size) {\n  var component;\n  var i, l;\n\n  for (i = 0, l = property.components.length; i < l; i++) {\n    component = property.components[i];\n\n    if (!component.multiplex) {\n      turnLonghandValueIntoMultiplex(component, size);\n    }\n  }\n}\n\nfunction turnLonghandValueIntoMultiplex(property, size) {\n  var descriptor = configuration[property.name];\n  var withRealValue = descriptor.intoMultiplexMode == 'real';\n  var withValue = descriptor.intoMultiplexMode == 'real'\n    ? property.value.slice(0)\n    : (descriptor.intoMultiplexMode == 'placeholder' ? descriptor.placeholderValue : descriptor.defaultValue);\n  var i = multiplexSize(property);\n  var j;\n  var m = withValue.length;\n\n  for (; i < size; i++) {\n    property.value.push([Token.PROPERTY_VALUE, Marker.COMMA]);\n\n    if (Array.isArray(withValue)) {\n      for (j = 0; j < m; j++) {\n        property.value.push(withRealValue ? withValue[j] : [Token.PROPERTY_VALUE, withValue[j]]);\n      }\n    } else {\n      property.value.push(withRealValue ? withValue : [Token.PROPERTY_VALUE, withValue]);\n    }\n  }\n}\n\nfunction multiplexSize(component) {\n  var size = 0;\n\n  for (var i = 0, l = component.value.length; i < l; i++) {\n    if (component.value[i][1] == Marker.COMMA) { size++; }\n  }\n\n  return size + 1;\n}\n\nfunction lengthOf(property) {\n  var fakeAsArray = [\n    Token.PROPERTY,\n    [Token.PROPERTY_NAME, property.name]\n  ].concat(property.value);\n  return serializeProperty([fakeAsArray], 0).length;\n}\n\nfunction moreSameShorthands(properties, startAt, name) {\n  // Since we run the main loop in `compactOverrides` backwards, at this point some\n  // properties may not be marked as unused.\n  // We should consider reverting the order if possible\n  var count = 0;\n\n  for (var i = startAt; i >= 0; i--) {\n    if (properties[i].name == name && !properties[i].unused) { count++; }\n    if (count > 1) { break; }\n  }\n\n  return count > 1;\n}\n\nfunction overridingFunction(shorthand, validator) {\n  for (var i = 0, l = shorthand.components.length; i < l; i++) {\n    if (!anyValue(validator.isUrl, shorthand.components[i])\n      && anyValue(validator.isFunction, shorthand.components[i])) { return true; }\n  }\n\n  return false;\n}\n\nfunction anyValue(fn, property) {\n  for (var i = 0, l = property.value.length; i < l; i++) {\n    if (property.value[i][1] == Marker.COMMA) { continue; }\n\n    if (fn(property.value[i][1])) { return true; }\n  }\n\n  return false;\n}\n\nfunction wouldResultInLongerValue(left, right) {\n  if (!left.multiplex && !right.multiplex || left.multiplex && right.multiplex) { return false; }\n\n  var multiplex = left.multiplex ? left : right;\n  var simple = left.multiplex ? right : left;\n  var component;\n\n  var multiplexClone = deepClone(multiplex);\n  restoreFromOptimizing([multiplexClone], restoreWithComponents);\n\n  var simpleClone = deepClone(simple);\n  restoreFromOptimizing([simpleClone], restoreWithComponents);\n\n  var lengthBefore = lengthOf(multiplexClone) + 1 + lengthOf(simpleClone);\n\n  if (left.multiplex) {\n    component = findComponentIn(multiplexClone, simpleClone);\n    overrideIntoMultiplex(component, simpleClone);\n  } else {\n    component = findComponentIn(simpleClone, multiplexClone);\n    turnIntoMultiplex(simpleClone, multiplexSize(multiplexClone));\n    overrideByMultiplex(component, multiplexClone);\n  }\n\n  restoreFromOptimizing([simpleClone], restoreWithComponents);\n\n  var lengthAfter = lengthOf(simpleClone);\n\n  return lengthBefore <= lengthAfter;\n}\n\nfunction isCompactable(property) {\n  return property.name in configuration;\n}\n\nfunction noneOverrideHack(left, right) {\n  return !left.multiplex\n    && (left.name == 'background' || left.name == 'background-image')\n    && right.multiplex\n    && (right.name == 'background' || right.name == 'background-image')\n    && anyLayerIsNone(right.value);\n}\n\nfunction anyLayerIsNone(values) {\n  var layers = intoLayers(values);\n\n  for (var i = 0, l = layers.length; i < l; i++) {\n    if (layers[i].length == 1 && layers[i][0][1] == 'none') { return true; }\n  }\n\n  return false;\n}\n\nfunction intoLayers(values) {\n  var layers = [];\n\n  for (var i = 0, layer = [], l = values.length; i < l; i++) {\n    var value = values[i];\n    if (value[1] == Marker.COMMA) {\n      layers.push(layer);\n      layer = [];\n    } else {\n      layer.push(value);\n    }\n  }\n\n  layers.push(layer);\n  return layers;\n}\n\nfunction overrideProperties(properties, withMerging, compatibility, validator) {\n  var mayOverride, right, left, component;\n  var overriddenComponents;\n  var overriddenComponent;\n  var overridingComponent;\n  var overridable;\n  var i, j, k;\n\n  propertyLoop:\n  for (i = properties.length - 1; i >= 0; i--) {\n    right = properties[i];\n\n    if (!isCompactable(right)) { continue; }\n\n    if (right.block) { continue; }\n\n    mayOverride = configuration[right.name].canOverride || sameValue;\n\n    traverseLoop:\n    for (j = i - 1; j >= 0; j--) {\n      left = properties[j];\n\n      if (!isCompactable(left)) { continue; }\n\n      if (left.block) { continue; }\n\n      if (left.dynamic || right.dynamic) { continue; }\n\n      if (left.unused || right.unused) { continue; }\n\n      if (left.hack && !right.hack && !right.important || !left.hack && !left.important && right.hack) { continue; }\n\n      if (left.important == right.important && left.hack[0] != right.hack[0]) { continue; }\n\n      if (left.important == right.important\n        && (left.hack[0] != right.hack[0] || (left.hack[1] && left.hack[1] != right.hack[1]))) { continue; }\n\n      if (hasInherit(right)) { continue; }\n\n      if (noneOverrideHack(left, right)) { continue; }\n\n      if (right.shorthand && isComponentOf(right, left)) {\n        // maybe `left` can be overridden by `right` which is a shorthand?\n        if (!right.important && left.important) { continue; }\n\n        if (!sameVendorPrefixesIn([left], right.components)) { continue; }\n\n        if (!anyValue(validator.isFunction, left) && overridingFunction(right, validator)) { continue; }\n\n        if (!isMergeableShorthand(right)) {\n          left.unused = true;\n          continue;\n        }\n\n        component = findComponentIn(right, left);\n        mayOverride = configuration[left.name].canOverride || sameValue;\n        if (everyValuesPair(mayOverride.bind(null, validator), left, component)) {\n          left.unused = true;\n        }\n      } else if (right.shorthand && overridesNonComponentShorthand(right, left)) {\n        // `right` is a shorthand while `left` can be overriden by it, think `border` and `border-top`\n        if (!right.important && left.important) {\n          continue;\n        }\n\n        if (!sameVendorPrefixesIn([left], right.components)) {\n          continue;\n        }\n\n        if (!anyValue(validator.isFunction, left) && overridingFunction(right, validator)) {\n          continue;\n        }\n\n        overriddenComponents = left.shorthand\n          ? left.components\n          : [left];\n\n        for (k = overriddenComponents.length - 1; k >= 0; k--) {\n          overriddenComponent = overriddenComponents[k];\n          overridingComponent = findComponentIn(right, overriddenComponent);\n          mayOverride = configuration[overriddenComponent.name].canOverride || sameValue;\n\n          if (!everyValuesPair(mayOverride.bind(null, validator), left, overridingComponent)) {\n            continue traverseLoop;\n          }\n        }\n\n        left.unused = true;\n      } else if (withMerging && left.shorthand && !right.shorthand && isComponentOf(left, right, true)) {\n        // maybe `right` can be pulled into `left` which is a shorthand?\n        if (right.important && !left.important) { continue; }\n\n        if (!right.important && left.important) {\n          right.unused = true;\n          continue;\n        }\n\n        // Pending more clever algorithm in #527\n        if (moreSameShorthands(properties, i - 1, left.name)) { continue; }\n\n        if (overridingFunction(left, validator)) { continue; }\n\n        if (!isMergeableShorthand(left)) { continue; }\n\n        if (hasUnset(left) || hasUnset(right)) { continue; }\n\n        component = findComponentIn(left, right);\n        if (everyValuesPair(mayOverride.bind(null, validator), component, right)) {\n          var disabledBackgroundMerging = !compatibility.properties.backgroundClipMerging && component.name.indexOf('background-clip') > -1\n            || !compatibility.properties.backgroundOriginMerging && component.name.indexOf('background-origin') > -1\n            || !compatibility.properties.backgroundSizeMerging && component.name.indexOf('background-size') > -1;\n          var nonMergeableValue = configuration[right.name].nonMergeableValue === right.value[0][1];\n\n          if (disabledBackgroundMerging || nonMergeableValue) { continue; }\n\n          if (!compatibility.properties.merging && wouldBreakCompatibility(left, validator)) { continue; }\n\n          if (component.value[0][1] != right.value[0][1] && (hasInherit(left) || hasInherit(right))) { continue; }\n\n          if (wouldResultInLongerValue(left, right)) { continue; }\n\n          if (!left.multiplex && right.multiplex) { turnIntoMultiplex(left, multiplexSize(right)); }\n\n          override(component, right);\n          left.dirty = true;\n        }\n      } else if (withMerging && left.shorthand && right.shorthand && left.name == right.name) {\n        // merge if all components can be merged\n\n        if (!left.multiplex && right.multiplex) { continue; }\n\n        if (!right.important && left.important) {\n          right.unused = true;\n          continue propertyLoop;\n        }\n\n        if (right.important && !left.important) {\n          left.unused = true;\n          continue;\n        }\n\n        if (!isMergeableShorthand(right)) {\n          left.unused = true;\n          continue;\n        }\n\n        for (k = left.components.length - 1; k >= 0; k--) {\n          var leftComponent = left.components[k];\n          var rightComponent = right.components[k];\n\n          mayOverride = configuration[leftComponent.name].canOverride || sameValue;\n          if (!everyValuesPair(mayOverride.bind(null, validator), leftComponent, rightComponent)) {\n            continue propertyLoop;\n          }\n        }\n\n        overrideShorthand(left, right);\n        left.dirty = true;\n      } else if (withMerging && left.shorthand && right.shorthand && isComponentOf(left, right)) {\n        // border is a shorthand but any of its components is a shorthand too\n\n        if (!left.important && right.important) { continue; }\n\n        component = findComponentIn(left, right);\n        mayOverride = configuration[right.name].canOverride || sameValue;\n        if (!everyValuesPair(mayOverride.bind(null, validator), component, right)) { continue; }\n\n        if (left.important && !right.important) {\n          right.unused = true;\n          continue;\n        }\n\n        var rightRestored = configuration[right.name].restore(right, configuration);\n        if (rightRestored.length > 1) { continue; }\n\n        component = findComponentIn(left, right);\n        override(component, right);\n        right.dirty = true;\n      } else if (left.name == right.name) {\n        // two non-shorthands should be merged based on understandability\n        overridable = true;\n\n        if (right.shorthand) {\n          for (k = right.components.length - 1; k >= 0 && overridable; k--) {\n            overriddenComponent = left.components[k];\n            overridingComponent = right.components[k];\n            mayOverride = configuration[overridingComponent.name].canOverride || sameValue;\n\n            overridable = everyValuesPair(mayOverride.bind(null, validator), overriddenComponent, overridingComponent);\n          }\n        } else {\n          mayOverride = configuration[right.name].canOverride || sameValue;\n          overridable = everyValuesPair(mayOverride.bind(null, validator), left, right);\n        }\n\n        if (left.important && !right.important && overridable) {\n          right.unused = true;\n          continue;\n        }\n\n        if (!left.important && right.important && overridable) {\n          left.unused = true;\n          continue;\n        }\n\n        if (!overridable) {\n          continue;\n        }\n\n        left.unused = true;\n      }\n    }\n  }\n}\n\nmodule.exports = overrideProperties;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}