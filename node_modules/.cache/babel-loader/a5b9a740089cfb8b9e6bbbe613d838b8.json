{"ast":null,"code":"/**\n * @fileoverview Prevent void elements (e.g. <img />, <br />) from receiving\n *   children\n * @author Joe Lencioni\n */\n'use strict';\n\nconst has = require('object.hasown/polyfill')();\n\nconst docsUrl = require('../util/docsUrl');\n\nconst isCreateElement = require('../util/isCreateElement');\n\nconst report = require('../util/report'); // ------------------------------------------------------------------------------\n// Helpers\n// ------------------------------------------------------------------------------\n// Using an object here to avoid array scan. We should switch to Set once\n// support is good enough.\n\n\nconst VOID_DOM_ELEMENTS = {\n  area: true,\n  base: true,\n  br: true,\n  col: true,\n  embed: true,\n  hr: true,\n  img: true,\n  input: true,\n  keygen: true,\n  link: true,\n  menuitem: true,\n  meta: true,\n  param: true,\n  source: true,\n  track: true,\n  wbr: true\n};\n\nfunction isVoidDOMElement(elementName) {\n  return has(VOID_DOM_ELEMENTS, elementName);\n} // ------------------------------------------------------------------------------\n// Rule Definition\n// ------------------------------------------------------------------------------\n\n\nconst noChildrenInVoidEl = 'Void DOM element <{{element}} /> cannot receive children.';\nmodule.exports = {\n  meta: {\n    docs: {\n      description: 'Disallow void DOM elements (e.g. `<img />`, `<br />`) from receiving children',\n      category: 'Best Practices',\n      recommended: false,\n      url: docsUrl('void-dom-elements-no-children')\n    },\n    messages: {\n      noChildrenInVoidEl\n    },\n    schema: []\n  },\n  create: context => ({\n    JSXElement(node) {\n      const elementName = node.openingElement.name.name;\n\n      if (!isVoidDOMElement(elementName)) {\n        // e.g. <div />\n        return;\n      }\n\n      if (node.children.length > 0) {\n        // e.g. <br>Foo</br>\n        report(context, noChildrenInVoidEl, 'noChildrenInVoidEl', {\n          node,\n          data: {\n            element: elementName\n          }\n        });\n      }\n\n      const attributes = node.openingElement.attributes;\n      const hasChildrenAttributeOrDanger = attributes.some(attribute => {\n        if (!attribute.name) {\n          return false;\n        }\n\n        return attribute.name.name === 'children' || attribute.name.name === 'dangerouslySetInnerHTML';\n      });\n\n      if (hasChildrenAttributeOrDanger) {\n        // e.g. <br children=\"Foo\" />\n        report(context, noChildrenInVoidEl, 'noChildrenInVoidEl', {\n          node,\n          data: {\n            element: elementName\n          }\n        });\n      }\n    },\n\n    CallExpression(node) {\n      if (node.callee.type !== 'MemberExpression' && node.callee.type !== 'Identifier') {\n        return;\n      }\n\n      if (!isCreateElement(node, context)) {\n        return;\n      }\n\n      const args = node.arguments;\n\n      if (args.length < 1) {\n        // React.createElement() should not crash linter\n        return;\n      }\n\n      const elementName = args[0].value;\n\n      if (!isVoidDOMElement(elementName)) {\n        // e.g. React.createElement('div');\n        return;\n      }\n\n      if (args.length < 2 || args[1].type !== 'ObjectExpression') {\n        return;\n      }\n\n      const firstChild = args[2];\n\n      if (firstChild) {\n        // e.g. React.createElement('br', undefined, 'Foo')\n        report(context, noChildrenInVoidEl, 'noChildrenInVoidEl', {\n          node,\n          data: {\n            element: elementName\n          }\n        });\n      }\n\n      const props = args[1].properties;\n      const hasChildrenPropOrDanger = props.some(prop => {\n        if (!prop.key) {\n          return false;\n        }\n\n        return prop.key.name === 'children' || prop.key.name === 'dangerouslySetInnerHTML';\n      });\n\n      if (hasChildrenPropOrDanger) {\n        // e.g. React.createElement('br', { children: 'Foo' })\n        report(context, noChildrenInVoidEl, 'noChildrenInVoidEl', {\n          node,\n          data: {\n            element: elementName\n          }\n        });\n      }\n    }\n\n  })\n};","map":{"version":3,"names":["has","require","docsUrl","isCreateElement","report","VOID_DOM_ELEMENTS","area","base","br","col","embed","hr","img","input","keygen","link","menuitem","meta","param","source","track","wbr","isVoidDOMElement","elementName","noChildrenInVoidEl","module","exports","docs","description","category","recommended","url","messages","schema","create","context","JSXElement","node","openingElement","name","children","length","data","element","attributes","hasChildrenAttributeOrDanger","some","attribute","CallExpression","callee","type","args","arguments","value","firstChild","props","properties","hasChildrenPropOrDanger","prop","key"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/eslint-plugin-react/lib/rules/void-dom-elements-no-children.js"],"sourcesContent":["/**\n * @fileoverview Prevent void elements (e.g. <img />, <br />) from receiving\n *   children\n * @author Joe Lencioni\n */\n\n'use strict';\n\nconst has = require('object.hasown/polyfill')();\n\nconst docsUrl = require('../util/docsUrl');\nconst isCreateElement = require('../util/isCreateElement');\nconst report = require('../util/report');\n\n// ------------------------------------------------------------------------------\n// Helpers\n// ------------------------------------------------------------------------------\n\n// Using an object here to avoid array scan. We should switch to Set once\n// support is good enough.\nconst VOID_DOM_ELEMENTS = {\n  area: true,\n  base: true,\n  br: true,\n  col: true,\n  embed: true,\n  hr: true,\n  img: true,\n  input: true,\n  keygen: true,\n  link: true,\n  menuitem: true,\n  meta: true,\n  param: true,\n  source: true,\n  track: true,\n  wbr: true,\n};\n\nfunction isVoidDOMElement(elementName) {\n  return has(VOID_DOM_ELEMENTS, elementName);\n}\n\n// ------------------------------------------------------------------------------\n// Rule Definition\n// ------------------------------------------------------------------------------\n\nconst noChildrenInVoidEl = 'Void DOM element <{{element}} /> cannot receive children.';\n\nmodule.exports = {\n  meta: {\n    docs: {\n      description: 'Disallow void DOM elements (e.g. `<img />`, `<br />`) from receiving children',\n      category: 'Best Practices',\n      recommended: false,\n      url: docsUrl('void-dom-elements-no-children'),\n    },\n\n    messages: {\n      noChildrenInVoidEl,\n    },\n\n    schema: [],\n  },\n\n  create: (context) => ({\n    JSXElement(node) {\n      const elementName = node.openingElement.name.name;\n\n      if (!isVoidDOMElement(elementName)) {\n        // e.g. <div />\n        return;\n      }\n\n      if (node.children.length > 0) {\n        // e.g. <br>Foo</br>\n        report(context, noChildrenInVoidEl, 'noChildrenInVoidEl', {\n          node,\n          data: {\n            element: elementName,\n          },\n        });\n      }\n\n      const attributes = node.openingElement.attributes;\n\n      const hasChildrenAttributeOrDanger = attributes.some((attribute) => {\n        if (!attribute.name) {\n          return false;\n        }\n\n        return attribute.name.name === 'children' || attribute.name.name === 'dangerouslySetInnerHTML';\n      });\n\n      if (hasChildrenAttributeOrDanger) {\n        // e.g. <br children=\"Foo\" />\n        report(context, noChildrenInVoidEl, 'noChildrenInVoidEl', {\n          node,\n          data: {\n            element: elementName,\n          },\n        });\n      }\n    },\n\n    CallExpression(node) {\n      if (node.callee.type !== 'MemberExpression' && node.callee.type !== 'Identifier') {\n        return;\n      }\n\n      if (!isCreateElement(node, context)) {\n        return;\n      }\n\n      const args = node.arguments;\n\n      if (args.length < 1) {\n        // React.createElement() should not crash linter\n        return;\n      }\n\n      const elementName = args[0].value;\n\n      if (!isVoidDOMElement(elementName)) {\n        // e.g. React.createElement('div');\n        return;\n      }\n\n      if (args.length < 2 || args[1].type !== 'ObjectExpression') {\n        return;\n      }\n\n      const firstChild = args[2];\n      if (firstChild) {\n        // e.g. React.createElement('br', undefined, 'Foo')\n        report(context, noChildrenInVoidEl, 'noChildrenInVoidEl', {\n          node,\n          data: {\n            element: elementName,\n          },\n        });\n      }\n\n      const props = args[1].properties;\n\n      const hasChildrenPropOrDanger = props.some((prop) => {\n        if (!prop.key) {\n          return false;\n        }\n\n        return prop.key.name === 'children' || prop.key.name === 'dangerouslySetInnerHTML';\n      });\n\n      if (hasChildrenPropOrDanger) {\n        // e.g. React.createElement('br', { children: 'Foo' })\n        report(context, noChildrenInVoidEl, 'noChildrenInVoidEl', {\n          node,\n          data: {\n            element: elementName,\n          },\n        });\n      }\n    },\n  }),\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}