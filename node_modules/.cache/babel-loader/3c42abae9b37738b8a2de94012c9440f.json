{"ast":null,"code":"var path = require('path');\n\nvar fs = require('fs');\n\nvar test = require('tape');\n\nvar resolve = require('../');\n\nvar sync = require('../sync');\n\nvar requireResolveSupportsPaths = require.resolve.length > 1 && !/^v12\\.[012]\\./.test(process.version); // broken in v12.0-12.2, see https://github.com/nodejs/node/issues/27794\n\ntest('`./sync` entry point', function (t) {\n  t.equal(resolve.sync, sync, '`./sync` entry point is the same as `.sync` on `main`');\n  t.end();\n});\ntest('foo', function (t) {\n  var dir = path.join(__dirname, 'resolver');\n  t.equal(resolve.sync('./foo', {\n    basedir: dir\n  }), path.join(dir, 'foo.js'), './foo');\n\n  if (requireResolveSupportsPaths) {\n    t.equal(resolve.sync('./foo', {\n      basedir: dir\n    }), require.resolve('./foo', {\n      paths: [dir]\n    }), './foo: resolve.sync === require.resolve');\n  }\n\n  t.equal(resolve.sync('./foo.js', {\n    basedir: dir\n  }), path.join(dir, 'foo.js'), './foo.js');\n\n  if (requireResolveSupportsPaths) {\n    t.equal(resolve.sync('./foo.js', {\n      basedir: dir\n    }), require.resolve('./foo.js', {\n      paths: [dir]\n    }), './foo.js: resolve.sync === require.resolve');\n  }\n\n  t.equal(resolve.sync('./foo.js', {\n    basedir: dir,\n    filename: path.join(dir, 'bar.js')\n  }), path.join(dir, 'foo.js'));\n  t.throws(function () {\n    resolve.sync('foo', {\n      basedir: dir\n    });\n  }); // Test that filename is reported as the \"from\" value when passed.\n\n  t.throws(function () {\n    resolve.sync('foo', {\n      basedir: dir,\n      filename: path.join(dir, 'bar.js')\n    });\n  }, {\n    name: 'Error',\n    message: \"Cannot find module 'foo' from '\" + path.join(dir, 'bar.js') + \"'\"\n  });\n  t.end();\n});\ntest('bar', function (t) {\n  var dir = path.join(__dirname, 'resolver');\n  var basedir = path.join(dir, 'bar');\n  t.equal(resolve.sync('foo', {\n    basedir: basedir\n  }), path.join(dir, 'bar/node_modules/foo/index.js'), 'foo in bar');\n\n  if (requireResolveSupportsPaths) {\n    t.equal(resolve.sync('foo', {\n      basedir: basedir\n    }), require.resolve('foo', {\n      paths: [basedir]\n    }), 'foo in bar: resolve.sync === require.resolve');\n  }\n\n  t.end();\n});\ntest('baz', function (t) {\n  var dir = path.join(__dirname, 'resolver');\n  t.equal(resolve.sync('./baz', {\n    basedir: dir\n  }), path.join(dir, 'baz/quux.js'), './baz');\n\n  if (requireResolveSupportsPaths) {\n    t.equal(resolve.sync('./baz', {\n      basedir: dir\n    }), require.resolve('./baz', {\n      paths: [dir]\n    }), './baz: resolve.sync === require.resolve');\n  }\n\n  t.end();\n});\ntest('biz', function (t) {\n  var dir = path.join(__dirname, 'resolver/biz/node_modules');\n  t.equal(resolve.sync('./grux', {\n    basedir: dir\n  }), path.join(dir, 'grux/index.js'));\n\n  if (requireResolveSupportsPaths) {\n    t.equal(resolve.sync('./grux', {\n      basedir: dir\n    }), require.resolve('./grux', {\n      paths: [dir]\n    }), './grux: resolve.sync === require.resolve');\n  }\n\n  var tivDir = path.join(dir, 'grux');\n  t.equal(resolve.sync('tiv', {\n    basedir: tivDir\n  }), path.join(dir, 'tiv/index.js'));\n\n  if (requireResolveSupportsPaths) {\n    t.equal(resolve.sync('tiv', {\n      basedir: tivDir\n    }), require.resolve('tiv', {\n      paths: [tivDir]\n    }), 'tiv: resolve.sync === require.resolve');\n  }\n\n  var gruxDir = path.join(dir, 'tiv');\n  t.equal(resolve.sync('grux', {\n    basedir: gruxDir\n  }), path.join(dir, 'grux/index.js'));\n\n  if (requireResolveSupportsPaths) {\n    t.equal(resolve.sync('grux', {\n      basedir: gruxDir\n    }), require.resolve('grux', {\n      paths: [gruxDir]\n    }), 'grux: resolve.sync === require.resolve');\n  }\n\n  t.end();\n});\ntest('normalize', function (t) {\n  var dir = path.join(__dirname, 'resolver/biz/node_modules/grux');\n  t.equal(resolve.sync('../grux', {\n    basedir: dir\n  }), path.join(dir, 'index.js'));\n\n  if (requireResolveSupportsPaths) {\n    t.equal(resolve.sync('../grux', {\n      basedir: dir\n    }), require.resolve('../grux', {\n      paths: [dir]\n    }), '../grux: resolve.sync === require.resolve');\n  }\n\n  t.end();\n});\ntest('cup', function (t) {\n  var dir = path.join(__dirname, 'resolver');\n  t.equal(resolve.sync('./cup', {\n    basedir: dir,\n    extensions: ['.js', '.coffee']\n  }), path.join(dir, 'cup.coffee'), './cup -> ./cup.coffee');\n  t.equal(resolve.sync('./cup.coffee', {\n    basedir: dir\n  }), path.join(dir, 'cup.coffee'), './cup.coffee');\n  t.throws(function () {\n    resolve.sync('./cup', {\n      basedir: dir,\n      extensions: ['.js']\n    });\n  });\n\n  if (requireResolveSupportsPaths) {\n    t.equal(resolve.sync('./cup.coffee', {\n      basedir: dir,\n      extensions: ['.js', '.coffee']\n    }), require.resolve('./cup.coffee', {\n      paths: [dir]\n    }), './cup.coffee: resolve.sync === require.resolve');\n  }\n\n  t.end();\n});\ntest('mug', function (t) {\n  var dir = path.join(__dirname, 'resolver');\n  t.equal(resolve.sync('./mug', {\n    basedir: dir\n  }), path.join(dir, 'mug.js'), './mug -> ./mug.js');\n\n  if (requireResolveSupportsPaths) {\n    t.equal(resolve.sync('./mug', {\n      basedir: dir\n    }), require.resolve('./mug', {\n      paths: [dir]\n    }), './mug: resolve.sync === require.resolve');\n  }\n\n  t.equal(resolve.sync('./mug', {\n    basedir: dir,\n    extensions: ['.coffee', '.js']\n  }), path.join(dir, 'mug.coffee'), './mug -> ./mug.coffee');\n  t.equal(resolve.sync('./mug', {\n    basedir: dir,\n    extensions: ['.js', '.coffee']\n  }), path.join(dir, 'mug.js'), './mug -> ./mug.js');\n  t.end();\n});\ntest('other path', function (t) {\n  var resolverDir = path.join(__dirname, 'resolver');\n  var dir = path.join(resolverDir, 'bar');\n  var otherDir = path.join(resolverDir, 'other_path');\n  t.equal(resolve.sync('root', {\n    basedir: dir,\n    paths: [otherDir]\n  }), path.join(resolverDir, 'other_path/root.js'));\n  t.equal(resolve.sync('lib/other-lib', {\n    basedir: dir,\n    paths: [otherDir]\n  }), path.join(resolverDir, 'other_path/lib/other-lib.js'));\n  t.throws(function () {\n    resolve.sync('root', {\n      basedir: dir\n    });\n  });\n  t.throws(function () {\n    resolve.sync('zzz', {\n      basedir: dir,\n      paths: [otherDir]\n    });\n  });\n  t.end();\n});\ntest('path iterator', function (t) {\n  var resolverDir = path.join(__dirname, 'resolver');\n\n  var exactIterator = function (x, start, getPackageCandidates, opts) {\n    return [path.join(resolverDir, x)];\n  };\n\n  t.equal(resolve.sync('baz', {\n    packageIterator: exactIterator\n  }), path.join(resolverDir, 'baz/quux.js'));\n  t.end();\n});\ntest('incorrect main', function (t) {\n  var resolverDir = path.join(__dirname, 'resolver');\n  var dir = path.join(resolverDir, 'incorrect_main');\n  t.equal(resolve.sync('./incorrect_main', {\n    basedir: resolverDir\n  }), path.join(dir, 'index.js'));\n\n  if (requireResolveSupportsPaths) {\n    t.equal(resolve.sync('./incorrect_main', {\n      basedir: resolverDir\n    }), require.resolve('./incorrect_main', {\n      paths: [resolverDir]\n    }), './incorrect_main: resolve.sync === require.resolve');\n  }\n\n  t.end();\n});\ntest('missing index', function (t) {\n  t.plan(requireResolveSupportsPaths ? 2 : 1);\n  var resolverDir = path.join(__dirname, 'resolver');\n\n  try {\n    resolve.sync('./missing_index', {\n      basedir: resolverDir\n    });\n    t.fail('did not fail');\n  } catch (err) {\n    t.equal(err && err.code, 'MODULE_NOT_FOUND', 'error has correct error code');\n  }\n\n  if (requireResolveSupportsPaths) {\n    try {\n      require.resolve('./missing_index', {\n        basedir: resolverDir\n      });\n\n      t.fail('require.resolve did not fail');\n    } catch (err) {\n      t.equal(err && err.code, 'MODULE_NOT_FOUND', 'error has correct error code');\n    }\n  }\n});\ntest('missing main', function (t) {\n  var resolverDir = path.join(__dirname, 'resolver');\n\n  try {\n    resolve.sync('./missing_main', {\n      basedir: resolverDir\n    });\n    t.fail('require.resolve did not fail');\n  } catch (err) {\n    t.equal(err && err.code, 'MODULE_NOT_FOUND', 'error has correct error code');\n  }\n\n  if (requireResolveSupportsPaths) {\n    try {\n      resolve.sync('./missing_main', {\n        basedir: resolverDir\n      });\n      t.fail('require.resolve did not fail');\n    } catch (err) {\n      t.equal(err && err.code, 'MODULE_NOT_FOUND', 'error has correct error code');\n    }\n  }\n\n  t.end();\n});\ntest('null main', function (t) {\n  var resolverDir = path.join(__dirname, 'resolver');\n\n  try {\n    resolve.sync('./null_main', {\n      basedir: resolverDir\n    });\n    t.fail('require.resolve did not fail');\n  } catch (err) {\n    t.equal(err && err.code, 'MODULE_NOT_FOUND', 'error has correct error code');\n  }\n\n  if (requireResolveSupportsPaths) {\n    try {\n      resolve.sync('./null_main', {\n        basedir: resolverDir\n      });\n      t.fail('require.resolve did not fail');\n    } catch (err) {\n      t.equal(err && err.code, 'MODULE_NOT_FOUND', 'error has correct error code');\n    }\n  }\n\n  t.end();\n});\ntest('main: false', function (t) {\n  var basedir = path.join(__dirname, 'resolver');\n  var dir = path.join(basedir, 'false_main');\n  t.equal(resolve.sync('./false_main', {\n    basedir: basedir\n  }), path.join(dir, 'index.js'), '`\"main\": false`: resolves to `index.js`');\n\n  if (requireResolveSupportsPaths) {\n    t.equal(resolve.sync('./false_main', {\n      basedir: basedir\n    }), require.resolve('./false_main', {\n      paths: [basedir]\n    }), '`\"main\": false`: resolve.sync === require.resolve');\n  }\n\n  t.end();\n});\n\nvar stubStatSync = function stubStatSync(fn) {\n  var statSync = fs.statSync;\n\n  try {\n    fs.statSync = function () {\n      throw new EvalError('Unknown Error');\n    };\n\n    return fn();\n  } finally {\n    fs.statSync = statSync;\n  }\n};\n\ntest('#79 - re-throw non ENOENT errors from stat', function (t) {\n  var dir = path.join(__dirname, 'resolver');\n  stubStatSync(function () {\n    t.throws(function () {\n      resolve.sync('foo', {\n        basedir: dir\n      });\n    }, /Unknown Error/);\n  });\n  t.end();\n});\ntest('#52 - incorrectly resolves module-paths like \"./someFolder/\" when there is a file of the same name', function (t) {\n  var dir = path.join(__dirname, 'resolver');\n  var basedir = path.join(dir, 'same_names');\n  t.equal(resolve.sync('./foo', {\n    basedir: basedir\n  }), path.join(dir, 'same_names/foo.js'));\n\n  if (requireResolveSupportsPaths) {\n    t.equal(resolve.sync('./foo', {\n      basedir: basedir\n    }), require.resolve('./foo', {\n      paths: [basedir]\n    }), './foo: resolve.sync === require.resolve');\n  }\n\n  t.equal(resolve.sync('./foo/', {\n    basedir: basedir\n  }), path.join(dir, 'same_names/foo/index.js'));\n\n  if (requireResolveSupportsPaths) {\n    t.equal(resolve.sync('./foo/', {\n      basedir: basedir\n    }), require.resolve('./foo/', {\n      paths: [basedir]\n    }), './foo/: resolve.sync === require.resolve');\n  }\n\n  t.end();\n});\ntest('#211 - incorrectly resolves module-paths like \".\" when from inside a folder with a sibling file of the same name', function (t) {\n  var dir = path.join(__dirname, 'resolver');\n  var basedir = path.join(dir, 'same_names/foo');\n  t.equal(resolve.sync('./', {\n    basedir: basedir\n  }), path.join(dir, 'same_names/foo/index.js'), './');\n\n  if (requireResolveSupportsPaths) {\n    t.equal(resolve.sync('./', {\n      basedir: basedir\n    }), require.resolve('./', {\n      paths: [basedir]\n    }), './: resolve.sync === require.resolve');\n  }\n\n  t.equal(resolve.sync('.', {\n    basedir: basedir\n  }), path.join(dir, 'same_names/foo/index.js'), '.');\n\n  if (requireResolveSupportsPaths) {\n    t.equal(resolve.sync('.', {\n      basedir: basedir\n    }), require.resolve('.', {\n      paths: [basedir]\n    }), '.: resolve.sync === require.resolve', {\n      todo: true\n    });\n  }\n\n  t.end();\n});\ntest('sync: #121 - treating an existing file as a dir when no basedir', function (t) {\n  var testFile = path.basename(__filename);\n  t.test('sanity check', function (st) {\n    st.equal(resolve.sync('./' + testFile), __filename, 'sanity check');\n    st.equal(resolve.sync('./' + testFile), require.resolve('./' + testFile), 'sanity check: resolve.sync === require.resolve');\n    st.end();\n  });\n  t.test('with a fake directory', function (st) {\n    function run() {\n      return resolve.sync('./' + testFile + '/blah');\n    }\n\n    st.throws(run, 'throws an error');\n\n    try {\n      run();\n    } catch (e) {\n      st.equal(e.code, 'MODULE_NOT_FOUND', 'error code matches require.resolve');\n      st.equal(e.message, 'Cannot find module \\'./' + testFile + '/blah\\' from \\'' + __dirname + '\\'', 'can not find nonexistent module');\n    }\n\n    st.end();\n  });\n  t.end();\n});\ntest('sync dot main', function (t) {\n  var start = new Date();\n  t.equal(resolve.sync('./resolver/dot_main'), path.join(__dirname, 'resolver/dot_main/index.js'), './resolver/dot_main');\n  t.equal(resolve.sync('./resolver/dot_main'), require.resolve('./resolver/dot_main'), './resolver/dot_main: resolve.sync === require.resolve');\n  t.ok(new Date() - start < 50, 'resolve.sync timedout');\n  t.end();\n});\ntest('sync dot slash main', function (t) {\n  var start = new Date();\n  t.equal(resolve.sync('./resolver/dot_slash_main'), path.join(__dirname, 'resolver/dot_slash_main/index.js'));\n  t.equal(resolve.sync('./resolver/dot_slash_main'), require.resolve('./resolver/dot_slash_main'), './resolver/dot_slash_main: resolve.sync === require.resolve');\n  t.ok(new Date() - start < 50, 'resolve.sync timedout');\n  t.end();\n});\ntest('not a directory', function (t) {\n  var path = './foo';\n\n  try {\n    resolve.sync(path, {\n      basedir: __filename\n    });\n    t.fail();\n  } catch (err) {\n    t.ok(err, 'a non-directory errors');\n    t.equal(err && err.message, 'Cannot find module \\'' + path + \"' from '\" + __filename + \"'\");\n    t.equal(err && err.code, 'MODULE_NOT_FOUND');\n  }\n\n  t.end();\n});\ntest('non-string \"main\" field in package.json', function (t) {\n  var dir = path.join(__dirname, 'resolver');\n\n  try {\n    var result = resolve.sync('./invalid_main', {\n      basedir: dir\n    });\n    t.equal(result, undefined, 'result should not exist');\n    t.fail('should not get here');\n  } catch (err) {\n    t.ok(err, 'errors on non-string main');\n    t.equal(err.message, 'package “invalid_main” `main` must be a string');\n    t.equal(err.code, 'INVALID_PACKAGE_MAIN');\n  }\n\n  t.end();\n});\ntest('non-string \"main\" field in package.json', function (t) {\n  var dir = path.join(__dirname, 'resolver');\n\n  try {\n    var result = resolve.sync('./invalid_main', {\n      basedir: dir\n    });\n    t.equal(result, undefined, 'result should not exist');\n    t.fail('should not get here');\n  } catch (err) {\n    t.ok(err, 'errors on non-string main');\n    t.equal(err.message, 'package “invalid_main” `main` must be a string');\n    t.equal(err.code, 'INVALID_PACKAGE_MAIN');\n  }\n\n  t.end();\n});\ntest('browser field in package.json', function (t) {\n  var dir = path.join(__dirname, 'resolver');\n  var res = resolve.sync('./browser_field', {\n    basedir: dir,\n    packageFilter: function packageFilter(pkg) {\n      if (pkg.browser) {\n        pkg.main = pkg.browser; // eslint-disable-line no-param-reassign\n\n        delete pkg.browser; // eslint-disable-line no-param-reassign\n      }\n\n      return pkg;\n    }\n  });\n  t.equal(res, path.join(dir, 'browser_field', 'b.js'));\n  t.end();\n});\ntest('absolute paths', function (t) {\n  var extensionless = __filename.slice(0, -path.extname(__filename).length);\n\n  t.equal(resolve.sync(__filename), __filename, 'absolute path to this file resolves');\n  t.equal(resolve.sync(__filename), require.resolve(__filename), 'absolute path to this file: resolve.sync === require.resolve');\n  t.equal(resolve.sync(extensionless), __filename, 'extensionless absolute path to this file resolves');\n  t.equal(resolve.sync(__filename), require.resolve(__filename), 'absolute path to this file: resolve.sync === require.resolve');\n  t.equal(resolve.sync(__filename, {\n    basedir: process.cwd()\n  }), __filename, 'absolute path to this file with a basedir resolves');\n\n  if (requireResolveSupportsPaths) {\n    t.equal(resolve.sync(__filename, {\n      basedir: process.cwd()\n    }), require.resolve(__filename, {\n      paths: [process.cwd()]\n    }), 'absolute path to this file + basedir: resolve.sync === require.resolve');\n  }\n\n  t.equal(resolve.sync(extensionless, {\n    basedir: process.cwd()\n  }), __filename, 'extensionless absolute path to this file with a basedir resolves');\n\n  if (requireResolveSupportsPaths) {\n    t.equal(resolve.sync(extensionless, {\n      basedir: process.cwd()\n    }), require.resolve(extensionless, {\n      paths: [process.cwd()]\n    }), 'extensionless absolute path to this file + basedir: resolve.sync === require.resolve');\n  }\n\n  t.end();\n});\ntest('malformed package.json', function (t) {\n  t.plan(5 + (requireResolveSupportsPaths ? 1 : 0));\n  var basedir = path.join(__dirname, 'resolver/malformed_package_json');\n  var expected = path.join(basedir, 'index.js');\n  t.equal(resolve.sync('./index.js', {\n    basedir: basedir\n  }), expected, 'malformed package.json is silently ignored');\n\n  if (requireResolveSupportsPaths) {\n    t.equal(resolve.sync('./index.js', {\n      basedir: basedir\n    }), require.resolve('./index.js', {\n      paths: [basedir]\n    }), 'malformed package.json: resolve.sync === require.resolve');\n  }\n\n  var res1 = resolve.sync('./index.js', {\n    basedir: basedir,\n    packageFilter: function (pkg, pkgfile, dir) {\n      t.fail('should not reach here');\n    }\n  });\n  t.equal(res1, expected, 'with packageFilter: malformed package.json is silently ignored');\n  var res2 = resolve.sync('./index.js', {\n    basedir: basedir,\n    readPackageSync: function (readFileSync, pkgfile) {\n      t.equal(pkgfile, path.join(basedir, 'package.json'), 'readPackageSync: `pkgfile` is package.json path');\n      var result = String(readFileSync(pkgfile));\n\n      try {\n        return JSON.parse(result);\n      } catch (e) {\n        t.ok(e instanceof SyntaxError, 'readPackageSync: malformed package.json parses as a syntax error');\n      }\n    }\n  });\n  t.equal(res2, expected, 'with readPackageSync: malformed package.json is silently ignored');\n});","map":{"version":3,"names":["path","require","fs","test","resolve","sync","requireResolveSupportsPaths","length","process","version","t","equal","end","dir","join","__dirname","basedir","paths","filename","throws","name","message","tivDir","gruxDir","extensions","resolverDir","otherDir","exactIterator","x","start","getPackageCandidates","opts","packageIterator","plan","fail","err","code","stubStatSync","fn","statSync","EvalError","todo","testFile","basename","__filename","st","run","e","Date","ok","result","undefined","res","packageFilter","pkg","browser","main","extensionless","slice","extname","cwd","expected","res1","pkgfile","res2","readPackageSync","readFileSync","String","JSON","parse","SyntaxError"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/resolve/test/resolver_sync.js"],"sourcesContent":["var path = require('path');\nvar fs = require('fs');\nvar test = require('tape');\n\nvar resolve = require('../');\nvar sync = require('../sync');\n\nvar requireResolveSupportsPaths = require.resolve.length > 1\n    && !(/^v12\\.[012]\\./).test(process.version); // broken in v12.0-12.2, see https://github.com/nodejs/node/issues/27794\n\ntest('`./sync` entry point', function (t) {\n    t.equal(resolve.sync, sync, '`./sync` entry point is the same as `.sync` on `main`');\n    t.end();\n});\n\ntest('foo', function (t) {\n    var dir = path.join(__dirname, 'resolver');\n\n    t.equal(\n        resolve.sync('./foo', { basedir: dir }),\n        path.join(dir, 'foo.js'),\n        './foo'\n    );\n    if (requireResolveSupportsPaths) {\n        t.equal(\n            resolve.sync('./foo', { basedir: dir }),\n            require.resolve('./foo', { paths: [dir] }),\n            './foo: resolve.sync === require.resolve'\n        );\n    }\n\n    t.equal(\n        resolve.sync('./foo.js', { basedir: dir }),\n        path.join(dir, 'foo.js'),\n        './foo.js'\n    );\n    if (requireResolveSupportsPaths) {\n        t.equal(\n            resolve.sync('./foo.js', { basedir: dir }),\n            require.resolve('./foo.js', { paths: [dir] }),\n            './foo.js: resolve.sync === require.resolve'\n        );\n    }\n\n    t.equal(\n        resolve.sync('./foo.js', { basedir: dir, filename: path.join(dir, 'bar.js') }),\n        path.join(dir, 'foo.js')\n    );\n\n    t.throws(function () {\n        resolve.sync('foo', { basedir: dir });\n    });\n\n    // Test that filename is reported as the \"from\" value when passed.\n    t.throws(\n        function () {\n            resolve.sync('foo', { basedir: dir, filename: path.join(dir, 'bar.js') });\n        },\n        {\n            name: 'Error',\n            message: \"Cannot find module 'foo' from '\" + path.join(dir, 'bar.js') + \"'\"\n        }\n    );\n\n    t.end();\n});\n\ntest('bar', function (t) {\n    var dir = path.join(__dirname, 'resolver');\n\n    var basedir = path.join(dir, 'bar');\n\n    t.equal(\n        resolve.sync('foo', { basedir: basedir }),\n        path.join(dir, 'bar/node_modules/foo/index.js'),\n        'foo in bar'\n    );\n    if (requireResolveSupportsPaths) {\n        t.equal(\n            resolve.sync('foo', { basedir: basedir }),\n            require.resolve('foo', { paths: [basedir] }),\n            'foo in bar: resolve.sync === require.resolve'\n        );\n    }\n\n    t.end();\n});\n\ntest('baz', function (t) {\n    var dir = path.join(__dirname, 'resolver');\n\n    t.equal(\n        resolve.sync('./baz', { basedir: dir }),\n        path.join(dir, 'baz/quux.js'),\n        './baz'\n    );\n    if (requireResolveSupportsPaths) {\n        t.equal(\n            resolve.sync('./baz', { basedir: dir }),\n            require.resolve('./baz', { paths: [dir] }),\n            './baz: resolve.sync === require.resolve'\n        );\n    }\n\n    t.end();\n});\n\ntest('biz', function (t) {\n    var dir = path.join(__dirname, 'resolver/biz/node_modules');\n\n    t.equal(\n        resolve.sync('./grux', { basedir: dir }),\n        path.join(dir, 'grux/index.js')\n    );\n    if (requireResolveSupportsPaths) {\n        t.equal(\n            resolve.sync('./grux', { basedir: dir }),\n            require.resolve('./grux', { paths: [dir] }),\n            './grux: resolve.sync === require.resolve'\n        );\n    }\n\n    var tivDir = path.join(dir, 'grux');\n    t.equal(\n        resolve.sync('tiv', { basedir: tivDir }),\n        path.join(dir, 'tiv/index.js')\n    );\n    if (requireResolveSupportsPaths) {\n        t.equal(\n            resolve.sync('tiv', { basedir: tivDir }),\n            require.resolve('tiv', { paths: [tivDir] }),\n            'tiv: resolve.sync === require.resolve'\n        );\n    }\n\n    var gruxDir = path.join(dir, 'tiv');\n    t.equal(\n        resolve.sync('grux', { basedir: gruxDir }),\n        path.join(dir, 'grux/index.js')\n    );\n    if (requireResolveSupportsPaths) {\n        t.equal(\n            resolve.sync('grux', { basedir: gruxDir }),\n            require.resolve('grux', { paths: [gruxDir] }),\n            'grux: resolve.sync === require.resolve'\n        );\n    }\n\n    t.end();\n});\n\ntest('normalize', function (t) {\n    var dir = path.join(__dirname, 'resolver/biz/node_modules/grux');\n\n    t.equal(\n        resolve.sync('../grux', { basedir: dir }),\n        path.join(dir, 'index.js')\n    );\n    if (requireResolveSupportsPaths) {\n        t.equal(\n            resolve.sync('../grux', { basedir: dir }),\n            require.resolve('../grux', { paths: [dir] }),\n            '../grux: resolve.sync === require.resolve'\n        );\n    }\n\n    t.end();\n});\n\ntest('cup', function (t) {\n    var dir = path.join(__dirname, 'resolver');\n\n    t.equal(\n        resolve.sync('./cup', {\n            basedir: dir,\n            extensions: ['.js', '.coffee']\n        }),\n        path.join(dir, 'cup.coffee'),\n        './cup -> ./cup.coffee'\n    );\n\n    t.equal(\n        resolve.sync('./cup.coffee', { basedir: dir }),\n        path.join(dir, 'cup.coffee'),\n        './cup.coffee'\n    );\n\n    t.throws(function () {\n        resolve.sync('./cup', {\n            basedir: dir,\n            extensions: ['.js']\n        });\n    });\n\n    if (requireResolveSupportsPaths) {\n        t.equal(\n            resolve.sync('./cup.coffee', { basedir: dir, extensions: ['.js', '.coffee'] }),\n            require.resolve('./cup.coffee', { paths: [dir] }),\n            './cup.coffee: resolve.sync === require.resolve'\n        );\n    }\n\n    t.end();\n});\n\ntest('mug', function (t) {\n    var dir = path.join(__dirname, 'resolver');\n\n    t.equal(\n        resolve.sync('./mug', { basedir: dir }),\n        path.join(dir, 'mug.js'),\n        './mug -> ./mug.js'\n    );\n    if (requireResolveSupportsPaths) {\n        t.equal(\n            resolve.sync('./mug', { basedir: dir }),\n            require.resolve('./mug', { paths: [dir] }),\n            './mug: resolve.sync === require.resolve'\n        );\n    }\n\n    t.equal(\n        resolve.sync('./mug', {\n            basedir: dir,\n            extensions: ['.coffee', '.js']\n        }),\n        path.join(dir, 'mug.coffee'),\n        './mug -> ./mug.coffee'\n    );\n\n    t.equal(\n        resolve.sync('./mug', {\n            basedir: dir,\n            extensions: ['.js', '.coffee']\n        }),\n        path.join(dir, 'mug.js'),\n        './mug -> ./mug.js'\n    );\n\n    t.end();\n});\n\ntest('other path', function (t) {\n    var resolverDir = path.join(__dirname, 'resolver');\n    var dir = path.join(resolverDir, 'bar');\n    var otherDir = path.join(resolverDir, 'other_path');\n\n    t.equal(\n        resolve.sync('root', {\n            basedir: dir,\n            paths: [otherDir]\n        }),\n        path.join(resolverDir, 'other_path/root.js')\n    );\n\n    t.equal(\n        resolve.sync('lib/other-lib', {\n            basedir: dir,\n            paths: [otherDir]\n        }),\n        path.join(resolverDir, 'other_path/lib/other-lib.js')\n    );\n\n    t.throws(function () {\n        resolve.sync('root', { basedir: dir });\n    });\n\n    t.throws(function () {\n        resolve.sync('zzz', {\n            basedir: dir,\n            paths: [otherDir]\n        });\n    });\n\n    t.end();\n});\n\ntest('path iterator', function (t) {\n    var resolverDir = path.join(__dirname, 'resolver');\n\n    var exactIterator = function (x, start, getPackageCandidates, opts) {\n        return [path.join(resolverDir, x)];\n    };\n\n    t.equal(\n        resolve.sync('baz', { packageIterator: exactIterator }),\n        path.join(resolverDir, 'baz/quux.js')\n    );\n\n    t.end();\n});\n\ntest('incorrect main', function (t) {\n    var resolverDir = path.join(__dirname, 'resolver');\n    var dir = path.join(resolverDir, 'incorrect_main');\n\n    t.equal(\n        resolve.sync('./incorrect_main', { basedir: resolverDir }),\n        path.join(dir, 'index.js')\n    );\n    if (requireResolveSupportsPaths) {\n        t.equal(\n            resolve.sync('./incorrect_main', { basedir: resolverDir }),\n            require.resolve('./incorrect_main', { paths: [resolverDir] }),\n            './incorrect_main: resolve.sync === require.resolve'\n        );\n    }\n\n    t.end();\n});\n\ntest('missing index', function (t) {\n    t.plan(requireResolveSupportsPaths ? 2 : 1);\n\n    var resolverDir = path.join(__dirname, 'resolver');\n    try {\n        resolve.sync('./missing_index', { basedir: resolverDir });\n        t.fail('did not fail');\n    } catch (err) {\n        t.equal(err && err.code, 'MODULE_NOT_FOUND', 'error has correct error code');\n    }\n    if (requireResolveSupportsPaths) {\n        try {\n            require.resolve('./missing_index', { basedir: resolverDir });\n            t.fail('require.resolve did not fail');\n        } catch (err) {\n            t.equal(err && err.code, 'MODULE_NOT_FOUND', 'error has correct error code');\n        }\n    }\n});\n\ntest('missing main', function (t) {\n    var resolverDir = path.join(__dirname, 'resolver');\n\n    try {\n        resolve.sync('./missing_main', { basedir: resolverDir });\n        t.fail('require.resolve did not fail');\n    } catch (err) {\n        t.equal(err && err.code, 'MODULE_NOT_FOUND', 'error has correct error code');\n    }\n    if (requireResolveSupportsPaths) {\n        try {\n            resolve.sync('./missing_main', { basedir: resolverDir });\n            t.fail('require.resolve did not fail');\n        } catch (err) {\n            t.equal(err && err.code, 'MODULE_NOT_FOUND', 'error has correct error code');\n        }\n    }\n\n    t.end();\n});\n\ntest('null main', function (t) {\n    var resolverDir = path.join(__dirname, 'resolver');\n\n    try {\n        resolve.sync('./null_main', { basedir: resolverDir });\n        t.fail('require.resolve did not fail');\n    } catch (err) {\n        t.equal(err && err.code, 'MODULE_NOT_FOUND', 'error has correct error code');\n    }\n    if (requireResolveSupportsPaths) {\n        try {\n            resolve.sync('./null_main', { basedir: resolverDir });\n            t.fail('require.resolve did not fail');\n        } catch (err) {\n            t.equal(err && err.code, 'MODULE_NOT_FOUND', 'error has correct error code');\n        }\n    }\n\n    t.end();\n});\n\ntest('main: false', function (t) {\n    var basedir = path.join(__dirname, 'resolver');\n    var dir = path.join(basedir, 'false_main');\n    t.equal(\n        resolve.sync('./false_main', { basedir: basedir }),\n        path.join(dir, 'index.js'),\n        '`\"main\": false`: resolves to `index.js`'\n    );\n    if (requireResolveSupportsPaths) {\n        t.equal(\n            resolve.sync('./false_main', { basedir: basedir }),\n            require.resolve('./false_main', { paths: [basedir] }),\n            '`\"main\": false`: resolve.sync === require.resolve'\n        );\n    }\n\n    t.end();\n});\n\nvar stubStatSync = function stubStatSync(fn) {\n    var statSync = fs.statSync;\n    try {\n        fs.statSync = function () {\n            throw new EvalError('Unknown Error');\n        };\n        return fn();\n    } finally {\n        fs.statSync = statSync;\n    }\n};\n\ntest('#79 - re-throw non ENOENT errors from stat', function (t) {\n    var dir = path.join(__dirname, 'resolver');\n\n    stubStatSync(function () {\n        t.throws(function () {\n            resolve.sync('foo', { basedir: dir });\n        }, /Unknown Error/);\n    });\n\n    t.end();\n});\n\ntest('#52 - incorrectly resolves module-paths like \"./someFolder/\" when there is a file of the same name', function (t) {\n    var dir = path.join(__dirname, 'resolver');\n    var basedir = path.join(dir, 'same_names');\n\n    t.equal(\n        resolve.sync('./foo', { basedir: basedir }),\n        path.join(dir, 'same_names/foo.js')\n    );\n    if (requireResolveSupportsPaths) {\n        t.equal(\n            resolve.sync('./foo', { basedir: basedir }),\n            require.resolve('./foo', { paths: [basedir] }),\n            './foo: resolve.sync === require.resolve'\n        );\n    }\n\n    t.equal(\n        resolve.sync('./foo/', { basedir: basedir }),\n        path.join(dir, 'same_names/foo/index.js')\n    );\n    if (requireResolveSupportsPaths) {\n        t.equal(\n            resolve.sync('./foo/', { basedir: basedir }),\n            require.resolve('./foo/', { paths: [basedir] }),\n            './foo/: resolve.sync === require.resolve'\n        );\n    }\n\n    t.end();\n});\n\ntest('#211 - incorrectly resolves module-paths like \".\" when from inside a folder with a sibling file of the same name', function (t) {\n    var dir = path.join(__dirname, 'resolver');\n    var basedir = path.join(dir, 'same_names/foo');\n\n    t.equal(\n        resolve.sync('./', { basedir: basedir }),\n        path.join(dir, 'same_names/foo/index.js'),\n        './'\n    );\n    if (requireResolveSupportsPaths) {\n        t.equal(\n            resolve.sync('./', { basedir: basedir }),\n            require.resolve('./', { paths: [basedir] }),\n            './: resolve.sync === require.resolve'\n        );\n    }\n\n    t.equal(\n        resolve.sync('.', { basedir: basedir }),\n        path.join(dir, 'same_names/foo/index.js'),\n        '.'\n    );\n    if (requireResolveSupportsPaths) {\n        t.equal(\n            resolve.sync('.', { basedir: basedir }),\n            require.resolve('.', { paths: [basedir] }),\n            '.: resolve.sync === require.resolve',\n            { todo: true }\n        );\n    }\n\n    t.end();\n});\n\ntest('sync: #121 - treating an existing file as a dir when no basedir', function (t) {\n    var testFile = path.basename(__filename);\n\n    t.test('sanity check', function (st) {\n        st.equal(\n            resolve.sync('./' + testFile),\n            __filename,\n            'sanity check'\n        );\n        st.equal(\n            resolve.sync('./' + testFile),\n            require.resolve('./' + testFile),\n            'sanity check: resolve.sync === require.resolve'\n        );\n\n        st.end();\n    });\n\n    t.test('with a fake directory', function (st) {\n        function run() { return resolve.sync('./' + testFile + '/blah'); }\n\n        st.throws(run, 'throws an error');\n\n        try {\n            run();\n        } catch (e) {\n            st.equal(e.code, 'MODULE_NOT_FOUND', 'error code matches require.resolve');\n            st.equal(\n                e.message,\n                'Cannot find module \\'./' + testFile + '/blah\\' from \\'' + __dirname + '\\'',\n                'can not find nonexistent module'\n            );\n        }\n\n        st.end();\n    });\n\n    t.end();\n});\n\ntest('sync dot main', function (t) {\n    var start = new Date();\n\n    t.equal(\n        resolve.sync('./resolver/dot_main'),\n        path.join(__dirname, 'resolver/dot_main/index.js'),\n        './resolver/dot_main'\n    );\n    t.equal(\n        resolve.sync('./resolver/dot_main'),\n        require.resolve('./resolver/dot_main'),\n        './resolver/dot_main: resolve.sync === require.resolve'\n    );\n\n    t.ok(new Date() - start < 50, 'resolve.sync timedout');\n\n    t.end();\n});\n\ntest('sync dot slash main', function (t) {\n    var start = new Date();\n\n    t.equal(\n        resolve.sync('./resolver/dot_slash_main'),\n        path.join(__dirname, 'resolver/dot_slash_main/index.js')\n    );\n    t.equal(\n        resolve.sync('./resolver/dot_slash_main'),\n        require.resolve('./resolver/dot_slash_main'),\n        './resolver/dot_slash_main: resolve.sync === require.resolve'\n    );\n\n    t.ok(new Date() - start < 50, 'resolve.sync timedout');\n\n    t.end();\n});\n\ntest('not a directory', function (t) {\n    var path = './foo';\n    try {\n        resolve.sync(path, { basedir: __filename });\n        t.fail();\n    } catch (err) {\n        t.ok(err, 'a non-directory errors');\n        t.equal(err && err.message, 'Cannot find module \\'' + path + \"' from '\" + __filename + \"'\");\n        t.equal(err && err.code, 'MODULE_NOT_FOUND');\n    }\n    t.end();\n});\n\ntest('non-string \"main\" field in package.json', function (t) {\n    var dir = path.join(__dirname, 'resolver');\n    try {\n        var result = resolve.sync('./invalid_main', { basedir: dir });\n        t.equal(result, undefined, 'result should not exist');\n        t.fail('should not get here');\n    } catch (err) {\n        t.ok(err, 'errors on non-string main');\n        t.equal(err.message, 'package “invalid_main” `main` must be a string');\n        t.equal(err.code, 'INVALID_PACKAGE_MAIN');\n    }\n    t.end();\n});\n\ntest('non-string \"main\" field in package.json', function (t) {\n    var dir = path.join(__dirname, 'resolver');\n    try {\n        var result = resolve.sync('./invalid_main', { basedir: dir });\n        t.equal(result, undefined, 'result should not exist');\n        t.fail('should not get here');\n    } catch (err) {\n        t.ok(err, 'errors on non-string main');\n        t.equal(err.message, 'package “invalid_main” `main` must be a string');\n        t.equal(err.code, 'INVALID_PACKAGE_MAIN');\n    }\n    t.end();\n});\n\ntest('browser field in package.json', function (t) {\n    var dir = path.join(__dirname, 'resolver');\n    var res = resolve.sync('./browser_field', {\n        basedir: dir,\n        packageFilter: function packageFilter(pkg) {\n            if (pkg.browser) {\n                pkg.main = pkg.browser; // eslint-disable-line no-param-reassign\n                delete pkg.browser; // eslint-disable-line no-param-reassign\n            }\n            return pkg;\n        }\n    });\n    t.equal(res, path.join(dir, 'browser_field', 'b.js'));\n    t.end();\n});\n\ntest('absolute paths', function (t) {\n    var extensionless = __filename.slice(0, -path.extname(__filename).length);\n\n    t.equal(\n        resolve.sync(__filename),\n        __filename,\n        'absolute path to this file resolves'\n    );\n    t.equal(\n        resolve.sync(__filename),\n        require.resolve(__filename),\n        'absolute path to this file: resolve.sync === require.resolve'\n    );\n\n    t.equal(\n        resolve.sync(extensionless),\n        __filename,\n        'extensionless absolute path to this file resolves'\n    );\n    t.equal(\n        resolve.sync(__filename),\n        require.resolve(__filename),\n        'absolute path to this file: resolve.sync === require.resolve'\n    );\n\n    t.equal(\n        resolve.sync(__filename, { basedir: process.cwd() }),\n        __filename,\n        'absolute path to this file with a basedir resolves'\n    );\n    if (requireResolveSupportsPaths) {\n        t.equal(\n            resolve.sync(__filename, { basedir: process.cwd() }),\n            require.resolve(__filename, { paths: [process.cwd()] }),\n            'absolute path to this file + basedir: resolve.sync === require.resolve'\n        );\n    }\n\n    t.equal(\n        resolve.sync(extensionless, { basedir: process.cwd() }),\n        __filename,\n        'extensionless absolute path to this file with a basedir resolves'\n    );\n    if (requireResolveSupportsPaths) {\n        t.equal(\n            resolve.sync(extensionless, { basedir: process.cwd() }),\n            require.resolve(extensionless, { paths: [process.cwd()] }),\n            'extensionless absolute path to this file + basedir: resolve.sync === require.resolve'\n        );\n    }\n\n    t.end();\n});\n\ntest('malformed package.json', function (t) {\n    t.plan(5 + (requireResolveSupportsPaths ? 1 : 0));\n\n    var basedir = path.join(__dirname, 'resolver/malformed_package_json');\n    var expected = path.join(basedir, 'index.js');\n\n    t.equal(\n        resolve.sync('./index.js', { basedir: basedir }),\n        expected,\n        'malformed package.json is silently ignored'\n    );\n    if (requireResolveSupportsPaths) {\n        t.equal(\n            resolve.sync('./index.js', { basedir: basedir }),\n            require.resolve('./index.js', { paths: [basedir] }),\n            'malformed package.json: resolve.sync === require.resolve'\n        );\n    }\n\n    var res1 = resolve.sync(\n        './index.js',\n        {\n            basedir: basedir,\n            packageFilter: function (pkg, pkgfile, dir) {\n                t.fail('should not reach here');\n            }\n        }\n    );\n\n    t.equal(\n        res1,\n        expected,\n        'with packageFilter: malformed package.json is silently ignored'\n    );\n\n    var res2 = resolve.sync(\n        './index.js',\n        {\n            basedir: basedir,\n            readPackageSync: function (readFileSync, pkgfile) {\n                t.equal(pkgfile, path.join(basedir, 'package.json'), 'readPackageSync: `pkgfile` is package.json path');\n                var result = String(readFileSync(pkgfile));\n                try {\n                    return JSON.parse(result);\n                } catch (e) {\n                    t.ok(e instanceof SyntaxError, 'readPackageSync: malformed package.json parses as a syntax error');\n                }\n            }\n        }\n    );\n\n    t.equal(\n        res2,\n        expected,\n        'with readPackageSync: malformed package.json is silently ignored'\n    );\n});\n"],"mappings":"AAAA,IAAIA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAAlB;;AACA,IAAIC,EAAE,GAAGD,OAAO,CAAC,IAAD,CAAhB;;AACA,IAAIE,IAAI,GAAGF,OAAO,CAAC,MAAD,CAAlB;;AAEA,IAAIG,OAAO,GAAGH,OAAO,CAAC,KAAD,CAArB;;AACA,IAAII,IAAI,GAAGJ,OAAO,CAAC,SAAD,CAAlB;;AAEA,IAAIK,2BAA2B,GAAGL,OAAO,CAACG,OAAR,CAAgBG,MAAhB,GAAyB,CAAzB,IAC3B,CAAE,eAAD,CAAkBJ,IAAlB,CAAuBK,OAAO,CAACC,OAA/B,CADR,C,CACiD;;AAEjDN,IAAI,CAAC,sBAAD,EAAyB,UAAUO,CAAV,EAAa;EACtCA,CAAC,CAACC,KAAF,CAAQP,OAAO,CAACC,IAAhB,EAAsBA,IAAtB,EAA4B,uDAA5B;EACAK,CAAC,CAACE,GAAF;AACH,CAHG,CAAJ;AAKAT,IAAI,CAAC,KAAD,EAAQ,UAAUO,CAAV,EAAa;EACrB,IAAIG,GAAG,GAAGb,IAAI,CAACc,IAAL,CAAUC,SAAV,EAAqB,UAArB,CAAV;EAEAL,CAAC,CAACC,KAAF,CACIP,OAAO,CAACC,IAAR,CAAa,OAAb,EAAsB;IAAEW,OAAO,EAAEH;EAAX,CAAtB,CADJ,EAEIb,IAAI,CAACc,IAAL,CAAUD,GAAV,EAAe,QAAf,CAFJ,EAGI,OAHJ;;EAKA,IAAIP,2BAAJ,EAAiC;IAC7BI,CAAC,CAACC,KAAF,CACIP,OAAO,CAACC,IAAR,CAAa,OAAb,EAAsB;MAAEW,OAAO,EAAEH;IAAX,CAAtB,CADJ,EAEIZ,OAAO,CAACG,OAAR,CAAgB,OAAhB,EAAyB;MAAEa,KAAK,EAAE,CAACJ,GAAD;IAAT,CAAzB,CAFJ,EAGI,yCAHJ;EAKH;;EAEDH,CAAC,CAACC,KAAF,CACIP,OAAO,CAACC,IAAR,CAAa,UAAb,EAAyB;IAAEW,OAAO,EAAEH;EAAX,CAAzB,CADJ,EAEIb,IAAI,CAACc,IAAL,CAAUD,GAAV,EAAe,QAAf,CAFJ,EAGI,UAHJ;;EAKA,IAAIP,2BAAJ,EAAiC;IAC7BI,CAAC,CAACC,KAAF,CACIP,OAAO,CAACC,IAAR,CAAa,UAAb,EAAyB;MAAEW,OAAO,EAAEH;IAAX,CAAzB,CADJ,EAEIZ,OAAO,CAACG,OAAR,CAAgB,UAAhB,EAA4B;MAAEa,KAAK,EAAE,CAACJ,GAAD;IAAT,CAA5B,CAFJ,EAGI,4CAHJ;EAKH;;EAEDH,CAAC,CAACC,KAAF,CACIP,OAAO,CAACC,IAAR,CAAa,UAAb,EAAyB;IAAEW,OAAO,EAAEH,GAAX;IAAgBK,QAAQ,EAAElB,IAAI,CAACc,IAAL,CAAUD,GAAV,EAAe,QAAf;EAA1B,CAAzB,CADJ,EAEIb,IAAI,CAACc,IAAL,CAAUD,GAAV,EAAe,QAAf,CAFJ;EAKAH,CAAC,CAACS,MAAF,CAAS,YAAY;IACjBf,OAAO,CAACC,IAAR,CAAa,KAAb,EAAoB;MAAEW,OAAO,EAAEH;IAAX,CAApB;EACH,CAFD,EAlCqB,CAsCrB;;EACAH,CAAC,CAACS,MAAF,CACI,YAAY;IACRf,OAAO,CAACC,IAAR,CAAa,KAAb,EAAoB;MAAEW,OAAO,EAAEH,GAAX;MAAgBK,QAAQ,EAAElB,IAAI,CAACc,IAAL,CAAUD,GAAV,EAAe,QAAf;IAA1B,CAApB;EACH,CAHL,EAII;IACIO,IAAI,EAAE,OADV;IAEIC,OAAO,EAAE,oCAAoCrB,IAAI,CAACc,IAAL,CAAUD,GAAV,EAAe,QAAf,CAApC,GAA+D;EAF5E,CAJJ;EAUAH,CAAC,CAACE,GAAF;AACH,CAlDG,CAAJ;AAoDAT,IAAI,CAAC,KAAD,EAAQ,UAAUO,CAAV,EAAa;EACrB,IAAIG,GAAG,GAAGb,IAAI,CAACc,IAAL,CAAUC,SAAV,EAAqB,UAArB,CAAV;EAEA,IAAIC,OAAO,GAAGhB,IAAI,CAACc,IAAL,CAAUD,GAAV,EAAe,KAAf,CAAd;EAEAH,CAAC,CAACC,KAAF,CACIP,OAAO,CAACC,IAAR,CAAa,KAAb,EAAoB;IAAEW,OAAO,EAAEA;EAAX,CAApB,CADJ,EAEIhB,IAAI,CAACc,IAAL,CAAUD,GAAV,EAAe,+BAAf,CAFJ,EAGI,YAHJ;;EAKA,IAAIP,2BAAJ,EAAiC;IAC7BI,CAAC,CAACC,KAAF,CACIP,OAAO,CAACC,IAAR,CAAa,KAAb,EAAoB;MAAEW,OAAO,EAAEA;IAAX,CAApB,CADJ,EAEIf,OAAO,CAACG,OAAR,CAAgB,KAAhB,EAAuB;MAAEa,KAAK,EAAE,CAACD,OAAD;IAAT,CAAvB,CAFJ,EAGI,8CAHJ;EAKH;;EAEDN,CAAC,CAACE,GAAF;AACH,CAnBG,CAAJ;AAqBAT,IAAI,CAAC,KAAD,EAAQ,UAAUO,CAAV,EAAa;EACrB,IAAIG,GAAG,GAAGb,IAAI,CAACc,IAAL,CAAUC,SAAV,EAAqB,UAArB,CAAV;EAEAL,CAAC,CAACC,KAAF,CACIP,OAAO,CAACC,IAAR,CAAa,OAAb,EAAsB;IAAEW,OAAO,EAAEH;EAAX,CAAtB,CADJ,EAEIb,IAAI,CAACc,IAAL,CAAUD,GAAV,EAAe,aAAf,CAFJ,EAGI,OAHJ;;EAKA,IAAIP,2BAAJ,EAAiC;IAC7BI,CAAC,CAACC,KAAF,CACIP,OAAO,CAACC,IAAR,CAAa,OAAb,EAAsB;MAAEW,OAAO,EAAEH;IAAX,CAAtB,CADJ,EAEIZ,OAAO,CAACG,OAAR,CAAgB,OAAhB,EAAyB;MAAEa,KAAK,EAAE,CAACJ,GAAD;IAAT,CAAzB,CAFJ,EAGI,yCAHJ;EAKH;;EAEDH,CAAC,CAACE,GAAF;AACH,CAjBG,CAAJ;AAmBAT,IAAI,CAAC,KAAD,EAAQ,UAAUO,CAAV,EAAa;EACrB,IAAIG,GAAG,GAAGb,IAAI,CAACc,IAAL,CAAUC,SAAV,EAAqB,2BAArB,CAAV;EAEAL,CAAC,CAACC,KAAF,CACIP,OAAO,CAACC,IAAR,CAAa,QAAb,EAAuB;IAAEW,OAAO,EAAEH;EAAX,CAAvB,CADJ,EAEIb,IAAI,CAACc,IAAL,CAAUD,GAAV,EAAe,eAAf,CAFJ;;EAIA,IAAIP,2BAAJ,EAAiC;IAC7BI,CAAC,CAACC,KAAF,CACIP,OAAO,CAACC,IAAR,CAAa,QAAb,EAAuB;MAAEW,OAAO,EAAEH;IAAX,CAAvB,CADJ,EAEIZ,OAAO,CAACG,OAAR,CAAgB,QAAhB,EAA0B;MAAEa,KAAK,EAAE,CAACJ,GAAD;IAAT,CAA1B,CAFJ,EAGI,0CAHJ;EAKH;;EAED,IAAIS,MAAM,GAAGtB,IAAI,CAACc,IAAL,CAAUD,GAAV,EAAe,MAAf,CAAb;EACAH,CAAC,CAACC,KAAF,CACIP,OAAO,CAACC,IAAR,CAAa,KAAb,EAAoB;IAAEW,OAAO,EAAEM;EAAX,CAApB,CADJ,EAEItB,IAAI,CAACc,IAAL,CAAUD,GAAV,EAAe,cAAf,CAFJ;;EAIA,IAAIP,2BAAJ,EAAiC;IAC7BI,CAAC,CAACC,KAAF,CACIP,OAAO,CAACC,IAAR,CAAa,KAAb,EAAoB;MAAEW,OAAO,EAAEM;IAAX,CAApB,CADJ,EAEIrB,OAAO,CAACG,OAAR,CAAgB,KAAhB,EAAuB;MAAEa,KAAK,EAAE,CAACK,MAAD;IAAT,CAAvB,CAFJ,EAGI,uCAHJ;EAKH;;EAED,IAAIC,OAAO,GAAGvB,IAAI,CAACc,IAAL,CAAUD,GAAV,EAAe,KAAf,CAAd;EACAH,CAAC,CAACC,KAAF,CACIP,OAAO,CAACC,IAAR,CAAa,MAAb,EAAqB;IAAEW,OAAO,EAAEO;EAAX,CAArB,CADJ,EAEIvB,IAAI,CAACc,IAAL,CAAUD,GAAV,EAAe,eAAf,CAFJ;;EAIA,IAAIP,2BAAJ,EAAiC;IAC7BI,CAAC,CAACC,KAAF,CACIP,OAAO,CAACC,IAAR,CAAa,MAAb,EAAqB;MAAEW,OAAO,EAAEO;IAAX,CAArB,CADJ,EAEItB,OAAO,CAACG,OAAR,CAAgB,MAAhB,EAAwB;MAAEa,KAAK,EAAE,CAACM,OAAD;IAAT,CAAxB,CAFJ,EAGI,wCAHJ;EAKH;;EAEDb,CAAC,CAACE,GAAF;AACH,CA1CG,CAAJ;AA4CAT,IAAI,CAAC,WAAD,EAAc,UAAUO,CAAV,EAAa;EAC3B,IAAIG,GAAG,GAAGb,IAAI,CAACc,IAAL,CAAUC,SAAV,EAAqB,gCAArB,CAAV;EAEAL,CAAC,CAACC,KAAF,CACIP,OAAO,CAACC,IAAR,CAAa,SAAb,EAAwB;IAAEW,OAAO,EAAEH;EAAX,CAAxB,CADJ,EAEIb,IAAI,CAACc,IAAL,CAAUD,GAAV,EAAe,UAAf,CAFJ;;EAIA,IAAIP,2BAAJ,EAAiC;IAC7BI,CAAC,CAACC,KAAF,CACIP,OAAO,CAACC,IAAR,CAAa,SAAb,EAAwB;MAAEW,OAAO,EAAEH;IAAX,CAAxB,CADJ,EAEIZ,OAAO,CAACG,OAAR,CAAgB,SAAhB,EAA2B;MAAEa,KAAK,EAAE,CAACJ,GAAD;IAAT,CAA3B,CAFJ,EAGI,2CAHJ;EAKH;;EAEDH,CAAC,CAACE,GAAF;AACH,CAhBG,CAAJ;AAkBAT,IAAI,CAAC,KAAD,EAAQ,UAAUO,CAAV,EAAa;EACrB,IAAIG,GAAG,GAAGb,IAAI,CAACc,IAAL,CAAUC,SAAV,EAAqB,UAArB,CAAV;EAEAL,CAAC,CAACC,KAAF,CACIP,OAAO,CAACC,IAAR,CAAa,OAAb,EAAsB;IAClBW,OAAO,EAAEH,GADS;IAElBW,UAAU,EAAE,CAAC,KAAD,EAAQ,SAAR;EAFM,CAAtB,CADJ,EAKIxB,IAAI,CAACc,IAAL,CAAUD,GAAV,EAAe,YAAf,CALJ,EAMI,uBANJ;EASAH,CAAC,CAACC,KAAF,CACIP,OAAO,CAACC,IAAR,CAAa,cAAb,EAA6B;IAAEW,OAAO,EAAEH;EAAX,CAA7B,CADJ,EAEIb,IAAI,CAACc,IAAL,CAAUD,GAAV,EAAe,YAAf,CAFJ,EAGI,cAHJ;EAMAH,CAAC,CAACS,MAAF,CAAS,YAAY;IACjBf,OAAO,CAACC,IAAR,CAAa,OAAb,EAAsB;MAClBW,OAAO,EAAEH,GADS;MAElBW,UAAU,EAAE,CAAC,KAAD;IAFM,CAAtB;EAIH,CALD;;EAOA,IAAIlB,2BAAJ,EAAiC;IAC7BI,CAAC,CAACC,KAAF,CACIP,OAAO,CAACC,IAAR,CAAa,cAAb,EAA6B;MAAEW,OAAO,EAAEH,GAAX;MAAgBW,UAAU,EAAE,CAAC,KAAD,EAAQ,SAAR;IAA5B,CAA7B,CADJ,EAEIvB,OAAO,CAACG,OAAR,CAAgB,cAAhB,EAAgC;MAAEa,KAAK,EAAE,CAACJ,GAAD;IAAT,CAAhC,CAFJ,EAGI,gDAHJ;EAKH;;EAEDH,CAAC,CAACE,GAAF;AACH,CAlCG,CAAJ;AAoCAT,IAAI,CAAC,KAAD,EAAQ,UAAUO,CAAV,EAAa;EACrB,IAAIG,GAAG,GAAGb,IAAI,CAACc,IAAL,CAAUC,SAAV,EAAqB,UAArB,CAAV;EAEAL,CAAC,CAACC,KAAF,CACIP,OAAO,CAACC,IAAR,CAAa,OAAb,EAAsB;IAAEW,OAAO,EAAEH;EAAX,CAAtB,CADJ,EAEIb,IAAI,CAACc,IAAL,CAAUD,GAAV,EAAe,QAAf,CAFJ,EAGI,mBAHJ;;EAKA,IAAIP,2BAAJ,EAAiC;IAC7BI,CAAC,CAACC,KAAF,CACIP,OAAO,CAACC,IAAR,CAAa,OAAb,EAAsB;MAAEW,OAAO,EAAEH;IAAX,CAAtB,CADJ,EAEIZ,OAAO,CAACG,OAAR,CAAgB,OAAhB,EAAyB;MAAEa,KAAK,EAAE,CAACJ,GAAD;IAAT,CAAzB,CAFJ,EAGI,yCAHJ;EAKH;;EAEDH,CAAC,CAACC,KAAF,CACIP,OAAO,CAACC,IAAR,CAAa,OAAb,EAAsB;IAClBW,OAAO,EAAEH,GADS;IAElBW,UAAU,EAAE,CAAC,SAAD,EAAY,KAAZ;EAFM,CAAtB,CADJ,EAKIxB,IAAI,CAACc,IAAL,CAAUD,GAAV,EAAe,YAAf,CALJ,EAMI,uBANJ;EASAH,CAAC,CAACC,KAAF,CACIP,OAAO,CAACC,IAAR,CAAa,OAAb,EAAsB;IAClBW,OAAO,EAAEH,GADS;IAElBW,UAAU,EAAE,CAAC,KAAD,EAAQ,SAAR;EAFM,CAAtB,CADJ,EAKIxB,IAAI,CAACc,IAAL,CAAUD,GAAV,EAAe,QAAf,CALJ,EAMI,mBANJ;EASAH,CAAC,CAACE,GAAF;AACH,CAnCG,CAAJ;AAqCAT,IAAI,CAAC,YAAD,EAAe,UAAUO,CAAV,EAAa;EAC5B,IAAIe,WAAW,GAAGzB,IAAI,CAACc,IAAL,CAAUC,SAAV,EAAqB,UAArB,CAAlB;EACA,IAAIF,GAAG,GAAGb,IAAI,CAACc,IAAL,CAAUW,WAAV,EAAuB,KAAvB,CAAV;EACA,IAAIC,QAAQ,GAAG1B,IAAI,CAACc,IAAL,CAAUW,WAAV,EAAuB,YAAvB,CAAf;EAEAf,CAAC,CAACC,KAAF,CACIP,OAAO,CAACC,IAAR,CAAa,MAAb,EAAqB;IACjBW,OAAO,EAAEH,GADQ;IAEjBI,KAAK,EAAE,CAACS,QAAD;EAFU,CAArB,CADJ,EAKI1B,IAAI,CAACc,IAAL,CAAUW,WAAV,EAAuB,oBAAvB,CALJ;EAQAf,CAAC,CAACC,KAAF,CACIP,OAAO,CAACC,IAAR,CAAa,eAAb,EAA8B;IAC1BW,OAAO,EAAEH,GADiB;IAE1BI,KAAK,EAAE,CAACS,QAAD;EAFmB,CAA9B,CADJ,EAKI1B,IAAI,CAACc,IAAL,CAAUW,WAAV,EAAuB,6BAAvB,CALJ;EAQAf,CAAC,CAACS,MAAF,CAAS,YAAY;IACjBf,OAAO,CAACC,IAAR,CAAa,MAAb,EAAqB;MAAEW,OAAO,EAAEH;IAAX,CAArB;EACH,CAFD;EAIAH,CAAC,CAACS,MAAF,CAAS,YAAY;IACjBf,OAAO,CAACC,IAAR,CAAa,KAAb,EAAoB;MAChBW,OAAO,EAAEH,GADO;MAEhBI,KAAK,EAAE,CAACS,QAAD;IAFS,CAApB;EAIH,CALD;EAOAhB,CAAC,CAACE,GAAF;AACH,CAjCG,CAAJ;AAmCAT,IAAI,CAAC,eAAD,EAAkB,UAAUO,CAAV,EAAa;EAC/B,IAAIe,WAAW,GAAGzB,IAAI,CAACc,IAAL,CAAUC,SAAV,EAAqB,UAArB,CAAlB;;EAEA,IAAIY,aAAa,GAAG,UAAUC,CAAV,EAAaC,KAAb,EAAoBC,oBAApB,EAA0CC,IAA1C,EAAgD;IAChE,OAAO,CAAC/B,IAAI,CAACc,IAAL,CAAUW,WAAV,EAAuBG,CAAvB,CAAD,CAAP;EACH,CAFD;;EAIAlB,CAAC,CAACC,KAAF,CACIP,OAAO,CAACC,IAAR,CAAa,KAAb,EAAoB;IAAE2B,eAAe,EAAEL;EAAnB,CAApB,CADJ,EAEI3B,IAAI,CAACc,IAAL,CAAUW,WAAV,EAAuB,aAAvB,CAFJ;EAKAf,CAAC,CAACE,GAAF;AACH,CAbG,CAAJ;AAeAT,IAAI,CAAC,gBAAD,EAAmB,UAAUO,CAAV,EAAa;EAChC,IAAIe,WAAW,GAAGzB,IAAI,CAACc,IAAL,CAAUC,SAAV,EAAqB,UAArB,CAAlB;EACA,IAAIF,GAAG,GAAGb,IAAI,CAACc,IAAL,CAAUW,WAAV,EAAuB,gBAAvB,CAAV;EAEAf,CAAC,CAACC,KAAF,CACIP,OAAO,CAACC,IAAR,CAAa,kBAAb,EAAiC;IAAEW,OAAO,EAAES;EAAX,CAAjC,CADJ,EAEIzB,IAAI,CAACc,IAAL,CAAUD,GAAV,EAAe,UAAf,CAFJ;;EAIA,IAAIP,2BAAJ,EAAiC;IAC7BI,CAAC,CAACC,KAAF,CACIP,OAAO,CAACC,IAAR,CAAa,kBAAb,EAAiC;MAAEW,OAAO,EAAES;IAAX,CAAjC,CADJ,EAEIxB,OAAO,CAACG,OAAR,CAAgB,kBAAhB,EAAoC;MAAEa,KAAK,EAAE,CAACQ,WAAD;IAAT,CAApC,CAFJ,EAGI,oDAHJ;EAKH;;EAEDf,CAAC,CAACE,GAAF;AACH,CAjBG,CAAJ;AAmBAT,IAAI,CAAC,eAAD,EAAkB,UAAUO,CAAV,EAAa;EAC/BA,CAAC,CAACuB,IAAF,CAAO3B,2BAA2B,GAAG,CAAH,GAAO,CAAzC;EAEA,IAAImB,WAAW,GAAGzB,IAAI,CAACc,IAAL,CAAUC,SAAV,EAAqB,UAArB,CAAlB;;EACA,IAAI;IACAX,OAAO,CAACC,IAAR,CAAa,iBAAb,EAAgC;MAAEW,OAAO,EAAES;IAAX,CAAhC;IACAf,CAAC,CAACwB,IAAF,CAAO,cAAP;EACH,CAHD,CAGE,OAAOC,GAAP,EAAY;IACVzB,CAAC,CAACC,KAAF,CAAQwB,GAAG,IAAIA,GAAG,CAACC,IAAnB,EAAyB,kBAAzB,EAA6C,8BAA7C;EACH;;EACD,IAAI9B,2BAAJ,EAAiC;IAC7B,IAAI;MACAL,OAAO,CAACG,OAAR,CAAgB,iBAAhB,EAAmC;QAAEY,OAAO,EAAES;MAAX,CAAnC;;MACAf,CAAC,CAACwB,IAAF,CAAO,8BAAP;IACH,CAHD,CAGE,OAAOC,GAAP,EAAY;MACVzB,CAAC,CAACC,KAAF,CAAQwB,GAAG,IAAIA,GAAG,CAACC,IAAnB,EAAyB,kBAAzB,EAA6C,8BAA7C;IACH;EACJ;AACJ,CAlBG,CAAJ;AAoBAjC,IAAI,CAAC,cAAD,EAAiB,UAAUO,CAAV,EAAa;EAC9B,IAAIe,WAAW,GAAGzB,IAAI,CAACc,IAAL,CAAUC,SAAV,EAAqB,UAArB,CAAlB;;EAEA,IAAI;IACAX,OAAO,CAACC,IAAR,CAAa,gBAAb,EAA+B;MAAEW,OAAO,EAAES;IAAX,CAA/B;IACAf,CAAC,CAACwB,IAAF,CAAO,8BAAP;EACH,CAHD,CAGE,OAAOC,GAAP,EAAY;IACVzB,CAAC,CAACC,KAAF,CAAQwB,GAAG,IAAIA,GAAG,CAACC,IAAnB,EAAyB,kBAAzB,EAA6C,8BAA7C;EACH;;EACD,IAAI9B,2BAAJ,EAAiC;IAC7B,IAAI;MACAF,OAAO,CAACC,IAAR,CAAa,gBAAb,EAA+B;QAAEW,OAAO,EAAES;MAAX,CAA/B;MACAf,CAAC,CAACwB,IAAF,CAAO,8BAAP;IACH,CAHD,CAGE,OAAOC,GAAP,EAAY;MACVzB,CAAC,CAACC,KAAF,CAAQwB,GAAG,IAAIA,GAAG,CAACC,IAAnB,EAAyB,kBAAzB,EAA6C,8BAA7C;IACH;EACJ;;EAED1B,CAAC,CAACE,GAAF;AACH,CAnBG,CAAJ;AAqBAT,IAAI,CAAC,WAAD,EAAc,UAAUO,CAAV,EAAa;EAC3B,IAAIe,WAAW,GAAGzB,IAAI,CAACc,IAAL,CAAUC,SAAV,EAAqB,UAArB,CAAlB;;EAEA,IAAI;IACAX,OAAO,CAACC,IAAR,CAAa,aAAb,EAA4B;MAAEW,OAAO,EAAES;IAAX,CAA5B;IACAf,CAAC,CAACwB,IAAF,CAAO,8BAAP;EACH,CAHD,CAGE,OAAOC,GAAP,EAAY;IACVzB,CAAC,CAACC,KAAF,CAAQwB,GAAG,IAAIA,GAAG,CAACC,IAAnB,EAAyB,kBAAzB,EAA6C,8BAA7C;EACH;;EACD,IAAI9B,2BAAJ,EAAiC;IAC7B,IAAI;MACAF,OAAO,CAACC,IAAR,CAAa,aAAb,EAA4B;QAAEW,OAAO,EAAES;MAAX,CAA5B;MACAf,CAAC,CAACwB,IAAF,CAAO,8BAAP;IACH,CAHD,CAGE,OAAOC,GAAP,EAAY;MACVzB,CAAC,CAACC,KAAF,CAAQwB,GAAG,IAAIA,GAAG,CAACC,IAAnB,EAAyB,kBAAzB,EAA6C,8BAA7C;IACH;EACJ;;EAED1B,CAAC,CAACE,GAAF;AACH,CAnBG,CAAJ;AAqBAT,IAAI,CAAC,aAAD,EAAgB,UAAUO,CAAV,EAAa;EAC7B,IAAIM,OAAO,GAAGhB,IAAI,CAACc,IAAL,CAAUC,SAAV,EAAqB,UAArB,CAAd;EACA,IAAIF,GAAG,GAAGb,IAAI,CAACc,IAAL,CAAUE,OAAV,EAAmB,YAAnB,CAAV;EACAN,CAAC,CAACC,KAAF,CACIP,OAAO,CAACC,IAAR,CAAa,cAAb,EAA6B;IAAEW,OAAO,EAAEA;EAAX,CAA7B,CADJ,EAEIhB,IAAI,CAACc,IAAL,CAAUD,GAAV,EAAe,UAAf,CAFJ,EAGI,yCAHJ;;EAKA,IAAIP,2BAAJ,EAAiC;IAC7BI,CAAC,CAACC,KAAF,CACIP,OAAO,CAACC,IAAR,CAAa,cAAb,EAA6B;MAAEW,OAAO,EAAEA;IAAX,CAA7B,CADJ,EAEIf,OAAO,CAACG,OAAR,CAAgB,cAAhB,EAAgC;MAAEa,KAAK,EAAE,CAACD,OAAD;IAAT,CAAhC,CAFJ,EAGI,mDAHJ;EAKH;;EAEDN,CAAC,CAACE,GAAF;AACH,CAjBG,CAAJ;;AAmBA,IAAIyB,YAAY,GAAG,SAASA,YAAT,CAAsBC,EAAtB,EAA0B;EACzC,IAAIC,QAAQ,GAAGrC,EAAE,CAACqC,QAAlB;;EACA,IAAI;IACArC,EAAE,CAACqC,QAAH,GAAc,YAAY;MACtB,MAAM,IAAIC,SAAJ,CAAc,eAAd,CAAN;IACH,CAFD;;IAGA,OAAOF,EAAE,EAAT;EACH,CALD,SAKU;IACNpC,EAAE,CAACqC,QAAH,GAAcA,QAAd;EACH;AACJ,CAVD;;AAYApC,IAAI,CAAC,4CAAD,EAA+C,UAAUO,CAAV,EAAa;EAC5D,IAAIG,GAAG,GAAGb,IAAI,CAACc,IAAL,CAAUC,SAAV,EAAqB,UAArB,CAAV;EAEAsB,YAAY,CAAC,YAAY;IACrB3B,CAAC,CAACS,MAAF,CAAS,YAAY;MACjBf,OAAO,CAACC,IAAR,CAAa,KAAb,EAAoB;QAAEW,OAAO,EAAEH;MAAX,CAApB;IACH,CAFD,EAEG,eAFH;EAGH,CAJW,CAAZ;EAMAH,CAAC,CAACE,GAAF;AACH,CAVG,CAAJ;AAYAT,IAAI,CAAC,oGAAD,EAAuG,UAAUO,CAAV,EAAa;EACpH,IAAIG,GAAG,GAAGb,IAAI,CAACc,IAAL,CAAUC,SAAV,EAAqB,UAArB,CAAV;EACA,IAAIC,OAAO,GAAGhB,IAAI,CAACc,IAAL,CAAUD,GAAV,EAAe,YAAf,CAAd;EAEAH,CAAC,CAACC,KAAF,CACIP,OAAO,CAACC,IAAR,CAAa,OAAb,EAAsB;IAAEW,OAAO,EAAEA;EAAX,CAAtB,CADJ,EAEIhB,IAAI,CAACc,IAAL,CAAUD,GAAV,EAAe,mBAAf,CAFJ;;EAIA,IAAIP,2BAAJ,EAAiC;IAC7BI,CAAC,CAACC,KAAF,CACIP,OAAO,CAACC,IAAR,CAAa,OAAb,EAAsB;MAAEW,OAAO,EAAEA;IAAX,CAAtB,CADJ,EAEIf,OAAO,CAACG,OAAR,CAAgB,OAAhB,EAAyB;MAAEa,KAAK,EAAE,CAACD,OAAD;IAAT,CAAzB,CAFJ,EAGI,yCAHJ;EAKH;;EAEDN,CAAC,CAACC,KAAF,CACIP,OAAO,CAACC,IAAR,CAAa,QAAb,EAAuB;IAAEW,OAAO,EAAEA;EAAX,CAAvB,CADJ,EAEIhB,IAAI,CAACc,IAAL,CAAUD,GAAV,EAAe,yBAAf,CAFJ;;EAIA,IAAIP,2BAAJ,EAAiC;IAC7BI,CAAC,CAACC,KAAF,CACIP,OAAO,CAACC,IAAR,CAAa,QAAb,EAAuB;MAAEW,OAAO,EAAEA;IAAX,CAAvB,CADJ,EAEIf,OAAO,CAACG,OAAR,CAAgB,QAAhB,EAA0B;MAAEa,KAAK,EAAE,CAACD,OAAD;IAAT,CAA1B,CAFJ,EAGI,0CAHJ;EAKH;;EAEDN,CAAC,CAACE,GAAF;AACH,CA7BG,CAAJ;AA+BAT,IAAI,CAAC,kHAAD,EAAqH,UAAUO,CAAV,EAAa;EAClI,IAAIG,GAAG,GAAGb,IAAI,CAACc,IAAL,CAAUC,SAAV,EAAqB,UAArB,CAAV;EACA,IAAIC,OAAO,GAAGhB,IAAI,CAACc,IAAL,CAAUD,GAAV,EAAe,gBAAf,CAAd;EAEAH,CAAC,CAACC,KAAF,CACIP,OAAO,CAACC,IAAR,CAAa,IAAb,EAAmB;IAAEW,OAAO,EAAEA;EAAX,CAAnB,CADJ,EAEIhB,IAAI,CAACc,IAAL,CAAUD,GAAV,EAAe,yBAAf,CAFJ,EAGI,IAHJ;;EAKA,IAAIP,2BAAJ,EAAiC;IAC7BI,CAAC,CAACC,KAAF,CACIP,OAAO,CAACC,IAAR,CAAa,IAAb,EAAmB;MAAEW,OAAO,EAAEA;IAAX,CAAnB,CADJ,EAEIf,OAAO,CAACG,OAAR,CAAgB,IAAhB,EAAsB;MAAEa,KAAK,EAAE,CAACD,OAAD;IAAT,CAAtB,CAFJ,EAGI,sCAHJ;EAKH;;EAEDN,CAAC,CAACC,KAAF,CACIP,OAAO,CAACC,IAAR,CAAa,GAAb,EAAkB;IAAEW,OAAO,EAAEA;EAAX,CAAlB,CADJ,EAEIhB,IAAI,CAACc,IAAL,CAAUD,GAAV,EAAe,yBAAf,CAFJ,EAGI,GAHJ;;EAKA,IAAIP,2BAAJ,EAAiC;IAC7BI,CAAC,CAACC,KAAF,CACIP,OAAO,CAACC,IAAR,CAAa,GAAb,EAAkB;MAAEW,OAAO,EAAEA;IAAX,CAAlB,CADJ,EAEIf,OAAO,CAACG,OAAR,CAAgB,GAAhB,EAAqB;MAAEa,KAAK,EAAE,CAACD,OAAD;IAAT,CAArB,CAFJ,EAGI,qCAHJ,EAII;MAAEyB,IAAI,EAAE;IAAR,CAJJ;EAMH;;EAED/B,CAAC,CAACE,GAAF;AACH,CAhCG,CAAJ;AAkCAT,IAAI,CAAC,iEAAD,EAAoE,UAAUO,CAAV,EAAa;EACjF,IAAIgC,QAAQ,GAAG1C,IAAI,CAAC2C,QAAL,CAAcC,UAAd,CAAf;EAEAlC,CAAC,CAACP,IAAF,CAAO,cAAP,EAAuB,UAAU0C,EAAV,EAAc;IACjCA,EAAE,CAAClC,KAAH,CACIP,OAAO,CAACC,IAAR,CAAa,OAAOqC,QAApB,CADJ,EAEIE,UAFJ,EAGI,cAHJ;IAKAC,EAAE,CAAClC,KAAH,CACIP,OAAO,CAACC,IAAR,CAAa,OAAOqC,QAApB,CADJ,EAEIzC,OAAO,CAACG,OAAR,CAAgB,OAAOsC,QAAvB,CAFJ,EAGI,gDAHJ;IAMAG,EAAE,CAACjC,GAAH;EACH,CAbD;EAeAF,CAAC,CAACP,IAAF,CAAO,uBAAP,EAAgC,UAAU0C,EAAV,EAAc;IAC1C,SAASC,GAAT,GAAe;MAAE,OAAO1C,OAAO,CAACC,IAAR,CAAa,OAAOqC,QAAP,GAAkB,OAA/B,CAAP;IAAiD;;IAElEG,EAAE,CAAC1B,MAAH,CAAU2B,GAAV,EAAe,iBAAf;;IAEA,IAAI;MACAA,GAAG;IACN,CAFD,CAEE,OAAOC,CAAP,EAAU;MACRF,EAAE,CAAClC,KAAH,CAASoC,CAAC,CAACX,IAAX,EAAiB,kBAAjB,EAAqC,oCAArC;MACAS,EAAE,CAAClC,KAAH,CACIoC,CAAC,CAAC1B,OADN,EAEI,4BAA4BqB,QAA5B,GAAuC,iBAAvC,GAA2D3B,SAA3D,GAAuE,IAF3E,EAGI,iCAHJ;IAKH;;IAED8B,EAAE,CAACjC,GAAH;EACH,CAjBD;EAmBAF,CAAC,CAACE,GAAF;AACH,CAtCG,CAAJ;AAwCAT,IAAI,CAAC,eAAD,EAAkB,UAAUO,CAAV,EAAa;EAC/B,IAAImB,KAAK,GAAG,IAAImB,IAAJ,EAAZ;EAEAtC,CAAC,CAACC,KAAF,CACIP,OAAO,CAACC,IAAR,CAAa,qBAAb,CADJ,EAEIL,IAAI,CAACc,IAAL,CAAUC,SAAV,EAAqB,4BAArB,CAFJ,EAGI,qBAHJ;EAKAL,CAAC,CAACC,KAAF,CACIP,OAAO,CAACC,IAAR,CAAa,qBAAb,CADJ,EAEIJ,OAAO,CAACG,OAAR,CAAgB,qBAAhB,CAFJ,EAGI,uDAHJ;EAMAM,CAAC,CAACuC,EAAF,CAAK,IAAID,IAAJ,KAAanB,KAAb,GAAqB,EAA1B,EAA8B,uBAA9B;EAEAnB,CAAC,CAACE,GAAF;AACH,CAjBG,CAAJ;AAmBAT,IAAI,CAAC,qBAAD,EAAwB,UAAUO,CAAV,EAAa;EACrC,IAAImB,KAAK,GAAG,IAAImB,IAAJ,EAAZ;EAEAtC,CAAC,CAACC,KAAF,CACIP,OAAO,CAACC,IAAR,CAAa,2BAAb,CADJ,EAEIL,IAAI,CAACc,IAAL,CAAUC,SAAV,EAAqB,kCAArB,CAFJ;EAIAL,CAAC,CAACC,KAAF,CACIP,OAAO,CAACC,IAAR,CAAa,2BAAb,CADJ,EAEIJ,OAAO,CAACG,OAAR,CAAgB,2BAAhB,CAFJ,EAGI,6DAHJ;EAMAM,CAAC,CAACuC,EAAF,CAAK,IAAID,IAAJ,KAAanB,KAAb,GAAqB,EAA1B,EAA8B,uBAA9B;EAEAnB,CAAC,CAACE,GAAF;AACH,CAhBG,CAAJ;AAkBAT,IAAI,CAAC,iBAAD,EAAoB,UAAUO,CAAV,EAAa;EACjC,IAAIV,IAAI,GAAG,OAAX;;EACA,IAAI;IACAI,OAAO,CAACC,IAAR,CAAaL,IAAb,EAAmB;MAAEgB,OAAO,EAAE4B;IAAX,CAAnB;IACAlC,CAAC,CAACwB,IAAF;EACH,CAHD,CAGE,OAAOC,GAAP,EAAY;IACVzB,CAAC,CAACuC,EAAF,CAAKd,GAAL,EAAU,wBAAV;IACAzB,CAAC,CAACC,KAAF,CAAQwB,GAAG,IAAIA,GAAG,CAACd,OAAnB,EAA4B,0BAA0BrB,IAA1B,GAAiC,UAAjC,GAA8C4C,UAA9C,GAA2D,GAAvF;IACAlC,CAAC,CAACC,KAAF,CAAQwB,GAAG,IAAIA,GAAG,CAACC,IAAnB,EAAyB,kBAAzB;EACH;;EACD1B,CAAC,CAACE,GAAF;AACH,CAXG,CAAJ;AAaAT,IAAI,CAAC,yCAAD,EAA4C,UAAUO,CAAV,EAAa;EACzD,IAAIG,GAAG,GAAGb,IAAI,CAACc,IAAL,CAAUC,SAAV,EAAqB,UAArB,CAAV;;EACA,IAAI;IACA,IAAImC,MAAM,GAAG9C,OAAO,CAACC,IAAR,CAAa,gBAAb,EAA+B;MAAEW,OAAO,EAAEH;IAAX,CAA/B,CAAb;IACAH,CAAC,CAACC,KAAF,CAAQuC,MAAR,EAAgBC,SAAhB,EAA2B,yBAA3B;IACAzC,CAAC,CAACwB,IAAF,CAAO,qBAAP;EACH,CAJD,CAIE,OAAOC,GAAP,EAAY;IACVzB,CAAC,CAACuC,EAAF,CAAKd,GAAL,EAAU,2BAAV;IACAzB,CAAC,CAACC,KAAF,CAAQwB,GAAG,CAACd,OAAZ,EAAqB,gDAArB;IACAX,CAAC,CAACC,KAAF,CAAQwB,GAAG,CAACC,IAAZ,EAAkB,sBAAlB;EACH;;EACD1B,CAAC,CAACE,GAAF;AACH,CAZG,CAAJ;AAcAT,IAAI,CAAC,yCAAD,EAA4C,UAAUO,CAAV,EAAa;EACzD,IAAIG,GAAG,GAAGb,IAAI,CAACc,IAAL,CAAUC,SAAV,EAAqB,UAArB,CAAV;;EACA,IAAI;IACA,IAAImC,MAAM,GAAG9C,OAAO,CAACC,IAAR,CAAa,gBAAb,EAA+B;MAAEW,OAAO,EAAEH;IAAX,CAA/B,CAAb;IACAH,CAAC,CAACC,KAAF,CAAQuC,MAAR,EAAgBC,SAAhB,EAA2B,yBAA3B;IACAzC,CAAC,CAACwB,IAAF,CAAO,qBAAP;EACH,CAJD,CAIE,OAAOC,GAAP,EAAY;IACVzB,CAAC,CAACuC,EAAF,CAAKd,GAAL,EAAU,2BAAV;IACAzB,CAAC,CAACC,KAAF,CAAQwB,GAAG,CAACd,OAAZ,EAAqB,gDAArB;IACAX,CAAC,CAACC,KAAF,CAAQwB,GAAG,CAACC,IAAZ,EAAkB,sBAAlB;EACH;;EACD1B,CAAC,CAACE,GAAF;AACH,CAZG,CAAJ;AAcAT,IAAI,CAAC,+BAAD,EAAkC,UAAUO,CAAV,EAAa;EAC/C,IAAIG,GAAG,GAAGb,IAAI,CAACc,IAAL,CAAUC,SAAV,EAAqB,UAArB,CAAV;EACA,IAAIqC,GAAG,GAAGhD,OAAO,CAACC,IAAR,CAAa,iBAAb,EAAgC;IACtCW,OAAO,EAAEH,GAD6B;IAEtCwC,aAAa,EAAE,SAASA,aAAT,CAAuBC,GAAvB,EAA4B;MACvC,IAAIA,GAAG,CAACC,OAAR,EAAiB;QACbD,GAAG,CAACE,IAAJ,GAAWF,GAAG,CAACC,OAAf,CADa,CACW;;QACxB,OAAOD,GAAG,CAACC,OAAX,CAFa,CAEO;MACvB;;MACD,OAAOD,GAAP;IACH;EARqC,CAAhC,CAAV;EAUA5C,CAAC,CAACC,KAAF,CAAQyC,GAAR,EAAapD,IAAI,CAACc,IAAL,CAAUD,GAAV,EAAe,eAAf,EAAgC,MAAhC,CAAb;EACAH,CAAC,CAACE,GAAF;AACH,CAdG,CAAJ;AAgBAT,IAAI,CAAC,gBAAD,EAAmB,UAAUO,CAAV,EAAa;EAChC,IAAI+C,aAAa,GAAGb,UAAU,CAACc,KAAX,CAAiB,CAAjB,EAAoB,CAAC1D,IAAI,CAAC2D,OAAL,CAAaf,UAAb,EAAyBrC,MAA9C,CAApB;;EAEAG,CAAC,CAACC,KAAF,CACIP,OAAO,CAACC,IAAR,CAAauC,UAAb,CADJ,EAEIA,UAFJ,EAGI,qCAHJ;EAKAlC,CAAC,CAACC,KAAF,CACIP,OAAO,CAACC,IAAR,CAAauC,UAAb,CADJ,EAEI3C,OAAO,CAACG,OAAR,CAAgBwC,UAAhB,CAFJ,EAGI,8DAHJ;EAMAlC,CAAC,CAACC,KAAF,CACIP,OAAO,CAACC,IAAR,CAAaoD,aAAb,CADJ,EAEIb,UAFJ,EAGI,mDAHJ;EAKAlC,CAAC,CAACC,KAAF,CACIP,OAAO,CAACC,IAAR,CAAauC,UAAb,CADJ,EAEI3C,OAAO,CAACG,OAAR,CAAgBwC,UAAhB,CAFJ,EAGI,8DAHJ;EAMAlC,CAAC,CAACC,KAAF,CACIP,OAAO,CAACC,IAAR,CAAauC,UAAb,EAAyB;IAAE5B,OAAO,EAAER,OAAO,CAACoD,GAAR;EAAX,CAAzB,CADJ,EAEIhB,UAFJ,EAGI,oDAHJ;;EAKA,IAAItC,2BAAJ,EAAiC;IAC7BI,CAAC,CAACC,KAAF,CACIP,OAAO,CAACC,IAAR,CAAauC,UAAb,EAAyB;MAAE5B,OAAO,EAAER,OAAO,CAACoD,GAAR;IAAX,CAAzB,CADJ,EAEI3D,OAAO,CAACG,OAAR,CAAgBwC,UAAhB,EAA4B;MAAE3B,KAAK,EAAE,CAACT,OAAO,CAACoD,GAAR,EAAD;IAAT,CAA5B,CAFJ,EAGI,wEAHJ;EAKH;;EAEDlD,CAAC,CAACC,KAAF,CACIP,OAAO,CAACC,IAAR,CAAaoD,aAAb,EAA4B;IAAEzC,OAAO,EAAER,OAAO,CAACoD,GAAR;EAAX,CAA5B,CADJ,EAEIhB,UAFJ,EAGI,kEAHJ;;EAKA,IAAItC,2BAAJ,EAAiC;IAC7BI,CAAC,CAACC,KAAF,CACIP,OAAO,CAACC,IAAR,CAAaoD,aAAb,EAA4B;MAAEzC,OAAO,EAAER,OAAO,CAACoD,GAAR;IAAX,CAA5B,CADJ,EAEI3D,OAAO,CAACG,OAAR,CAAgBqD,aAAhB,EAA+B;MAAExC,KAAK,EAAE,CAACT,OAAO,CAACoD,GAAR,EAAD;IAAT,CAA/B,CAFJ,EAGI,sFAHJ;EAKH;;EAEDlD,CAAC,CAACE,GAAF;AACH,CApDG,CAAJ;AAsDAT,IAAI,CAAC,wBAAD,EAA2B,UAAUO,CAAV,EAAa;EACxCA,CAAC,CAACuB,IAAF,CAAO,KAAK3B,2BAA2B,GAAG,CAAH,GAAO,CAAvC,CAAP;EAEA,IAAIU,OAAO,GAAGhB,IAAI,CAACc,IAAL,CAAUC,SAAV,EAAqB,iCAArB,CAAd;EACA,IAAI8C,QAAQ,GAAG7D,IAAI,CAACc,IAAL,CAAUE,OAAV,EAAmB,UAAnB,CAAf;EAEAN,CAAC,CAACC,KAAF,CACIP,OAAO,CAACC,IAAR,CAAa,YAAb,EAA2B;IAAEW,OAAO,EAAEA;EAAX,CAA3B,CADJ,EAEI6C,QAFJ,EAGI,4CAHJ;;EAKA,IAAIvD,2BAAJ,EAAiC;IAC7BI,CAAC,CAACC,KAAF,CACIP,OAAO,CAACC,IAAR,CAAa,YAAb,EAA2B;MAAEW,OAAO,EAAEA;IAAX,CAA3B,CADJ,EAEIf,OAAO,CAACG,OAAR,CAAgB,YAAhB,EAA8B;MAAEa,KAAK,EAAE,CAACD,OAAD;IAAT,CAA9B,CAFJ,EAGI,0DAHJ;EAKH;;EAED,IAAI8C,IAAI,GAAG1D,OAAO,CAACC,IAAR,CACP,YADO,EAEP;IACIW,OAAO,EAAEA,OADb;IAEIqC,aAAa,EAAE,UAAUC,GAAV,EAAeS,OAAf,EAAwBlD,GAAxB,EAA6B;MACxCH,CAAC,CAACwB,IAAF,CAAO,uBAAP;IACH;EAJL,CAFO,CAAX;EAUAxB,CAAC,CAACC,KAAF,CACImD,IADJ,EAEID,QAFJ,EAGI,gEAHJ;EAMA,IAAIG,IAAI,GAAG5D,OAAO,CAACC,IAAR,CACP,YADO,EAEP;IACIW,OAAO,EAAEA,OADb;IAEIiD,eAAe,EAAE,UAAUC,YAAV,EAAwBH,OAAxB,EAAiC;MAC9CrD,CAAC,CAACC,KAAF,CAAQoD,OAAR,EAAiB/D,IAAI,CAACc,IAAL,CAAUE,OAAV,EAAmB,cAAnB,CAAjB,EAAqD,iDAArD;MACA,IAAIkC,MAAM,GAAGiB,MAAM,CAACD,YAAY,CAACH,OAAD,CAAb,CAAnB;;MACA,IAAI;QACA,OAAOK,IAAI,CAACC,KAAL,CAAWnB,MAAX,CAAP;MACH,CAFD,CAEE,OAAOH,CAAP,EAAU;QACRrC,CAAC,CAACuC,EAAF,CAAKF,CAAC,YAAYuB,WAAlB,EAA+B,kEAA/B;MACH;IACJ;EAVL,CAFO,CAAX;EAgBA5D,CAAC,CAACC,KAAF,CACIqD,IADJ,EAEIH,QAFJ,EAGI,kEAHJ;AAKH,CAxDG,CAAJ"},"metadata":{},"sourceType":"script"}