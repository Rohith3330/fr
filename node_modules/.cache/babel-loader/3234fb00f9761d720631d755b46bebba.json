{"ast":null,"code":"/**\n * @fileoverview Prevent missing React when using JSX\n * @author Glen Mailer\n */\n'use strict';\n\nconst variableUtil = require('../util/variable');\n\nconst pragmaUtil = require('../util/pragma');\n\nconst docsUrl = require('../util/docsUrl');\n\nconst report = require('../util/report'); // -----------------------------------------------------------------------------\n// Rule Definition\n// -----------------------------------------------------------------------------\n\n\nconst messages = {\n  notInScope: '\\'{{name}}\\' must be in scope when using JSX'\n};\nmodule.exports = {\n  meta: {\n    docs: {\n      description: 'Disallow missing React when using JSX',\n      category: 'Possible Errors',\n      recommended: true,\n      url: docsUrl('react-in-jsx-scope')\n    },\n    messages,\n    schema: []\n  },\n\n  create(context) {\n    const pragma = pragmaUtil.getFromContext(context);\n\n    function checkIfReactIsInScope(node) {\n      const variables = variableUtil.variablesInScope(context);\n\n      if (variableUtil.findVariable(variables, pragma)) {\n        return;\n      }\n\n      report(context, messages.notInScope, 'notInScope', {\n        node,\n        data: {\n          name: pragma\n        }\n      });\n    }\n\n    return {\n      JSXOpeningElement: checkIfReactIsInScope,\n      JSXOpeningFragment: checkIfReactIsInScope\n    };\n  }\n\n};","map":{"version":3,"names":["variableUtil","require","pragmaUtil","docsUrl","report","messages","notInScope","module","exports","meta","docs","description","category","recommended","url","schema","create","context","pragma","getFromContext","checkIfReactIsInScope","node","variables","variablesInScope","findVariable","data","name","JSXOpeningElement","JSXOpeningFragment"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/eslint-plugin-react/lib/rules/react-in-jsx-scope.js"],"sourcesContent":["/**\n * @fileoverview Prevent missing React when using JSX\n * @author Glen Mailer\n */\n\n'use strict';\n\nconst variableUtil = require('../util/variable');\nconst pragmaUtil = require('../util/pragma');\nconst docsUrl = require('../util/docsUrl');\nconst report = require('../util/report');\n\n// -----------------------------------------------------------------------------\n// Rule Definition\n// -----------------------------------------------------------------------------\n\nconst messages = {\n  notInScope: '\\'{{name}}\\' must be in scope when using JSX',\n};\n\nmodule.exports = {\n  meta: {\n    docs: {\n      description: 'Disallow missing React when using JSX',\n      category: 'Possible Errors',\n      recommended: true,\n      url: docsUrl('react-in-jsx-scope'),\n    },\n\n    messages,\n\n    schema: [],\n  },\n\n  create(context) {\n    const pragma = pragmaUtil.getFromContext(context);\n\n    function checkIfReactIsInScope(node) {\n      const variables = variableUtil.variablesInScope(context);\n      if (variableUtil.findVariable(variables, pragma)) {\n        return;\n      }\n      report(context, messages.notInScope, 'notInScope', {\n        node,\n        data: {\n          name: pragma,\n        },\n      });\n    }\n\n    return {\n      JSXOpeningElement: checkIfReactIsInScope,\n      JSXOpeningFragment: checkIfReactIsInScope,\n    };\n  },\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;;AAEA,MAAMA,YAAY,GAAGC,OAAO,CAAC,kBAAD,CAA5B;;AACA,MAAMC,UAAU,GAAGD,OAAO,CAAC,gBAAD,CAA1B;;AACA,MAAME,OAAO,GAAGF,OAAO,CAAC,iBAAD,CAAvB;;AACA,MAAMG,MAAM,GAAGH,OAAO,CAAC,gBAAD,CAAtB,C,CAEA;AACA;AACA;;;AAEA,MAAMI,QAAQ,GAAG;EACfC,UAAU,EAAE;AADG,CAAjB;AAIAC,MAAM,CAACC,OAAP,GAAiB;EACfC,IAAI,EAAE;IACJC,IAAI,EAAE;MACJC,WAAW,EAAE,uCADT;MAEJC,QAAQ,EAAE,iBAFN;MAGJC,WAAW,EAAE,IAHT;MAIJC,GAAG,EAAEX,OAAO,CAAC,oBAAD;IAJR,CADF;IAQJE,QARI;IAUJU,MAAM,EAAE;EAVJ,CADS;;EAcfC,MAAM,CAACC,OAAD,EAAU;IACd,MAAMC,MAAM,GAAGhB,UAAU,CAACiB,cAAX,CAA0BF,OAA1B,CAAf;;IAEA,SAASG,qBAAT,CAA+BC,IAA/B,EAAqC;MACnC,MAAMC,SAAS,GAAGtB,YAAY,CAACuB,gBAAb,CAA8BN,OAA9B,CAAlB;;MACA,IAAIjB,YAAY,CAACwB,YAAb,CAA0BF,SAA1B,EAAqCJ,MAArC,CAAJ,EAAkD;QAChD;MACD;;MACDd,MAAM,CAACa,OAAD,EAAUZ,QAAQ,CAACC,UAAnB,EAA+B,YAA/B,EAA6C;QACjDe,IADiD;QAEjDI,IAAI,EAAE;UACJC,IAAI,EAAER;QADF;MAF2C,CAA7C,CAAN;IAMD;;IAED,OAAO;MACLS,iBAAiB,EAAEP,qBADd;MAELQ,kBAAkB,EAAER;IAFf,CAAP;EAID;;AAlCc,CAAjB"},"metadata":{},"sourceType":"script"}