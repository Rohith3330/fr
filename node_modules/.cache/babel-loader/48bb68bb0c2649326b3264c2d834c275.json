{"ast":null,"code":"import * as t from \"@babel/types\";\nexport default function generateValidators() {\n  let output = `/*\n * This file is auto-generated! Do not modify it directly.\n * To re-generate run 'make build'\n */\nimport type * as t from \"@babel/types\";\nimport type NodePath from \"../index\";\nimport type { VirtualTypeNodePathValidators } from \"../lib/virtual-types-validator\";\n\ninterface BaseNodePathValidators {\n`;\n\n  for (const type of [...t.TYPES].sort()) {\n    output += `is${type}<T extends t.Node>(this: NodePath<T>, opts?: object): this is NodePath<T & t.${type}>;`;\n  }\n\n  output += `\n}\n\nexport interface NodePathValidators\n  extends BaseNodePathValidators, VirtualTypeNodePathValidators {}\n`;\n  return output;\n}","map":{"version":3,"names":["t","generateValidators","output","type","TYPES","sort"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/@babel/traverse/scripts/generators/validators.js"],"sourcesContent":["import * as t from \"@babel/types\";\n\nexport default function generateValidators() {\n  let output = `/*\n * This file is auto-generated! Do not modify it directly.\n * To re-generate run 'make build'\n */\nimport type * as t from \"@babel/types\";\nimport type NodePath from \"../index\";\nimport type { VirtualTypeNodePathValidators } from \"../lib/virtual-types-validator\";\n\ninterface BaseNodePathValidators {\n`;\n\n  for (const type of [...t.TYPES].sort()) {\n    output += `is${type}<T extends t.Node>(this: NodePath<T>, opts?: object): this is NodePath<T & t.${type}>;`;\n  }\n\n  output += `\n}\n\nexport interface NodePathValidators\n  extends BaseNodePathValidators, VirtualTypeNodePathValidators {}\n`;\n\n  return output;\n}\n"],"mappings":"AAAA,OAAO,KAAKA,CAAZ,MAAmB,cAAnB;AAEA,eAAe,SAASC,kBAAT,GAA8B;EAC3C,IAAIC,MAAM,GAAI;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATE;;EAWA,KAAK,MAAMC,IAAX,IAAmB,CAAC,GAAGH,CAAC,CAACI,KAAN,EAAaC,IAAb,EAAnB,EAAwC;IACtCH,MAAM,IAAK,KAAIC,IAAK,gFAA+EA,IAAK,IAAxG;EACD;;EAEDD,MAAM,IAAK;AACb;AACA;AACA;AACA;AACA,CALE;EAOA,OAAOA,MAAP;AACD"},"metadata":{},"sourceType":"module"}