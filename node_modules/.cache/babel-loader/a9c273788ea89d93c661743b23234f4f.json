{"ast":null,"code":"/**\n * Parse a path string into an array of path segments.\n *\n * Square bracket notation `a[b]` may be used to \"escape\" dots that would otherwise be interpreted as path separators.\n *\n * Example:\n * a -> ['a']\n * a.b.c -> ['a', 'b', 'c']\n * a[b].c -> ['a', 'b', 'c']\n * a[b.c].e.f -> ['a', 'b.c', 'e', 'f']\n * a[b][c][d] -> ['a', 'b', 'c', 'd']\n *\n * @param {string|string[]} path\n **/\nexport function toPath(path) {\n  if (Array.isArray(path)) return path;\n  let openBrackets = path.split('[').length - 1;\n  let closedBrackets = path.split(']').length - 1;\n\n  if (openBrackets !== closedBrackets) {\n    throw new Error(`Path is invalid. Has unbalanced brackets: ${path}`);\n  }\n\n  return path.split(/\\.(?![^\\[]*\\])|[\\[\\]]/g).filter(Boolean);\n}","map":{"version":3,"names":["toPath","path","Array","isArray","openBrackets","split","length","closedBrackets","Error","filter","Boolean"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/tailwindcss/src/util/toPath.js"],"sourcesContent":["/**\n * Parse a path string into an array of path segments.\n *\n * Square bracket notation `a[b]` may be used to \"escape\" dots that would otherwise be interpreted as path separators.\n *\n * Example:\n * a -> ['a']\n * a.b.c -> ['a', 'b', 'c']\n * a[b].c -> ['a', 'b', 'c']\n * a[b.c].e.f -> ['a', 'b.c', 'e', 'f']\n * a[b][c][d] -> ['a', 'b', 'c', 'd']\n *\n * @param {string|string[]} path\n **/\nexport function toPath(path) {\n  if (Array.isArray(path)) return path\n\n  let openBrackets = path.split('[').length - 1\n  let closedBrackets = path.split(']').length - 1\n\n  if (openBrackets !== closedBrackets) {\n    throw new Error(`Path is invalid. Has unbalanced brackets: ${path}`)\n  }\n\n  return path.split(/\\.(?![^\\[]*\\])|[\\[\\]]/g).filter(Boolean)\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,MAAT,CAAgBC,IAAhB,EAAsB;EAC3B,IAAIC,KAAK,CAACC,OAAN,CAAcF,IAAd,CAAJ,EAAyB,OAAOA,IAAP;EAEzB,IAAIG,YAAY,GAAGH,IAAI,CAACI,KAAL,CAAW,GAAX,EAAgBC,MAAhB,GAAyB,CAA5C;EACA,IAAIC,cAAc,GAAGN,IAAI,CAACI,KAAL,CAAW,GAAX,EAAgBC,MAAhB,GAAyB,CAA9C;;EAEA,IAAIF,YAAY,KAAKG,cAArB,EAAqC;IACnC,MAAM,IAAIC,KAAJ,CAAW,6CAA4CP,IAAK,EAA5D,CAAN;EACD;;EAED,OAAOA,IAAI,CAACI,KAAL,CAAW,wBAAX,EAAqCI,MAArC,CAA4CC,OAA5C,CAAP;AACD"},"metadata":{},"sourceType":"module"}