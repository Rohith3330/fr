{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.LinkListIterator = exports.LinkNode = void 0;\n\nconst index_1 = __importDefault(require(\"./Base/index\"));\n\nconst checkParams_1 = require(\"../../utils/checkParams\");\n\nconst index_2 = require(\"../ContainerBase/index\");\n\nclass LinkNode {\n  constructor(element) {\n    this.value = undefined;\n    this.pre = undefined;\n    this.next = undefined;\n    this.value = element;\n  }\n\n}\n\nexports.LinkNode = LinkNode;\n\nclass LinkListIterator extends index_2.ContainerIterator {\n  constructor(node, header, iteratorType) {\n    super(iteratorType);\n    this.node = node;\n    this.header = header;\n\n    if (this.iteratorType === index_2.ContainerIterator.NORMAL) {\n      this.pre = function () {\n        if (this.node.pre === this.header) {\n          throw new RangeError('LinkList iterator access denied!');\n        }\n\n        this.node = this.node.pre;\n        return this;\n      };\n\n      this.next = function () {\n        if (this.node === this.header) {\n          throw new RangeError('LinkList iterator access denied!');\n        }\n\n        this.node = this.node.next;\n        return this;\n      };\n    } else {\n      this.pre = function () {\n        if (this.node.next === this.header) {\n          throw new RangeError('LinkList iterator access denied!');\n        }\n\n        this.node = this.node.next;\n        return this;\n      };\n\n      this.next = function () {\n        if (this.node === this.header) {\n          throw new RangeError('LinkList iterator access denied!');\n        }\n\n        this.node = this.node.pre;\n        return this;\n      };\n    }\n  }\n\n  get pointer() {\n    if (this.node === this.header) {\n      throw new RangeError('LinkList iterator access denied!');\n    }\n\n    return this.node.value;\n  }\n\n  set pointer(newValue) {\n    if (this.node === this.header) {\n      throw new RangeError('LinkList iterator access denied!');\n    }\n\n    this.node.value = newValue;\n  }\n\n  equals(obj) {\n    return this.node === obj.node;\n  }\n\n  copy() {\n    return new LinkListIterator(this.node, this.header, this.iteratorType);\n  }\n\n}\n\nexports.LinkListIterator = LinkListIterator;\n\nclass LinkList extends index_1.default {\n  constructor() {\n    let container = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    super();\n    this.header = new LinkNode();\n    this.head = undefined;\n    this.tail = undefined;\n    container.forEach(element => this.pushBack(element));\n  }\n\n  clear() {\n    this.length = 0;\n    this.head = this.tail = undefined;\n    this.header.pre = this.header.next = undefined;\n  }\n\n  begin() {\n    return new LinkListIterator(this.head || this.header, this.header);\n  }\n\n  end() {\n    return new LinkListIterator(this.header, this.header);\n  }\n\n  rBegin() {\n    return new LinkListIterator(this.tail || this.header, this.header, index_2.ContainerIterator.REVERSE);\n  }\n\n  rEnd() {\n    return new LinkListIterator(this.header, this.header, index_2.ContainerIterator.REVERSE);\n  }\n\n  front() {\n    return this.head ? this.head.value : undefined;\n  }\n\n  back() {\n    return this.tail ? this.tail.value : undefined;\n  }\n\n  forEach(callback) {\n    if (!this.length) return;\n    let curNode = this.head;\n    let index = 0;\n\n    while (curNode !== this.header) {\n      callback(curNode.value, index++);\n      curNode = curNode.next;\n    }\n  }\n\n  getElementByPos(pos) {\n    (0, checkParams_1.checkWithinAccessParams)(pos, 0, this.length - 1);\n    let curNode = this.head;\n\n    while (pos--) {\n      curNode = curNode.next;\n    }\n\n    return curNode.value;\n  }\n\n  eraseElementByPos(pos) {\n    (0, checkParams_1.checkWithinAccessParams)(pos, 0, this.length - 1);\n    if (pos === 0) this.popFront();else if (pos === this.length - 1) this.popBack();else {\n      let curNode = this.head;\n\n      while (pos--) {\n        curNode = curNode.next;\n      }\n\n      curNode = curNode;\n      const pre = curNode.pre;\n      const next = curNode.next;\n      next.pre = pre;\n      pre.next = next;\n      this.length -= 1;\n    }\n  }\n\n  eraseElementByValue(value) {\n    while (this.head && this.head.value === value) this.popFront();\n\n    while (this.tail && this.tail.value === value) this.popBack();\n\n    if (!this.head) return;\n    let curNode = this.head;\n\n    while (curNode !== this.header) {\n      if (curNode.value === value) {\n        const pre = curNode.pre;\n        const next = curNode.next;\n        if (next) next.pre = pre;\n        if (pre) pre.next = next;\n        this.length -= 1;\n      }\n\n      curNode = curNode.next;\n    }\n  }\n\n  eraseElementByIterator(iter) {\n    // @ts-ignore\n    const node = iter.node;\n\n    if (node === this.header) {\n      throw new RangeError('Invalid iterator');\n    }\n\n    iter = iter.next();\n    if (this.head === node) this.popFront();else if (this.tail === node) this.popBack();else {\n      const pre = node.pre;\n      const next = node.next;\n      if (next) next.pre = pre;\n      if (pre) pre.next = next;\n      this.length -= 1;\n    }\n    return iter;\n  }\n\n  pushBack(element) {\n    this.length += 1;\n    const newTail = new LinkNode(element);\n\n    if (!this.tail) {\n      this.head = this.tail = newTail;\n      this.header.next = this.head;\n      this.head.pre = this.header;\n    } else {\n      this.tail.next = newTail;\n      newTail.pre = this.tail;\n      this.tail = newTail;\n    }\n\n    this.tail.next = this.header;\n    this.header.pre = this.tail;\n  }\n\n  popBack() {\n    if (!this.tail) return;\n    this.length -= 1;\n\n    if (this.head === this.tail) {\n      this.head = this.tail = undefined;\n      this.header.next = undefined;\n    } else {\n      this.tail = this.tail.pre;\n      if (this.tail) this.tail.next = undefined;\n    }\n\n    this.header.pre = this.tail;\n    if (this.tail) this.tail.next = this.header;\n  }\n\n  setElementByPos(pos, element) {\n    (0, checkParams_1.checkWithinAccessParams)(pos, 0, this.length - 1);\n    let curNode = this.head;\n\n    while (pos--) {\n      curNode = curNode.next;\n    }\n\n    curNode.value = element;\n  }\n\n  insert(pos, element) {\n    let num = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n    (0, checkParams_1.checkWithinAccessParams)(pos, 0, this.length);\n    if (num <= 0) return;\n\n    if (pos === 0) {\n      while (num--) this.pushFront(element);\n    } else if (pos === this.length) {\n      while (num--) this.pushBack(element);\n    } else {\n      let curNode = this.head;\n\n      for (let i = 1; i < pos; ++i) {\n        curNode = curNode.next;\n      }\n\n      const next = curNode.next;\n      this.length += num;\n\n      while (num--) {\n        curNode.next = new LinkNode(element);\n        curNode.next.pre = curNode;\n        curNode = curNode.next;\n      }\n\n      curNode.next = next;\n      if (next) next.pre = curNode;\n    }\n  }\n\n  find(element) {\n    if (!this.head) return this.end();\n    let curNode = this.head;\n\n    while (curNode !== this.header) {\n      if (curNode.value === element) {\n        return new LinkListIterator(curNode, this.header);\n      }\n\n      curNode = curNode.next;\n    }\n\n    return this.end();\n  }\n\n  reverse() {\n    if (this.length <= 1) return;\n    let pHead = this.head;\n    let pTail = this.tail;\n    let cnt = 0;\n\n    while (cnt << 1 < this.length) {\n      const tmp = pHead.value;\n      pHead.value = pTail.value;\n      pTail.value = tmp;\n      pHead = pHead.next;\n      pTail = pTail.pre;\n      cnt += 1;\n    }\n  }\n\n  unique() {\n    if (this.length <= 1) return;\n    let curNode = this.head;\n\n    while (curNode !== this.header) {\n      let tmpNode = curNode;\n\n      while (tmpNode.next && tmpNode.value === tmpNode.next.value) {\n        tmpNode = tmpNode.next;\n        this.length -= 1;\n      }\n\n      curNode.next = tmpNode.next;\n      if (curNode.next) curNode.next.pre = curNode;\n      curNode = curNode.next;\n    }\n  }\n\n  sort(cmp) {\n    if (this.length <= 1) return;\n    const arr = [];\n    this.forEach(element => arr.push(element));\n    arr.sort(cmp);\n    let curNode = this.head;\n    arr.forEach(element => {\n      curNode.value = element;\n      curNode = curNode.next;\n    });\n  }\n  /**\n   * @description Push an element to the front.\n   * @param element The element you want to push.\n   */\n\n\n  pushFront(element) {\n    this.length += 1;\n    const newHead = new LinkNode(element);\n\n    if (!this.head) {\n      this.head = this.tail = newHead;\n      this.tail.next = this.header;\n      this.header.pre = this.tail;\n    } else {\n      newHead.next = this.head;\n      this.head.pre = newHead;\n      this.head = newHead;\n    }\n\n    this.header.next = this.head;\n    this.head.pre = this.header;\n  }\n  /**\n   * @description Removes the first element.\n   */\n\n\n  popFront() {\n    if (!this.head) return;\n    this.length -= 1;\n\n    if (this.head === this.tail) {\n      this.head = this.tail = undefined;\n      this.header.pre = this.tail;\n    } else {\n      this.head = this.head.next;\n      if (this.head) this.head.pre = this.header;\n    }\n\n    this.header.next = this.head;\n  }\n  /**\n   * @description Merges two sorted lists.\n   * @param list The other list you want to merge (must be sorted).\n   */\n\n\n  merge(list) {\n    if (!this.head) {\n      list.forEach(element => this.pushBack(element));\n      return;\n    }\n\n    let curNode = this.head;\n    list.forEach(element => {\n      while (curNode && curNode !== this.header && curNode.value <= element) {\n        curNode = curNode.next;\n      }\n\n      if (curNode === this.header) {\n        this.pushBack(element);\n        curNode = this.tail;\n      } else if (curNode === this.head) {\n        this.pushFront(element);\n        curNode = this.head;\n      } else {\n        this.length += 1;\n        const pre = curNode.pre;\n        pre.next = new LinkNode(element);\n        pre.next.pre = pre;\n        pre.next.next = curNode;\n        curNode.pre = pre.next;\n      }\n    });\n  }\n\n  [Symbol.iterator]() {\n    return function* () {\n      if (!this.head) return;\n      let curNode = this.head;\n\n      while (curNode !== this.header) {\n        yield curNode.value;\n        curNode = curNode.next;\n      }\n    }.bind(this)();\n  }\n\n}\n\nexports.default = LinkList;","map":{"version":3,"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","LinkListIterator","LinkNode","index_1","require","checkParams_1","index_2","constructor","element","undefined","pre","next","ContainerIterator","node","header","iteratorType","NORMAL","RangeError","pointer","newValue","equals","obj","copy","LinkList","default","container","head","tail","forEach","pushBack","clear","length","begin","end","rBegin","REVERSE","rEnd","front","back","callback","curNode","index","getElementByPos","pos","checkWithinAccessParams","eraseElementByPos","popFront","popBack","eraseElementByValue","eraseElementByIterator","iter","newTail","setElementByPos","insert","num","pushFront","i","find","reverse","pHead","pTail","cnt","tmp","unique","tmpNode","sort","cmp","arr","push","newHead","merge","list","Symbol","iterator","bind"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/js-sdsl/dist/cjs/container/SequentialContainer/LinkList.js"],"sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LinkListIterator = exports.LinkNode = void 0;\nconst index_1 = __importDefault(require(\"./Base/index\"));\nconst checkParams_1 = require(\"../../utils/checkParams\");\nconst index_2 = require(\"../ContainerBase/index\");\nclass LinkNode {\n    constructor(element) {\n        this.value = undefined;\n        this.pre = undefined;\n        this.next = undefined;\n        this.value = element;\n    }\n}\nexports.LinkNode = LinkNode;\nclass LinkListIterator extends index_2.ContainerIterator {\n    constructor(node, header, iteratorType) {\n        super(iteratorType);\n        this.node = node;\n        this.header = header;\n        if (this.iteratorType === index_2.ContainerIterator.NORMAL) {\n            this.pre = function () {\n                if (this.node.pre === this.header) {\n                    throw new RangeError('LinkList iterator access denied!');\n                }\n                this.node = this.node.pre;\n                return this;\n            };\n            this.next = function () {\n                if (this.node === this.header) {\n                    throw new RangeError('LinkList iterator access denied!');\n                }\n                this.node = this.node.next;\n                return this;\n            };\n        }\n        else {\n            this.pre = function () {\n                if (this.node.next === this.header) {\n                    throw new RangeError('LinkList iterator access denied!');\n                }\n                this.node = this.node.next;\n                return this;\n            };\n            this.next = function () {\n                if (this.node === this.header) {\n                    throw new RangeError('LinkList iterator access denied!');\n                }\n                this.node = this.node.pre;\n                return this;\n            };\n        }\n    }\n    get pointer() {\n        if (this.node === this.header) {\n            throw new RangeError('LinkList iterator access denied!');\n        }\n        return this.node.value;\n    }\n    set pointer(newValue) {\n        if (this.node === this.header) {\n            throw new RangeError('LinkList iterator access denied!');\n        }\n        this.node.value = newValue;\n    }\n    equals(obj) {\n        return this.node === obj.node;\n    }\n    copy() {\n        return new LinkListIterator(this.node, this.header, this.iteratorType);\n    }\n}\nexports.LinkListIterator = LinkListIterator;\nclass LinkList extends index_1.default {\n    constructor(container = []) {\n        super();\n        this.header = new LinkNode();\n        this.head = undefined;\n        this.tail = undefined;\n        container.forEach(element => this.pushBack(element));\n    }\n    clear() {\n        this.length = 0;\n        this.head = this.tail = undefined;\n        this.header.pre = this.header.next = undefined;\n    }\n    begin() {\n        return new LinkListIterator(this.head || this.header, this.header);\n    }\n    end() {\n        return new LinkListIterator(this.header, this.header);\n    }\n    rBegin() {\n        return new LinkListIterator(this.tail || this.header, this.header, index_2.ContainerIterator.REVERSE);\n    }\n    rEnd() {\n        return new LinkListIterator(this.header, this.header, index_2.ContainerIterator.REVERSE);\n    }\n    front() {\n        return this.head ? this.head.value : undefined;\n    }\n    back() {\n        return this.tail ? this.tail.value : undefined;\n    }\n    forEach(callback) {\n        if (!this.length)\n            return;\n        let curNode = this.head;\n        let index = 0;\n        while (curNode !== this.header) {\n            callback(curNode.value, index++);\n            curNode = curNode.next;\n        }\n    }\n    getElementByPos(pos) {\n        (0, checkParams_1.checkWithinAccessParams)(pos, 0, this.length - 1);\n        let curNode = this.head;\n        while (pos--) {\n            curNode = curNode.next;\n        }\n        return curNode.value;\n    }\n    eraseElementByPos(pos) {\n        (0, checkParams_1.checkWithinAccessParams)(pos, 0, this.length - 1);\n        if (pos === 0)\n            this.popFront();\n        else if (pos === this.length - 1)\n            this.popBack();\n        else {\n            let curNode = this.head;\n            while (pos--) {\n                curNode = curNode.next;\n            }\n            curNode = curNode;\n            const pre = curNode.pre;\n            const next = curNode.next;\n            next.pre = pre;\n            pre.next = next;\n            this.length -= 1;\n        }\n    }\n    eraseElementByValue(value) {\n        while (this.head && this.head.value === value)\n            this.popFront();\n        while (this.tail && this.tail.value === value)\n            this.popBack();\n        if (!this.head)\n            return;\n        let curNode = this.head;\n        while (curNode !== this.header) {\n            if (curNode.value === value) {\n                const pre = curNode.pre;\n                const next = curNode.next;\n                if (next)\n                    next.pre = pre;\n                if (pre)\n                    pre.next = next;\n                this.length -= 1;\n            }\n            curNode = curNode.next;\n        }\n    }\n    eraseElementByIterator(iter) {\n        // @ts-ignore\n        const node = iter.node;\n        if (node === this.header) {\n            throw new RangeError('Invalid iterator');\n        }\n        iter = iter.next();\n        if (this.head === node)\n            this.popFront();\n        else if (this.tail === node)\n            this.popBack();\n        else {\n            const pre = node.pre;\n            const next = node.next;\n            if (next)\n                next.pre = pre;\n            if (pre)\n                pre.next = next;\n            this.length -= 1;\n        }\n        return iter;\n    }\n    pushBack(element) {\n        this.length += 1;\n        const newTail = new LinkNode(element);\n        if (!this.tail) {\n            this.head = this.tail = newTail;\n            this.header.next = this.head;\n            this.head.pre = this.header;\n        }\n        else {\n            this.tail.next = newTail;\n            newTail.pre = this.tail;\n            this.tail = newTail;\n        }\n        this.tail.next = this.header;\n        this.header.pre = this.tail;\n    }\n    popBack() {\n        if (!this.tail)\n            return;\n        this.length -= 1;\n        if (this.head === this.tail) {\n            this.head = this.tail = undefined;\n            this.header.next = undefined;\n        }\n        else {\n            this.tail = this.tail.pre;\n            if (this.tail)\n                this.tail.next = undefined;\n        }\n        this.header.pre = this.tail;\n        if (this.tail)\n            this.tail.next = this.header;\n    }\n    setElementByPos(pos, element) {\n        (0, checkParams_1.checkWithinAccessParams)(pos, 0, this.length - 1);\n        let curNode = this.head;\n        while (pos--) {\n            curNode = curNode.next;\n        }\n        curNode.value = element;\n    }\n    insert(pos, element, num = 1) {\n        (0, checkParams_1.checkWithinAccessParams)(pos, 0, this.length);\n        if (num <= 0)\n            return;\n        if (pos === 0) {\n            while (num--)\n                this.pushFront(element);\n        }\n        else if (pos === this.length) {\n            while (num--)\n                this.pushBack(element);\n        }\n        else {\n            let curNode = this.head;\n            for (let i = 1; i < pos; ++i) {\n                curNode = curNode.next;\n            }\n            const next = curNode.next;\n            this.length += num;\n            while (num--) {\n                curNode.next = new LinkNode(element);\n                curNode.next.pre = curNode;\n                curNode = curNode.next;\n            }\n            curNode.next = next;\n            if (next)\n                next.pre = curNode;\n        }\n    }\n    find(element) {\n        if (!this.head)\n            return this.end();\n        let curNode = this.head;\n        while (curNode !== this.header) {\n            if (curNode.value === element) {\n                return new LinkListIterator(curNode, this.header);\n            }\n            curNode = curNode.next;\n        }\n        return this.end();\n    }\n    reverse() {\n        if (this.length <= 1)\n            return;\n        let pHead = this.head;\n        let pTail = this.tail;\n        let cnt = 0;\n        while ((cnt << 1) < this.length) {\n            const tmp = pHead.value;\n            pHead.value = pTail.value;\n            pTail.value = tmp;\n            pHead = pHead.next;\n            pTail = pTail.pre;\n            cnt += 1;\n        }\n    }\n    unique() {\n        if (this.length <= 1)\n            return;\n        let curNode = this.head;\n        while (curNode !== this.header) {\n            let tmpNode = curNode;\n            while (tmpNode.next && tmpNode.value === tmpNode.next.value) {\n                tmpNode = tmpNode.next;\n                this.length -= 1;\n            }\n            curNode.next = tmpNode.next;\n            if (curNode.next)\n                curNode.next.pre = curNode;\n            curNode = curNode.next;\n        }\n    }\n    sort(cmp) {\n        if (this.length <= 1)\n            return;\n        const arr = [];\n        this.forEach(element => arr.push(element));\n        arr.sort(cmp);\n        let curNode = this.head;\n        arr.forEach((element) => {\n            curNode.value = element;\n            curNode = curNode.next;\n        });\n    }\n    /**\n     * @description Push an element to the front.\n     * @param element The element you want to push.\n     */\n    pushFront(element) {\n        this.length += 1;\n        const newHead = new LinkNode(element);\n        if (!this.head) {\n            this.head = this.tail = newHead;\n            this.tail.next = this.header;\n            this.header.pre = this.tail;\n        }\n        else {\n            newHead.next = this.head;\n            this.head.pre = newHead;\n            this.head = newHead;\n        }\n        this.header.next = this.head;\n        this.head.pre = this.header;\n    }\n    /**\n     * @description Removes the first element.\n     */\n    popFront() {\n        if (!this.head)\n            return;\n        this.length -= 1;\n        if (this.head === this.tail) {\n            this.head = this.tail = undefined;\n            this.header.pre = this.tail;\n        }\n        else {\n            this.head = this.head.next;\n            if (this.head)\n                this.head.pre = this.header;\n        }\n        this.header.next = this.head;\n    }\n    /**\n     * @description Merges two sorted lists.\n     * @param list The other list you want to merge (must be sorted).\n     */\n    merge(list) {\n        if (!this.head) {\n            list.forEach(element => this.pushBack(element));\n            return;\n        }\n        let curNode = this.head;\n        list.forEach(element => {\n            while (curNode &&\n                curNode !== this.header &&\n                curNode.value <= element) {\n                curNode = curNode.next;\n            }\n            if (curNode === this.header) {\n                this.pushBack(element);\n                curNode = this.tail;\n            }\n            else if (curNode === this.head) {\n                this.pushFront(element);\n                curNode = this.head;\n            }\n            else {\n                this.length += 1;\n                const pre = curNode.pre;\n                pre.next = new LinkNode(element);\n                pre.next.pre = pre;\n                pre.next.next = curNode;\n                curNode.pre = pre.next;\n            }\n        });\n    }\n    [Symbol.iterator]() {\n        return function* () {\n            if (!this.head)\n                return;\n            let curNode = this.head;\n            while (curNode !== this.header) {\n                yield curNode.value;\n                curNode = curNode.next;\n            }\n        }.bind(this)();\n    }\n}\nexports.default = LinkList;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}