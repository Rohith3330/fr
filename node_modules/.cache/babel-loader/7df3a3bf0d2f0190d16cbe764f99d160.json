{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nfunction getTypeScriptPerformance(typescript) {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return typescript.performance;\n}\n\nfunction connectTypeScriptPerformance(typescript, performance) {\n  const typeScriptPerformance = getTypeScriptPerformance(typescript);\n\n  if (typeScriptPerformance) {\n    const {\n      mark,\n      measure\n    } = typeScriptPerformance;\n    const {\n      enable,\n      disable\n    } = performance;\n\n    typeScriptPerformance.mark = name => {\n      mark(name);\n      performance.mark(name);\n    };\n\n    typeScriptPerformance.measure = (name, startMark, endMark) => {\n      measure(name, startMark, endMark);\n      performance.measure(name, startMark, endMark);\n    };\n\n    return Object.assign(Object.assign({}, performance), {\n      enable() {\n        enable();\n        typeScriptPerformance.enable();\n      },\n\n      disable() {\n        disable();\n        typeScriptPerformance.disable();\n      }\n\n    });\n  } else {\n    return performance;\n  }\n}\n\nexports.connectTypeScriptPerformance = connectTypeScriptPerformance;","map":{"version":3,"names":["Object","defineProperty","exports","value","getTypeScriptPerformance","typescript","performance","connectTypeScriptPerformance","typeScriptPerformance","mark","measure","enable","disable","name","startMark","endMark","assign"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/fork-ts-checker-webpack-plugin/lib/typescript-reporter/profile/TypeScriptPerformance.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction getTypeScriptPerformance(typescript) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return typescript.performance;\n}\nfunction connectTypeScriptPerformance(typescript, performance) {\n    const typeScriptPerformance = getTypeScriptPerformance(typescript);\n    if (typeScriptPerformance) {\n        const { mark, measure } = typeScriptPerformance;\n        const { enable, disable } = performance;\n        typeScriptPerformance.mark = (name) => {\n            mark(name);\n            performance.mark(name);\n        };\n        typeScriptPerformance.measure = (name, startMark, endMark) => {\n            measure(name, startMark, endMark);\n            performance.measure(name, startMark, endMark);\n        };\n        return Object.assign(Object.assign({}, performance), { enable() {\n                enable();\n                typeScriptPerformance.enable();\n            },\n            disable() {\n                disable();\n                typeScriptPerformance.disable();\n            } });\n    }\n    else {\n        return performance;\n    }\n}\nexports.connectTypeScriptPerformance = connectTypeScriptPerformance;\n"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;;AACA,SAASC,wBAAT,CAAkCC,UAAlC,EAA8C;EAC1C;EACA,OAAOA,UAAU,CAACC,WAAlB;AACH;;AACD,SAASC,4BAAT,CAAsCF,UAAtC,EAAkDC,WAAlD,EAA+D;EAC3D,MAAME,qBAAqB,GAAGJ,wBAAwB,CAACC,UAAD,CAAtD;;EACA,IAAIG,qBAAJ,EAA2B;IACvB,MAAM;MAAEC,IAAF;MAAQC;IAAR,IAAoBF,qBAA1B;IACA,MAAM;MAAEG,MAAF;MAAUC;IAAV,IAAsBN,WAA5B;;IACAE,qBAAqB,CAACC,IAAtB,GAA8BI,IAAD,IAAU;MACnCJ,IAAI,CAACI,IAAD,CAAJ;MACAP,WAAW,CAACG,IAAZ,CAAiBI,IAAjB;IACH,CAHD;;IAIAL,qBAAqB,CAACE,OAAtB,GAAgC,CAACG,IAAD,EAAOC,SAAP,EAAkBC,OAAlB,KAA8B;MAC1DL,OAAO,CAACG,IAAD,EAAOC,SAAP,EAAkBC,OAAlB,CAAP;MACAT,WAAW,CAACI,OAAZ,CAAoBG,IAApB,EAA0BC,SAA1B,EAAqCC,OAArC;IACH,CAHD;;IAIA,OAAOf,MAAM,CAACgB,MAAP,CAAchB,MAAM,CAACgB,MAAP,CAAc,EAAd,EAAkBV,WAAlB,CAAd,EAA8C;MAAEK,MAAM,GAAG;QACxDA,MAAM;QACNH,qBAAqB,CAACG,MAAtB;MACH,CAHgD;;MAIjDC,OAAO,GAAG;QACNA,OAAO;QACPJ,qBAAqB,CAACI,OAAtB;MACH;;IAPgD,CAA9C,CAAP;EAQH,CAnBD,MAoBK;IACD,OAAON,WAAP;EACH;AACJ;;AACDJ,OAAO,CAACK,4BAAR,GAAuCA,4BAAvC"},"metadata":{},"sourceType":"script"}