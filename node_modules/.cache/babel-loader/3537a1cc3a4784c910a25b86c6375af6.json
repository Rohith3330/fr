{"ast":null,"code":"var express = require(\"express\");\n\nvar dotenv = require(\"dotenv\");\n\nvar bodyparser = require(\"body-parser\");\n\nvar connectDB = require(\"./config/db\");\n\nvar userRoutes = require('./routes/userroute');\n\nvar _require = require(\"./middleware/errorMiddleware\"),\n    notFound = _require.notFound,\n    errorHandler = _require.errorHandler;\n\nvar multer = require('multer');\n\nvar app = express(); // app.use(bodyparser.urlencoded({extended:true}));\n// app.set(\"view engine\",\"ejs\");\n\napp.use(express.json());\ndotenv.config();\nconnectDB();\napp.get('/', function (req, res) {\n  res.send(\"api is running\");\n});\napp.use(express.json());\n\nvar cors = require('cors');\n\napp.use(cors({\n  credentials: false,\n  origin: 'http://localhost:3000'\n}));\napp.use('/api/users', userRoutes);\napp.use(notFound);\napp.use(errorHandler);\nvar PORT = process.env.PORT || 4000;\napp.listen(PORT, console.log('Index stared on port ' + PORT));","map":{"version":3,"names":["express","require","dotenv","bodyparser","connectDB","userRoutes","notFound","errorHandler","multer","app","use","json","config","get","req","res","send","cors","credentials","origin","PORT","process","env","listen","console","log"],"sources":["C:/Users/Rohith/mern/backend/server.js"],"sourcesContent":["const express=require(\"express\");\r\n\r\nconst dotenv=require(\"dotenv\");\r\n\r\nconst bodyparser=require(\"body-parser\");\r\n\r\nconst connectDB=require(\"./config/db\");\r\n\r\nconst userRoutes =require('./routes/userroute');\r\nconst { notFound, errorHandler } = require(\"./middleware/errorMiddleware\");\r\nconst multer = require('multer');\r\nconst app=express();\r\n// app.use(bodyparser.urlencoded({extended:true}));\r\n// app.set(\"view engine\",\"ejs\");\r\napp.use(express.json());\r\ndotenv.config();\r\nconnectDB();\r\napp.get('/',(req,res)=>{\r\n    res.send(\"api is running\");\r\n});\r\napp.use(express.json());\r\nvar cors = require('cors');\r\napp.use(cors({credentials: false, origin: 'http://localhost:3000'}));\r\napp.use('/api/users',userRoutes);\r\napp.use(notFound);\r\napp.use(errorHandler);\r\nconst PORT=process.env.PORT || 4000\r\n\r\napp.listen(PORT,console.log('Index stared on port '+PORT));"],"mappings":"AAAA,IAAMA,OAAO,GAACC,OAAO,CAAC,SAAD,CAArB;;AAEA,IAAMC,MAAM,GAACD,OAAO,CAAC,QAAD,CAApB;;AAEA,IAAME,UAAU,GAACF,OAAO,CAAC,aAAD,CAAxB;;AAEA,IAAMG,SAAS,GAACH,OAAO,CAAC,aAAD,CAAvB;;AAEA,IAAMI,UAAU,GAAEJ,OAAO,CAAC,oBAAD,CAAzB;;AACA,eAAmCA,OAAO,CAAC,8BAAD,CAA1C;AAAA,IAAQK,QAAR,YAAQA,QAAR;AAAA,IAAkBC,YAAlB,YAAkBA,YAAlB;;AACA,IAAMC,MAAM,GAAGP,OAAO,CAAC,QAAD,CAAtB;;AACA,IAAMQ,GAAG,GAACT,OAAO,EAAjB,C,CACA;AACA;;AACAS,GAAG,CAACC,GAAJ,CAAQV,OAAO,CAACW,IAAR,EAAR;AACAT,MAAM,CAACU,MAAP;AACAR,SAAS;AACTK,GAAG,CAACI,GAAJ,CAAQ,GAAR,EAAY,UAACC,GAAD,EAAKC,GAAL,EAAW;EACnBA,GAAG,CAACC,IAAJ,CAAS,gBAAT;AACH,CAFD;AAGAP,GAAG,CAACC,GAAJ,CAAQV,OAAO,CAACW,IAAR,EAAR;;AACA,IAAIM,IAAI,GAAGhB,OAAO,CAAC,MAAD,CAAlB;;AACAQ,GAAG,CAACC,GAAJ,CAAQO,IAAI,CAAC;EAACC,WAAW,EAAE,KAAd;EAAqBC,MAAM,EAAE;AAA7B,CAAD,CAAZ;AACAV,GAAG,CAACC,GAAJ,CAAQ,YAAR,EAAqBL,UAArB;AACAI,GAAG,CAACC,GAAJ,CAAQJ,QAAR;AACAG,GAAG,CAACC,GAAJ,CAAQH,YAAR;AACA,IAAMa,IAAI,GAACC,OAAO,CAACC,GAAR,CAAYF,IAAZ,IAAoB,IAA/B;AAEAX,GAAG,CAACc,MAAJ,CAAWH,IAAX,EAAgBI,OAAO,CAACC,GAAR,CAAY,0BAAwBL,IAApC,CAAhB"},"metadata":{},"sourceType":"script"}