{"ast":null,"code":"/**\n * Returns the name of the prop given the JSXAttribute object.\n */\nexport default function propName() {\n  let prop = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  if (!prop.type || prop.type !== 'JSXAttribute') {\n    throw new Error('The prop must be a JSXAttribute collected by the AST parser.');\n  }\n\n  if (prop.name.type === 'JSXNamespacedName') {\n    return `${prop.name.namespace.name}:${prop.name.name.name}`;\n  }\n\n  return prop.name.name;\n}","map":{"version":3,"names":["propName","prop","type","Error","name","namespace"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/jsx-ast-utils/src/propName.js"],"sourcesContent":["/**\n * Returns the name of the prop given the JSXAttribute object.\n */\nexport default function propName(prop = {}) {\n  if (!prop.type || prop.type !== 'JSXAttribute') {\n    throw new Error('The prop must be a JSXAttribute collected by the AST parser.');\n  }\n\n  if (prop.name.type === 'JSXNamespacedName') {\n    return `${prop.name.namespace.name}:${prop.name.name.name}`;\n  }\n\n  return prop.name.name;\n}\n"],"mappings":"AAAA;AACA;AACA;AACA,eAAe,SAASA,QAAT,GAA6B;EAAA,IAAXC,IAAW,uEAAJ,EAAI;;EAC1C,IAAI,CAACA,IAAI,CAACC,IAAN,IAAcD,IAAI,CAACC,IAAL,KAAc,cAAhC,EAAgD;IAC9C,MAAM,IAAIC,KAAJ,CAAU,8DAAV,CAAN;EACD;;EAED,IAAIF,IAAI,CAACG,IAAL,CAAUF,IAAV,KAAmB,mBAAvB,EAA4C;IAC1C,OAAQ,GAAED,IAAI,CAACG,IAAL,CAAUC,SAAV,CAAoBD,IAAK,IAAGH,IAAI,CAACG,IAAL,CAAUA,IAAV,CAAeA,IAAK,EAA1D;EACD;;EAED,OAAOH,IAAI,CAACG,IAAL,CAAUA,IAAjB;AACD"},"metadata":{},"sourceType":"module"}