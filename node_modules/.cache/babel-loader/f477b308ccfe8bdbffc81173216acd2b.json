{"ast":null,"code":"/**\n * font variant convertion map\n *\n * @type {Object}\n */\nconst fontVariantProperties = {\n  \"font-variant-ligatures\": {\n    \"common-ligatures\": \"\\\"liga\\\", \\\"clig\\\"\",\n    \"no-common-ligatures\": \"\\\"liga\\\", \\\"clig off\\\"\",\n    \"discretionary-ligatures\": \"\\\"dlig\\\"\",\n    \"no-discretionary-ligatures\": \"\\\"dlig\\\" off\",\n    \"historical-ligatures\": \"\\\"hlig\\\"\",\n    \"no-historical-ligatures\": \"\\\"hlig\\\" off\",\n    contextual: \"\\\"calt\\\"\",\n    \"no-contextual\": \"\\\"calt\\\" off\"\n  },\n  \"font-variant-position\": {\n    sub: \"\\\"subs\\\"\",\n    \"super\": \"\\\"sups\\\"\",\n    normal: \"\\\"subs\\\" off, \\\"sups\\\" off\"\n  },\n  \"font-variant-caps\": {\n    \"small-caps\": \"\\\"smcp\\\"\",\n    \"all-small-caps\": \"\\\"smcp\\\", \\\"c2sc\\\"\",\n    \"petite-caps\": \"\\\"pcap\\\"\",\n    \"all-petite-caps\": \"\\\"pcap\\\", \\\"c2pc\\\"\",\n    unicase: \"\\\"unic\\\"\",\n    \"titling-caps\": \"\\\"titl\\\"\"\n  },\n  \"font-variant-numeric\": {\n    \"lining-nums\": \"\\\"lnum\\\"\",\n    \"oldstyle-nums\": \"\\\"onum\\\"\",\n    \"proportional-nums\": \"\\\"pnum\\\"\",\n    \"tabular-nums\": \"\\\"tnum\\\"\",\n    \"diagonal-fractions\": \"\\\"frac\\\"\",\n    \"stacked-fractions\": \"\\\"afrc\\\"\",\n    ordinal: \"\\\"ordn\\\"\",\n    \"slashed-zero\": \"\\\"zero\\\"\"\n  },\n  \"font-kerning\": {\n    normal: \"\\\"kern\\\"\",\n    none: \"\\\"kern\\\" off\"\n  },\n  \"font-variant\": {\n    normal: \"normal\",\n    inherit: \"inherit\"\n  }\n}; // The `font-variant` property is a shorthand for all the others.\n\nfor (const prop in fontVariantProperties) {\n  const keys = fontVariantProperties[prop];\n\n  for (const key in keys) {\n    if (!(key in fontVariantProperties[\"font-variant\"])) {\n      fontVariantProperties[\"font-variant\"][key] = keys[key];\n    }\n  }\n} // Find font-feature-settings declaration before given declaration,\n// create if does not exist\n\n\nfunction getFontFeatureSettingsPrevTo(decl) {\n  let fontFeatureSettings = null;\n  decl.parent.walkDecls(decl => {\n    if (decl.prop === \"font-feature-settings\") {\n      fontFeatureSettings = decl;\n    }\n  });\n\n  if (fontFeatureSettings === null) {\n    fontFeatureSettings = decl.clone();\n    fontFeatureSettings.prop = \"font-feature-settings\";\n    fontFeatureSettings.value = \"\";\n    decl.parent.insertBefore(decl, fontFeatureSettings);\n  }\n\n  return fontFeatureSettings;\n}\n\nfunction walkRule(rule) {\n  let fontFeatureSettings = null; // read custom media queries\n\n  rule.walkDecls(decl => {\n    if (!fontVariantProperties[decl.prop]) {\n      return null;\n    }\n\n    let newValue = decl.value;\n\n    if (decl.prop === \"font-variant\") {\n      newValue = decl.value.split(/\\s+/g).map(val => {\n        return fontVariantProperties[\"font-variant\"][val];\n      }).join(\", \");\n    } else if (fontVariantProperties[decl.prop][decl.value]) {\n      newValue = fontVariantProperties[decl.prop][decl.value];\n    }\n\n    if (fontFeatureSettings === null) {\n      fontFeatureSettings = getFontFeatureSettingsPrevTo(decl);\n    }\n\n    if (fontFeatureSettings.value && fontFeatureSettings.value !== newValue) {\n      fontFeatureSettings.value += \", \" + newValue;\n    } else {\n      fontFeatureSettings.value = newValue;\n    }\n  });\n}\n/**\n * Expose the font-variant plugin.\n */\n\n\nmodule.exports = () => {\n  return {\n    postcssPlugin: \"postcss-font-variant\",\n\n    Once(root) {\n      root.walkRules(walkRule);\n    }\n\n  };\n};\n\nmodule.exports.postcss = true;","map":{"version":3,"names":["fontVariantProperties","contextual","sub","normal","unicase","ordinal","none","inherit","prop","keys","key","getFontFeatureSettingsPrevTo","decl","fontFeatureSettings","parent","walkDecls","clone","value","insertBefore","walkRule","rule","newValue","split","map","val","join","module","exports","postcssPlugin","Once","root","walkRules","postcss"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/postcss-font-variant/index.js"],"sourcesContent":["/**\n * font variant convertion map\n *\n * @type {Object}\n */\nconst fontVariantProperties = {\n  \"font-variant-ligatures\": {\n    \"common-ligatures\": \"\\\"liga\\\", \\\"clig\\\"\",\n    \"no-common-ligatures\": \"\\\"liga\\\", \\\"clig off\\\"\",\n    \"discretionary-ligatures\": \"\\\"dlig\\\"\",\n    \"no-discretionary-ligatures\": \"\\\"dlig\\\" off\",\n    \"historical-ligatures\": \"\\\"hlig\\\"\",\n    \"no-historical-ligatures\": \"\\\"hlig\\\" off\",\n    contextual: \"\\\"calt\\\"\",\n    \"no-contextual\": \"\\\"calt\\\" off\"\n  },\n\n  \"font-variant-position\": {\n    sub: \"\\\"subs\\\"\",\n    \"super\": \"\\\"sups\\\"\",\n    normal: \"\\\"subs\\\" off, \\\"sups\\\" off\"\n  },\n\n  \"font-variant-caps\": {\n    \"small-caps\": \"\\\"smcp\\\"\",\n    \"all-small-caps\": \"\\\"smcp\\\", \\\"c2sc\\\"\",\n    \"petite-caps\": \"\\\"pcap\\\"\",\n    \"all-petite-caps\": \"\\\"pcap\\\", \\\"c2pc\\\"\",\n    unicase: \"\\\"unic\\\"\",\n    \"titling-caps\": \"\\\"titl\\\"\"\n  },\n\n  \"font-variant-numeric\": {\n    \"lining-nums\": \"\\\"lnum\\\"\",\n    \"oldstyle-nums\": \"\\\"onum\\\"\",\n    \"proportional-nums\": \"\\\"pnum\\\"\",\n    \"tabular-nums\": \"\\\"tnum\\\"\",\n    \"diagonal-fractions\": \"\\\"frac\\\"\",\n    \"stacked-fractions\": \"\\\"afrc\\\"\",\n    ordinal: \"\\\"ordn\\\"\",\n    \"slashed-zero\": \"\\\"zero\\\"\"\n  },\n\n  \"font-kerning\": {\n    normal: \"\\\"kern\\\"\",\n    none: \"\\\"kern\\\" off\"\n  },\n\n  \"font-variant\": {\n    normal: \"normal\",\n    inherit: \"inherit\"\n  }\n}\n\n// The `font-variant` property is a shorthand for all the others.\nfor (const prop in fontVariantProperties) {\n  const keys = fontVariantProperties[prop]\n  for (const key in keys) {\n    if (!(key in fontVariantProperties[\"font-variant\"])) {\n      fontVariantProperties[\"font-variant\"][key] = keys[key]\n    }\n  }\n}\n\n// Find font-feature-settings declaration before given declaration,\n// create if does not exist\nfunction getFontFeatureSettingsPrevTo(decl) {\n  let fontFeatureSettings = null;\n  decl.parent.walkDecls((decl) => {\n    if (decl.prop === \"font-feature-settings\") {\n      fontFeatureSettings = decl;\n    }\n  })\n\n  if (fontFeatureSettings === null) {\n    fontFeatureSettings = decl.clone()\n    fontFeatureSettings.prop = \"font-feature-settings\"\n    fontFeatureSettings.value = \"\"\n    decl.parent.insertBefore(decl, fontFeatureSettings)\n  }\n  return fontFeatureSettings\n}\n\nfunction walkRule(rule) {\n  let fontFeatureSettings = null\n  // read custom media queries\n  rule.walkDecls((decl) => {\n    if (!fontVariantProperties[decl.prop]) {\n      return null\n    }\n\n    let newValue = decl.value\n    if (decl.prop === \"font-variant\") {\n      newValue = decl.value.split(/\\s+/g).map((val) => {\n        return fontVariantProperties[\"font-variant\"][val]\n      }).join(\", \")\n    }\n    else if (fontVariantProperties[decl.prop][decl.value]) {\n      newValue = fontVariantProperties[decl.prop][decl.value]\n    }\n\n    if (fontFeatureSettings === null) {\n      fontFeatureSettings = getFontFeatureSettingsPrevTo(decl);\n    }\n    if (fontFeatureSettings.value && fontFeatureSettings.value !== newValue) {\n      fontFeatureSettings.value += \", \" + newValue;\n    }\n    else {\n      fontFeatureSettings.value = newValue;\n    }\n  })\n}\n\n/**\n * Expose the font-variant plugin.\n */\nmodule.exports = () => {\n  return {\n    postcssPlugin: \"postcss-font-variant\",\n    Once(root) {\n      root.walkRules(walkRule)\n    }\n  }\n}\n\nmodule.exports.postcss = true\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}