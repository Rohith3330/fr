{"ast":null,"code":"/**\n * React Router DOM v6.4.0\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('react'), require('react-router'), require('@remix-run/router')) : typeof define === 'function' && define.amd ? define(['exports', 'react', 'react-router', '@remix-run/router'], factory) : (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.ReactRouterDOM = {}, global.React, global.ReactRouter, global.Router));\n})(this, function (exports, React, reactRouter, router) {\n  'use strict';\n\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = Object.create(null);\n\n    if (e) {\n      Object.keys(e).forEach(function (k) {\n        if (k !== 'default') {\n          var d = Object.getOwnPropertyDescriptor(e, k);\n          Object.defineProperty(n, k, d.get ? d : {\n            enumerable: true,\n            get: function () {\n              return e[k];\n            }\n          });\n        }\n      });\n    }\n\n    n[\"default\"] = e;\n    return Object.freeze(n);\n  }\n\n  var React__namespace = /*#__PURE__*/_interopNamespace(React);\n\n  function _extends() {\n    _extends = Object.assign ? Object.assign.bind() : function (target) {\n      for (var i = 1; i < arguments.length; i++) {\n        var source = arguments[i];\n\n        for (var key in source) {\n          if (Object.prototype.hasOwnProperty.call(source, key)) {\n            target[key] = source[key];\n          }\n        }\n      }\n\n      return target;\n    };\n    return _extends.apply(this, arguments);\n  }\n\n  function _objectWithoutPropertiesLoose(source, excluded) {\n    if (source == null) return {};\n    var target = {};\n    var sourceKeys = Object.keys(source);\n    var key, i;\n\n    for (i = 0; i < sourceKeys.length; i++) {\n      key = sourceKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      target[key] = source[key];\n    }\n\n    return target;\n  }\n\n  const defaultMethod = \"get\";\n  const defaultEncType = \"application/x-www-form-urlencoded\";\n\n  function isHtmlElement(object) {\n    return object != null && typeof object.tagName === \"string\";\n  }\n\n  function isButtonElement(object) {\n    return isHtmlElement(object) && object.tagName.toLowerCase() === \"button\";\n  }\n\n  function isFormElement(object) {\n    return isHtmlElement(object) && object.tagName.toLowerCase() === \"form\";\n  }\n\n  function isInputElement(object) {\n    return isHtmlElement(object) && object.tagName.toLowerCase() === \"input\";\n  }\n\n  function isModifiedEvent(event) {\n    return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n  }\n\n  function shouldProcessLinkClick(event, target) {\n    return event.button === 0 && ( // Ignore everything but left clicks\n    !target || target === \"_self\") && // Let browser handle \"target=_blank\" etc.\n    !isModifiedEvent(event) // Ignore clicks with modifier keys\n    ;\n  }\n  /**\n   * Creates a URLSearchParams object using the given initializer.\n   *\n   * This is identical to `new URLSearchParams(init)` except it also\n   * supports arrays as values in the object form of the initializer\n   * instead of just strings. This is convenient when you need multiple\n   * values for a given key, but don't want to use an array initializer.\n   *\n   * For example, instead of:\n   *\n   *   let searchParams = new URLSearchParams([\n   *     ['sort', 'name'],\n   *     ['sort', 'price']\n   *   ]);\n   *\n   * you can do:\n   *\n   *   let searchParams = createSearchParams({\n   *     sort: ['name', 'price']\n   *   });\n   */\n\n\n  function createSearchParams(init) {\n    if (init === void 0) {\n      init = \"\";\n    }\n\n    return new URLSearchParams(typeof init === \"string\" || Array.isArray(init) || init instanceof URLSearchParams ? init : Object.keys(init).reduce((memo, key) => {\n      let value = init[key];\n      return memo.concat(Array.isArray(value) ? value.map(v => [key, v]) : [[key, value]]);\n    }, []));\n  }\n\n  function getSearchParamsForLocation(locationSearch, defaultSearchParams) {\n    let searchParams = createSearchParams(locationSearch);\n\n    for (let key of defaultSearchParams.keys()) {\n      if (!searchParams.has(key)) {\n        defaultSearchParams.getAll(key).forEach(value => {\n          searchParams.append(key, value);\n        });\n      }\n    }\n\n    return searchParams;\n  }\n\n  function getFormSubmissionInfo(target, defaultAction, options) {\n    let method;\n    let action;\n    let encType;\n    let formData;\n\n    if (isFormElement(target)) {\n      let submissionTrigger = options.submissionTrigger;\n      method = options.method || target.getAttribute(\"method\") || defaultMethod;\n      action = options.action || target.getAttribute(\"action\") || defaultAction;\n      encType = options.encType || target.getAttribute(\"enctype\") || defaultEncType;\n      formData = new FormData(target);\n\n      if (submissionTrigger && submissionTrigger.name) {\n        formData.append(submissionTrigger.name, submissionTrigger.value);\n      }\n    } else if (isButtonElement(target) || isInputElement(target) && (target.type === \"submit\" || target.type === \"image\")) {\n      let form = target.form;\n\n      if (form == null) {\n        throw new Error(\"Cannot submit a <button> or <input type=\\\"submit\\\"> without a <form>\");\n      } // <button>/<input type=\"submit\"> may override attributes of <form>\n\n\n      method = options.method || target.getAttribute(\"formmethod\") || form.getAttribute(\"method\") || defaultMethod;\n      action = options.action || target.getAttribute(\"formaction\") || form.getAttribute(\"action\") || defaultAction;\n      encType = options.encType || target.getAttribute(\"formenctype\") || form.getAttribute(\"enctype\") || defaultEncType;\n      formData = new FormData(form); // Include name + value from a <button>, appending in case the button name\n      // matches an existing input name\n\n      if (target.name) {\n        formData.append(target.name, target.value);\n      }\n    } else if (isHtmlElement(target)) {\n      throw new Error(\"Cannot submit element that is not <form>, <button>, or \" + \"<input type=\\\"submit|image\\\">\");\n    } else {\n      method = options.method || defaultMethod;\n      action = options.action || defaultAction;\n      encType = options.encType || defaultEncType;\n\n      if (target instanceof FormData) {\n        formData = target;\n      } else {\n        formData = new FormData();\n\n        if (target instanceof URLSearchParams) {\n          for (let [name, value] of target) {\n            formData.append(name, value);\n          }\n        } else if (target != null) {\n          for (let name of Object.keys(target)) {\n            formData.append(name, target[name]);\n          }\n        }\n      }\n    }\n\n    let {\n      protocol,\n      host\n    } = window.location;\n    let url = new URL(action, protocol + \"//\" + host);\n    return {\n      url,\n      method,\n      encType,\n      formData\n    };\n  }\n\n  const _excluded = [\"onClick\", \"relative\", \"reloadDocument\", \"replace\", \"state\", \"target\", \"to\", \"preventScrollReset\"],\n        _excluded2 = [\"aria-current\", \"caseSensitive\", \"className\", \"end\", \"style\", \"to\", \"children\"],\n        _excluded3 = [\"reloadDocument\", \"replace\", \"method\", \"action\", \"onSubmit\", \"fetcherKey\", \"routeId\", \"relative\"]; ////////////////////////////////////////////////////////////////////////////////\n  //#region Routers\n  ////////////////////////////////////////////////////////////////////////////////\n\n  function createBrowserRouter(routes, opts) {\n    var _window;\n\n    return router.createRouter({\n      basename: opts == null ? void 0 : opts.basename,\n      history: router.createBrowserHistory({\n        window: opts == null ? void 0 : opts.window\n      }),\n      hydrationData: (opts == null ? void 0 : opts.hydrationData) || ((_window = window) == null ? void 0 : _window.__staticRouterHydrationData),\n      routes: reactRouter.UNSAFE_enhanceManualRouteObjects(routes)\n    }).initialize();\n  }\n\n  function createHashRouter(routes, opts) {\n    var _window2;\n\n    return router.createRouter({\n      basename: opts == null ? void 0 : opts.basename,\n      history: router.createHashHistory({\n        window: opts == null ? void 0 : opts.window\n      }),\n      hydrationData: (opts == null ? void 0 : opts.hydrationData) || ((_window2 = window) == null ? void 0 : _window2.__staticRouterHydrationData),\n      routes: reactRouter.UNSAFE_enhanceManualRouteObjects(routes)\n    }).initialize();\n  } //#endregion\n  ////////////////////////////////////////////////////////////////////////////////\n  //#region Components\n  ////////////////////////////////////////////////////////////////////////////////\n\n  /**\n   * A `<Router>` for use in web browsers. Provides the cleanest URLs.\n   */\n\n\n  function BrowserRouter(_ref) {\n    let {\n      basename,\n      children,\n      window\n    } = _ref;\n    let historyRef = React__namespace.useRef();\n\n    if (historyRef.current == null) {\n      historyRef.current = router.createBrowserHistory({\n        window,\n        v5Compat: true\n      });\n    }\n\n    let history = historyRef.current;\n    let [state, setState] = React__namespace.useState({\n      action: history.action,\n      location: history.location\n    });\n    React__namespace.useLayoutEffect(() => history.listen(setState), [history]);\n    return /*#__PURE__*/React__namespace.createElement(reactRouter.Router, {\n      basename: basename,\n      children: children,\n      location: state.location,\n      navigationType: state.action,\n      navigator: history\n    });\n  }\n  /**\n   * A `<Router>` for use in web browsers. Stores the location in the hash\n   * portion of the URL so it is not sent to the server.\n   */\n\n\n  function HashRouter(_ref2) {\n    let {\n      basename,\n      children,\n      window\n    } = _ref2;\n    let historyRef = React__namespace.useRef();\n\n    if (historyRef.current == null) {\n      historyRef.current = router.createHashHistory({\n        window,\n        v5Compat: true\n      });\n    }\n\n    let history = historyRef.current;\n    let [state, setState] = React__namespace.useState({\n      action: history.action,\n      location: history.location\n    });\n    React__namespace.useLayoutEffect(() => history.listen(setState), [history]);\n    return /*#__PURE__*/React__namespace.createElement(reactRouter.Router, {\n      basename: basename,\n      children: children,\n      location: state.location,\n      navigationType: state.action,\n      navigator: history\n    });\n  }\n  /**\n   * A `<Router>` that accepts a pre-instantiated history object. It's important\n   * to note that using your own history object is highly discouraged and may add\n   * two versions of the history library to your bundles unless you use the same\n   * version of the history library that React Router uses internally.\n   */\n\n\n  function HistoryRouter(_ref3) {\n    let {\n      basename,\n      children,\n      history\n    } = _ref3;\n    const [state, setState] = React__namespace.useState({\n      action: history.action,\n      location: history.location\n    });\n    React__namespace.useLayoutEffect(() => history.listen(setState), [history]);\n    return /*#__PURE__*/React__namespace.createElement(reactRouter.Router, {\n      basename: basename,\n      children: children,\n      location: state.location,\n      navigationType: state.action,\n      navigator: history\n    });\n  }\n\n  {\n    HistoryRouter.displayName = \"unstable_HistoryRouter\";\n  }\n  /**\n   * The public API for rendering a history-aware <a>.\n   */\n\n  const Link = /*#__PURE__*/React__namespace.forwardRef(function LinkWithRef(_ref4, ref) {\n    let {\n      onClick,\n      relative,\n      reloadDocument,\n      replace,\n      state,\n      target,\n      to,\n      preventScrollReset\n    } = _ref4,\n        rest = _objectWithoutPropertiesLoose(_ref4, _excluded);\n\n    let href = reactRouter.useHref(to, {\n      relative\n    });\n    let internalOnClick = useLinkClickHandler(to, {\n      replace,\n      state,\n      target,\n      preventScrollReset,\n      relative\n    });\n\n    function handleClick(event) {\n      if (onClick) onClick(event);\n\n      if (!event.defaultPrevented) {\n        internalOnClick(event);\n      }\n    }\n\n    return (\n      /*#__PURE__*/\n      // eslint-disable-next-line jsx-a11y/anchor-has-content\n      React__namespace.createElement(\"a\", _extends({}, rest, {\n        href: href,\n        onClick: reloadDocument ? onClick : handleClick,\n        ref: ref,\n        target: target\n      }))\n    );\n  });\n  {\n    Link.displayName = \"Link\";\n  }\n  /**\n   * A <Link> wrapper that knows if it's \"active\" or not.\n   */\n\n  const NavLink = /*#__PURE__*/React__namespace.forwardRef(function NavLinkWithRef(_ref5, ref) {\n    let {\n      \"aria-current\": ariaCurrentProp = \"page\",\n      caseSensitive = false,\n      className: classNameProp = \"\",\n      end = false,\n      style: styleProp,\n      to,\n      children\n    } = _ref5,\n        rest = _objectWithoutPropertiesLoose(_ref5, _excluded2);\n\n    let path = reactRouter.useResolvedPath(to);\n    let match = reactRouter.useMatch({\n      path: path.pathname,\n      end,\n      caseSensitive\n    });\n    let routerState = React__namespace.useContext(reactRouter.UNSAFE_DataRouterStateContext);\n    let nextLocation = routerState == null ? void 0 : routerState.navigation.location;\n    let nextPath = reactRouter.useResolvedPath(nextLocation || \"\");\n    let nextMatch = React__namespace.useMemo(() => nextLocation ? router.matchPath({\n      path: path.pathname,\n      end,\n      caseSensitive\n    }, nextPath.pathname) : null, [nextLocation, path.pathname, caseSensitive, end, nextPath.pathname]);\n    let isPending = nextMatch != null;\n    let isActive = match != null;\n    let ariaCurrent = isActive ? ariaCurrentProp : undefined;\n    let className;\n\n    if (typeof classNameProp === \"function\") {\n      className = classNameProp({\n        isActive,\n        isPending\n      });\n    } else {\n      // If the className prop is not a function, we use a default `active`\n      // class for <NavLink />s that are active. In v5 `active` was the default\n      // value for `activeClassName`, but we are removing that API and can still\n      // use the old default behavior for a cleaner upgrade path and keep the\n      // simple styling rules working as they currently do.\n      className = [classNameProp, isActive ? \"active\" : null, isPending ? \"pending\" : null].filter(Boolean).join(\" \");\n    }\n\n    let style = typeof styleProp === \"function\" ? styleProp({\n      isActive,\n      isPending\n    }) : styleProp;\n    return /*#__PURE__*/React__namespace.createElement(Link, _extends({}, rest, {\n      \"aria-current\": ariaCurrent,\n      className: className,\n      ref: ref,\n      style: style,\n      to: to\n    }), typeof children === \"function\" ? children({\n      isActive,\n      isPending\n    }) : children);\n  });\n  {\n    NavLink.displayName = \"NavLink\";\n  }\n  /**\n   * A `@remix-run/router`-aware `<form>`. It behaves like a normal form except\n   * that the interaction with the server is with `fetch` instead of new document\n   * requests, allowing components to add nicer UX to the page as the form is\n   * submitted and returns with data.\n   */\n\n  const Form = /*#__PURE__*/React__namespace.forwardRef((props, ref) => {\n    return /*#__PURE__*/React__namespace.createElement(FormImpl, _extends({}, props, {\n      ref: ref\n    }));\n  });\n  {\n    Form.displayName = \"Form\";\n  }\n  const FormImpl = /*#__PURE__*/React__namespace.forwardRef((_ref6, forwardedRef) => {\n    let {\n      reloadDocument,\n      replace,\n      method = defaultMethod,\n      action,\n      onSubmit,\n      fetcherKey,\n      routeId,\n      relative\n    } = _ref6,\n        props = _objectWithoutPropertiesLoose(_ref6, _excluded3);\n\n    let submit = useSubmitImpl(fetcherKey, routeId);\n    let formMethod = method.toLowerCase() === \"get\" ? \"get\" : \"post\";\n    let formAction = useFormAction(action, {\n      relative\n    });\n\n    let submitHandler = event => {\n      onSubmit && onSubmit(event);\n      if (event.defaultPrevented) return;\n      event.preventDefault();\n      let submitter = event.nativeEvent.submitter;\n      submit(submitter || event.currentTarget, {\n        method,\n        replace,\n        relative\n      });\n    };\n\n    return /*#__PURE__*/React__namespace.createElement(\"form\", _extends({\n      ref: forwardedRef,\n      method: formMethod,\n      action: formAction,\n      onSubmit: reloadDocument ? onSubmit : submitHandler\n    }, props));\n  });\n  {\n    Form.displayName = \"Form\";\n  }\n  /**\n   * This component will emulate the browser's scroll restoration on location\n   * changes.\n   */\n\n  function ScrollRestoration(_ref7) {\n    let {\n      getKey,\n      storageKey\n    } = _ref7;\n    useScrollRestoration({\n      getKey,\n      storageKey\n    });\n    return null;\n  }\n\n  {\n    ScrollRestoration.displayName = \"ScrollRestoration\";\n  } //#endregion\n  ////////////////////////////////////////////////////////////////////////////////\n  //#region Hooks\n  ////////////////////////////////////////////////////////////////////////////////\n\n  /**\n   * Handles the click behavior for router `<Link>` components. This is useful if\n   * you need to create custom `<Link>` components with the same click behavior we\n   * use in our exported `<Link>`.\n   */\n\n  function useLinkClickHandler(to, _temp) {\n    let {\n      target,\n      replace: replaceProp,\n      state,\n      preventScrollReset,\n      relative\n    } = _temp === void 0 ? {} : _temp;\n    let navigate = reactRouter.useNavigate();\n    let location = reactRouter.useLocation();\n    let path = reactRouter.useResolvedPath(to, {\n      relative\n    });\n    return React__namespace.useCallback(event => {\n      if (shouldProcessLinkClick(event, target)) {\n        event.preventDefault(); // If the URL hasn't changed, a regular <a> will do a replace instead of\n        // a push, so do the same here unless the replace prop is explicitly set\n\n        let replace = replaceProp !== undefined ? replaceProp : reactRouter.createPath(location) === reactRouter.createPath(path);\n        navigate(to, {\n          replace,\n          state,\n          preventScrollReset,\n          relative\n        });\n      }\n    }, [location, navigate, path, replaceProp, state, target, to, preventScrollReset, relative]);\n  }\n  /**\n   * A convenient wrapper for reading and writing search parameters via the\n   * URLSearchParams interface.\n   */\n\n\n  function useSearchParams(defaultInit) {\n    warning(typeof URLSearchParams !== \"undefined\", \"You cannot use the `useSearchParams` hook in a browser that does not \" + \"support the URLSearchParams API. If you need to support Internet \" + \"Explorer 11, we recommend you load a polyfill such as \" + \"https://github.com/ungap/url-search-params\\n\\n\" + \"If you're unsure how to load polyfills, we recommend you check out \" + \"https://polyfill.io/v3/ which provides some recommendations about how \" + \"to load polyfills only for users that need them, instead of for every \" + \"user.\");\n    let defaultSearchParamsRef = React__namespace.useRef(createSearchParams(defaultInit));\n    let location = reactRouter.useLocation();\n    let searchParams = React__namespace.useMemo(() => getSearchParamsForLocation(location.search, defaultSearchParamsRef.current), [location.search]);\n    let navigate = reactRouter.useNavigate();\n    let setSearchParams = React__namespace.useCallback((nextInit, navigateOptions) => {\n      const newSearchParams = createSearchParams(typeof nextInit === \"function\" ? nextInit(searchParams) : nextInit);\n      navigate(\"?\" + newSearchParams, navigateOptions);\n    }, [navigate, searchParams]);\n    return [searchParams, setSearchParams];\n  }\n  /**\n   * Returns a function that may be used to programmatically submit a form (or\n   * some arbitrary data) to the server.\n   */\n\n\n  function useSubmit() {\n    return useSubmitImpl();\n  }\n\n  function useSubmitImpl(fetcherKey, routeId) {\n    let dataRouterContext = React__namespace.useContext(reactRouter.UNSAFE_DataRouterContext);\n    !dataRouterContext ? router.invariant(false, \"useSubmitImpl must be used within a Data Router\") : void 0;\n    let {\n      router: router$1\n    } = dataRouterContext;\n    let defaultAction = useFormAction();\n    return React__namespace.useCallback(function (target, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      if (typeof document === \"undefined\") {\n        throw new Error(\"You are calling submit during the server render. \" + \"Try calling submit within a `useEffect` or callback instead.\");\n      }\n\n      let {\n        method,\n        encType,\n        formData,\n        url\n      } = getFormSubmissionInfo(target, defaultAction, options);\n      let href = url.pathname + url.search;\n      let opts = {\n        replace: options.replace,\n        formData,\n        formMethod: method,\n        formEncType: encType\n      };\n\n      if (fetcherKey) {\n        !(routeId != null) ? router.invariant(false, \"No routeId available for useFetcher()\") : void 0;\n        router$1.fetch(fetcherKey, routeId, href, opts);\n      } else {\n        router$1.navigate(href, opts);\n      }\n    }, [defaultAction, router$1, fetcherKey, routeId]);\n  }\n\n  function useFormAction(action, _temp2) {\n    let {\n      relative\n    } = _temp2 === void 0 ? {} : _temp2;\n    let routeContext = React__namespace.useContext(reactRouter.UNSAFE_RouteContext);\n    !routeContext ? router.invariant(false, \"useFormAction must be used inside a RouteContext\") : void 0;\n    let [match] = routeContext.matches.slice(-1);\n    let resolvedAction = action != null ? action : \".\";\n    let path = reactRouter.useResolvedPath(resolvedAction, {\n      relative\n    }); // Previously we set the default action to \".\". The problem with this is that\n    // `useResolvedPath(\".\")` excludes search params and the hash of the resolved\n    // URL. This is the intended behavior of when \".\" is specifically provided as\n    // the form action, but inconsistent w/ browsers when the action is omitted.\n    // https://github.com/remix-run/remix/issues/927\n\n    let location = reactRouter.useLocation();\n\n    if (action == null) {\n      // Safe to write to these directly here since if action was undefined, we\n      // would have called useResolvedPath(\".\") which will never include a search\n      // or hash\n      path.search = location.search;\n      path.hash = location.hash; // When grabbing search params from the URL, remove the automatically\n      // inserted ?index param so we match the useResolvedPath search behavior\n      // which would not include ?index\n\n      if (match.route.index) {\n        let params = new URLSearchParams(path.search);\n        params.delete(\"index\");\n        path.search = params.toString() ? \"?\" + params.toString() : \"\";\n      }\n    }\n\n    if ((!action || action === \".\") && match.route.index) {\n      path.search = path.search ? path.search.replace(/^\\?/, \"?index&\") : \"?index\";\n    }\n\n    return reactRouter.createPath(path);\n  }\n\n  function createFetcherForm(fetcherKey, routeId) {\n    let FetcherForm = /*#__PURE__*/React__namespace.forwardRef((props, ref) => {\n      return /*#__PURE__*/React__namespace.createElement(FormImpl, _extends({}, props, {\n        ref: ref,\n        fetcherKey: fetcherKey,\n        routeId: routeId\n      }));\n    });\n    {\n      FetcherForm.displayName = \"fetcher.Form\";\n    }\n    return FetcherForm;\n  }\n\n  let fetcherId = 0;\n  /**\n   * Interacts with route loaders and actions without causing a navigation. Great\n   * for any interaction that stays on the same page.\n   */\n\n  function useFetcher() {\n    var _route$matches;\n\n    let dataRouterContext = React__namespace.useContext(reactRouter.UNSAFE_DataRouterContext);\n    !dataRouterContext ? router.invariant(false, \"useFetcher must be used within a Data Router\") : void 0;\n    let {\n      router: router$1\n    } = dataRouterContext;\n    let route = React__namespace.useContext(reactRouter.UNSAFE_RouteContext);\n    !route ? router.invariant(false, \"useFetcher must be used inside a RouteContext\") : void 0;\n    let routeId = (_route$matches = route.matches[route.matches.length - 1]) == null ? void 0 : _route$matches.route.id;\n    !(routeId != null) ? router.invariant(false, \"useFetcher can only be used on routes that contain a unique \\\"id\\\"\") : void 0;\n    let [fetcherKey] = React__namespace.useState(() => String(++fetcherId));\n    let [Form] = React__namespace.useState(() => {\n      !routeId ? router.invariant(false, \"No routeId available for fetcher.Form()\") : void 0;\n      return createFetcherForm(fetcherKey, routeId);\n    });\n    let [load] = React__namespace.useState(() => href => {\n      !router$1 ? router.invariant(false, \"No router available for fetcher.load()\") : void 0;\n      !routeId ? router.invariant(false, \"No routeId available for fetcher.load()\") : void 0;\n      router$1.fetch(fetcherKey, routeId, href);\n    });\n    let submit = useSubmitImpl(fetcherKey, routeId);\n    let fetcher = router$1.getFetcher(fetcherKey);\n    let fetcherWithComponents = React__namespace.useMemo(() => _extends({\n      Form,\n      submit,\n      load\n    }, fetcher), [fetcher, Form, submit, load]);\n    React__namespace.useEffect(() => {\n      // Is this busted when the React team gets real weird and calls effects\n      // twice on mount?  We really just need to garbage collect here when this\n      // fetcher is no longer around.\n      return () => {\n        if (!router$1) {\n          console.warn(\"No fetcher available to clean up from useFetcher()\");\n          return;\n        }\n\n        router$1.deleteFetcher(fetcherKey);\n      };\n    }, [router$1, fetcherKey]);\n    return fetcherWithComponents;\n  }\n  /**\n   * Provides all fetchers currently on the page. Useful for layouts and parent\n   * routes that need to provide pending/optimistic UI regarding the fetch.\n   */\n\n\n  function useFetchers() {\n    let state = React__namespace.useContext(reactRouter.UNSAFE_DataRouterStateContext);\n    !state ? router.invariant(false, \"useFetchers must be used within a DataRouterStateContext\") : void 0;\n    return [...state.fetchers.values()];\n  }\n\n  const SCROLL_RESTORATION_STORAGE_KEY = \"react-router-scroll-positions\";\n  let savedScrollPositions = {};\n  /**\n   * When rendered inside a RouterProvider, will restore scroll positions on navigations\n   */\n\n  function useScrollRestoration(_temp3) {\n    let {\n      getKey,\n      storageKey\n    } = _temp3 === void 0 ? {} : _temp3;\n    let location = reactRouter.useLocation();\n    let matches = reactRouter.useMatches();\n    let navigation = reactRouter.useNavigation();\n    let dataRouterContext = React__namespace.useContext(reactRouter.UNSAFE_DataRouterContext);\n    !dataRouterContext ? router.invariant(false, \"useScrollRestoration must be used within a DataRouterContext\") : void 0;\n    let {\n      router: router$1\n    } = dataRouterContext;\n    let state = React__namespace.useContext(reactRouter.UNSAFE_DataRouterStateContext);\n    !(router$1 != null && state != null) ? router.invariant(false, \"useScrollRestoration must be used within a DataRouterStateContext\") : void 0;\n    let {\n      restoreScrollPosition,\n      preventScrollReset\n    } = state; // Trigger manual scroll restoration while we're active\n\n    React__namespace.useEffect(() => {\n      window.history.scrollRestoration = \"manual\";\n      return () => {\n        window.history.scrollRestoration = \"auto\";\n      };\n    }, []); // Save positions on unload\n\n    useBeforeUnload(React__namespace.useCallback(() => {\n      if (navigation.state === \"idle\") {\n        let key = (getKey ? getKey(location, matches) : null) || location.key;\n        savedScrollPositions[key] = window.scrollY;\n      }\n\n      sessionStorage.setItem(storageKey || SCROLL_RESTORATION_STORAGE_KEY, JSON.stringify(savedScrollPositions));\n      window.history.scrollRestoration = \"auto\";\n    }, [storageKey, getKey, navigation.state, location, matches])); // Read in any saved scroll locations\n\n    React__namespace.useLayoutEffect(() => {\n      try {\n        let sessionPositions = sessionStorage.getItem(storageKey || SCROLL_RESTORATION_STORAGE_KEY);\n\n        if (sessionPositions) {\n          savedScrollPositions = JSON.parse(sessionPositions);\n        }\n      } catch (e) {// no-op, use default empty object\n      }\n    }, [storageKey]); // Enable scroll restoration in the router\n\n    React__namespace.useLayoutEffect(() => {\n      let disableScrollRestoration = router$1 == null ? void 0 : router$1.enableScrollRestoration(savedScrollPositions, () => window.scrollY, getKey);\n      return () => disableScrollRestoration && disableScrollRestoration();\n    }, [router$1, getKey]); // Restore scrolling when state.restoreScrollPosition changes\n\n    React__namespace.useLayoutEffect(() => {\n      // Explicit false means don't do anything (used for submissions)\n      if (restoreScrollPosition === false) {\n        return;\n      } // been here before, scroll to it\n\n\n      if (typeof restoreScrollPosition === \"number\") {\n        window.scrollTo(0, restoreScrollPosition);\n        return;\n      } // try to scroll to the hash\n\n\n      if (location.hash) {\n        let el = document.getElementById(location.hash.slice(1));\n\n        if (el) {\n          el.scrollIntoView();\n          return;\n        }\n      } // Opt out of scroll reset if this link requested it\n\n\n      if (preventScrollReset === true) {\n        return;\n      } // otherwise go to the top on new locations\n\n\n      window.scrollTo(0, 0);\n    }, [location, restoreScrollPosition, preventScrollReset]);\n  }\n\n  function useBeforeUnload(callback) {\n    React__namespace.useEffect(() => {\n      window.addEventListener(\"beforeunload\", callback);\n      return () => {\n        window.removeEventListener(\"beforeunload\", callback);\n      };\n    }, [callback]);\n  } //#endregion\n  ////////////////////////////////////////////////////////////////////////////////\n  //#region Utils\n  ////////////////////////////////////////////////////////////////////////////////\n\n\n  function warning(cond, message) {\n    if (!cond) {\n      // eslint-disable-next-line no-console\n      if (typeof console !== \"undefined\") console.warn(message);\n\n      try {\n        // Welcome to debugging React Router!\n        //\n        // This error is thrown as a convenience so you can more easily\n        // find the source for a warning that appears in the console by\n        // enabling \"pause on exceptions\" in your JavaScript debugger.\n        throw new Error(message); // eslint-disable-next-line no-empty\n      } catch (e) {}\n    }\n  } //#endregion\n\n\n  Object.defineProperty(exports, 'AbortedDeferredError', {\n    enumerable: true,\n    get: function () {\n      return reactRouter.AbortedDeferredError;\n    }\n  });\n  Object.defineProperty(exports, 'Await', {\n    enumerable: true,\n    get: function () {\n      return reactRouter.Await;\n    }\n  });\n  Object.defineProperty(exports, 'MemoryRouter', {\n    enumerable: true,\n    get: function () {\n      return reactRouter.MemoryRouter;\n    }\n  });\n  Object.defineProperty(exports, 'Navigate', {\n    enumerable: true,\n    get: function () {\n      return reactRouter.Navigate;\n    }\n  });\n  Object.defineProperty(exports, 'NavigationType', {\n    enumerable: true,\n    get: function () {\n      return reactRouter.NavigationType;\n    }\n  });\n  Object.defineProperty(exports, 'Outlet', {\n    enumerable: true,\n    get: function () {\n      return reactRouter.Outlet;\n    }\n  });\n  Object.defineProperty(exports, 'Route', {\n    enumerable: true,\n    get: function () {\n      return reactRouter.Route;\n    }\n  });\n  Object.defineProperty(exports, 'Router', {\n    enumerable: true,\n    get: function () {\n      return reactRouter.Router;\n    }\n  });\n  Object.defineProperty(exports, 'RouterProvider', {\n    enumerable: true,\n    get: function () {\n      return reactRouter.RouterProvider;\n    }\n  });\n  Object.defineProperty(exports, 'Routes', {\n    enumerable: true,\n    get: function () {\n      return reactRouter.Routes;\n    }\n  });\n  Object.defineProperty(exports, 'UNSAFE_DataRouterContext', {\n    enumerable: true,\n    get: function () {\n      return reactRouter.UNSAFE_DataRouterContext;\n    }\n  });\n  Object.defineProperty(exports, 'UNSAFE_DataRouterStateContext', {\n    enumerable: true,\n    get: function () {\n      return reactRouter.UNSAFE_DataRouterStateContext;\n    }\n  });\n  Object.defineProperty(exports, 'UNSAFE_DataStaticRouterContext', {\n    enumerable: true,\n    get: function () {\n      return reactRouter.UNSAFE_DataStaticRouterContext;\n    }\n  });\n  Object.defineProperty(exports, 'UNSAFE_LocationContext', {\n    enumerable: true,\n    get: function () {\n      return reactRouter.UNSAFE_LocationContext;\n    }\n  });\n  Object.defineProperty(exports, 'UNSAFE_NavigationContext', {\n    enumerable: true,\n    get: function () {\n      return reactRouter.UNSAFE_NavigationContext;\n    }\n  });\n  Object.defineProperty(exports, 'UNSAFE_RouteContext', {\n    enumerable: true,\n    get: function () {\n      return reactRouter.UNSAFE_RouteContext;\n    }\n  });\n  Object.defineProperty(exports, 'UNSAFE_enhanceManualRouteObjects', {\n    enumerable: true,\n    get: function () {\n      return reactRouter.UNSAFE_enhanceManualRouteObjects;\n    }\n  });\n  Object.defineProperty(exports, 'createMemoryRouter', {\n    enumerable: true,\n    get: function () {\n      return reactRouter.createMemoryRouter;\n    }\n  });\n  Object.defineProperty(exports, 'createPath', {\n    enumerable: true,\n    get: function () {\n      return reactRouter.createPath;\n    }\n  });\n  Object.defineProperty(exports, 'createRoutesFromChildren', {\n    enumerable: true,\n    get: function () {\n      return reactRouter.createRoutesFromChildren;\n    }\n  });\n  Object.defineProperty(exports, 'createRoutesFromElements', {\n    enumerable: true,\n    get: function () {\n      return reactRouter.createRoutesFromElements;\n    }\n  });\n  Object.defineProperty(exports, 'defer', {\n    enumerable: true,\n    get: function () {\n      return reactRouter.defer;\n    }\n  });\n  Object.defineProperty(exports, 'generatePath', {\n    enumerable: true,\n    get: function () {\n      return reactRouter.generatePath;\n    }\n  });\n  Object.defineProperty(exports, 'isRouteErrorResponse', {\n    enumerable: true,\n    get: function () {\n      return reactRouter.isRouteErrorResponse;\n    }\n  });\n  Object.defineProperty(exports, 'json', {\n    enumerable: true,\n    get: function () {\n      return reactRouter.json;\n    }\n  });\n  Object.defineProperty(exports, 'matchPath', {\n    enumerable: true,\n    get: function () {\n      return reactRouter.matchPath;\n    }\n  });\n  Object.defineProperty(exports, 'matchRoutes', {\n    enumerable: true,\n    get: function () {\n      return reactRouter.matchRoutes;\n    }\n  });\n  Object.defineProperty(exports, 'parsePath', {\n    enumerable: true,\n    get: function () {\n      return reactRouter.parsePath;\n    }\n  });\n  Object.defineProperty(exports, 'redirect', {\n    enumerable: true,\n    get: function () {\n      return reactRouter.redirect;\n    }\n  });\n  Object.defineProperty(exports, 'renderMatches', {\n    enumerable: true,\n    get: function () {\n      return reactRouter.renderMatches;\n    }\n  });\n  Object.defineProperty(exports, 'resolvePath', {\n    enumerable: true,\n    get: function () {\n      return reactRouter.resolvePath;\n    }\n  });\n  Object.defineProperty(exports, 'useActionData', {\n    enumerable: true,\n    get: function () {\n      return reactRouter.useActionData;\n    }\n  });\n  Object.defineProperty(exports, 'useAsyncError', {\n    enumerable: true,\n    get: function () {\n      return reactRouter.useAsyncError;\n    }\n  });\n  Object.defineProperty(exports, 'useAsyncValue', {\n    enumerable: true,\n    get: function () {\n      return reactRouter.useAsyncValue;\n    }\n  });\n  Object.defineProperty(exports, 'useHref', {\n    enumerable: true,\n    get: function () {\n      return reactRouter.useHref;\n    }\n  });\n  Object.defineProperty(exports, 'useInRouterContext', {\n    enumerable: true,\n    get: function () {\n      return reactRouter.useInRouterContext;\n    }\n  });\n  Object.defineProperty(exports, 'useLoaderData', {\n    enumerable: true,\n    get: function () {\n      return reactRouter.useLoaderData;\n    }\n  });\n  Object.defineProperty(exports, 'useLocation', {\n    enumerable: true,\n    get: function () {\n      return reactRouter.useLocation;\n    }\n  });\n  Object.defineProperty(exports, 'useMatch', {\n    enumerable: true,\n    get: function () {\n      return reactRouter.useMatch;\n    }\n  });\n  Object.defineProperty(exports, 'useMatches', {\n    enumerable: true,\n    get: function () {\n      return reactRouter.useMatches;\n    }\n  });\n  Object.defineProperty(exports, 'useNavigate', {\n    enumerable: true,\n    get: function () {\n      return reactRouter.useNavigate;\n    }\n  });\n  Object.defineProperty(exports, 'useNavigation', {\n    enumerable: true,\n    get: function () {\n      return reactRouter.useNavigation;\n    }\n  });\n  Object.defineProperty(exports, 'useNavigationType', {\n    enumerable: true,\n    get: function () {\n      return reactRouter.useNavigationType;\n    }\n  });\n  Object.defineProperty(exports, 'useOutlet', {\n    enumerable: true,\n    get: function () {\n      return reactRouter.useOutlet;\n    }\n  });\n  Object.defineProperty(exports, 'useOutletContext', {\n    enumerable: true,\n    get: function () {\n      return reactRouter.useOutletContext;\n    }\n  });\n  Object.defineProperty(exports, 'useParams', {\n    enumerable: true,\n    get: function () {\n      return reactRouter.useParams;\n    }\n  });\n  Object.defineProperty(exports, 'useResolvedPath', {\n    enumerable: true,\n    get: function () {\n      return reactRouter.useResolvedPath;\n    }\n  });\n  Object.defineProperty(exports, 'useRevalidator', {\n    enumerable: true,\n    get: function () {\n      return reactRouter.useRevalidator;\n    }\n  });\n  Object.defineProperty(exports, 'useRouteError', {\n    enumerable: true,\n    get: function () {\n      return reactRouter.useRouteError;\n    }\n  });\n  Object.defineProperty(exports, 'useRouteLoaderData', {\n    enumerable: true,\n    get: function () {\n      return reactRouter.useRouteLoaderData;\n    }\n  });\n  Object.defineProperty(exports, 'useRoutes', {\n    enumerable: true,\n    get: function () {\n      return reactRouter.useRoutes;\n    }\n  });\n  exports.BrowserRouter = BrowserRouter;\n  exports.Form = Form;\n  exports.HashRouter = HashRouter;\n  exports.Link = Link;\n  exports.NavLink = NavLink;\n  exports.ScrollRestoration = ScrollRestoration;\n  exports.createBrowserRouter = createBrowserRouter;\n  exports.createHashRouter = createHashRouter;\n  exports.createSearchParams = createSearchParams;\n  exports.unstable_HistoryRouter = HistoryRouter;\n  exports.useFetcher = useFetcher;\n  exports.useFetchers = useFetchers;\n  exports.useFormAction = useFormAction;\n  exports.useLinkClickHandler = useLinkClickHandler;\n  exports.useSearchParams = useSearchParams;\n  exports.useSubmit = useSubmit;\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n});","map":{"version":3,"mappings":"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","names":["defaultMethod","defaultEncType","isHtmlElement","object","tagName","isButtonElement","toLowerCase","isFormElement","isInputElement","isModifiedEvent","event","metaKey","altKey","ctrlKey","shiftKey","shouldProcessLinkClick","target","button","createSearchParams","init","URLSearchParams","Array","isArray","Object","keys","reduce","memo","key","value","concat","map","v","getSearchParamsForLocation","locationSearch","defaultSearchParams","searchParams","has","getAll","forEach","append","getFormSubmissionInfo","defaultAction","options","method","action","encType","formData","submissionTrigger","getAttribute","FormData","name","type","form","Error","protocol","host","window","location","url","URL","createBrowserRouter","routes","opts","createRouter","basename","history","createBrowserHistory","hydrationData","__staticRouterHydrationData","enhanceManualRouteObjects","initialize","createHashRouter","createHashHistory","BrowserRouter","_ref","children","historyRef","React","useRef","current","v5Compat","state","setState","useState","useLayoutEffect","listen","Router","navigationType","navigator","HashRouter","_ref2","HistoryRouter","_ref3","displayName","Link","forwardRef","LinkWithRef","ref","onClick","relative","reloadDocument","replace","to","preventScrollReset","_ref4","rest","href","useHref","internalOnClick","useLinkClickHandler","handleClick","defaultPrevented","NavLink","NavLinkWithRef","ariaCurrentProp","caseSensitive","className","classNameProp","end","style","styleProp","_ref5","path","useResolvedPath","match","useMatch","pathname","routerState","useContext","DataRouterStateContext","nextLocation","navigation","nextPath","nextMatch","useMemo","matchPath","isPending","isActive","ariaCurrent","undefined","filter","Boolean","join","Form","props","FormImpl","forwardedRef","onSubmit","fetcherKey","routeId","_ref6","submit","useSubmitImpl","formMethod","formAction","useFormAction","submitHandler","preventDefault","submitter","nativeEvent","currentTarget","ScrollRestoration","_ref7","getKey","storageKey","useScrollRestoration","_temp","replaceProp","navigate","useNavigate","useLocation","useCallback","createPath","useSearchParams","defaultInit","warning","defaultSearchParamsRef","search","setSearchParams","nextInit","navigateOptions","newSearchParams","useSubmit","dataRouterContext","DataRouterContext","invariant","router","document","formEncType","fetch","_temp2","routeContext","RouteContext","matches","slice","resolvedAction","hash","route","index","params","delete","toString","createFetcherForm","FetcherForm","fetcherId","useFetcher","length","id","String","load","fetcher","getFetcher","fetcherWithComponents","useEffect","console","warn","deleteFetcher","useFetchers","fetchers","values","SCROLL_RESTORATION_STORAGE_KEY","savedScrollPositions","_temp3","useMatches","useNavigation","restoreScrollPosition","scrollRestoration","useBeforeUnload","scrollY","sessionStorage","setItem","JSON","stringify","sessionPositions","getItem","parse","e","disableScrollRestoration","enableScrollRestoration","scrollTo","el","getElementById","scrollIntoView","callback","addEventListener","removeEventListener","cond","message"],"sources":["C:\\Users\\Rohith\\mern\\frontend\\node_modules\\react-router-dom\\dom.ts","C:\\Users\\Rohith\\mern\\frontend\\node_modules\\react-router-dom\\index.tsx"],"sourcesContent":["import type { FormEncType, FormMethod } from \"@remix-run/router\";\nimport type { RelativeRoutingType } from \"react-router\";\n\nexport const defaultMethod = \"get\";\nconst defaultEncType = \"application/x-www-form-urlencoded\";\n\nexport function isHtmlElement(object: any): object is HTMLElement {\n  return object != null && typeof object.tagName === \"string\";\n}\n\nexport function isButtonElement(object: any): object is HTMLButtonElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"button\";\n}\n\nexport function isFormElement(object: any): object is HTMLFormElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"form\";\n}\n\nexport function isInputElement(object: any): object is HTMLInputElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"input\";\n}\n\ntype LimitedMouseEvent = Pick<\n  MouseEvent,\n  \"button\" | \"metaKey\" | \"altKey\" | \"ctrlKey\" | \"shiftKey\"\n>;\n\nfunction isModifiedEvent(event: LimitedMouseEvent) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n\nexport function shouldProcessLinkClick(\n  event: LimitedMouseEvent,\n  target?: string\n) {\n  return (\n    event.button === 0 && // Ignore everything but left clicks\n    (!target || target === \"_self\") && // Let browser handle \"target=_blank\" etc.\n    !isModifiedEvent(event) // Ignore clicks with modifier keys\n  );\n}\n\nexport type ParamKeyValuePair = [string, string];\n\nexport type URLSearchParamsInit =\n  | string\n  | ParamKeyValuePair[]\n  | Record<string, string | string[]>\n  | URLSearchParams;\n\n/**\n * Creates a URLSearchParams object using the given initializer.\n *\n * This is identical to `new URLSearchParams(init)` except it also\n * supports arrays as values in the object form of the initializer\n * instead of just strings. This is convenient when you need multiple\n * values for a given key, but don't want to use an array initializer.\n *\n * For example, instead of:\n *\n *   let searchParams = new URLSearchParams([\n *     ['sort', 'name'],\n *     ['sort', 'price']\n *   ]);\n *\n * you can do:\n *\n *   let searchParams = createSearchParams({\n *     sort: ['name', 'price']\n *   });\n */\nexport function createSearchParams(\n  init: URLSearchParamsInit = \"\"\n): URLSearchParams {\n  return new URLSearchParams(\n    typeof init === \"string\" ||\n    Array.isArray(init) ||\n    init instanceof URLSearchParams\n      ? init\n      : Object.keys(init).reduce((memo, key) => {\n          let value = init[key];\n          return memo.concat(\n            Array.isArray(value) ? value.map((v) => [key, v]) : [[key, value]]\n          );\n        }, [] as ParamKeyValuePair[])\n  );\n}\n\nexport function getSearchParamsForLocation(\n  locationSearch: string,\n  defaultSearchParams: URLSearchParams\n) {\n  let searchParams = createSearchParams(locationSearch);\n\n  for (let key of defaultSearchParams.keys()) {\n    if (!searchParams.has(key)) {\n      defaultSearchParams.getAll(key).forEach((value) => {\n        searchParams.append(key, value);\n      });\n    }\n  }\n\n  return searchParams;\n}\n\nexport interface SubmitOptions {\n  /**\n   * The HTTP method used to submit the form. Overrides `<form method>`.\n   * Defaults to \"GET\".\n   */\n  method?: FormMethod;\n\n  /**\n   * The action URL path used to submit the form. Overrides `<form action>`.\n   * Defaults to the path of the current route.\n   *\n   * Note: It is assumed the path is already resolved. If you need to resolve a\n   * relative path, use `useFormAction`.\n   */\n  action?: string;\n\n  /**\n   * The action URL used to submit the form. Overrides `<form encType>`.\n   * Defaults to \"application/x-www-form-urlencoded\".\n   */\n  encType?: FormEncType;\n\n  /**\n   * Set `true` to replace the current entry in the browser's history stack\n   * instead of creating a new one (i.e. stay on \"the same page\"). Defaults\n   * to `false`.\n   */\n  replace?: boolean;\n\n  /**\n   * Determines whether the form action is relative to the route hierarchy or\n   * the pathname.  Use this if you want to opt out of navigating the route\n   * hierarchy and want to instead route based on /-delimited URL segments\n   */\n  relative?: RelativeRoutingType;\n}\n\nexport function getFormSubmissionInfo(\n  target:\n    | HTMLFormElement\n    | HTMLButtonElement\n    | HTMLInputElement\n    | FormData\n    | URLSearchParams\n    | { [name: string]: string }\n    | null,\n  defaultAction: string,\n  options: SubmitOptions\n): {\n  url: URL;\n  method: string;\n  encType: string;\n  formData: FormData;\n} {\n  let method: string;\n  let action: string;\n  let encType: string;\n  let formData: FormData;\n\n  if (isFormElement(target)) {\n    let submissionTrigger: HTMLButtonElement | HTMLInputElement = (\n      options as any\n    ).submissionTrigger;\n\n    method = options.method || target.getAttribute(\"method\") || defaultMethod;\n    action = options.action || target.getAttribute(\"action\") || defaultAction;\n    encType =\n      options.encType || target.getAttribute(\"enctype\") || defaultEncType;\n\n    formData = new FormData(target);\n\n    if (submissionTrigger && submissionTrigger.name) {\n      formData.append(submissionTrigger.name, submissionTrigger.value);\n    }\n  } else if (\n    isButtonElement(target) ||\n    (isInputElement(target) &&\n      (target.type === \"submit\" || target.type === \"image\"))\n  ) {\n    let form = target.form;\n\n    if (form == null) {\n      throw new Error(\n        `Cannot submit a <button> or <input type=\"submit\"> without a <form>`\n      );\n    }\n\n    // <button>/<input type=\"submit\"> may override attributes of <form>\n\n    method =\n      options.method ||\n      target.getAttribute(\"formmethod\") ||\n      form.getAttribute(\"method\") ||\n      defaultMethod;\n    action =\n      options.action ||\n      target.getAttribute(\"formaction\") ||\n      form.getAttribute(\"action\") ||\n      defaultAction;\n    encType =\n      options.encType ||\n      target.getAttribute(\"formenctype\") ||\n      form.getAttribute(\"enctype\") ||\n      defaultEncType;\n\n    formData = new FormData(form);\n\n    // Include name + value from a <button>, appending in case the button name\n    // matches an existing input name\n    if (target.name) {\n      formData.append(target.name, target.value);\n    }\n  } else if (isHtmlElement(target)) {\n    throw new Error(\n      `Cannot submit element that is not <form>, <button>, or ` +\n        `<input type=\"submit|image\">`\n    );\n  } else {\n    method = options.method || defaultMethod;\n    action = options.action || defaultAction;\n    encType = options.encType || defaultEncType;\n\n    if (target instanceof FormData) {\n      formData = target;\n    } else {\n      formData = new FormData();\n\n      if (target instanceof URLSearchParams) {\n        for (let [name, value] of target) {\n          formData.append(name, value);\n        }\n      } else if (target != null) {\n        for (let name of Object.keys(target)) {\n          formData.append(name, target[name]);\n        }\n      }\n    }\n  }\n\n  let { protocol, host } = window.location;\n  let url = new URL(action, `${protocol}//${host}`);\n\n  return { url, method, encType, formData };\n}\n","/**\n * NOTE: If you refactor this to split up the modules into separate files,\n * you'll need to update the rollup config for react-router-dom-v5-compat.\n */\nimport * as React from \"react\";\nimport type {\n  NavigateOptions,\n  RelativeRoutingType,\n  RouteObject,\n  To,\n} from \"react-router\";\nimport {\n  Router,\n  createPath,\n  useHref,\n  useLocation,\n  useMatch,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useResolvedPath,\n  UNSAFE_DataRouterContext as DataRouterContext,\n  UNSAFE_DataRouterStateContext as DataRouterStateContext,\n  UNSAFE_RouteContext as RouteContext,\n  UNSAFE_enhanceManualRouteObjects as enhanceManualRouteObjects,\n} from \"react-router\";\nimport type {\n  BrowserHistory,\n  Fetcher,\n  FormEncType,\n  FormMethod,\n  GetScrollRestorationKeyFunction,\n  HashHistory,\n  History,\n  HydrationState,\n  Router as RemixRouter,\n} from \"@remix-run/router\";\nimport {\n  createRouter,\n  createBrowserHistory,\n  createHashHistory,\n  invariant,\n  matchPath,\n} from \"@remix-run/router\";\n\nimport type {\n  SubmitOptions,\n  ParamKeyValuePair,\n  URLSearchParamsInit,\n} from \"./dom\";\nimport {\n  createSearchParams,\n  defaultMethod,\n  getFormSubmissionInfo,\n  getSearchParamsForLocation,\n  shouldProcessLinkClick,\n} from \"./dom\";\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Re-exports\n////////////////////////////////////////////////////////////////////////////////\n\nexport type {\n  FormEncType,\n  FormMethod,\n  ParamKeyValuePair,\n  SubmitOptions,\n  URLSearchParamsInit,\n};\nexport { createSearchParams };\n\n// Note: Keep in sync with react-router exports!\nexport type {\n  ActionFunction,\n  ActionFunctionArgs,\n  AwaitProps,\n  DataMemoryRouterProps,\n  DataRouteMatch,\n  DataRouteObject,\n  Fetcher,\n  Hash,\n  IndexRouteProps,\n  JsonFunction,\n  LayoutRouteProps,\n  LoaderFunction,\n  LoaderFunctionArgs,\n  Location,\n  MemoryRouterProps,\n  NavigateFunction,\n  NavigateOptions,\n  NavigateProps,\n  Navigation,\n  Navigator,\n  OutletProps,\n  Params,\n  ParamParseKey,\n  Path,\n  PathMatch,\n  Pathname,\n  PathPattern,\n  PathRouteProps,\n  RedirectFunction,\n  RelativeRoutingType,\n  RouteMatch,\n  RouteObject,\n  RouteProps,\n  RouterProps,\n  RouterProviderProps,\n  RoutesProps,\n  Search,\n  ShouldRevalidateFunction,\n  To,\n} from \"react-router\";\nexport {\n  AbortedDeferredError,\n  Await,\n  MemoryRouter,\n  Navigate,\n  NavigationType,\n  Outlet,\n  Route,\n  Router,\n  RouterProvider,\n  Routes,\n  createMemoryRouter,\n  createPath,\n  createRoutesFromChildren,\n  createRoutesFromElements,\n  defer,\n  isRouteErrorResponse,\n  generatePath,\n  json,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  redirect,\n  renderMatches,\n  resolvePath,\n  useActionData,\n  useAsyncError,\n  useAsyncValue,\n  useHref,\n  useInRouterContext,\n  useLoaderData,\n  useLocation,\n  useMatch,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useNavigationType,\n  useOutlet,\n  useOutletContext,\n  useParams,\n  useResolvedPath,\n  useRevalidator,\n  useRouteError,\n  useRouteLoaderData,\n  useRoutes,\n} from \"react-router\";\n\n///////////////////////////////////////////////////////////////////////////////\n// DANGER! PLEASE READ ME!\n// We provide these exports as an escape hatch in the event that you need any\n// routing data that we don't provide an explicit API for. With that said, we\n// want to cover your use case if we can, so if you feel the need to use these\n// we want to hear from you. Let us know what you're building and we'll do our\n// best to make sure we can support you!\n//\n// We consider these exports an implementation detail and do not guarantee\n// against any breaking changes, regardless of the semver release. Use with\n// extreme caution and only if you understand the consequences. Godspeed.\n///////////////////////////////////////////////////////////////////////////////\n\n/** @internal */\nexport {\n  UNSAFE_DataRouterContext,\n  UNSAFE_DataRouterStateContext,\n  UNSAFE_DataStaticRouterContext,\n  UNSAFE_NavigationContext,\n  UNSAFE_LocationContext,\n  UNSAFE_RouteContext,\n  UNSAFE_enhanceManualRouteObjects,\n} from \"react-router\";\n//#endregion\n\ndeclare global {\n  var __staticRouterHydrationData: HydrationState | undefined;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Routers\n////////////////////////////////////////////////////////////////////////////////\n\nexport function createBrowserRouter(\n  routes: RouteObject[],\n  opts?: {\n    basename?: string;\n    hydrationData?: HydrationState;\n    window?: Window;\n  }\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    history: createBrowserHistory({ window: opts?.window }),\n    hydrationData: opts?.hydrationData || window?.__staticRouterHydrationData,\n    routes: enhanceManualRouteObjects(routes),\n  }).initialize();\n}\n\nexport function createHashRouter(\n  routes: RouteObject[],\n  opts?: {\n    basename?: string;\n    hydrationData?: HydrationState;\n    window?: Window;\n  }\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    history: createHashHistory({ window: opts?.window }),\n    hydrationData: opts?.hydrationData || window?.__staticRouterHydrationData,\n    routes: enhanceManualRouteObjects(routes),\n  }).initialize();\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Components\n////////////////////////////////////////////////////////////////////////////////\n\nexport interface BrowserRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Provides the cleanest URLs.\n */\nexport function BrowserRouter({\n  basename,\n  children,\n  window,\n}: BrowserRouterProps) {\n  let historyRef = React.useRef<BrowserHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createBrowserHistory({ window, v5Compat: true });\n  }\n\n  let history = historyRef.current;\n  let [state, setState] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface HashRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Stores the location in the hash\n * portion of the URL so it is not sent to the server.\n */\nexport function HashRouter({ basename, children, window }: HashRouterProps) {\n  let historyRef = React.useRef<HashHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createHashHistory({ window, v5Compat: true });\n  }\n\n  let history = historyRef.current;\n  let [state, setState] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface HistoryRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  history: History;\n}\n\n/**\n * A `<Router>` that accepts a pre-instantiated history object. It's important\n * to note that using your own history object is highly discouraged and may add\n * two versions of the history library to your bundles unless you use the same\n * version of the history library that React Router uses internally.\n */\nfunction HistoryRouter({ basename, children, history }: HistoryRouterProps) {\n  const [state, setState] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nif (__DEV__) {\n  HistoryRouter.displayName = \"unstable_HistoryRouter\";\n}\n\nexport { HistoryRouter as unstable_HistoryRouter };\n\nexport interface LinkProps\n  extends Omit<React.AnchorHTMLAttributes<HTMLAnchorElement>, \"href\"> {\n  reloadDocument?: boolean;\n  replace?: boolean;\n  state?: any;\n  preventScrollReset?: boolean;\n  relative?: RelativeRoutingType;\n  to: To;\n}\n\n/**\n * The public API for rendering a history-aware <a>.\n */\nexport const Link = React.forwardRef<HTMLAnchorElement, LinkProps>(\n  function LinkWithRef(\n    {\n      onClick,\n      relative,\n      reloadDocument,\n      replace,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      ...rest\n    },\n    ref\n  ) {\n    let href = useHref(to, { relative });\n    let internalOnClick = useLinkClickHandler(to, {\n      replace,\n      state,\n      target,\n      preventScrollReset,\n      relative,\n    });\n    function handleClick(\n      event: React.MouseEvent<HTMLAnchorElement, MouseEvent>\n    ) {\n      if (onClick) onClick(event);\n      if (!event.defaultPrevented) {\n        internalOnClick(event);\n      }\n    }\n\n    return (\n      // eslint-disable-next-line jsx-a11y/anchor-has-content\n      <a\n        {...rest}\n        href={href}\n        onClick={reloadDocument ? onClick : handleClick}\n        ref={ref}\n        target={target}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  Link.displayName = \"Link\";\n}\n\nexport interface NavLinkProps\n  extends Omit<LinkProps, \"className\" | \"style\" | \"children\"> {\n  children?:\n    | React.ReactNode\n    | ((props: { isActive: boolean; isPending: boolean }) => React.ReactNode);\n  caseSensitive?: boolean;\n  className?:\n    | string\n    | ((props: {\n        isActive: boolean;\n        isPending: boolean;\n      }) => string | undefined);\n  end?: boolean;\n  style?:\n    | React.CSSProperties\n    | ((props: {\n        isActive: boolean;\n        isPending: boolean;\n      }) => React.CSSProperties | undefined);\n}\n\n/**\n * A <Link> wrapper that knows if it's \"active\" or not.\n */\nexport const NavLink = React.forwardRef<HTMLAnchorElement, NavLinkProps>(\n  function NavLinkWithRef(\n    {\n      \"aria-current\": ariaCurrentProp = \"page\",\n      caseSensitive = false,\n      className: classNameProp = \"\",\n      end = false,\n      style: styleProp,\n      to,\n      children,\n      ...rest\n    },\n    ref\n  ) {\n    let path = useResolvedPath(to);\n    let match = useMatch({ path: path.pathname, end, caseSensitive });\n\n    let routerState = React.useContext(DataRouterStateContext);\n    let nextLocation = routerState?.navigation.location;\n    let nextPath = useResolvedPath(nextLocation || \"\");\n    let nextMatch = React.useMemo(\n      () =>\n        nextLocation\n          ? matchPath(\n              { path: path.pathname, end, caseSensitive },\n              nextPath.pathname\n            )\n          : null,\n      [nextLocation, path.pathname, caseSensitive, end, nextPath.pathname]\n    );\n\n    let isPending = nextMatch != null;\n    let isActive = match != null;\n\n    let ariaCurrent = isActive ? ariaCurrentProp : undefined;\n\n    let className: string | undefined;\n    if (typeof classNameProp === \"function\") {\n      className = classNameProp({ isActive, isPending });\n    } else {\n      // If the className prop is not a function, we use a default `active`\n      // class for <NavLink />s that are active. In v5 `active` was the default\n      // value for `activeClassName`, but we are removing that API and can still\n      // use the old default behavior for a cleaner upgrade path and keep the\n      // simple styling rules working as they currently do.\n      className = [\n        classNameProp,\n        isActive ? \"active\" : null,\n        isPending ? \"pending\" : null,\n      ]\n        .filter(Boolean)\n        .join(\" \");\n    }\n\n    let style =\n      typeof styleProp === \"function\"\n        ? styleProp({ isActive, isPending })\n        : styleProp;\n\n    return (\n      <Link\n        {...rest}\n        aria-current={ariaCurrent}\n        className={className}\n        ref={ref}\n        style={style}\n        to={to}\n      >\n        {typeof children === \"function\"\n          ? children({ isActive, isPending })\n          : children}\n      </Link>\n    );\n  }\n);\n\nif (__DEV__) {\n  NavLink.displayName = \"NavLink\";\n}\n\nexport interface FormProps extends React.FormHTMLAttributes<HTMLFormElement> {\n  /**\n   * The HTTP verb to use when the form is submit. Supports \"get\", \"post\",\n   * \"put\", \"delete\", \"patch\".\n   */\n  method?: FormMethod;\n\n  /**\n   * Normal `<form action>` but supports React Router's relative paths.\n   */\n  action?: string;\n\n  /**\n   * Forces a full document navigation instead of a fetch.\n   */\n  reloadDocument?: boolean;\n\n  /**\n   * Replaces the current entry in the browser history stack when the form\n   * navigates. Use this if you don't want the user to be able to click \"back\"\n   * to the page with the form on it.\n   */\n  replace?: boolean;\n\n  /**\n   * Determines whether the form action is relative to the route hierarchy or\n   * the pathname.  Use this if you want to opt out of navigating the route\n   * hierarchy and want to instead route based on /-delimited URL segments\n   */\n  relative?: RelativeRoutingType;\n\n  /**\n   * A function to call when the form is submitted. If you call\n   * `event.preventDefault()` then this form will not do anything.\n   */\n  onSubmit?: React.FormEventHandler<HTMLFormElement>;\n}\n\n/**\n * A `@remix-run/router`-aware `<form>`. It behaves like a normal form except\n * that the interaction with the server is with `fetch` instead of new document\n * requests, allowing components to add nicer UX to the page as the form is\n * submitted and returns with data.\n */\nexport const Form = React.forwardRef<HTMLFormElement, FormProps>(\n  (props, ref) => {\n    return <FormImpl {...props} ref={ref} />;\n  }\n);\n\nif (__DEV__) {\n  Form.displayName = \"Form\";\n}\n\ntype HTMLSubmitEvent = React.BaseSyntheticEvent<\n  SubmitEvent,\n  Event,\n  HTMLFormElement\n>;\n\ntype HTMLFormSubmitter = HTMLButtonElement | HTMLInputElement;\n\ninterface FormImplProps extends FormProps {\n  fetcherKey?: string;\n  routeId?: string;\n}\n\nconst FormImpl = React.forwardRef<HTMLFormElement, FormImplProps>(\n  (\n    {\n      reloadDocument,\n      replace,\n      method = defaultMethod,\n      action,\n      onSubmit,\n      fetcherKey,\n      routeId,\n      relative,\n      ...props\n    },\n    forwardedRef\n  ) => {\n    let submit = useSubmitImpl(fetcherKey, routeId);\n    let formMethod: FormMethod =\n      method.toLowerCase() === \"get\" ? \"get\" : \"post\";\n    let formAction = useFormAction(action, { relative });\n    let submitHandler: React.FormEventHandler<HTMLFormElement> = (event) => {\n      onSubmit && onSubmit(event);\n      if (event.defaultPrevented) return;\n      event.preventDefault();\n\n      let submitter = (event as unknown as HTMLSubmitEvent).nativeEvent\n        .submitter as HTMLFormSubmitter | null;\n\n      submit(submitter || event.currentTarget, { method, replace, relative });\n    };\n\n    return (\n      <form\n        ref={forwardedRef}\n        method={formMethod}\n        action={formAction}\n        onSubmit={reloadDocument ? onSubmit : submitHandler}\n        {...props}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  Form.displayName = \"Form\";\n}\n\ninterface ScrollRestorationProps {\n  getKey?: GetScrollRestorationKeyFunction;\n  storageKey?: string;\n}\n\n/**\n * This component will emulate the browser's scroll restoration on location\n * changes.\n */\nexport function ScrollRestoration({\n  getKey,\n  storageKey,\n}: ScrollRestorationProps) {\n  useScrollRestoration({ getKey, storageKey });\n  return null;\n}\n\nif (__DEV__) {\n  ScrollRestoration.displayName = \"ScrollRestoration\";\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Hooks\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Handles the click behavior for router `<Link>` components. This is useful if\n * you need to create custom `<Link>` components with the same click behavior we\n * use in our exported `<Link>`.\n */\nexport function useLinkClickHandler<E extends Element = HTMLAnchorElement>(\n  to: To,\n  {\n    target,\n    replace: replaceProp,\n    state,\n    preventScrollReset,\n    relative,\n  }: {\n    target?: React.HTMLAttributeAnchorTarget;\n    replace?: boolean;\n    state?: any;\n    preventScrollReset?: boolean;\n    relative?: RelativeRoutingType;\n  } = {}\n): (event: React.MouseEvent<E, MouseEvent>) => void {\n  let navigate = useNavigate();\n  let location = useLocation();\n  let path = useResolvedPath(to, { relative });\n\n  return React.useCallback(\n    (event: React.MouseEvent<E, MouseEvent>) => {\n      if (shouldProcessLinkClick(event, target)) {\n        event.preventDefault();\n\n        // If the URL hasn't changed, a regular <a> will do a replace instead of\n        // a push, so do the same here unless the replace prop is explicitly set\n        let replace =\n          replaceProp !== undefined\n            ? replaceProp\n            : createPath(location) === createPath(path);\n\n        navigate(to, { replace, state, preventScrollReset, relative });\n      }\n    },\n    [\n      location,\n      navigate,\n      path,\n      replaceProp,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      relative,\n    ]\n  );\n}\n\n/**\n * A convenient wrapper for reading and writing search parameters via the\n * URLSearchParams interface.\n */\nexport function useSearchParams(\n  defaultInit?: URLSearchParamsInit\n): [URLSearchParams, SetURLSearchParams] {\n  warning(\n    typeof URLSearchParams !== \"undefined\",\n    `You cannot use the \\`useSearchParams\\` hook in a browser that does not ` +\n      `support the URLSearchParams API. If you need to support Internet ` +\n      `Explorer 11, we recommend you load a polyfill such as ` +\n      `https://github.com/ungap/url-search-params\\n\\n` +\n      `If you're unsure how to load polyfills, we recommend you check out ` +\n      `https://polyfill.io/v3/ which provides some recommendations about how ` +\n      `to load polyfills only for users that need them, instead of for every ` +\n      `user.`\n  );\n\n  let defaultSearchParamsRef = React.useRef(createSearchParams(defaultInit));\n\n  let location = useLocation();\n  let searchParams = React.useMemo(\n    () =>\n      getSearchParamsForLocation(\n        location.search,\n        defaultSearchParamsRef.current\n      ),\n    [location.search]\n  );\n\n  let navigate = useNavigate();\n  let setSearchParams = React.useCallback<SetURLSearchParams>(\n    (nextInit, navigateOptions) => {\n      const newSearchParams = createSearchParams(\n        typeof nextInit === \"function\" ? nextInit(searchParams) : nextInit\n      );\n      navigate(\"?\" + newSearchParams, navigateOptions);\n    },\n    [navigate, searchParams]\n  );\n\n  return [searchParams, setSearchParams];\n}\n\ntype SetURLSearchParams = (\n  nextInit?:\n    | URLSearchParamsInit\n    | ((prev: URLSearchParams) => URLSearchParamsInit),\n  navigateOpts?: NavigateOptions\n) => void;\n\ntype SubmitTarget =\n  | HTMLFormElement\n  | HTMLButtonElement\n  | HTMLInputElement\n  | FormData\n  | URLSearchParams\n  | { [name: string]: string }\n  | null;\n\n/**\n * Submits a HTML `<form>` to the server without reloading the page.\n */\nexport interface SubmitFunction {\n  (\n    /**\n     * Specifies the `<form>` to be submitted to the server, a specific\n     * `<button>` or `<input type=\"submit\">` to use to submit the form, or some\n     * arbitrary data to submit.\n     *\n     * Note: When using a `<button>` its `name` and `value` will also be\n     * included in the form data that is submitted.\n     */\n    target: SubmitTarget,\n\n    /**\n     * Options that override the `<form>`'s own attributes. Required when\n     * submitting arbitrary data without a backing `<form>`.\n     */\n    options?: SubmitOptions\n  ): void;\n}\n\n/**\n * Returns a function that may be used to programmatically submit a form (or\n * some arbitrary data) to the server.\n */\nexport function useSubmit(): SubmitFunction {\n  return useSubmitImpl();\n}\n\nfunction useSubmitImpl(fetcherKey?: string, routeId?: string): SubmitFunction {\n  let dataRouterContext = React.useContext(DataRouterContext);\n  invariant(\n    dataRouterContext,\n    \"useSubmitImpl must be used within a Data Router\"\n  );\n  let { router } = dataRouterContext;\n  let defaultAction = useFormAction();\n\n  return React.useCallback(\n    (target, options = {}) => {\n      if (typeof document === \"undefined\") {\n        throw new Error(\n          \"You are calling submit during the server render. \" +\n            \"Try calling submit within a `useEffect` or callback instead.\"\n        );\n      }\n\n      let { method, encType, formData, url } = getFormSubmissionInfo(\n        target,\n        defaultAction,\n        options\n      );\n\n      let href = url.pathname + url.search;\n      let opts = {\n        replace: options.replace,\n        formData,\n        formMethod: method as FormMethod,\n        formEncType: encType as FormEncType,\n      };\n      if (fetcherKey) {\n        invariant(routeId != null, \"No routeId available for useFetcher()\");\n        router.fetch(fetcherKey, routeId, href, opts);\n      } else {\n        router.navigate(href, opts);\n      }\n    },\n    [defaultAction, router, fetcherKey, routeId]\n  );\n}\n\nexport function useFormAction(\n  action?: string,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): string {\n  let routeContext = React.useContext(RouteContext);\n  invariant(routeContext, \"useFormAction must be used inside a RouteContext\");\n\n  let [match] = routeContext.matches.slice(-1);\n  let resolvedAction = action ?? \".\";\n  let path = useResolvedPath(resolvedAction, { relative });\n\n  // Previously we set the default action to \".\". The problem with this is that\n  // `useResolvedPath(\".\")` excludes search params and the hash of the resolved\n  // URL. This is the intended behavior of when \".\" is specifically provided as\n  // the form action, but inconsistent w/ browsers when the action is omitted.\n  // https://github.com/remix-run/remix/issues/927\n  let location = useLocation();\n  if (action == null) {\n    // Safe to write to these directly here since if action was undefined, we\n    // would have called useResolvedPath(\".\") which will never include a search\n    // or hash\n    path.search = location.search;\n    path.hash = location.hash;\n\n    // When grabbing search params from the URL, remove the automatically\n    // inserted ?index param so we match the useResolvedPath search behavior\n    // which would not include ?index\n    if (match.route.index) {\n      let params = new URLSearchParams(path.search);\n      params.delete(\"index\");\n      path.search = params.toString() ? `?${params.toString()}` : \"\";\n    }\n  }\n\n  if ((!action || action === \".\") && match.route.index) {\n    path.search = path.search\n      ? path.search.replace(/^\\?/, \"?index&\")\n      : \"?index\";\n  }\n\n  return createPath(path);\n}\n\nfunction createFetcherForm(fetcherKey: string, routeId: string) {\n  let FetcherForm = React.forwardRef<HTMLFormElement, FormProps>(\n    (props, ref) => {\n      return (\n        <FormImpl\n          {...props}\n          ref={ref}\n          fetcherKey={fetcherKey}\n          routeId={routeId}\n        />\n      );\n    }\n  );\n  if (__DEV__) {\n    FetcherForm.displayName = \"fetcher.Form\";\n  }\n  return FetcherForm;\n}\n\nlet fetcherId = 0;\n\nexport type FetcherWithComponents<TData> = Fetcher<TData> & {\n  Form: ReturnType<typeof createFetcherForm>;\n  submit: (\n    target: SubmitTarget,\n    // Fetchers cannot replace because they are not navigation events\n    options?: Omit<SubmitOptions, \"replace\">\n  ) => void;\n  load: (href: string) => void;\n};\n\n/**\n * Interacts with route loaders and actions without causing a navigation. Great\n * for any interaction that stays on the same page.\n */\nexport function useFetcher<TData = any>(): FetcherWithComponents<TData> {\n  let dataRouterContext = React.useContext(DataRouterContext);\n  invariant(dataRouterContext, `useFetcher must be used within a Data Router`);\n  let { router } = dataRouterContext;\n\n  let route = React.useContext(RouteContext);\n  invariant(route, `useFetcher must be used inside a RouteContext`);\n\n  let routeId = route.matches[route.matches.length - 1]?.route.id;\n  invariant(\n    routeId != null,\n    `useFetcher can only be used on routes that contain a unique \"id\"`\n  );\n\n  let [fetcherKey] = React.useState(() => String(++fetcherId));\n  let [Form] = React.useState(() => {\n    invariant(routeId, `No routeId available for fetcher.Form()`);\n    return createFetcherForm(fetcherKey, routeId);\n  });\n  let [load] = React.useState(() => (href: string) => {\n    invariant(router, \"No router available for fetcher.load()\");\n    invariant(routeId, \"No routeId available for fetcher.load()\");\n    router.fetch(fetcherKey, routeId, href);\n  });\n  let submit = useSubmitImpl(fetcherKey, routeId);\n\n  let fetcher = router.getFetcher<TData>(fetcherKey);\n\n  let fetcherWithComponents = React.useMemo(\n    () => ({\n      Form,\n      submit,\n      load,\n      ...fetcher,\n    }),\n    [fetcher, Form, submit, load]\n  );\n\n  React.useEffect(() => {\n    // Is this busted when the React team gets real weird and calls effects\n    // twice on mount?  We really just need to garbage collect here when this\n    // fetcher is no longer around.\n    return () => {\n      if (!router) {\n        console.warn(`No fetcher available to clean up from useFetcher()`);\n        return;\n      }\n      router.deleteFetcher(fetcherKey);\n    };\n  }, [router, fetcherKey]);\n\n  return fetcherWithComponents;\n}\n\n/**\n * Provides all fetchers currently on the page. Useful for layouts and parent\n * routes that need to provide pending/optimistic UI regarding the fetch.\n */\nexport function useFetchers(): Fetcher[] {\n  let state = React.useContext(DataRouterStateContext);\n  invariant(state, `useFetchers must be used within a DataRouterStateContext`);\n  return [...state.fetchers.values()];\n}\n\nconst SCROLL_RESTORATION_STORAGE_KEY = \"react-router-scroll-positions\";\nlet savedScrollPositions: Record<string, number> = {};\n\n/**\n * When rendered inside a RouterProvider, will restore scroll positions on navigations\n */\nfunction useScrollRestoration({\n  getKey,\n  storageKey,\n}: {\n  getKey?: GetScrollRestorationKeyFunction;\n  storageKey?: string;\n} = {}) {\n  let location = useLocation();\n  let matches = useMatches();\n  let navigation = useNavigation();\n  let dataRouterContext = React.useContext(DataRouterContext);\n  invariant(\n    dataRouterContext,\n    \"useScrollRestoration must be used within a DataRouterContext\"\n  );\n  let { router } = dataRouterContext;\n  let state = React.useContext(DataRouterStateContext);\n\n  invariant(\n    router != null && state != null,\n    \"useScrollRestoration must be used within a DataRouterStateContext\"\n  );\n  let { restoreScrollPosition, preventScrollReset } = state;\n\n  // Trigger manual scroll restoration while we're active\n  React.useEffect(() => {\n    window.history.scrollRestoration = \"manual\";\n    return () => {\n      window.history.scrollRestoration = \"auto\";\n    };\n  }, []);\n\n  // Save positions on unload\n  useBeforeUnload(\n    React.useCallback(() => {\n      if (navigation.state === \"idle\") {\n        let key = (getKey ? getKey(location, matches) : null) || location.key;\n        savedScrollPositions[key] = window.scrollY;\n      }\n      sessionStorage.setItem(\n        storageKey || SCROLL_RESTORATION_STORAGE_KEY,\n        JSON.stringify(savedScrollPositions)\n      );\n      window.history.scrollRestoration = \"auto\";\n    }, [storageKey, getKey, navigation.state, location, matches])\n  );\n\n  // Read in any saved scroll locations\n  React.useLayoutEffect(() => {\n    try {\n      let sessionPositions = sessionStorage.getItem(\n        storageKey || SCROLL_RESTORATION_STORAGE_KEY\n      );\n      if (sessionPositions) {\n        savedScrollPositions = JSON.parse(sessionPositions);\n      }\n    } catch (e) {\n      // no-op, use default empty object\n    }\n  }, [storageKey]);\n\n  // Enable scroll restoration in the router\n  React.useLayoutEffect(() => {\n    let disableScrollRestoration = router?.enableScrollRestoration(\n      savedScrollPositions,\n      () => window.scrollY,\n      getKey\n    );\n    return () => disableScrollRestoration && disableScrollRestoration();\n  }, [router, getKey]);\n\n  // Restore scrolling when state.restoreScrollPosition changes\n  React.useLayoutEffect(() => {\n    // Explicit false means don't do anything (used for submissions)\n    if (restoreScrollPosition === false) {\n      return;\n    }\n\n    // been here before, scroll to it\n    if (typeof restoreScrollPosition === \"number\") {\n      window.scrollTo(0, restoreScrollPosition);\n      return;\n    }\n\n    // try to scroll to the hash\n    if (location.hash) {\n      let el = document.getElementById(location.hash.slice(1));\n      if (el) {\n        el.scrollIntoView();\n        return;\n      }\n    }\n\n    // Opt out of scroll reset if this link requested it\n    if (preventScrollReset === true) {\n      return;\n    }\n\n    // otherwise go to the top on new locations\n    window.scrollTo(0, 0);\n  }, [location, restoreScrollPosition, preventScrollReset]);\n}\n\nfunction useBeforeUnload(callback: () => any): void {\n  React.useEffect(() => {\n    window.addEventListener(\"beforeunload\", callback);\n    return () => {\n      window.removeEventListener(\"beforeunload\", callback);\n    };\n  }, [callback]);\n}\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Utils\n////////////////////////////////////////////////////////////////////////////////\n\nfunction warning(cond: boolean, message: string): void {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n\n    try {\n      // Welcome to debugging React Router!\n      //\n      // This error is thrown as a convenience so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message);\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\n//#endregion\n"]},"metadata":{},"sourceType":"script"}