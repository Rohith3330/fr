{"ast":null,"code":"'use strict';\n\nvar _docsUrl = require('../docsUrl');\n\nvar _docsUrl2 = _interopRequireDefault(_docsUrl);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n} //------------------------------------------------------------------------------\n// Rule Definition\n//------------------------------------------------------------------------------\n\n\nmodule.exports = {\n  meta: {\n    type: 'suggestion',\n    docs: {\n      url: (0, _docsUrl2['default'])('no-amd')\n    },\n    schema: []\n  },\n  create: function () {\n    function create(context) {\n      return {\n        'CallExpression': function () {\n          function CallExpression(node) {\n            if (context.getScope().type !== 'module') return;\n            if (node.callee.type !== 'Identifier') return;\n            if (node.callee.name !== 'require' && node.callee.name !== 'define') return; // todo: capture define((require, module, exports) => {}) form?\n\n            if (node.arguments.length !== 2) return;\n            var modules = node.arguments[0];\n            if (modules.type !== 'ArrayExpression') return; // todo: check second arg type? (identifier or callback)\n\n            context.report(node, 'Expected imports instead of AMD ' + String(node.callee.name) + '().');\n          }\n\n          return CallExpression;\n        }()\n      };\n    }\n\n    return create;\n  }()\n};\n/**\n * @fileoverview Rule to prefer imports to AMD\n * @author Jamund Ferguson\n */","map":{"version":3,"mappings":";;AAKA;;;;;;;;EAEA;AACA;AACA;;;AAEAA,OAAOC,OAAPD,GAAiB;EACfE,MAAM;IACJC,MAAM,YADF;IAEJC,MAAM;MACJC,KAAK,0BAAQ,QAAR;IADD,CAFF;IAKJC,QAAQ;EALJ,CADS;EASfC,MATe;IAAA,gBASRC,OATQ,EASC;MACd,OAAO;QACL;UAAkB,wBAAUC,IAAV,EAAgB;YAChC,IAAID,QAAQE,QAARF,GAAmBL,IAAnBK,KAA4B,QAAhC,EAA0C;YAE1C,IAAIC,KAAKE,MAALF,CAAYN,IAAZM,KAAqB,YAAzB,EAAuC;YACvC,IAAIA,KAAKE,MAALF,CAAYG,IAAZH,KAAqB,SAArBA,IACAA,KAAKE,MAALF,CAAYG,IAAZH,KAAqB,QADzB,EACmC,OALH,CAOhC;;YACA,IAAIA,KAAKI,SAALJ,CAAeK,MAAfL,KAA0B,CAA9B,EAAiC;YAEjC,IAAMM,UAAUN,KAAKI,SAALJ,CAAe,CAAfA,CAAhB;YACA,IAAIM,QAAQZ,IAARY,KAAiB,iBAArB,EAAwC,OAXR,CAahC;;YAEAP,QAAQQ,MAARR,CAAeC,IAAfD,8CAAwDC,KAAKE,MAALF,CAAYG,IAApE;UAfF;;UAAA;QAAA;MADK,CAAP;IAVa;;IAAA;EAAA;AAAA,CAAjBZ;AAXA","names":["module","exports","meta","type","docs","url","schema","create","context","node","getScope","callee","name","arguments","length","modules","report"],"sources":["C:\\Users\\Rohith\\mern\\frontend\\node_modules\\eslint-plugin-import\\src\\rules\\no-amd.js"],"sourcesContent":["/**\n * @fileoverview Rule to prefer imports to AMD\n * @author Jamund Ferguson\n */\n\nimport docsUrl from '../docsUrl';\n\n//------------------------------------------------------------------------------\n// Rule Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  meta: {\n    type: 'suggestion',\n    docs: {\n      url: docsUrl('no-amd'),\n    },\n    schema: [],\n  },\n\n  create(context) {\n    return {\n      'CallExpression': function (node) {\n        if (context.getScope().type !== 'module') return;\n\n        if (node.callee.type !== 'Identifier') return;\n        if (node.callee.name !== 'require' &&\n            node.callee.name !== 'define') return;\n\n        // todo: capture define((require, module, exports) => {}) form?\n        if (node.arguments.length !== 2) return;\n\n        const modules = node.arguments[0];\n        if (modules.type !== 'ArrayExpression') return;\n\n        // todo: check second arg type? (identifier or callback)\n\n        context.report(node, `Expected imports instead of AMD ${node.callee.name}().`);\n      },\n    };\n\n  },\n};\n"]},"metadata":{},"sourceType":"script"}