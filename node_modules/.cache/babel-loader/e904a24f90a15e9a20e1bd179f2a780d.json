{"ast":null,"code":"/*\n Copyright 2012-2015, Yahoo Inc.\n Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.\n */\n'use strict';\n\nconst {\n  ReportBase\n} = require('istanbul-lib-report');\n\nclass TeamcityReport extends ReportBase {\n  constructor(opts) {\n    super();\n    opts = opts || {};\n    this.file = opts.file || null;\n    this.blockName = opts.blockName || 'Code Coverage Summary';\n  }\n\n  onStart(node, context) {\n    const metrics = node.getCoverageSummary();\n    const cw = context.writer.writeFile(this.file);\n    cw.println('');\n    cw.println(\"##teamcity[blockOpened name='\" + this.blockName + \"']\"); //Statements Covered\n\n    cw.println(lineForKey(metrics.statements.covered, 'CodeCoverageAbsBCovered'));\n    cw.println(lineForKey(metrics.statements.total, 'CodeCoverageAbsBTotal')); //Branches Covered\n\n    cw.println(lineForKey(metrics.branches.covered, 'CodeCoverageAbsRCovered'));\n    cw.println(lineForKey(metrics.branches.total, 'CodeCoverageAbsRTotal')); //Functions Covered\n\n    cw.println(lineForKey(metrics.functions.covered, 'CodeCoverageAbsMCovered'));\n    cw.println(lineForKey(metrics.functions.total, 'CodeCoverageAbsMTotal')); //Lines Covered\n\n    cw.println(lineForKey(metrics.lines.covered, 'CodeCoverageAbsLCovered'));\n    cw.println(lineForKey(metrics.lines.total, 'CodeCoverageAbsLTotal'));\n    cw.println(\"##teamcity[blockClosed name='\" + this.blockName + \"']\");\n    cw.close();\n  }\n\n}\n\nfunction lineForKey(value, teamcityVar) {\n  return \"##teamcity[buildStatisticValue key='\" + teamcityVar + \"' value='\" + value + \"']\";\n}\n\nmodule.exports = TeamcityReport;","map":{"version":3,"names":["ReportBase","require","TeamcityReport","constructor","opts","file","blockName","onStart","node","context","metrics","getCoverageSummary","cw","writer","writeFile","println","lineForKey","statements","covered","total","branches","functions","lines","close","value","teamcityVar","module","exports"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/istanbul-reports/lib/teamcity/index.js"],"sourcesContent":["/*\n Copyright 2012-2015, Yahoo Inc.\n Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.\n */\n'use strict';\nconst { ReportBase } = require('istanbul-lib-report');\n\nclass TeamcityReport extends ReportBase {\n    constructor(opts) {\n        super();\n\n        opts = opts || {};\n        this.file = opts.file || null;\n        this.blockName = opts.blockName || 'Code Coverage Summary';\n    }\n\n    onStart(node, context) {\n        const metrics = node.getCoverageSummary();\n        const cw = context.writer.writeFile(this.file);\n\n        cw.println('');\n        cw.println(\"##teamcity[blockOpened name='\" + this.blockName + \"']\");\n\n        //Statements Covered\n        cw.println(\n            lineForKey(metrics.statements.covered, 'CodeCoverageAbsBCovered')\n        );\n        cw.println(\n            lineForKey(metrics.statements.total, 'CodeCoverageAbsBTotal')\n        );\n\n        //Branches Covered\n        cw.println(\n            lineForKey(metrics.branches.covered, 'CodeCoverageAbsRCovered')\n        );\n        cw.println(lineForKey(metrics.branches.total, 'CodeCoverageAbsRTotal'));\n\n        //Functions Covered\n        cw.println(\n            lineForKey(metrics.functions.covered, 'CodeCoverageAbsMCovered')\n        );\n        cw.println(\n            lineForKey(metrics.functions.total, 'CodeCoverageAbsMTotal')\n        );\n\n        //Lines Covered\n        cw.println(\n            lineForKey(metrics.lines.covered, 'CodeCoverageAbsLCovered')\n        );\n        cw.println(lineForKey(metrics.lines.total, 'CodeCoverageAbsLTotal'));\n\n        cw.println(\"##teamcity[blockClosed name='\" + this.blockName + \"']\");\n        cw.close();\n    }\n}\n\nfunction lineForKey(value, teamcityVar) {\n    return (\n        \"##teamcity[buildStatisticValue key='\" +\n        teamcityVar +\n        \"' value='\" +\n        value +\n        \"']\"\n    );\n}\n\nmodule.exports = TeamcityReport;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AACA,MAAM;EAAEA;AAAF,IAAiBC,OAAO,CAAC,qBAAD,CAA9B;;AAEA,MAAMC,cAAN,SAA6BF,UAA7B,CAAwC;EACpCG,WAAW,CAACC,IAAD,EAAO;IACd;IAEAA,IAAI,GAAGA,IAAI,IAAI,EAAf;IACA,KAAKC,IAAL,GAAYD,IAAI,CAACC,IAAL,IAAa,IAAzB;IACA,KAAKC,SAAL,GAAiBF,IAAI,CAACE,SAAL,IAAkB,uBAAnC;EACH;;EAEDC,OAAO,CAACC,IAAD,EAAOC,OAAP,EAAgB;IACnB,MAAMC,OAAO,GAAGF,IAAI,CAACG,kBAAL,EAAhB;IACA,MAAMC,EAAE,GAAGH,OAAO,CAACI,MAAR,CAAeC,SAAf,CAAyB,KAAKT,IAA9B,CAAX;IAEAO,EAAE,CAACG,OAAH,CAAW,EAAX;IACAH,EAAE,CAACG,OAAH,CAAW,kCAAkC,KAAKT,SAAvC,GAAmD,IAA9D,EALmB,CAOnB;;IACAM,EAAE,CAACG,OAAH,CACIC,UAAU,CAACN,OAAO,CAACO,UAAR,CAAmBC,OAApB,EAA6B,yBAA7B,CADd;IAGAN,EAAE,CAACG,OAAH,CACIC,UAAU,CAACN,OAAO,CAACO,UAAR,CAAmBE,KAApB,EAA2B,uBAA3B,CADd,EAXmB,CAenB;;IACAP,EAAE,CAACG,OAAH,CACIC,UAAU,CAACN,OAAO,CAACU,QAAR,CAAiBF,OAAlB,EAA2B,yBAA3B,CADd;IAGAN,EAAE,CAACG,OAAH,CAAWC,UAAU,CAACN,OAAO,CAACU,QAAR,CAAiBD,KAAlB,EAAyB,uBAAzB,CAArB,EAnBmB,CAqBnB;;IACAP,EAAE,CAACG,OAAH,CACIC,UAAU,CAACN,OAAO,CAACW,SAAR,CAAkBH,OAAnB,EAA4B,yBAA5B,CADd;IAGAN,EAAE,CAACG,OAAH,CACIC,UAAU,CAACN,OAAO,CAACW,SAAR,CAAkBF,KAAnB,EAA0B,uBAA1B,CADd,EAzBmB,CA6BnB;;IACAP,EAAE,CAACG,OAAH,CACIC,UAAU,CAACN,OAAO,CAACY,KAAR,CAAcJ,OAAf,EAAwB,yBAAxB,CADd;IAGAN,EAAE,CAACG,OAAH,CAAWC,UAAU,CAACN,OAAO,CAACY,KAAR,CAAcH,KAAf,EAAsB,uBAAtB,CAArB;IAEAP,EAAE,CAACG,OAAH,CAAW,kCAAkC,KAAKT,SAAvC,GAAmD,IAA9D;IACAM,EAAE,CAACW,KAAH;EACH;;AA9CmC;;AAiDxC,SAASP,UAAT,CAAoBQ,KAApB,EAA2BC,WAA3B,EAAwC;EACpC,OACI,yCACAA,WADA,GAEA,WAFA,GAGAD,KAHA,GAIA,IALJ;AAOH;;AAEDE,MAAM,CAACC,OAAP,GAAiBzB,cAAjB"},"metadata":{},"sourceType":"script"}