{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"hasContentChanged\", {\n  enumerable: true,\n  get: () => hasContentChanged\n});\n\nconst _crypto = /*#__PURE__*/_interopRequireDefault(require(\"crypto\"));\n\nconst _sharedState = /*#__PURE__*/_interopRequireWildcard(require(\"./sharedState\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function (nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\n\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache(nodeInterop);\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n/**\n * Calculate the hash of a string.\n *\n * This doesn't need to be cryptographically secure or\n * anything like that since it's used only to detect\n * when the CSS changes to invalidate the context.\n *\n * This is wrapped in a try/catch because it's really dependent\n * on how Node itself is build and the environment and OpenSSL\n * version / build that is installed on the user's machine.\n *\n * Based on the environment this can just outright fail.\n *\n * See https://github.com/nodejs/node/issues/40455\n *\n * @param {string} str\n */\n\n\nfunction getHash(str) {\n  try {\n    return _crypto.default.createHash(\"md5\").update(str, \"utf-8\").digest(\"binary\");\n  } catch (err) {\n    return \"\";\n  }\n}\n\nfunction hasContentChanged(sourcePath, root) {\n  let css = root.toString(); // We only care about files with @tailwind directives\n  // Other files use an existing context\n\n  if (!css.includes(\"@tailwind\")) {\n    return false;\n  }\n\n  let existingHash = _sharedState.sourceHashMap.get(sourcePath);\n\n  let rootHash = getHash(css);\n  let didChange = existingHash !== rootHash;\n\n  _sharedState.sourceHashMap.set(sourcePath, rootHash);\n\n  return didChange;\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","enumerable","get","hasContentChanged","_crypto","_interopRequireDefault","require","_sharedState","_interopRequireWildcard","obj","__esModule","default","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","cache","has","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","getHash","str","createHash","update","digest","err","sourcePath","root","css","toString","includes","existingHash","sourceHashMap","rootHash","didChange"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/tailwindcss/lib/lib/cacheInvalidation.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"hasContentChanged\", {\n    enumerable: true,\n    get: ()=>hasContentChanged\n});\nconst _crypto = /*#__PURE__*/ _interopRequireDefault(require(\"crypto\"));\nconst _sharedState = /*#__PURE__*/ _interopRequireWildcard(require(\"./sharedState\"));\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nfunction _getRequireWildcardCache(nodeInterop) {\n    if (typeof WeakMap !== \"function\") return null;\n    var cacheBabelInterop = new WeakMap();\n    var cacheNodeInterop = new WeakMap();\n    return (_getRequireWildcardCache = function(nodeInterop) {\n        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n    })(nodeInterop);\n}\nfunction _interopRequireWildcard(obj, nodeInterop) {\n    if (!nodeInterop && obj && obj.__esModule) {\n        return obj;\n    }\n    if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n        return {\n            default: obj\n        };\n    }\n    var cache = _getRequireWildcardCache(nodeInterop);\n    if (cache && cache.has(obj)) {\n        return cache.get(obj);\n    }\n    var newObj = {};\n    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n    for(var key in obj){\n        if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n            if (desc && (desc.get || desc.set)) {\n                Object.defineProperty(newObj, key, desc);\n            } else {\n                newObj[key] = obj[key];\n            }\n        }\n    }\n    newObj.default = obj;\n    if (cache) {\n        cache.set(obj, newObj);\n    }\n    return newObj;\n}\n/**\n * Calculate the hash of a string.\n *\n * This doesn't need to be cryptographically secure or\n * anything like that since it's used only to detect\n * when the CSS changes to invalidate the context.\n *\n * This is wrapped in a try/catch because it's really dependent\n * on how Node itself is build and the environment and OpenSSL\n * version / build that is installed on the user's machine.\n *\n * Based on the environment this can just outright fail.\n *\n * See https://github.com/nodejs/node/issues/40455\n *\n * @param {string} str\n */ function getHash(str) {\n    try {\n        return _crypto.default.createHash(\"md5\").update(str, \"utf-8\").digest(\"binary\");\n    } catch (err) {\n        return \"\";\n    }\n}\nfunction hasContentChanged(sourcePath, root) {\n    let css = root.toString();\n    // We only care about files with @tailwind directives\n    // Other files use an existing context\n    if (!css.includes(\"@tailwind\")) {\n        return false;\n    }\n    let existingHash = _sharedState.sourceHashMap.get(sourcePath);\n    let rootHash = getHash(css);\n    let didChange = existingHash !== rootHash;\n    _sharedState.sourceHashMap.set(sourcePath, rootHash);\n    return didChange;\n}\n"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EACzCC,KAAK,EAAE;AADkC,CAA7C;AAGAH,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,mBAA/B,EAAoD;EAChDE,UAAU,EAAE,IADoC;EAEhDC,GAAG,EAAE,MAAIC;AAFuC,CAApD;;AAIA,MAAMC,OAAO,GAAG,aAAcC,sBAAsB,CAACC,OAAO,CAAC,QAAD,CAAR,CAApD;;AACA,MAAMC,YAAY,GAAG,aAAcC,uBAAuB,CAACF,OAAO,CAAC,eAAD,CAAR,CAA1D;;AACA,SAASD,sBAAT,CAAgCI,GAAhC,EAAqC;EACjC,OAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;IACjCE,OAAO,EAAEF;EADwB,CAArC;AAGH;;AACD,SAASG,wBAAT,CAAkCC,WAAlC,EAA+C;EAC3C,IAAI,OAAOC,OAAP,KAAmB,UAAvB,EAAmC,OAAO,IAAP;EACnC,IAAIC,iBAAiB,GAAG,IAAID,OAAJ,EAAxB;EACA,IAAIE,gBAAgB,GAAG,IAAIF,OAAJ,EAAvB;EACA,OAAO,CAACF,wBAAwB,GAAG,UAASC,WAAT,EAAsB;IACrD,OAAOA,WAAW,GAAGG,gBAAH,GAAsBD,iBAAxC;EACH,CAFM,EAEJF,WAFI,CAAP;AAGH;;AACD,SAASL,uBAAT,CAAiCC,GAAjC,EAAsCI,WAAtC,EAAmD;EAC/C,IAAI,CAACA,WAAD,IAAgBJ,GAAhB,IAAuBA,GAAG,CAACC,UAA/B,EAA2C;IACvC,OAAOD,GAAP;EACH;;EACD,IAAIA,GAAG,KAAK,IAAR,IAAgB,OAAOA,GAAP,KAAe,QAAf,IAA2B,OAAOA,GAAP,KAAe,UAA9D,EAA0E;IACtE,OAAO;MACHE,OAAO,EAAEF;IADN,CAAP;EAGH;;EACD,IAAIQ,KAAK,GAAGL,wBAAwB,CAACC,WAAD,CAApC;;EACA,IAAII,KAAK,IAAIA,KAAK,CAACC,GAAN,CAAUT,GAAV,CAAb,EAA6B;IACzB,OAAOQ,KAAK,CAACf,GAAN,CAAUO,GAAV,CAAP;EACH;;EACD,IAAIU,MAAM,GAAG,EAAb;EACA,IAAIC,qBAAqB,GAAGvB,MAAM,CAACC,cAAP,IAAyBD,MAAM,CAACwB,wBAA5D;;EACA,KAAI,IAAIC,GAAR,IAAeb,GAAf,EAAmB;IACf,IAAIa,GAAG,KAAK,SAAR,IAAqBzB,MAAM,CAAC0B,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqChB,GAArC,EAA0Ca,GAA1C,CAAzB,EAAyE;MACrE,IAAII,IAAI,GAAGN,qBAAqB,GAAGvB,MAAM,CAACwB,wBAAP,CAAgCZ,GAAhC,EAAqCa,GAArC,CAAH,GAA+C,IAA/E;;MACA,IAAII,IAAI,KAAKA,IAAI,CAACxB,GAAL,IAAYwB,IAAI,CAACC,GAAtB,CAAR,EAAoC;QAChC9B,MAAM,CAACC,cAAP,CAAsBqB,MAAtB,EAA8BG,GAA9B,EAAmCI,IAAnC;MACH,CAFD,MAEO;QACHP,MAAM,CAACG,GAAD,CAAN,GAAcb,GAAG,CAACa,GAAD,CAAjB;MACH;IACJ;EACJ;;EACDH,MAAM,CAACR,OAAP,GAAiBF,GAAjB;;EACA,IAAIQ,KAAJ,EAAW;IACPA,KAAK,CAACU,GAAN,CAAUlB,GAAV,EAAeU,MAAf;EACH;;EACD,OAAOA,MAAP;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAAI,SAASS,OAAT,CAAiBC,GAAjB,EAAsB;EACtB,IAAI;IACA,OAAOzB,OAAO,CAACO,OAAR,CAAgBmB,UAAhB,CAA2B,KAA3B,EAAkCC,MAAlC,CAAyCF,GAAzC,EAA8C,OAA9C,EAAuDG,MAAvD,CAA8D,QAA9D,CAAP;EACH,CAFD,CAEE,OAAOC,GAAP,EAAY;IACV,OAAO,EAAP;EACH;AACJ;;AACD,SAAS9B,iBAAT,CAA2B+B,UAA3B,EAAuCC,IAAvC,EAA6C;EACzC,IAAIC,GAAG,GAAGD,IAAI,CAACE,QAAL,EAAV,CADyC,CAEzC;EACA;;EACA,IAAI,CAACD,GAAG,CAACE,QAAJ,CAAa,WAAb,CAAL,EAAgC;IAC5B,OAAO,KAAP;EACH;;EACD,IAAIC,YAAY,GAAGhC,YAAY,CAACiC,aAAb,CAA2BtC,GAA3B,CAA+BgC,UAA/B,CAAnB;;EACA,IAAIO,QAAQ,GAAGb,OAAO,CAACQ,GAAD,CAAtB;EACA,IAAIM,SAAS,GAAGH,YAAY,KAAKE,QAAjC;;EACAlC,YAAY,CAACiC,aAAb,CAA2Bb,GAA3B,CAA+BO,UAA/B,EAA2CO,QAA3C;;EACA,OAAOC,SAAP;AACH"},"metadata":{},"sourceType":"script"}