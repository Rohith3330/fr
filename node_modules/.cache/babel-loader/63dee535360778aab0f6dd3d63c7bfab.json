{"ast":null,"code":"/**\n * @fileoverview Standardize the way function component get defined\n * @author Stefan Wullems\n */\n'use strict';\n\nconst arrayIncludes = require('array-includes');\n\nconst Components = require('../util/Components');\n\nconst docsUrl = require('../util/docsUrl');\n\nconst reportC = require('../util/report'); // ------------------------------------------------------------------------------\n// Rule Definition\n// ------------------------------------------------------------------------------\n\n\nfunction buildFunction(template, parts) {\n  return Object.keys(parts).reduce((acc, key) => acc.replace(`{${key}}`, () => parts[key] || ''), template);\n}\n\nconst NAMED_FUNCTION_TEMPLATES = {\n  'function-declaration': 'function {name}{typeParams}({params}){returnType} {body}',\n  'arrow-function': '{varType} {name}{typeAnnotation} = {typeParams}({params}){returnType} => {body}',\n  'function-expression': '{varType} {name}{typeAnnotation} = function{typeParams}({params}){returnType} {body}'\n};\nconst UNNAMED_FUNCTION_TEMPLATES = {\n  'function-expression': 'function{typeParams}({params}){returnType} {body}',\n  'arrow-function': '{typeParams}({params}){returnType} => {body}'\n};\n\nfunction hasOneUnconstrainedTypeParam(node) {\n  if (node.typeParameters) {\n    return node.typeParameters.params.length === 1 && !node.typeParameters.params[0].constraint;\n  }\n\n  return false;\n}\n\nfunction hasName(node) {\n  return node.type === 'FunctionDeclaration' || node.parent.type === 'VariableDeclarator';\n}\n\nfunction getNodeText(prop, source) {\n  if (!prop) return null;\n  return source.slice(prop.range[0], prop.range[1]);\n}\n\nfunction getName(node) {\n  if (node.type === 'FunctionDeclaration') {\n    return node.id.name;\n  }\n\n  if (node.type === 'ArrowFunctionExpression' || node.type === 'FunctionExpression') {\n    return hasName(node) && node.parent.id.name;\n  }\n}\n\nfunction getParams(node, source) {\n  if (node.params.length === 0) return null;\n  return source.slice(node.params[0].range[0], node.params[node.params.length - 1].range[1]);\n}\n\nfunction getBody(node, source) {\n  const range = node.body.range;\n\n  if (node.body.type !== 'BlockStatement') {\n    return ['{', `  return ${source.slice(range[0], range[1])}`, '}'].join('\\n');\n  }\n\n  return source.slice(range[0], range[1]);\n}\n\nfunction getTypeAnnotation(node, source) {\n  if (!hasName(node) || node.type === 'FunctionDeclaration') return;\n\n  if (node.type === 'ArrowFunctionExpression' || node.type === 'FunctionExpression') {\n    return getNodeText(node.parent.id.typeAnnotation, source);\n  }\n}\n\nfunction isUnfixableBecauseOfExport(node) {\n  return node.type === 'FunctionDeclaration' && node.parent && node.parent.type === 'ExportDefaultDeclaration';\n}\n\nfunction isFunctionExpressionWithName(node) {\n  return node.type === 'FunctionExpression' && node.id && node.id.name;\n}\n\nconst messages = {\n  'function-declaration': 'Function component is not a function declaration',\n  'function-expression': 'Function component is not a function expression',\n  'arrow-function': 'Function component is not an arrow function'\n};\nmodule.exports = {\n  meta: {\n    docs: {\n      description: 'Enforce a specific function type for function components',\n      category: 'Stylistic Issues',\n      recommended: false,\n      url: docsUrl('function-component-definition')\n    },\n    fixable: 'code',\n    messages,\n    schema: [{\n      type: 'object',\n      properties: {\n        namedComponents: {\n          oneOf: [{\n            enum: ['function-declaration', 'arrow-function', 'function-expression']\n          }, {\n            type: 'array',\n            items: {\n              type: 'string',\n              enum: ['function-declaration', 'arrow-function', 'function-expression']\n            }\n          }]\n        },\n        unnamedComponents: {\n          oneOf: [{\n            enum: ['arrow-function', 'function-expression']\n          }, {\n            type: 'array',\n            items: {\n              type: 'string',\n              enum: ['arrow-function', 'function-expression']\n            }\n          }]\n        }\n      }\n    }]\n  },\n  create: Components.detect((context, components) => {\n    const configuration = context.options[0] || {};\n    let fileVarType = 'var';\n    const namedConfig = [].concat(configuration.namedComponents || 'function-declaration');\n    const unnamedConfig = [].concat(configuration.unnamedComponents || 'function-expression');\n\n    function getFixer(node, options) {\n      const sourceCode = context.getSourceCode();\n      const source = sourceCode.getText();\n      const typeAnnotation = getTypeAnnotation(node, source);\n\n      if (options.type === 'function-declaration' && typeAnnotation) {\n        return;\n      }\n\n      if (options.type === 'arrow-function' && hasOneUnconstrainedTypeParam(node)) {\n        return;\n      }\n\n      if (isUnfixableBecauseOfExport(node)) return;\n      if (isFunctionExpressionWithName(node)) return;\n      let varType = fileVarType;\n\n      if ((node.type === 'FunctionExpression' || node.type === 'ArrowFunctionExpression') && node.parent.type === 'VariableDeclarator') {\n        varType = node.parent.parent.kind;\n      }\n\n      return fixer => fixer.replaceTextRange(options.range, buildFunction(options.template, {\n        typeAnnotation,\n        typeParams: getNodeText(node.typeParameters, source),\n        params: getParams(node, source),\n        returnType: getNodeText(node.returnType, source),\n        body: getBody(node, source),\n        name: getName(node),\n        varType\n      }));\n    }\n\n    function report(node, options) {\n      reportC(context, messages[options.messageId], options.messageId, {\n        node,\n        fix: getFixer(node, options.fixerOptions)\n      });\n    }\n\n    function validate(node, functionType) {\n      if (!components.get(node)) return;\n      if (node.parent && node.parent.type === 'Property') return;\n\n      if (hasName(node) && !arrayIncludes(namedConfig, functionType)) {\n        report(node, {\n          messageId: namedConfig[0],\n          fixerOptions: {\n            type: namedConfig[0],\n            template: NAMED_FUNCTION_TEMPLATES[namedConfig[0]],\n            range: node.type === 'FunctionDeclaration' ? node.range : node.parent.parent.range\n          }\n        });\n      }\n\n      if (!hasName(node) && !arrayIncludes(unnamedConfig, functionType)) {\n        report(node, {\n          messageId: unnamedConfig[0],\n          fixerOptions: {\n            type: unnamedConfig[0],\n            template: UNNAMED_FUNCTION_TEMPLATES[unnamedConfig[0]],\n            range: node.range\n          }\n        });\n      }\n    } // --------------------------------------------------------------------------\n    // Public\n    // --------------------------------------------------------------------------\n\n\n    const validatePairs = [];\n    let hasES6OrJsx = false;\n    return {\n      FunctionDeclaration(node) {\n        validatePairs.push([node, 'function-declaration']);\n      },\n\n      ArrowFunctionExpression(node) {\n        validatePairs.push([node, 'arrow-function']);\n      },\n\n      FunctionExpression(node) {\n        validatePairs.push([node, 'function-expression']);\n      },\n\n      VariableDeclaration(node) {\n        hasES6OrJsx = hasES6OrJsx || node.kind === 'const' || node.kind === 'let';\n      },\n\n      'Program:exit'() {\n        if (hasES6OrJsx) fileVarType = 'const';\n        validatePairs.forEach(pair => validate(pair[0], pair[1]));\n      },\n\n      'ImportDeclaration, ExportNamedDeclaration, ExportDefaultDeclaration, ExportAllDeclaration, ExportSpecifier, ExportDefaultSpecifier, JSXElement, TSExportAssignment, TSImportEqualsDeclaration'() {\n        hasES6OrJsx = true;\n      }\n\n    };\n  })\n};","map":{"version":3,"names":["arrayIncludes","require","Components","docsUrl","reportC","buildFunction","template","parts","Object","keys","reduce","acc","key","replace","NAMED_FUNCTION_TEMPLATES","UNNAMED_FUNCTION_TEMPLATES","hasOneUnconstrainedTypeParam","node","typeParameters","params","length","constraint","hasName","type","parent","getNodeText","prop","source","slice","range","getName","id","name","getParams","getBody","body","join","getTypeAnnotation","typeAnnotation","isUnfixableBecauseOfExport","isFunctionExpressionWithName","messages","module","exports","meta","docs","description","category","recommended","url","fixable","schema","properties","namedComponents","oneOf","enum","items","unnamedComponents","create","detect","context","components","configuration","options","fileVarType","namedConfig","concat","unnamedConfig","getFixer","sourceCode","getSourceCode","getText","varType","kind","fixer","replaceTextRange","typeParams","returnType","report","messageId","fix","fixerOptions","validate","functionType","get","validatePairs","hasES6OrJsx","FunctionDeclaration","push","ArrowFunctionExpression","FunctionExpression","VariableDeclaration","forEach","pair"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/eslint-plugin-react/lib/rules/function-component-definition.js"],"sourcesContent":["/**\n * @fileoverview Standardize the way function component get defined\n * @author Stefan Wullems\n */\n\n'use strict';\n\nconst arrayIncludes = require('array-includes');\nconst Components = require('../util/Components');\nconst docsUrl = require('../util/docsUrl');\nconst reportC = require('../util/report');\n\n// ------------------------------------------------------------------------------\n// Rule Definition\n// ------------------------------------------------------------------------------\n\nfunction buildFunction(template, parts) {\n  return Object.keys(parts).reduce(\n    (acc, key) => acc.replace(`{${key}}`, () => parts[key] || ''),\n    template\n  );\n}\n\nconst NAMED_FUNCTION_TEMPLATES = {\n  'function-declaration': 'function {name}{typeParams}({params}){returnType} {body}',\n  'arrow-function': '{varType} {name}{typeAnnotation} = {typeParams}({params}){returnType} => {body}',\n  'function-expression': '{varType} {name}{typeAnnotation} = function{typeParams}({params}){returnType} {body}',\n};\n\nconst UNNAMED_FUNCTION_TEMPLATES = {\n  'function-expression': 'function{typeParams}({params}){returnType} {body}',\n  'arrow-function': '{typeParams}({params}){returnType} => {body}',\n};\n\nfunction hasOneUnconstrainedTypeParam(node) {\n  if (node.typeParameters) {\n    return (\n      node.typeParameters.params.length === 1\n      && !node.typeParameters.params[0].constraint\n    );\n  }\n\n  return false;\n}\n\nfunction hasName(node) {\n  return (\n    node.type === 'FunctionDeclaration'\n    || node.parent.type === 'VariableDeclarator'\n  );\n}\n\nfunction getNodeText(prop, source) {\n  if (!prop) return null;\n  return source.slice(prop.range[0], prop.range[1]);\n}\n\nfunction getName(node) {\n  if (node.type === 'FunctionDeclaration') {\n    return node.id.name;\n  }\n\n  if (\n    node.type === 'ArrowFunctionExpression'\n    || node.type === 'FunctionExpression'\n  ) {\n    return hasName(node) && node.parent.id.name;\n  }\n}\n\nfunction getParams(node, source) {\n  if (node.params.length === 0) return null;\n  return source.slice(\n    node.params[0].range[0],\n    node.params[node.params.length - 1].range[1]\n  );\n}\n\nfunction getBody(node, source) {\n  const range = node.body.range;\n\n  if (node.body.type !== 'BlockStatement') {\n    return ['{', `  return ${source.slice(range[0], range[1])}`, '}'].join('\\n');\n  }\n\n  return source.slice(range[0], range[1]);\n}\n\nfunction getTypeAnnotation(node, source) {\n  if (!hasName(node) || node.type === 'FunctionDeclaration') return;\n\n  if (\n    node.type === 'ArrowFunctionExpression'\n    || node.type === 'FunctionExpression'\n  ) {\n    return getNodeText(node.parent.id.typeAnnotation, source);\n  }\n}\n\nfunction isUnfixableBecauseOfExport(node) {\n  return (\n    node.type === 'FunctionDeclaration'\n    && node.parent\n    && node.parent.type === 'ExportDefaultDeclaration'\n  );\n}\n\nfunction isFunctionExpressionWithName(node) {\n  return node.type === 'FunctionExpression' && node.id && node.id.name;\n}\n\nconst messages = {\n  'function-declaration': 'Function component is not a function declaration',\n  'function-expression': 'Function component is not a function expression',\n  'arrow-function': 'Function component is not an arrow function',\n};\n\nmodule.exports = {\n  meta: {\n    docs: {\n      description: 'Enforce a specific function type for function components',\n      category: 'Stylistic Issues',\n      recommended: false,\n      url: docsUrl('function-component-definition'),\n    },\n    fixable: 'code',\n\n    messages,\n\n    schema: [\n      {\n        type: 'object',\n        properties: {\n          namedComponents: {\n            oneOf: [\n              {\n                enum: [\n                  'function-declaration',\n                  'arrow-function',\n                  'function-expression',\n                ],\n              },\n              {\n                type: 'array',\n                items: {\n                  type: 'string',\n                  enum: [\n                    'function-declaration',\n                    'arrow-function',\n                    'function-expression',\n                  ],\n                },\n              },\n            ],\n          },\n          unnamedComponents: {\n            oneOf: [\n              { enum: ['arrow-function', 'function-expression'] },\n              {\n                type: 'array',\n                items: {\n                  type: 'string',\n                  enum: ['arrow-function', 'function-expression'],\n                },\n              },\n            ],\n          },\n        },\n      },\n    ],\n  },\n\n  create: Components.detect((context, components) => {\n    const configuration = context.options[0] || {};\n    let fileVarType = 'var';\n\n    const namedConfig = [].concat(\n      configuration.namedComponents || 'function-declaration'\n    );\n    const unnamedConfig = [].concat(\n      configuration.unnamedComponents || 'function-expression'\n    );\n\n    function getFixer(node, options) {\n      const sourceCode = context.getSourceCode();\n      const source = sourceCode.getText();\n\n      const typeAnnotation = getTypeAnnotation(node, source);\n\n      if (options.type === 'function-declaration' && typeAnnotation) {\n        return;\n      }\n      if (options.type === 'arrow-function' && hasOneUnconstrainedTypeParam(node)) {\n        return;\n      }\n      if (isUnfixableBecauseOfExport(node)) return;\n      if (isFunctionExpressionWithName(node)) return;\n      let varType = fileVarType;\n      if (\n        (node.type === 'FunctionExpression' || node.type === 'ArrowFunctionExpression')\n        && node.parent.type === 'VariableDeclarator'\n      ) {\n        varType = node.parent.parent.kind;\n      }\n\n      return (fixer) => fixer.replaceTextRange(\n        options.range,\n        buildFunction(options.template, {\n          typeAnnotation,\n          typeParams: getNodeText(node.typeParameters, source),\n          params: getParams(node, source),\n          returnType: getNodeText(node.returnType, source),\n          body: getBody(node, source),\n          name: getName(node),\n          varType,\n        })\n      );\n    }\n\n    function report(node, options) {\n      reportC(context, messages[options.messageId], options.messageId, {\n        node,\n        fix: getFixer(node, options.fixerOptions),\n      });\n    }\n\n    function validate(node, functionType) {\n      if (!components.get(node)) return;\n\n      if (node.parent && node.parent.type === 'Property') return;\n\n      if (hasName(node) && !arrayIncludes(namedConfig, functionType)) {\n        report(node, {\n          messageId: namedConfig[0],\n          fixerOptions: {\n            type: namedConfig[0],\n            template: NAMED_FUNCTION_TEMPLATES[namedConfig[0]],\n            range:\n              node.type === 'FunctionDeclaration'\n                ? node.range\n                : node.parent.parent.range,\n          },\n        });\n      }\n      if (!hasName(node) && !arrayIncludes(unnamedConfig, functionType)) {\n        report(node, {\n          messageId: unnamedConfig[0],\n          fixerOptions: {\n            type: unnamedConfig[0],\n            template: UNNAMED_FUNCTION_TEMPLATES[unnamedConfig[0]],\n            range: node.range,\n          },\n        });\n      }\n    }\n\n    // --------------------------------------------------------------------------\n    // Public\n    // --------------------------------------------------------------------------\n    const validatePairs = [];\n    let hasES6OrJsx = false;\n    return {\n      FunctionDeclaration(node) {\n        validatePairs.push([node, 'function-declaration']);\n      },\n      ArrowFunctionExpression(node) {\n        validatePairs.push([node, 'arrow-function']);\n      },\n      FunctionExpression(node) {\n        validatePairs.push([node, 'function-expression']);\n      },\n      VariableDeclaration(node) {\n        hasES6OrJsx = hasES6OrJsx || node.kind === 'const' || node.kind === 'let';\n      },\n      'Program:exit'() {\n        if (hasES6OrJsx) fileVarType = 'const';\n        validatePairs.forEach((pair) => validate(pair[0], pair[1]));\n      },\n      'ImportDeclaration, ExportNamedDeclaration, ExportDefaultDeclaration, ExportAllDeclaration, ExportSpecifier, ExportDefaultSpecifier, JSXElement, TSExportAssignment, TSImportEqualsDeclaration'() {\n        hasES6OrJsx = true;\n      },\n    };\n  }),\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}