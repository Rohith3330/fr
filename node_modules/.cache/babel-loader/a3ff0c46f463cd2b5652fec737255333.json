{"ast":null,"code":"var Hack = require('./hack');\n\nvar Marker = require('../tokenizer/marker');\n\nvar Token = require('../tokenizer/token');\n\nvar Match = {\n  ASTERISK: '*',\n  BACKSLASH: '\\\\',\n  BANG: '!',\n  BANG_SUFFIX_PATTERN: /!\\w+$/,\n  IMPORTANT_TOKEN: '!important',\n  IMPORTANT_TOKEN_PATTERN: new RegExp('!important$', 'i'),\n  IMPORTANT_WORD: 'important',\n  IMPORTANT_WORD_PATTERN: new RegExp('important$', 'i'),\n  SUFFIX_BANG_PATTERN: /!$/,\n  UNDERSCORE: '_',\n  VARIABLE_REFERENCE_PATTERN: /var\\(--.+\\)$/\n};\n\nfunction wrapAll(properties, skipProperties) {\n  var wrapped = [];\n  var single;\n  var property;\n  var i;\n\n  for (i = properties.length - 1; i >= 0; i--) {\n    property = properties[i];\n\n    if (property[0] != Token.PROPERTY) {\n      continue;\n    }\n\n    if (skipProperties && skipProperties.indexOf(property[1][1]) > -1) {\n      continue;\n    }\n\n    single = wrapSingle(property);\n    single.all = properties;\n    single.position = i;\n    wrapped.unshift(single);\n  }\n\n  return wrapped;\n}\n\nfunction someVariableReferences(property) {\n  var i, l;\n  var value; // skipping `property` and property name tokens\n\n  for (i = 2, l = property.length; i < l; i++) {\n    value = property[i];\n\n    if (value[0] != Token.PROPERTY_VALUE) {\n      continue;\n    }\n\n    if (isVariableReference(value[1])) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction isVariableReference(value) {\n  return Match.VARIABLE_REFERENCE_PATTERN.test(value);\n}\n\nfunction isMultiplex(property) {\n  var value;\n  var i, l;\n\n  for (i = 3, l = property.length; i < l; i++) {\n    value = property[i];\n\n    if (value[0] == Token.PROPERTY_VALUE && (value[1] == Marker.COMMA || value[1] == Marker.FORWARD_SLASH)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction hackFrom(property) {\n  var match = false;\n  var name = property[1][1];\n  var lastValue = property[property.length - 1];\n\n  if (name[0] == Match.UNDERSCORE) {\n    match = [Hack.UNDERSCORE];\n  } else if (name[0] == Match.ASTERISK) {\n    match = [Hack.ASTERISK];\n  } else if (lastValue[1][0] == Match.BANG && !lastValue[1].match(Match.IMPORTANT_WORD_PATTERN)) {\n    match = [Hack.BANG];\n  } else if (lastValue[1].indexOf(Match.BANG) > 0 && !lastValue[1].match(Match.IMPORTANT_WORD_PATTERN) && Match.BANG_SUFFIX_PATTERN.test(lastValue[1])) {\n    match = [Hack.BANG];\n  } else if (lastValue[1].indexOf(Match.BACKSLASH) > 0 && lastValue[1].indexOf(Match.BACKSLASH) == lastValue[1].length - Match.BACKSLASH.length - 1) {\n    match = [Hack.BACKSLASH, lastValue[1].substring(lastValue[1].indexOf(Match.BACKSLASH) + 1)];\n  } else if (lastValue[1].indexOf(Match.BACKSLASH) === 0 && lastValue[1].length == 2) {\n    match = [Hack.BACKSLASH, lastValue[1].substring(1)];\n  }\n\n  return match;\n}\n\nfunction isImportant(property) {\n  if (property.length < 3) {\n    return false;\n  }\n\n  var lastValue = property[property.length - 1];\n\n  if (Match.IMPORTANT_TOKEN_PATTERN.test(lastValue[1])) {\n    return true;\n  }\n\n  if (Match.IMPORTANT_WORD_PATTERN.test(lastValue[1]) && Match.SUFFIX_BANG_PATTERN.test(property[property.length - 2][1])) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction stripImportant(property) {\n  var lastValue = property[property.length - 1];\n  var oneButLastValue = property[property.length - 2];\n\n  if (Match.IMPORTANT_TOKEN_PATTERN.test(lastValue[1])) {\n    lastValue[1] = lastValue[1].replace(Match.IMPORTANT_TOKEN_PATTERN, '');\n  } else {\n    lastValue[1] = lastValue[1].replace(Match.IMPORTANT_WORD_PATTERN, '');\n    oneButLastValue[1] = oneButLastValue[1].replace(Match.SUFFIX_BANG_PATTERN, '');\n  }\n\n  if (lastValue[1].length === 0) {\n    property.pop();\n  }\n\n  if (oneButLastValue[1].length === 0) {\n    property.pop();\n  }\n}\n\nfunction stripPrefixHack(property) {\n  property[1][1] = property[1][1].substring(1);\n}\n\nfunction stripSuffixHack(property, hackFrom) {\n  var lastValue = property[property.length - 1];\n  lastValue[1] = lastValue[1].substring(0, lastValue[1].indexOf(hackFrom[0] == Hack.BACKSLASH ? Match.BACKSLASH : Match.BANG)).trim();\n\n  if (lastValue[1].length === 0) {\n    property.pop();\n  }\n}\n\nfunction wrapSingle(property) {\n  var importantProperty = isImportant(property);\n\n  if (importantProperty) {\n    stripImportant(property);\n  }\n\n  var whichHack = hackFrom(property);\n\n  if (whichHack[0] == Hack.ASTERISK || whichHack[0] == Hack.UNDERSCORE) {\n    stripPrefixHack(property);\n  } else if (whichHack[0] == Hack.BACKSLASH || whichHack[0] == Hack.BANG) {\n    stripSuffixHack(property, whichHack);\n  }\n\n  return {\n    block: property[2] && property[2][0] == Token.PROPERTY_BLOCK,\n    components: [],\n    dirty: false,\n    dynamic: someVariableReferences(property),\n    hack: whichHack,\n    important: importantProperty,\n    name: property[1][1],\n    multiplex: property.length > 3 ? isMultiplex(property) : false,\n    optimizable: true,\n    position: 0,\n    shorthand: false,\n    unused: false,\n    value: property.slice(2)\n  };\n}\n\nmodule.exports = {\n  all: wrapAll,\n  single: wrapSingle\n};","map":{"version":3,"names":["Hack","require","Marker","Token","Match","ASTERISK","BACKSLASH","BANG","BANG_SUFFIX_PATTERN","IMPORTANT_TOKEN","IMPORTANT_TOKEN_PATTERN","RegExp","IMPORTANT_WORD","IMPORTANT_WORD_PATTERN","SUFFIX_BANG_PATTERN","UNDERSCORE","VARIABLE_REFERENCE_PATTERN","wrapAll","properties","skipProperties","wrapped","single","property","i","length","PROPERTY","indexOf","wrapSingle","all","position","unshift","someVariableReferences","l","value","PROPERTY_VALUE","isVariableReference","test","isMultiplex","COMMA","FORWARD_SLASH","hackFrom","match","name","lastValue","substring","isImportant","stripImportant","oneButLastValue","replace","pop","stripPrefixHack","stripSuffixHack","trim","importantProperty","whichHack","block","PROPERTY_BLOCK","components","dirty","dynamic","hack","important","multiplex","optimizable","shorthand","unused","slice","module","exports"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/clean-css/lib/optimizer/wrap-for-optimizing.js"],"sourcesContent":["var Hack = require('./hack');\n\nvar Marker = require('../tokenizer/marker');\nvar Token = require('../tokenizer/token');\n\nvar Match = {\n  ASTERISK: '*',\n  BACKSLASH: '\\\\',\n  BANG: '!',\n  BANG_SUFFIX_PATTERN: /!\\w+$/,\n  IMPORTANT_TOKEN: '!important',\n  IMPORTANT_TOKEN_PATTERN: new RegExp('!important$', 'i'),\n  IMPORTANT_WORD: 'important',\n  IMPORTANT_WORD_PATTERN: new RegExp('important$', 'i'),\n  SUFFIX_BANG_PATTERN: /!$/,\n  UNDERSCORE: '_',\n  VARIABLE_REFERENCE_PATTERN: /var\\(--.+\\)$/\n};\n\nfunction wrapAll(properties, skipProperties) {\n  var wrapped = [];\n  var single;\n  var property;\n  var i;\n\n  for (i = properties.length - 1; i >= 0; i--) {\n    property = properties[i];\n\n    if (property[0] != Token.PROPERTY) {\n      continue;\n    }\n\n    if (skipProperties && skipProperties.indexOf(property[1][1]) > -1) {\n      continue;\n    }\n\n    single = wrapSingle(property);\n    single.all = properties;\n    single.position = i;\n    wrapped.unshift(single);\n  }\n\n  return wrapped;\n}\n\nfunction someVariableReferences(property) {\n  var i, l;\n  var value;\n\n  // skipping `property` and property name tokens\n  for (i = 2, l = property.length; i < l; i++) {\n    value = property[i];\n\n    if (value[0] != Token.PROPERTY_VALUE) {\n      continue;\n    }\n\n    if (isVariableReference(value[1])) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction isVariableReference(value) {\n  return Match.VARIABLE_REFERENCE_PATTERN.test(value);\n}\n\nfunction isMultiplex(property) {\n  var value;\n  var i, l;\n\n  for (i = 3, l = property.length; i < l; i++) {\n    value = property[i];\n\n    if (value[0] == Token.PROPERTY_VALUE && (value[1] == Marker.COMMA || value[1] == Marker.FORWARD_SLASH)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction hackFrom(property) {\n  var match = false;\n  var name = property[1][1];\n  var lastValue = property[property.length - 1];\n\n  if (name[0] == Match.UNDERSCORE) {\n    match = [Hack.UNDERSCORE];\n  } else if (name[0] == Match.ASTERISK) {\n    match = [Hack.ASTERISK];\n  } else if (lastValue[1][0] == Match.BANG && !lastValue[1].match(Match.IMPORTANT_WORD_PATTERN)) {\n    match = [Hack.BANG];\n  } else if (lastValue[1].indexOf(Match.BANG) > 0\n    && !lastValue[1].match(Match.IMPORTANT_WORD_PATTERN)\n    && Match.BANG_SUFFIX_PATTERN.test(lastValue[1])) {\n    match = [Hack.BANG];\n  } else if (lastValue[1].indexOf(Match.BACKSLASH) > 0\n    && lastValue[1].indexOf(Match.BACKSLASH) == lastValue[1].length - Match.BACKSLASH.length - 1) {\n    match = [Hack.BACKSLASH, lastValue[1].substring(lastValue[1].indexOf(Match.BACKSLASH) + 1)];\n  } else if (lastValue[1].indexOf(Match.BACKSLASH) === 0 && lastValue[1].length == 2) {\n    match = [Hack.BACKSLASH, lastValue[1].substring(1)];\n  }\n\n  return match;\n}\n\nfunction isImportant(property) {\n  if (property.length < 3) { return false; }\n\n  var lastValue = property[property.length - 1];\n  if (Match.IMPORTANT_TOKEN_PATTERN.test(lastValue[1])) {\n    return true;\n  } if (Match.IMPORTANT_WORD_PATTERN.test(lastValue[1])\n    && Match.SUFFIX_BANG_PATTERN.test(property[property.length - 2][1])) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction stripImportant(property) {\n  var lastValue = property[property.length - 1];\n  var oneButLastValue = property[property.length - 2];\n\n  if (Match.IMPORTANT_TOKEN_PATTERN.test(lastValue[1])) {\n    lastValue[1] = lastValue[1].replace(Match.IMPORTANT_TOKEN_PATTERN, '');\n  } else {\n    lastValue[1] = lastValue[1].replace(Match.IMPORTANT_WORD_PATTERN, '');\n    oneButLastValue[1] = oneButLastValue[1].replace(Match.SUFFIX_BANG_PATTERN, '');\n  }\n\n  if (lastValue[1].length === 0) {\n    property.pop();\n  }\n\n  if (oneButLastValue[1].length === 0) {\n    property.pop();\n  }\n}\n\nfunction stripPrefixHack(property) {\n  property[1][1] = property[1][1].substring(1);\n}\n\nfunction stripSuffixHack(property, hackFrom) {\n  var lastValue = property[property.length - 1];\n  lastValue[1] = lastValue[1]\n    .substring(0, lastValue[1].indexOf(hackFrom[0] == Hack.BACKSLASH ? Match.BACKSLASH : Match.BANG))\n    .trim();\n\n  if (lastValue[1].length === 0) {\n    property.pop();\n  }\n}\n\nfunction wrapSingle(property) {\n  var importantProperty = isImportant(property);\n  if (importantProperty) {\n    stripImportant(property);\n  }\n\n  var whichHack = hackFrom(property);\n  if (whichHack[0] == Hack.ASTERISK || whichHack[0] == Hack.UNDERSCORE) {\n    stripPrefixHack(property);\n  } else if (whichHack[0] == Hack.BACKSLASH || whichHack[0] == Hack.BANG) {\n    stripSuffixHack(property, whichHack);\n  }\n\n  return {\n    block: property[2] && property[2][0] == Token.PROPERTY_BLOCK,\n    components: [],\n    dirty: false,\n    dynamic: someVariableReferences(property),\n    hack: whichHack,\n    important: importantProperty,\n    name: property[1][1],\n    multiplex: property.length > 3 ? isMultiplex(property) : false,\n    optimizable: true,\n    position: 0,\n    shorthand: false,\n    unused: false,\n    value: property.slice(2)\n  };\n}\n\nmodule.exports = {\n  all: wrapAll,\n  single: wrapSingle\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}