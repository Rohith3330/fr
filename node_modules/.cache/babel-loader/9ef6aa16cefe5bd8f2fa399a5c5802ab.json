{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _experimentalUtils = require(\"@typescript-eslint/experimental-utils\");\n\nvar _detectJestVersion = require(\"./detectJestVersion\");\n\nvar _utils = require(\"./utils\");\n\nconst parseJestVersion = rawVersion => {\n  if (typeof rawVersion === 'number') {\n    return rawVersion;\n  }\n\n  const [majorVersion] = rawVersion.split('.');\n  return parseInt(majorVersion, 10);\n};\n\nvar _default = (0, _utils.createRule)({\n  name: __filename,\n  meta: {\n    docs: {\n      category: 'Best Practices',\n      description: 'Disallow use of deprecated functions',\n      recommended: 'error'\n    },\n    messages: {\n      deprecatedFunction: '`{{ deprecation }}` has been deprecated in favor of `{{ replacement }}`'\n    },\n    type: 'suggestion',\n    schema: [],\n    fixable: 'code'\n  },\n  defaultOptions: [],\n\n  create(context) {\n    var _context$settings, _context$settings$jes;\n\n    const jestVersion = parseJestVersion(((_context$settings = context.settings) === null || _context$settings === void 0 ? void 0 : (_context$settings$jes = _context$settings.jest) === null || _context$settings$jes === void 0 ? void 0 : _context$settings$jes.version) || (0, _detectJestVersion.detectJestVersion)());\n    const deprecations = { ...(jestVersion >= 15 && {\n        'jest.resetModuleRegistry': 'jest.resetModules'\n      }),\n      ...(jestVersion >= 17 && {\n        'jest.addMatchers': 'expect.extend'\n      }),\n      ...(jestVersion >= 21 && {\n        'require.requireMock': 'jest.requireMock',\n        'require.requireActual': 'jest.requireActual'\n      }),\n      ...(jestVersion >= 22 && {\n        'jest.runTimersToTime': 'jest.advanceTimersByTime'\n      }),\n      ...(jestVersion >= 26 && {\n        'jest.genMockFromModule': 'jest.createMockFromModule'\n      })\n    };\n    return {\n      CallExpression(node) {\n        if (node.callee.type !== _experimentalUtils.AST_NODE_TYPES.MemberExpression) {\n          return;\n        }\n\n        const deprecation = (0, _utils.getNodeName)(node);\n\n        if (!deprecation || !(deprecation in deprecations)) {\n          return;\n        }\n\n        const replacement = deprecations[deprecation];\n        const {\n          callee\n        } = node;\n        context.report({\n          messageId: 'deprecatedFunction',\n          data: {\n            deprecation,\n            replacement\n          },\n          node,\n\n          fix(fixer) {\n            let [name, func] = replacement.split('.');\n\n            if (callee.property.type === _experimentalUtils.AST_NODE_TYPES.Literal) {\n              func = `'${func}'`;\n            }\n\n            return [fixer.replaceText(callee.object, name), fixer.replaceText(callee.property, func)];\n          }\n\n        });\n      }\n\n    };\n  }\n\n});\n\nexports.default = _default;","map":{"version":3,"names":["Object","defineProperty","exports","value","default","_experimentalUtils","require","_detectJestVersion","_utils","parseJestVersion","rawVersion","majorVersion","split","parseInt","_default","createRule","name","__filename","meta","docs","category","description","recommended","messages","deprecatedFunction","type","schema","fixable","defaultOptions","create","context","_context$settings","_context$settings$jes","jestVersion","settings","jest","version","detectJestVersion","deprecations","CallExpression","node","callee","AST_NODE_TYPES","MemberExpression","deprecation","getNodeName","replacement","report","messageId","data","fix","fixer","func","property","Literal","replaceText","object"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/eslint-plugin-jest/lib/rules/no-deprecated-functions.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _experimentalUtils = require(\"@typescript-eslint/experimental-utils\");\n\nvar _detectJestVersion = require(\"./detectJestVersion\");\n\nvar _utils = require(\"./utils\");\n\nconst parseJestVersion = rawVersion => {\n  if (typeof rawVersion === 'number') {\n    return rawVersion;\n  }\n\n  const [majorVersion] = rawVersion.split('.');\n  return parseInt(majorVersion, 10);\n};\n\nvar _default = (0, _utils.createRule)({\n  name: __filename,\n  meta: {\n    docs: {\n      category: 'Best Practices',\n      description: 'Disallow use of deprecated functions',\n      recommended: 'error'\n    },\n    messages: {\n      deprecatedFunction: '`{{ deprecation }}` has been deprecated in favor of `{{ replacement }}`'\n    },\n    type: 'suggestion',\n    schema: [],\n    fixable: 'code'\n  },\n  defaultOptions: [],\n\n  create(context) {\n    var _context$settings, _context$settings$jes;\n\n    const jestVersion = parseJestVersion(((_context$settings = context.settings) === null || _context$settings === void 0 ? void 0 : (_context$settings$jes = _context$settings.jest) === null || _context$settings$jes === void 0 ? void 0 : _context$settings$jes.version) || (0, _detectJestVersion.detectJestVersion)());\n    const deprecations = { ...(jestVersion >= 15 && {\n        'jest.resetModuleRegistry': 'jest.resetModules'\n      }),\n      ...(jestVersion >= 17 && {\n        'jest.addMatchers': 'expect.extend'\n      }),\n      ...(jestVersion >= 21 && {\n        'require.requireMock': 'jest.requireMock',\n        'require.requireActual': 'jest.requireActual'\n      }),\n      ...(jestVersion >= 22 && {\n        'jest.runTimersToTime': 'jest.advanceTimersByTime'\n      }),\n      ...(jestVersion >= 26 && {\n        'jest.genMockFromModule': 'jest.createMockFromModule'\n      })\n    };\n    return {\n      CallExpression(node) {\n        if (node.callee.type !== _experimentalUtils.AST_NODE_TYPES.MemberExpression) {\n          return;\n        }\n\n        const deprecation = (0, _utils.getNodeName)(node);\n\n        if (!deprecation || !(deprecation in deprecations)) {\n          return;\n        }\n\n        const replacement = deprecations[deprecation];\n        const {\n          callee\n        } = node;\n        context.report({\n          messageId: 'deprecatedFunction',\n          data: {\n            deprecation,\n            replacement\n          },\n          node,\n\n          fix(fixer) {\n            let [name, func] = replacement.split('.');\n\n            if (callee.property.type === _experimentalUtils.AST_NODE_TYPES.Literal) {\n              func = `'${func}'`;\n            }\n\n            return [fixer.replaceText(callee.object, name), fixer.replaceText(callee.property, func)];\n          }\n\n        });\n      }\n\n    };\n  }\n\n});\n\nexports.default = _default;"],"mappings":"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"},"metadata":{},"sourceType":"script"}