{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isStatelessComponent;\nvar traversed = Symbol('traversed');\n\nfunction isJSXElementOrReactCreateElement(path) {\n  var visited = false;\n  path.traverse({\n    CallExpression: function CallExpression(path2) {\n      var callee = path2.get('callee');\n\n      if (callee.matchesPattern('React.createElement') || callee.matchesPattern('React.cloneElement') || callee.node.name === 'cloneElement') {\n        visited = true;\n      }\n    },\n    JSXElement: function JSXElement() {\n      visited = true;\n    }\n  });\n  return visited;\n}\n\nfunction isReturningJSXElement(path) {\n  var iteration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0; // Early exit for ArrowFunctionExpressions, there is no ReturnStatement node.\n\n  if (path.node.init && path.node.init.body && isJSXElementOrReactCreateElement(path)) {\n    return true;\n  }\n\n  if (iteration > 20) {\n    throw new Error('transform-react-remove-prop-type: infinite loop detected.');\n  }\n\n  var visited = false;\n  path.traverse({\n    ReturnStatement: function ReturnStatement(path2) {\n      // We have already found what we are looking for.\n      if (visited) {\n        return;\n      }\n\n      var argument = path2.get('argument'); // Nothing is returned\n\n      if (!argument.node) {\n        return;\n      }\n\n      if (isJSXElementOrReactCreateElement(path2)) {\n        visited = true;\n        return;\n      }\n\n      if (argument.node.type === 'CallExpression') {\n        var name = argument.get('callee').node.name;\n        var binding = path.scope.getBinding(name);\n\n        if (!binding) {\n          return;\n        } // Prevents infinite traverse loop.\n\n\n        if (binding.path[traversed]) {\n          return;\n        }\n\n        binding.path[traversed] = true;\n\n        if (isReturningJSXElement(binding.path, iteration + 1)) {\n          visited = true;\n        }\n      }\n    }\n  });\n  return visited;\n}\n\nvar VALID_POSSIBLE_STATELESS_COMPONENT_TYPES = ['VariableDeclarator', 'FunctionDeclaration']; // Returns `true` if the path represents a function which returns a JSXElement\n\nfunction isStatelessComponent(path) {\n  if (VALID_POSSIBLE_STATELESS_COMPONENT_TYPES.indexOf(path.node.type) === -1) {\n    return false;\n  }\n\n  if (isReturningJSXElement(path)) {\n    return true;\n  }\n\n  return false;\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","default","isStatelessComponent","traversed","Symbol","isJSXElementOrReactCreateElement","path","visited","traverse","CallExpression","path2","callee","get","matchesPattern","node","name","JSXElement","isReturningJSXElement","iteration","arguments","length","undefined","init","body","Error","ReturnStatement","argument","type","binding","scope","getBinding","VALID_POSSIBLE_STATELESS_COMPONENT_TYPES","indexOf"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/babel-plugin-transform-react-remove-prop-types/lib/isStatelessComponent.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isStatelessComponent;\nvar traversed = Symbol('traversed');\n\nfunction isJSXElementOrReactCreateElement(path) {\n  var visited = false;\n  path.traverse({\n    CallExpression: function CallExpression(path2) {\n      var callee = path2.get('callee');\n\n      if (callee.matchesPattern('React.createElement') || callee.matchesPattern('React.cloneElement') || callee.node.name === 'cloneElement') {\n        visited = true;\n      }\n    },\n    JSXElement: function JSXElement() {\n      visited = true;\n    }\n  });\n  return visited;\n}\n\nfunction isReturningJSXElement(path) {\n  var iteration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n  // Early exit for ArrowFunctionExpressions, there is no ReturnStatement node.\n  if (path.node.init && path.node.init.body && isJSXElementOrReactCreateElement(path)) {\n    return true;\n  }\n\n  if (iteration > 20) {\n    throw new Error('transform-react-remove-prop-type: infinite loop detected.');\n  }\n\n  var visited = false;\n  path.traverse({\n    ReturnStatement: function ReturnStatement(path2) {\n      // We have already found what we are looking for.\n      if (visited) {\n        return;\n      }\n\n      var argument = path2.get('argument'); // Nothing is returned\n\n      if (!argument.node) {\n        return;\n      }\n\n      if (isJSXElementOrReactCreateElement(path2)) {\n        visited = true;\n        return;\n      }\n\n      if (argument.node.type === 'CallExpression') {\n        var name = argument.get('callee').node.name;\n        var binding = path.scope.getBinding(name);\n\n        if (!binding) {\n          return;\n        } // Prevents infinite traverse loop.\n\n\n        if (binding.path[traversed]) {\n          return;\n        }\n\n        binding.path[traversed] = true;\n\n        if (isReturningJSXElement(binding.path, iteration + 1)) {\n          visited = true;\n        }\n      }\n    }\n  });\n  return visited;\n}\n\nvar VALID_POSSIBLE_STATELESS_COMPONENT_TYPES = ['VariableDeclarator', 'FunctionDeclaration']; // Returns `true` if the path represents a function which returns a JSXElement\n\nfunction isStatelessComponent(path) {\n  if (VALID_POSSIBLE_STATELESS_COMPONENT_TYPES.indexOf(path.node.type) === -1) {\n    return false;\n  }\n\n  if (isReturningJSXElement(path)) {\n    return true;\n  }\n\n  return false;\n}"],"mappings":"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"},"metadata":{},"sourceType":"script"}