{"ast":null,"code":"'use strict';\n\nconst valueParser = require('postcss-value-parser');\n\nconst {\n  normalizeGridAutoFlow,\n  normalizeGridColumnRowGap,\n  normalizeGridColumnRow\n} = require('./rules/grid'); // rules\n\n\nconst animation = require('./rules/animation');\n\nconst border = require('./rules/border');\n\nconst boxShadow = require('./rules/boxShadow');\n\nconst flexFlow = require('./rules/flexFlow');\n\nconst transition = require('./rules/transition');\n\nconst listStyle = require('./rules/listStyle');\n\nconst column = require('./rules/columns');\n\nconst vendorUnprefixed = require('./lib/vendorUnprefixed.js');\n/** @type {[string, (parsed: valueParser.ParsedValue) => string][]} */\n\n\nconst borderRules = [['border', border], ['border-block', border], ['border-inline', border], ['border-block-end', border], ['border-block-start', border], ['border-inline-end', border], ['border-inline-start', border], ['border-top', border], ['border-right', border], ['border-bottom', border], ['border-left', border]];\n/** @type {[string, (parsed: valueParser.ParsedValue) => string | string[] | valueParser.ParsedValue][]} */\n\nconst grid = [['grid-auto-flow', normalizeGridAutoFlow], ['grid-column-gap', normalizeGridColumnRowGap], // normal | <length-percentage>\n['grid-row-gap', normalizeGridColumnRowGap], // normal | <length-percentage>\n['grid-column', normalizeGridColumnRow], // <grid-line>+\n['grid-row', normalizeGridColumnRow], // <grid-line>+\n['grid-row-start', normalizeGridColumnRow], // <grid-line>\n['grid-row-end', normalizeGridColumnRow], // <grid-line>\n['grid-column-start', normalizeGridColumnRow], // <grid-line>\n['grid-column-end', normalizeGridColumnRow] // <grid-line>\n];\n/** @type {[string, (parsed: valueParser.ParsedValue) => string | valueParser.ParsedValue][]} */\n\nconst columnRules = [['column-rule', border], ['columns', column]];\n/** @type {Map<string, ((parsed: valueParser.ParsedValue) => string | string[] | valueParser.ParsedValue)>} */\n\nconst rules = new Map([['animation', animation], ['outline', border], ['box-shadow', boxShadow], ['flex-flow', flexFlow], ['list-style', listStyle], ['transition', transition], ...borderRules, ...grid, ...columnRules]);\nconst variableFunctions = new Set(['var', 'env', 'constant']);\n/**\n * @param {valueParser.Node} node\n * @return {boolean}\n */\n\nfunction isVariableFunctionNode(node) {\n  if (node.type !== 'function') {\n    return false;\n  }\n\n  return variableFunctions.has(node.value.toLowerCase());\n}\n/**\n * @param {valueParser.ParsedValue} parsed\n * @return {boolean}\n */\n\n\nfunction shouldAbort(parsed) {\n  let abort = false;\n  parsed.walk(node => {\n    if (node.type === 'comment' || isVariableFunctionNode(node) || node.type === 'word' && node.value.includes(`___CSS_LOADER_IMPORT___`)) {\n      abort = true;\n      return false;\n    }\n  });\n  return abort;\n}\n/**\n * @param {import('postcss').Declaration} decl\n * @return {string}\n */\n\n\nfunction getValue(decl) {\n  let {\n    value,\n    raws\n  } = decl;\n\n  if (raws && raws.value && raws.value.raw) {\n    value = raws.value.raw;\n  }\n\n  return value;\n}\n/**\n * @type {import('postcss').PluginCreator<void>}\n * @return {import('postcss').Plugin}\n */\n\n\nfunction pluginCreator() {\n  return {\n    postcssPlugin: 'postcss-ordered-values',\n\n    prepare() {\n      const cache = new Map();\n      return {\n        OnceExit(css) {\n          css.walkDecls(decl => {\n            const lowerCasedProp = decl.prop.toLowerCase();\n            const normalizedProp = vendorUnprefixed(lowerCasedProp);\n            const processor = rules.get(normalizedProp);\n\n            if (!processor) {\n              return;\n            }\n\n            const value = getValue(decl);\n\n            if (cache.has(value)) {\n              decl.value = cache.get(value);\n              return;\n            }\n\n            const parsed = valueParser(value);\n\n            if (parsed.nodes.length < 2 || shouldAbort(parsed)) {\n              cache.set(value, value);\n              return;\n            }\n\n            const result = processor(parsed);\n            decl.value = result.toString();\n            cache.set(value, result.toString());\n          });\n        }\n\n      };\n    }\n\n  };\n}\n\npluginCreator.postcss = true;\nmodule.exports = pluginCreator;","map":{"version":3,"names":["valueParser","require","normalizeGridAutoFlow","normalizeGridColumnRowGap","normalizeGridColumnRow","animation","border","boxShadow","flexFlow","transition","listStyle","column","vendorUnprefixed","borderRules","grid","columnRules","rules","Map","variableFunctions","Set","isVariableFunctionNode","node","type","has","value","toLowerCase","shouldAbort","parsed","abort","walk","includes","getValue","decl","raws","raw","pluginCreator","postcssPlugin","prepare","cache","OnceExit","css","walkDecls","lowerCasedProp","prop","normalizedProp","processor","get","nodes","length","set","result","toString","postcss","module","exports"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/postcss-ordered-values/src/index.js"],"sourcesContent":["'use strict';\nconst valueParser = require('postcss-value-parser');\nconst {\n  normalizeGridAutoFlow,\n  normalizeGridColumnRowGap,\n  normalizeGridColumnRow,\n} = require('./rules/grid');\n\n// rules\nconst animation = require('./rules/animation');\nconst border = require('./rules/border');\nconst boxShadow = require('./rules/boxShadow');\nconst flexFlow = require('./rules/flexFlow');\nconst transition = require('./rules/transition');\nconst listStyle = require('./rules/listStyle');\nconst column = require('./rules/columns');\nconst vendorUnprefixed = require('./lib/vendorUnprefixed.js');\n\n/** @type {[string, (parsed: valueParser.ParsedValue) => string][]} */\nconst borderRules = [\n  ['border', border],\n  ['border-block', border],\n  ['border-inline', border],\n  ['border-block-end', border],\n  ['border-block-start', border],\n  ['border-inline-end', border],\n  ['border-inline-start', border],\n  ['border-top', border],\n  ['border-right', border],\n  ['border-bottom', border],\n  ['border-left', border],\n];\n\n/** @type {[string, (parsed: valueParser.ParsedValue) => string | string[] | valueParser.ParsedValue][]} */\nconst grid = [\n  ['grid-auto-flow', normalizeGridAutoFlow],\n  ['grid-column-gap', normalizeGridColumnRowGap], // normal | <length-percentage>\n  ['grid-row-gap', normalizeGridColumnRowGap], // normal | <length-percentage>\n  ['grid-column', normalizeGridColumnRow], // <grid-line>+\n  ['grid-row', normalizeGridColumnRow], // <grid-line>+\n  ['grid-row-start', normalizeGridColumnRow], // <grid-line>\n  ['grid-row-end', normalizeGridColumnRow], // <grid-line>\n  ['grid-column-start', normalizeGridColumnRow], // <grid-line>\n  ['grid-column-end', normalizeGridColumnRow], // <grid-line>\n];\n\n/** @type {[string, (parsed: valueParser.ParsedValue) => string | valueParser.ParsedValue][]} */\nconst columnRules = [\n  ['column-rule', border],\n  ['columns', column],\n];\n\n/** @type {Map<string, ((parsed: valueParser.ParsedValue) => string | string[] | valueParser.ParsedValue)>} */\nconst rules = new Map([\n  ['animation', animation],\n  ['outline', border],\n  ['box-shadow', boxShadow],\n  ['flex-flow', flexFlow],\n  ['list-style', listStyle],\n  ['transition', transition],\n  ...borderRules,\n  ...grid,\n  ...columnRules,\n]);\n\nconst variableFunctions = new Set(['var', 'env', 'constant']);\n\n/**\n * @param {valueParser.Node} node\n * @return {boolean}\n */\nfunction isVariableFunctionNode(node) {\n  if (node.type !== 'function') {\n    return false;\n  }\n\n  return variableFunctions.has(node.value.toLowerCase());\n}\n\n/**\n * @param {valueParser.ParsedValue} parsed\n * @return {boolean}\n */\nfunction shouldAbort(parsed) {\n  let abort = false;\n\n  parsed.walk((node) => {\n    if (\n      node.type === 'comment' ||\n      isVariableFunctionNode(node) ||\n      (node.type === 'word' && node.value.includes(`___CSS_LOADER_IMPORT___`))\n    ) {\n      abort = true;\n\n      return false;\n    }\n  });\n\n  return abort;\n}\n\n/**\n * @param {import('postcss').Declaration} decl\n * @return {string}\n */\nfunction getValue(decl) {\n  let { value, raws } = decl;\n\n  if (raws && raws.value && raws.value.raw) {\n    value = raws.value.raw;\n  }\n\n  return value;\n}\n/**\n * @type {import('postcss').PluginCreator<void>}\n * @return {import('postcss').Plugin}\n */\nfunction pluginCreator() {\n  return {\n    postcssPlugin: 'postcss-ordered-values',\n    prepare() {\n      const cache = new Map();\n      return {\n        OnceExit(css) {\n          css.walkDecls((decl) => {\n            const lowerCasedProp = decl.prop.toLowerCase();\n            const normalizedProp = vendorUnprefixed(lowerCasedProp);\n            const processor = rules.get(normalizedProp);\n\n            if (!processor) {\n              return;\n            }\n\n            const value = getValue(decl);\n\n            if (cache.has(value)) {\n              decl.value = cache.get(value);\n\n              return;\n            }\n\n            const parsed = valueParser(value);\n\n            if (parsed.nodes.length < 2 || shouldAbort(parsed)) {\n              cache.set(value, value);\n\n              return;\n            }\n\n            const result = processor(parsed);\n\n            decl.value = result.toString();\n            cache.set(value, result.toString());\n          });\n        },\n      };\n    },\n  };\n}\n\npluginCreator.postcss = true;\nmodule.exports = pluginCreator;\n"],"mappings":"AAAA;;AACA,MAAMA,WAAW,GAAGC,OAAO,CAAC,sBAAD,CAA3B;;AACA,MAAM;EACJC,qBADI;EAEJC,yBAFI;EAGJC;AAHI,IAIFH,OAAO,CAAC,cAAD,CAJX,C,CAMA;;;AACA,MAAMI,SAAS,GAAGJ,OAAO,CAAC,mBAAD,CAAzB;;AACA,MAAMK,MAAM,GAAGL,OAAO,CAAC,gBAAD,CAAtB;;AACA,MAAMM,SAAS,GAAGN,OAAO,CAAC,mBAAD,CAAzB;;AACA,MAAMO,QAAQ,GAAGP,OAAO,CAAC,kBAAD,CAAxB;;AACA,MAAMQ,UAAU,GAAGR,OAAO,CAAC,oBAAD,CAA1B;;AACA,MAAMS,SAAS,GAAGT,OAAO,CAAC,mBAAD,CAAzB;;AACA,MAAMU,MAAM,GAAGV,OAAO,CAAC,iBAAD,CAAtB;;AACA,MAAMW,gBAAgB,GAAGX,OAAO,CAAC,2BAAD,CAAhC;AAEA;;;AACA,MAAMY,WAAW,GAAG,CAClB,CAAC,QAAD,EAAWP,MAAX,CADkB,EAElB,CAAC,cAAD,EAAiBA,MAAjB,CAFkB,EAGlB,CAAC,eAAD,EAAkBA,MAAlB,CAHkB,EAIlB,CAAC,kBAAD,EAAqBA,MAArB,CAJkB,EAKlB,CAAC,oBAAD,EAAuBA,MAAvB,CALkB,EAMlB,CAAC,mBAAD,EAAsBA,MAAtB,CANkB,EAOlB,CAAC,qBAAD,EAAwBA,MAAxB,CAPkB,EAQlB,CAAC,YAAD,EAAeA,MAAf,CARkB,EASlB,CAAC,cAAD,EAAiBA,MAAjB,CATkB,EAUlB,CAAC,eAAD,EAAkBA,MAAlB,CAVkB,EAWlB,CAAC,aAAD,EAAgBA,MAAhB,CAXkB,CAApB;AAcA;;AACA,MAAMQ,IAAI,GAAG,CACX,CAAC,gBAAD,EAAmBZ,qBAAnB,CADW,EAEX,CAAC,iBAAD,EAAoBC,yBAApB,CAFW,EAEqC;AAChD,CAAC,cAAD,EAAiBA,yBAAjB,CAHW,EAGkC;AAC7C,CAAC,aAAD,EAAgBC,sBAAhB,CAJW,EAI8B;AACzC,CAAC,UAAD,EAAaA,sBAAb,CALW,EAK2B;AACtC,CAAC,gBAAD,EAAmBA,sBAAnB,CANW,EAMiC;AAC5C,CAAC,cAAD,EAAiBA,sBAAjB,CAPW,EAO+B;AAC1C,CAAC,mBAAD,EAAsBA,sBAAtB,CARW,EAQoC;AAC/C,CAAC,iBAAD,EAAoBA,sBAApB,CATW,CASkC;AATlC,CAAb;AAYA;;AACA,MAAMW,WAAW,GAAG,CAClB,CAAC,aAAD,EAAgBT,MAAhB,CADkB,EAElB,CAAC,SAAD,EAAYK,MAAZ,CAFkB,CAApB;AAKA;;AACA,MAAMK,KAAK,GAAG,IAAIC,GAAJ,CAAQ,CACpB,CAAC,WAAD,EAAcZ,SAAd,CADoB,EAEpB,CAAC,SAAD,EAAYC,MAAZ,CAFoB,EAGpB,CAAC,YAAD,EAAeC,SAAf,CAHoB,EAIpB,CAAC,WAAD,EAAcC,QAAd,CAJoB,EAKpB,CAAC,YAAD,EAAeE,SAAf,CALoB,EAMpB,CAAC,YAAD,EAAeD,UAAf,CANoB,EAOpB,GAAGI,WAPiB,EAQpB,GAAGC,IARiB,EASpB,GAAGC,WATiB,CAAR,CAAd;AAYA,MAAMG,iBAAiB,GAAG,IAAIC,GAAJ,CAAQ,CAAC,KAAD,EAAQ,KAAR,EAAe,UAAf,CAAR,CAA1B;AAEA;AACA;AACA;AACA;;AACA,SAASC,sBAAT,CAAgCC,IAAhC,EAAsC;EACpC,IAAIA,IAAI,CAACC,IAAL,KAAc,UAAlB,EAA8B;IAC5B,OAAO,KAAP;EACD;;EAED,OAAOJ,iBAAiB,CAACK,GAAlB,CAAsBF,IAAI,CAACG,KAAL,CAAWC,WAAX,EAAtB,CAAP;AACD;AAED;AACA;AACA;AACA;;;AACA,SAASC,WAAT,CAAqBC,MAArB,EAA6B;EAC3B,IAAIC,KAAK,GAAG,KAAZ;EAEAD,MAAM,CAACE,IAAP,CAAaR,IAAD,IAAU;IACpB,IACEA,IAAI,CAACC,IAAL,KAAc,SAAd,IACAF,sBAAsB,CAACC,IAAD,CADtB,IAECA,IAAI,CAACC,IAAL,KAAc,MAAd,IAAwBD,IAAI,CAACG,KAAL,CAAWM,QAAX,CAAqB,yBAArB,CAH3B,EAIE;MACAF,KAAK,GAAG,IAAR;MAEA,OAAO,KAAP;IACD;EACF,CAVD;EAYA,OAAOA,KAAP;AACD;AAED;AACA;AACA;AACA;;;AACA,SAASG,QAAT,CAAkBC,IAAlB,EAAwB;EACtB,IAAI;IAAER,KAAF;IAASS;EAAT,IAAkBD,IAAtB;;EAEA,IAAIC,IAAI,IAAIA,IAAI,CAACT,KAAb,IAAsBS,IAAI,CAACT,KAAL,CAAWU,GAArC,EAA0C;IACxCV,KAAK,GAAGS,IAAI,CAACT,KAAL,CAAWU,GAAnB;EACD;;EAED,OAAOV,KAAP;AACD;AACD;AACA;AACA;AACA;;;AACA,SAASW,aAAT,GAAyB;EACvB,OAAO;IACLC,aAAa,EAAE,wBADV;;IAELC,OAAO,GAAG;MACR,MAAMC,KAAK,GAAG,IAAIrB,GAAJ,EAAd;MACA,OAAO;QACLsB,QAAQ,CAACC,GAAD,EAAM;UACZA,GAAG,CAACC,SAAJ,CAAeT,IAAD,IAAU;YACtB,MAAMU,cAAc,GAAGV,IAAI,CAACW,IAAL,CAAUlB,WAAV,EAAvB;YACA,MAAMmB,cAAc,GAAGhC,gBAAgB,CAAC8B,cAAD,CAAvC;YACA,MAAMG,SAAS,GAAG7B,KAAK,CAAC8B,GAAN,CAAUF,cAAV,CAAlB;;YAEA,IAAI,CAACC,SAAL,EAAgB;cACd;YACD;;YAED,MAAMrB,KAAK,GAAGO,QAAQ,CAACC,IAAD,CAAtB;;YAEA,IAAIM,KAAK,CAACf,GAAN,CAAUC,KAAV,CAAJ,EAAsB;cACpBQ,IAAI,CAACR,KAAL,GAAac,KAAK,CAACQ,GAAN,CAAUtB,KAAV,CAAb;cAEA;YACD;;YAED,MAAMG,MAAM,GAAG3B,WAAW,CAACwB,KAAD,CAA1B;;YAEA,IAAIG,MAAM,CAACoB,KAAP,CAAaC,MAAb,GAAsB,CAAtB,IAA2BtB,WAAW,CAACC,MAAD,CAA1C,EAAoD;cAClDW,KAAK,CAACW,GAAN,CAAUzB,KAAV,EAAiBA,KAAjB;cAEA;YACD;;YAED,MAAM0B,MAAM,GAAGL,SAAS,CAAClB,MAAD,CAAxB;YAEAK,IAAI,CAACR,KAAL,GAAa0B,MAAM,CAACC,QAAP,EAAb;YACAb,KAAK,CAACW,GAAN,CAAUzB,KAAV,EAAiB0B,MAAM,CAACC,QAAP,EAAjB;UACD,CA7BD;QA8BD;;MAhCI,CAAP;IAkCD;;EAtCI,CAAP;AAwCD;;AAEDhB,aAAa,CAACiB,OAAd,GAAwB,IAAxB;AACAC,MAAM,CAACC,OAAP,GAAiBnB,aAAjB"},"metadata":{},"sourceType":"script"}