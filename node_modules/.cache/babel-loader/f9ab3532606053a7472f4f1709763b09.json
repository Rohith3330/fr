{"ast":null,"code":"'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $Number = GetIntrinsic('%Number%');\nvar $TypeError = GetIntrinsic('%TypeError%');\n\nvar $isNaN = require('../helpers/isNaN');\n\nvar $isFinite = require('../helpers/isFinite');\n\nvar IsStringPrefix = require('./IsStringPrefix');\n\nvar ToNumber = require('./ToNumber');\n\nvar ToPrimitive = require('./ToPrimitive');\n\nvar Type = require('./Type'); // https://262.ecma-international.org/9.0/#sec-abstract-relational-comparison\n\n\nmodule.exports = function AbstractRelationalComparison(x, y, LeftFirst) {\n  if (Type(LeftFirst) !== 'Boolean') {\n    throw new $TypeError('Assertion failed: LeftFirst argument must be a Boolean');\n  }\n\n  var px;\n  var py;\n\n  if (LeftFirst) {\n    px = ToPrimitive(x, $Number);\n    py = ToPrimitive(y, $Number);\n  } else {\n    py = ToPrimitive(y, $Number);\n    px = ToPrimitive(x, $Number);\n  }\n\n  if (Type(px) === 'String' && Type(py) === 'String') {\n    if (IsStringPrefix(py, px)) {\n      return false;\n    }\n\n    if (IsStringPrefix(px, py)) {\n      return true;\n    }\n\n    return px < py; // both strings, neither a prefix of the other. shortcut for steps 3 c-f\n  }\n\n  var nx = ToNumber(px);\n  var ny = ToNumber(py);\n\n  if ($isNaN(nx) || $isNaN(ny)) {\n    return undefined;\n  }\n\n  if ($isFinite(nx) && $isFinite(ny) && nx === ny) {\n    return false;\n  }\n\n  if (nx === Infinity) {\n    return false;\n  }\n\n  if (ny === Infinity) {\n    return true;\n  }\n\n  if (ny === -Infinity) {\n    return false;\n  }\n\n  if (nx === -Infinity) {\n    return true;\n  }\n\n  return nx < ny; // by now, these are both nonzero, finite, and not equal\n};","map":{"version":3,"names":["GetIntrinsic","require","$Number","$TypeError","$isNaN","$isFinite","IsStringPrefix","ToNumber","ToPrimitive","Type","module","exports","AbstractRelationalComparison","x","y","LeftFirst","px","py","nx","ny","undefined","Infinity"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/es-abstract/2018/AbstractRelationalComparison.js"],"sourcesContent":["'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $Number = GetIntrinsic('%Number%');\nvar $TypeError = GetIntrinsic('%TypeError%');\n\nvar $isNaN = require('../helpers/isNaN');\nvar $isFinite = require('../helpers/isFinite');\n\nvar IsStringPrefix = require('./IsStringPrefix');\nvar ToNumber = require('./ToNumber');\nvar ToPrimitive = require('./ToPrimitive');\nvar Type = require('./Type');\n\n// https://262.ecma-international.org/9.0/#sec-abstract-relational-comparison\n\nmodule.exports = function AbstractRelationalComparison(x, y, LeftFirst) {\n\tif (Type(LeftFirst) !== 'Boolean') {\n\t\tthrow new $TypeError('Assertion failed: LeftFirst argument must be a Boolean');\n\t}\n\tvar px;\n\tvar py;\n\tif (LeftFirst) {\n\t\tpx = ToPrimitive(x, $Number);\n\t\tpy = ToPrimitive(y, $Number);\n\t} else {\n\t\tpy = ToPrimitive(y, $Number);\n\t\tpx = ToPrimitive(x, $Number);\n\t}\n\tif (Type(px) === 'String' && Type(py) === 'String') {\n\t\tif (IsStringPrefix(py, px)) {\n\t\t\treturn false;\n\t\t}\n\t\tif (IsStringPrefix(px, py)) {\n\t\t\treturn true;\n\t\t}\n\t\treturn px < py; // both strings, neither a prefix of the other. shortcut for steps 3 c-f\n\t}\n\tvar nx = ToNumber(px);\n\tvar ny = ToNumber(py);\n\tif ($isNaN(nx) || $isNaN(ny)) {\n\t\treturn undefined;\n\t}\n\tif ($isFinite(nx) && $isFinite(ny) && nx === ny) {\n\t\treturn false;\n\t}\n\tif (nx === Infinity) {\n\t\treturn false;\n\t}\n\tif (ny === Infinity) {\n\t\treturn true;\n\t}\n\tif (ny === -Infinity) {\n\t\treturn false;\n\t}\n\tif (nx === -Infinity) {\n\t\treturn true;\n\t}\n\treturn nx < ny; // by now, these are both nonzero, finite, and not equal\n};\n"],"mappings":"AAAA;;AAEA,IAAIA,YAAY,GAAGC,OAAO,CAAC,eAAD,CAA1B;;AAEA,IAAIC,OAAO,GAAGF,YAAY,CAAC,UAAD,CAA1B;AACA,IAAIG,UAAU,GAAGH,YAAY,CAAC,aAAD,CAA7B;;AAEA,IAAII,MAAM,GAAGH,OAAO,CAAC,kBAAD,CAApB;;AACA,IAAII,SAAS,GAAGJ,OAAO,CAAC,qBAAD,CAAvB;;AAEA,IAAIK,cAAc,GAAGL,OAAO,CAAC,kBAAD,CAA5B;;AACA,IAAIM,QAAQ,GAAGN,OAAO,CAAC,YAAD,CAAtB;;AACA,IAAIO,WAAW,GAAGP,OAAO,CAAC,eAAD,CAAzB;;AACA,IAAIQ,IAAI,GAAGR,OAAO,CAAC,QAAD,CAAlB,C,CAEA;;;AAEAS,MAAM,CAACC,OAAP,GAAiB,SAASC,4BAAT,CAAsCC,CAAtC,EAAyCC,CAAzC,EAA4CC,SAA5C,EAAuD;EACvE,IAAIN,IAAI,CAACM,SAAD,CAAJ,KAAoB,SAAxB,EAAmC;IAClC,MAAM,IAAIZ,UAAJ,CAAe,wDAAf,CAAN;EACA;;EACD,IAAIa,EAAJ;EACA,IAAIC,EAAJ;;EACA,IAAIF,SAAJ,EAAe;IACdC,EAAE,GAAGR,WAAW,CAACK,CAAD,EAAIX,OAAJ,CAAhB;IACAe,EAAE,GAAGT,WAAW,CAACM,CAAD,EAAIZ,OAAJ,CAAhB;EACA,CAHD,MAGO;IACNe,EAAE,GAAGT,WAAW,CAACM,CAAD,EAAIZ,OAAJ,CAAhB;IACAc,EAAE,GAAGR,WAAW,CAACK,CAAD,EAAIX,OAAJ,CAAhB;EACA;;EACD,IAAIO,IAAI,CAACO,EAAD,CAAJ,KAAa,QAAb,IAAyBP,IAAI,CAACQ,EAAD,CAAJ,KAAa,QAA1C,EAAoD;IACnD,IAAIX,cAAc,CAACW,EAAD,EAAKD,EAAL,CAAlB,EAA4B;MAC3B,OAAO,KAAP;IACA;;IACD,IAAIV,cAAc,CAACU,EAAD,EAAKC,EAAL,CAAlB,EAA4B;MAC3B,OAAO,IAAP;IACA;;IACD,OAAOD,EAAE,GAAGC,EAAZ,CAPmD,CAOnC;EAChB;;EACD,IAAIC,EAAE,GAAGX,QAAQ,CAACS,EAAD,CAAjB;EACA,IAAIG,EAAE,GAAGZ,QAAQ,CAACU,EAAD,CAAjB;;EACA,IAAIb,MAAM,CAACc,EAAD,CAAN,IAAcd,MAAM,CAACe,EAAD,CAAxB,EAA8B;IAC7B,OAAOC,SAAP;EACA;;EACD,IAAIf,SAAS,CAACa,EAAD,CAAT,IAAiBb,SAAS,CAACc,EAAD,CAA1B,IAAkCD,EAAE,KAAKC,EAA7C,EAAiD;IAChD,OAAO,KAAP;EACA;;EACD,IAAID,EAAE,KAAKG,QAAX,EAAqB;IACpB,OAAO,KAAP;EACA;;EACD,IAAIF,EAAE,KAAKE,QAAX,EAAqB;IACpB,OAAO,IAAP;EACA;;EACD,IAAIF,EAAE,KAAK,CAACE,QAAZ,EAAsB;IACrB,OAAO,KAAP;EACA;;EACD,IAAIH,EAAE,KAAK,CAACG,QAAZ,EAAsB;IACrB,OAAO,IAAP;EACA;;EACD,OAAOH,EAAE,GAAGC,EAAZ,CA1CuE,CA0CvD;AAChB,CA3CD"},"metadata":{},"sourceType":"script"}