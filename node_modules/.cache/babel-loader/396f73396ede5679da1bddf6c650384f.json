{"ast":null,"code":"\"use strict\"; // external tooling\n\nconst resolve = require(\"resolve\");\n\nconst moduleDirectories = [\"web_modules\", \"node_modules\"];\n\nfunction resolveModule(id, opts) {\n  return new Promise((res, rej) => {\n    resolve(id, opts, (err, path) => err ? rej(err) : res(path));\n  });\n}\n\nmodule.exports = function (id, base, options) {\n  const paths = options.path;\n  const resolveOpts = {\n    basedir: base,\n    moduleDirectory: moduleDirectories.concat(options.addModulesDirectories),\n    paths,\n    extensions: [\".css\"],\n    packageFilter: function processPackage(pkg) {\n      if (pkg.style) pkg.main = pkg.style;else if (!pkg.main || !/\\.css$/.test(pkg.main)) pkg.main = \"index.css\";\n      return pkg;\n    },\n    preserveSymlinks: false\n  };\n  return resolveModule(`./${id}`, resolveOpts).catch(() => resolveModule(id, resolveOpts)).catch(() => {\n    if (paths.indexOf(base) === -1) paths.unshift(base);\n    throw new Error(`Failed to find '${id}'\n  in [\n    ${paths.join(\",\\n        \")}\n  ]`);\n  });\n};","map":{"version":3,"names":["resolve","require","moduleDirectories","resolveModule","id","opts","Promise","res","rej","err","path","module","exports","base","options","paths","resolveOpts","basedir","moduleDirectory","concat","addModulesDirectories","extensions","packageFilter","processPackage","pkg","style","main","test","preserveSymlinks","catch","indexOf","unshift","Error","join"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/postcss-import/lib/resolve-id.js"],"sourcesContent":["\"use strict\"\n\n// external tooling\nconst resolve = require(\"resolve\")\n\nconst moduleDirectories = [\"web_modules\", \"node_modules\"]\n\nfunction resolveModule(id, opts) {\n  return new Promise((res, rej) => {\n    resolve(id, opts, (err, path) => (err ? rej(err) : res(path)))\n  })\n}\n\nmodule.exports = function (id, base, options) {\n  const paths = options.path\n\n  const resolveOpts = {\n    basedir: base,\n    moduleDirectory: moduleDirectories.concat(options.addModulesDirectories),\n    paths,\n    extensions: [\".css\"],\n    packageFilter: function processPackage(pkg) {\n      if (pkg.style) pkg.main = pkg.style\n      else if (!pkg.main || !/\\.css$/.test(pkg.main)) pkg.main = \"index.css\"\n      return pkg\n    },\n    preserveSymlinks: false,\n  }\n\n  return resolveModule(`./${id}`, resolveOpts)\n    .catch(() => resolveModule(id, resolveOpts))\n    .catch(() => {\n      if (paths.indexOf(base) === -1) paths.unshift(base)\n\n      throw new Error(\n        `Failed to find '${id}'\n  in [\n    ${paths.join(\",\\n        \")}\n  ]`\n      )\n    })\n}\n"],"mappings":"AAAA,a,CAEA;;AACA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AAEA,MAAMC,iBAAiB,GAAG,CAAC,aAAD,EAAgB,cAAhB,CAA1B;;AAEA,SAASC,aAAT,CAAuBC,EAAvB,EAA2BC,IAA3B,EAAiC;EAC/B,OAAO,IAAIC,OAAJ,CAAY,CAACC,GAAD,EAAMC,GAAN,KAAc;IAC/BR,OAAO,CAACI,EAAD,EAAKC,IAAL,EAAW,CAACI,GAAD,EAAMC,IAAN,KAAgBD,GAAG,GAAGD,GAAG,CAACC,GAAD,CAAN,GAAcF,GAAG,CAACG,IAAD,CAA/C,CAAP;EACD,CAFM,CAAP;AAGD;;AAEDC,MAAM,CAACC,OAAP,GAAiB,UAAUR,EAAV,EAAcS,IAAd,EAAoBC,OAApB,EAA6B;EAC5C,MAAMC,KAAK,GAAGD,OAAO,CAACJ,IAAtB;EAEA,MAAMM,WAAW,GAAG;IAClBC,OAAO,EAAEJ,IADS;IAElBK,eAAe,EAAEhB,iBAAiB,CAACiB,MAAlB,CAAyBL,OAAO,CAACM,qBAAjC,CAFC;IAGlBL,KAHkB;IAIlBM,UAAU,EAAE,CAAC,MAAD,CAJM;IAKlBC,aAAa,EAAE,SAASC,cAAT,CAAwBC,GAAxB,EAA6B;MAC1C,IAAIA,GAAG,CAACC,KAAR,EAAeD,GAAG,CAACE,IAAJ,GAAWF,GAAG,CAACC,KAAf,CAAf,KACK,IAAI,CAACD,GAAG,CAACE,IAAL,IAAa,CAAC,SAASC,IAAT,CAAcH,GAAG,CAACE,IAAlB,CAAlB,EAA2CF,GAAG,CAACE,IAAJ,GAAW,WAAX;MAChD,OAAOF,GAAP;IACD,CATiB;IAUlBI,gBAAgB,EAAE;EAVA,CAApB;EAaA,OAAOzB,aAAa,CAAE,KAAIC,EAAG,EAAT,EAAYY,WAAZ,CAAb,CACJa,KADI,CACE,MAAM1B,aAAa,CAACC,EAAD,EAAKY,WAAL,CADrB,EAEJa,KAFI,CAEE,MAAM;IACX,IAAId,KAAK,CAACe,OAAN,CAAcjB,IAAd,MAAwB,CAAC,CAA7B,EAAgCE,KAAK,CAACgB,OAAN,CAAclB,IAAd;IAEhC,MAAM,IAAImB,KAAJ,CACH,mBAAkB5B,EAAG;AAC9B;AACA,MAAMW,KAAK,CAACkB,IAAN,CAAW,aAAX,CAA0B;AAChC,IAJY,CAAN;EAMD,CAXI,CAAP;AAYD,CA5BD"},"metadata":{},"sourceType":"script"}