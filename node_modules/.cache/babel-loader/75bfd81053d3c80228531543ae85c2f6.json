{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.overrideBytesInBuffer = overrideBytesInBuffer;\nexports.makeBuffer = makeBuffer;\nexports.fromHexdump = fromHexdump;\n\nfunction _toConsumableArray(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n}\n\nfunction concatUint8Arrays() {\n  for (var _len = arguments.length, arrays = new Array(_len), _key = 0; _key < _len; _key++) {\n    arrays[_key] = arguments[_key];\n  }\n\n  var totalLength = arrays.reduce(function (a, b) {\n    return a + b.length;\n  }, 0);\n  var result = new Uint8Array(totalLength);\n  var offset = 0;\n\n  for (var _i = 0; _i < arrays.length; _i++) {\n    var arr = arrays[_i];\n\n    if (arr instanceof Uint8Array === false) {\n      throw new Error(\"arr must be of type Uint8Array\");\n    }\n\n    result.set(arr, offset);\n    offset += arr.length;\n  }\n\n  return result;\n}\n\nfunction overrideBytesInBuffer(buffer, startLoc, endLoc, newBytes) {\n  var beforeBytes = buffer.slice(0, startLoc);\n  var afterBytes = buffer.slice(endLoc, buffer.length); // replacement is empty, we can omit it\n\n  if (newBytes.length === 0) {\n    return concatUint8Arrays(beforeBytes, afterBytes);\n  }\n\n  var replacement = Uint8Array.from(newBytes);\n  return concatUint8Arrays(beforeBytes, replacement, afterBytes);\n}\n\nfunction makeBuffer() {\n  for (var _len2 = arguments.length, splitedBytes = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    splitedBytes[_key2] = arguments[_key2];\n  }\n\n  var bytes = [].concat.apply([], splitedBytes);\n  return new Uint8Array(bytes).buffer;\n}\n\nfunction fromHexdump(str) {\n  var lines = str.split(\"\\n\"); // remove any leading left whitespace\n\n  lines = lines.map(function (line) {\n    return line.trim();\n  });\n  var bytes = lines.reduce(function (acc, line) {\n    var cols = line.split(\" \"); // remove the offset, left column\n\n    cols.shift();\n    cols = cols.filter(function (x) {\n      return x !== \"\";\n    });\n    var bytes = cols.map(function (x) {\n      return parseInt(x, 16);\n    });\n    acc.push.apply(acc, _toConsumableArray(bytes));\n    return acc;\n  }, []);\n  return Buffer.from(bytes);\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","overrideBytesInBuffer","makeBuffer","fromHexdump","_toConsumableArray","arr","Array","isArray","i","arr2","length","from","concatUint8Arrays","_len","arguments","arrays","_key","totalLength","reduce","a","b","result","Uint8Array","offset","_i","Error","set","buffer","startLoc","endLoc","newBytes","beforeBytes","slice","afterBytes","replacement","_len2","splitedBytes","_key2","bytes","concat","apply","str","lines","split","map","line","trim","acc","cols","shift","filter","x","parseInt","push","Buffer"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/@webassemblyjs/helper-buffer/lib/index.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.overrideBytesInBuffer = overrideBytesInBuffer;\nexports.makeBuffer = makeBuffer;\nexports.fromHexdump = fromHexdump;\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction concatUint8Arrays() {\n  for (var _len = arguments.length, arrays = new Array(_len), _key = 0; _key < _len; _key++) {\n    arrays[_key] = arguments[_key];\n  }\n\n  var totalLength = arrays.reduce(function (a, b) {\n    return a + b.length;\n  }, 0);\n  var result = new Uint8Array(totalLength);\n  var offset = 0;\n\n  for (var _i = 0; _i < arrays.length; _i++) {\n    var arr = arrays[_i];\n\n    if (arr instanceof Uint8Array === false) {\n      throw new Error(\"arr must be of type Uint8Array\");\n    }\n\n    result.set(arr, offset);\n    offset += arr.length;\n  }\n\n  return result;\n}\n\nfunction overrideBytesInBuffer(buffer, startLoc, endLoc, newBytes) {\n  var beforeBytes = buffer.slice(0, startLoc);\n  var afterBytes = buffer.slice(endLoc, buffer.length); // replacement is empty, we can omit it\n\n  if (newBytes.length === 0) {\n    return concatUint8Arrays(beforeBytes, afterBytes);\n  }\n\n  var replacement = Uint8Array.from(newBytes);\n  return concatUint8Arrays(beforeBytes, replacement, afterBytes);\n}\n\nfunction makeBuffer() {\n  for (var _len2 = arguments.length, splitedBytes = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    splitedBytes[_key2] = arguments[_key2];\n  }\n\n  var bytes = [].concat.apply([], splitedBytes);\n  return new Uint8Array(bytes).buffer;\n}\n\nfunction fromHexdump(str) {\n  var lines = str.split(\"\\n\"); // remove any leading left whitespace\n\n  lines = lines.map(function (line) {\n    return line.trim();\n  });\n  var bytes = lines.reduce(function (acc, line) {\n    var cols = line.split(\" \"); // remove the offset, left column\n\n    cols.shift();\n    cols = cols.filter(function (x) {\n      return x !== \"\";\n    });\n    var bytes = cols.map(function (x) {\n      return parseInt(x, 16);\n    });\n    acc.push.apply(acc, _toConsumableArray(bytes));\n    return acc;\n  }, []);\n  return Buffer.from(bytes);\n}"],"mappings":"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"},"metadata":{},"sourceType":"script"}