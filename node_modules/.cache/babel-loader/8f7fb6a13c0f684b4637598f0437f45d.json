{"ast":null,"code":"// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\nvar common = require('./common');\n\nvar test = require('tape');\n\nvar assert = require('assert');\n\nvar EventEmitter = require('../').EventEmitter;\n\nvar util = require('util');\n\nutil.inherits(MyEE, EventEmitter);\n\nfunction MyEE(cb) {\n  this.once(1, cb);\n  this.emit(1);\n  this.removeAllListeners();\n  EventEmitter.call(this);\n}\n\nvar myee = new MyEE(common.mustCall());\nutil.inherits(ErrorEE, EventEmitter);\n\nfunction ErrorEE() {\n  this.emit('error', new Error('blerg'));\n}\n\nassert.throws(function () {\n  new ErrorEE();\n}, /blerg/);\ntest.onFinish(function () {\n  assert.ok(!(myee._events instanceof Object));\n  assert.strictEqual(Object.keys(myee._events).length, 0);\n});\n\nfunction MyEE2() {\n  EventEmitter.call(this);\n}\n\nMyEE2.prototype = new EventEmitter();\nvar ee1 = new MyEE2();\nvar ee2 = new MyEE2();\nee1.on('x', function () {});\nassert.strictEqual(ee2.listenerCount('x'), 0);","map":{"version":3,"names":["common","require","test","assert","EventEmitter","util","inherits","MyEE","cb","once","emit","removeAllListeners","call","myee","mustCall","ErrorEE","Error","throws","onFinish","ok","_events","Object","strictEqual","keys","length","MyEE2","prototype","ee1","ee2","on","listenerCount"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/events/tests/subclass.js"],"sourcesContent":["// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar common = require('./common');\nvar test = require('tape');\nvar assert = require('assert');\nvar EventEmitter = require('../').EventEmitter;\nvar util = require('util');\n\nutil.inherits(MyEE, EventEmitter);\n\nfunction MyEE(cb) {\n  this.once(1, cb);\n  this.emit(1);\n  this.removeAllListeners();\n  EventEmitter.call(this);\n}\n\nvar myee = new MyEE(common.mustCall());\n\n\nutil.inherits(ErrorEE, EventEmitter);\nfunction ErrorEE() {\n  this.emit('error', new Error('blerg'));\n}\n\nassert.throws(function() {\n  new ErrorEE();\n}, /blerg/);\n\ntest.onFinish(function() {\n  assert.ok(!(myee._events instanceof Object));\n  assert.strictEqual(Object.keys(myee._events).length, 0);\n});\n\n\nfunction MyEE2() {\n  EventEmitter.call(this);\n}\n\nMyEE2.prototype = new EventEmitter();\n\nvar ee1 = new MyEE2();\nvar ee2 = new MyEE2();\n\nee1.on('x', function() {});\n\nassert.strictEqual(ee2.listenerCount('x'), 0);\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAIA,MAAM,GAAGC,OAAO,CAAC,UAAD,CAApB;;AACA,IAAIC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAAlB;;AACA,IAAIE,MAAM,GAAGF,OAAO,CAAC,QAAD,CAApB;;AACA,IAAIG,YAAY,GAAGH,OAAO,CAAC,KAAD,CAAP,CAAeG,YAAlC;;AACA,IAAIC,IAAI,GAAGJ,OAAO,CAAC,MAAD,CAAlB;;AAEAI,IAAI,CAACC,QAAL,CAAcC,IAAd,EAAoBH,YAApB;;AAEA,SAASG,IAAT,CAAcC,EAAd,EAAkB;EAChB,KAAKC,IAAL,CAAU,CAAV,EAAaD,EAAb;EACA,KAAKE,IAAL,CAAU,CAAV;EACA,KAAKC,kBAAL;EACAP,YAAY,CAACQ,IAAb,CAAkB,IAAlB;AACD;;AAED,IAAIC,IAAI,GAAG,IAAIN,IAAJ,CAASP,MAAM,CAACc,QAAP,EAAT,CAAX;AAGAT,IAAI,CAACC,QAAL,CAAcS,OAAd,EAAuBX,YAAvB;;AACA,SAASW,OAAT,GAAmB;EACjB,KAAKL,IAAL,CAAU,OAAV,EAAmB,IAAIM,KAAJ,CAAU,OAAV,CAAnB;AACD;;AAEDb,MAAM,CAACc,MAAP,CAAc,YAAW;EACvB,IAAIF,OAAJ;AACD,CAFD,EAEG,OAFH;AAIAb,IAAI,CAACgB,QAAL,CAAc,YAAW;EACvBf,MAAM,CAACgB,EAAP,CAAU,EAAEN,IAAI,CAACO,OAAL,YAAwBC,MAA1B,CAAV;EACAlB,MAAM,CAACmB,WAAP,CAAmBD,MAAM,CAACE,IAAP,CAAYV,IAAI,CAACO,OAAjB,EAA0BI,MAA7C,EAAqD,CAArD;AACD,CAHD;;AAMA,SAASC,KAAT,GAAiB;EACfrB,YAAY,CAACQ,IAAb,CAAkB,IAAlB;AACD;;AAEDa,KAAK,CAACC,SAAN,GAAkB,IAAItB,YAAJ,EAAlB;AAEA,IAAIuB,GAAG,GAAG,IAAIF,KAAJ,EAAV;AACA,IAAIG,GAAG,GAAG,IAAIH,KAAJ,EAAV;AAEAE,GAAG,CAACE,EAAJ,CAAO,GAAP,EAAY,YAAW,CAAE,CAAzB;AAEA1B,MAAM,CAACmB,WAAP,CAAmBM,GAAG,CAACE,aAAJ,CAAkB,GAAlB,CAAnB,EAA2C,CAA3C"},"metadata":{},"sourceType":"script"}