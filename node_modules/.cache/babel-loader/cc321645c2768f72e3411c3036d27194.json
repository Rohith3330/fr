{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getConstrainedTypeAtLocation = void 0;\n/**\n * Resolves the given node's type. Will resolve to the type's generic constraint, if it has one.\n */\n\nfunction getConstrainedTypeAtLocation(checker, node) {\n  const nodeType = checker.getTypeAtLocation(node);\n  const constrained = checker.getBaseConstraintOfType(nodeType);\n  return constrained !== null && constrained !== void 0 ? constrained : nodeType;\n}\n\nexports.getConstrainedTypeAtLocation = getConstrainedTypeAtLocation;","map":{"version":3,"mappings":";;;;;;AAEA;;;;AAGA,SAAgBA,4BAAhB,CACEC,OADF,EAEEC,IAFF,EAEe;EAEb,MAAMC,QAAQ,GAAGF,OAAO,CAACG,iBAAR,CAA0BF,IAA1B,CAAjB;EACA,MAAMG,WAAW,GAAGJ,OAAO,CAACK,uBAAR,CAAgCH,QAAhC,CAApB;EAEA,OAAOE,WAAW,SAAX,eAAW,WAAX,iBAAeF,QAAtB;AACD;;AARDI","names":["getConstrainedTypeAtLocation","checker","node","nodeType","getTypeAtLocation","constrained","getBaseConstraintOfType","exports"],"sources":["../src/getConstrainedTypeAtLocation.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}