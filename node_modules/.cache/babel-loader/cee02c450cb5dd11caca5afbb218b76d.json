{"ast":null,"code":"/**\n * @fileoverview Rule to flag the use of empty character classes in regular expressions\n * @author Ian Christian Myers\n */\n\"use strict\"; //------------------------------------------------------------------------------\n// Helpers\n//------------------------------------------------------------------------------\n\n/*\n * plain-English description of the following regexp:\n * 0. `^` fix the match at the beginning of the string\n * 1. `([^\\\\[]|\\\\.|\\[([^\\\\\\]]|\\\\.)+\\])*`: regexp contents; 0 or more of the following\n * 1.0. `[^\\\\[]`: any character that's not a `\\` or a `[` (anything but escape sequences and character classes)\n * 1.1. `\\\\.`: an escape sequence\n * 1.2. `\\[([^\\\\\\]]|\\\\.)+\\]`: a character class that isn't empty\n * 2. `$`: fix the match at the end of the string\n */\n\nconst regex = /^([^\\\\[]|\\\\.|\\[([^\\\\\\]]|\\\\.)+\\])*$/u; //------------------------------------------------------------------------------\n// Rule Definition\n//------------------------------------------------------------------------------\n\n/** @type {import('../shared/types').Rule} */\n\nmodule.exports = {\n  meta: {\n    type: \"problem\",\n    docs: {\n      description: \"Disallow empty character classes in regular expressions\",\n      recommended: true,\n      url: \"https://eslint.org/docs/rules/no-empty-character-class\"\n    },\n    schema: [],\n    messages: {\n      unexpected: \"Empty class.\"\n    }\n  },\n\n  create(context) {\n    return {\n      \"Literal[regex]\"(node) {\n        if (!regex.test(node.regex.pattern)) {\n          context.report({\n            node,\n            messageId: \"unexpected\"\n          });\n        }\n      }\n\n    };\n  }\n\n};","map":{"version":3,"names":["regex","module","exports","meta","type","docs","description","recommended","url","schema","messages","unexpected","create","context","node","test","pattern","report","messageId"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/eslint/lib/rules/no-empty-character-class.js"],"sourcesContent":["/**\n * @fileoverview Rule to flag the use of empty character classes in regular expressions\n * @author Ian Christian Myers\n */\n\n\"use strict\";\n\n//------------------------------------------------------------------------------\n// Helpers\n//------------------------------------------------------------------------------\n\n/*\n * plain-English description of the following regexp:\n * 0. `^` fix the match at the beginning of the string\n * 1. `([^\\\\[]|\\\\.|\\[([^\\\\\\]]|\\\\.)+\\])*`: regexp contents; 0 or more of the following\n * 1.0. `[^\\\\[]`: any character that's not a `\\` or a `[` (anything but escape sequences and character classes)\n * 1.1. `\\\\.`: an escape sequence\n * 1.2. `\\[([^\\\\\\]]|\\\\.)+\\]`: a character class that isn't empty\n * 2. `$`: fix the match at the end of the string\n */\nconst regex = /^([^\\\\[]|\\\\.|\\[([^\\\\\\]]|\\\\.)+\\])*$/u;\n\n//------------------------------------------------------------------------------\n// Rule Definition\n//------------------------------------------------------------------------------\n\n/** @type {import('../shared/types').Rule} */\nmodule.exports = {\n    meta: {\n        type: \"problem\",\n\n        docs: {\n            description: \"Disallow empty character classes in regular expressions\",\n            recommended: true,\n            url: \"https://eslint.org/docs/rules/no-empty-character-class\"\n        },\n\n        schema: [],\n\n        messages: {\n            unexpected: \"Empty class.\"\n        }\n    },\n\n    create(context) {\n        return {\n            \"Literal[regex]\"(node) {\n                if (!regex.test(node.regex.pattern)) {\n                    context.report({ node, messageId: \"unexpected\" });\n                }\n            }\n        };\n\n    }\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AAEA,a,CAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMA,KAAK,GAAG,qCAAd,C,CAEA;AACA;AACA;;AAEA;;AACAC,MAAM,CAACC,OAAP,GAAiB;EACbC,IAAI,EAAE;IACFC,IAAI,EAAE,SADJ;IAGFC,IAAI,EAAE;MACFC,WAAW,EAAE,yDADX;MAEFC,WAAW,EAAE,IAFX;MAGFC,GAAG,EAAE;IAHH,CAHJ;IASFC,MAAM,EAAE,EATN;IAWFC,QAAQ,EAAE;MACNC,UAAU,EAAE;IADN;EAXR,CADO;;EAiBbC,MAAM,CAACC,OAAD,EAAU;IACZ,OAAO;MACH,iBAAiBC,IAAjB,EAAuB;QACnB,IAAI,CAACd,KAAK,CAACe,IAAN,CAAWD,IAAI,CAACd,KAAL,CAAWgB,OAAtB,CAAL,EAAqC;UACjCH,OAAO,CAACI,MAAR,CAAe;YAAEH,IAAF;YAAQI,SAAS,EAAE;UAAnB,CAAf;QACH;MACJ;;IALE,CAAP;EAQH;;AA1BY,CAAjB"},"metadata":{},"sourceType":"script"}