{"ast":null,"code":"var streamify = require('./streamify.js'),\n    defer = require('./defer.js'); // API\n\n\nmodule.exports = ReadableAsyncKit;\n/**\n * Base constructor for all streams\n * used to hold properties/methods\n */\n\nfunction ReadableAsyncKit() {\n  ReadableAsyncKit.super_.apply(this, arguments); // list of active jobs\n\n  this.jobs = {}; // add stream methods\n\n  this.destroy = destroy;\n  this._start = _start;\n  this._read = _read;\n}\n/**\n * Destroys readable stream,\n * by aborting outstanding jobs\n *\n * @returns {void}\n */\n\n\nfunction destroy() {\n  if (this.destroyed) {\n    return;\n  }\n\n  this.destroyed = true;\n\n  if (typeof this.terminator == 'function') {\n    this.terminator();\n  }\n}\n/**\n * Starts provided jobs in async manner\n *\n * @private\n */\n\n\nfunction _start() {\n  // first argument – runner function\n  var runner = arguments[0] // take away first argument\n  ,\n      args = Array.prototype.slice.call(arguments, 1) // second argument - input data\n  ,\n      input = args[0] // last argument - result callback\n  ,\n      endCb = streamify.callback.call(this, args[args.length - 1]);\n  args[args.length - 1] = endCb; // third argument - iterator\n\n  args[1] = streamify.iterator.call(this, args[1]); // allow time for proper setup\n\n  defer(function () {\n    if (!this.destroyed) {\n      this.terminator = runner.apply(null, args);\n    } else {\n      endCb(null, Array.isArray(input) ? [] : {});\n    }\n  }.bind(this));\n}\n/**\n * Implement _read to comply with Readable streams\n * Doesn't really make sense for flowing object mode\n *\n * @private\n */\n\n\nfunction _read() {}","map":{"version":3,"names":["streamify","require","defer","module","exports","ReadableAsyncKit","super_","apply","arguments","jobs","destroy","_start","_read","destroyed","terminator","runner","args","Array","prototype","slice","call","input","endCb","callback","length","iterator","isArray","bind"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/asynckit/lib/readable_asynckit.js"],"sourcesContent":["var streamify = require('./streamify.js')\n  , defer     = require('./defer.js')\n  ;\n\n// API\nmodule.exports = ReadableAsyncKit;\n\n/**\n * Base constructor for all streams\n * used to hold properties/methods\n */\nfunction ReadableAsyncKit()\n{\n  ReadableAsyncKit.super_.apply(this, arguments);\n\n  // list of active jobs\n  this.jobs = {};\n\n  // add stream methods\n  this.destroy = destroy;\n  this._start  = _start;\n  this._read   = _read;\n}\n\n/**\n * Destroys readable stream,\n * by aborting outstanding jobs\n *\n * @returns {void}\n */\nfunction destroy()\n{\n  if (this.destroyed)\n  {\n    return;\n  }\n\n  this.destroyed = true;\n\n  if (typeof this.terminator == 'function')\n  {\n    this.terminator();\n  }\n}\n\n/**\n * Starts provided jobs in async manner\n *\n * @private\n */\nfunction _start()\n{\n  // first argument – runner function\n  var runner = arguments[0]\n    // take away first argument\n    , args   = Array.prototype.slice.call(arguments, 1)\n      // second argument - input data\n    , input  = args[0]\n      // last argument - result callback\n    , endCb  = streamify.callback.call(this, args[args.length - 1])\n    ;\n\n  args[args.length - 1] = endCb;\n  // third argument - iterator\n  args[1] = streamify.iterator.call(this, args[1]);\n\n  // allow time for proper setup\n  defer(function()\n  {\n    if (!this.destroyed)\n    {\n      this.terminator = runner.apply(null, args);\n    }\n    else\n    {\n      endCb(null, Array.isArray(input) ? [] : {});\n    }\n  }.bind(this));\n}\n\n\n/**\n * Implement _read to comply with Readable streams\n * Doesn't really make sense for flowing object mode\n *\n * @private\n */\nfunction _read()\n{\n\n}\n"],"mappings":"AAAA,IAAIA,SAAS,GAAGC,OAAO,CAAC,gBAAD,CAAvB;AAAA,IACIC,KAAK,GAAOD,OAAO,CAAC,YAAD,CADvB,C,CAIA;;;AACAE,MAAM,CAACC,OAAP,GAAiBC,gBAAjB;AAEA;AACA;AACA;AACA;;AACA,SAASA,gBAAT,GACA;EACEA,gBAAgB,CAACC,MAAjB,CAAwBC,KAAxB,CAA8B,IAA9B,EAAoCC,SAApC,EADF,CAGE;;EACA,KAAKC,IAAL,GAAY,EAAZ,CAJF,CAME;;EACA,KAAKC,OAAL,GAAeA,OAAf;EACA,KAAKC,MAAL,GAAeA,MAAf;EACA,KAAKC,KAAL,GAAeA,KAAf;AACD;AAED;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASF,OAAT,GACA;EACE,IAAI,KAAKG,SAAT,EACA;IACE;EACD;;EAED,KAAKA,SAAL,GAAiB,IAAjB;;EAEA,IAAI,OAAO,KAAKC,UAAZ,IAA0B,UAA9B,EACA;IACE,KAAKA,UAAL;EACD;AACF;AAED;AACA;AACA;AACA;AACA;;;AACA,SAASH,MAAT,GACA;EACE;EACA,IAAII,MAAM,GAAGP,SAAS,CAAC,CAAD,CAAtB,CACE;EADF;EAAA,IAEIQ,IAAI,GAAKC,KAAK,CAACC,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2BZ,SAA3B,EAAsC,CAAtC,CAFb,CAGI;EAHJ;EAAA,IAIIa,KAAK,GAAIL,IAAI,CAAC,CAAD,CAJjB,CAKI;EALJ;EAAA,IAMIM,KAAK,GAAItB,SAAS,CAACuB,QAAV,CAAmBH,IAAnB,CAAwB,IAAxB,EAA8BJ,IAAI,CAACA,IAAI,CAACQ,MAAL,GAAc,CAAf,CAAlC,CANb;EASAR,IAAI,CAACA,IAAI,CAACQ,MAAL,GAAc,CAAf,CAAJ,GAAwBF,KAAxB,CAXF,CAYE;;EACAN,IAAI,CAAC,CAAD,CAAJ,GAAUhB,SAAS,CAACyB,QAAV,CAAmBL,IAAnB,CAAwB,IAAxB,EAA8BJ,IAAI,CAAC,CAAD,CAAlC,CAAV,CAbF,CAeE;;EACAd,KAAK,CAAC,YACN;IACE,IAAI,CAAC,KAAKW,SAAV,EACA;MACE,KAAKC,UAAL,GAAkBC,MAAM,CAACR,KAAP,CAAa,IAAb,EAAmBS,IAAnB,CAAlB;IACD,CAHD,MAKA;MACEM,KAAK,CAAC,IAAD,EAAOL,KAAK,CAACS,OAAN,CAAcL,KAAd,IAAuB,EAAvB,GAA4B,EAAnC,CAAL;IACD;EACF,CAVK,CAUJM,IAVI,CAUC,IAVD,CAAD,CAAL;AAWD;AAGD;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASf,KAAT,GACA,CAEC"},"metadata":{},"sourceType":"script"}