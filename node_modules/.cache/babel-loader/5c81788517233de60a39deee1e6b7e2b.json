{"ast":null,"code":"/**\n * @fileoverview Forbid certain propTypes\n */\n'use strict';\n\nconst variableUtil = require('../util/variable');\n\nconst propsUtil = require('../util/props');\n\nconst astUtil = require('../util/ast');\n\nconst docsUrl = require('../util/docsUrl');\n\nconst propWrapperUtil = require('../util/propWrapper');\n\nconst report = require('../util/report'); // ------------------------------------------------------------------------------\n// Constants\n// ------------------------------------------------------------------------------\n\n\nconst DEFAULTS = ['any', 'array', 'object']; // ------------------------------------------------------------------------------\n// Rule Definition\n// ------------------------------------------------------------------------------\n\nconst messages = {\n  forbiddenPropType: 'Prop type \"{{target}}\" is forbidden'\n};\nmodule.exports = {\n  meta: {\n    docs: {\n      description: 'Disallow certain propTypes',\n      category: 'Best Practices',\n      recommended: false,\n      url: docsUrl('forbid-prop-types')\n    },\n    messages,\n    schema: [{\n      type: 'object',\n      properties: {\n        forbid: {\n          type: 'array',\n          items: {\n            type: 'string'\n          }\n        },\n        checkContextTypes: {\n          type: 'boolean'\n        },\n        checkChildContextTypes: {\n          type: 'boolean'\n        }\n      },\n      additionalProperties: true\n    }]\n  },\n\n  create(context) {\n    const configuration = context.options[0] || {};\n    const checkContextTypes = configuration.checkContextTypes || false;\n    const checkChildContextTypes = configuration.checkChildContextTypes || false;\n    let propTypesPackageName = null;\n    let reactPackageName = null;\n    let isForeignPropTypesPackage = false;\n\n    function isPropTypesPackage(node) {\n      return node.type === 'Identifier' && (node.name === null || node.name === propTypesPackageName || !isForeignPropTypesPackage) || node.type === 'MemberExpression' && (node.object.name === null || node.object.name === reactPackageName || !isForeignPropTypesPackage);\n    }\n\n    function isForbidden(type) {\n      const forbid = configuration.forbid || DEFAULTS;\n      return forbid.indexOf(type) >= 0;\n    }\n\n    function reportIfForbidden(type, declaration, target) {\n      if (isForbidden(type)) {\n        report(context, messages.forbiddenPropType, 'forbiddenPropType', {\n          node: declaration,\n          data: {\n            target\n          }\n        });\n      }\n    }\n\n    function shouldCheckContextTypes(node) {\n      if (checkContextTypes && propsUtil.isContextTypesDeclaration(node)) {\n        return true;\n      }\n\n      return false;\n    }\n\n    function shouldCheckChildContextTypes(node) {\n      if (checkChildContextTypes && propsUtil.isChildContextTypesDeclaration(node)) {\n        return true;\n      }\n\n      return false;\n    }\n    /**\n     * Checks if propTypes declarations are forbidden\n     * @param {Array} declarations The array of AST nodes being checked.\n     * @returns {void}\n     */\n\n\n    function checkProperties(declarations) {\n      if (declarations) {\n        declarations.forEach(declaration => {\n          if (declaration.type !== 'Property') {\n            return;\n          }\n\n          let target;\n          let value = declaration.value;\n\n          if (value.type === 'MemberExpression' && value.property && value.property.name && value.property.name === 'isRequired') {\n            value = value.object;\n          }\n\n          if (value.type === 'CallExpression') {\n            if (!isPropTypesPackage(value.callee)) {\n              return;\n            }\n\n            value.arguments.forEach(arg => {\n              const name = arg.type === 'MemberExpression' ? arg.property.name : arg.name;\n              reportIfForbidden(name, declaration, name);\n            });\n            value = value.callee;\n          }\n\n          if (!isPropTypesPackage(value)) {\n            return;\n          }\n\n          if (value.property) {\n            target = value.property.name;\n          } else if (value.type === 'Identifier') {\n            target = value.name;\n          }\n\n          reportIfForbidden(target, declaration, target);\n        });\n      }\n    }\n\n    function checkNode(node) {\n      switch (node && node.type) {\n        case 'ObjectExpression':\n          checkProperties(node.properties);\n          break;\n\n        case 'Identifier':\n          {\n            const propTypesObject = variableUtil.findVariableByName(context, node.name);\n\n            if (propTypesObject && propTypesObject.properties) {\n              checkProperties(propTypesObject.properties);\n            }\n\n            break;\n          }\n\n        case 'CallExpression':\n          {\n            const innerNode = node.arguments && node.arguments[0];\n\n            if (propWrapperUtil.isPropWrapperFunction(context, context.getSourceCode().getText(node.callee)) && innerNode) {\n              checkNode(innerNode);\n            }\n\n            break;\n          }\n\n        default:\n          break;\n      }\n    }\n\n    return {\n      ImportDeclaration(node) {\n        if (node.source && node.source.value === 'prop-types') {\n          // import PropType from \"prop-types\"\n          if (node.specifiers.length > 0) {\n            propTypesPackageName = node.specifiers[0].local.name;\n          }\n        } else if (node.source && node.source.value === 'react') {\n          // import { PropTypes } from \"react\"\n          if (node.specifiers.length > 0) {\n            reactPackageName = node.specifiers[0].local.name; // guard against accidental anonymous `import \"react\"`\n          }\n\n          if (node.specifiers.length >= 1) {\n            const propTypesSpecifier = node.specifiers.find(specifier => specifier.imported && specifier.imported.name === 'PropTypes');\n\n            if (propTypesSpecifier) {\n              propTypesPackageName = propTypesSpecifier.local.name;\n            }\n          }\n        } else {\n          // package is not imported from \"react\" or \"prop-types\"\n          // eslint-disable-next-line no-lonely-if\n          if (node.specifiers.some(x => x.local.name === 'PropTypes')) {\n            // assert: node.specifiers.length > 1\n            isForeignPropTypesPackage = true;\n          }\n        }\n      },\n\n      'ClassProperty, PropertyDefinition'(node) {\n        if (!propsUtil.isPropTypesDeclaration(node) && !isPropTypesPackage(node) && !shouldCheckContextTypes(node) && !shouldCheckChildContextTypes(node)) {\n          return;\n        }\n\n        checkNode(node.value);\n      },\n\n      MemberExpression(node) {\n        if (!propsUtil.isPropTypesDeclaration(node) && !isPropTypesPackage(node) && !shouldCheckContextTypes(node) && !shouldCheckChildContextTypes(node)) {\n          return;\n        }\n\n        checkNode(node.parent.right);\n      },\n\n      CallExpression(node) {\n        if (node.callee.object && !isPropTypesPackage(node.callee.object) && !propsUtil.isPropTypesDeclaration(node.callee)) {\n          return;\n        }\n\n        if (node.arguments.length > 0 && (node.callee.name === 'shape' || astUtil.getPropertyName(node.callee) === 'shape')) {\n          checkProperties(node.arguments[0].properties);\n        }\n      },\n\n      MethodDefinition(node) {\n        if (!propsUtil.isPropTypesDeclaration(node) && !isPropTypesPackage(node) && !shouldCheckContextTypes(node) && !shouldCheckChildContextTypes(node)) {\n          return;\n        }\n\n        const returnStatement = astUtil.findReturnStatement(node);\n\n        if (returnStatement && returnStatement.argument) {\n          checkNode(returnStatement.argument);\n        }\n      },\n\n      ObjectExpression(node) {\n        node.properties.forEach(property => {\n          if (!property.key) {\n            return;\n          }\n\n          if (!propsUtil.isPropTypesDeclaration(property) && !isPropTypesPackage(property) && !shouldCheckContextTypes(property) && !shouldCheckChildContextTypes(property)) {\n            return;\n          }\n\n          if (property.value.type === 'ObjectExpression') {\n            checkProperties(property.value.properties);\n          }\n        });\n      }\n\n    };\n  }\n\n};","map":{"version":3,"names":["variableUtil","require","propsUtil","astUtil","docsUrl","propWrapperUtil","report","DEFAULTS","messages","forbiddenPropType","module","exports","meta","docs","description","category","recommended","url","schema","type","properties","forbid","items","checkContextTypes","checkChildContextTypes","additionalProperties","create","context","configuration","options","propTypesPackageName","reactPackageName","isForeignPropTypesPackage","isPropTypesPackage","node","name","object","isForbidden","indexOf","reportIfForbidden","declaration","target","data","shouldCheckContextTypes","isContextTypesDeclaration","shouldCheckChildContextTypes","isChildContextTypesDeclaration","checkProperties","declarations","forEach","value","property","callee","arguments","arg","checkNode","propTypesObject","findVariableByName","innerNode","isPropWrapperFunction","getSourceCode","getText","ImportDeclaration","source","specifiers","length","local","propTypesSpecifier","find","specifier","imported","some","x","isPropTypesDeclaration","MemberExpression","parent","right","CallExpression","getPropertyName","MethodDefinition","returnStatement","findReturnStatement","argument","ObjectExpression","key"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/eslint-plugin-react/lib/rules/forbid-prop-types.js"],"sourcesContent":["/**\n * @fileoverview Forbid certain propTypes\n */\n\n'use strict';\n\nconst variableUtil = require('../util/variable');\nconst propsUtil = require('../util/props');\nconst astUtil = require('../util/ast');\nconst docsUrl = require('../util/docsUrl');\nconst propWrapperUtil = require('../util/propWrapper');\nconst report = require('../util/report');\n\n// ------------------------------------------------------------------------------\n// Constants\n// ------------------------------------------------------------------------------\n\nconst DEFAULTS = ['any', 'array', 'object'];\n\n// ------------------------------------------------------------------------------\n// Rule Definition\n// ------------------------------------------------------------------------------\n\nconst messages = {\n  forbiddenPropType: 'Prop type \"{{target}}\" is forbidden',\n};\n\nmodule.exports = {\n  meta: {\n    docs: {\n      description: 'Disallow certain propTypes',\n      category: 'Best Practices',\n      recommended: false,\n      url: docsUrl('forbid-prop-types'),\n    },\n\n    messages,\n\n    schema: [{\n      type: 'object',\n      properties: {\n        forbid: {\n          type: 'array',\n          items: {\n            type: 'string',\n          },\n        },\n        checkContextTypes: {\n          type: 'boolean',\n        },\n        checkChildContextTypes: {\n          type: 'boolean',\n        },\n      },\n      additionalProperties: true,\n    }],\n  },\n\n  create(context) {\n    const configuration = context.options[0] || {};\n    const checkContextTypes = configuration.checkContextTypes || false;\n    const checkChildContextTypes = configuration.checkChildContextTypes || false;\n    let propTypesPackageName = null;\n    let reactPackageName = null;\n    let isForeignPropTypesPackage = false;\n\n    function isPropTypesPackage(node) {\n      return (\n        node.type === 'Identifier'\n        && (\n          node.name === null\n          || node.name === propTypesPackageName\n          || !isForeignPropTypesPackage\n        )\n      ) || (\n        node.type === 'MemberExpression'\n        && (\n          node.object.name === null\n          || node.object.name === reactPackageName\n          || !isForeignPropTypesPackage\n        )\n      );\n    }\n\n    function isForbidden(type) {\n      const forbid = configuration.forbid || DEFAULTS;\n      return forbid.indexOf(type) >= 0;\n    }\n\n    function reportIfForbidden(type, declaration, target) {\n      if (isForbidden(type)) {\n        report(context, messages.forbiddenPropType, 'forbiddenPropType', {\n          node: declaration,\n          data: {\n            target,\n          },\n        });\n      }\n    }\n\n    function shouldCheckContextTypes(node) {\n      if (checkContextTypes && propsUtil.isContextTypesDeclaration(node)) {\n        return true;\n      }\n      return false;\n    }\n\n    function shouldCheckChildContextTypes(node) {\n      if (checkChildContextTypes && propsUtil.isChildContextTypesDeclaration(node)) {\n        return true;\n      }\n      return false;\n    }\n\n    /**\n     * Checks if propTypes declarations are forbidden\n     * @param {Array} declarations The array of AST nodes being checked.\n     * @returns {void}\n     */\n    function checkProperties(declarations) {\n      if (declarations) {\n        declarations.forEach((declaration) => {\n          if (declaration.type !== 'Property') {\n            return;\n          }\n          let target;\n          let value = declaration.value;\n          if (\n            value.type === 'MemberExpression'\n            && value.property\n            && value.property.name\n            && value.property.name === 'isRequired'\n          ) {\n            value = value.object;\n          }\n          if (value.type === 'CallExpression') {\n            if (!isPropTypesPackage(value.callee)) {\n              return;\n            }\n            value.arguments.forEach((arg) => {\n              const name = arg.type === 'MemberExpression' ? arg.property.name : arg.name;\n              reportIfForbidden(name, declaration, name);\n            });\n            value = value.callee;\n          }\n          if (!isPropTypesPackage(value)) {\n            return;\n          }\n          if (value.property) {\n            target = value.property.name;\n          } else if (value.type === 'Identifier') {\n            target = value.name;\n          }\n          reportIfForbidden(target, declaration, target);\n        });\n      }\n    }\n\n    function checkNode(node) {\n      switch (node && node.type) {\n        case 'ObjectExpression':\n          checkProperties(node.properties);\n          break;\n        case 'Identifier': {\n          const propTypesObject = variableUtil.findVariableByName(context, node.name);\n          if (propTypesObject && propTypesObject.properties) {\n            checkProperties(propTypesObject.properties);\n          }\n          break;\n        }\n        case 'CallExpression': {\n          const innerNode = node.arguments && node.arguments[0];\n          if (\n            propWrapperUtil.isPropWrapperFunction(context, context.getSourceCode().getText(node.callee))\n            && innerNode\n          ) {\n            checkNode(innerNode);\n          }\n          break;\n        }\n        default:\n          break;\n      }\n    }\n\n    return {\n      ImportDeclaration(node) {\n        if (node.source && node.source.value === 'prop-types') { // import PropType from \"prop-types\"\n          if (node.specifiers.length > 0) {\n            propTypesPackageName = node.specifiers[0].local.name;\n          }\n        } else if (node.source && node.source.value === 'react') { // import { PropTypes } from \"react\"\n          if (node.specifiers.length > 0) {\n            reactPackageName = node.specifiers[0].local.name; // guard against accidental anonymous `import \"react\"`\n          }\n          if (node.specifiers.length >= 1) {\n            const propTypesSpecifier = node.specifiers.find((specifier) => (\n              specifier.imported && specifier.imported.name === 'PropTypes'\n            ));\n            if (propTypesSpecifier) {\n              propTypesPackageName = propTypesSpecifier.local.name;\n            }\n          }\n        } else { // package is not imported from \"react\" or \"prop-types\"\n          // eslint-disable-next-line no-lonely-if\n          if (node.specifiers.some((x) => x.local.name === 'PropTypes')) { // assert: node.specifiers.length > 1\n            isForeignPropTypesPackage = true;\n          }\n        }\n      },\n\n      'ClassProperty, PropertyDefinition'(node) {\n        if (\n          !propsUtil.isPropTypesDeclaration(node)\n          && !isPropTypesPackage(node)\n          && !shouldCheckContextTypes(node)\n          && !shouldCheckChildContextTypes(node)\n        ) {\n          return;\n        }\n        checkNode(node.value);\n      },\n\n      MemberExpression(node) {\n        if (\n          !propsUtil.isPropTypesDeclaration(node)\n          && !isPropTypesPackage(node)\n          && !shouldCheckContextTypes(node)\n          && !shouldCheckChildContextTypes(node)\n        ) {\n          return;\n        }\n\n        checkNode(node.parent.right);\n      },\n\n      CallExpression(node) {\n        if (\n          node.callee.object\n          && !isPropTypesPackage(node.callee.object)\n          && !propsUtil.isPropTypesDeclaration(node.callee)\n        ) {\n          return;\n        }\n\n        if (\n          node.arguments.length > 0\n          && (node.callee.name === 'shape' || astUtil.getPropertyName(node.callee) === 'shape')\n        ) {\n          checkProperties(node.arguments[0].properties);\n        }\n      },\n\n      MethodDefinition(node) {\n        if (\n          !propsUtil.isPropTypesDeclaration(node)\n          && !isPropTypesPackage(node)\n          && !shouldCheckContextTypes(node)\n          && !shouldCheckChildContextTypes(node)\n        ) {\n          return;\n        }\n\n        const returnStatement = astUtil.findReturnStatement(node);\n\n        if (returnStatement && returnStatement.argument) {\n          checkNode(returnStatement.argument);\n        }\n      },\n\n      ObjectExpression(node) {\n        node.properties.forEach((property) => {\n          if (!property.key) {\n            return;\n          }\n\n          if (\n            !propsUtil.isPropTypesDeclaration(property)\n            && !isPropTypesPackage(property)\n            && !shouldCheckContextTypes(property)\n            && !shouldCheckChildContextTypes(property)\n          ) {\n            return;\n          }\n          if (property.value.type === 'ObjectExpression') {\n            checkProperties(property.value.properties);\n          }\n        });\n      },\n\n    };\n  },\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}