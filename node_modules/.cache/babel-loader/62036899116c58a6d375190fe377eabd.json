{"ast":null,"code":"'use strict';\n/*\n Copyright 2012-2015, Yahoo Inc.\n Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.\n */\n\nconst fs = require('fs');\n\nconst path = require('path');\n\nconst html = require('html-escaper');\n\nconst {\n  ReportBase\n} = require('istanbul-lib-report');\n\nconst annotator = require('./annotator');\n\nfunction htmlHead(details) {\n  return `\n<head>\n    <title>Code coverage report for ${html.escape(details.entity)}</title>\n    <meta charset=\"utf-8\" />\n    <link rel=\"stylesheet\" href=\"${html.escape(details.prettify.css)}\" />\n    <link rel=\"stylesheet\" href=\"${html.escape(details.base.css)}\" />\n    <link rel=\"shortcut icon\" type=\"image/x-icon\" href=\"${html.escape(details.favicon)}\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n    <style type='text/css'>\n        .coverage-summary .sorter {\n            background-image: url(${html.escape(details.sorter.image)});\n        }\n    </style>\n</head>\n    `;\n}\n\nfunction headerTemplate(details) {\n  function metricsTemplate(_ref, kind) {\n    let {\n      pct,\n      covered,\n      total\n    } = _ref;\n    return `\n            <div class='fl pad1y space-right2'>\n                <span class=\"strong\">${pct}% </span>\n                <span class=\"quiet\">${kind}</span>\n                <span class='fraction'>${covered}/${total}</span>\n            </div>\n        `;\n  }\n\n  function skipTemplate(metrics) {\n    const statements = metrics.statements.skipped;\n    const branches = metrics.branches.skipped;\n    const functions = metrics.functions.skipped;\n\n    const countLabel = (c, label, plural) => c === 0 ? [] : `${c} ${label}${c === 1 ? '' : plural}`;\n\n    const skips = [].concat(countLabel(statements, 'statement', 's'), countLabel(functions, 'function', 's'), countLabel(branches, 'branch', 'es'));\n\n    if (skips.length === 0) {\n      return '';\n    }\n\n    return `\n            <div class='fl pad1y'>\n                <span class=\"strong\">${skips.join(', ')}</span>\n                <span class=\"quiet\">Ignored</span>  &nbsp;&nbsp;&nbsp;&nbsp;\n            </div>\n        `;\n  }\n\n  return `\n<!doctype html>\n<html lang=\"en\">\n${htmlHead(details)}\n<body>\n<div class='wrapper'>\n    <div class='pad1'>\n        <h1>${details.pathHtml}</h1>\n        <div class='clearfix'>\n            ${metricsTemplate(details.metrics.statements, 'Statements')}\n            ${metricsTemplate(details.metrics.branches, 'Branches')}\n            ${metricsTemplate(details.metrics.functions, 'Functions')}\n            ${metricsTemplate(details.metrics.lines, 'Lines')}\n            ${skipTemplate(details.metrics)}\n        </div>\n        <p class=\"quiet\">\n            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.\n        </p>\n        <template id=\"filterTemplate\">\n            <div class=\"quiet\">\n                Filter:\n                <input oninput=\"onInput()\" type=\"search\" id=\"fileSearch\">\n            </div>\n        </template>\n    </div>\n    <div class='status-line ${details.reportClass}'></div>\n    `;\n}\n\nfunction footerTemplate(details) {\n  return `\n                <div class='push'></div><!-- for sticky footer -->\n            </div><!-- /wrapper -->\n            <div class='footer quiet pad2 space-top1 center small'>\n                Code coverage generated by\n                <a href=\"https://istanbul.js.org/\" target=\"_blank\" rel=\"noopener noreferrer\">istanbul</a>\n                at ${html.escape(details.datetime)}\n            </div>\n        <script src=\"${html.escape(details.prettify.js)}\"></script>\n        <script>\n            window.onload = function () {\n                prettyPrint();\n            };\n        </script>\n        <script src=\"${html.escape(details.sorter.js)}\"></script>\n        <script src=\"${html.escape(details.blockNavigation.js)}\"></script>\n    </body>\n</html>\n    `;\n}\n\nfunction detailTemplate(data) {\n  const lineNumbers = new Array(data.maxLines).fill().map((_, i) => i + 1);\n\n  const lineLink = num => `<a name='L${num}'></a><a href='#L${num}'>${num}</a>`;\n\n  const lineCount = line => `<span class=\"cline-any cline-${line.covered}\">${line.hits}</span>`;\n  /* This is rendered in a `<pre>`, need control of all whitespace. */\n\n\n  return ['<tr>', `<td class=\"line-count quiet\">${lineNumbers.map(lineLink).join('\\n')}</td>`, `<td class=\"line-coverage quiet\">${data.lineCoverage.map(lineCount).join('\\n')}</td>`, `<td class=\"text\"><pre class=\"prettyprint lang-js\">${data.annotatedCode.join('\\n')}</pre></td>`, '</tr>'].join('');\n}\n\nconst summaryTableHeader = ['<div class=\"pad1\">', '<table class=\"coverage-summary\">', '<thead>', '<tr>', '   <th data-col=\"file\" data-fmt=\"html\" data-html=\"true\" class=\"file\">File</th>', '   <th data-col=\"pic\" data-type=\"number\" data-fmt=\"html\" data-html=\"true\" class=\"pic\"></th>', '   <th data-col=\"statements\" data-type=\"number\" data-fmt=\"pct\" class=\"pct\">Statements</th>', '   <th data-col=\"statements_raw\" data-type=\"number\" data-fmt=\"html\" class=\"abs\"></th>', '   <th data-col=\"branches\" data-type=\"number\" data-fmt=\"pct\" class=\"pct\">Branches</th>', '   <th data-col=\"branches_raw\" data-type=\"number\" data-fmt=\"html\" class=\"abs\"></th>', '   <th data-col=\"functions\" data-type=\"number\" data-fmt=\"pct\" class=\"pct\">Functions</th>', '   <th data-col=\"functions_raw\" data-type=\"number\" data-fmt=\"html\" class=\"abs\"></th>', '   <th data-col=\"lines\" data-type=\"number\" data-fmt=\"pct\" class=\"pct\">Lines</th>', '   <th data-col=\"lines_raw\" data-type=\"number\" data-fmt=\"html\" class=\"abs\"></th>', '</tr>', '</thead>', '<tbody>'].join('\\n');\n\nfunction summaryLineTemplate(details) {\n  const {\n    reportClasses,\n    metrics,\n    file,\n    output\n  } = details;\n\n  const percentGraph = pct => {\n    if (!isFinite(pct)) {\n      return '';\n    }\n\n    const cls = ['cover-fill'];\n\n    if (pct === 100) {\n      cls.push('cover-full');\n    }\n\n    pct = Math.floor(pct);\n    return [`<div class=\"${cls.join(' ')}\" style=\"width: ${pct}%\"></div>`, `<div class=\"cover-empty\" style=\"width: ${100 - pct}%\"></div>`].join('');\n  };\n\n  const summaryType = function (type) {\n    let showGraph = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    const info = metrics[type];\n    const reportClass = reportClasses[type];\n    const result = [`<td data-value=\"${info.pct}\" class=\"pct ${reportClass}\">${info.pct}%</td>`, `<td data-value=\"${info.total}\" class=\"abs ${reportClass}\">${info.covered}/${info.total}</td>`];\n\n    if (showGraph) {\n      result.unshift(`<td data-value=\"${info.pct}\" class=\"pic ${reportClass}\">`, `<div class=\"chart\">${percentGraph(info.pct)}</div>`, `</td>`);\n    }\n\n    return result;\n  };\n\n  return [].concat('<tr>', `<td class=\"file ${reportClasses.statements}\" data-value=\"${html.escape(file)}\"><a href=\"${html.escape(output)}\">${html.escape(file)}</a></td>`, summaryType('statements', true), summaryType('branches'), summaryType('functions'), summaryType('lines'), '</tr>\\n').join('\\n\\t');\n}\n\nconst summaryTableFooter = ['</tbody>', '</table>', '</div>'].join('\\n');\nconst emptyClasses = {\n  statements: 'empty',\n  lines: 'empty',\n  functions: 'empty',\n  branches: 'empty'\n};\nconst standardLinkMapper = {\n  getPath(node) {\n    if (typeof node === 'string') {\n      return node;\n    }\n\n    let filePath = node.getQualifiedName();\n\n    if (node.isSummary()) {\n      if (filePath !== '') {\n        filePath += '/index.html';\n      } else {\n        filePath = 'index.html';\n      }\n    } else {\n      filePath += '.html';\n    }\n\n    return filePath;\n  },\n\n  relativePath(source, target) {\n    const targetPath = this.getPath(target);\n    const sourcePath = path.dirname(this.getPath(source));\n    return path.posix.relative(sourcePath, targetPath);\n  },\n\n  assetPath(node, name) {\n    return this.relativePath(this.getPath(node), name);\n  }\n\n};\n\nfunction fixPct(metrics) {\n  Object.keys(emptyClasses).forEach(key => {\n    metrics[key].pct = 0;\n  });\n  return metrics;\n}\n\nclass HtmlReport extends ReportBase {\n  constructor(opts) {\n    super();\n    this.verbose = opts.verbose;\n    this.linkMapper = opts.linkMapper || standardLinkMapper;\n    this.subdir = opts.subdir || '';\n    this.date = new Date().toISOString();\n    this.skipEmpty = opts.skipEmpty;\n  }\n\n  getBreadcrumbHtml(node) {\n    let parent = node.getParent();\n    const nodePath = [];\n\n    while (parent) {\n      nodePath.push(parent);\n      parent = parent.getParent();\n    }\n\n    const linkPath = nodePath.map(ancestor => {\n      const target = this.linkMapper.relativePath(node, ancestor);\n      const name = ancestor.getRelativeName() || 'All files';\n      return '<a href=\"' + target + '\">' + name + '</a>';\n    });\n    linkPath.reverse();\n    return linkPath.length > 0 ? linkPath.join(' / ') + ' ' + node.getRelativeName() : 'All files';\n  }\n\n  fillTemplate(node, templateData, context) {\n    const linkMapper = this.linkMapper;\n    const summary = node.getCoverageSummary();\n    templateData.entity = node.getQualifiedName() || 'All files';\n    templateData.metrics = summary;\n    templateData.reportClass = context.classForPercent('statements', summary.statements.pct);\n    templateData.pathHtml = this.getBreadcrumbHtml(node);\n    templateData.base = {\n      css: linkMapper.assetPath(node, 'base.css')\n    };\n    templateData.sorter = {\n      js: linkMapper.assetPath(node, 'sorter.js'),\n      image: linkMapper.assetPath(node, 'sort-arrow-sprite.png')\n    };\n    templateData.blockNavigation = {\n      js: linkMapper.assetPath(node, 'block-navigation.js')\n    };\n    templateData.prettify = {\n      js: linkMapper.assetPath(node, 'prettify.js'),\n      css: linkMapper.assetPath(node, 'prettify.css')\n    };\n    templateData.favicon = linkMapper.assetPath(node, 'favicon.png');\n  }\n\n  getTemplateData() {\n    return {\n      datetime: this.date\n    };\n  }\n\n  getWriter(context) {\n    if (!this.subdir) {\n      return context.writer;\n    }\n\n    return context.writer.writerForDir(this.subdir);\n  }\n\n  onStart(root, context) {\n    const assetHeaders = {\n      '.js': '/* eslint-disable */\\n'\n    };\n    ['.', 'vendor'].forEach(subdir => {\n      const writer = this.getWriter(context);\n      const srcDir = path.resolve(__dirname, 'assets', subdir);\n      fs.readdirSync(srcDir).forEach(f => {\n        const resolvedSource = path.resolve(srcDir, f);\n        const resolvedDestination = '.';\n        const stat = fs.statSync(resolvedSource);\n        let dest;\n\n        if (stat.isFile()) {\n          dest = resolvedDestination + '/' + f;\n\n          if (this.verbose) {\n            console.log('Write asset: ' + dest);\n          }\n\n          writer.copyFile(resolvedSource, dest, assetHeaders[path.extname(f)]);\n        }\n      });\n    });\n  }\n\n  onSummary(node, context) {\n    const linkMapper = this.linkMapper;\n    const templateData = this.getTemplateData();\n    const children = node.getChildren();\n    const skipEmpty = this.skipEmpty;\n    this.fillTemplate(node, templateData, context);\n    const cw = this.getWriter(context).writeFile(linkMapper.getPath(node));\n    cw.write(headerTemplate(templateData));\n    cw.write(summaryTableHeader);\n    children.forEach(child => {\n      const metrics = child.getCoverageSummary();\n      const isEmpty = metrics.isEmpty();\n\n      if (skipEmpty && isEmpty) {\n        return;\n      }\n\n      const reportClasses = isEmpty ? emptyClasses : {\n        statements: context.classForPercent('statements', metrics.statements.pct),\n        lines: context.classForPercent('lines', metrics.lines.pct),\n        functions: context.classForPercent('functions', metrics.functions.pct),\n        branches: context.classForPercent('branches', metrics.branches.pct)\n      };\n      const data = {\n        metrics: isEmpty ? fixPct(metrics) : metrics,\n        reportClasses,\n        file: child.getRelativeName(),\n        output: linkMapper.relativePath(node, child)\n      };\n      cw.write(summaryLineTemplate(data) + '\\n');\n    });\n    cw.write(summaryTableFooter);\n    cw.write(footerTemplate(templateData));\n    cw.close();\n  }\n\n  onDetail(node, context) {\n    const linkMapper = this.linkMapper;\n    const templateData = this.getTemplateData();\n    this.fillTemplate(node, templateData, context);\n    const cw = this.getWriter(context).writeFile(linkMapper.getPath(node));\n    cw.write(headerTemplate(templateData));\n    cw.write('<pre><table class=\"coverage\">\\n');\n    cw.write(detailTemplate(annotator(node.getFileCoverage(), context)));\n    cw.write('</table></pre>\\n');\n    cw.write(footerTemplate(templateData));\n    cw.close();\n  }\n\n}\n\nmodule.exports = HtmlReport;","map":{"version":3,"names":["fs","require","path","html","ReportBase","annotator","htmlHead","details","escape","entity","prettify","css","base","favicon","sorter","image","headerTemplate","metricsTemplate","kind","pct","covered","total","skipTemplate","metrics","statements","skipped","branches","functions","countLabel","c","label","plural","skips","concat","length","join","pathHtml","lines","reportClass","footerTemplate","datetime","js","blockNavigation","detailTemplate","data","lineNumbers","Array","maxLines","fill","map","_","i","lineLink","num","lineCount","line","hits","lineCoverage","annotatedCode","summaryTableHeader","summaryLineTemplate","reportClasses","file","output","percentGraph","isFinite","cls","push","Math","floor","summaryType","type","showGraph","info","result","unshift","summaryTableFooter","emptyClasses","standardLinkMapper","getPath","node","filePath","getQualifiedName","isSummary","relativePath","source","target","targetPath","sourcePath","dirname","posix","relative","assetPath","name","fixPct","Object","keys","forEach","key","HtmlReport","constructor","opts","verbose","linkMapper","subdir","date","Date","toISOString","skipEmpty","getBreadcrumbHtml","parent","getParent","nodePath","linkPath","ancestor","getRelativeName","reverse","fillTemplate","templateData","context","summary","getCoverageSummary","classForPercent","getTemplateData","getWriter","writer","writerForDir","onStart","root","assetHeaders","srcDir","resolve","__dirname","readdirSync","f","resolvedSource","resolvedDestination","stat","statSync","dest","isFile","console","log","copyFile","extname","onSummary","children","getChildren","cw","writeFile","write","child","isEmpty","close","onDetail","getFileCoverage","module","exports"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/istanbul-reports/lib/html/index.js"],"sourcesContent":["'use strict';\n/*\n Copyright 2012-2015, Yahoo Inc.\n Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.\n */\nconst fs = require('fs');\nconst path = require('path');\nconst html = require('html-escaper');\nconst { ReportBase } = require('istanbul-lib-report');\nconst annotator = require('./annotator');\n\nfunction htmlHead(details) {\n    return `\n<head>\n    <title>Code coverage report for ${html.escape(details.entity)}</title>\n    <meta charset=\"utf-8\" />\n    <link rel=\"stylesheet\" href=\"${html.escape(details.prettify.css)}\" />\n    <link rel=\"stylesheet\" href=\"${html.escape(details.base.css)}\" />\n    <link rel=\"shortcut icon\" type=\"image/x-icon\" href=\"${html.escape(\n        details.favicon\n    )}\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n    <style type='text/css'>\n        .coverage-summary .sorter {\n            background-image: url(${html.escape(details.sorter.image)});\n        }\n    </style>\n</head>\n    `;\n}\n\nfunction headerTemplate(details) {\n    function metricsTemplate({ pct, covered, total }, kind) {\n        return `\n            <div class='fl pad1y space-right2'>\n                <span class=\"strong\">${pct}% </span>\n                <span class=\"quiet\">${kind}</span>\n                <span class='fraction'>${covered}/${total}</span>\n            </div>\n        `;\n    }\n\n    function skipTemplate(metrics) {\n        const statements = metrics.statements.skipped;\n        const branches = metrics.branches.skipped;\n        const functions = metrics.functions.skipped;\n\n        const countLabel = (c, label, plural) =>\n            c === 0 ? [] : `${c} ${label}${c === 1 ? '' : plural}`;\n        const skips = [].concat(\n            countLabel(statements, 'statement', 's'),\n            countLabel(functions, 'function', 's'),\n            countLabel(branches, 'branch', 'es')\n        );\n\n        if (skips.length === 0) {\n            return '';\n        }\n\n        return `\n            <div class='fl pad1y'>\n                <span class=\"strong\">${skips.join(', ')}</span>\n                <span class=\"quiet\">Ignored</span>  &nbsp;&nbsp;&nbsp;&nbsp;\n            </div>\n        `;\n    }\n\n    return `\n<!doctype html>\n<html lang=\"en\">\n${htmlHead(details)}\n<body>\n<div class='wrapper'>\n    <div class='pad1'>\n        <h1>${details.pathHtml}</h1>\n        <div class='clearfix'>\n            ${metricsTemplate(details.metrics.statements, 'Statements')}\n            ${metricsTemplate(details.metrics.branches, 'Branches')}\n            ${metricsTemplate(details.metrics.functions, 'Functions')}\n            ${metricsTemplate(details.metrics.lines, 'Lines')}\n            ${skipTemplate(details.metrics)}\n        </div>\n        <p class=\"quiet\">\n            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.\n        </p>\n        <template id=\"filterTemplate\">\n            <div class=\"quiet\">\n                Filter:\n                <input oninput=\"onInput()\" type=\"search\" id=\"fileSearch\">\n            </div>\n        </template>\n    </div>\n    <div class='status-line ${details.reportClass}'></div>\n    `;\n}\n\nfunction footerTemplate(details) {\n    return `\n                <div class='push'></div><!-- for sticky footer -->\n            </div><!-- /wrapper -->\n            <div class='footer quiet pad2 space-top1 center small'>\n                Code coverage generated by\n                <a href=\"https://istanbul.js.org/\" target=\"_blank\" rel=\"noopener noreferrer\">istanbul</a>\n                at ${html.escape(details.datetime)}\n            </div>\n        <script src=\"${html.escape(details.prettify.js)}\"></script>\n        <script>\n            window.onload = function () {\n                prettyPrint();\n            };\n        </script>\n        <script src=\"${html.escape(details.sorter.js)}\"></script>\n        <script src=\"${html.escape(details.blockNavigation.js)}\"></script>\n    </body>\n</html>\n    `;\n}\n\nfunction detailTemplate(data) {\n    const lineNumbers = new Array(data.maxLines).fill().map((_, i) => i + 1);\n    const lineLink = num =>\n        `<a name='L${num}'></a><a href='#L${num}'>${num}</a>`;\n    const lineCount = line =>\n        `<span class=\"cline-any cline-${line.covered}\">${line.hits}</span>`;\n\n    /* This is rendered in a `<pre>`, need control of all whitespace. */\n    return [\n        '<tr>',\n        `<td class=\"line-count quiet\">${lineNumbers\n            .map(lineLink)\n            .join('\\n')}</td>`,\n        `<td class=\"line-coverage quiet\">${data.lineCoverage\n            .map(lineCount)\n            .join('\\n')}</td>`,\n        `<td class=\"text\"><pre class=\"prettyprint lang-js\">${data.annotatedCode.join(\n            '\\n'\n        )}</pre></td>`,\n        '</tr>'\n    ].join('');\n}\nconst summaryTableHeader = [\n    '<div class=\"pad1\">',\n    '<table class=\"coverage-summary\">',\n    '<thead>',\n    '<tr>',\n    '   <th data-col=\"file\" data-fmt=\"html\" data-html=\"true\" class=\"file\">File</th>',\n    '   <th data-col=\"pic\" data-type=\"number\" data-fmt=\"html\" data-html=\"true\" class=\"pic\"></th>',\n    '   <th data-col=\"statements\" data-type=\"number\" data-fmt=\"pct\" class=\"pct\">Statements</th>',\n    '   <th data-col=\"statements_raw\" data-type=\"number\" data-fmt=\"html\" class=\"abs\"></th>',\n    '   <th data-col=\"branches\" data-type=\"number\" data-fmt=\"pct\" class=\"pct\">Branches</th>',\n    '   <th data-col=\"branches_raw\" data-type=\"number\" data-fmt=\"html\" class=\"abs\"></th>',\n    '   <th data-col=\"functions\" data-type=\"number\" data-fmt=\"pct\" class=\"pct\">Functions</th>',\n    '   <th data-col=\"functions_raw\" data-type=\"number\" data-fmt=\"html\" class=\"abs\"></th>',\n    '   <th data-col=\"lines\" data-type=\"number\" data-fmt=\"pct\" class=\"pct\">Lines</th>',\n    '   <th data-col=\"lines_raw\" data-type=\"number\" data-fmt=\"html\" class=\"abs\"></th>',\n    '</tr>',\n    '</thead>',\n    '<tbody>'\n].join('\\n');\n\nfunction summaryLineTemplate(details) {\n    const { reportClasses, metrics, file, output } = details;\n    const percentGraph = pct => {\n        if (!isFinite(pct)) {\n            return '';\n        }\n\n        const cls = ['cover-fill'];\n        if (pct === 100) {\n            cls.push('cover-full');\n        }\n\n        pct = Math.floor(pct);\n        return [\n            `<div class=\"${cls.join(' ')}\" style=\"width: ${pct}%\"></div>`,\n            `<div class=\"cover-empty\" style=\"width: ${100 - pct}%\"></div>`\n        ].join('');\n    };\n    const summaryType = (type, showGraph = false) => {\n        const info = metrics[type];\n        const reportClass = reportClasses[type];\n        const result = [\n            `<td data-value=\"${info.pct}\" class=\"pct ${reportClass}\">${info.pct}%</td>`,\n            `<td data-value=\"${info.total}\" class=\"abs ${reportClass}\">${info.covered}/${info.total}</td>`\n        ];\n        if (showGraph) {\n            result.unshift(\n                `<td data-value=\"${info.pct}\" class=\"pic ${reportClass}\">`,\n                `<div class=\"chart\">${percentGraph(info.pct)}</div>`,\n                `</td>`\n            );\n        }\n\n        return result;\n    };\n\n    return []\n        .concat(\n            '<tr>',\n            `<td class=\"file ${\n                reportClasses.statements\n            }\" data-value=\"${html.escape(file)}\"><a href=\"${html.escape(\n                output\n            )}\">${html.escape(file)}</a></td>`,\n            summaryType('statements', true),\n            summaryType('branches'),\n            summaryType('functions'),\n            summaryType('lines'),\n            '</tr>\\n'\n        )\n        .join('\\n\\t');\n}\n\nconst summaryTableFooter = ['</tbody>', '</table>', '</div>'].join('\\n');\nconst emptyClasses = {\n    statements: 'empty',\n    lines: 'empty',\n    functions: 'empty',\n    branches: 'empty'\n};\n\nconst standardLinkMapper = {\n    getPath(node) {\n        if (typeof node === 'string') {\n            return node;\n        }\n        let filePath = node.getQualifiedName();\n        if (node.isSummary()) {\n            if (filePath !== '') {\n                filePath += '/index.html';\n            } else {\n                filePath = 'index.html';\n            }\n        } else {\n            filePath += '.html';\n        }\n        return filePath;\n    },\n\n    relativePath(source, target) {\n        const targetPath = this.getPath(target);\n        const sourcePath = path.dirname(this.getPath(source));\n        return path.posix.relative(sourcePath, targetPath);\n    },\n\n    assetPath(node, name) {\n        return this.relativePath(this.getPath(node), name);\n    }\n};\n\nfunction fixPct(metrics) {\n    Object.keys(emptyClasses).forEach(key => {\n        metrics[key].pct = 0;\n    });\n    return metrics;\n}\n\nclass HtmlReport extends ReportBase {\n    constructor(opts) {\n        super();\n\n        this.verbose = opts.verbose;\n        this.linkMapper = opts.linkMapper || standardLinkMapper;\n        this.subdir = opts.subdir || '';\n        this.date = new Date().toISOString();\n        this.skipEmpty = opts.skipEmpty;\n    }\n\n    getBreadcrumbHtml(node) {\n        let parent = node.getParent();\n        const nodePath = [];\n\n        while (parent) {\n            nodePath.push(parent);\n            parent = parent.getParent();\n        }\n\n        const linkPath = nodePath.map(ancestor => {\n            const target = this.linkMapper.relativePath(node, ancestor);\n            const name = ancestor.getRelativeName() || 'All files';\n            return '<a href=\"' + target + '\">' + name + '</a>';\n        });\n\n        linkPath.reverse();\n        return linkPath.length > 0\n            ? linkPath.join(' / ') + ' ' + node.getRelativeName()\n            : 'All files';\n    }\n\n    fillTemplate(node, templateData, context) {\n        const linkMapper = this.linkMapper;\n        const summary = node.getCoverageSummary();\n        templateData.entity = node.getQualifiedName() || 'All files';\n        templateData.metrics = summary;\n        templateData.reportClass = context.classForPercent(\n            'statements',\n            summary.statements.pct\n        );\n        templateData.pathHtml = this.getBreadcrumbHtml(node);\n        templateData.base = {\n            css: linkMapper.assetPath(node, 'base.css')\n        };\n        templateData.sorter = {\n            js: linkMapper.assetPath(node, 'sorter.js'),\n            image: linkMapper.assetPath(node, 'sort-arrow-sprite.png')\n        };\n        templateData.blockNavigation = {\n            js: linkMapper.assetPath(node, 'block-navigation.js')\n        };\n        templateData.prettify = {\n            js: linkMapper.assetPath(node, 'prettify.js'),\n            css: linkMapper.assetPath(node, 'prettify.css')\n        };\n        templateData.favicon = linkMapper.assetPath(node, 'favicon.png');\n    }\n\n    getTemplateData() {\n        return { datetime: this.date };\n    }\n\n    getWriter(context) {\n        if (!this.subdir) {\n            return context.writer;\n        }\n        return context.writer.writerForDir(this.subdir);\n    }\n\n    onStart(root, context) {\n        const assetHeaders = {\n            '.js': '/* eslint-disable */\\n'\n        };\n\n        ['.', 'vendor'].forEach(subdir => {\n            const writer = this.getWriter(context);\n            const srcDir = path.resolve(__dirname, 'assets', subdir);\n            fs.readdirSync(srcDir).forEach(f => {\n                const resolvedSource = path.resolve(srcDir, f);\n                const resolvedDestination = '.';\n                const stat = fs.statSync(resolvedSource);\n                let dest;\n\n                if (stat.isFile()) {\n                    dest = resolvedDestination + '/' + f;\n                    if (this.verbose) {\n                        console.log('Write asset: ' + dest);\n                    }\n                    writer.copyFile(\n                        resolvedSource,\n                        dest,\n                        assetHeaders[path.extname(f)]\n                    );\n                }\n            });\n        });\n    }\n\n    onSummary(node, context) {\n        const linkMapper = this.linkMapper;\n        const templateData = this.getTemplateData();\n        const children = node.getChildren();\n        const skipEmpty = this.skipEmpty;\n\n        this.fillTemplate(node, templateData, context);\n        const cw = this.getWriter(context).writeFile(linkMapper.getPath(node));\n        cw.write(headerTemplate(templateData));\n        cw.write(summaryTableHeader);\n        children.forEach(child => {\n            const metrics = child.getCoverageSummary();\n            const isEmpty = metrics.isEmpty();\n            if (skipEmpty && isEmpty) {\n                return;\n            }\n            const reportClasses = isEmpty\n                ? emptyClasses\n                : {\n                      statements: context.classForPercent(\n                          'statements',\n                          metrics.statements.pct\n                      ),\n                      lines: context.classForPercent(\n                          'lines',\n                          metrics.lines.pct\n                      ),\n                      functions: context.classForPercent(\n                          'functions',\n                          metrics.functions.pct\n                      ),\n                      branches: context.classForPercent(\n                          'branches',\n                          metrics.branches.pct\n                      )\n                  };\n            const data = {\n                metrics: isEmpty ? fixPct(metrics) : metrics,\n                reportClasses,\n                file: child.getRelativeName(),\n                output: linkMapper.relativePath(node, child)\n            };\n            cw.write(summaryLineTemplate(data) + '\\n');\n        });\n        cw.write(summaryTableFooter);\n        cw.write(footerTemplate(templateData));\n        cw.close();\n    }\n\n    onDetail(node, context) {\n        const linkMapper = this.linkMapper;\n        const templateData = this.getTemplateData();\n\n        this.fillTemplate(node, templateData, context);\n        const cw = this.getWriter(context).writeFile(linkMapper.getPath(node));\n        cw.write(headerTemplate(templateData));\n        cw.write('<pre><table class=\"coverage\">\\n');\n        cw.write(detailTemplate(annotator(node.getFileCoverage(), context)));\n        cw.write('</table></pre>\\n');\n        cw.write(footerTemplate(templateData));\n        cw.close();\n    }\n}\n\nmodule.exports = HtmlReport;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}