{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.RULE_NAME = void 0;\n\nconst utils_1 = require(\"@typescript-eslint/utils\");\n\nconst create_testing_library_rule_1 = require(\"../create-testing-library-rule\");\n\nconst node_utils_1 = require(\"../node-utils\");\n\nexports.RULE_NAME = 'await-async-query';\nexports.default = (0, create_testing_library_rule_1.createTestingLibraryRule)({\n  name: exports.RULE_NAME,\n  meta: {\n    type: 'problem',\n    docs: {\n      description: 'Enforce promises from async queries to be handled',\n      recommendedConfig: {\n        dom: 'error',\n        angular: 'error',\n        react: 'error',\n        vue: 'error',\n        marko: 'error'\n      }\n    },\n    messages: {\n      awaitAsyncQuery: 'promise returned from `{{ name }}` query must be handled',\n      asyncQueryWrapper: 'promise returned from `{{ name }}` wrapper over async query must be handled'\n    },\n    schema: []\n  },\n  defaultOptions: [],\n\n  create(context, _, helpers) {\n    const functionWrappersNames = [];\n\n    function detectAsyncQueryWrapper(node) {\n      const innerFunction = (0, node_utils_1.getInnermostReturningFunction)(context, node);\n\n      if (innerFunction) {\n        functionWrappersNames.push((0, node_utils_1.getFunctionName)(innerFunction));\n      }\n    }\n\n    return {\n      CallExpression(node) {\n        const identifierNode = (0, node_utils_1.getDeepestIdentifierNode)(node);\n\n        if (!identifierNode) {\n          return;\n        }\n\n        if (helpers.isAsyncQuery(identifierNode)) {\n          detectAsyncQueryWrapper(identifierNode);\n          const closestCallExpressionNode = (0, node_utils_1.findClosestCallExpressionNode)(node, true);\n\n          if (!closestCallExpressionNode || !closestCallExpressionNode.parent) {\n            return;\n          }\n\n          const references = (0, node_utils_1.getVariableReferences)(context, closestCallExpressionNode.parent);\n\n          if (references.length === 0) {\n            if (!(0, node_utils_1.isPromiseHandled)(identifierNode)) {\n              context.report({\n                node: identifierNode,\n                messageId: 'awaitAsyncQuery',\n                data: {\n                  name: identifierNode.name\n                }\n              });\n              return;\n            }\n          }\n\n          for (const reference of references) {\n            if (utils_1.ASTUtils.isIdentifier(reference.identifier) && !(0, node_utils_1.isPromiseHandled)(reference.identifier)) {\n              context.report({\n                node: identifierNode,\n                messageId: 'awaitAsyncQuery',\n                data: {\n                  name: identifierNode.name\n                }\n              });\n              return;\n            }\n          }\n        } else if (functionWrappersNames.includes(identifierNode.name) && !(0, node_utils_1.isPromiseHandled)(identifierNode)) {\n          context.report({\n            node: identifierNode,\n            messageId: 'asyncQueryWrapper',\n            data: {\n              name: identifierNode.name\n            }\n          });\n        }\n      }\n\n    };\n  }\n\n});","map":{"version":3,"names":["Object","defineProperty","exports","value","RULE_NAME","utils_1","require","create_testing_library_rule_1","node_utils_1","default","createTestingLibraryRule","name","meta","type","docs","description","recommendedConfig","dom","angular","react","vue","marko","messages","awaitAsyncQuery","asyncQueryWrapper","schema","defaultOptions","create","context","_","helpers","functionWrappersNames","detectAsyncQueryWrapper","node","innerFunction","getInnermostReturningFunction","push","getFunctionName","CallExpression","identifierNode","getDeepestIdentifierNode","isAsyncQuery","closestCallExpressionNode","findClosestCallExpressionNode","parent","references","getVariableReferences","length","isPromiseHandled","report","messageId","data","reference","ASTUtils","isIdentifier","identifier","includes"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/eslint-plugin-testing-library/rules/await-async-query.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RULE_NAME = void 0;\nconst utils_1 = require(\"@typescript-eslint/utils\");\nconst create_testing_library_rule_1 = require(\"../create-testing-library-rule\");\nconst node_utils_1 = require(\"../node-utils\");\nexports.RULE_NAME = 'await-async-query';\nexports.default = (0, create_testing_library_rule_1.createTestingLibraryRule)({\n    name: exports.RULE_NAME,\n    meta: {\n        type: 'problem',\n        docs: {\n            description: 'Enforce promises from async queries to be handled',\n            recommendedConfig: {\n                dom: 'error',\n                angular: 'error',\n                react: 'error',\n                vue: 'error',\n                marko: 'error',\n            },\n        },\n        messages: {\n            awaitAsyncQuery: 'promise returned from `{{ name }}` query must be handled',\n            asyncQueryWrapper: 'promise returned from `{{ name }}` wrapper over async query must be handled',\n        },\n        schema: [],\n    },\n    defaultOptions: [],\n    create(context, _, helpers) {\n        const functionWrappersNames = [];\n        function detectAsyncQueryWrapper(node) {\n            const innerFunction = (0, node_utils_1.getInnermostReturningFunction)(context, node);\n            if (innerFunction) {\n                functionWrappersNames.push((0, node_utils_1.getFunctionName)(innerFunction));\n            }\n        }\n        return {\n            CallExpression(node) {\n                const identifierNode = (0, node_utils_1.getDeepestIdentifierNode)(node);\n                if (!identifierNode) {\n                    return;\n                }\n                if (helpers.isAsyncQuery(identifierNode)) {\n                    detectAsyncQueryWrapper(identifierNode);\n                    const closestCallExpressionNode = (0, node_utils_1.findClosestCallExpressionNode)(node, true);\n                    if (!closestCallExpressionNode || !closestCallExpressionNode.parent) {\n                        return;\n                    }\n                    const references = (0, node_utils_1.getVariableReferences)(context, closestCallExpressionNode.parent);\n                    if (references.length === 0) {\n                        if (!(0, node_utils_1.isPromiseHandled)(identifierNode)) {\n                            context.report({\n                                node: identifierNode,\n                                messageId: 'awaitAsyncQuery',\n                                data: { name: identifierNode.name },\n                            });\n                            return;\n                        }\n                    }\n                    for (const reference of references) {\n                        if (utils_1.ASTUtils.isIdentifier(reference.identifier) &&\n                            !(0, node_utils_1.isPromiseHandled)(reference.identifier)) {\n                            context.report({\n                                node: identifierNode,\n                                messageId: 'awaitAsyncQuery',\n                                data: { name: identifierNode.name },\n                            });\n                            return;\n                        }\n                    }\n                }\n                else if (functionWrappersNames.includes(identifierNode.name) &&\n                    !(0, node_utils_1.isPromiseHandled)(identifierNode)) {\n                    context.report({\n                        node: identifierNode,\n                        messageId: 'asyncQueryWrapper',\n                        data: { name: identifierNode.name },\n                    });\n                }\n            },\n        };\n    },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}