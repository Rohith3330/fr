{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.stripSpacesBefore = exports.stripSpacesAfter = exports.stripSpaces = exports.replaceWithSpaceBefore = exports.replaceWithSpaceAfter = exports.replaceWithSpace = exports.addSpaceBefore = exports.addSpaceAfter = exports.addSpace = void 0;\n\nconst stripSpacesBefore = (node, spaces) => {\n  return fixer => {\n    return fixer.removeRange([node.range[0] - spaces, node.range[0]]);\n  };\n};\n\nexports.stripSpacesBefore = stripSpacesBefore;\n\nconst stripSpacesAfter = (node, spaces) => {\n  return fixer => {\n    return fixer.removeRange([node.range[1], node.range[1] + spaces]);\n  };\n};\n\nexports.stripSpacesAfter = stripSpacesAfter;\n\nconst addSpaceBefore = node => {\n  return fixer => {\n    return fixer.insertTextBefore(node, ' ');\n  };\n};\n\nexports.addSpaceBefore = addSpaceBefore;\n\nconst addSpaceAfter = node => {\n  return fixer => {\n    return fixer.insertTextAfter(node, ' ');\n  };\n};\n\nexports.addSpaceAfter = addSpaceAfter;\n\nconst replaceWithSpaceBefore = (node, spaces) => {\n  return fixer => {\n    return fixer.replaceTextRange([node.range[0] - spaces, node.range[0]], ' ');\n  };\n};\n\nexports.replaceWithSpaceBefore = replaceWithSpaceBefore;\n\nconst replaceWithSpaceAfter = (node, spaces) => {\n  return fixer => {\n    return fixer.replaceTextRange([node.range[1], node.range[1] + spaces], ' ');\n  };\n};\n\nexports.replaceWithSpaceAfter = replaceWithSpaceAfter;\n\nconst stripSpaces = (direction, node, spaces) => {\n  if (direction === 'before') {\n    return stripSpacesBefore(node, spaces);\n  }\n\n  return stripSpacesAfter(node, spaces);\n};\n\nexports.stripSpaces = stripSpaces;\n\nconst addSpace = (direction, node) => {\n  if (direction === 'before') {\n    return addSpaceBefore(node);\n  }\n\n  return addSpaceAfter(node);\n};\n\nexports.addSpace = addSpace;\n\nconst replaceWithSpace = (direction, node, spaces) => {\n  if (direction === 'before') {\n    return replaceWithSpaceBefore(node, spaces);\n  }\n\n  return replaceWithSpaceAfter(node, spaces);\n};\n\nexports.replaceWithSpace = replaceWithSpace;","map":{"version":3,"names":["Object","defineProperty","exports","value","stripSpacesBefore","stripSpacesAfter","stripSpaces","replaceWithSpaceBefore","replaceWithSpaceAfter","replaceWithSpace","addSpaceBefore","addSpaceAfter","addSpace","node","spaces","fixer","removeRange","range","insertTextBefore","insertTextAfter","replaceTextRange","direction"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/eslint-plugin-flowtype/dist/utilities/spacingFixers.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.stripSpacesBefore = exports.stripSpacesAfter = exports.stripSpaces = exports.replaceWithSpaceBefore = exports.replaceWithSpaceAfter = exports.replaceWithSpace = exports.addSpaceBefore = exports.addSpaceAfter = exports.addSpace = void 0;\n\nconst stripSpacesBefore = (node, spaces) => {\n  return fixer => {\n    return fixer.removeRange([node.range[0] - spaces, node.range[0]]);\n  };\n};\n\nexports.stripSpacesBefore = stripSpacesBefore;\n\nconst stripSpacesAfter = (node, spaces) => {\n  return fixer => {\n    return fixer.removeRange([node.range[1], node.range[1] + spaces]);\n  };\n};\n\nexports.stripSpacesAfter = stripSpacesAfter;\n\nconst addSpaceBefore = node => {\n  return fixer => {\n    return fixer.insertTextBefore(node, ' ');\n  };\n};\n\nexports.addSpaceBefore = addSpaceBefore;\n\nconst addSpaceAfter = node => {\n  return fixer => {\n    return fixer.insertTextAfter(node, ' ');\n  };\n};\n\nexports.addSpaceAfter = addSpaceAfter;\n\nconst replaceWithSpaceBefore = (node, spaces) => {\n  return fixer => {\n    return fixer.replaceTextRange([node.range[0] - spaces, node.range[0]], ' ');\n  };\n};\n\nexports.replaceWithSpaceBefore = replaceWithSpaceBefore;\n\nconst replaceWithSpaceAfter = (node, spaces) => {\n  return fixer => {\n    return fixer.replaceTextRange([node.range[1], node.range[1] + spaces], ' ');\n  };\n};\n\nexports.replaceWithSpaceAfter = replaceWithSpaceAfter;\n\nconst stripSpaces = (direction, node, spaces) => {\n  if (direction === 'before') {\n    return stripSpacesBefore(node, spaces);\n  }\n\n  return stripSpacesAfter(node, spaces);\n};\n\nexports.stripSpaces = stripSpaces;\n\nconst addSpace = (direction, node) => {\n  if (direction === 'before') {\n    return addSpaceBefore(node);\n  }\n\n  return addSpaceAfter(node);\n};\n\nexports.addSpace = addSpace;\n\nconst replaceWithSpace = (direction, node, spaces) => {\n  if (direction === 'before') {\n    return replaceWithSpaceBefore(node, spaces);\n  }\n\n  return replaceWithSpaceAfter(node, spaces);\n};\n\nexports.replaceWithSpace = replaceWithSpace;"],"mappings":"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"},"metadata":{},"sourceType":"script"}