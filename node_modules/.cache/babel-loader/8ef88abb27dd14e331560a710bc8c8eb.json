{"ast":null,"code":"'use strict';\n\nvar shorthandParser = require('../parsers').shorthandParser;\n\nvar shorthandSetter = require('../parsers').shorthandSetter;\n\nvar shorthandGetter = require('../parsers').shorthandGetter;\n\nvar shorthand_for = {\n  'flex-grow': require('./flexGrow'),\n  'flex-shrink': require('./flexShrink'),\n  'flex-basis': require('./flexBasis')\n};\nvar myShorthandSetter = shorthandSetter('flex', shorthand_for);\n\nmodule.exports.isValid = function isValid(v) {\n  return shorthandParser(v, shorthand_for) !== undefined;\n};\n\nmodule.exports.definition = {\n  set: function (v) {\n    var normalizedValue = String(v).trim().toLowerCase();\n\n    if (normalizedValue === 'none') {\n      myShorthandSetter.call(this, '0 0 auto');\n      return;\n    }\n\n    if (normalizedValue === 'initial') {\n      myShorthandSetter.call(this, '0 1 auto');\n      return;\n    }\n\n    if (normalizedValue === 'auto') {\n      this.removeProperty('flex-grow');\n      this.removeProperty('flex-shrink');\n      this.setProperty('flex-basis', normalizedValue);\n      return;\n    }\n\n    myShorthandSetter.call(this, v);\n  },\n  get: shorthandGetter('flex', shorthand_for),\n  enumerable: true,\n  configurable: true\n};","map":{"version":3,"names":["shorthandParser","require","shorthandSetter","shorthandGetter","shorthand_for","myShorthandSetter","module","exports","isValid","v","undefined","definition","set","normalizedValue","String","trim","toLowerCase","call","removeProperty","setProperty","get","enumerable","configurable"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/cssstyle/lib/properties/flex.js"],"sourcesContent":["'use strict';\n\nvar shorthandParser = require('../parsers').shorthandParser;\nvar shorthandSetter = require('../parsers').shorthandSetter;\nvar shorthandGetter = require('../parsers').shorthandGetter;\n\nvar shorthand_for = {\n  'flex-grow': require('./flexGrow'),\n  'flex-shrink': require('./flexShrink'),\n  'flex-basis': require('./flexBasis'),\n};\n\nvar myShorthandSetter = shorthandSetter('flex', shorthand_for);\n\nmodule.exports.isValid = function isValid(v) {\n  return shorthandParser(v, shorthand_for) !== undefined;\n};\n\nmodule.exports.definition = {\n  set: function(v) {\n    var normalizedValue = String(v)\n      .trim()\n      .toLowerCase();\n\n    if (normalizedValue === 'none') {\n      myShorthandSetter.call(this, '0 0 auto');\n      return;\n    }\n    if (normalizedValue === 'initial') {\n      myShorthandSetter.call(this, '0 1 auto');\n      return;\n    }\n    if (normalizedValue === 'auto') {\n      this.removeProperty('flex-grow');\n      this.removeProperty('flex-shrink');\n      this.setProperty('flex-basis', normalizedValue);\n      return;\n    }\n\n    myShorthandSetter.call(this, v);\n  },\n  get: shorthandGetter('flex', shorthand_for),\n  enumerable: true,\n  configurable: true,\n};\n"],"mappings":"AAAA;;AAEA,IAAIA,eAAe,GAAGC,OAAO,CAAC,YAAD,CAAP,CAAsBD,eAA5C;;AACA,IAAIE,eAAe,GAAGD,OAAO,CAAC,YAAD,CAAP,CAAsBC,eAA5C;;AACA,IAAIC,eAAe,GAAGF,OAAO,CAAC,YAAD,CAAP,CAAsBE,eAA5C;;AAEA,IAAIC,aAAa,GAAG;EAClB,aAAaH,OAAO,CAAC,YAAD,CADF;EAElB,eAAeA,OAAO,CAAC,cAAD,CAFJ;EAGlB,cAAcA,OAAO,CAAC,aAAD;AAHH,CAApB;AAMA,IAAII,iBAAiB,GAAGH,eAAe,CAAC,MAAD,EAASE,aAAT,CAAvC;;AAEAE,MAAM,CAACC,OAAP,CAAeC,OAAf,GAAyB,SAASA,OAAT,CAAiBC,CAAjB,EAAoB;EAC3C,OAAOT,eAAe,CAACS,CAAD,EAAIL,aAAJ,CAAf,KAAsCM,SAA7C;AACD,CAFD;;AAIAJ,MAAM,CAACC,OAAP,CAAeI,UAAf,GAA4B;EAC1BC,GAAG,EAAE,UAASH,CAAT,EAAY;IACf,IAAII,eAAe,GAAGC,MAAM,CAACL,CAAD,CAAN,CACnBM,IADmB,GAEnBC,WAFmB,EAAtB;;IAIA,IAAIH,eAAe,KAAK,MAAxB,EAAgC;MAC9BR,iBAAiB,CAACY,IAAlB,CAAuB,IAAvB,EAA6B,UAA7B;MACA;IACD;;IACD,IAAIJ,eAAe,KAAK,SAAxB,EAAmC;MACjCR,iBAAiB,CAACY,IAAlB,CAAuB,IAAvB,EAA6B,UAA7B;MACA;IACD;;IACD,IAAIJ,eAAe,KAAK,MAAxB,EAAgC;MAC9B,KAAKK,cAAL,CAAoB,WAApB;MACA,KAAKA,cAAL,CAAoB,aAApB;MACA,KAAKC,WAAL,CAAiB,YAAjB,EAA+BN,eAA/B;MACA;IACD;;IAEDR,iBAAiB,CAACY,IAAlB,CAAuB,IAAvB,EAA6BR,CAA7B;EACD,CAtByB;EAuB1BW,GAAG,EAAEjB,eAAe,CAAC,MAAD,EAASC,aAAT,CAvBM;EAwB1BiB,UAAU,EAAE,IAxBc;EAyB1BC,YAAY,EAAE;AAzBY,CAA5B"},"metadata":{},"sourceType":"script"}