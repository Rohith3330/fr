{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = loadCjsOrMjsDefault;\nexports.supportsESM = void 0;\n\nvar _async = require(\"../../gensync-utils/async\");\n\nfunction _path() {\n  const data = require(\"path\");\n\n  _path = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _url() {\n  const data = require(\"url\");\n\n  _url = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _module() {\n  const data = require(\"module\");\n\n  _module = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _semver() {\n  const data = require(\"semver\");\n\n  _semver = function () {\n    return data;\n  };\n\n  return data;\n}\n\nvar _rewriteStackTrace = require(\"../../errors/rewrite-stack-trace\");\n\nvar _configError = require(\"../../errors/config-error\");\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nlet import_;\n\ntry {\n  import_ = require(\"./import.cjs\");\n} catch (_unused) {}\n\nconst supportsESM = _semver().satisfies(process.versions.node, \"^12.17 || >=13.2\");\n\nexports.supportsESM = supportsESM;\n\nfunction* loadCjsOrMjsDefault(filepath, asyncError) {\n  let fallbackToTranspiledModule = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n  switch (guessJSModuleType(filepath)) {\n    case \"cjs\":\n      return loadCjsDefault(filepath, fallbackToTranspiledModule);\n\n    case \"unknown\":\n      try {\n        return loadCjsDefault(filepath, fallbackToTranspiledModule);\n      } catch (e) {\n        if (e.code !== \"ERR_REQUIRE_ESM\") throw e;\n      }\n\n    case \"mjs\":\n      if (yield* (0, _async.isAsync)()) {\n        return yield* (0, _async.waitFor)(loadMjsDefault(filepath));\n      }\n\n      throw new _configError.default(asyncError, filepath);\n  }\n}\n\nfunction guessJSModuleType(filename) {\n  switch (_path().extname(filename)) {\n    case \".cjs\":\n      return \"cjs\";\n\n    case \".mjs\":\n      return \"mjs\";\n\n    default:\n      return \"unknown\";\n  }\n}\n\nfunction loadCjsDefault(filepath, fallbackToTranspiledModule) {\n  const module = (0, _rewriteStackTrace.endHiddenCallStack)(require)(filepath);\n  return module != null && module.__esModule ? module.default || (fallbackToTranspiledModule ? module : undefined) : module;\n}\n\nfunction loadMjsDefault(_x) {\n  return _loadMjsDefault.apply(this, arguments);\n}\n\nfunction _loadMjsDefault() {\n  _loadMjsDefault = _asyncToGenerator(function* (filepath) {\n    if (!import_) {\n      throw new _configError.default(\"Internal error: Native ECMAScript modules aren't supported\" + \" by this platform.\\n\", filepath);\n    }\n\n    const module = yield (0, _rewriteStackTrace.endHiddenCallStack)(import_)((0, _url().pathToFileURL)(filepath));\n    return module.default;\n  });\n  return _loadMjsDefault.apply(this, arguments);\n}\n\n0 && 0;","map":{"version":3,"mappings":";;;;;;;;AAAA;;AAEA;EAAA;;EAAAA;IAAA;EAAA;;EAAA;AAAA;;AACA;EAAA;;EAAAC;IAAA;EAAA;;EAAA;AAAA;;AACA;EAAA;;EAAAC;IAAA;EAAA;;EAAA;AAAA;;AACA;EAAA;;EAAAC;IAAA;EAAA;;EAAA;AAAA;;AAEA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIA,IAAIC,OAAJ;;AACA,IAAI;EAEFA,OAAO,GAAGC,OAAO,CAAC,cAAD,CAAjBD;AAFF,EAGE,gBAAM,CAAE;;AAEH,MAAME,WAAW,GAAGC,UAAOC,SAAPD,CACzBE,OAAO,CAACC,QAARD,CAAiBE,IADQJ,EAIzB,kBAJyBA,CAApB;;;;AAOQ,UAAUK,mBAAV,CACbC,QADa,EAEbC,UAFa,EAKK;EAAA,IADlBC,0BACkB,uEADoB,KACpB;;EAClB,QAAQC,iBAAiB,CAACH,QAAD,CAAzB;IACE,KAAK,KAAL;MACE,OAAOI,cAAc,CAACJ,QAAD,EAAWE,0BAAX,CAArB;;IACF,KAAK,SAAL;MACE,IAAI;QACF,OAAOE,cAAc,CAACJ,QAAD,EAAWE,0BAAX,CAArB;MADF,EAEE,OAAOG,CAAP,EAAU;QACV,IAAIA,CAAC,CAACC,IAAFD,KAAW,iBAAf,EAAkC,MAAMA,CAAN;MACnC;;IAEH,KAAK,KAAL;MACE,IAAI,OAAO,qBAAX,EAAsB;QACpB,OAAO,OAAO,oBAAQE,cAAc,CAACP,QAAD,CAAtB,CAAd;MACD;;MACD,MAAM,IAAIQ,oBAAJ,CAAgBP,UAAhB,EAA4BD,QAA5B,CAAN;EAdJ;AAgBD;;AAED,SAASG,iBAAT,CAA2BM,QAA3B,EAAwE;EACtE,QAAQC,QAAKC,OAALD,CAAaD,QAAbC,CAAR;IACE,KAAK,MAAL;MACE,OAAO,KAAP;;IACF,KAAK,MAAL;MACE,OAAO,KAAP;;IACF;MACE,OAAO,SAAP;EANJ;AAQD;;AAED,SAASN,cAAT,CAAwBJ,QAAxB,EAA0CE,0BAA1C,EAA+E;EAC7E,MAAMU,MAAM,GAAG,2CAAmBpB,OAAnB,EAA4BQ,QAA5B,CAAf;EACA,OAAOY,MAAM,QAANA,UAAM,CAAEC,UAARD,GAEHA,MAAM,CAACE,OAAPF,KAAmBV,0BAA0B,GAAGU,MAAH,GAAYG,SAAzDH,CAFGA,GAGHA,MAHJ;AAID;;SAEcL,e;;;;;sCAAf,WAA8BP,QAA9B,EAAgD;IAC9C,IAAI,CAACT,OAAL,EAAc;MACZ,MAAM,IAAIiB,oBAAJ,CACJ,+DACE,sBAFE,EAGJR,QAHI,CAAN;IAKD;;IAID,MAAMY,MAAM,SAAS,2CAAmBrB,OAAnB,EAA4B,0BAAcS,QAAd,CAA5B,CAArB;IACA,OAAOY,MAAM,CAACE,OAAd","names":["_path","_url","_module","_semver","import_","require","supportsESM","semver","satisfies","process","versions","node","loadCjsOrMjsDefault","filepath","asyncError","fallbackToTranspiledModule","guessJSModuleType","loadCjsDefault","e","code","loadMjsDefault","ConfigError","filename","path","extname","module","__esModule","default","undefined"],"sources":["C:\\Users\\Rohith\\mern\\frontend\\node_modules\\@babel\\core\\src\\config\\files\\module-types.ts"],"sourcesContent":["import { isAsync, waitFor } from \"../../gensync-utils/async\";\nimport type { Handler } from \"gensync\";\nimport path from \"path\";\nimport { pathToFileURL } from \"url\";\nimport { createRequire } from \"module\";\nimport semver from \"semver\";\n\nimport { endHiddenCallStack } from \"../../errors/rewrite-stack-trace\";\nimport ConfigError from \"../../errors/config-error\";\n\nconst require = createRequire(import.meta.url);\n\nlet import_: ((specifier: string | URL) => any) | undefined;\ntry {\n  // Old Node.js versions don't support import() syntax.\n  import_ = require(\"./import.cjs\");\n} catch {}\n\nexport const supportsESM = semver.satisfies(\n  process.versions.node,\n  // older versions, starting from 10, support the dynamic\n  // import syntax but always return a rejected promise.\n  \"^12.17 || >=13.2\",\n);\n\nexport default function* loadCjsOrMjsDefault(\n  filepath: string,\n  asyncError: string,\n  // TODO(Babel 8): Remove this\n  fallbackToTranspiledModule: boolean = false,\n): Handler<unknown> {\n  switch (guessJSModuleType(filepath)) {\n    case \"cjs\":\n      return loadCjsDefault(filepath, fallbackToTranspiledModule);\n    case \"unknown\":\n      try {\n        return loadCjsDefault(filepath, fallbackToTranspiledModule);\n      } catch (e) {\n        if (e.code !== \"ERR_REQUIRE_ESM\") throw e;\n      }\n    // fall through\n    case \"mjs\":\n      if (yield* isAsync()) {\n        return yield* waitFor(loadMjsDefault(filepath));\n      }\n      throw new ConfigError(asyncError, filepath);\n  }\n}\n\nfunction guessJSModuleType(filename: string): \"cjs\" | \"mjs\" | \"unknown\" {\n  switch (path.extname(filename)) {\n    case \".cjs\":\n      return \"cjs\";\n    case \".mjs\":\n      return \"mjs\";\n    default:\n      return \"unknown\";\n  }\n}\n\nfunction loadCjsDefault(filepath: string, fallbackToTranspiledModule: boolean) {\n  const module = endHiddenCallStack(require)(filepath) as any;\n  return module?.__esModule\n    ? // TODO (Babel 8): Remove \"module\" and \"undefined\" fallback\n      module.default || (fallbackToTranspiledModule ? module : undefined)\n    : module;\n}\n\nasync function loadMjsDefault(filepath: string) {\n  if (!import_) {\n    throw new ConfigError(\n      \"Internal error: Native ECMAScript modules aren't supported\" +\n        \" by this platform.\\n\",\n      filepath,\n    );\n  }\n\n  // import() expects URLs, not file paths.\n  // https://github.com/nodejs/node/issues/31710\n  const module = await endHiddenCallStack(import_)(pathToFileURL(filepath));\n  return module.default;\n}\n"]},"metadata":{},"sourceType":"script"}