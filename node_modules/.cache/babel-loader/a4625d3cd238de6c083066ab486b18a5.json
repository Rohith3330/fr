{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _default;\n\nfunction deepClone(value, cache) {\n  if (value !== null) {\n    if (cache.has(value)) return cache.get(value);\n    let cloned;\n\n    if (Array.isArray(value)) {\n      cloned = new Array(value.length);\n\n      for (let i = 0; i < value.length; i++) {\n        cloned[i] = typeof value[i] !== \"object\" ? value[i] : deepClone(value[i], cache);\n      }\n    } else {\n      cloned = {};\n      const keys = Object.keys(value);\n\n      for (let i = 0; i < keys.length; i++) {\n        const key = keys[i];\n        cloned[key] = typeof value[key] !== \"object\" ? value[key] : deepClone(value[key], cache);\n      }\n    }\n\n    cache.set(value, cloned);\n    return cloned;\n  }\n\n  return value;\n}\n\nfunction _default(value) {\n  if (typeof value !== \"object\") return value;\n  return deepClone(value, new Map());\n}\n\n0 && 0;","map":{"version":3,"mappings":";;;;;;;AACA,SAASA,SAAT,CAAmBC,KAAnB,EAA+BC,KAA/B,EAA0D;EACxD,IAAID,KAAK,KAAK,IAAd,EAAoB;IAClB,IAAIC,KAAK,CAACC,GAAND,CAAUD,KAAVC,CAAJ,EAAsB,OAAOA,KAAK,CAACE,GAANF,CAAUD,KAAVC,CAAP;IACtB,IAAIG,MAAJ;;IACA,IAAIC,KAAK,CAACC,OAAND,CAAcL,KAAdK,CAAJ,EAA0B;MACxBD,MAAM,GAAG,IAAIC,KAAJ,CAAUL,KAAK,CAACO,MAAhB,CAATH;;MACA,KAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGR,KAAK,CAACO,MAA1B,EAAkCC,CAAC,EAAnC,EAAuC;QACrCJ,MAAM,CAACI,CAAD,CAANJ,GACE,OAAOJ,KAAK,CAACQ,CAAD,CAAZ,KAAoB,QAApB,GAA+BR,KAAK,CAACQ,CAAD,CAApC,GAA0CT,SAAS,CAACC,KAAK,CAACQ,CAAD,CAAN,EAAWP,KAAX,CADrDG;MAED;IALH,OAMO;MACLA,MAAM,GAAG,EAATA;MACA,MAAMK,IAAI,GAAGC,MAAM,CAACD,IAAPC,CAAYV,KAAZU,CAAb;;MACA,KAAK,IAAIF,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,IAAI,CAACF,MAAzB,EAAiCC,CAAC,EAAlC,EAAsC;QACpC,MAAMG,GAAG,GAAGF,IAAI,CAACD,CAAD,CAAhB;QACAJ,MAAM,CAACO,GAAD,CAANP,GACE,OAAOJ,KAAK,CAACW,GAAD,CAAZ,KAAsB,QAAtB,GACIX,KAAK,CAACW,GAAD,CADT,GAEIZ,SAAS,CAACC,KAAK,CAACW,GAAD,CAAN,EAAaV,KAAb,CAHfG;MAID;IACF;;IACDH,KAAK,CAACW,GAANX,CAAUD,KAAVC,EAAiBG,MAAjBH;IACA,OAAOG,MAAP;EACD;;EACD,OAAOJ,KAAP;AACD;;AAEc,kBAAaA,KAAb,EAA0B;EACvC,IAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B,OAAOA,KAAP;EAC/B,OAAOD,SAAS,CAACC,KAAD,EAAQ,IAAIa,GAAJ,EAAR,CAAhB;AACD","names":["deepClone","value","cache","has","get","cloned","Array","isArray","length","i","keys","Object","key","set","Map"],"sources":["C:\\Users\\Rohith\\mern\\frontend\\node_modules\\@babel\\core\\src\\transformation\\util\\clone-deep.ts"],"sourcesContent":["//https://github.com/babel/babel/pull/14583#discussion_r882828856\nfunction deepClone(value: any, cache: Map<any, any>): any {\n  if (value !== null) {\n    if (cache.has(value)) return cache.get(value);\n    let cloned: any;\n    if (Array.isArray(value)) {\n      cloned = new Array(value.length);\n      for (let i = 0; i < value.length; i++) {\n        cloned[i] =\n          typeof value[i] !== \"object\" ? value[i] : deepClone(value[i], cache);\n      }\n    } else {\n      cloned = {};\n      const keys = Object.keys(value);\n      for (let i = 0; i < keys.length; i++) {\n        const key = keys[i];\n        cloned[key] =\n          typeof value[key] !== \"object\"\n            ? value[key]\n            : deepClone(value[key], cache);\n      }\n    }\n    cache.set(value, cloned);\n    return cloned;\n  }\n  return value;\n}\n\nexport default function <T>(value: T): T {\n  if (typeof value !== \"object\") return value;\n  return deepClone(value, new Map());\n}\n"]},"metadata":{},"sourceType":"script"}