{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = jestExpect;\n\nvar _expect = _interopRequireDefault(require('expect'));\n\nvar _jestSnapshot = require('jest-snapshot');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/* eslint-disable local/prefer-spread-eventually */\n\n\nfunction jestExpect(config) {\n  global.expect = _expect.default;\n\n  _expect.default.setState({\n    expand: config.expand\n  });\n\n  _expect.default.extend({\n    toMatchInlineSnapshot: _jestSnapshot.toMatchInlineSnapshot,\n    toMatchSnapshot: _jestSnapshot.toMatchSnapshot,\n    toThrowErrorMatchingInlineSnapshot: _jestSnapshot.toThrowErrorMatchingInlineSnapshot,\n    toThrowErrorMatchingSnapshot: _jestSnapshot.toThrowErrorMatchingSnapshot\n  });\n\n  _expect.default.addSnapshotSerializer = _jestSnapshot.addSerializer;\n  const jasmine = global.jasmine;\n  jasmine.anything = _expect.default.anything;\n  jasmine.any = _expect.default.any;\n  jasmine.objectContaining = _expect.default.objectContaining;\n  jasmine.arrayContaining = _expect.default.arrayContaining;\n  jasmine.stringMatching = _expect.default.stringMatching;\n\n  jasmine.addMatchers = jasmineMatchersObject => {\n    const jestMatchersObject = Object.create(null);\n    Object.keys(jasmineMatchersObject).forEach(name => {\n      jestMatchersObject[name] = function () {\n        // use \"expect.extend\" if you need to use equality testers (via this.equal)\n        const result = jasmineMatchersObject[name](null, null); // if there is no 'negativeCompare', both should be handled by `compare`\n\n        const negativeCompare = result.negativeCompare || result.compare;\n\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        return this.isNot ? negativeCompare.apply(null, // @ts-expect-error\n        args) : result.compare.apply(null, // @ts-expect-error\n        args);\n      };\n    });\n\n    _expect.default.extend(jestMatchersObject);\n  };\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","default","jestExpect","_expect","_interopRequireDefault","require","_jestSnapshot","obj","__esModule","config","global","expect","setState","expand","extend","toMatchInlineSnapshot","toMatchSnapshot","toThrowErrorMatchingInlineSnapshot","toThrowErrorMatchingSnapshot","addSnapshotSerializer","addSerializer","jasmine","anything","any","objectContaining","arrayContaining","stringMatching","addMatchers","jasmineMatchersObject","jestMatchersObject","create","keys","forEach","name","result","negativeCompare","compare","args","isNot","apply"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/jest-jasmine2/build/jestExpect.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = jestExpect;\n\nvar _expect = _interopRequireDefault(require('expect'));\n\nvar _jestSnapshot = require('jest-snapshot');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {default: obj};\n}\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/* eslint-disable local/prefer-spread-eventually */\nfunction jestExpect(config) {\n  global.expect = _expect.default;\n\n  _expect.default.setState({\n    expand: config.expand\n  });\n\n  _expect.default.extend({\n    toMatchInlineSnapshot: _jestSnapshot.toMatchInlineSnapshot,\n    toMatchSnapshot: _jestSnapshot.toMatchSnapshot,\n    toThrowErrorMatchingInlineSnapshot:\n      _jestSnapshot.toThrowErrorMatchingInlineSnapshot,\n    toThrowErrorMatchingSnapshot: _jestSnapshot.toThrowErrorMatchingSnapshot\n  });\n\n  _expect.default.addSnapshotSerializer = _jestSnapshot.addSerializer;\n  const jasmine = global.jasmine;\n  jasmine.anything = _expect.default.anything;\n  jasmine.any = _expect.default.any;\n  jasmine.objectContaining = _expect.default.objectContaining;\n  jasmine.arrayContaining = _expect.default.arrayContaining;\n  jasmine.stringMatching = _expect.default.stringMatching;\n\n  jasmine.addMatchers = jasmineMatchersObject => {\n    const jestMatchersObject = Object.create(null);\n    Object.keys(jasmineMatchersObject).forEach(name => {\n      jestMatchersObject[name] = function (...args) {\n        // use \"expect.extend\" if you need to use equality testers (via this.equal)\n        const result = jasmineMatchersObject[name](null, null); // if there is no 'negativeCompare', both should be handled by `compare`\n\n        const negativeCompare = result.negativeCompare || result.compare;\n        return this.isNot\n          ? negativeCompare.apply(\n              null, // @ts-expect-error\n              args\n            )\n          : result.compare.apply(\n              null, // @ts-expect-error\n              args\n            );\n      };\n    });\n\n    _expect.default.extend(jestMatchersObject);\n  };\n}\n"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAC3CC,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,UAAlB;;AAEA,IAAIC,OAAO,GAAGC,sBAAsB,CAACC,OAAO,CAAC,QAAD,CAAR,CAApC;;AAEA,IAAIC,aAAa,GAAGD,OAAO,CAAC,eAAD,CAA3B;;AAEA,SAASD,sBAAT,CAAgCG,GAAhC,EAAqC;EACnC,OAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;IAACN,OAAO,EAAEM;EAAV,CAArC;AACD;AAED;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AACA,SAASL,UAAT,CAAoBO,MAApB,EAA4B;EAC1BC,MAAM,CAACC,MAAP,GAAgBR,OAAO,CAACF,OAAxB;;EAEAE,OAAO,CAACF,OAAR,CAAgBW,QAAhB,CAAyB;IACvBC,MAAM,EAAEJ,MAAM,CAACI;EADQ,CAAzB;;EAIAV,OAAO,CAACF,OAAR,CAAgBa,MAAhB,CAAuB;IACrBC,qBAAqB,EAAET,aAAa,CAACS,qBADhB;IAErBC,eAAe,EAAEV,aAAa,CAACU,eAFV;IAGrBC,kCAAkC,EAChCX,aAAa,CAACW,kCAJK;IAKrBC,4BAA4B,EAAEZ,aAAa,CAACY;EALvB,CAAvB;;EAQAf,OAAO,CAACF,OAAR,CAAgBkB,qBAAhB,GAAwCb,aAAa,CAACc,aAAtD;EACA,MAAMC,OAAO,GAAGX,MAAM,CAACW,OAAvB;EACAA,OAAO,CAACC,QAAR,GAAmBnB,OAAO,CAACF,OAAR,CAAgBqB,QAAnC;EACAD,OAAO,CAACE,GAAR,GAAcpB,OAAO,CAACF,OAAR,CAAgBsB,GAA9B;EACAF,OAAO,CAACG,gBAAR,GAA2BrB,OAAO,CAACF,OAAR,CAAgBuB,gBAA3C;EACAH,OAAO,CAACI,eAAR,GAA0BtB,OAAO,CAACF,OAAR,CAAgBwB,eAA1C;EACAJ,OAAO,CAACK,cAAR,GAAyBvB,OAAO,CAACF,OAAR,CAAgByB,cAAzC;;EAEAL,OAAO,CAACM,WAAR,GAAsBC,qBAAqB,IAAI;IAC7C,MAAMC,kBAAkB,GAAGhC,MAAM,CAACiC,MAAP,CAAc,IAAd,CAA3B;IACAjC,MAAM,CAACkC,IAAP,CAAYH,qBAAZ,EAAmCI,OAAnC,CAA2CC,IAAI,IAAI;MACjDJ,kBAAkB,CAACI,IAAD,CAAlB,GAA2B,YAAmB;QAC5C;QACA,MAAMC,MAAM,GAAGN,qBAAqB,CAACK,IAAD,CAArB,CAA4B,IAA5B,EAAkC,IAAlC,CAAf,CAF4C,CAEY;;QAExD,MAAME,eAAe,GAAGD,MAAM,CAACC,eAAP,IAA0BD,MAAM,CAACE,OAAzD;;QAJ4C,kCAANC,IAAM;UAANA,IAAM;QAAA;;QAK5C,OAAO,KAAKC,KAAL,GACHH,eAAe,CAACI,KAAhB,CACE,IADF,EACQ;QACNF,IAFF,CADG,GAKHH,MAAM,CAACE,OAAP,CAAeG,KAAf,CACE,IADF,EACQ;QACNF,IAFF,CALJ;MASD,CAdD;IAeD,CAhBD;;IAkBAlC,OAAO,CAACF,OAAR,CAAgBa,MAAhB,CAAuBe,kBAAvB;EACD,CArBD;AAsBD"},"metadata":{},"sourceType":"script"}