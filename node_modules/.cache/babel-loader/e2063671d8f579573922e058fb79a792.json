{"ast":null,"code":"/**\n * @fileoverview A rule to disallow calls to the Object constructor\n * @author Matt DuVall <http://www.mattduvall.com/>\n */\n\"use strict\"; //------------------------------------------------------------------------------\n// Requirements\n//------------------------------------------------------------------------------\n\nconst astUtils = require(\"./utils/ast-utils\"); //------------------------------------------------------------------------------\n// Rule Definition\n//------------------------------------------------------------------------------\n\n/** @type {import('../shared/types').Rule} */\n\n\nmodule.exports = {\n  meta: {\n    type: \"suggestion\",\n    docs: {\n      description: \"Disallow `Object` constructors\",\n      recommended: false,\n      url: \"https://eslint.org/docs/rules/no-new-object\"\n    },\n    schema: [],\n    messages: {\n      preferLiteral: \"The object literal notation {} is preferable.\"\n    }\n  },\n\n  create(context) {\n    return {\n      NewExpression(node) {\n        const variable = astUtils.getVariableByName(context.getScope(), node.callee.name);\n\n        if (variable && variable.identifiers.length > 0) {\n          return;\n        }\n\n        if (node.callee.name === \"Object\") {\n          context.report({\n            node,\n            messageId: \"preferLiteral\"\n          });\n        }\n      }\n\n    };\n  }\n\n};","map":{"version":3,"names":["astUtils","require","module","exports","meta","type","docs","description","recommended","url","schema","messages","preferLiteral","create","context","NewExpression","node","variable","getVariableByName","getScope","callee","name","identifiers","length","report","messageId"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/eslint/lib/rules/no-new-object.js"],"sourcesContent":["/**\n * @fileoverview A rule to disallow calls to the Object constructor\n * @author Matt DuVall <http://www.mattduvall.com/>\n */\n\n\"use strict\";\n\n//------------------------------------------------------------------------------\n// Requirements\n//------------------------------------------------------------------------------\n\nconst astUtils = require(\"./utils/ast-utils\");\n\n//------------------------------------------------------------------------------\n// Rule Definition\n//------------------------------------------------------------------------------\n\n/** @type {import('../shared/types').Rule} */\nmodule.exports = {\n    meta: {\n        type: \"suggestion\",\n\n        docs: {\n            description: \"Disallow `Object` constructors\",\n            recommended: false,\n            url: \"https://eslint.org/docs/rules/no-new-object\"\n        },\n\n        schema: [],\n\n        messages: {\n            preferLiteral: \"The object literal notation {} is preferable.\"\n        }\n    },\n\n    create(context) {\n        return {\n            NewExpression(node) {\n                const variable = astUtils.getVariableByName(\n                    context.getScope(),\n                    node.callee.name\n                );\n\n                if (variable && variable.identifiers.length > 0) {\n                    return;\n                }\n\n                if (node.callee.name === \"Object\") {\n                    context.report({\n                        node,\n                        messageId: \"preferLiteral\"\n                    });\n                }\n            }\n        };\n    }\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AAEA,a,CAEA;AACA;AACA;;AAEA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,mBAAD,CAAxB,C,CAEA;AACA;AACA;;AAEA;;;AACAC,MAAM,CAACC,OAAP,GAAiB;EACbC,IAAI,EAAE;IACFC,IAAI,EAAE,YADJ;IAGFC,IAAI,EAAE;MACFC,WAAW,EAAE,gCADX;MAEFC,WAAW,EAAE,KAFX;MAGFC,GAAG,EAAE;IAHH,CAHJ;IASFC,MAAM,EAAE,EATN;IAWFC,QAAQ,EAAE;MACNC,aAAa,EAAE;IADT;EAXR,CADO;;EAiBbC,MAAM,CAACC,OAAD,EAAU;IACZ,OAAO;MACHC,aAAa,CAACC,IAAD,EAAO;QAChB,MAAMC,QAAQ,GAAGjB,QAAQ,CAACkB,iBAAT,CACbJ,OAAO,CAACK,QAAR,EADa,EAEbH,IAAI,CAACI,MAAL,CAAYC,IAFC,CAAjB;;QAKA,IAAIJ,QAAQ,IAAIA,QAAQ,CAACK,WAAT,CAAqBC,MAArB,GAA8B,CAA9C,EAAiD;UAC7C;QACH;;QAED,IAAIP,IAAI,CAACI,MAAL,CAAYC,IAAZ,KAAqB,QAAzB,EAAmC;UAC/BP,OAAO,CAACU,MAAR,CAAe;YACXR,IADW;YAEXS,SAAS,EAAE;UAFA,CAAf;QAIH;MACJ;;IAjBE,CAAP;EAmBH;;AArCY,CAAjB"},"metadata":{},"sourceType":"script"}