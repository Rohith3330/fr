{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _helperPluginUtils = require(\"@babel/helper-plugin-utils\");\n\nvar _helperModuleTransforms = require(\"@babel/helper-module-transforms\");\n\nvar _helperSimpleAccess = require(\"@babel/helper-simple-access\");\n\nvar _core = require(\"@babel/core\");\n\nvar _utils = require(\"babel-plugin-dynamic-import-node/utils\");\n\nvar _default = (0, _helperPluginUtils.declare)((api, options) => {\n  var _api$assumption, _api$assumption2, _api$assumption3;\n\n  api.assertVersion(7);\n  const transformImportCall = (0, _utils.createDynamicImportTransform)(api);\n  const {\n    strictNamespace = false,\n    mjsStrictNamespace = strictNamespace,\n    allowTopLevelThis,\n    strict,\n    strictMode,\n    noInterop,\n    importInterop,\n    lazy = false,\n    allowCommonJSExports = true,\n    loose = false\n  } = options;\n  const constantReexports = (_api$assumption = api.assumption(\"constantReexports\")) != null ? _api$assumption : loose;\n  const enumerableModuleMeta = (_api$assumption2 = api.assumption(\"enumerableModuleMeta\")) != null ? _api$assumption2 : loose;\n  const noIncompleteNsImportDetection = (_api$assumption3 = api.assumption(\"noIncompleteNsImportDetection\")) != null ? _api$assumption3 : false;\n\n  if (typeof lazy !== \"boolean\" && typeof lazy !== \"function\" && (!Array.isArray(lazy) || !lazy.every(item => typeof item === \"string\"))) {\n    throw new Error(`.lazy must be a boolean, array of strings, or a function`);\n  }\n\n  if (typeof strictNamespace !== \"boolean\") {\n    throw new Error(`.strictNamespace must be a boolean, or undefined`);\n  }\n\n  if (typeof mjsStrictNamespace !== \"boolean\") {\n    throw new Error(`.mjsStrictNamespace must be a boolean, or undefined`);\n  }\n\n  const getAssertion = localName => _core.template.expression.ast`\n    (function(){\n      throw new Error(\n        \"The CommonJS '\" + \"${localName}\" + \"' variable is not available in ES6 modules.\" +\n        \"Consider setting setting sourceType:script or sourceType:unambiguous in your \" +\n        \"Babel config for this file.\");\n    })()\n  `;\n\n  const moduleExportsVisitor = {\n    ReferencedIdentifier(path) {\n      const localName = path.node.name;\n      if (localName !== \"module\" && localName !== \"exports\") return;\n      const localBinding = path.scope.getBinding(localName);\n      const rootBinding = this.scope.getBinding(localName);\n\n      if (rootBinding !== localBinding || path.parentPath.isObjectProperty({\n        value: path.node\n      }) && path.parentPath.parentPath.isObjectPattern() || path.parentPath.isAssignmentExpression({\n        left: path.node\n      }) || path.isAssignmentExpression({\n        left: path.node\n      })) {\n        return;\n      }\n\n      path.replaceWith(getAssertion(localName));\n    },\n\n    UpdateExpression(path) {\n      const arg = path.get(\"argument\");\n      if (!arg.isIdentifier()) return;\n      const localName = arg.node.name;\n      if (localName !== \"module\" && localName !== \"exports\") return;\n      const localBinding = path.scope.getBinding(localName);\n      const rootBinding = this.scope.getBinding(localName);\n      if (rootBinding !== localBinding) return;\n      path.replaceWith(_core.types.assignmentExpression(path.node.operator[0] + \"=\", arg.node, getAssertion(localName)));\n    },\n\n    AssignmentExpression(path) {\n      const left = path.get(\"left\");\n\n      if (left.isIdentifier()) {\n        const localName = left.node.name;\n        if (localName !== \"module\" && localName !== \"exports\") return;\n        const localBinding = path.scope.getBinding(localName);\n        const rootBinding = this.scope.getBinding(localName);\n        if (rootBinding !== localBinding) return;\n        const right = path.get(\"right\");\n        right.replaceWith(_core.types.sequenceExpression([right.node, getAssertion(localName)]));\n      } else if (left.isPattern()) {\n        const ids = left.getOuterBindingIdentifiers();\n        const localName = Object.keys(ids).filter(localName => {\n          if (localName !== \"module\" && localName !== \"exports\") return false;\n          return this.scope.getBinding(localName) === path.scope.getBinding(localName);\n        })[0];\n\n        if (localName) {\n          const right = path.get(\"right\");\n          right.replaceWith(_core.types.sequenceExpression([right.node, getAssertion(localName)]));\n        }\n      }\n    }\n\n  };\n  return {\n    name: \"transform-modules-commonjs\",\n\n    pre() {\n      this.file.set(\"@babel/plugin-transform-modules-*\", \"commonjs\");\n    },\n\n    visitor: {\n      CallExpression(path) {\n        if (!this.file.has(\"@babel/plugin-proposal-dynamic-import\")) return;\n        if (!path.get(\"callee\").isImport()) return;\n        let {\n          scope\n        } = path;\n\n        do {\n          scope.rename(\"require\");\n        } while (scope = scope.parent);\n\n        transformImportCall(this, path.get(\"callee\"));\n      },\n\n      Program: {\n        exit(path, state) {\n          if (!(0, _helperModuleTransforms.isModule)(path)) return;\n          path.scope.rename(\"exports\");\n          path.scope.rename(\"module\");\n          path.scope.rename(\"require\");\n          path.scope.rename(\"__filename\");\n          path.scope.rename(\"__dirname\");\n\n          if (!allowCommonJSExports) {\n            (0, _helperSimpleAccess.default)(path, new Set([\"module\", \"exports\"]), false);\n            path.traverse(moduleExportsVisitor, {\n              scope: path.scope\n            });\n          }\n\n          let moduleName = (0, _helperModuleTransforms.getModuleName)(this.file.opts, options);\n          if (moduleName) moduleName = _core.types.stringLiteral(moduleName);\n          const {\n            meta,\n            headers\n          } = (0, _helperModuleTransforms.rewriteModuleStatementsAndPrepareHeader)(path, {\n            exportName: \"exports\",\n            constantReexports,\n            enumerableModuleMeta,\n            strict,\n            strictMode,\n            allowTopLevelThis,\n            noInterop,\n            importInterop,\n            lazy,\n            esNamespaceOnly: typeof state.filename === \"string\" && /\\.mjs$/.test(state.filename) ? mjsStrictNamespace : strictNamespace,\n            noIncompleteNsImportDetection,\n            filename: this.file.opts.filename\n          });\n\n          for (const [source, metadata] of meta.source) {\n            const loadExpr = _core.types.callExpression(_core.types.identifier(\"require\"), [_core.types.stringLiteral(source)]);\n\n            let header;\n\n            if ((0, _helperModuleTransforms.isSideEffectImport)(metadata)) {\n              if (metadata.lazy) throw new Error(\"Assertion failure\");\n              header = _core.types.expressionStatement(loadExpr);\n            } else {\n              const init = (0, _helperModuleTransforms.wrapInterop)(path, loadExpr, metadata.interop) || loadExpr;\n\n              if (metadata.lazy) {\n                header = _core.template.statement.ast`\n                  function ${metadata.name}() {\n                    const data = ${init};\n                    ${metadata.name} = function(){ return data; };\n                    return data;\n                  }\n                `;\n              } else {\n                header = _core.template.statement.ast`\n                  var ${metadata.name} = ${init};\n                `;\n              }\n            }\n\n            header.loc = metadata.loc;\n            headers.push(header);\n            headers.push(...(0, _helperModuleTransforms.buildNamespaceInitStatements)(meta, metadata, constantReexports));\n          }\n\n          (0, _helperModuleTransforms.ensureStatementsHoisted)(headers);\n          path.unshiftContainer(\"body\", headers);\n          path.get(\"body\").forEach(path => {\n            if (headers.indexOf(path.node) === -1) return;\n\n            if (path.isVariableDeclaration()) {\n              path.scope.registerDeclaration(path);\n            }\n          });\n        }\n\n      }\n    }\n  };\n});\n\nexports.default = _default;","map":{"version":3,"names":["Object","defineProperty","exports","value","default","_helperPluginUtils","require","_helperModuleTransforms","_helperSimpleAccess","_core","_utils","_default","declare","api","options","_api$assumption","_api$assumption2","_api$assumption3","assertVersion","transformImportCall","createDynamicImportTransform","strictNamespace","mjsStrictNamespace","allowTopLevelThis","strict","strictMode","noInterop","importInterop","lazy","allowCommonJSExports","loose","constantReexports","assumption","enumerableModuleMeta","noIncompleteNsImportDetection","Array","isArray","every","item","Error","getAssertion","localName","template","expression","ast","moduleExportsVisitor","ReferencedIdentifier","path","node","name","localBinding","scope","getBinding","rootBinding","parentPath","isObjectProperty","isObjectPattern","isAssignmentExpression","left","replaceWith","UpdateExpression","arg","get","isIdentifier","types","assignmentExpression","operator","AssignmentExpression","right","sequenceExpression","isPattern","ids","getOuterBindingIdentifiers","keys","filter","pre","file","set","visitor","CallExpression","has","isImport","rename","parent","Program","exit","state","isModule","Set","traverse","moduleName","getModuleName","opts","stringLiteral","meta","headers","rewriteModuleStatementsAndPrepareHeader","exportName","esNamespaceOnly","filename","test","source","metadata","loadExpr","callExpression","identifier","header","isSideEffectImport","expressionStatement","init","wrapInterop","interop","statement","loc","push","buildNamespaceInitStatements","ensureStatementsHoisted","unshiftContainer","forEach","indexOf","isVariableDeclaration","registerDeclaration"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/@babel/plugin-transform-modules-commonjs/lib/index.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _helperPluginUtils = require(\"@babel/helper-plugin-utils\");\n\nvar _helperModuleTransforms = require(\"@babel/helper-module-transforms\");\n\nvar _helperSimpleAccess = require(\"@babel/helper-simple-access\");\n\nvar _core = require(\"@babel/core\");\n\nvar _utils = require(\"babel-plugin-dynamic-import-node/utils\");\n\nvar _default = (0, _helperPluginUtils.declare)((api, options) => {\n  var _api$assumption, _api$assumption2, _api$assumption3;\n\n  api.assertVersion(7);\n  const transformImportCall = (0, _utils.createDynamicImportTransform)(api);\n  const {\n    strictNamespace = false,\n    mjsStrictNamespace = strictNamespace,\n    allowTopLevelThis,\n    strict,\n    strictMode,\n    noInterop,\n    importInterop,\n    lazy = false,\n    allowCommonJSExports = true,\n    loose = false\n  } = options;\n  const constantReexports = (_api$assumption = api.assumption(\"constantReexports\")) != null ? _api$assumption : loose;\n  const enumerableModuleMeta = (_api$assumption2 = api.assumption(\"enumerableModuleMeta\")) != null ? _api$assumption2 : loose;\n  const noIncompleteNsImportDetection = (_api$assumption3 = api.assumption(\"noIncompleteNsImportDetection\")) != null ? _api$assumption3 : false;\n\n  if (typeof lazy !== \"boolean\" && typeof lazy !== \"function\" && (!Array.isArray(lazy) || !lazy.every(item => typeof item === \"string\"))) {\n    throw new Error(`.lazy must be a boolean, array of strings, or a function`);\n  }\n\n  if (typeof strictNamespace !== \"boolean\") {\n    throw new Error(`.strictNamespace must be a boolean, or undefined`);\n  }\n\n  if (typeof mjsStrictNamespace !== \"boolean\") {\n    throw new Error(`.mjsStrictNamespace must be a boolean, or undefined`);\n  }\n\n  const getAssertion = localName => _core.template.expression.ast`\n    (function(){\n      throw new Error(\n        \"The CommonJS '\" + \"${localName}\" + \"' variable is not available in ES6 modules.\" +\n        \"Consider setting setting sourceType:script or sourceType:unambiguous in your \" +\n        \"Babel config for this file.\");\n    })()\n  `;\n\n  const moduleExportsVisitor = {\n    ReferencedIdentifier(path) {\n      const localName = path.node.name;\n      if (localName !== \"module\" && localName !== \"exports\") return;\n      const localBinding = path.scope.getBinding(localName);\n      const rootBinding = this.scope.getBinding(localName);\n\n      if (rootBinding !== localBinding || path.parentPath.isObjectProperty({\n        value: path.node\n      }) && path.parentPath.parentPath.isObjectPattern() || path.parentPath.isAssignmentExpression({\n        left: path.node\n      }) || path.isAssignmentExpression({\n        left: path.node\n      })) {\n        return;\n      }\n\n      path.replaceWith(getAssertion(localName));\n    },\n\n    UpdateExpression(path) {\n      const arg = path.get(\"argument\");\n      if (!arg.isIdentifier()) return;\n      const localName = arg.node.name;\n      if (localName !== \"module\" && localName !== \"exports\") return;\n      const localBinding = path.scope.getBinding(localName);\n      const rootBinding = this.scope.getBinding(localName);\n      if (rootBinding !== localBinding) return;\n      path.replaceWith(_core.types.assignmentExpression(path.node.operator[0] + \"=\", arg.node, getAssertion(localName)));\n    },\n\n    AssignmentExpression(path) {\n      const left = path.get(\"left\");\n\n      if (left.isIdentifier()) {\n        const localName = left.node.name;\n        if (localName !== \"module\" && localName !== \"exports\") return;\n        const localBinding = path.scope.getBinding(localName);\n        const rootBinding = this.scope.getBinding(localName);\n        if (rootBinding !== localBinding) return;\n        const right = path.get(\"right\");\n        right.replaceWith(_core.types.sequenceExpression([right.node, getAssertion(localName)]));\n      } else if (left.isPattern()) {\n        const ids = left.getOuterBindingIdentifiers();\n        const localName = Object.keys(ids).filter(localName => {\n          if (localName !== \"module\" && localName !== \"exports\") return false;\n          return this.scope.getBinding(localName) === path.scope.getBinding(localName);\n        })[0];\n\n        if (localName) {\n          const right = path.get(\"right\");\n          right.replaceWith(_core.types.sequenceExpression([right.node, getAssertion(localName)]));\n        }\n      }\n    }\n\n  };\n  return {\n    name: \"transform-modules-commonjs\",\n\n    pre() {\n      this.file.set(\"@babel/plugin-transform-modules-*\", \"commonjs\");\n    },\n\n    visitor: {\n      CallExpression(path) {\n        if (!this.file.has(\"@babel/plugin-proposal-dynamic-import\")) return;\n        if (!path.get(\"callee\").isImport()) return;\n        let {\n          scope\n        } = path;\n\n        do {\n          scope.rename(\"require\");\n        } while (scope = scope.parent);\n\n        transformImportCall(this, path.get(\"callee\"));\n      },\n\n      Program: {\n        exit(path, state) {\n          if (!(0, _helperModuleTransforms.isModule)(path)) return;\n          path.scope.rename(\"exports\");\n          path.scope.rename(\"module\");\n          path.scope.rename(\"require\");\n          path.scope.rename(\"__filename\");\n          path.scope.rename(\"__dirname\");\n\n          if (!allowCommonJSExports) {\n            (0, _helperSimpleAccess.default)(path, new Set([\"module\", \"exports\"]), false);\n            path.traverse(moduleExportsVisitor, {\n              scope: path.scope\n            });\n          }\n\n          let moduleName = (0, _helperModuleTransforms.getModuleName)(this.file.opts, options);\n          if (moduleName) moduleName = _core.types.stringLiteral(moduleName);\n          const {\n            meta,\n            headers\n          } = (0, _helperModuleTransforms.rewriteModuleStatementsAndPrepareHeader)(path, {\n            exportName: \"exports\",\n            constantReexports,\n            enumerableModuleMeta,\n            strict,\n            strictMode,\n            allowTopLevelThis,\n            noInterop,\n            importInterop,\n            lazy,\n            esNamespaceOnly: typeof state.filename === \"string\" && /\\.mjs$/.test(state.filename) ? mjsStrictNamespace : strictNamespace,\n            noIncompleteNsImportDetection,\n            filename: this.file.opts.filename\n          });\n\n          for (const [source, metadata] of meta.source) {\n            const loadExpr = _core.types.callExpression(_core.types.identifier(\"require\"), [_core.types.stringLiteral(source)]);\n\n            let header;\n\n            if ((0, _helperModuleTransforms.isSideEffectImport)(metadata)) {\n              if (metadata.lazy) throw new Error(\"Assertion failure\");\n              header = _core.types.expressionStatement(loadExpr);\n            } else {\n              const init = (0, _helperModuleTransforms.wrapInterop)(path, loadExpr, metadata.interop) || loadExpr;\n\n              if (metadata.lazy) {\n                header = _core.template.statement.ast`\n                  function ${metadata.name}() {\n                    const data = ${init};\n                    ${metadata.name} = function(){ return data; };\n                    return data;\n                  }\n                `;\n              } else {\n                header = _core.template.statement.ast`\n                  var ${metadata.name} = ${init};\n                `;\n              }\n            }\n\n            header.loc = metadata.loc;\n            headers.push(header);\n            headers.push(...(0, _helperModuleTransforms.buildNamespaceInitStatements)(meta, metadata, constantReexports));\n          }\n\n          (0, _helperModuleTransforms.ensureStatementsHoisted)(headers);\n          path.unshiftContainer(\"body\", headers);\n          path.get(\"body\").forEach(path => {\n            if (headers.indexOf(path.node) === -1) return;\n\n            if (path.isVariableDeclaration()) {\n              path.scope.registerDeclaration(path);\n            }\n          });\n        }\n\n      }\n    }\n  };\n});\n\nexports.default = _default;"],"mappings":"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"},"metadata":{},"sourceType":"script"}