{"ast":null,"code":"'use strict';\n\nvar test = require('tape');\n\nvar inspect = require('object-inspect');\n\nvar is = require('object-is');\n\nvar forEach = require('for-each');\n\nvar hasSymbols = require('has-symbols')();\n\nvar hasBigInts = require('has-bigints')();\n\nvar unboxPrimitive = require('..');\n\nvar debug = function (v, m) {\n  return inspect(v) + ' ' + m;\n};\n\ntest('primitives', function (t) {\n  var primitives = [true, false, '', 'foo', 42, NaN, Infinity, 0];\n\n  if (hasSymbols) {\n    primitives.push(Symbol(), Symbol.iterator, Symbol('f'));\n  }\n\n  if (hasBigInts) {\n    primitives.push(BigInt(42), BigInt(0));\n  }\n\n  forEach(primitives, function (primitive) {\n    var obj = Object(primitive);\n    t.ok(is(unboxPrimitive(obj), primitive), debug(obj, 'unboxes to ' + inspect(primitive)));\n  });\n  t.end();\n});\ntest('objects', function (t) {\n  var objects = [{}, [], function () {}, /a/g, new Date()];\n  forEach(objects, function (object) {\n    t['throws'](function () {\n      unboxPrimitive(object);\n    }, TypeError, debug(object, 'is not a primitive'));\n  });\n  t.end();\n});","map":{"version":3,"names":["test","require","inspect","is","forEach","hasSymbols","hasBigInts","unboxPrimitive","debug","v","m","t","primitives","NaN","Infinity","push","Symbol","iterator","BigInt","primitive","obj","Object","ok","end","objects","Date","object","TypeError"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/unbox-primitive/test/index.js"],"sourcesContent":["'use strict';\n\nvar test = require('tape');\nvar inspect = require('object-inspect');\nvar is = require('object-is');\nvar forEach = require('for-each');\nvar hasSymbols = require('has-symbols')();\nvar hasBigInts = require('has-bigints')();\n\nvar unboxPrimitive = require('..');\n\nvar debug = function (v, m) { return inspect(v) + ' ' + m; };\n\ntest('primitives', function (t) {\n\tvar primitives = [\n\t\ttrue,\n\t\tfalse,\n\t\t'',\n\t\t'foo',\n\t\t42,\n\t\tNaN,\n\t\tInfinity,\n\t\t0\n\t];\n\tif (hasSymbols) {\n\t\tprimitives.push(Symbol(), Symbol.iterator, Symbol('f'));\n\t}\n\tif (hasBigInts) {\n\t\tprimitives.push(BigInt(42), BigInt(0));\n\t}\n\tforEach(primitives, function (primitive) {\n\t\tvar obj = Object(primitive);\n\t\tt.ok(\n\t\t\tis(unboxPrimitive(obj), primitive),\n\t\t\tdebug(obj, 'unboxes to ' + inspect(primitive))\n\t\t);\n\t});\n\n\tt.end();\n});\n\ntest('objects', function (t) {\n\tvar objects = [\n\t\t{},\n\t\t[],\n\t\tfunction () {},\n\t\t/a/g,\n\t\tnew Date()\n\t];\n\tforEach(objects, function (object) {\n\t\tt['throws'](\n\t\t\tfunction () { unboxPrimitive(object); },\n\t\t\tTypeError,\n\t\t\tdebug(object, 'is not a primitive')\n\t\t);\n\t});\n\n\tt.end();\n});\n"],"mappings":"AAAA;;AAEA,IAAIA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAAlB;;AACA,IAAIC,OAAO,GAAGD,OAAO,CAAC,gBAAD,CAArB;;AACA,IAAIE,EAAE,GAAGF,OAAO,CAAC,WAAD,CAAhB;;AACA,IAAIG,OAAO,GAAGH,OAAO,CAAC,UAAD,CAArB;;AACA,IAAII,UAAU,GAAGJ,OAAO,CAAC,aAAD,CAAP,EAAjB;;AACA,IAAIK,UAAU,GAAGL,OAAO,CAAC,aAAD,CAAP,EAAjB;;AAEA,IAAIM,cAAc,GAAGN,OAAO,CAAC,IAAD,CAA5B;;AAEA,IAAIO,KAAK,GAAG,UAAUC,CAAV,EAAaC,CAAb,EAAgB;EAAE,OAAOR,OAAO,CAACO,CAAD,CAAP,GAAa,GAAb,GAAmBC,CAA1B;AAA8B,CAA5D;;AAEAV,IAAI,CAAC,YAAD,EAAe,UAAUW,CAAV,EAAa;EAC/B,IAAIC,UAAU,GAAG,CAChB,IADgB,EAEhB,KAFgB,EAGhB,EAHgB,EAIhB,KAJgB,EAKhB,EALgB,EAMhBC,GANgB,EAOhBC,QAPgB,EAQhB,CARgB,CAAjB;;EAUA,IAAIT,UAAJ,EAAgB;IACfO,UAAU,CAACG,IAAX,CAAgBC,MAAM,EAAtB,EAA0BA,MAAM,CAACC,QAAjC,EAA2CD,MAAM,CAAC,GAAD,CAAjD;EACA;;EACD,IAAIV,UAAJ,EAAgB;IACfM,UAAU,CAACG,IAAX,CAAgBG,MAAM,CAAC,EAAD,CAAtB,EAA4BA,MAAM,CAAC,CAAD,CAAlC;EACA;;EACDd,OAAO,CAACQ,UAAD,EAAa,UAAUO,SAAV,EAAqB;IACxC,IAAIC,GAAG,GAAGC,MAAM,CAACF,SAAD,CAAhB;IACAR,CAAC,CAACW,EAAF,CACCnB,EAAE,CAACI,cAAc,CAACa,GAAD,CAAf,EAAsBD,SAAtB,CADH,EAECX,KAAK,CAACY,GAAD,EAAM,gBAAgBlB,OAAO,CAACiB,SAAD,CAA7B,CAFN;EAIA,CANM,CAAP;EAQAR,CAAC,CAACY,GAAF;AACA,CA1BG,CAAJ;AA4BAvB,IAAI,CAAC,SAAD,EAAY,UAAUW,CAAV,EAAa;EAC5B,IAAIa,OAAO,GAAG,CACb,EADa,EAEb,EAFa,EAGb,YAAY,CAAE,CAHD,EAIb,IAJa,EAKb,IAAIC,IAAJ,EALa,CAAd;EAOArB,OAAO,CAACoB,OAAD,EAAU,UAAUE,MAAV,EAAkB;IAClCf,CAAC,CAAC,QAAD,CAAD,CACC,YAAY;MAAEJ,cAAc,CAACmB,MAAD,CAAd;IAAyB,CADxC,EAECC,SAFD,EAGCnB,KAAK,CAACkB,MAAD,EAAS,oBAAT,CAHN;EAKA,CANM,CAAP;EAQAf,CAAC,CAACY,GAAF;AACA,CAjBG,CAAJ"},"metadata":{},"sourceType":"script"}