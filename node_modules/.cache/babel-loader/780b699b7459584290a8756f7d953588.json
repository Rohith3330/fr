{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst utils_1 = require(\"@typescript-eslint/utils\");\n\nconst util = __importStar(require(\"../util\"));\n\nconst getESLintCoreRule_1 = require(\"../util/getESLintCoreRule\");\n\nconst baseRule = (0, getESLintCoreRule_1.getESLintCoreRule)('no-dupe-class-members');\nexports.default = util.createRule({\n  name: 'no-dupe-class-members',\n  meta: {\n    type: 'problem',\n    docs: {\n      description: 'Disallow duplicate class members',\n      recommended: false,\n      extendsBaseRule: true\n    },\n    hasSuggestions: baseRule.meta.hasSuggestions,\n    schema: baseRule.meta.schema,\n    messages: baseRule.meta.messages\n  },\n  defaultOptions: [],\n\n  create(context) {\n    const rules = baseRule.create(context);\n\n    function wrapMemberDefinitionListener(coreListener) {\n      return node => {\n        if (node.computed) {\n          return;\n        }\n\n        if (node.value && node.value.type === utils_1.AST_NODE_TYPES.TSEmptyBodyFunctionExpression) {\n          return;\n        }\n\n        return coreListener(node);\n      };\n    }\n\n    return Object.assign(Object.assign(Object.assign({}, rules), rules.MethodDefinition ? {\n      MethodDefinition: wrapMemberDefinitionListener(rules.MethodDefinition)\n    } : {}), rules['MethodDefinition, PropertyDefinition'] ? {\n      'MethodDefinition, PropertyDefinition': wrapMemberDefinitionListener(rules['MethodDefinition, PropertyDefinition'])\n    } : {});\n  }\n\n});","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;;AAEA;;AACA;;AAEA,MAAMA,QAAQ,GAAG,2CAAkB,uBAAlB,CAAjB;AAKAC,kBAAeC,IAAI,CAACC,UAAL,CAAqC;EAClDC,IAAI,EAAE,uBAD4C;EAElDC,IAAI,EAAE;IACJC,IAAI,EAAE,SADF;IAEJC,IAAI,EAAE;MACJC,WAAW,EAAE,kCADT;MAEJC,WAAW,EAAE,KAFT;MAGJC,eAAe,EAAE;IAHb,CAFF;IAOJC,cAAc,EAAEX,QAAQ,CAACK,IAAT,CAAcM,cAP1B;IAQJC,MAAM,EAAEZ,QAAQ,CAACK,IAAT,CAAcO,MARlB;IASJC,QAAQ,EAAEb,QAAQ,CAACK,IAAT,CAAcQ;EATpB,CAF4C;EAalDC,cAAc,EAAE,EAbkC;;EAclDC,MAAM,CAACC,OAAD,EAAQ;IACZ,MAAMC,KAAK,GAAGjB,QAAQ,CAACe,MAAT,CAAgBC,OAAhB,CAAd;;IAEA,SAASE,4BAAT,CAEEC,YAFF,EAEiC;MAC/B,OAAQC,IAAD,IAAkB;QACvB,IAAIA,IAAI,CAACC,QAAT,EAAmB;UACjB;QACD;;QAED,IACED,IAAI,CAACE,KAAL,IACAF,IAAI,CAACE,KAAL,CAAWhB,IAAX,KAAoBiB,uBAAeC,6BAFrC,EAGE;UACA;QACD;;QAED,OAAOL,YAAY,CAACC,IAAD,CAAnB;MACD,CAbD;IAcD;;IAED,qDACKH,KADL,GAGMA,KAAK,CAACQ,gBAAN,GACA;MACEA,gBAAgB,EAAEP,4BAA4B,CAC5CD,KAAK,CAACQ,gBADsC;IADhD,CADA,GAMA,EATN,GAWMR,KAAK,CAAC,sCAAD,CAAL,GACA;MACE,wCACEC,4BAA4B,CAC1BD,KAAK,CAAC,sCAAD,CADqB;IAFhC,CADA,GAOA,EAlBN;EAoBD;;AAxDiD,CAArC,CAAf","names":["baseRule","exports","util","createRule","name","meta","type","docs","description","recommended","extendsBaseRule","hasSuggestions","schema","messages","defaultOptions","create","context","rules","wrapMemberDefinitionListener","coreListener","node","computed","value","utils_1","TSEmptyBodyFunctionExpression","MethodDefinition"],"sources":["../../src/rules/no-dupe-class-members.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}