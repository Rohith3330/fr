{"ast":null,"code":"'use strict';\n\nvar inspect = require('../');\n\nvar test = require('tape');\n\nvar hasToStringTag = require('has-tostringtag/shams')();\n\ntest('bigint', {\n  skip: typeof BigInt === 'undefined'\n}, function (t) {\n  t.test('primitives', function (st) {\n    st.plan(3);\n    st.equal(inspect(BigInt(-256)), '-256n');\n    st.equal(inspect(BigInt(0)), '0n');\n    st.equal(inspect(BigInt(256)), '256n');\n  });\n  t.test('objects', function (st) {\n    st.plan(3);\n    st.equal(inspect(Object(BigInt(-256))), 'Object(-256n)');\n    st.equal(inspect(Object(BigInt(0))), 'Object(0n)');\n    st.equal(inspect(Object(BigInt(256))), 'Object(256n)');\n  });\n  t.test('syntactic primitives', function (st) {\n    st.plan(3);\n    /* eslint-disable no-new-func */\n\n    st.equal(inspect(Function('return -256n')()), '-256n');\n    st.equal(inspect(Function('return 0n')()), '0n');\n    st.equal(inspect(Function('return 256n')()), '256n');\n  });\n  t.test('toStringTag', {\n    skip: !hasToStringTag\n  }, function (st) {\n    st.plan(1);\n    var faker = {};\n    faker[Symbol.toStringTag] = 'BigInt';\n    st.equal(inspect(faker), '{ [Symbol(Symbol.toStringTag)]: \\'BigInt\\' }', 'object lying about being a BigInt inspects as an object');\n  });\n  t.test('numericSeparator', function (st) {\n    st.equal(inspect(BigInt(0), {\n      numericSeparator: false\n    }), '0n', '0n, numericSeparator false');\n    st.equal(inspect(BigInt(0), {\n      numericSeparator: true\n    }), '0n', '0n, numericSeparator true');\n    st.equal(inspect(BigInt(1234), {\n      numericSeparator: false\n    }), '1234n', '1234n, numericSeparator false');\n    st.equal(inspect(BigInt(1234), {\n      numericSeparator: true\n    }), '1_234n', '1234n, numericSeparator true');\n    st.equal(inspect(BigInt(-1234), {\n      numericSeparator: false\n    }), '-1234n', '1234n, numericSeparator false');\n    st.equal(inspect(BigInt(-1234), {\n      numericSeparator: true\n    }), '-1_234n', '1234n, numericSeparator true');\n    st.end();\n  });\n  t.end();\n});","map":{"version":3,"names":["inspect","require","test","hasToStringTag","skip","BigInt","t","st","plan","equal","Object","Function","faker","Symbol","toStringTag","numericSeparator","end"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/object-inspect/test/bigint.js"],"sourcesContent":["'use strict';\n\nvar inspect = require('../');\nvar test = require('tape');\nvar hasToStringTag = require('has-tostringtag/shams')();\n\ntest('bigint', { skip: typeof BigInt === 'undefined' }, function (t) {\n    t.test('primitives', function (st) {\n        st.plan(3);\n\n        st.equal(inspect(BigInt(-256)), '-256n');\n        st.equal(inspect(BigInt(0)), '0n');\n        st.equal(inspect(BigInt(256)), '256n');\n    });\n\n    t.test('objects', function (st) {\n        st.plan(3);\n\n        st.equal(inspect(Object(BigInt(-256))), 'Object(-256n)');\n        st.equal(inspect(Object(BigInt(0))), 'Object(0n)');\n        st.equal(inspect(Object(BigInt(256))), 'Object(256n)');\n    });\n\n    t.test('syntactic primitives', function (st) {\n        st.plan(3);\n\n        /* eslint-disable no-new-func */\n        st.equal(inspect(Function('return -256n')()), '-256n');\n        st.equal(inspect(Function('return 0n')()), '0n');\n        st.equal(inspect(Function('return 256n')()), '256n');\n    });\n\n    t.test('toStringTag', { skip: !hasToStringTag }, function (st) {\n        st.plan(1);\n\n        var faker = {};\n        faker[Symbol.toStringTag] = 'BigInt';\n        st.equal(\n            inspect(faker),\n            '{ [Symbol(Symbol.toStringTag)]: \\'BigInt\\' }',\n            'object lying about being a BigInt inspects as an object'\n        );\n    });\n\n    t.test('numericSeparator', function (st) {\n        st.equal(inspect(BigInt(0), { numericSeparator: false }), '0n', '0n, numericSeparator false');\n        st.equal(inspect(BigInt(0), { numericSeparator: true }), '0n', '0n, numericSeparator true');\n\n        st.equal(inspect(BigInt(1234), { numericSeparator: false }), '1234n', '1234n, numericSeparator false');\n        st.equal(inspect(BigInt(1234), { numericSeparator: true }), '1_234n', '1234n, numericSeparator true');\n        st.equal(inspect(BigInt(-1234), { numericSeparator: false }), '-1234n', '1234n, numericSeparator false');\n        st.equal(inspect(BigInt(-1234), { numericSeparator: true }), '-1_234n', '1234n, numericSeparator true');\n\n        st.end();\n    });\n\n    t.end();\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}