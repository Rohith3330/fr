{"ast":null,"code":"// remove useless universal selector\nmodule.exports = function cleanTypeSelector(node, item, list) {\n  var name = item.data.name; // check it's a non-namespaced universal selector\n\n  if (name !== '*') {\n    return;\n  } // remove when universal selector before other selectors\n\n\n  var nextType = item.next && item.next.data.type;\n\n  if (nextType === 'IdSelector' || nextType === 'ClassSelector' || nextType === 'AttributeSelector' || nextType === 'PseudoClassSelector' || nextType === 'PseudoElementSelector') {\n    list.remove(item);\n  }\n};","map":{"version":3,"names":["module","exports","cleanTypeSelector","node","item","list","name","data","nextType","next","type","remove"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/csso/lib/clean/TypeSelector.js"],"sourcesContent":["// remove useless universal selector\nmodule.exports = function cleanTypeSelector(node, item, list) {\n    var name = item.data.name;\n\n    // check it's a non-namespaced universal selector\n    if (name !== '*') {\n        return;\n    }\n\n    // remove when universal selector before other selectors\n    var nextType = item.next && item.next.data.type;\n    if (nextType === 'IdSelector' ||\n        nextType === 'ClassSelector' ||\n        nextType === 'AttributeSelector' ||\n        nextType === 'PseudoClassSelector' ||\n        nextType === 'PseudoElementSelector') {\n        list.remove(item);\n    }\n};\n"],"mappings":"AAAA;AACAA,MAAM,CAACC,OAAP,GAAiB,SAASC,iBAAT,CAA2BC,IAA3B,EAAiCC,IAAjC,EAAuCC,IAAvC,EAA6C;EAC1D,IAAIC,IAAI,GAAGF,IAAI,CAACG,IAAL,CAAUD,IAArB,CAD0D,CAG1D;;EACA,IAAIA,IAAI,KAAK,GAAb,EAAkB;IACd;EACH,CANyD,CAQ1D;;;EACA,IAAIE,QAAQ,GAAGJ,IAAI,CAACK,IAAL,IAAaL,IAAI,CAACK,IAAL,CAAUF,IAAV,CAAeG,IAA3C;;EACA,IAAIF,QAAQ,KAAK,YAAb,IACAA,QAAQ,KAAK,eADb,IAEAA,QAAQ,KAAK,mBAFb,IAGAA,QAAQ,KAAK,qBAHb,IAIAA,QAAQ,KAAK,uBAJjB,EAI0C;IACtCH,IAAI,CAACM,MAAL,CAAYP,IAAZ;EACH;AACJ,CAjBD"},"metadata":{},"sourceType":"script"}