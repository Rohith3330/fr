{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"C:/Users/Rohith/mern/frontend/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime().mark(loadCjsOrMjsDefault);\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = loadCjsOrMjsDefault;\nexports.supportsESM = void 0;\n\nvar _async = require(\"../../gensync-utils/async\");\n\nfunction _path() {\n  var data = require(\"path\");\n\n  _path = function _path() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _url() {\n  var data = require(\"url\");\n\n  _url = function _url() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _module() {\n  var data = require(\"module\");\n\n  _module = function _module() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _semver() {\n  var data = require(\"semver\");\n\n  _semver = function _semver() {\n    return data;\n  };\n\n  return data;\n}\n\nvar _rewriteStackTrace = require(\"../../errors/rewrite-stack-trace\");\n\nvar _configError = require(\"../../errors/config-error\");\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nvar import_;\n\ntry {\n  import_ = require(\"./import.cjs\");\n} catch (_unused) {}\n\nvar supportsESM = _semver().satisfies(process.versions.node, \"^12.17 || >=13.2\");\n\nexports.supportsESM = supportsESM;\n\nfunction loadCjsOrMjsDefault(filepath, asyncError) {\n  var fallbackToTranspiledModule,\n      _args = arguments;\n  return _regeneratorRuntime().wrap(function loadCjsOrMjsDefault$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          fallbackToTranspiledModule = _args.length > 2 && _args[2] !== undefined ? _args[2] : false;\n          _context.t0 = guessJSModuleType(filepath);\n          _context.next = _context.t0 === \"cjs\" ? 4 : _context.t0 === \"unknown\" ? 5 : _context.t0 === \"mjs\" ? 13 : 18;\n          break;\n\n        case 4:\n          return _context.abrupt(\"return\", loadCjsDefault(filepath, fallbackToTranspiledModule));\n\n        case 5:\n          _context.prev = 5;\n          return _context.abrupt(\"return\", loadCjsDefault(filepath, fallbackToTranspiledModule));\n\n        case 9:\n          _context.prev = 9;\n          _context.t1 = _context[\"catch\"](5);\n\n          if (!(_context.t1.code !== \"ERR_REQUIRE_ESM\")) {\n            _context.next = 13;\n            break;\n          }\n\n          throw _context.t1;\n\n        case 13:\n          return _context.delegateYield((0, _async.isAsync)(), \"t2\", 14);\n\n        case 14:\n          if (!_context.t2) {\n            _context.next = 17;\n            break;\n          }\n\n          return _context.delegateYield((0, _async.waitFor)(loadMjsDefault(filepath)), \"t3\", 16);\n\n        case 16:\n          return _context.abrupt(\"return\", _context.t3);\n\n        case 17:\n          throw new _configError.default(asyncError, filepath);\n\n        case 18:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[5, 9]]);\n}\n\nfunction guessJSModuleType(filename) {\n  switch (_path().extname(filename)) {\n    case \".cjs\":\n      return \"cjs\";\n\n    case \".mjs\":\n      return \"mjs\";\n\n    default:\n      return \"unknown\";\n  }\n}\n\nfunction loadCjsDefault(filepath, fallbackToTranspiledModule) {\n  var module = (0, _rewriteStackTrace.endHiddenCallStack)(require)(filepath);\n  return module != null && module.__esModule ? module.default || (fallbackToTranspiledModule ? module : undefined) : module;\n}\n\nfunction loadMjsDefault(_x) {\n  return _loadMjsDefault.apply(this, arguments);\n}\n\nfunction _loadMjsDefault() {\n  _loadMjsDefault = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(filepath) {\n    var module;\n    return _regeneratorRuntime().wrap(function _callee$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (import_) {\n              _context2.next = 2;\n              break;\n            }\n\n            throw new _configError.default(\"Internal error: Native ECMAScript modules aren't supported\" + \" by this platform.\\n\", filepath);\n\n          case 2:\n            _context2.next = 4;\n            return (0, _rewriteStackTrace.endHiddenCallStack)(import_)((0, _url().pathToFileURL)(filepath));\n\n          case 4:\n            module = _context2.sent;\n            return _context2.abrupt(\"return\", module.default);\n\n          case 6:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _loadMjsDefault.apply(this, arguments);\n}\n\n0 && 0;","map":{"version":3,"mappings":";;;;sDAyByBA,mB;;;;;;;;AAzBzB;;AAEA;EAAA;;EAAAC;IAAA;EAAA;;EAAA;AAAA;;AACA;EAAA;;EAAAC;IAAA;EAAA;;EAAA;AAAA;;AACA;EAAA;;EAAAC;IAAA;EAAA;;EAAA;AAAA;;AACA;EAAA;;EAAAC;IAAA;EAAA;;EAAA;AAAA;;AAEA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIA,IAAIC,OAAJ;;AACA,IAAI;EAEFA,OAAO,GAAGC,OAAO,CAAC,cAAD,CAAjBD;AAFF,EAGE,gBAAM,CAAE;;AAEH,IAAME,WAAW,GAAGC,UAAOC,SAAPD,CACzBE,OAAO,CAACC,QAARD,CAAiBE,IADQJ,EAIzB,kBAJyBA,CAApB;;;;AAOQ,SAAUR,mBAAV,CACba,QADa,EAEbC,UAFa;EAAA;EAAA;EAAA;IAAA;MAAA;QAAA;UAIbC,0BAJa,2DAIyB,KAJzB;UAAA,cAMLC,iBAAiB,CAACH,QAAD,CANZ;UAAA,gCAON,KAPM,uBASN,SATM,uBAgBN,KAhBM;UAAA;;QAAA;UAAA,iCAQFI,cAAc,CAACJ,QAAD,EAAWE,0BAAX,CARZ;;QAAA;UAAA;UAAA,iCAWAE,cAAc,CAACJ,QAAD,EAAWE,0BAAX,CAXd;;QAAA;UAAA;UAAA;;UAAA,MAaHG,YAAEC,IAAFD,KAAW,iBAbR;YAAA;YAAA;UAAA;;UAAA;;QAAA;UAiBL,8BAAO,qBAAP;;QAjBK;UAAA;YAAA;YAAA;UAAA;;UAkBA,8BAAO,oBAAQE,cAAc,CAACP,QAAD,CAAtB,CAAP;;QAlBA;UAAA;;QAAA;UAAA,MAoBH,IAAIQ,oBAAJ,CAAgBP,UAAhB,EAA4BD,QAA5B,CApBG;;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA;;AAwBf,SAASG,iBAAT,CAA2BM,QAA3B,EAAwE;EACtE,QAAQC,QAAKC,OAALD,CAAaD,QAAbC,CAAR;IACE,KAAK,MAAL;MACE,OAAO,KAAP;;IACF,KAAK,MAAL;MACE,OAAO,KAAP;;IACF;MACE,OAAO,SAAP;EANJ;AAQD;;AAED,SAASN,cAAT,CAAwBJ,QAAxB,EAA0CE,0BAA1C,EAA+E;EAC7E,IAAMU,MAAM,GAAG,2CAAmBnB,OAAnB,EAA4BO,QAA5B,CAAf;EACA,OAAOY,MAAM,QAANA,UAAM,CAAEC,UAARD,GAEHA,MAAM,CAACE,OAAPF,KAAmBV,0BAA0B,GAAGU,MAAH,GAAYG,SAAzDH,CAFGA,GAGHA,MAHJ;AAID;;SAEcL,e;;;;;+EAAf,iBAA8BP,QAA9B;IAAA;IAAA;MAAA;QAAA;UAAA;YAAA,IACOR,OADP;cAAA;cAAA;YAAA;;YAAA,MAEU,IAAIgB,oBAAJ,CACJ,+DACE,sBAFE,EAGJR,QAHI,CAFV;;UAAA;YAAA;YAWc,OAAS,2CAAmBR,OAAnB,EAA4B,0BAAcQ,QAAd,CAA5B,CAAT;;UAXd;YAWQY,MAXR;YAAA,kCAYSA,MAAM,CAACE,OAZhB;;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA","names":["loadCjsOrMjsDefault","_path","_url","_module","_semver","import_","require","supportsESM","semver","satisfies","process","versions","node","filepath","asyncError","fallbackToTranspiledModule","guessJSModuleType","loadCjsDefault","e","code","loadMjsDefault","ConfigError","filename","path","extname","module","__esModule","default","undefined"],"sources":["C:\\Users\\Rohith\\mern\\frontend\\node_modules\\@babel\\core\\src\\config\\files\\module-types.ts"],"sourcesContent":["import { isAsync, waitFor } from \"../../gensync-utils/async\";\nimport type { Handler } from \"gensync\";\nimport path from \"path\";\nimport { pathToFileURL } from \"url\";\nimport { createRequire } from \"module\";\nimport semver from \"semver\";\n\nimport { endHiddenCallStack } from \"../../errors/rewrite-stack-trace\";\nimport ConfigError from \"../../errors/config-error\";\n\nconst require = createRequire(import.meta.url);\n\nlet import_: ((specifier: string | URL) => any) | undefined;\ntry {\n  // Old Node.js versions don't support import() syntax.\n  import_ = require(\"./import.cjs\");\n} catch {}\n\nexport const supportsESM = semver.satisfies(\n  process.versions.node,\n  // older versions, starting from 10, support the dynamic\n  // import syntax but always return a rejected promise.\n  \"^12.17 || >=13.2\",\n);\n\nexport default function* loadCjsOrMjsDefault(\n  filepath: string,\n  asyncError: string,\n  // TODO(Babel 8): Remove this\n  fallbackToTranspiledModule: boolean = false,\n): Handler<unknown> {\n  switch (guessJSModuleType(filepath)) {\n    case \"cjs\":\n      return loadCjsDefault(filepath, fallbackToTranspiledModule);\n    case \"unknown\":\n      try {\n        return loadCjsDefault(filepath, fallbackToTranspiledModule);\n      } catch (e) {\n        if (e.code !== \"ERR_REQUIRE_ESM\") throw e;\n      }\n    // fall through\n    case \"mjs\":\n      if (yield* isAsync()) {\n        return yield* waitFor(loadMjsDefault(filepath));\n      }\n      throw new ConfigError(asyncError, filepath);\n  }\n}\n\nfunction guessJSModuleType(filename: string): \"cjs\" | \"mjs\" | \"unknown\" {\n  switch (path.extname(filename)) {\n    case \".cjs\":\n      return \"cjs\";\n    case \".mjs\":\n      return \"mjs\";\n    default:\n      return \"unknown\";\n  }\n}\n\nfunction loadCjsDefault(filepath: string, fallbackToTranspiledModule: boolean) {\n  const module = endHiddenCallStack(require)(filepath) as any;\n  return module?.__esModule\n    ? // TODO (Babel 8): Remove \"module\" and \"undefined\" fallback\n      module.default || (fallbackToTranspiledModule ? module : undefined)\n    : module;\n}\n\nasync function loadMjsDefault(filepath: string) {\n  if (!import_) {\n    throw new ConfigError(\n      \"Internal error: Native ECMAScript modules aren't supported\" +\n        \" by this platform.\\n\",\n      filepath,\n    );\n  }\n\n  // import() expects URLs, not file paths.\n  // https://github.com/nodejs/node/issues/31710\n  const module = await endHiddenCallStack(import_)(pathToFileURL(filepath));\n  return module.default;\n}\n"]},"metadata":{},"sourceType":"script"}