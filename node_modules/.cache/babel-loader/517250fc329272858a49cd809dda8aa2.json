{"ast":null,"code":"'use strict';\n/* eslint-disable no-var */\n\nvar test = require('tape');\n\nvar buildQueue = require('../');\n\ntest('concurrency', function (t) {\n  t.plan(2);\n  t.throws(buildQueue.bind(null, worker, 0));\n  t.doesNotThrow(buildQueue.bind(null, worker, 1));\n\n  function worker(arg, cb) {\n    cb(null, true);\n  }\n});\ntest('worker execution', function (t) {\n  t.plan(3);\n  var queue = buildQueue(worker, 1);\n  queue.push(42, function (err, result) {\n    t.error(err, 'no error');\n    t.equal(result, true, 'result matches');\n  });\n\n  function worker(arg, cb) {\n    t.equal(arg, 42);\n    cb(null, true);\n  }\n});\ntest('limit', function (t) {\n  t.plan(4);\n  var expected = [10, 0];\n  var queue = buildQueue(worker, 1);\n  queue.push(10, result);\n  queue.push(0, result);\n\n  function result(err, arg) {\n    t.error(err, 'no error');\n    t.equal(arg, expected.shift(), 'the result matches');\n  }\n\n  function worker(arg, cb) {\n    setTimeout(cb, arg, null, arg);\n  }\n});\ntest('multiple executions', function (t) {\n  t.plan(15);\n  var queue = buildQueue(worker, 1);\n  var toExec = [1, 2, 3, 4, 5];\n  var count = 0;\n  toExec.forEach(function (task) {\n    queue.push(task, done);\n  });\n\n  function done(err, result) {\n    t.error(err, 'no error');\n    t.equal(result, toExec[count - 1], 'the result matches');\n  }\n\n  function worker(arg, cb) {\n    t.equal(arg, toExec[count], 'arg matches');\n    count++;\n    setImmediate(cb, null, arg);\n  }\n});\ntest('multiple executions, one after another', function (t) {\n  t.plan(15);\n  var queue = buildQueue(worker, 1);\n  var toExec = [1, 2, 3, 4, 5];\n  var count = 0;\n  queue.push(toExec[0], done);\n\n  function done(err, result) {\n    t.error(err, 'no error');\n    t.equal(result, toExec[count - 1], 'the result matches');\n\n    if (count < toExec.length) {\n      queue.push(toExec[count], done);\n    }\n  }\n\n  function worker(arg, cb) {\n    t.equal(arg, toExec[count], 'arg matches');\n    count++;\n    setImmediate(cb, null, arg);\n  }\n});\ntest('set this', function (t) {\n  t.plan(3);\n  var that = {};\n  var queue = buildQueue(that, worker, 1);\n  queue.push(42, function (err, result) {\n    t.error(err, 'no error');\n    t.equal(this, that, 'this matches');\n  });\n\n  function worker(arg, cb) {\n    t.equal(this, that, 'this matches');\n    cb(null, true);\n  }\n});\ntest('drain', function (t) {\n  t.plan(4);\n  var queue = buildQueue(worker, 1);\n  var worked = false;\n  queue.push(42, function (err, result) {\n    t.error(err, 'no error');\n    t.equal(result, true, 'result matches');\n  });\n\n  queue.drain = function () {\n    t.equal(true, worked, 'drained');\n  };\n\n  function worker(arg, cb) {\n    t.equal(arg, 42);\n    worked = true;\n    setImmediate(cb, null, true);\n  }\n});\ntest('pause && resume', function (t) {\n  t.plan(7);\n  var queue = buildQueue(worker, 1);\n  var worked = false;\n  t.notOk(queue.paused, 'it should not be paused');\n  queue.pause();\n  queue.push(42, function (err, result) {\n    t.error(err, 'no error');\n    t.equal(result, true, 'result matches');\n  });\n  t.notOk(worked, 'it should be paused');\n  t.ok(queue.paused, 'it should be paused');\n  queue.resume();\n  queue.resume(); // second resume is a no-op\n\n  t.notOk(queue.paused, 'it should not be paused');\n\n  function worker(arg, cb) {\n    t.equal(arg, 42);\n    worked = true;\n    cb(null, true);\n  }\n});\ntest('pause in flight && resume', function (t) {\n  t.plan(9);\n  var queue = buildQueue(worker, 1);\n  var expected = [42, 24];\n  t.notOk(queue.paused, 'it should not be paused');\n  queue.push(42, function (err, result) {\n    t.error(err, 'no error');\n    t.equal(result, true, 'result matches');\n    t.ok(queue.paused, 'it should be paused');\n    process.nextTick(function () {\n      queue.resume();\n    });\n  });\n  queue.push(24, function (err, result) {\n    t.error(err, 'no error');\n    t.equal(result, true, 'result matches');\n    t.notOk(queue.paused, 'it should not be paused');\n  });\n  queue.pause();\n\n  function worker(arg, cb) {\n    t.equal(arg, expected.shift());\n    process.nextTick(function () {\n      cb(null, true);\n    });\n  }\n});\ntest('altering concurrency', function (t) {\n  t.plan(7);\n  var queue = buildQueue(worker, 1);\n  var count = 0;\n  queue.pause();\n  queue.push(24, workDone);\n  queue.push(24, workDone);\n  queue.concurrency = 2;\n  queue.resume();\n  t.equal(queue.running(), 2, '2 jobs running');\n\n  function workDone(err, result) {\n    t.error(err, 'no error');\n    t.equal(result, true, 'result matches');\n  }\n\n  function worker(arg, cb) {\n    t.equal(0, count, 'works in parallel');\n    setImmediate(function () {\n      count++;\n      cb(null, true);\n    });\n  }\n});\ntest('idle()', function (t) {\n  t.plan(12);\n  var queue = buildQueue(worker, 1);\n  t.ok(queue.idle(), 'queue is idle');\n  queue.push(42, function (err, result) {\n    t.error(err, 'no error');\n    t.equal(result, true, 'result matches');\n    t.notOk(queue.idle(), 'queue is not idle');\n  });\n  queue.push(42, function (err, result) {\n    t.error(err, 'no error');\n    t.equal(result, true, 'result matches'); // it will go idle after executing this function\n\n    setImmediate(function () {\n      t.ok(queue.idle(), 'queue is now idle');\n    });\n  });\n  t.notOk(queue.idle(), 'queue is not idle');\n\n  function worker(arg, cb) {\n    t.notOk(queue.idle(), 'queue is not idle');\n    t.equal(arg, 42);\n    setImmediate(cb, null, true);\n  }\n});\ntest('saturated', function (t) {\n  t.plan(9);\n  var queue = buildQueue(worker, 1);\n  var preworked = 0;\n  var worked = 0;\n\n  queue.saturated = function () {\n    t.pass('saturated');\n    t.equal(preworked, 1, 'started 1 task');\n    t.equal(worked, 0, 'worked zero task');\n  };\n\n  queue.push(42, done);\n  queue.push(42, done);\n\n  function done(err, result) {\n    t.error(err, 'no error');\n    t.equal(result, true, 'result matches');\n  }\n\n  function worker(arg, cb) {\n    t.equal(arg, 42);\n    preworked++;\n    setImmediate(function () {\n      worked++;\n      cb(null, true);\n    });\n  }\n});\ntest('length', function (t) {\n  t.plan(7);\n  var queue = buildQueue(worker, 1);\n  t.equal(queue.length(), 0, 'nothing waiting');\n  queue.push(42, done);\n  t.equal(queue.length(), 0, 'nothing waiting');\n  queue.push(42, done);\n  t.equal(queue.length(), 1, 'one task waiting');\n  queue.push(42, done);\n  t.equal(queue.length(), 2, 'two tasks waiting');\n\n  function done(err, result) {\n    t.error(err, 'no error');\n  }\n\n  function worker(arg, cb) {\n    setImmediate(function () {\n      cb(null, true);\n    });\n  }\n});\ntest('getQueue', function (t) {\n  t.plan(10);\n  var queue = buildQueue(worker, 1);\n  t.equal(queue.getQueue().length, 0, 'nothing waiting');\n  queue.push(42, done);\n  t.equal(queue.getQueue().length, 0, 'nothing waiting');\n  queue.push(42, done);\n  t.equal(queue.getQueue().length, 1, 'one task waiting');\n  t.equal(queue.getQueue()[0], 42, 'should be equal');\n  queue.push(43, done);\n  t.equal(queue.getQueue().length, 2, 'two tasks waiting');\n  t.equal(queue.getQueue()[0], 42, 'should be equal');\n  t.equal(queue.getQueue()[1], 43, 'should be equal');\n\n  function done(err, result) {\n    t.error(err, 'no error');\n  }\n\n  function worker(arg, cb) {\n    setImmediate(function () {\n      cb(null, true);\n    });\n  }\n});\ntest('unshift', function (t) {\n  t.plan(8);\n  var queue = buildQueue(worker, 1);\n  var expected = [1, 2, 3, 4];\n  queue.push(1, done);\n  queue.push(4, done);\n  queue.unshift(3, done);\n  queue.unshift(2, done);\n\n  function done(err, result) {\n    t.error(err, 'no error');\n  }\n\n  function worker(arg, cb) {\n    t.equal(expected.shift(), arg, 'tasks come in order');\n    setImmediate(function () {\n      cb(null, true);\n    });\n  }\n});\ntest('unshift && empty', function (t) {\n  t.plan(2);\n  var queue = buildQueue(worker, 1);\n  var completed = false;\n  queue.pause();\n\n  queue.empty = function () {\n    t.notOk(completed, 'the task has not completed yet');\n  };\n\n  queue.unshift(1, done);\n  queue.resume();\n\n  function done(err, result) {\n    completed = true;\n    t.error(err, 'no error');\n  }\n\n  function worker(arg, cb) {\n    setImmediate(function () {\n      cb(null, true);\n    });\n  }\n});\ntest('push && empty', function (t) {\n  t.plan(2);\n  var queue = buildQueue(worker, 1);\n  var completed = false;\n  queue.pause();\n\n  queue.empty = function () {\n    t.notOk(completed, 'the task has not completed yet');\n  };\n\n  queue.push(1, done);\n  queue.resume();\n\n  function done(err, result) {\n    completed = true;\n    t.error(err, 'no error');\n  }\n\n  function worker(arg, cb) {\n    setImmediate(function () {\n      cb(null, true);\n    });\n  }\n});\ntest('kill', function (t) {\n  t.plan(5);\n  var queue = buildQueue(worker, 1);\n  var expected = [1];\n  var predrain = queue.drain;\n\n  queue.drain = function drain() {\n    t.fail('drain should never be called');\n  };\n\n  queue.push(1, done);\n  queue.push(4, done);\n  queue.unshift(3, done);\n  queue.unshift(2, done);\n  queue.kill();\n\n  function done(err, result) {\n    t.error(err, 'no error');\n    setImmediate(function () {\n      t.equal(queue.length(), 0, 'no queued tasks');\n      t.equal(queue.running(), 0, 'no running tasks');\n      t.equal(queue.drain, predrain, 'drain is back to default');\n    });\n  }\n\n  function worker(arg, cb) {\n    t.equal(expected.shift(), arg, 'tasks come in order');\n    setImmediate(function () {\n      cb(null, true);\n    });\n  }\n});\ntest('killAndDrain', function (t) {\n  t.plan(6);\n  var queue = buildQueue(worker, 1);\n  var expected = [1];\n  var predrain = queue.drain;\n\n  queue.drain = function drain() {\n    t.pass('drain has been called');\n  };\n\n  queue.push(1, done);\n  queue.push(4, done);\n  queue.unshift(3, done);\n  queue.unshift(2, done);\n  queue.killAndDrain();\n\n  function done(err, result) {\n    t.error(err, 'no error');\n    setImmediate(function () {\n      t.equal(queue.length(), 0, 'no queued tasks');\n      t.equal(queue.running(), 0, 'no running tasks');\n      t.equal(queue.drain, predrain, 'drain is back to default');\n    });\n  }\n\n  function worker(arg, cb) {\n    t.equal(expected.shift(), arg, 'tasks come in order');\n    setImmediate(function () {\n      cb(null, true);\n    });\n  }\n});\ntest('pause && idle', function (t) {\n  t.plan(11);\n  var queue = buildQueue(worker, 1);\n  var worked = false;\n  t.notOk(queue.paused, 'it should not be paused');\n  t.ok(queue.idle(), 'should be idle');\n  queue.pause();\n  queue.push(42, function (err, result) {\n    t.error(err, 'no error');\n    t.equal(result, true, 'result matches');\n  });\n  t.notOk(worked, 'it should be paused');\n  t.ok(queue.paused, 'it should be paused');\n  t.notOk(queue.idle(), 'should not be idle');\n  queue.resume();\n  t.notOk(queue.paused, 'it should not be paused');\n  t.notOk(queue.idle(), 'it should not be idle');\n\n  function worker(arg, cb) {\n    t.equal(arg, 42);\n    worked = true;\n    process.nextTick(cb.bind(null, null, true));\n    process.nextTick(function () {\n      t.ok(queue.idle(), 'is should be idle');\n    });\n  }\n});\ntest('push without cb', function (t) {\n  t.plan(1);\n  var queue = buildQueue(worker, 1);\n  queue.push(42);\n\n  function worker(arg, cb) {\n    t.equal(arg, 42);\n    cb();\n  }\n});\ntest('unshift without cb', function (t) {\n  t.plan(1);\n  var queue = buildQueue(worker, 1);\n  queue.unshift(42);\n\n  function worker(arg, cb) {\n    t.equal(arg, 42);\n    cb();\n  }\n});\ntest('push with worker throwing error', function (t) {\n  t.plan(5);\n  var q = buildQueue(function (task, cb) {\n    cb(new Error('test error'), null);\n  }, 1);\n  q.error(function (err, task) {\n    t.ok(err instanceof Error, 'global error handler should catch the error');\n    t.match(err.message, /test error/, 'error message should be \"test error\"');\n    t.equal(task, 42, 'The task executed should be passed');\n  });\n  q.push(42, function (err) {\n    t.ok(err instanceof Error, 'push callback should catch the error');\n    t.match(err.message, /test error/, 'error message should be \"test error\"');\n  });\n});","map":{"version":3,"names":["test","require","buildQueue","t","plan","throws","bind","worker","doesNotThrow","arg","cb","queue","push","err","result","error","equal","expected","shift","setTimeout","toExec","count","forEach","task","done","setImmediate","length","that","worked","drain","notOk","paused","pause","ok","resume","process","nextTick","workDone","concurrency","running","idle","preworked","saturated","pass","getQueue","unshift","completed","empty","predrain","fail","kill","killAndDrain","q","Error","match","message"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/fastq/test/test.js"],"sourcesContent":["'use strict'\n\n/* eslint-disable no-var */\n\nvar test = require('tape')\nvar buildQueue = require('../')\n\ntest('concurrency', function (t) {\n  t.plan(2)\n  t.throws(buildQueue.bind(null, worker, 0))\n  t.doesNotThrow(buildQueue.bind(null, worker, 1))\n\n  function worker (arg, cb) {\n    cb(null, true)\n  }\n})\n\ntest('worker execution', function (t) {\n  t.plan(3)\n\n  var queue = buildQueue(worker, 1)\n\n  queue.push(42, function (err, result) {\n    t.error(err, 'no error')\n    t.equal(result, true, 'result matches')\n  })\n\n  function worker (arg, cb) {\n    t.equal(arg, 42)\n    cb(null, true)\n  }\n})\n\ntest('limit', function (t) {\n  t.plan(4)\n\n  var expected = [10, 0]\n  var queue = buildQueue(worker, 1)\n\n  queue.push(10, result)\n  queue.push(0, result)\n\n  function result (err, arg) {\n    t.error(err, 'no error')\n    t.equal(arg, expected.shift(), 'the result matches')\n  }\n\n  function worker (arg, cb) {\n    setTimeout(cb, arg, null, arg)\n  }\n})\n\ntest('multiple executions', function (t) {\n  t.plan(15)\n\n  var queue = buildQueue(worker, 1)\n  var toExec = [1, 2, 3, 4, 5]\n  var count = 0\n\n  toExec.forEach(function (task) {\n    queue.push(task, done)\n  })\n\n  function done (err, result) {\n    t.error(err, 'no error')\n    t.equal(result, toExec[count - 1], 'the result matches')\n  }\n\n  function worker (arg, cb) {\n    t.equal(arg, toExec[count], 'arg matches')\n    count++\n    setImmediate(cb, null, arg)\n  }\n})\n\ntest('multiple executions, one after another', function (t) {\n  t.plan(15)\n\n  var queue = buildQueue(worker, 1)\n  var toExec = [1, 2, 3, 4, 5]\n  var count = 0\n\n  queue.push(toExec[0], done)\n\n  function done (err, result) {\n    t.error(err, 'no error')\n    t.equal(result, toExec[count - 1], 'the result matches')\n    if (count < toExec.length) {\n      queue.push(toExec[count], done)\n    }\n  }\n\n  function worker (arg, cb) {\n    t.equal(arg, toExec[count], 'arg matches')\n    count++\n    setImmediate(cb, null, arg)\n  }\n})\n\ntest('set this', function (t) {\n  t.plan(3)\n\n  var that = {}\n  var queue = buildQueue(that, worker, 1)\n\n  queue.push(42, function (err, result) {\n    t.error(err, 'no error')\n    t.equal(this, that, 'this matches')\n  })\n\n  function worker (arg, cb) {\n    t.equal(this, that, 'this matches')\n    cb(null, true)\n  }\n})\n\ntest('drain', function (t) {\n  t.plan(4)\n\n  var queue = buildQueue(worker, 1)\n  var worked = false\n\n  queue.push(42, function (err, result) {\n    t.error(err, 'no error')\n    t.equal(result, true, 'result matches')\n  })\n\n  queue.drain = function () {\n    t.equal(true, worked, 'drained')\n  }\n\n  function worker (arg, cb) {\n    t.equal(arg, 42)\n    worked = true\n    setImmediate(cb, null, true)\n  }\n})\n\ntest('pause && resume', function (t) {\n  t.plan(7)\n\n  var queue = buildQueue(worker, 1)\n  var worked = false\n\n  t.notOk(queue.paused, 'it should not be paused')\n\n  queue.pause()\n\n  queue.push(42, function (err, result) {\n    t.error(err, 'no error')\n    t.equal(result, true, 'result matches')\n  })\n\n  t.notOk(worked, 'it should be paused')\n  t.ok(queue.paused, 'it should be paused')\n\n  queue.resume()\n  queue.resume() // second resume is a no-op\n\n  t.notOk(queue.paused, 'it should not be paused')\n\n  function worker (arg, cb) {\n    t.equal(arg, 42)\n    worked = true\n    cb(null, true)\n  }\n})\n\ntest('pause in flight && resume', function (t) {\n  t.plan(9)\n\n  var queue = buildQueue(worker, 1)\n  var expected = [42, 24]\n\n  t.notOk(queue.paused, 'it should not be paused')\n\n  queue.push(42, function (err, result) {\n    t.error(err, 'no error')\n    t.equal(result, true, 'result matches')\n    t.ok(queue.paused, 'it should be paused')\n    process.nextTick(function () { queue.resume() })\n  })\n\n  queue.push(24, function (err, result) {\n    t.error(err, 'no error')\n    t.equal(result, true, 'result matches')\n    t.notOk(queue.paused, 'it should not be paused')\n  })\n\n  queue.pause()\n\n  function worker (arg, cb) {\n    t.equal(arg, expected.shift())\n    process.nextTick(function () { cb(null, true) })\n  }\n})\n\ntest('altering concurrency', function (t) {\n  t.plan(7)\n\n  var queue = buildQueue(worker, 1)\n  var count = 0\n\n  queue.pause()\n\n  queue.push(24, workDone)\n  queue.push(24, workDone)\n\n  queue.concurrency = 2\n\n  queue.resume()\n\n  t.equal(queue.running(), 2, '2 jobs running')\n\n  function workDone (err, result) {\n    t.error(err, 'no error')\n    t.equal(result, true, 'result matches')\n  }\n\n  function worker (arg, cb) {\n    t.equal(0, count, 'works in parallel')\n    setImmediate(function () {\n      count++\n      cb(null, true)\n    })\n  }\n})\n\ntest('idle()', function (t) {\n  t.plan(12)\n\n  var queue = buildQueue(worker, 1)\n\n  t.ok(queue.idle(), 'queue is idle')\n\n  queue.push(42, function (err, result) {\n    t.error(err, 'no error')\n    t.equal(result, true, 'result matches')\n    t.notOk(queue.idle(), 'queue is not idle')\n  })\n\n  queue.push(42, function (err, result) {\n    t.error(err, 'no error')\n    t.equal(result, true, 'result matches')\n    // it will go idle after executing this function\n    setImmediate(function () {\n      t.ok(queue.idle(), 'queue is now idle')\n    })\n  })\n\n  t.notOk(queue.idle(), 'queue is not idle')\n\n  function worker (arg, cb) {\n    t.notOk(queue.idle(), 'queue is not idle')\n    t.equal(arg, 42)\n    setImmediate(cb, null, true)\n  }\n})\n\ntest('saturated', function (t) {\n  t.plan(9)\n\n  var queue = buildQueue(worker, 1)\n  var preworked = 0\n  var worked = 0\n\n  queue.saturated = function () {\n    t.pass('saturated')\n    t.equal(preworked, 1, 'started 1 task')\n    t.equal(worked, 0, 'worked zero task')\n  }\n\n  queue.push(42, done)\n  queue.push(42, done)\n\n  function done (err, result) {\n    t.error(err, 'no error')\n    t.equal(result, true, 'result matches')\n  }\n\n  function worker (arg, cb) {\n    t.equal(arg, 42)\n    preworked++\n    setImmediate(function () {\n      worked++\n      cb(null, true)\n    })\n  }\n})\n\ntest('length', function (t) {\n  t.plan(7)\n\n  var queue = buildQueue(worker, 1)\n\n  t.equal(queue.length(), 0, 'nothing waiting')\n  queue.push(42, done)\n  t.equal(queue.length(), 0, 'nothing waiting')\n  queue.push(42, done)\n  t.equal(queue.length(), 1, 'one task waiting')\n  queue.push(42, done)\n  t.equal(queue.length(), 2, 'two tasks waiting')\n\n  function done (err, result) {\n    t.error(err, 'no error')\n  }\n\n  function worker (arg, cb) {\n    setImmediate(function () {\n      cb(null, true)\n    })\n  }\n})\n\ntest('getQueue', function (t) {\n  t.plan(10)\n\n  var queue = buildQueue(worker, 1)\n\n  t.equal(queue.getQueue().length, 0, 'nothing waiting')\n  queue.push(42, done)\n  t.equal(queue.getQueue().length, 0, 'nothing waiting')\n  queue.push(42, done)\n  t.equal(queue.getQueue().length, 1, 'one task waiting')\n  t.equal(queue.getQueue()[0], 42, 'should be equal')\n  queue.push(43, done)\n  t.equal(queue.getQueue().length, 2, 'two tasks waiting')\n  t.equal(queue.getQueue()[0], 42, 'should be equal')\n  t.equal(queue.getQueue()[1], 43, 'should be equal')\n\n  function done (err, result) {\n    t.error(err, 'no error')\n  }\n\n  function worker (arg, cb) {\n    setImmediate(function () {\n      cb(null, true)\n    })\n  }\n})\n\ntest('unshift', function (t) {\n  t.plan(8)\n\n  var queue = buildQueue(worker, 1)\n  var expected = [1, 2, 3, 4]\n\n  queue.push(1, done)\n  queue.push(4, done)\n  queue.unshift(3, done)\n  queue.unshift(2, done)\n\n  function done (err, result) {\n    t.error(err, 'no error')\n  }\n\n  function worker (arg, cb) {\n    t.equal(expected.shift(), arg, 'tasks come in order')\n    setImmediate(function () {\n      cb(null, true)\n    })\n  }\n})\n\ntest('unshift && empty', function (t) {\n  t.plan(2)\n\n  var queue = buildQueue(worker, 1)\n  var completed = false\n\n  queue.pause()\n\n  queue.empty = function () {\n    t.notOk(completed, 'the task has not completed yet')\n  }\n\n  queue.unshift(1, done)\n\n  queue.resume()\n\n  function done (err, result) {\n    completed = true\n    t.error(err, 'no error')\n  }\n\n  function worker (arg, cb) {\n    setImmediate(function () {\n      cb(null, true)\n    })\n  }\n})\n\ntest('push && empty', function (t) {\n  t.plan(2)\n\n  var queue = buildQueue(worker, 1)\n  var completed = false\n\n  queue.pause()\n\n  queue.empty = function () {\n    t.notOk(completed, 'the task has not completed yet')\n  }\n\n  queue.push(1, done)\n\n  queue.resume()\n\n  function done (err, result) {\n    completed = true\n    t.error(err, 'no error')\n  }\n\n  function worker (arg, cb) {\n    setImmediate(function () {\n      cb(null, true)\n    })\n  }\n})\n\ntest('kill', function (t) {\n  t.plan(5)\n\n  var queue = buildQueue(worker, 1)\n  var expected = [1]\n\n  var predrain = queue.drain\n\n  queue.drain = function drain () {\n    t.fail('drain should never be called')\n  }\n\n  queue.push(1, done)\n  queue.push(4, done)\n  queue.unshift(3, done)\n  queue.unshift(2, done)\n  queue.kill()\n\n  function done (err, result) {\n    t.error(err, 'no error')\n    setImmediate(function () {\n      t.equal(queue.length(), 0, 'no queued tasks')\n      t.equal(queue.running(), 0, 'no running tasks')\n      t.equal(queue.drain, predrain, 'drain is back to default')\n    })\n  }\n\n  function worker (arg, cb) {\n    t.equal(expected.shift(), arg, 'tasks come in order')\n    setImmediate(function () {\n      cb(null, true)\n    })\n  }\n})\n\ntest('killAndDrain', function (t) {\n  t.plan(6)\n\n  var queue = buildQueue(worker, 1)\n  var expected = [1]\n\n  var predrain = queue.drain\n\n  queue.drain = function drain () {\n    t.pass('drain has been called')\n  }\n\n  queue.push(1, done)\n  queue.push(4, done)\n  queue.unshift(3, done)\n  queue.unshift(2, done)\n  queue.killAndDrain()\n\n  function done (err, result) {\n    t.error(err, 'no error')\n    setImmediate(function () {\n      t.equal(queue.length(), 0, 'no queued tasks')\n      t.equal(queue.running(), 0, 'no running tasks')\n      t.equal(queue.drain, predrain, 'drain is back to default')\n    })\n  }\n\n  function worker (arg, cb) {\n    t.equal(expected.shift(), arg, 'tasks come in order')\n    setImmediate(function () {\n      cb(null, true)\n    })\n  }\n})\n\ntest('pause && idle', function (t) {\n  t.plan(11)\n\n  var queue = buildQueue(worker, 1)\n  var worked = false\n\n  t.notOk(queue.paused, 'it should not be paused')\n  t.ok(queue.idle(), 'should be idle')\n\n  queue.pause()\n\n  queue.push(42, function (err, result) {\n    t.error(err, 'no error')\n    t.equal(result, true, 'result matches')\n  })\n\n  t.notOk(worked, 'it should be paused')\n  t.ok(queue.paused, 'it should be paused')\n  t.notOk(queue.idle(), 'should not be idle')\n\n  queue.resume()\n\n  t.notOk(queue.paused, 'it should not be paused')\n  t.notOk(queue.idle(), 'it should not be idle')\n\n  function worker (arg, cb) {\n    t.equal(arg, 42)\n    worked = true\n    process.nextTick(cb.bind(null, null, true))\n    process.nextTick(function () {\n      t.ok(queue.idle(), 'is should be idle')\n    })\n  }\n})\n\ntest('push without cb', function (t) {\n  t.plan(1)\n\n  var queue = buildQueue(worker, 1)\n\n  queue.push(42)\n\n  function worker (arg, cb) {\n    t.equal(arg, 42)\n    cb()\n  }\n})\n\ntest('unshift without cb', function (t) {\n  t.plan(1)\n\n  var queue = buildQueue(worker, 1)\n\n  queue.unshift(42)\n\n  function worker (arg, cb) {\n    t.equal(arg, 42)\n    cb()\n  }\n})\n\ntest('push with worker throwing error', function (t) {\n  t.plan(5)\n  var q = buildQueue(function (task, cb) {\n    cb(new Error('test error'), null)\n  }, 1)\n  q.error(function (err, task) {\n    t.ok(err instanceof Error, 'global error handler should catch the error')\n    t.match(err.message, /test error/, 'error message should be \"test error\"')\n    t.equal(task, 42, 'The task executed should be passed')\n  })\n  q.push(42, function (err) {\n    t.ok(err instanceof Error, 'push callback should catch the error')\n    t.match(err.message, /test error/, 'error message should be \"test error\"')\n  })\n})\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}