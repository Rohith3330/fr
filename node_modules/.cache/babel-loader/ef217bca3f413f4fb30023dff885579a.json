{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.detectTestingLibraryUtils = void 0;\n\nconst utils_1 = require(\"@typescript-eslint/utils\");\n\nconst node_utils_1 = require(\"../node-utils\");\n\nconst utils_2 = require(\"../utils\");\n\nconst SETTING_OPTION_OFF = 'off';\nconst USER_EVENT_PACKAGE = '@testing-library/user-event';\nconst REACT_DOM_TEST_UTILS_PACKAGE = 'react-dom/test-utils';\nconst FIRE_EVENT_NAME = 'fireEvent';\nconst CREATE_EVENT_NAME = 'createEvent';\nconst USER_EVENT_NAME = 'userEvent';\nconst RENDER_NAME = 'render';\n\nfunction detectTestingLibraryUtils(ruleCreate) {\n  let {\n    skipRuleReportingCheck = false\n  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return (context, optionsWithDefault) => {\n    let importedTestingLibraryNode = null;\n    let importedCustomModuleNode = null;\n    let importedUserEventLibraryNode = null;\n    let importedReactDomTestUtilsNode = null;\n    const customModuleSetting = context.settings['testing-library/utils-module'];\n    const customRendersSetting = context.settings['testing-library/custom-renders'];\n    const customQueriesSetting = context.settings['testing-library/custom-queries'];\n\n    function isPotentialTestingLibraryFunction(node, isPotentialFunctionCallback) {\n      if (!node) {\n        return false;\n      }\n\n      const referenceNode = (0, node_utils_1.getReferenceNode)(node);\n      const referenceNodeIdentifier = (0, node_utils_1.getPropertyIdentifierNode)(referenceNode);\n\n      if (!referenceNodeIdentifier) {\n        return false;\n      }\n\n      const importedUtilSpecifier = getTestingLibraryImportedUtilSpecifier(referenceNodeIdentifier);\n      const originalNodeName = (0, node_utils_1.isImportSpecifier)(importedUtilSpecifier) && importedUtilSpecifier.local.name !== importedUtilSpecifier.imported.name ? importedUtilSpecifier.imported.name : undefined;\n\n      if (!isPotentialFunctionCallback(node.name, originalNodeName)) {\n        return false;\n      }\n\n      if (isAggressiveModuleReportingEnabled()) {\n        return true;\n      }\n\n      return isNodeComingFromTestingLibrary(referenceNodeIdentifier);\n    }\n\n    const isAggressiveModuleReportingEnabled = () => !customModuleSetting;\n\n    const isAggressiveRenderReportingEnabled = () => {\n      const isSwitchedOff = customRendersSetting === SETTING_OPTION_OFF;\n      const hasCustomOptions = Array.isArray(customRendersSetting) && customRendersSetting.length > 0;\n      return !isSwitchedOff && !hasCustomOptions;\n    };\n\n    const isAggressiveQueryReportingEnabled = () => {\n      const isSwitchedOff = customQueriesSetting === SETTING_OPTION_OFF;\n      const hasCustomOptions = Array.isArray(customQueriesSetting) && customQueriesSetting.length > 0;\n      return !isSwitchedOff && !hasCustomOptions;\n    };\n\n    const getCustomModule = () => {\n      if (!isAggressiveModuleReportingEnabled() && customModuleSetting !== SETTING_OPTION_OFF) {\n        return customModuleSetting;\n      }\n\n      return undefined;\n    };\n\n    const getCustomRenders = () => {\n      if (!isAggressiveRenderReportingEnabled() && customRendersSetting !== SETTING_OPTION_OFF) {\n        return customRendersSetting;\n      }\n\n      return [];\n    };\n\n    const getCustomQueries = () => {\n      if (!isAggressiveQueryReportingEnabled() && customQueriesSetting !== SETTING_OPTION_OFF) {\n        return customQueriesSetting;\n      }\n\n      return [];\n    };\n\n    const getTestingLibraryImportNode = () => {\n      return importedTestingLibraryNode;\n    };\n\n    const getCustomModuleImportNode = () => {\n      return importedCustomModuleNode;\n    };\n\n    const getTestingLibraryImportName = () => {\n      return (0, node_utils_1.getImportModuleName)(importedTestingLibraryNode);\n    };\n\n    const getCustomModuleImportName = () => {\n      return (0, node_utils_1.getImportModuleName)(importedCustomModuleNode);\n    };\n\n    const isTestingLibraryImported = function () {\n      let isStrict = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      const isSomeModuleImported = !!importedTestingLibraryNode || !!importedCustomModuleNode;\n      return !isStrict && isAggressiveModuleReportingEnabled() || isSomeModuleImported;\n    };\n\n    const isQuery = node => {\n      const hasQueryPattern = /^(get|query|find)(All)?By.+$/.test(node.name);\n\n      if (!hasQueryPattern) {\n        return false;\n      }\n\n      if (isAggressiveQueryReportingEnabled()) {\n        return true;\n      }\n\n      const customQueries = getCustomQueries();\n      const isBuiltInQuery = utils_2.ALL_QUERIES_COMBINATIONS.includes(node.name);\n      const isReportableCustomQuery = customQueries.some(pattern => new RegExp(pattern).test(node.name));\n      return isBuiltInQuery || isReportableCustomQuery;\n    };\n\n    const isGetQueryVariant = node => {\n      return isQuery(node) && node.name.startsWith('get');\n    };\n\n    const isQueryQueryVariant = node => {\n      return isQuery(node) && node.name.startsWith('query');\n    };\n\n    const isFindQueryVariant = node => {\n      return isQuery(node) && node.name.startsWith('find');\n    };\n\n    const isSyncQuery = node => {\n      return isGetQueryVariant(node) || isQueryQueryVariant(node);\n    };\n\n    const isAsyncQuery = node => {\n      return isFindQueryVariant(node);\n    };\n\n    const isCustomQuery = node => {\n      return isQuery(node) && !utils_2.ALL_QUERIES_COMBINATIONS.includes(node.name);\n    };\n\n    const isBuiltInQuery = node => {\n      return isQuery(node) && utils_2.ALL_QUERIES_COMBINATIONS.includes(node.name);\n    };\n\n    const isAsyncUtil = function (node) {\n      let validNames = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : utils_2.ASYNC_UTILS;\n      return isPotentialTestingLibraryFunction(node, (identifierNodeName, originalNodeName) => {\n        return validNames.includes(identifierNodeName) || !!originalNodeName && validNames.includes(originalNodeName);\n      });\n    };\n\n    const isFireEventUtil = node => {\n      return isPotentialTestingLibraryFunction(node, (identifierNodeName, originalNodeName) => {\n        return [identifierNodeName, originalNodeName].includes('fireEvent');\n      });\n    };\n\n    const isUserEventUtil = node => {\n      const userEvent = findImportedUserEventSpecifier();\n      let userEventName;\n\n      if (userEvent) {\n        userEventName = userEvent.name;\n      } else if (isAggressiveModuleReportingEnabled()) {\n        userEventName = USER_EVENT_NAME;\n      }\n\n      if (!userEventName) {\n        return false;\n      }\n\n      return node.name === userEventName;\n    };\n\n    const isFireEventMethod = node => {\n      const fireEventUtil = findImportedTestingLibraryUtilSpecifier(FIRE_EVENT_NAME);\n      let fireEventUtilName;\n\n      if (fireEventUtil) {\n        fireEventUtilName = utils_1.ASTUtils.isIdentifier(fireEventUtil) ? fireEventUtil.name : fireEventUtil.local.name;\n      } else if (isAggressiveModuleReportingEnabled()) {\n        fireEventUtilName = FIRE_EVENT_NAME;\n      }\n\n      if (!fireEventUtilName) {\n        return false;\n      }\n\n      const parentMemberExpression = node.parent && (0, node_utils_1.isMemberExpression)(node.parent) ? node.parent : undefined;\n      const parentCallExpression = node.parent && (0, node_utils_1.isCallExpression)(node.parent) ? node.parent : undefined;\n\n      if (!parentMemberExpression && !parentCallExpression) {\n        return false;\n      }\n\n      if (parentCallExpression) {\n        return [fireEventUtilName, FIRE_EVENT_NAME].includes(node.name);\n      }\n\n      const definedParentMemberExpression = parentMemberExpression;\n      const regularCall = utils_1.ASTUtils.isIdentifier(definedParentMemberExpression.object) && (0, node_utils_1.isCallExpression)(definedParentMemberExpression.parent) && definedParentMemberExpression.object.name === fireEventUtilName && node.name !== FIRE_EVENT_NAME && node.name !== fireEventUtilName;\n      const wildcardCall = (0, node_utils_1.isMemberExpression)(definedParentMemberExpression.object) && utils_1.ASTUtils.isIdentifier(definedParentMemberExpression.object.object) && definedParentMemberExpression.object.object.name === fireEventUtilName && utils_1.ASTUtils.isIdentifier(definedParentMemberExpression.object.property) && definedParentMemberExpression.object.property.name === FIRE_EVENT_NAME && node.name !== FIRE_EVENT_NAME && node.name !== fireEventUtilName;\n      const wildcardCallWithCallExpression = utils_1.ASTUtils.isIdentifier(definedParentMemberExpression.object) && definedParentMemberExpression.object.name === fireEventUtilName && utils_1.ASTUtils.isIdentifier(definedParentMemberExpression.property) && definedParentMemberExpression.property.name === FIRE_EVENT_NAME && !(0, node_utils_1.isMemberExpression)(definedParentMemberExpression.parent) && node.name === FIRE_EVENT_NAME && node.name !== fireEventUtilName;\n      return regularCall || wildcardCall || wildcardCallWithCallExpression;\n    };\n\n    const isUserEventMethod = node => {\n      const userEvent = findImportedUserEventSpecifier();\n      let userEventName;\n\n      if (userEvent) {\n        userEventName = userEvent.name;\n      } else if (isAggressiveModuleReportingEnabled()) {\n        userEventName = USER_EVENT_NAME;\n      }\n\n      if (!userEventName) {\n        return false;\n      }\n\n      const parentMemberExpression = node.parent && (0, node_utils_1.isMemberExpression)(node.parent) ? node.parent : undefined;\n\n      if (!parentMemberExpression) {\n        return false;\n      }\n\n      if ([userEventName, USER_EVENT_NAME].includes(node.name) || utils_1.ASTUtils.isIdentifier(parentMemberExpression.object) && parentMemberExpression.object.name === node.name) {\n        return false;\n      }\n\n      return utils_1.ASTUtils.isIdentifier(parentMemberExpression.object) && parentMemberExpression.object.name === userEventName;\n    };\n\n    const isRenderUtil = node => isPotentialTestingLibraryFunction(node, (identifierNodeName, originalNodeName) => {\n      if (isAggressiveRenderReportingEnabled()) {\n        return identifierNodeName.toLowerCase().includes(RENDER_NAME);\n      }\n\n      return [RENDER_NAME, ...getCustomRenders()].some(validRenderName => validRenderName === identifierNodeName || Boolean(originalNodeName) && validRenderName === originalNodeName);\n    });\n\n    const isCreateEventUtil = node => {\n      const isCreateEventCallback = (identifierNodeName, originalNodeName) => [identifierNodeName, originalNodeName].includes(CREATE_EVENT_NAME);\n\n      if ((0, node_utils_1.isCallExpression)(node) && (0, node_utils_1.isMemberExpression)(node.callee) && utils_1.ASTUtils.isIdentifier(node.callee.object)) {\n        return isPotentialTestingLibraryFunction(node.callee.object, isCreateEventCallback);\n      }\n\n      if ((0, node_utils_1.isCallExpression)(node) && (0, node_utils_1.isMemberExpression)(node.callee) && (0, node_utils_1.isMemberExpression)(node.callee.object) && utils_1.ASTUtils.isIdentifier(node.callee.object.property)) {\n        return isPotentialTestingLibraryFunction(node.callee.object.property, isCreateEventCallback);\n      }\n\n      const identifier = (0, node_utils_1.getDeepestIdentifierNode)(node);\n      return isPotentialTestingLibraryFunction(identifier, isCreateEventCallback);\n    };\n\n    const isRenderVariableDeclarator = node => {\n      if (!node.init) {\n        return false;\n      }\n\n      const initIdentifierNode = (0, node_utils_1.getDeepestIdentifierNode)(node.init);\n\n      if (!initIdentifierNode) {\n        return false;\n      }\n\n      return isRenderUtil(initIdentifierNode);\n    };\n\n    const isDebugUtil = function (identifierNode) {\n      let validNames = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : utils_2.DEBUG_UTILS;\n      const isBuiltInConsole = (0, node_utils_1.isMemberExpression)(identifierNode.parent) && utils_1.ASTUtils.isIdentifier(identifierNode.parent.object) && identifierNode.parent.object.name === 'console';\n      return !isBuiltInConsole && isPotentialTestingLibraryFunction(identifierNode, (identifierNodeName, originalNodeName) => {\n        return validNames.includes(identifierNodeName) || !!originalNodeName && validNames.includes(originalNodeName);\n      });\n    };\n\n    const isActUtil = node => {\n      const isTestingLibraryAct = isPotentialTestingLibraryFunction(node, (identifierNodeName, originalNodeName) => {\n        return [identifierNodeName, originalNodeName].filter(Boolean).includes('act');\n      });\n\n      const isReactDomTestUtilsAct = (() => {\n        if (!importedReactDomTestUtilsNode) {\n          return false;\n        }\n\n        const referenceNode = (0, node_utils_1.getReferenceNode)(node);\n        const referenceNodeIdentifier = (0, node_utils_1.getPropertyIdentifierNode)(referenceNode);\n\n        if (!referenceNodeIdentifier) {\n          return false;\n        }\n\n        const importedUtilSpecifier = (0, node_utils_1.findImportSpecifier)(node.name, importedReactDomTestUtilsNode);\n\n        if (!importedUtilSpecifier) {\n          return false;\n        }\n\n        const importDeclaration = (() => {\n          if ((0, node_utils_1.isImportDeclaration)(importedUtilSpecifier.parent)) {\n            return importedUtilSpecifier.parent;\n          }\n\n          const variableDeclarator = (0, node_utils_1.findClosestVariableDeclaratorNode)(importedUtilSpecifier);\n\n          if ((0, node_utils_1.isCallExpression)(variableDeclarator === null || variableDeclarator === void 0 ? void 0 : variableDeclarator.init)) {\n            return variableDeclarator === null || variableDeclarator === void 0 ? void 0 : variableDeclarator.init;\n          }\n\n          return undefined;\n        })();\n\n        if (!importDeclaration) {\n          return false;\n        }\n\n        const importDeclarationName = (0, node_utils_1.getImportModuleName)(importDeclaration);\n\n        if (!importDeclarationName) {\n          return false;\n        }\n\n        if (importDeclarationName !== REACT_DOM_TEST_UTILS_PACKAGE) {\n          return false;\n        }\n\n        return (0, node_utils_1.hasImportMatch)(importedUtilSpecifier, referenceNodeIdentifier.name);\n      })();\n\n      return isTestingLibraryAct || isReactDomTestUtilsAct;\n    };\n\n    const isTestingLibraryUtil = node => {\n      return isAsyncUtil(node) || isQuery(node) || isRenderUtil(node) || isFireEventMethod(node) || isUserEventMethod(node) || isActUtil(node) || isCreateEventUtil(node);\n    };\n\n    const isPresenceAssert = node => {\n      const {\n        matcher,\n        isNegated\n      } = (0, node_utils_1.getAssertNodeInfo)(node);\n\n      if (!matcher) {\n        return false;\n      }\n\n      return isNegated ? utils_2.ABSENCE_MATCHERS.includes(matcher) : utils_2.PRESENCE_MATCHERS.includes(matcher);\n    };\n\n    const isAbsenceAssert = node => {\n      const {\n        matcher,\n        isNegated\n      } = (0, node_utils_1.getAssertNodeInfo)(node);\n\n      if (!matcher) {\n        return false;\n      }\n\n      return isNegated ? utils_2.PRESENCE_MATCHERS.includes(matcher) : utils_2.ABSENCE_MATCHERS.includes(matcher);\n    };\n\n    const findImportedTestingLibraryUtilSpecifier = specifierName => {\n      var _a;\n\n      const node = (_a = getCustomModuleImportNode()) !== null && _a !== void 0 ? _a : getTestingLibraryImportNode();\n\n      if (!node) {\n        return undefined;\n      }\n\n      return (0, node_utils_1.findImportSpecifier)(specifierName, node);\n    };\n\n    const findImportedUserEventSpecifier = () => {\n      if (!importedUserEventLibraryNode) {\n        return null;\n      }\n\n      if ((0, node_utils_1.isImportDeclaration)(importedUserEventLibraryNode)) {\n        const userEventIdentifier = importedUserEventLibraryNode.specifiers.find(specifier => (0, node_utils_1.isImportDefaultSpecifier)(specifier));\n\n        if (userEventIdentifier) {\n          return userEventIdentifier.local;\n        }\n      } else {\n        if (!utils_1.ASTUtils.isVariableDeclarator(importedUserEventLibraryNode.parent)) {\n          return null;\n        }\n\n        const requireNode = importedUserEventLibraryNode.parent;\n\n        if (!utils_1.ASTUtils.isIdentifier(requireNode.id)) {\n          return null;\n        }\n\n        return requireNode.id;\n      }\n\n      return null;\n    };\n\n    const getTestingLibraryImportedUtilSpecifier = node => {\n      var _a;\n\n      const identifierName = (_a = (0, node_utils_1.getPropertyIdentifierNode)(node)) === null || _a === void 0 ? void 0 : _a.name;\n\n      if (!identifierName) {\n        return undefined;\n      }\n\n      return findImportedTestingLibraryUtilSpecifier(identifierName);\n    };\n\n    const canReportErrors = () => {\n      return skipRuleReportingCheck || isTestingLibraryImported();\n    };\n\n    const isNodeComingFromTestingLibrary = node => {\n      var _a;\n\n      const importNode = getTestingLibraryImportedUtilSpecifier(node);\n\n      if (!importNode) {\n        return false;\n      }\n\n      const referenceNode = (0, node_utils_1.getReferenceNode)(node);\n      const referenceNodeIdentifier = (0, node_utils_1.getPropertyIdentifierNode)(referenceNode);\n\n      if (!referenceNodeIdentifier) {\n        return false;\n      }\n\n      const importDeclaration = (() => {\n        if ((0, node_utils_1.isImportDeclaration)(importNode.parent)) {\n          return importNode.parent;\n        }\n\n        const variableDeclarator = (0, node_utils_1.findClosestVariableDeclaratorNode)(importNode);\n\n        if ((0, node_utils_1.isCallExpression)(variableDeclarator === null || variableDeclarator === void 0 ? void 0 : variableDeclarator.init)) {\n          return variableDeclarator === null || variableDeclarator === void 0 ? void 0 : variableDeclarator.init;\n        }\n\n        return undefined;\n      })();\n\n      if (!importDeclaration) {\n        return false;\n      }\n\n      const importDeclarationName = (0, node_utils_1.getImportModuleName)(importDeclaration);\n\n      if (!importDeclarationName) {\n        return false;\n      }\n\n      const identifierName = (_a = (0, node_utils_1.getPropertyIdentifierNode)(node)) === null || _a === void 0 ? void 0 : _a.name;\n\n      if (!identifierName) {\n        return false;\n      }\n\n      const hasImportElementMatch = (0, node_utils_1.hasImportMatch)(importNode, identifierName);\n      const hasImportModuleMatch = /testing-library/g.test(importDeclarationName) || typeof customModuleSetting === 'string' && importDeclarationName.endsWith(customModuleSetting);\n      return hasImportElementMatch && hasImportModuleMatch;\n    };\n\n    const helpers = {\n      getTestingLibraryImportNode,\n      getCustomModuleImportNode,\n      getTestingLibraryImportName,\n      getCustomModuleImportName,\n      isTestingLibraryImported,\n      isTestingLibraryUtil,\n      isGetQueryVariant,\n      isQueryQueryVariant,\n      isFindQueryVariant,\n      isSyncQuery,\n      isAsyncQuery,\n      isQuery,\n      isCustomQuery,\n      isBuiltInQuery,\n      isAsyncUtil,\n      isFireEventUtil,\n      isUserEventUtil,\n      isFireEventMethod,\n      isUserEventMethod,\n      isRenderUtil,\n      isCreateEventUtil,\n      isRenderVariableDeclarator,\n      isDebugUtil,\n      isActUtil,\n      isPresenceAssert,\n      isAbsenceAssert,\n      canReportErrors,\n      findImportedTestingLibraryUtilSpecifier,\n      isNodeComingFromTestingLibrary\n    };\n    const detectionInstructions = {\n      ImportDeclaration(node) {\n        if (typeof node.source.value !== 'string') {\n          return;\n        }\n\n        if (!importedTestingLibraryNode && /testing-library/g.test(node.source.value)) {\n          importedTestingLibraryNode = node;\n        }\n\n        const customModule = getCustomModule();\n\n        if (customModule && !importedCustomModuleNode && node.source.value.endsWith(customModule)) {\n          importedCustomModuleNode = node;\n        }\n\n        if (!importedUserEventLibraryNode && node.source.value === USER_EVENT_PACKAGE) {\n          importedUserEventLibraryNode = node;\n        }\n\n        if (!importedUserEventLibraryNode && node.source.value === REACT_DOM_TEST_UTILS_PACKAGE) {\n          importedReactDomTestUtilsNode = node;\n        }\n      },\n\n      [`CallExpression > Identifier[name=\"require\"]`](node) {\n        const callExpression = node.parent;\n        const {\n          arguments: args\n        } = callExpression;\n\n        if (!importedTestingLibraryNode && args.some(arg => (0, node_utils_1.isLiteral)(arg) && typeof arg.value === 'string' && /testing-library/g.test(arg.value))) {\n          importedTestingLibraryNode = callExpression;\n        }\n\n        const customModule = getCustomModule();\n\n        if (!importedCustomModuleNode && args.some(arg => customModule && (0, node_utils_1.isLiteral)(arg) && typeof arg.value === 'string' && arg.value.endsWith(customModule))) {\n          importedCustomModuleNode = callExpression;\n        }\n\n        if (!importedCustomModuleNode && args.some(arg => (0, node_utils_1.isLiteral)(arg) && typeof arg.value === 'string' && arg.value === USER_EVENT_PACKAGE)) {\n          importedUserEventLibraryNode = callExpression;\n        }\n\n        if (!importedReactDomTestUtilsNode && args.some(arg => (0, node_utils_1.isLiteral)(arg) && typeof arg.value === 'string' && arg.value === REACT_DOM_TEST_UTILS_PACKAGE)) {\n          importedReactDomTestUtilsNode = callExpression;\n        }\n      }\n\n    };\n    const ruleInstructions = ruleCreate(context, optionsWithDefault, helpers);\n    const enhancedRuleInstructions = {};\n    const allKeys = new Set(Object.keys(detectionInstructions).concat(Object.keys(ruleInstructions)));\n    allKeys.forEach(instruction => {\n      enhancedRuleInstructions[instruction] = node => {\n        var _a, _b;\n\n        if (instruction in detectionInstructions) {\n          (_a = detectionInstructions[instruction]) === null || _a === void 0 ? void 0 : _a.call(detectionInstructions, node);\n        }\n\n        if (canReportErrors() && ruleInstructions[instruction]) {\n          return (_b = ruleInstructions[instruction]) === null || _b === void 0 ? void 0 : _b.call(ruleInstructions, node);\n        }\n\n        return undefined;\n      };\n    });\n    return enhancedRuleInstructions;\n  };\n}\n\nexports.detectTestingLibraryUtils = detectTestingLibraryUtils;","map":{"version":3,"names":["Object","defineProperty","exports","value","detectTestingLibraryUtils","utils_1","require","node_utils_1","utils_2","SETTING_OPTION_OFF","USER_EVENT_PACKAGE","REACT_DOM_TEST_UTILS_PACKAGE","FIRE_EVENT_NAME","CREATE_EVENT_NAME","USER_EVENT_NAME","RENDER_NAME","ruleCreate","skipRuleReportingCheck","context","optionsWithDefault","importedTestingLibraryNode","importedCustomModuleNode","importedUserEventLibraryNode","importedReactDomTestUtilsNode","customModuleSetting","settings","customRendersSetting","customQueriesSetting","isPotentialTestingLibraryFunction","node","isPotentialFunctionCallback","referenceNode","getReferenceNode","referenceNodeIdentifier","getPropertyIdentifierNode","importedUtilSpecifier","getTestingLibraryImportedUtilSpecifier","originalNodeName","isImportSpecifier","local","name","imported","undefined","isAggressiveModuleReportingEnabled","isNodeComingFromTestingLibrary","isAggressiveRenderReportingEnabled","isSwitchedOff","hasCustomOptions","Array","isArray","length","isAggressiveQueryReportingEnabled","getCustomModule","getCustomRenders","getCustomQueries","getTestingLibraryImportNode","getCustomModuleImportNode","getTestingLibraryImportName","getImportModuleName","getCustomModuleImportName","isTestingLibraryImported","isStrict","isSomeModuleImported","isQuery","hasQueryPattern","test","customQueries","isBuiltInQuery","ALL_QUERIES_COMBINATIONS","includes","isReportableCustomQuery","some","pattern","RegExp","isGetQueryVariant","startsWith","isQueryQueryVariant","isFindQueryVariant","isSyncQuery","isAsyncQuery","isCustomQuery","isAsyncUtil","validNames","ASYNC_UTILS","identifierNodeName","isFireEventUtil","isUserEventUtil","userEvent","findImportedUserEventSpecifier","userEventName","isFireEventMethod","fireEventUtil","findImportedTestingLibraryUtilSpecifier","fireEventUtilName","ASTUtils","isIdentifier","parentMemberExpression","parent","isMemberExpression","parentCallExpression","isCallExpression","definedParentMemberExpression","regularCall","object","wildcardCall","property","wildcardCallWithCallExpression","isUserEventMethod","isRenderUtil","toLowerCase","validRenderName","Boolean","isCreateEventUtil","isCreateEventCallback","callee","identifier","getDeepestIdentifierNode","isRenderVariableDeclarator","init","initIdentifierNode","isDebugUtil","identifierNode","DEBUG_UTILS","isBuiltInConsole","isActUtil","isTestingLibraryAct","filter","isReactDomTestUtilsAct","findImportSpecifier","importDeclaration","isImportDeclaration","variableDeclarator","findClosestVariableDeclaratorNode","importDeclarationName","hasImportMatch","isTestingLibraryUtil","isPresenceAssert","matcher","isNegated","getAssertNodeInfo","ABSENCE_MATCHERS","PRESENCE_MATCHERS","isAbsenceAssert","specifierName","_a","userEventIdentifier","specifiers","find","specifier","isImportDefaultSpecifier","isVariableDeclarator","requireNode","id","identifierName","canReportErrors","importNode","hasImportElementMatch","hasImportModuleMatch","endsWith","helpers","detectionInstructions","ImportDeclaration","source","customModule","callExpression","arguments","args","arg","isLiteral","ruleInstructions","enhancedRuleInstructions","allKeys","Set","keys","concat","forEach","instruction","_b","call"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/eslint-plugin-testing-library/create-testing-library-rule/detect-testing-library-utils.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.detectTestingLibraryUtils = void 0;\nconst utils_1 = require(\"@typescript-eslint/utils\");\nconst node_utils_1 = require(\"../node-utils\");\nconst utils_2 = require(\"../utils\");\nconst SETTING_OPTION_OFF = 'off';\nconst USER_EVENT_PACKAGE = '@testing-library/user-event';\nconst REACT_DOM_TEST_UTILS_PACKAGE = 'react-dom/test-utils';\nconst FIRE_EVENT_NAME = 'fireEvent';\nconst CREATE_EVENT_NAME = 'createEvent';\nconst USER_EVENT_NAME = 'userEvent';\nconst RENDER_NAME = 'render';\nfunction detectTestingLibraryUtils(ruleCreate, { skipRuleReportingCheck = false } = {}) {\n    return (context, optionsWithDefault) => {\n        let importedTestingLibraryNode = null;\n        let importedCustomModuleNode = null;\n        let importedUserEventLibraryNode = null;\n        let importedReactDomTestUtilsNode = null;\n        const customModuleSetting = context.settings['testing-library/utils-module'];\n        const customRendersSetting = context.settings['testing-library/custom-renders'];\n        const customQueriesSetting = context.settings['testing-library/custom-queries'];\n        function isPotentialTestingLibraryFunction(node, isPotentialFunctionCallback) {\n            if (!node) {\n                return false;\n            }\n            const referenceNode = (0, node_utils_1.getReferenceNode)(node);\n            const referenceNodeIdentifier = (0, node_utils_1.getPropertyIdentifierNode)(referenceNode);\n            if (!referenceNodeIdentifier) {\n                return false;\n            }\n            const importedUtilSpecifier = getTestingLibraryImportedUtilSpecifier(referenceNodeIdentifier);\n            const originalNodeName = (0, node_utils_1.isImportSpecifier)(importedUtilSpecifier) &&\n                importedUtilSpecifier.local.name !== importedUtilSpecifier.imported.name\n                ? importedUtilSpecifier.imported.name\n                : undefined;\n            if (!isPotentialFunctionCallback(node.name, originalNodeName)) {\n                return false;\n            }\n            if (isAggressiveModuleReportingEnabled()) {\n                return true;\n            }\n            return isNodeComingFromTestingLibrary(referenceNodeIdentifier);\n        }\n        const isAggressiveModuleReportingEnabled = () => !customModuleSetting;\n        const isAggressiveRenderReportingEnabled = () => {\n            const isSwitchedOff = customRendersSetting === SETTING_OPTION_OFF;\n            const hasCustomOptions = Array.isArray(customRendersSetting) && customRendersSetting.length > 0;\n            return !isSwitchedOff && !hasCustomOptions;\n        };\n        const isAggressiveQueryReportingEnabled = () => {\n            const isSwitchedOff = customQueriesSetting === SETTING_OPTION_OFF;\n            const hasCustomOptions = Array.isArray(customQueriesSetting) && customQueriesSetting.length > 0;\n            return !isSwitchedOff && !hasCustomOptions;\n        };\n        const getCustomModule = () => {\n            if (!isAggressiveModuleReportingEnabled() &&\n                customModuleSetting !== SETTING_OPTION_OFF) {\n                return customModuleSetting;\n            }\n            return undefined;\n        };\n        const getCustomRenders = () => {\n            if (!isAggressiveRenderReportingEnabled() &&\n                customRendersSetting !== SETTING_OPTION_OFF) {\n                return customRendersSetting;\n            }\n            return [];\n        };\n        const getCustomQueries = () => {\n            if (!isAggressiveQueryReportingEnabled() &&\n                customQueriesSetting !== SETTING_OPTION_OFF) {\n                return customQueriesSetting;\n            }\n            return [];\n        };\n        const getTestingLibraryImportNode = () => {\n            return importedTestingLibraryNode;\n        };\n        const getCustomModuleImportNode = () => {\n            return importedCustomModuleNode;\n        };\n        const getTestingLibraryImportName = () => {\n            return (0, node_utils_1.getImportModuleName)(importedTestingLibraryNode);\n        };\n        const getCustomModuleImportName = () => {\n            return (0, node_utils_1.getImportModuleName)(importedCustomModuleNode);\n        };\n        const isTestingLibraryImported = (isStrict = false) => {\n            const isSomeModuleImported = !!importedTestingLibraryNode || !!importedCustomModuleNode;\n            return ((!isStrict && isAggressiveModuleReportingEnabled()) ||\n                isSomeModuleImported);\n        };\n        const isQuery = (node) => {\n            const hasQueryPattern = /^(get|query|find)(All)?By.+$/.test(node.name);\n            if (!hasQueryPattern) {\n                return false;\n            }\n            if (isAggressiveQueryReportingEnabled()) {\n                return true;\n            }\n            const customQueries = getCustomQueries();\n            const isBuiltInQuery = utils_2.ALL_QUERIES_COMBINATIONS.includes(node.name);\n            const isReportableCustomQuery = customQueries.some((pattern) => new RegExp(pattern).test(node.name));\n            return isBuiltInQuery || isReportableCustomQuery;\n        };\n        const isGetQueryVariant = (node) => {\n            return isQuery(node) && node.name.startsWith('get');\n        };\n        const isQueryQueryVariant = (node) => {\n            return isQuery(node) && node.name.startsWith('query');\n        };\n        const isFindQueryVariant = (node) => {\n            return isQuery(node) && node.name.startsWith('find');\n        };\n        const isSyncQuery = (node) => {\n            return isGetQueryVariant(node) || isQueryQueryVariant(node);\n        };\n        const isAsyncQuery = (node) => {\n            return isFindQueryVariant(node);\n        };\n        const isCustomQuery = (node) => {\n            return isQuery(node) && !utils_2.ALL_QUERIES_COMBINATIONS.includes(node.name);\n        };\n        const isBuiltInQuery = (node) => {\n            return isQuery(node) && utils_2.ALL_QUERIES_COMBINATIONS.includes(node.name);\n        };\n        const isAsyncUtil = (node, validNames = utils_2.ASYNC_UTILS) => {\n            return isPotentialTestingLibraryFunction(node, (identifierNodeName, originalNodeName) => {\n                return (validNames.includes(identifierNodeName) ||\n                    (!!originalNodeName &&\n                        validNames.includes(originalNodeName)));\n            });\n        };\n        const isFireEventUtil = (node) => {\n            return isPotentialTestingLibraryFunction(node, (identifierNodeName, originalNodeName) => {\n                return [identifierNodeName, originalNodeName].includes('fireEvent');\n            });\n        };\n        const isUserEventUtil = (node) => {\n            const userEvent = findImportedUserEventSpecifier();\n            let userEventName;\n            if (userEvent) {\n                userEventName = userEvent.name;\n            }\n            else if (isAggressiveModuleReportingEnabled()) {\n                userEventName = USER_EVENT_NAME;\n            }\n            if (!userEventName) {\n                return false;\n            }\n            return node.name === userEventName;\n        };\n        const isFireEventMethod = (node) => {\n            const fireEventUtil = findImportedTestingLibraryUtilSpecifier(FIRE_EVENT_NAME);\n            let fireEventUtilName;\n            if (fireEventUtil) {\n                fireEventUtilName = utils_1.ASTUtils.isIdentifier(fireEventUtil)\n                    ? fireEventUtil.name\n                    : fireEventUtil.local.name;\n            }\n            else if (isAggressiveModuleReportingEnabled()) {\n                fireEventUtilName = FIRE_EVENT_NAME;\n            }\n            if (!fireEventUtilName) {\n                return false;\n            }\n            const parentMemberExpression = node.parent && (0, node_utils_1.isMemberExpression)(node.parent)\n                ? node.parent\n                : undefined;\n            const parentCallExpression = node.parent && (0, node_utils_1.isCallExpression)(node.parent) ? node.parent : undefined;\n            if (!parentMemberExpression && !parentCallExpression) {\n                return false;\n            }\n            if (parentCallExpression) {\n                return [fireEventUtilName, FIRE_EVENT_NAME].includes(node.name);\n            }\n            const definedParentMemberExpression = parentMemberExpression;\n            const regularCall = utils_1.ASTUtils.isIdentifier(definedParentMemberExpression.object) &&\n                (0, node_utils_1.isCallExpression)(definedParentMemberExpression.parent) &&\n                definedParentMemberExpression.object.name === fireEventUtilName &&\n                node.name !== FIRE_EVENT_NAME &&\n                node.name !== fireEventUtilName;\n            const wildcardCall = (0, node_utils_1.isMemberExpression)(definedParentMemberExpression.object) &&\n                utils_1.ASTUtils.isIdentifier(definedParentMemberExpression.object.object) &&\n                definedParentMemberExpression.object.object.name ===\n                    fireEventUtilName &&\n                utils_1.ASTUtils.isIdentifier(definedParentMemberExpression.object.property) &&\n                definedParentMemberExpression.object.property.name ===\n                    FIRE_EVENT_NAME &&\n                node.name !== FIRE_EVENT_NAME &&\n                node.name !== fireEventUtilName;\n            const wildcardCallWithCallExpression = utils_1.ASTUtils.isIdentifier(definedParentMemberExpression.object) &&\n                definedParentMemberExpression.object.name === fireEventUtilName &&\n                utils_1.ASTUtils.isIdentifier(definedParentMemberExpression.property) &&\n                definedParentMemberExpression.property.name === FIRE_EVENT_NAME &&\n                !(0, node_utils_1.isMemberExpression)(definedParentMemberExpression.parent) &&\n                node.name === FIRE_EVENT_NAME &&\n                node.name !== fireEventUtilName;\n            return regularCall || wildcardCall || wildcardCallWithCallExpression;\n        };\n        const isUserEventMethod = (node) => {\n            const userEvent = findImportedUserEventSpecifier();\n            let userEventName;\n            if (userEvent) {\n                userEventName = userEvent.name;\n            }\n            else if (isAggressiveModuleReportingEnabled()) {\n                userEventName = USER_EVENT_NAME;\n            }\n            if (!userEventName) {\n                return false;\n            }\n            const parentMemberExpression = node.parent && (0, node_utils_1.isMemberExpression)(node.parent)\n                ? node.parent\n                : undefined;\n            if (!parentMemberExpression) {\n                return false;\n            }\n            if ([userEventName, USER_EVENT_NAME].includes(node.name) ||\n                (utils_1.ASTUtils.isIdentifier(parentMemberExpression.object) &&\n                    parentMemberExpression.object.name === node.name)) {\n                return false;\n            }\n            return (utils_1.ASTUtils.isIdentifier(parentMemberExpression.object) &&\n                parentMemberExpression.object.name === userEventName);\n        };\n        const isRenderUtil = (node) => isPotentialTestingLibraryFunction(node, (identifierNodeName, originalNodeName) => {\n            if (isAggressiveRenderReportingEnabled()) {\n                return identifierNodeName.toLowerCase().includes(RENDER_NAME);\n            }\n            return [RENDER_NAME, ...getCustomRenders()].some((validRenderName) => validRenderName === identifierNodeName ||\n                (Boolean(originalNodeName) &&\n                    validRenderName === originalNodeName));\n        });\n        const isCreateEventUtil = (node) => {\n            const isCreateEventCallback = (identifierNodeName, originalNodeName) => [identifierNodeName, originalNodeName].includes(CREATE_EVENT_NAME);\n            if ((0, node_utils_1.isCallExpression)(node) &&\n                (0, node_utils_1.isMemberExpression)(node.callee) &&\n                utils_1.ASTUtils.isIdentifier(node.callee.object)) {\n                return isPotentialTestingLibraryFunction(node.callee.object, isCreateEventCallback);\n            }\n            if ((0, node_utils_1.isCallExpression)(node) &&\n                (0, node_utils_1.isMemberExpression)(node.callee) &&\n                (0, node_utils_1.isMemberExpression)(node.callee.object) &&\n                utils_1.ASTUtils.isIdentifier(node.callee.object.property)) {\n                return isPotentialTestingLibraryFunction(node.callee.object.property, isCreateEventCallback);\n            }\n            const identifier = (0, node_utils_1.getDeepestIdentifierNode)(node);\n            return isPotentialTestingLibraryFunction(identifier, isCreateEventCallback);\n        };\n        const isRenderVariableDeclarator = (node) => {\n            if (!node.init) {\n                return false;\n            }\n            const initIdentifierNode = (0, node_utils_1.getDeepestIdentifierNode)(node.init);\n            if (!initIdentifierNode) {\n                return false;\n            }\n            return isRenderUtil(initIdentifierNode);\n        };\n        const isDebugUtil = (identifierNode, validNames = utils_2.DEBUG_UTILS) => {\n            const isBuiltInConsole = (0, node_utils_1.isMemberExpression)(identifierNode.parent) &&\n                utils_1.ASTUtils.isIdentifier(identifierNode.parent.object) &&\n                identifierNode.parent.object.name === 'console';\n            return (!isBuiltInConsole &&\n                isPotentialTestingLibraryFunction(identifierNode, (identifierNodeName, originalNodeName) => {\n                    return (validNames.includes(identifierNodeName) ||\n                        (!!originalNodeName &&\n                            validNames.includes(originalNodeName)));\n                }));\n        };\n        const isActUtil = (node) => {\n            const isTestingLibraryAct = isPotentialTestingLibraryFunction(node, (identifierNodeName, originalNodeName) => {\n                return [identifierNodeName, originalNodeName]\n                    .filter(Boolean)\n                    .includes('act');\n            });\n            const isReactDomTestUtilsAct = (() => {\n                if (!importedReactDomTestUtilsNode) {\n                    return false;\n                }\n                const referenceNode = (0, node_utils_1.getReferenceNode)(node);\n                const referenceNodeIdentifier = (0, node_utils_1.getPropertyIdentifierNode)(referenceNode);\n                if (!referenceNodeIdentifier) {\n                    return false;\n                }\n                const importedUtilSpecifier = (0, node_utils_1.findImportSpecifier)(node.name, importedReactDomTestUtilsNode);\n                if (!importedUtilSpecifier) {\n                    return false;\n                }\n                const importDeclaration = (() => {\n                    if ((0, node_utils_1.isImportDeclaration)(importedUtilSpecifier.parent)) {\n                        return importedUtilSpecifier.parent;\n                    }\n                    const variableDeclarator = (0, node_utils_1.findClosestVariableDeclaratorNode)(importedUtilSpecifier);\n                    if ((0, node_utils_1.isCallExpression)(variableDeclarator === null || variableDeclarator === void 0 ? void 0 : variableDeclarator.init)) {\n                        return variableDeclarator === null || variableDeclarator === void 0 ? void 0 : variableDeclarator.init;\n                    }\n                    return undefined;\n                })();\n                if (!importDeclaration) {\n                    return false;\n                }\n                const importDeclarationName = (0, node_utils_1.getImportModuleName)(importDeclaration);\n                if (!importDeclarationName) {\n                    return false;\n                }\n                if (importDeclarationName !== REACT_DOM_TEST_UTILS_PACKAGE) {\n                    return false;\n                }\n                return (0, node_utils_1.hasImportMatch)(importedUtilSpecifier, referenceNodeIdentifier.name);\n            })();\n            return isTestingLibraryAct || isReactDomTestUtilsAct;\n        };\n        const isTestingLibraryUtil = (node) => {\n            return (isAsyncUtil(node) ||\n                isQuery(node) ||\n                isRenderUtil(node) ||\n                isFireEventMethod(node) ||\n                isUserEventMethod(node) ||\n                isActUtil(node) ||\n                isCreateEventUtil(node));\n        };\n        const isPresenceAssert = (node) => {\n            const { matcher, isNegated } = (0, node_utils_1.getAssertNodeInfo)(node);\n            if (!matcher) {\n                return false;\n            }\n            return isNegated\n                ? utils_2.ABSENCE_MATCHERS.includes(matcher)\n                : utils_2.PRESENCE_MATCHERS.includes(matcher);\n        };\n        const isAbsenceAssert = (node) => {\n            const { matcher, isNegated } = (0, node_utils_1.getAssertNodeInfo)(node);\n            if (!matcher) {\n                return false;\n            }\n            return isNegated\n                ? utils_2.PRESENCE_MATCHERS.includes(matcher)\n                : utils_2.ABSENCE_MATCHERS.includes(matcher);\n        };\n        const findImportedTestingLibraryUtilSpecifier = (specifierName) => {\n            var _a;\n            const node = (_a = getCustomModuleImportNode()) !== null && _a !== void 0 ? _a : getTestingLibraryImportNode();\n            if (!node) {\n                return undefined;\n            }\n            return (0, node_utils_1.findImportSpecifier)(specifierName, node);\n        };\n        const findImportedUserEventSpecifier = () => {\n            if (!importedUserEventLibraryNode) {\n                return null;\n            }\n            if ((0, node_utils_1.isImportDeclaration)(importedUserEventLibraryNode)) {\n                const userEventIdentifier = importedUserEventLibraryNode.specifiers.find((specifier) => (0, node_utils_1.isImportDefaultSpecifier)(specifier));\n                if (userEventIdentifier) {\n                    return userEventIdentifier.local;\n                }\n            }\n            else {\n                if (!utils_1.ASTUtils.isVariableDeclarator(importedUserEventLibraryNode.parent)) {\n                    return null;\n                }\n                const requireNode = importedUserEventLibraryNode.parent;\n                if (!utils_1.ASTUtils.isIdentifier(requireNode.id)) {\n                    return null;\n                }\n                return requireNode.id;\n            }\n            return null;\n        };\n        const getTestingLibraryImportedUtilSpecifier = (node) => {\n            var _a;\n            const identifierName = (_a = (0, node_utils_1.getPropertyIdentifierNode)(node)) === null || _a === void 0 ? void 0 : _a.name;\n            if (!identifierName) {\n                return undefined;\n            }\n            return findImportedTestingLibraryUtilSpecifier(identifierName);\n        };\n        const canReportErrors = () => {\n            return skipRuleReportingCheck || isTestingLibraryImported();\n        };\n        const isNodeComingFromTestingLibrary = (node) => {\n            var _a;\n            const importNode = getTestingLibraryImportedUtilSpecifier(node);\n            if (!importNode) {\n                return false;\n            }\n            const referenceNode = (0, node_utils_1.getReferenceNode)(node);\n            const referenceNodeIdentifier = (0, node_utils_1.getPropertyIdentifierNode)(referenceNode);\n            if (!referenceNodeIdentifier) {\n                return false;\n            }\n            const importDeclaration = (() => {\n                if ((0, node_utils_1.isImportDeclaration)(importNode.parent)) {\n                    return importNode.parent;\n                }\n                const variableDeclarator = (0, node_utils_1.findClosestVariableDeclaratorNode)(importNode);\n                if ((0, node_utils_1.isCallExpression)(variableDeclarator === null || variableDeclarator === void 0 ? void 0 : variableDeclarator.init)) {\n                    return variableDeclarator === null || variableDeclarator === void 0 ? void 0 : variableDeclarator.init;\n                }\n                return undefined;\n            })();\n            if (!importDeclaration) {\n                return false;\n            }\n            const importDeclarationName = (0, node_utils_1.getImportModuleName)(importDeclaration);\n            if (!importDeclarationName) {\n                return false;\n            }\n            const identifierName = (_a = (0, node_utils_1.getPropertyIdentifierNode)(node)) === null || _a === void 0 ? void 0 : _a.name;\n            if (!identifierName) {\n                return false;\n            }\n            const hasImportElementMatch = (0, node_utils_1.hasImportMatch)(importNode, identifierName);\n            const hasImportModuleMatch = /testing-library/g.test(importDeclarationName) ||\n                (typeof customModuleSetting === 'string' &&\n                    importDeclarationName.endsWith(customModuleSetting));\n            return hasImportElementMatch && hasImportModuleMatch;\n        };\n        const helpers = {\n            getTestingLibraryImportNode,\n            getCustomModuleImportNode,\n            getTestingLibraryImportName,\n            getCustomModuleImportName,\n            isTestingLibraryImported,\n            isTestingLibraryUtil,\n            isGetQueryVariant,\n            isQueryQueryVariant,\n            isFindQueryVariant,\n            isSyncQuery,\n            isAsyncQuery,\n            isQuery,\n            isCustomQuery,\n            isBuiltInQuery,\n            isAsyncUtil,\n            isFireEventUtil,\n            isUserEventUtil,\n            isFireEventMethod,\n            isUserEventMethod,\n            isRenderUtil,\n            isCreateEventUtil,\n            isRenderVariableDeclarator,\n            isDebugUtil,\n            isActUtil,\n            isPresenceAssert,\n            isAbsenceAssert,\n            canReportErrors,\n            findImportedTestingLibraryUtilSpecifier,\n            isNodeComingFromTestingLibrary,\n        };\n        const detectionInstructions = {\n            ImportDeclaration(node) {\n                if (typeof node.source.value !== 'string') {\n                    return;\n                }\n                if (!importedTestingLibraryNode &&\n                    /testing-library/g.test(node.source.value)) {\n                    importedTestingLibraryNode = node;\n                }\n                const customModule = getCustomModule();\n                if (customModule &&\n                    !importedCustomModuleNode &&\n                    node.source.value.endsWith(customModule)) {\n                    importedCustomModuleNode = node;\n                }\n                if (!importedUserEventLibraryNode &&\n                    node.source.value === USER_EVENT_PACKAGE) {\n                    importedUserEventLibraryNode = node;\n                }\n                if (!importedUserEventLibraryNode &&\n                    node.source.value === REACT_DOM_TEST_UTILS_PACKAGE) {\n                    importedReactDomTestUtilsNode = node;\n                }\n            },\n            [`CallExpression > Identifier[name=\"require\"]`](node) {\n                const callExpression = node.parent;\n                const { arguments: args } = callExpression;\n                if (!importedTestingLibraryNode &&\n                    args.some((arg) => (0, node_utils_1.isLiteral)(arg) &&\n                        typeof arg.value === 'string' &&\n                        /testing-library/g.test(arg.value))) {\n                    importedTestingLibraryNode = callExpression;\n                }\n                const customModule = getCustomModule();\n                if (!importedCustomModuleNode &&\n                    args.some((arg) => customModule &&\n                        (0, node_utils_1.isLiteral)(arg) &&\n                        typeof arg.value === 'string' &&\n                        arg.value.endsWith(customModule))) {\n                    importedCustomModuleNode = callExpression;\n                }\n                if (!importedCustomModuleNode &&\n                    args.some((arg) => (0, node_utils_1.isLiteral)(arg) &&\n                        typeof arg.value === 'string' &&\n                        arg.value === USER_EVENT_PACKAGE)) {\n                    importedUserEventLibraryNode = callExpression;\n                }\n                if (!importedReactDomTestUtilsNode &&\n                    args.some((arg) => (0, node_utils_1.isLiteral)(arg) &&\n                        typeof arg.value === 'string' &&\n                        arg.value === REACT_DOM_TEST_UTILS_PACKAGE)) {\n                    importedReactDomTestUtilsNode = callExpression;\n                }\n            },\n        };\n        const ruleInstructions = ruleCreate(context, optionsWithDefault, helpers);\n        const enhancedRuleInstructions = {};\n        const allKeys = new Set(Object.keys(detectionInstructions).concat(Object.keys(ruleInstructions)));\n        allKeys.forEach((instruction) => {\n            enhancedRuleInstructions[instruction] = (node) => {\n                var _a, _b;\n                if (instruction in detectionInstructions) {\n                    (_a = detectionInstructions[instruction]) === null || _a === void 0 ? void 0 : _a.call(detectionInstructions, node);\n                }\n                if (canReportErrors() && ruleInstructions[instruction]) {\n                    return (_b = ruleInstructions[instruction]) === null || _b === void 0 ? void 0 : _b.call(ruleInstructions, node);\n                }\n                return undefined;\n            };\n        });\n        return enhancedRuleInstructions;\n    };\n}\nexports.detectTestingLibraryUtils = detectTestingLibraryUtils;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}