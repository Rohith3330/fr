{"ast":null,"code":"var acorn = require('acorn-node');\n\nvar walk = require('acorn-node/walk');\n\nvar defined = require('defined');\n\nvar requireRe = /\\brequire\\b/;\n\nfunction parse(src, opts) {\n  if (!opts) opts = {};\n  var acornOpts = {\n    ranges: defined(opts.ranges, opts.range),\n    locations: defined(opts.locations, opts.loc),\n    allowReserved: defined(opts.allowReserved, true),\n    allowImportExportEverywhere: defined(opts.allowImportExportEverywhere, false)\n  }; // Use acorn-node's defaults for the rest.\n\n  if (opts.ecmaVersion != null) acornOpts.ecmaVersion = opts.ecmaVersion;\n  if (opts.sourceType != null) acornOpts.sourceType = opts.sourceType;\n  if (opts.allowHashBang != null) acornOpts.allowHashBang = opts.allowHashBang;\n  if (opts.allowReturnOutsideFunction != null) acornOpts.allowReturnOutsideFunction = opts.allowReturnOutsideFunction;\n  return acorn.parse(src, acornOpts);\n}\n\nvar exports = module.exports = function (src, opts) {\n  return exports.find(src, opts).strings;\n};\n\nexports.find = function (src, opts) {\n  if (!opts) opts = {};\n  var word = opts.word === undefined ? 'require' : opts.word;\n  if (typeof src !== 'string') src = String(src);\n\n  var isRequire = opts.isRequire || function (node) {\n    return node.callee.type === 'Identifier' && node.callee.name === word;\n  };\n\n  var modules = {\n    strings: [],\n    expressions: []\n  };\n  if (opts.nodes) modules.nodes = [];\n  var wordRe = word === 'require' ? requireRe : RegExp('\\\\b' + word + '\\\\b');\n  if (!wordRe.test(src)) return modules;\n  var ast = parse(src, opts.parse);\n\n  function visit(node, st, c) {\n    var hasRequire = wordRe.test(src.slice(node.start, node.end));\n    if (!hasRequire) return;\n    walk.base[node.type](node, st, c);\n    if (node.type !== 'CallExpression') return;\n\n    if (isRequire(node)) {\n      if (node.arguments.length) {\n        var arg = node.arguments[0];\n\n        if (arg.type === 'Literal') {\n          modules.strings.push(arg.value);\n        } else if (arg.type === 'TemplateLiteral' && arg.quasis.length === 1 && arg.expressions.length === 0) {\n          modules.strings.push(arg.quasis[0].value.raw);\n        } else {\n          modules.expressions.push(src.slice(arg.start, arg.end));\n        }\n      }\n\n      if (opts.nodes) modules.nodes.push(node);\n    }\n  }\n\n  walk.recursive(ast, null, {\n    Statement: visit,\n    Expression: visit\n  });\n  return modules;\n};","map":{"version":3,"names":["acorn","require","walk","defined","requireRe","parse","src","opts","acornOpts","ranges","range","locations","loc","allowReserved","allowImportExportEverywhere","ecmaVersion","sourceType","allowHashBang","allowReturnOutsideFunction","exports","module","find","strings","word","undefined","String","isRequire","node","callee","type","name","modules","expressions","nodes","wordRe","RegExp","test","ast","visit","st","c","hasRequire","slice","start","end","base","arguments","length","arg","push","value","quasis","raw","recursive","Statement","Expression"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/detective/index.js"],"sourcesContent":["var acorn = require('acorn-node');\nvar walk = require('acorn-node/walk');\nvar defined = require('defined');\n\nvar requireRe = /\\brequire\\b/;\n\nfunction parse (src, opts) {\n    if (!opts) opts = {};\n    var acornOpts = {\n        ranges: defined(opts.ranges, opts.range),\n        locations: defined(opts.locations, opts.loc),\n        allowReserved: defined(opts.allowReserved, true),\n        allowImportExportEverywhere: defined(opts.allowImportExportEverywhere, false)\n    };\n\n    // Use acorn-node's defaults for the rest.\n    if (opts.ecmaVersion != null) acornOpts.ecmaVersion = opts.ecmaVersion;\n    if (opts.sourceType != null) acornOpts.sourceType = opts.sourceType;\n    if (opts.allowHashBang != null) acornOpts.allowHashBang = opts.allowHashBang;\n    if (opts.allowReturnOutsideFunction != null) acornOpts.allowReturnOutsideFunction = opts.allowReturnOutsideFunction;\n\n    return acorn.parse(src, acornOpts);\n}\n\nvar exports = module.exports = function (src, opts) {\n    return exports.find(src, opts).strings;\n};\n\nexports.find = function (src, opts) {\n    if (!opts) opts = {};\n    \n    var word = opts.word === undefined ? 'require' : opts.word;\n    if (typeof src !== 'string') src = String(src);\n    \n    var isRequire = opts.isRequire || function (node) {\n        return node.callee.type === 'Identifier'\n            && node.callee.name === word\n        ;\n    };\n    \n    var modules = { strings : [], expressions : [] };\n    if (opts.nodes) modules.nodes = [];\n    \n    var wordRe = word === 'require' ? requireRe : RegExp('\\\\b' + word + '\\\\b');\n    if (!wordRe.test(src)) return modules;\n    \n    var ast = parse(src, opts.parse);\n    \n    function visit(node, st, c) {\n        var hasRequire = wordRe.test(src.slice(node.start, node.end));\n        if (!hasRequire) return;\n        walk.base[node.type](node, st, c);\n        if (node.type !== 'CallExpression') return;\n        if (isRequire(node)) {\n            if (node.arguments.length) {\n                var arg = node.arguments[0];\n                if (arg.type === 'Literal') {\n                    modules.strings.push(arg.value);\n                }\n                else if (arg.type === 'TemplateLiteral'\n                        && arg.quasis.length === 1\n                        && arg.expressions.length === 0) {\n\n                    modules.strings.push(arg.quasis[0].value.raw);\n                }\n                else {\n                    modules.expressions.push(src.slice(arg.start, arg.end));\n                }\n            }\n            if (opts.nodes) modules.nodes.push(node);\n        }\n    }\n    \n    walk.recursive(ast, null, {\n        Statement: visit,\n        Expression: visit\n    });\n    \n    return modules;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}