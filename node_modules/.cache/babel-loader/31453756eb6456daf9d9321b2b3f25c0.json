{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\n\nconst fs = require('fs');\n\nconst path = require('path');\n/**\n * Derived significantly from package find-up@2.0.0. See license below.\n * \n * @copyright Sindre Sorhus\n * MIT License\n *\n * Copyright (c) Sindre Sorhus <sindresorhus@gmail.com> (https://sindresorhus.com)\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n\nfunction findUp(filename, cwd) {\n  let dir = path.resolve(cwd || '');\n  const root = path.parse(dir).root;\n  const filenames = [].concat(filename); // eslint-disable-next-line no-constant-condition\n\n  while (true) {\n    const file = filenames.find(el => fs.existsSync(path.resolve(dir, el)));\n\n    if (file) {\n      return path.join(dir, file);\n    }\n\n    if (dir === root) {\n      return null;\n    }\n\n    dir = path.dirname(dir);\n  }\n}\n\nexports.default = function pkgUp(opts) {\n  return findUp('package.json', opts && opts.cwd);\n};","map":{"version":3,"names":["exports","__esModule","fs","require","path","findUp","filename","cwd","dir","resolve","root","parse","filenames","concat","file","find","el","existsSync","join","dirname","default","pkgUp","opts"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/eslint-module-utils/pkgUp.js"],"sourcesContent":["'use strict';\nexports.__esModule = true;\n\nconst fs = require('fs');\nconst path = require('path');\n\n/**\n * Derived significantly from package find-up@2.0.0. See license below.\n * \n * @copyright Sindre Sorhus\n * MIT License\n *\n * Copyright (c) Sindre Sorhus <sindresorhus@gmail.com> (https://sindresorhus.com)\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nfunction findUp(filename, cwd) {\n  let dir = path.resolve(cwd || '');\n  const root = path.parse(dir).root;\n\n  const filenames = [].concat(filename);\n\n  // eslint-disable-next-line no-constant-condition\n  while (true) {\n    const file = filenames.find((el) => fs.existsSync(path.resolve(dir, el)));\n\n    if (file) {\n      return path.join(dir, file);\n    }\n    if (dir === root) {\n      return null;\n    }\n\n    dir = path.dirname(dir);\n  }\n}\n\nexports.default = function pkgUp(opts) {\n  return findUp('package.json', opts && opts.cwd);\n};\n"],"mappings":"AAAA;;AACAA,OAAO,CAACC,UAAR,GAAqB,IAArB;;AAEA,MAAMC,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAlB;;AACA,MAAMC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAApB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASE,MAAT,CAAgBC,QAAhB,EAA0BC,GAA1B,EAA+B;EAC7B,IAAIC,GAAG,GAAGJ,IAAI,CAACK,OAAL,CAAaF,GAAG,IAAI,EAApB,CAAV;EACA,MAAMG,IAAI,GAAGN,IAAI,CAACO,KAAL,CAAWH,GAAX,EAAgBE,IAA7B;EAEA,MAAME,SAAS,GAAG,GAAGC,MAAH,CAAUP,QAAV,CAAlB,CAJ6B,CAM7B;;EACA,OAAO,IAAP,EAAa;IACX,MAAMQ,IAAI,GAAGF,SAAS,CAACG,IAAV,CAAgBC,EAAD,IAAQd,EAAE,CAACe,UAAH,CAAcb,IAAI,CAACK,OAAL,CAAaD,GAAb,EAAkBQ,EAAlB,CAAd,CAAvB,CAAb;;IAEA,IAAIF,IAAJ,EAAU;MACR,OAAOV,IAAI,CAACc,IAAL,CAAUV,GAAV,EAAeM,IAAf,CAAP;IACD;;IACD,IAAIN,GAAG,KAAKE,IAAZ,EAAkB;MAChB,OAAO,IAAP;IACD;;IAEDF,GAAG,GAAGJ,IAAI,CAACe,OAAL,CAAaX,GAAb,CAAN;EACD;AACF;;AAEDR,OAAO,CAACoB,OAAR,GAAkB,SAASC,KAAT,CAAeC,IAAf,EAAqB;EACrC,OAAOjB,MAAM,CAAC,cAAD,EAAiBiB,IAAI,IAAIA,IAAI,CAACf,GAA9B,CAAb;AACD,CAFD"},"metadata":{},"sourceType":"script"}