{"ast":null,"code":"/**\n * Safari ~11 has an issue where variable declarations in a For statement throw if they shadow parameters.\n * This is fixed by renaming any declarations in the left/init part of a For* statement so they don't shadow.\n * @see https://bugs.webkit.org/show_bug.cgi?id=171041\n *\n * @example\n *   e => { for (let e of []) e }   // throws\n *   e => { for (let _e of []) _e }   // works\n */\nfunction handle(declaration) {\n  if (!declaration.isVariableDeclaration()) return;\n  const fn = declaration.getFunctionParent();\n  const {\n    name\n  } = declaration.node.declarations[0].id; // check if there is a shadowed binding coming from a parameter\n\n  if (fn && fn.scope.hasOwnBinding(name) && fn.scope.getOwnBinding(name).kind === \"param\") {\n    declaration.scope.rename(name);\n  }\n}\n\nexport default (() => ({\n  name: \"transform-safari-for-shadowing\",\n  visitor: {\n    ForXStatement(path) {\n      handle(path.get(\"left\"));\n    },\n\n    ForStatement(path) {\n      handle(path.get(\"init\"));\n    }\n\n  }\n}));","map":{"version":3,"names":["handle","declaration","isVariableDeclaration","fn","getFunctionParent","name","node","declarations","id","scope","hasOwnBinding","getOwnBinding","kind","rename","visitor","ForXStatement","path","get","ForStatement"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/@babel/preset-modules/src/plugins/transform-safari-for-shadowing/index.js"],"sourcesContent":["/**\n * Safari ~11 has an issue where variable declarations in a For statement throw if they shadow parameters.\n * This is fixed by renaming any declarations in the left/init part of a For* statement so they don't shadow.\n * @see https://bugs.webkit.org/show_bug.cgi?id=171041\n *\n * @example\n *   e => { for (let e of []) e }   // throws\n *   e => { for (let _e of []) _e }   // works\n */\n\nfunction handle(declaration) {\n  if (!declaration.isVariableDeclaration()) return;\n\n  const fn = declaration.getFunctionParent();\n  const { name } = declaration.node.declarations[0].id;\n\n  // check if there is a shadowed binding coming from a parameter\n  if (\n    fn &&\n    fn.scope.hasOwnBinding(name) &&\n    fn.scope.getOwnBinding(name).kind === \"param\"\n  ) {\n    declaration.scope.rename(name);\n  }\n}\n\nexport default () => ({\n  name: \"transform-safari-for-shadowing\",\n  visitor: {\n    ForXStatement(path) {\n      handle(path.get(\"left\"));\n    },\n\n    ForStatement(path) {\n      handle(path.get(\"init\"));\n    },\n  },\n});\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,MAAT,CAAgBC,WAAhB,EAA6B;EAC3B,IAAI,CAACA,WAAW,CAACC,qBAAZ,EAAL,EAA0C;EAE1C,MAAMC,EAAE,GAAGF,WAAW,CAACG,iBAAZ,EAAX;EACA,MAAM;IAAEC;EAAF,IAAWJ,WAAW,CAACK,IAAZ,CAAiBC,YAAjB,CAA8B,CAA9B,EAAiCC,EAAlD,CAJ2B,CAM3B;;EACA,IACEL,EAAE,IACFA,EAAE,CAACM,KAAH,CAASC,aAAT,CAAuBL,IAAvB,CADA,IAEAF,EAAE,CAACM,KAAH,CAASE,aAAT,CAAuBN,IAAvB,EAA6BO,IAA7B,KAAsC,OAHxC,EAIE;IACAX,WAAW,CAACQ,KAAZ,CAAkBI,MAAlB,CAAyBR,IAAzB;EACD;AACF;;AAED,gBAAe,OAAO;EACpBA,IAAI,EAAE,gCADc;EAEpBS,OAAO,EAAE;IACPC,aAAa,CAACC,IAAD,EAAO;MAClBhB,MAAM,CAACgB,IAAI,CAACC,GAAL,CAAS,MAAT,CAAD,CAAN;IACD,CAHM;;IAKPC,YAAY,CAACF,IAAD,EAAO;MACjBhB,MAAM,CAACgB,IAAI,CAACC,GAAL,CAAS,MAAT,CAAD,CAAN;IACD;;EAPM;AAFW,CAAP,CAAf"},"metadata":{},"sourceType":"module"}