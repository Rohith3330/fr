{"ast":null,"code":"(function (global, factory) {\n  /*jshint -W030 */\n  'use strict';\n\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) : typeof define === 'function' && define.amd ? define(['exports'], factory) : global.async ? factory(global.neo_async = global.neo_async || {}) : factory(global.async = global.async || {});\n})(this, function (exports) {\n  'use strict';\n\n  var noop = function noop() {};\n\n  var throwError = function throwError() {\n    throw new Error('Callback was already called.');\n  };\n\n  var DEFAULT_TIMES = 5;\n  var DEFAULT_INTERVAL = 0;\n  var obj = 'object';\n  var func = 'function';\n  var isArray = Array.isArray;\n  var nativeKeys = Object.keys;\n  var nativePush = Array.prototype.push;\n  var iteratorSymbol = typeof Symbol === func && Symbol.iterator;\n  var nextTick, asyncNextTick, asyncSetImmediate;\n  createImmediate();\n  /**\n   * @memberof async\n   * @namespace each\n   * @param {Array|Object} collection\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done();\n   *   }, num * 10);\n   * };\n   * async.each(array, iterator, function(err, res) {\n   *   console.log(res); // undefined\n   *   console.log(order); // [1, 2, 3]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done();\n   *   }, num * 10);\n   * };\n   * async.each(array, iterator, function(err, res) {\n   *   console.log(res); // undefined\n   *   console.log(order); // [[1, 0], [2, 2], [3, 1]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done();\n   *   }, num * 10);\n   * };\n   * async.each(object, iterator, function(err, res) {\n   *   console.log(res); // undefined\n   *   console.log(order); // [1, 2, 3]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done();\n   *   }, num * 10);\n   * };\n   * async.each(object, iterator, function(err, res) {\n   *   console.log(res); // undefined\n   *   console.log(order); // [[1, 'a'], [2, 'c'], [3, 'b']]\n   * });\n   *\n   * @example\n   *\n   * // break\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num !== 2);\n   *   }, num * 10);\n   * };\n   * async.each(array, iterator, function(err, res) {\n   *   console.log(res); // undefined\n   *   console.log(order); // [1, 2]\n   * });\n   *\n   */\n\n  var each = createEach(arrayEach, baseEach, symbolEach);\n  /**\n   * @memberof async\n   * @namespace map\n   * @param {Array|Object} collection\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.map(array, iterator, function(err, res) {\n   *   console.log(res); // [1, 3, 2];\n   *   console.log(order); // [1, 2, 3]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.map(array, iterator, function(err, res) {\n   *   console.log(res); // [1, 3, 2]\n   *   console.log(order); // [[1, 0], [2, 2], [3, 1]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.map(object, iterator, function(err, res) {\n   *   console.log(res); // [1, 3, 2]\n   *   console.log(order); // [1, 2, 3]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.map(object, iterator, function(err, res) {\n   *   console.log(res); // [1, 3, 2]\n   *   console.log(order); // [[1, 'a'], [2, 'c'], [3, 'b']]\n   * });\n   *\n   */\n\n  var map = createMap(arrayEachIndex, baseEachIndex, symbolEachIndex, true);\n  /**\n   * @memberof async\n   * @namespace mapValues\n   * @param {Array|Object} collection\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.mapValues(array, iterator, function(err, res) {\n   *   console.log(res); // { '0': 1, '1': 3, '2': 2 }\n   *   console.log(order); // [1, 2, 3]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.mapValues(array, iterator, function(err, res) {\n   *   console.log(res); // { '0': 1, '1': 3, '2': 2 }\n   *   console.log(order); // [[1, 0], [2, 2], [3, 1]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.mapValues(object, iterator, function(err, res) {\n   *   console.log(res); // { a: 1, b: 3, c: 2 }\n   *   console.log(order); // [1, 2, 3]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.mapValues(object, iterator, function(err, res) {\n   *   console.log(res); // { a: 1, b: 3, c: 2 }\n   *   console.log(order); // [[1, 'a'], [2, 'c'], [3, 'b']]\n   * });\n   *\n   */\n\n  var mapValues = createMap(arrayEachIndex, baseEachKey, symbolEachKey, false);\n  /**\n   * @memberof async\n   * @namespace filter\n   * @param {Array|Object} collection\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.filter(array, iterator, function(err, res) {\n   *   console.log(res); // [1, 3];\n   *   console.log(order); // [1, 2, 3]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.filter(array, iterator, function(err, res) {\n   *   console.log(res); // [1, 3];\n   *   console.log(order); // [[1, 0], [2, 2], [3, 1]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.filter(object, iterator, function(err, res) {\n   *   console.log(res); // [1, 3];\n   *   console.log(order); // [1, 2, 3]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.filter(object, iterator, function(err, res) {\n   *   console.log(res); // [1, 3];\n   *   console.log(order); // [[1, 'a'], [2, 'c'], [3, 'b']]\n   * });\n   *\n   */\n\n  var filter = createFilter(arrayEachIndexValue, baseEachIndexValue, symbolEachIndexValue, true);\n  /**\n   * @memberof async\n   * @namespace filterSeries\n   * @param {Array|Object} collection\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.filterSeries(array, iterator, function(err, res) {\n   *   console.log(res); // [1, 3];\n   *   console.log(order); // [1, 3, 2]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.filterSeries(array, iterator, function(err, res) {\n   *   console.log(res); // [1, 3]\n   *   console.log(order); // [[1, 0], [3, 1], [2, 2]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.filterSeries(object, iterator, function(err, res) {\n   *   console.log(res); // [1, 3]\n   *   console.log(order); // [1, 3, 2]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.filterSeries(object, iterator, function(err, res) {\n   *   console.log(res); // [1, 3]\n   *   console.log(order); // [[1, 'a'], [3, 'b'], [2, 'c']]\n   * });\n   *\n   */\n\n  var filterSeries = createFilterSeries(true);\n  /**\n   * @memberof async\n   * @namespace filterLimit\n   * @param {Array|Object} collection\n   * @param {number} limit - limit >= 1\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 5, 3, 4, 2];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.filterLimit(array, 2, iterator, function(err, res) {\n   *   console.log(res); // [1, 5, 3]\n   *   console.log(order); // [1, 3, 5, 2, 4]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1, 5, 3, 4, 2];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.filterLimit(array, 2, iterator, function(err, res) {\n   *   console.log(res); // [1, 5, 3]\n   *   console.log(order); // [[1, 0], [3, 2], [5, 1], [2, 4], [4, 3]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 5, c: 3, d: 4, e: 2 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.filterLimit(object, 2, iterator, function(err, res) {\n   *   console.log(res); // [1, 5, 3]\n   *   console.log(order); // [1, 3, 5, 2, 4]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 5, c: 3, d: 4, e: 2 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.filterLimit(object, 2, iterator, function(err, res) {\n   *   console.log(res); // [1, 5, 3]\n   *   console.log(order); // [[1, 'a'], [3, 'c'], [5, 'b'], [2, 'e'], [4, 'd']]\n   * });\n   *\n   */\n\n  var filterLimit = createFilterLimit(true);\n  /**\n   * @memberof async\n   * @namespace reject\n   * @param {Array|Object} collection\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.reject(array, iterator, function(err, res) {\n   *   console.log(res); // [2];\n   *   console.log(order); // [1, 2, 3]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.reject(array, iterator, function(err, res) {\n   *   console.log(res); // [2];\n   *   console.log(order); // [[1, 0], [2, 2], [3, 1]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.reject(object, iterator, function(err, res) {\n   *   console.log(res); // [2];\n   *   console.log(order); // [1, 2, 3]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.reject(object, iterator, function(err, res) {\n   *   console.log(res); // [2];\n   *   console.log(order); // [[1, 'a'], [2, 'c'], [3, 'b']]\n   * });\n   *\n   */\n\n  var reject = createFilter(arrayEachIndexValue, baseEachIndexValue, symbolEachIndexValue, false);\n  /**\n   * @memberof async\n   * @namespace rejectSeries\n   * @param {Array|Object} collection\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.rejectSeries(array, iterator, function(err, res) {\n   *   console.log(res); // [2];\n   *   console.log(order); // [1, 3, 2]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.rejectSeries(object, iterator, function(err, res) {\n   *   console.log(res); // [2];\n   *   console.log(order); // [1, 3, 2]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.rejectSeries(object, iterator, function(err, res) {\n   *   console.log(res); // [2];\n   *   console.log(order); // [[1, 'a'], [3, 'b'], [2, 'c']]\n   * });\n   *\n   */\n\n  var rejectSeries = createFilterSeries(false);\n  /**\n   * @memberof async\n   * @namespace rejectLimit\n   * @param {Array|Object} collection\n   * @param {number} limit - limit >= 1\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 5, 3, 4, 2];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.rejectLimit(array, 2, iterator, function(err, res) {\n   *   console.log(res); // [4, 2]\n   *   console.log(order); // [1, 3, 5, 2, 4]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1, 5, 3, 4, 2];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.rejectLimit(array, 2, iterator, function(err, res) {\n   *   console.log(res); // [4, 2]\n   *   console.log(order); // [[1, 0], [3, 2], [5, 1], [2, 4], [4, 3]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 5, c: 3, d: 4, e: 2 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.rejectLimit(object, 2, iterator, function(err, res) {\n   *   console.log(res); // [4, 2]\n   *   console.log(order); // [1, 3, 5, 2, 4]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 5, c: 3, d: 4, e: 2 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.rejectLimit(object, 2, iterator, function(err, res) {\n   *   console.log(res); // [4, 2]\n   *   console.log(order); // [[1, 'a'], [3, 'c'], [5, 'b'], [2, 'e'], [4, 'd']]\n   * });\n   *\n   */\n\n  var rejectLimit = createFilterLimit(false);\n  /**\n   * @memberof async\n   * @namespace detect\n   * @param {Array|Object} collection\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.detect(array, iterator, function(err, res) {\n   *   console.log(res); // 1\n   *   console.log(order); // [1]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.detect(array, iterator, function(err, res) {\n   *   console.log(res); // 1\n   *   console.log(order); // [[1, 0]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.detect(object, iterator, function(err, res) {\n   *   console.log(res); // 1\n   *   console.log(order); // [1]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.detect(object, iterator, function(err, res) {\n   *   console.log(res); // 1\n   *   console.log(order); // [[1, 'a']]\n   * });\n   *\n   */\n\n  var detect = createDetect(arrayEachValue, baseEachValue, symbolEachValue, true);\n  /**\n   * @memberof async\n   * @namespace detectSeries\n   * @param {Array|Object} collection\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.detectSeries(array, iterator, function(err, res) {\n   *   console.log(res); // 1\n   *   console.log(order); // [1]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.detectSeries(array, iterator, function(err, res) {\n   *   console.log(res); // 1\n   *   console.log(order); // [[1, 0]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.detectSeries(object, iterator, function(err, res) {\n   *   console.log(res); // 1\n   *   console.log(order); // [1]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.detectSeries(object, iterator, function(err, res) {\n   *   console.log(res); // 1\n   *   console.log(order); // [[1, 'a']]\n   * });\n   *\n   */\n\n  var detectSeries = createDetectSeries(true);\n  /**\n   * @memberof async\n   * @namespace detectLimit\n   * @param {Array|Object} collection\n   * @param {number} limit - limit >= 1\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 5, 3, 4, 2];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.detectLimit(array, 2, iterator, function(err, res) {\n   *   console.log(res); // 1\n   *   console.log(order); // [1]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1, 5, 3, 4, 2];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.detectLimit(array, 2, iterator, function(err, res) {\n   *   console.log(res); // 1\n   *   console.log(order); // [[1, 0]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 5, c: 3, d: 4, e: 2 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.detectLimit(object, 2, iterator, function(err, res) {\n   *   console.log(res); // 1\n   *   console.log(order); // [1]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 5, c: 3, d: 4, e: 2 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.detectLimit(object, 2, iterator, function(err, res) {\n   *   console.log(res); // 1\n   *   console.log(order); // [[1, 'a']]\n   * });\n   *\n   */\n\n  var detectLimit = createDetectLimit(true);\n  /**\n   * @memberof async\n   * @namespace every\n   * @param {Array|Object} collection\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.every(array, iterator, function(err, res) {\n   *   console.log(res); // false\n   *   console.log(order); // [1, 2]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.every(array, iterator, function(err, res) {\n   *   console.log(res); // false\n   *   console.log(order); // [[1, 0], [2, 2]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.every(object, iterator, function(err, res) {\n   *   console.log(res); // false\n   *   console.log(order); // [1, 2]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.every(object, iterator, function(err, res) {\n   *   console.log(res); // false\n   *   console.log(order); // [[1, 'a'], [2, 'c']]\n   * });\n   *\n   */\n\n  var every = createEvery(arrayEachValue, baseEachValue, symbolEachValue);\n  /**\n   * @memberof async\n   * @namespace everySeries\n   * @param {Array|Object} collection\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.everySeries(array, iterator, function(err, res) {\n   *   console.log(res); // false\n   *   console.log(order); // [1, 3, 2]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.everySeries(array, iterator, function(err, res) {\n   *   console.log(res); // false\n   *   console.log(order); // [[1, 0], [3, 1], [2, 2]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.everySeries(object, iterator, function(err, res) {\n   *   console.log(res); // false\n   *   console.log(order); // [1, 3, 2]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.everySeries(object, iterator, function(err, res) {\n   *   console.log(res); // false\n   *   console.log(order); // [[1, 'a'], [3, 'b'] [2, 'c']]\n   * });\n   *\n   */\n\n  var everySeries = createEverySeries();\n  /**\n   * @memberof async\n   * @namespace everyLimit\n   * @param {Array|Object} collection\n   * @param {number} limit - limit >= 1\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 5, 3, 4, 2];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.everyLimit(array, 2, iterator, function(err, res) {\n   *   console.log(res); // false\n   *   console.log(order); // [1, 3, 5, 2]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1, 5, 3, 4, 2];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.everyLimit(array, 2, iterator, function(err, res) {\n   *   console.log(res); // false\n   *   console.log(order); // [[1, 0], [3, 2], [5, 1], [2, 4]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 5, c: 3, d: 4, e: 2 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.everyLimit(object, 2, iterator, function(err, res) {\n   *   console.log(res); // false\n   *   console.log(order); // [1, 3, 5, 2]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 5, c: 3, d: 4, e: 2 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.everyLimit(object, 2, iterator, function(err, res) {\n   *   console.log(res); // false\n   *   console.log(order); // [[1, 'a'], [3, 'c'], [5, 'b'], [2, 'e']]\n   * });\n   *\n   */\n\n  var everyLimit = createEveryLimit();\n  /**\n   * @memberof async\n   * @namespace pick\n   * @param {Array|Object} collection\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 3, 2, 4];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.pick(array, iterator, function(err, res) {\n   *   console.log(res); // { '0': 1, '1': 3 }\n   *   console.log(order); // [1, 2, 3, 4]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1, 3, 2, 4];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.pick(array, iterator, function(err, res) {\n   *   console.log(res); // { '0': 1, '1': 3 }\n   *   console.log(order); // [[0, 1], [2, 2], [3, 1], [4, 3]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2, d: 4 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.pick(object, iterator, function(err, res) {\n   *   console.log(res); // { a: 1, b: 3 }\n   *   console.log(order); // [1, 2, 3, 4]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2, d: 4 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.pick(object, iterator, function(err, res) {\n   *   console.log(res); // { a: 1, b: 3 }\n   *   console.log(order); // [[1, 'a'], [2, 'c'], [3, 'b'], [4, 'd']]\n   * });\n   *\n   */\n\n  var pick = createPick(arrayEachIndexValue, baseEachKeyValue, symbolEachKeyValue, true);\n  /**\n   * @memberof async\n   * @namespace pickSeries\n   * @param {Array|Object} collection\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 3, 2, 4];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.pickSeries(array, iterator, function(err, res) {\n   *   console.log(res); // { '0': 1, '1': 3 }\n   *   console.log(order); // [1, 3, 2, 4]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1, 3, 2, 4];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.pickSeries(array, iterator, function(err, res) {\n   *   console.log(res); // { '0': 1, '1': 3 }\n   *   console.log(order); // [[0, 1], [3, 1], [2, 2], [4, 3]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2, d: 4 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.pickSeries(object, iterator, function(err, res) {\n   *   console.log(res); // { a: 1, b: 3 }\n   *   console.log(order); // [1, 3, 2, 4]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2, d: 4 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.pickSeries(object, iterator, function(err, res) {\n   *   console.log(res); // { a: 1, b: 3 }\n   *   console.log(order); // [[1, 'a'], [3, 'b'], [2, 'c'], [4, 'd']]\n   * });\n   *\n   */\n\n  var pickSeries = createPickSeries(true);\n  /**\n   * @memberof async\n   * @namespace pickLimit\n   * @param {Array|Object} collection\n   * @param {number} limit - limit >= 1\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 5, 3, 4, 2];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.pickLimit(array, 2, iterator, function(err, res) {\n   *   console.log(res); // { '0': 1, '1': 5, '2': 3 }\n   *   console.log(order); // [1, 3, 5, 2, 4]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1, 5, 3, 4, 2];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.pickLimit(array, 2, iterator, function(err, res) {\n   *   console.log(res); // { '0': 1, '1': 5, '2': 3 }\n   *   console.log(order); // [[1, 0], [3, 2], [5, 1], [2, 4], [4, 3]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 5, c: 3, d: 4, e: 2 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.pickLimit(object, 2, iterator, function(err, res) {\n   *   console.log(res); // { a: 1, b: 5, c: 3 }\n   *   console.log(order); // [1, 3, 5, 2, 4]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 5, c: 3, d: 4, e: 2 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.pickLimit(object, 2, iterator, function(err, res) {\n   *   console.log(res); // { a: 1, b: 5, c: 3 }\n   *   console.log(order); // [[1, 'a'], [3, 'c'], [5, 'b'], [2, 'e'], [4, 'd']]\n   * });\n   *\n   */\n\n  var pickLimit = createPickLimit(true);\n  /**\n   * @memberof async\n   * @namespace omit\n   * @param {Array|Object} collection\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 3, 2, 4];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.omit(array, iterator, function(err, res) {\n   *   console.log(res); // { '2': 2, '3': 4 }\n   *   console.log(order); // [1, 2, 3, 4]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1, 3, 2, 4];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.omit(array, iterator, function(err, res) {\n   *   console.log(res); // { '2': 2, '3': 4 }\n   *   console.log(order); // [[0, 1], [2, 2], [3, 1], [4, 3]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2, d: 4 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.omit(object, iterator, function(err, res) {\n   *   console.log(res); // { c: 2, d: 4 }\n   *   console.log(order); // [1, 2, 3, 4]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2, d: 4 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.omit(object, iterator, function(err, res) {\n   *   console.log(res); // { c: 2, d: 4 }\n   *   console.log(order); // [[1, 'a'], [2, 'c'], [3, 'b'], [4, 'd']]\n   * });\n   *\n   */\n\n  var omit = createPick(arrayEachIndexValue, baseEachKeyValue, symbolEachKeyValue, false);\n  /**\n   * @memberof async\n   * @namespace omitSeries\n   * @param {Array|Object} collection\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 3, 2, 4];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.omitSeries(array, iterator, function(err, res) {\n   *   console.log(res); // { '2': 2, '3': 4 }\n   *   console.log(order); // [1, 3, 2, 4]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1, 3, 2, 4];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.omitSeries(array, iterator, function(err, res) {\n   *   console.log(res); // { '2': 2, '3': 4 }\n   *   console.log(order); // [[0, 1], [3, 1], [2, 2], [4, 3]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2, d: 4 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.omitSeries(object, iterator, function(err, res) {\n   *   console.log(res); // { c: 2, d: 4 }\n   *   console.log(order); // [1, 3, 2, 4]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2, d: 4 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.omitSeries(object, iterator, function(err, res) {\n   *   console.log(res); // { c: 2, d: 4 }\n   *   console.log(order); // [[1, 'a'], [3, 'b'], [2, 'c'], [4, 'd']]\n   * });\n   *\n   */\n\n  var omitSeries = createPickSeries(false);\n  /**\n   * @memberof async\n   * @namespace omitLimit\n   * @param {Array|Object} collection\n   * @param {number} limit - limit >= 1\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 5, 3, 4, 2];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.omitLimit(array, 2, iterator, function(err, res) {\n   *   console.log(res); // { '3': 4, '4': 2 }\n   *   console.log(order); // [1, 3, 5, 2, 4]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1, 5, 3, 4, 2];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.omitLimit(array, 2, iterator, function(err, res) {\n   *   console.log(res); // { '3': 4, '4': 2 }\n   *   console.log(order); // [[1, 0], [3, 2], [5, 1], [2, 4], [4, 3]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 5, c: 3, d: 4, e: 2 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.omitLimit(object, 2, iterator, function(err, res) {\n   *   console.log(res); // { d: 4, e: 2 }\n   *   console.log(order); // [1, 3, 5, 2, 4]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 5, c: 3, d: 4, e: 2 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.omitLimit(object, 2, iterator, function(err, res) {\n   *   console.log(res); // { d: 4, e: 2 }\n   *   console.log(order); // [[1, 'a'], [3, 'c'], [5, 'b'], [2, 'e'], [4, 'd']]\n   * });\n   *\n   */\n\n  var omitLimit = createPickLimit(false);\n  /**\n   * @memberof async\n   * @namespace transform\n   * @param {Array|Object} collection\n   * @param {Array|Object|Function} [accumulator]\n   * @param {Function} [iterator]\n   * @param {Function} [callback]\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var collection = [1, 3, 2, 4];\n   * var iterator = function(result, num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     result.push(num)\n   *     done();\n   *   }, num * 10);\n   * };\n   * async.transform(collection, iterator, function(err, res) {\n   *   console.log(res); // [1, 2, 3, 4]\n   *   console.log(order); // [1, 2, 3, 4]\n   * });\n   *\n   * @example\n   *\n   * // array with index and accumulator\n   * var order = [];\n   * var collection = [1, 3, 2, 4];\n   * var iterator = function(result, num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     result[index] = num;\n   *     done();\n   *   }, num * 10);\n   * };\n   * async.transform(collection, {}, iterator, function(err, res) {\n   *   console.log(res); // { '0': 1, '1': 3, '2': 2, '3': 4 }\n   *   console.log(order); // [[1, 0], [2, 2], [3, 1], [4, 3]]\n   * });\n   *\n   * @example\n   *\n   * // object with accumulator\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2, d: 4 };\n   * var iterator = function(result, num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     result.push(num);\n   *     done();\n   *   }, num * 10);\n   * };\n   * async.transform(collection, [], iterator, function(err, res) {\n   *   console.log(res); // [1, 2, 3, 4]\n   *   console.log(order); // [1, 2, 3, 4]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2, d: 4 };\n   * var iterator = function(result, num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     result[key] = num;\n   *     done();\n   *   }, num * 10);\n   * };\n   * async.transform(collection, iterator, function(err, res) {\n   *   console.log(res); //  { a: 1, b: 3, c: 2, d: 4 }\n   *   console.log(order); // [[1, 'a'], [2, 'c'], [3, 'b'], [4, 'd']]\n   * });\n   *\n   */\n\n  var transform = createTransform(arrayEachResult, baseEachResult, symbolEachResult);\n  /**\n   * @memberof async\n   * @namespace sortBy\n   * @param {Array|Object} collection\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.sortBy(array, iterator, function(err, res) {\n   *   console.log(res); // [1, 2, 3];\n   *   console.log(order); // [1, 2, 3]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.sortBy(array, iterator, function(err, res) {\n   *   console.log(res); // [1, 2, 3]\n   *   console.log(order); // [[1, 0], [2, 2], [3, 1]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.sortBy(object, iterator, function(err, res) {\n   *   console.log(res); // [1, 2, 3]\n   *   console.log(order); // [1, 2, 3]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.sortBy(object, iterator, function(err, res) {\n   *   console.log(res); // [1, 2, 3]\n   *   console.log(order); // [[1, 'a'], [2, 'c'], [3, 'b']]\n   * });\n   *\n   */\n\n  var sortBy = createSortBy(arrayEachIndexValue, baseEachIndexValue, symbolEachIndexValue);\n  /**\n   * @memberof async\n   * @namespace concat\n   * @param {Array|Object} collection\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, [num]);\n   *   }, num * 10);\n   * };\n   * async.concat(array, iterator, function(err, res) {\n   *   console.log(res); // [1, 2, 3];\n   *   console.log(order); // [1, 2, 3]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, [num]);\n   *   }, num * 10);\n   * };\n   * async.concat(array, iterator, function(err, res) {\n   *   console.log(res); // [1, 2, 3]\n   *   console.log(order); // [[1, 0], [2, 2], [3, 1]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, [num]);\n   *   }, num * 10);\n   * };\n   * async.concat(object, iterator, function(err, res) {\n   *   console.log(res); // [1, 2, 3]\n   *   console.log(order); // [1, 2, 3]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, [num]);\n   *   }, num * 10);\n   * };\n   * async.concat(object, iterator, function(err, res) {\n   *   console.log(res); // [1, 2, 3]\n   *   console.log(order); // [[1, 'a'], [2, 'c'], [3, 'b']]\n   * });\n   *\n   */\n\n  var concat = createConcat(arrayEachIndex, baseEachIndex, symbolEachIndex);\n  /**\n   * @memberof async\n   * @namespace groupBy\n   * @param {Array|Object} collection\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [4.2, 6.4, 6.1];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, Math.floor(num));\n   *   }, num * 10);\n   * };\n   * async.groupBy(array, iterator, function(err, res) {\n   *   console.log(res); // { '4': [4.2], '6': [6.1, 6.4] }\n   *   console.log(order); // [4.2, 6.1, 6.4]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [4.2, 6.4, 6.1];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, Math.floor(num));\n   *   }, num * 10);\n   * };\n   * async.groupBy(array, iterator, function(err, res) {\n   *   console.log(res); // { '4': [4.2], '6': [6.1, 6.4] }\n   *   console.log(order); // [[4.2, 0], [6.1, 2], [6.4, 1]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 4.2, b: 6.4, c: 6.1 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, Math.floor(num));\n   *   }, num * 10);\n   * };\n   * async.groupBy(object, iterator, function(err, res) {\n   *   console.log(res); // { '4': [4.2], '6': [6.1, 6.4] }\n   *   console.log(order); // [4.2, 6.1, 6.4]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 4.2, b: 6.4, c: 6.1 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, Math.floor(num));\n   *   }, num * 10);\n   * };\n   * async.groupBy(object, iterator, function(err, res) {\n   *   console.log(res); // { '4': [4.2], '6': [6.1, 6.4] }\n   *   console.log(order); // [[4.2, 'a'], [6.1, 'c'], [6.4, 'b']]\n   * });\n   *\n   */\n\n  var groupBy = createGroupBy(arrayEachValue, baseEachValue, symbolEachValue);\n  /**\n   * @memberof async\n   * @namespace parallel\n   * @param {Array|Object} tasks - functions\n   * @param {Function} callback\n   * @example\n   *\n   * var order = [];\n   * var tasks = [\n   *  function(done) {\n   *    setTimeout(function() {\n   *      order.push(1);\n   *      done(null, 1);\n   *    }, 10);\n   *  },\n   *  function(done) {\n   *    setTimeout(function() {\n   *      order.push(2);\n   *      done(null, 2);\n   *    }, 30);\n   *  },\n   *  function(done) {\n   *    setTimeout(function() {\n   *      order.push(3);\n   *      done(null, 3);\n   *    }, 40);\n   *  },\n   *  function(done) {\n   *    setTimeout(function() {\n   *      order.push(4);\n   *      done(null, 4);\n   *    }, 20);\n   *  }\n   * ];\n   * async.parallel(tasks, function(err, res) {\n   *   console.log(res); // [1, 2, 3, 4];\n   *   console.log(order); // [1, 4, 2, 3]\n   * });\n   *\n   * @example\n   *\n   * var order = [];\n   * var tasks = {\n   *   'a': function(done) {\n   *     setTimeout(function() {\n   *       order.push(1);\n   *       done(null, 1);\n   *     }, 10);\n   *   },\n   *   'b': function(done) {\n   *     setTimeout(function() {\n   *       order.push(2);\n   *       done(null, 2);\n   *     }, 30);\n   *   },\n   *   'c': function(done) {\n   *     setTimeout(function() {\n   *       order.push(3);\n   *       done(null, 3);\n   *     }, 40);\n   *   },\n   *   'd': function(done) {\n   *     setTimeout(function() {\n   *       order.push(4);\n   *       done(null, 4);\n   *     }, 20);\n   *   }\n   * };\n   * async.parallel(tasks, function(err, res) {\n   *   console.log(res); // { a: 1, b: 2, c: 3, d:4 }\n   *   console.log(order); // [1, 4, 2, 3]\n   * });\n   *\n   */\n\n  var parallel = createParallel(arrayEachFunc, baseEachFunc);\n  /**\n   * @memberof async\n   * @namespace applyEach\n   */\n\n  var applyEach = createApplyEach(map);\n  /**\n   * @memberof async\n   * @namespace applyEachSeries\n   */\n\n  var applyEachSeries = createApplyEach(mapSeries);\n  /**\n   * @memberof async\n   * @namespace log\n   */\n\n  var log = createLogger('log');\n  /**\n   * @memberof async\n   * @namespace dir\n   */\n\n  var dir = createLogger('dir');\n  /**\n   * @version 2.6.2\n   * @namespace async\n   */\n\n  var index = {\n    VERSION: '2.6.2',\n    // Collections\n    each: each,\n    eachSeries: eachSeries,\n    eachLimit: eachLimit,\n    forEach: each,\n    forEachSeries: eachSeries,\n    forEachLimit: eachLimit,\n    eachOf: each,\n    eachOfSeries: eachSeries,\n    eachOfLimit: eachLimit,\n    forEachOf: each,\n    forEachOfSeries: eachSeries,\n    forEachOfLimit: eachLimit,\n    map: map,\n    mapSeries: mapSeries,\n    mapLimit: mapLimit,\n    mapValues: mapValues,\n    mapValuesSeries: mapValuesSeries,\n    mapValuesLimit: mapValuesLimit,\n    filter: filter,\n    filterSeries: filterSeries,\n    filterLimit: filterLimit,\n    select: filter,\n    selectSeries: filterSeries,\n    selectLimit: filterLimit,\n    reject: reject,\n    rejectSeries: rejectSeries,\n    rejectLimit: rejectLimit,\n    detect: detect,\n    detectSeries: detectSeries,\n    detectLimit: detectLimit,\n    find: detect,\n    findSeries: detectSeries,\n    findLimit: detectLimit,\n    pick: pick,\n    pickSeries: pickSeries,\n    pickLimit: pickLimit,\n    omit: omit,\n    omitSeries: omitSeries,\n    omitLimit: omitLimit,\n    reduce: reduce,\n    inject: reduce,\n    foldl: reduce,\n    reduceRight: reduceRight,\n    foldr: reduceRight,\n    transform: transform,\n    transformSeries: transformSeries,\n    transformLimit: transformLimit,\n    sortBy: sortBy,\n    sortBySeries: sortBySeries,\n    sortByLimit: sortByLimit,\n    some: some,\n    someSeries: someSeries,\n    someLimit: someLimit,\n    any: some,\n    anySeries: someSeries,\n    anyLimit: someLimit,\n    every: every,\n    everySeries: everySeries,\n    everyLimit: everyLimit,\n    all: every,\n    allSeries: everySeries,\n    allLimit: everyLimit,\n    concat: concat,\n    concatSeries: concatSeries,\n    concatLimit: concatLimit,\n    groupBy: groupBy,\n    groupBySeries: groupBySeries,\n    groupByLimit: groupByLimit,\n    // Control Flow\n    parallel: parallel,\n    series: series,\n    parallelLimit: parallelLimit,\n    tryEach: tryEach,\n    waterfall: waterfall,\n    angelFall: angelFall,\n    angelfall: angelFall,\n    whilst: whilst,\n    doWhilst: doWhilst,\n    until: until,\n    doUntil: doUntil,\n    during: during,\n    doDuring: doDuring,\n    forever: forever,\n    compose: compose,\n    seq: seq,\n    applyEach: applyEach,\n    applyEachSeries: applyEachSeries,\n    queue: queue,\n    priorityQueue: priorityQueue,\n    cargo: cargo,\n    auto: auto,\n    autoInject: autoInject,\n    retry: retry,\n    retryable: retryable,\n    iterator: iterator,\n    times: times,\n    timesSeries: timesSeries,\n    timesLimit: timesLimit,\n    race: race,\n    // Utils\n    apply: apply,\n    nextTick: asyncNextTick,\n    setImmediate: asyncSetImmediate,\n    memoize: memoize,\n    unmemoize: unmemoize,\n    ensureAsync: ensureAsync,\n    constant: constant,\n    asyncify: asyncify,\n    wrapSync: asyncify,\n    log: log,\n    dir: dir,\n    reflect: reflect,\n    reflectAll: reflectAll,\n    timeout: timeout,\n    createLogger: createLogger,\n    // Mode\n    safe: safe,\n    fast: fast\n  };\n  exports['default'] = index;\n  baseEachSync(index, function (func, key) {\n    exports[key] = func;\n  }, nativeKeys(index));\n  /**\n   * @private\n   */\n\n  function createImmediate(safeMode) {\n    var delay = function delay(fn) {\n      var args = slice(arguments, 1);\n      setTimeout(function () {\n        fn.apply(null, args);\n      });\n    };\n\n    asyncSetImmediate = typeof setImmediate === func ? setImmediate : delay;\n\n    if (typeof process === obj && typeof process.nextTick === func) {\n      nextTick = /^v0.10/.test(process.version) ? asyncSetImmediate : process.nextTick;\n      asyncNextTick = /^v0/.test(process.version) ? asyncSetImmediate : process.nextTick;\n    } else {\n      asyncNextTick = nextTick = asyncSetImmediate;\n    }\n\n    if (safeMode === false) {\n      nextTick = function (cb) {\n        cb();\n      };\n    }\n  }\n  /* sync functions based on lodash */\n\n  /**\n   * Converts `arguments` to an array.\n   *\n   * @private\n   * @param {Array} array = The array to slice.\n   */\n\n\n  function createArray(array) {\n    var index = -1;\n    var size = array.length;\n    var result = Array(size);\n\n    while (++index < size) {\n      result[index] = array[index];\n    }\n\n    return result;\n  }\n  /**\n   * Create an array from `start`\n   *\n   * @private\n   * @param {Array} array - The array to slice.\n   * @param {number} start - The start position.\n   */\n\n\n  function slice(array, start) {\n    var end = array.length;\n    var index = -1;\n    var size = end - start;\n\n    if (size <= 0) {\n      return [];\n    }\n\n    var result = Array(size);\n\n    while (++index < size) {\n      result[index] = array[index + start];\n    }\n\n    return result;\n  }\n  /**\n   * @private\n   * @param {Object} object\n   */\n\n\n  function objectClone(object) {\n    var keys = nativeKeys(object);\n    var size = keys.length;\n    var index = -1;\n    var result = {};\n\n    while (++index < size) {\n      var key = keys[index];\n      result[key] = object[key];\n    }\n\n    return result;\n  }\n  /**\n   * Create an array with all falsey values removed.\n   *\n   * @private\n   * @param {Array} array - The array to compact.\n   */\n\n\n  function compact(array) {\n    var index = -1;\n    var size = array.length;\n    var result = [];\n\n    while (++index < size) {\n      var value = array[index];\n\n      if (value) {\n        result[result.length] = value;\n      }\n    }\n\n    return result;\n  }\n  /**\n   * Create an array of reverse sequence.\n   *\n   * @private\n   * @param {Array} array - The array to reverse.\n   */\n\n\n  function reverse(array) {\n    var index = -1;\n    var size = array.length;\n    var result = Array(size);\n    var resIndex = size;\n\n    while (++index < size) {\n      result[--resIndex] = array[index];\n    }\n\n    return result;\n  }\n  /**\n   * Checks if key exists in object property.\n   *\n   * @private\n   * @param {Object} object - The object to inspect.\n   * @param {string} key - The key to check.\n   */\n\n\n  function has(object, key) {\n    return object.hasOwnProperty(key);\n  }\n  /**\n   * Check if target exists in array.\n   * @private\n   * @param {Array} array\n   * @param {*} target\n   */\n\n\n  function notInclude(array, target) {\n    var index = -1;\n    var size = array.length;\n\n    while (++index < size) {\n      if (array[index] === target) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n  /**\n   * @private\n   * @param {Array} array - The array to iterate over.\n   * @param {Function} iterator - The function invoked per iteration.\n   */\n\n\n  function arrayEachSync(array, iterator) {\n    var index = -1;\n    var size = array.length;\n\n    while (++index < size) {\n      iterator(array[index], index);\n    }\n\n    return array;\n  }\n  /**\n   * @private\n   * @param {Object} object - The object to iterate over.\n   * @param {Function} iterator - The function invoked per iteration.\n   * @param {Array} keys\n   */\n\n\n  function baseEachSync(object, iterator, keys) {\n    var index = -1;\n    var size = keys.length;\n\n    while (++index < size) {\n      var key = keys[index];\n      iterator(object[key], key);\n    }\n\n    return object;\n  }\n  /**\n   * @private\n   * @param {number} n\n   * @param {Function} iterator\n   */\n\n\n  function timesSync(n, iterator) {\n    var index = -1;\n\n    while (++index < n) {\n      iterator(index);\n    }\n  }\n  /**\n   * @private\n   * @param {Array} array\n   * @param {number[]} criteria\n   */\n\n\n  function sortByCriteria(array, criteria) {\n    var l = array.length;\n    var indices = Array(l);\n    var i;\n\n    for (i = 0; i < l; i++) {\n      indices[i] = i;\n    }\n\n    quickSort(criteria, 0, l - 1, indices);\n    var result = Array(l);\n\n    for (var n = 0; n < l; n++) {\n      i = indices[n];\n      result[n] = i === undefined ? array[n] : array[i];\n    }\n\n    return result;\n  }\n\n  function partition(array, i, j, mid, indices) {\n    var l = i;\n    var r = j;\n\n    while (l <= r) {\n      i = l;\n\n      while (l < r && array[l] < mid) {\n        l++;\n      }\n\n      while (r >= i && array[r] >= mid) {\n        r--;\n      }\n\n      if (l > r) {\n        break;\n      }\n\n      swap(array, indices, l++, r--);\n    }\n\n    return l;\n  }\n\n  function swap(array, indices, l, r) {\n    var n = array[l];\n    array[l] = array[r];\n    array[r] = n;\n    var i = indices[l];\n    indices[l] = indices[r];\n    indices[r] = i;\n  }\n\n  function quickSort(array, i, j, indices) {\n    if (i === j) {\n      return;\n    }\n\n    var k = i;\n\n    while (++k <= j && array[i] === array[k]) {\n      var l = k - 1;\n\n      if (indices[l] > indices[k]) {\n        var index = indices[l];\n        indices[l] = indices[k];\n        indices[k] = index;\n      }\n    }\n\n    if (k > j) {\n      return;\n    }\n\n    var p = array[i] > array[k] ? i : k;\n    k = partition(array, i, j, array[p], indices);\n    quickSort(array, i, k - 1, indices);\n    quickSort(array, k, j, indices);\n  }\n  /**\n   * @Private\n   */\n\n\n  function makeConcatResult(array) {\n    var result = [];\n    arrayEachSync(array, function (value) {\n      if (value === noop) {\n        return;\n      }\n\n      if (isArray(value)) {\n        nativePush.apply(result, value);\n      } else {\n        result.push(value);\n      }\n    });\n    return result;\n  }\n  /* async functions */\n\n  /**\n   * @private\n   */\n\n\n  function arrayEach(array, iterator, callback) {\n    var index = -1;\n    var size = array.length;\n\n    if (iterator.length === 3) {\n      while (++index < size) {\n        iterator(array[index], index, onlyOnce(callback));\n      }\n    } else {\n      while (++index < size) {\n        iterator(array[index], onlyOnce(callback));\n      }\n    }\n  }\n  /**\n   * @private\n   */\n\n\n  function baseEach(object, iterator, callback, keys) {\n    var key;\n    var index = -1;\n    var size = keys.length;\n\n    if (iterator.length === 3) {\n      while (++index < size) {\n        key = keys[index];\n        iterator(object[key], key, onlyOnce(callback));\n      }\n    } else {\n      while (++index < size) {\n        iterator(object[keys[index]], onlyOnce(callback));\n      }\n    }\n  }\n  /**\n   * @private\n   */\n\n\n  function symbolEach(collection, iterator, callback) {\n    var iter = collection[iteratorSymbol]();\n    var index = 0;\n    var item;\n\n    if (iterator.length === 3) {\n      while ((item = iter.next()).done === false) {\n        iterator(item.value, index++, onlyOnce(callback));\n      }\n    } else {\n      while ((item = iter.next()).done === false) {\n        index++;\n        iterator(item.value, onlyOnce(callback));\n      }\n    }\n\n    return index;\n  }\n  /**\n   * @private\n   */\n\n\n  function arrayEachResult(array, result, iterator, callback) {\n    var index = -1;\n    var size = array.length;\n\n    if (iterator.length === 4) {\n      while (++index < size) {\n        iterator(result, array[index], index, onlyOnce(callback));\n      }\n    } else {\n      while (++index < size) {\n        iterator(result, array[index], onlyOnce(callback));\n      }\n    }\n  }\n  /**\n   * @private\n   */\n\n\n  function baseEachResult(object, result, iterator, callback, keys) {\n    var key;\n    var index = -1;\n    var size = keys.length;\n\n    if (iterator.length === 4) {\n      while (++index < size) {\n        key = keys[index];\n        iterator(result, object[key], key, onlyOnce(callback));\n      }\n    } else {\n      while (++index < size) {\n        iterator(result, object[keys[index]], onlyOnce(callback));\n      }\n    }\n  }\n  /**\n   * @private\n   */\n\n\n  function symbolEachResult(collection, result, iterator, callback) {\n    var item;\n    var index = 0;\n    var iter = collection[iteratorSymbol]();\n\n    if (iterator.length === 4) {\n      while ((item = iter.next()).done === false) {\n        iterator(result, item.value, index++, onlyOnce(callback));\n      }\n    } else {\n      while ((item = iter.next()).done === false) {\n        index++;\n        iterator(result, item.value, onlyOnce(callback));\n      }\n    }\n\n    return index;\n  }\n  /**\n   * @private\n   */\n\n\n  function arrayEachFunc(array, createCallback) {\n    var index = -1;\n    var size = array.length;\n\n    while (++index < size) {\n      array[index](createCallback(index));\n    }\n  }\n  /**\n   * @private\n   */\n\n\n  function baseEachFunc(object, createCallback, keys) {\n    var key;\n    var index = -1;\n    var size = keys.length;\n\n    while (++index < size) {\n      key = keys[index];\n      object[key](createCallback(key));\n    }\n  }\n  /**\n   * @private\n   */\n\n\n  function arrayEachIndex(array, iterator, createCallback) {\n    var index = -1;\n    var size = array.length;\n\n    if (iterator.length === 3) {\n      while (++index < size) {\n        iterator(array[index], index, createCallback(index));\n      }\n    } else {\n      while (++index < size) {\n        iterator(array[index], createCallback(index));\n      }\n    }\n  }\n  /**\n   * @private\n   */\n\n\n  function baseEachIndex(object, iterator, createCallback, keys) {\n    var key;\n    var index = -1;\n    var size = keys.length;\n\n    if (iterator.length === 3) {\n      while (++index < size) {\n        key = keys[index];\n        iterator(object[key], key, createCallback(index));\n      }\n    } else {\n      while (++index < size) {\n        iterator(object[keys[index]], createCallback(index));\n      }\n    }\n  }\n  /**\n   * @private\n   */\n\n\n  function symbolEachIndex(collection, iterator, createCallback) {\n    var item;\n    var index = 0;\n    var iter = collection[iteratorSymbol]();\n\n    if (iterator.length === 3) {\n      while ((item = iter.next()).done === false) {\n        iterator(item.value, index, createCallback(index++));\n      }\n    } else {\n      while ((item = iter.next()).done === false) {\n        iterator(item.value, createCallback(index++));\n      }\n    }\n\n    return index;\n  }\n  /**\n   * @private\n   */\n\n\n  function baseEachKey(object, iterator, createCallback, keys) {\n    var key;\n    var index = -1;\n    var size = keys.length;\n\n    if (iterator.length === 3) {\n      while (++index < size) {\n        key = keys[index];\n        iterator(object[key], key, createCallback(key));\n      }\n    } else {\n      while (++index < size) {\n        key = keys[index];\n        iterator(object[key], createCallback(key));\n      }\n    }\n  }\n  /**\n   * @private\n   */\n\n\n  function symbolEachKey(collection, iterator, createCallback) {\n    var item;\n    var index = 0;\n    var iter = collection[iteratorSymbol]();\n\n    if (iterator.length === 3) {\n      while ((item = iter.next()).done === false) {\n        iterator(item.value, index, createCallback(index++));\n      }\n    } else {\n      while ((item = iter.next()).done === false) {\n        iterator(item.value, createCallback(index++));\n      }\n    }\n\n    return index;\n  }\n  /**\n   * @private\n   */\n\n\n  function arrayEachValue(array, iterator, createCallback) {\n    var value;\n    var index = -1;\n    var size = array.length;\n\n    if (iterator.length === 3) {\n      while (++index < size) {\n        value = array[index];\n        iterator(value, index, createCallback(value));\n      }\n    } else {\n      while (++index < size) {\n        value = array[index];\n        iterator(value, createCallback(value));\n      }\n    }\n  }\n  /**\n   * @private\n   */\n\n\n  function baseEachValue(object, iterator, createCallback, keys) {\n    var key, value;\n    var index = -1;\n    var size = keys.length;\n\n    if (iterator.length === 3) {\n      while (++index < size) {\n        key = keys[index];\n        value = object[key];\n        iterator(value, key, createCallback(value));\n      }\n    } else {\n      while (++index < size) {\n        value = object[keys[index]];\n        iterator(value, createCallback(value));\n      }\n    }\n  }\n  /**\n   * @private\n   */\n\n\n  function symbolEachValue(collection, iterator, createCallback) {\n    var value, item;\n    var index = 0;\n    var iter = collection[iteratorSymbol]();\n\n    if (iterator.length === 3) {\n      while ((item = iter.next()).done === false) {\n        value = item.value;\n        iterator(value, index++, createCallback(value));\n      }\n    } else {\n      while ((item = iter.next()).done === false) {\n        index++;\n        value = item.value;\n        iterator(value, createCallback(value));\n      }\n    }\n\n    return index;\n  }\n  /**\n   * @private\n   */\n\n\n  function arrayEachIndexValue(array, iterator, createCallback) {\n    var value;\n    var index = -1;\n    var size = array.length;\n\n    if (iterator.length === 3) {\n      while (++index < size) {\n        value = array[index];\n        iterator(value, index, createCallback(index, value));\n      }\n    } else {\n      while (++index < size) {\n        value = array[index];\n        iterator(value, createCallback(index, value));\n      }\n    }\n  }\n  /**\n   * @private\n   */\n\n\n  function baseEachIndexValue(object, iterator, createCallback, keys) {\n    var key, value;\n    var index = -1;\n    var size = keys.length;\n\n    if (iterator.length === 3) {\n      while (++index < size) {\n        key = keys[index];\n        value = object[key];\n        iterator(value, key, createCallback(index, value));\n      }\n    } else {\n      while (++index < size) {\n        value = object[keys[index]];\n        iterator(value, createCallback(index, value));\n      }\n    }\n  }\n  /**\n   * @private\n   */\n\n\n  function symbolEachIndexValue(collection, iterator, createCallback) {\n    var value, item;\n    var index = 0;\n    var iter = collection[iteratorSymbol]();\n\n    if (iterator.length === 3) {\n      while ((item = iter.next()).done === false) {\n        value = item.value;\n        iterator(value, index, createCallback(index++, value));\n      }\n    } else {\n      while ((item = iter.next()).done === false) {\n        value = item.value;\n        iterator(value, createCallback(index++, value));\n      }\n    }\n\n    return index;\n  }\n  /**\n   * @private\n   */\n\n\n  function baseEachKeyValue(object, iterator, createCallback, keys) {\n    var key, value;\n    var index = -1;\n    var size = keys.length;\n\n    if (iterator.length === 3) {\n      while (++index < size) {\n        key = keys[index];\n        value = object[key];\n        iterator(value, key, createCallback(key, value));\n      }\n    } else {\n      while (++index < size) {\n        key = keys[index];\n        value = object[key];\n        iterator(value, createCallback(key, value));\n      }\n    }\n  }\n  /**\n   * @private\n   */\n\n\n  function symbolEachKeyValue(collection, iterator, createCallback) {\n    var value, item;\n    var index = 0;\n    var iter = collection[iteratorSymbol]();\n\n    if (iterator.length === 3) {\n      while ((item = iter.next()).done === false) {\n        value = item.value;\n        iterator(value, index, createCallback(index++, value));\n      }\n    } else {\n      while ((item = iter.next()).done === false) {\n        value = item.value;\n        iterator(value, createCallback(index++, value));\n      }\n    }\n\n    return index;\n  }\n  /**\n   * @private\n   * @param {Function} func\n   */\n\n\n  function onlyOnce(func) {\n    return function (err, res) {\n      var fn = func;\n      func = throwError;\n      fn(err, res);\n    };\n  }\n  /**\n   * @private\n   * @param {Function} func\n   */\n\n\n  function once(func) {\n    return function (err, res) {\n      var fn = func;\n      func = noop;\n      fn(err, res);\n    };\n  }\n  /**\n   * @private\n   * @param {Function} arrayEach\n   * @param {Function} baseEach\n   */\n\n\n  function createEach(arrayEach, baseEach, symbolEach) {\n    return function each(collection, iterator, callback) {\n      callback = once(callback || noop);\n      var size, keys;\n      var completed = 0;\n\n      if (isArray(collection)) {\n        size = collection.length;\n        arrayEach(collection, iterator, done);\n      } else if (!collection) {} else if (iteratorSymbol && collection[iteratorSymbol]) {\n        size = symbolEach(collection, iterator, done);\n        size && size === completed && callback(null);\n      } else if (typeof collection === obj) {\n        keys = nativeKeys(collection);\n        size = keys.length;\n        baseEach(collection, iterator, done, keys);\n      }\n\n      if (!size) {\n        callback(null);\n      }\n\n      function done(err, bool) {\n        if (err) {\n          callback = once(callback);\n          callback(err);\n        } else if (++completed === size) {\n          callback(null);\n        } else if (bool === false) {\n          callback = once(callback);\n          callback(null);\n        }\n      }\n    };\n  }\n  /**\n   * @private\n   * @param {Function} arrayEach\n   * @param {Function} baseEach\n   * @param {Function} symbolEach\n   */\n\n\n  function createMap(arrayEach, baseEach, symbolEach, useArray) {\n    var init, clone;\n\n    if (useArray) {\n      init = Array;\n      clone = createArray;\n    } else {\n      init = function () {\n        return {};\n      };\n\n      clone = objectClone;\n    }\n\n    return function (collection, iterator, callback) {\n      callback = callback || noop;\n      var size, keys, result;\n      var completed = 0;\n\n      if (isArray(collection)) {\n        size = collection.length;\n        result = init(size);\n        arrayEach(collection, iterator, createCallback);\n      } else if (!collection) {} else if (iteratorSymbol && collection[iteratorSymbol]) {\n        // TODO: size could be changed\n        result = init(0);\n        size = symbolEach(collection, iterator, createCallback);\n        size && size === completed && callback(null, result);\n      } else if (typeof collection === obj) {\n        keys = nativeKeys(collection);\n        size = keys.length;\n        result = init(size);\n        baseEach(collection, iterator, createCallback, keys);\n      }\n\n      if (!size) {\n        callback(null, init());\n      }\n\n      function createCallback(key) {\n        return function done(err, res) {\n          if (key === null) {\n            throwError();\n          }\n\n          if (err) {\n            key = null;\n            callback = once(callback);\n            callback(err, clone(result));\n            return;\n          }\n\n          result[key] = res;\n          key = null;\n\n          if (++completed === size) {\n            callback(null, result);\n          }\n        };\n      }\n    };\n  }\n  /**\n   * @private\n   * @param {Function} arrayEach\n   * @param {Function} baseEach\n   * @param {Function} symbolEach\n   * @param {boolean} bool\n   */\n\n\n  function createFilter(arrayEach, baseEach, symbolEach, bool) {\n    return function (collection, iterator, callback) {\n      callback = callback || noop;\n      var size, keys, result;\n      var completed = 0;\n\n      if (isArray(collection)) {\n        size = collection.length;\n        result = Array(size);\n        arrayEach(collection, iterator, createCallback);\n      } else if (!collection) {} else if (iteratorSymbol && collection[iteratorSymbol]) {\n        result = [];\n        size = symbolEach(collection, iterator, createCallback);\n        size && size === completed && callback(null, compact(result));\n      } else if (typeof collection === obj) {\n        keys = nativeKeys(collection);\n        size = keys.length;\n        result = Array(size);\n        baseEach(collection, iterator, createCallback, keys);\n      }\n\n      if (!size) {\n        return callback(null, []);\n      }\n\n      function createCallback(index, value) {\n        return function done(err, res) {\n          if (index === null) {\n            throwError();\n          }\n\n          if (err) {\n            index = null;\n            callback = once(callback);\n            callback(err);\n            return;\n          }\n\n          if (!!res === bool) {\n            result[index] = value;\n          }\n\n          index = null;\n\n          if (++completed === size) {\n            callback(null, compact(result));\n          }\n        };\n      }\n    };\n  }\n  /**\n   * @private\n   * @param {boolean} bool\n   */\n\n\n  function createFilterSeries(bool) {\n    return function (collection, iterator, callback) {\n      callback = onlyOnce(callback || noop);\n      var size, key, value, keys, iter, item, iterate;\n      var sync = false;\n      var completed = 0;\n      var result = [];\n\n      if (isArray(collection)) {\n        size = collection.length;\n        iterate = iterator.length === 3 ? arrayIteratorWithIndex : arrayIterator;\n      } else if (!collection) {} else if (iteratorSymbol && collection[iteratorSymbol]) {\n        size = Infinity;\n        iter = collection[iteratorSymbol]();\n        iterate = iterator.length === 3 ? symbolIteratorWithKey : symbolIterator;\n      } else if (typeof collection === obj) {\n        keys = nativeKeys(collection);\n        size = keys.length;\n        iterate = iterator.length === 3 ? objectIteratorWithKey : objectIterator;\n      }\n\n      if (!size) {\n        return callback(null, []);\n      }\n\n      iterate();\n\n      function arrayIterator() {\n        value = collection[completed];\n        iterator(value, done);\n      }\n\n      function arrayIteratorWithIndex() {\n        value = collection[completed];\n        iterator(value, completed, done);\n      }\n\n      function symbolIterator() {\n        item = iter.next();\n        value = item.value;\n        item.done ? callback(null, result) : iterator(value, done);\n      }\n\n      function symbolIteratorWithKey() {\n        item = iter.next();\n        value = item.value;\n        item.done ? callback(null, result) : iterator(value, completed, done);\n      }\n\n      function objectIterator() {\n        key = keys[completed];\n        value = collection[key];\n        iterator(value, done);\n      }\n\n      function objectIteratorWithKey() {\n        key = keys[completed];\n        value = collection[key];\n        iterator(value, key, done);\n      }\n\n      function done(err, res) {\n        if (err) {\n          callback(err);\n          return;\n        }\n\n        if (!!res === bool) {\n          result[result.length] = value;\n        }\n\n        if (++completed === size) {\n          iterate = throwError;\n          callback(null, result);\n        } else if (sync) {\n          nextTick(iterate);\n        } else {\n          sync = true;\n          iterate();\n        }\n\n        sync = false;\n      }\n    };\n  }\n  /**\n   * @private\n   * @param {boolean} bool\n   */\n\n\n  function createFilterLimit(bool) {\n    return function (collection, limit, iterator, callback) {\n      callback = callback || noop;\n      var size, index, key, value, keys, iter, item, iterate, result;\n      var sync = false;\n      var started = 0;\n      var completed = 0;\n\n      if (isArray(collection)) {\n        size = collection.length;\n        iterate = iterator.length === 3 ? arrayIteratorWithIndex : arrayIterator;\n      } else if (!collection) {} else if (iteratorSymbol && collection[iteratorSymbol]) {\n        size = Infinity;\n        result = [];\n        iter = collection[iteratorSymbol]();\n        iterate = iterator.length === 3 ? symbolIteratorWithKey : symbolIterator;\n      } else if (typeof collection === obj) {\n        keys = nativeKeys(collection);\n        size = keys.length;\n        iterate = iterator.length === 3 ? objectIteratorWithKey : objectIterator;\n      }\n\n      if (!size || isNaN(limit) || limit < 1) {\n        return callback(null, []);\n      }\n\n      result = result || Array(size);\n      timesSync(limit > size ? size : limit, iterate);\n\n      function arrayIterator() {\n        index = started++;\n\n        if (index < size) {\n          value = collection[index];\n          iterator(value, createCallback(value, index));\n        }\n      }\n\n      function arrayIteratorWithIndex() {\n        index = started++;\n\n        if (index < size) {\n          value = collection[index];\n          iterator(value, index, createCallback(value, index));\n        }\n      }\n\n      function symbolIterator() {\n        item = iter.next();\n\n        if (item.done === false) {\n          value = item.value;\n          iterator(value, createCallback(value, started++));\n        } else if (completed === started && iterator !== noop) {\n          iterator = noop;\n          callback(null, compact(result));\n        }\n      }\n\n      function symbolIteratorWithKey() {\n        item = iter.next();\n\n        if (item.done === false) {\n          value = item.value;\n          iterator(value, started, createCallback(value, started++));\n        } else if (completed === started && iterator !== noop) {\n          iterator = noop;\n          callback(null, compact(result));\n        }\n      }\n\n      function objectIterator() {\n        index = started++;\n\n        if (index < size) {\n          value = collection[keys[index]];\n          iterator(value, createCallback(value, index));\n        }\n      }\n\n      function objectIteratorWithKey() {\n        index = started++;\n\n        if (index < size) {\n          key = keys[index];\n          value = collection[key];\n          iterator(value, key, createCallback(value, index));\n        }\n      }\n\n      function createCallback(value, index) {\n        return function (err, res) {\n          if (index === null) {\n            throwError();\n          }\n\n          if (err) {\n            index = null;\n            iterate = noop;\n            callback = once(callback);\n            callback(err);\n            return;\n          }\n\n          if (!!res === bool) {\n            result[index] = value;\n          }\n\n          index = null;\n\n          if (++completed === size) {\n            callback = onlyOnce(callback);\n            callback(null, compact(result));\n          } else if (sync) {\n            nextTick(iterate);\n          } else {\n            sync = true;\n            iterate();\n          }\n\n          sync = false;\n        };\n      }\n    };\n  }\n  /**\n   * @memberof async\n   * @namespace eachSeries\n   * @param {Array|Object} collection\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done();\n   *   }, num * 10);\n   * };\n   * async.eachSeries(array, iterator, function(err, res) {\n   *   console.log(res); // undefined\n   *   console.log(order); // [1, 3, 2]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done();\n   *   }, num * 10);\n   * };\n   * async.eachSeries(array, iterator, function(err, res) {\n   *   console.log(res); // undefined\n   *   console.log(order); // [[1, 0], [3, 1], [2, 2]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done();\n   *   }, num * 10);\n   * };\n   * async.eachSeries(object, iterator, function(err, res) {\n   *   console.log(res); // undefined\n   *   console.log(order); // [1, 3, 2]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done();\n   *   }, num * 10);\n   * };\n   * async.eachSeries(object, iterator, function(err, res) {\n   *   console.log(res); // undefined\n   *   console.log(order); // [[1, 'a'], [3, 'b'], [2, 'b']]\n   * });\n   *\n   * @example\n   *\n   * // break\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num !== 3);\n   *   }, num * 10);\n   * };\n   * async.eachSeries(array, iterator, function(err, res) {\n   *   console.log(res); // undefined\n   *   console.log(order); // [1, 3]\n   * });\n   */\n\n\n  function eachSeries(collection, iterator, callback) {\n    callback = onlyOnce(callback || noop);\n    var size, key, keys, iter, item, iterate;\n    var sync = false;\n    var completed = 0;\n\n    if (isArray(collection)) {\n      size = collection.length;\n      iterate = iterator.length === 3 ? arrayIteratorWithIndex : arrayIterator;\n    } else if (!collection) {} else if (iteratorSymbol && collection[iteratorSymbol]) {\n      size = Infinity;\n      iter = collection[iteratorSymbol]();\n      iterate = iterator.length === 3 ? symbolIteratorWithKey : symbolIterator;\n    } else if (typeof collection === obj) {\n      keys = nativeKeys(collection);\n      size = keys.length;\n      iterate = iterator.length === 3 ? objectIteratorWithKey : objectIterator;\n    }\n\n    if (!size) {\n      return callback(null);\n    }\n\n    iterate();\n\n    function arrayIterator() {\n      iterator(collection[completed], done);\n    }\n\n    function arrayIteratorWithIndex() {\n      iterator(collection[completed], completed, done);\n    }\n\n    function symbolIterator() {\n      item = iter.next();\n      item.done ? callback(null) : iterator(item.value, done);\n    }\n\n    function symbolIteratorWithKey() {\n      item = iter.next();\n      item.done ? callback(null) : iterator(item.value, completed, done);\n    }\n\n    function objectIterator() {\n      iterator(collection[keys[completed]], done);\n    }\n\n    function objectIteratorWithKey() {\n      key = keys[completed];\n      iterator(collection[key], key, done);\n    }\n\n    function done(err, bool) {\n      if (err) {\n        callback(err);\n      } else if (++completed === size || bool === false) {\n        iterate = throwError;\n        callback(null);\n      } else if (sync) {\n        nextTick(iterate);\n      } else {\n        sync = true;\n        iterate();\n      }\n\n      sync = false;\n    }\n  }\n  /**\n   * @memberof async\n   * @namespace eachLimit\n   * @param {Array|Object} collection\n   * @param {number} limit - limit >= 1\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 5, 3, 4, 2];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done();\n   *   }, num * 10);\n   * };\n   * async.eachLimit(array, 2, iterator, function(err, res) {\n   *   console.log(res); // undefined\n   *   console.log(order); // [1, 3, 5, 2, 4]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1, 5, 3, 4, 2];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done();\n   *   }, num * 10);\n   * };\n   * async.eachLimit(array, 2, iterator, function(err, res) {\n   *   console.log(res); // undefined\n   *   console.log(order); // [[1, 0], [3, 2], [5, 1], [2, 4], [4, 3]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 5, c: 3, d: 4, e: 2 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done();\n   *   }, num * 10);\n   * };\n   * async.eachLimit(object, 2, iterator, function(err, res) {\n   *   console.log(res); // undefined\n   *   console.log(order); // [1, 3, 5, 2, 4]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 5, c: 3, d: 4, e: 2 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done();\n   *   }, num * 10);\n   * };\n   * async.eachLimit(object, 2, iterator, function(err, res) {\n   *   console.log(res); // undefined\n   *   console.log(order); // [[1, 'a'], [3, 'c'], [5, 'b'], [2, 'e'], [4, 'd']]\n   * });\n   *\n   * @example\n   *\n   * // break\n   * var order = [];\n   * var array = [1, 5, 3, 4, 2];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num !== 5);\n   *   }, num * 10);\n   * };\n   * async.eachLimit(array, 2, iterator, function(err, res) {\n   *   console.log(res); // undefined\n   *   console.log(order); // [1, 3, 5]\n   * });\n   *\n   */\n\n\n  function eachLimit(collection, limit, iterator, callback) {\n    callback = callback || noop;\n    var size, index, key, keys, iter, item, iterate;\n    var sync = false;\n    var started = 0;\n    var completed = 0;\n\n    if (isArray(collection)) {\n      size = collection.length;\n      iterate = iterator.length === 3 ? arrayIteratorWithIndex : arrayIterator;\n    } else if (!collection) {} else if (iteratorSymbol && collection[iteratorSymbol]) {\n      size = Infinity;\n      iter = collection[iteratorSymbol]();\n      iterate = iterator.length === 3 ? symbolIteratorWithKey : symbolIterator;\n    } else if (typeof collection === obj) {\n      keys = nativeKeys(collection);\n      size = keys.length;\n      iterate = iterator.length === 3 ? objectIteratorWithKey : objectIterator;\n    } else {\n      return callback(null);\n    }\n\n    if (!size || isNaN(limit) || limit < 1) {\n      return callback(null);\n    }\n\n    timesSync(limit > size ? size : limit, iterate);\n\n    function arrayIterator() {\n      if (started < size) {\n        iterator(collection[started++], done);\n      }\n    }\n\n    function arrayIteratorWithIndex() {\n      index = started++;\n\n      if (index < size) {\n        iterator(collection[index], index, done);\n      }\n    }\n\n    function symbolIterator() {\n      item = iter.next();\n\n      if (item.done === false) {\n        started++;\n        iterator(item.value, done);\n      } else if (completed === started && iterator !== noop) {\n        iterator = noop;\n        callback(null);\n      }\n    }\n\n    function symbolIteratorWithKey() {\n      item = iter.next();\n\n      if (item.done === false) {\n        iterator(item.value, started++, done);\n      } else if (completed === started && iterator !== noop) {\n        iterator = noop;\n        callback(null);\n      }\n    }\n\n    function objectIterator() {\n      if (started < size) {\n        iterator(collection[keys[started++]], done);\n      }\n    }\n\n    function objectIteratorWithKey() {\n      index = started++;\n\n      if (index < size) {\n        key = keys[index];\n        iterator(collection[key], key, done);\n      }\n    }\n\n    function done(err, bool) {\n      if (err || bool === false) {\n        iterate = noop;\n        callback = once(callback);\n        callback(err);\n      } else if (++completed === size) {\n        iterator = noop;\n        iterate = throwError;\n        callback = onlyOnce(callback);\n        callback(null);\n      } else if (sync) {\n        nextTick(iterate);\n      } else {\n        sync = true;\n        iterate();\n      }\n\n      sync = false;\n    }\n  }\n  /**\n   * @memberof async\n   * @namespace mapSeries\n   * @param {Array|Object} collection\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.mapSeries(array, iterator, function(err, res) {\n   *   console.log(res); // [1, 3, 2];\n   *   console.log(order); // [1, 3, 2]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.mapSeries(array, iterator, function(err, res) {\n   *   console.log(res); // [1, 3, 2]\n   *   console.log(order); // [[1, 0], [3, 1], [2, 2]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.mapSeries(object, iterator, function(err, res) {\n   *   console.log(res); // [1, 3, 2]\n   *   console.log(order); // [1, 3, 2]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.mapSeries(object, iterator, function(err, res) {\n   *   console.log(res); // [1, 3, 2]\n   *   console.log(order); // [[1, 'a'], [3, 'b'], [2, 'c']]\n   * });\n   *\n   */\n\n\n  function mapSeries(collection, iterator, callback) {\n    callback = callback || noop;\n    var size, key, keys, iter, item, result, iterate;\n    var sync = false;\n    var completed = 0;\n\n    if (isArray(collection)) {\n      size = collection.length;\n      iterate = iterator.length === 3 ? arrayIteratorWithIndex : arrayIterator;\n    } else if (!collection) {} else if (iteratorSymbol && collection[iteratorSymbol]) {\n      size = Infinity;\n      result = [];\n      iter = collection[iteratorSymbol]();\n      iterate = iterator.length === 3 ? symbolIteratorWithKey : symbolIterator;\n    } else if (typeof collection === obj) {\n      keys = nativeKeys(collection);\n      size = keys.length;\n      iterate = iterator.length === 3 ? objectIteratorWithKey : objectIterator;\n    }\n\n    if (!size) {\n      return callback(null, []);\n    }\n\n    result = result || Array(size);\n    iterate();\n\n    function arrayIterator() {\n      iterator(collection[completed], done);\n    }\n\n    function arrayIteratorWithIndex() {\n      iterator(collection[completed], completed, done);\n    }\n\n    function symbolIterator() {\n      item = iter.next();\n      item.done ? callback(null, result) : iterator(item.value, done);\n    }\n\n    function symbolIteratorWithKey() {\n      item = iter.next();\n      item.done ? callback(null, result) : iterator(item.value, completed, done);\n    }\n\n    function objectIterator() {\n      iterator(collection[keys[completed]], done);\n    }\n\n    function objectIteratorWithKey() {\n      key = keys[completed];\n      iterator(collection[key], key, done);\n    }\n\n    function done(err, res) {\n      if (err) {\n        iterate = throwError;\n        callback = onlyOnce(callback);\n        callback(err, createArray(result));\n        return;\n      }\n\n      result[completed] = res;\n\n      if (++completed === size) {\n        iterate = throwError;\n        callback(null, result);\n        callback = throwError;\n      } else if (sync) {\n        nextTick(iterate);\n      } else {\n        sync = true;\n        iterate();\n      }\n\n      sync = false;\n    }\n  }\n  /**\n   * @memberof async\n   * @namespace mapLimit\n   * @param {Array|Object} collection\n   * @param {number} limit - limit >= 1\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 5, 3, 4, 2];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.mapLimit(array, 2, iterator, function(err, res) {\n   *   console.log(res); // [1, 5, 3, 4, 2]\n   *   console.log(order); // [1, 3, 5, 2, 4]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1, 5, 3, 4, 2];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.mapLimit(array, 2, iterator, function(err, res) {\n   *   console.log(res); // [1, 5, 3, 4, 2]\n   *   console.log(order); // [[1, 0], [3, 2], [5, 1], [2, 4], [4, 3]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 5, c: 3, d: 4, e: 2 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.mapLimit(object, 2, iterator, function(err, res) {\n   *   console.log(res); // [1, 5, 3, 4, 2]\n   *   console.log(order); // [1, 3, 5, 2, 4]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 5, c: 3, d: 4, e: 2 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.mapLimit(object, 2, iterator, function(err, res) {\n   *   console.log(res); // [1, 5, 3, 4, 2]\n   *   console.log(order); // [[1, 'a'], [3, 'c'], [5, 'b'], [2, 'e'], [4, 'd']]\n   * });\n   *\n   */\n\n\n  function mapLimit(collection, limit, iterator, callback) {\n    callback = callback || noop;\n    var size, index, key, keys, iter, item, result, iterate;\n    var sync = false;\n    var started = 0;\n    var completed = 0;\n\n    if (isArray(collection)) {\n      size = collection.length;\n      iterate = iterator.length === 3 ? arrayIteratorWithIndex : arrayIterator;\n    } else if (!collection) {} else if (iteratorSymbol && collection[iteratorSymbol]) {\n      size = Infinity;\n      result = [];\n      iter = collection[iteratorSymbol]();\n      iterate = iterator.length === 3 ? symbolIteratorWithKey : symbolIterator;\n    } else if (typeof collection === obj) {\n      keys = nativeKeys(collection);\n      size = keys.length;\n      iterate = iterator.length === 3 ? objectIteratorWithKey : objectIterator;\n    }\n\n    if (!size || isNaN(limit) || limit < 1) {\n      return callback(null, []);\n    }\n\n    result = result || Array(size);\n    timesSync(limit > size ? size : limit, iterate);\n\n    function arrayIterator() {\n      index = started++;\n\n      if (index < size) {\n        iterator(collection[index], createCallback(index));\n      }\n    }\n\n    function arrayIteratorWithIndex() {\n      index = started++;\n\n      if (index < size) {\n        iterator(collection[index], index, createCallback(index));\n      }\n    }\n\n    function symbolIterator() {\n      item = iter.next();\n\n      if (item.done === false) {\n        iterator(item.value, createCallback(started++));\n      } else if (completed === started && iterator !== noop) {\n        iterator = noop;\n        callback(null, result);\n      }\n    }\n\n    function symbolIteratorWithKey() {\n      item = iter.next();\n\n      if (item.done === false) {\n        iterator(item.value, started, createCallback(started++));\n      } else if (completed === started && iterator !== noop) {\n        iterator = noop;\n        callback(null, result);\n      }\n    }\n\n    function objectIterator() {\n      index = started++;\n\n      if (index < size) {\n        iterator(collection[keys[index]], createCallback(index));\n      }\n    }\n\n    function objectIteratorWithKey() {\n      index = started++;\n\n      if (index < size) {\n        key = keys[index];\n        iterator(collection[key], key, createCallback(index));\n      }\n    }\n\n    function createCallback(index) {\n      return function (err, res) {\n        if (index === null) {\n          throwError();\n        }\n\n        if (err) {\n          index = null;\n          iterate = noop;\n          callback = once(callback);\n          callback(err, createArray(result));\n          return;\n        }\n\n        result[index] = res;\n        index = null;\n\n        if (++completed === size) {\n          iterate = throwError;\n          callback(null, result);\n          callback = throwError;\n        } else if (sync) {\n          nextTick(iterate);\n        } else {\n          sync = true;\n          iterate();\n        }\n\n        sync = false;\n      };\n    }\n  }\n  /**\n   * @memberof async\n   * @namespace mapValuesSeries\n   * @param {Array|Object} collection\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.mapValuesSeries(array, iterator, function(err, res) {\n   *   console.log(res); // { '0': 1, '1': 3, '2': 2 }\n   *   console.log(order); // [1, 3, 2]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.mapValuesSeries(array, iterator, function(err, res) {\n   *   console.log(res); // { '0': 1, '1': 3, '2': 2 }\n   *   console.log(order); // [[1, 0], [3, 1], [2, 2]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.mapValuesSeries(object, iterator, function(err, res) {\n   *   console.log(res); // { a: 1, b: 3, c: 2 }\n   *   console.log(order); // [1, 3, 2]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.mapValuesSeries(object, iterator, function(err, res) {\n   *   console.log(res); // { a: 1, b: 3, c: 2 }\n   *   console.log(order); // [[1, 'a'], [3, 'b'], [2, 'c']]\n   * });\n   *\n   */\n\n\n  function mapValuesSeries(collection, iterator, callback) {\n    callback = callback || noop;\n    var size, key, keys, iter, item, iterate;\n    var sync = false;\n    var result = {};\n    var completed = 0;\n\n    if (isArray(collection)) {\n      size = collection.length;\n      iterate = iterator.length === 3 ? arrayIteratorWithIndex : arrayIterator;\n    } else if (!collection) {} else if (iteratorSymbol && collection[iteratorSymbol]) {\n      size = Infinity;\n      iter = collection[iteratorSymbol]();\n      iterate = iterator.length === 3 ? symbolIteratorWithKey : symbolIterator;\n    } else if (typeof collection === obj) {\n      keys = nativeKeys(collection);\n      size = keys.length;\n      iterate = iterator.length === 3 ? objectIteratorWithKey : objectIterator;\n    }\n\n    if (!size) {\n      return callback(null, result);\n    }\n\n    iterate();\n\n    function arrayIterator() {\n      key = completed;\n      iterator(collection[completed], done);\n    }\n\n    function arrayIteratorWithIndex() {\n      key = completed;\n      iterator(collection[completed], completed, done);\n    }\n\n    function symbolIterator() {\n      key = completed;\n      item = iter.next();\n      item.done ? callback(null, result) : iterator(item.value, done);\n    }\n\n    function symbolIteratorWithKey() {\n      key = completed;\n      item = iter.next();\n      item.done ? callback(null, result) : iterator(item.value, completed, done);\n    }\n\n    function objectIterator() {\n      key = keys[completed];\n      iterator(collection[key], done);\n    }\n\n    function objectIteratorWithKey() {\n      key = keys[completed];\n      iterator(collection[key], key, done);\n    }\n\n    function done(err, res) {\n      if (err) {\n        iterate = throwError;\n        callback = onlyOnce(callback);\n        callback(err, objectClone(result));\n        return;\n      }\n\n      result[key] = res;\n\n      if (++completed === size) {\n        iterate = throwError;\n        callback(null, result);\n        callback = throwError;\n      } else if (sync) {\n        nextTick(iterate);\n      } else {\n        sync = true;\n        iterate();\n      }\n\n      sync = false;\n    }\n  }\n  /**\n   * @memberof async\n   * @namespace mapValuesLimit\n   * @param {Array|Object} collection\n   * @param {number} limit - limit >= 1\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 5, 3, 4, 2];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.mapValuesLimit(array, 2, iterator, function(err, res) {\n   *   console.log(res); // { '0': 1, '1': 5, '2': 3, '3': 4, '4': 2 }\n   *   console.log(order); // [1, 3, 5, 2, 4]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1, 5, 3, 4, 2];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.mapValuesLimit(array, 2, iterator, function(err, res) {\n   *   console.log(res); // { '0': 1, '1': 5, '2': 3, '3': 4, '4': 2 }\n   *   console.log(order); // [[1, 0], [3, 2], [5, 1], [2, 4], [4, 3]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 5, c: 3, d: 4, e: 2 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.mapValuesLimit(object, 2, iterator, function(err, res) {\n   *   console.log(res); // { a: 1, b: 5, c: 3, d: 4, e: 2 }\n   *   console.log(order); // [1, 3, 5, 2, 4]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 5, c: 3, d: 4, e: 2 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.mapValuesLimit(object, 2, iterator, function(err, res) {\n   *   console.log(res); // { a: 1, b: 5, c: 3, d: 4, e: 2 }\n   *   console.log(order); // [[1, 'a'], [3, 'c'], [5, 'b'], [2, 'e'], [4, 'd']]\n   * });\n   *\n   */\n\n\n  function mapValuesLimit(collection, limit, iterator, callback) {\n    callback = callback || noop;\n    var size, index, key, keys, iter, item, iterate;\n    var sync = false;\n    var result = {};\n    var started = 0;\n    var completed = 0;\n\n    if (isArray(collection)) {\n      size = collection.length;\n      iterate = iterator.length === 3 ? arrayIteratorWithIndex : arrayIterator;\n    } else if (!collection) {} else if (iteratorSymbol && collection[iteratorSymbol]) {\n      size = Infinity;\n      iter = collection[iteratorSymbol]();\n      iterate = iterator.length === 3 ? symbolIteratorWithKey : symbolIterator;\n    } else if (typeof collection === obj) {\n      keys = nativeKeys(collection);\n      size = keys.length;\n      iterate = iterator.length === 3 ? objectIteratorWithKey : objectIterator;\n    }\n\n    if (!size || isNaN(limit) || limit < 1) {\n      return callback(null, result);\n    }\n\n    timesSync(limit > size ? size : limit, iterate);\n\n    function arrayIterator() {\n      index = started++;\n\n      if (index < size) {\n        iterator(collection[index], createCallback(index));\n      }\n    }\n\n    function arrayIteratorWithIndex() {\n      index = started++;\n\n      if (index < size) {\n        iterator(collection[index], index, createCallback(index));\n      }\n    }\n\n    function symbolIterator() {\n      item = iter.next();\n\n      if (item.done === false) {\n        iterator(item.value, createCallback(started++));\n      } else if (completed === started && iterator !== noop) {\n        iterator = noop;\n        callback(null, result);\n      }\n    }\n\n    function symbolIteratorWithKey() {\n      item = iter.next();\n\n      if (item.done === false) {\n        iterator(item.value, started, createCallback(started++));\n      } else if (completed === started && iterator !== noop) {\n        iterator = noop;\n        callback(null, result);\n      }\n    }\n\n    function objectIterator() {\n      index = started++;\n\n      if (index < size) {\n        key = keys[index];\n        iterator(collection[key], createCallback(key));\n      }\n    }\n\n    function objectIteratorWithKey() {\n      index = started++;\n\n      if (index < size) {\n        key = keys[index];\n        iterator(collection[key], key, createCallback(key));\n      }\n    }\n\n    function createCallback(key) {\n      return function (err, res) {\n        if (key === null) {\n          throwError();\n        }\n\n        if (err) {\n          key = null;\n          iterate = noop;\n          callback = once(callback);\n          callback(err, objectClone(result));\n          return;\n        }\n\n        result[key] = res;\n        key = null;\n\n        if (++completed === size) {\n          callback(null, result);\n        } else if (sync) {\n          nextTick(iterate);\n        } else {\n          sync = true;\n          iterate();\n        }\n\n        sync = false;\n      };\n    }\n  }\n  /**\n   * @private\n   * @param {Function} arrayEach\n   * @param {Function} baseEach\n   * @param {Function} symbolEach\n   * @param {boolean} bool\n   */\n\n\n  function createDetect(arrayEach, baseEach, symbolEach, bool) {\n    return function (collection, iterator, callback) {\n      callback = callback || noop;\n      var size, keys;\n      var completed = 0;\n\n      if (isArray(collection)) {\n        size = collection.length;\n        arrayEach(collection, iterator, createCallback);\n      } else if (!collection) {} else if (iteratorSymbol && collection[iteratorSymbol]) {\n        size = symbolEach(collection, iterator, createCallback);\n        size && size === completed && callback(null);\n      } else if (typeof collection === obj) {\n        keys = nativeKeys(collection);\n        size = keys.length;\n        baseEach(collection, iterator, createCallback, keys);\n      }\n\n      if (!size) {\n        callback(null);\n      }\n\n      function createCallback(value) {\n        var called = false;\n        return function done(err, res) {\n          if (called) {\n            throwError();\n          }\n\n          called = true;\n\n          if (err) {\n            callback = once(callback);\n            callback(err);\n          } else if (!!res === bool) {\n            callback = once(callback);\n            callback(null, value);\n          } else if (++completed === size) {\n            callback(null);\n          }\n        };\n      }\n    };\n  }\n  /**\n   * @private\n   * @param {boolean} bool\n   */\n\n\n  function createDetectSeries(bool) {\n    return function (collection, iterator, callback) {\n      callback = onlyOnce(callback || noop);\n      var size, key, value, keys, iter, item, iterate;\n      var sync = false;\n      var completed = 0;\n\n      if (isArray(collection)) {\n        size = collection.length;\n        iterate = iterator.length === 3 ? arrayIteratorWithIndex : arrayIterator;\n      } else if (!collection) {} else if (iteratorSymbol && collection[iteratorSymbol]) {\n        size = Infinity;\n        iter = collection[iteratorSymbol]();\n        iterate = iterator.length === 3 ? symbolIteratorWithKey : symbolIterator;\n      } else if (typeof collection === obj) {\n        keys = nativeKeys(collection);\n        size = keys.length;\n        iterate = iterator.length === 3 ? objectIteratorWithKey : objectIterator;\n      }\n\n      if (!size) {\n        return callback(null);\n      }\n\n      iterate();\n\n      function arrayIterator() {\n        value = collection[completed];\n        iterator(value, done);\n      }\n\n      function arrayIteratorWithIndex() {\n        value = collection[completed];\n        iterator(value, completed, done);\n      }\n\n      function symbolIterator() {\n        item = iter.next();\n        value = item.value;\n        item.done ? callback(null) : iterator(value, done);\n      }\n\n      function symbolIteratorWithKey() {\n        item = iter.next();\n        value = item.value;\n        item.done ? callback(null) : iterator(value, completed, done);\n      }\n\n      function objectIterator() {\n        value = collection[keys[completed]];\n        iterator(value, done);\n      }\n\n      function objectIteratorWithKey() {\n        key = keys[completed];\n        value = collection[key];\n        iterator(value, key, done);\n      }\n\n      function done(err, res) {\n        if (err) {\n          callback(err);\n        } else if (!!res === bool) {\n          iterate = throwError;\n          callback(null, value);\n        } else if (++completed === size) {\n          iterate = throwError;\n          callback(null);\n        } else if (sync) {\n          nextTick(iterate);\n        } else {\n          sync = true;\n          iterate();\n        }\n\n        sync = false;\n      }\n    };\n  }\n  /**\n   * @private\n   * @param {boolean} bool\n   */\n\n\n  function createDetectLimit(bool) {\n    return function (collection, limit, iterator, callback) {\n      callback = callback || noop;\n      var size, index, key, value, keys, iter, item, iterate;\n      var sync = false;\n      var started = 0;\n      var completed = 0;\n\n      if (isArray(collection)) {\n        size = collection.length;\n        iterate = iterator.length === 3 ? arrayIteratorWithIndex : arrayIterator;\n      } else if (!collection) {} else if (iteratorSymbol && collection[iteratorSymbol]) {\n        size = Infinity;\n        iter = collection[iteratorSymbol]();\n        iterate = iterator.length === 3 ? symbolIteratorWithKey : symbolIterator;\n      } else if (typeof collection === obj) {\n        keys = nativeKeys(collection);\n        size = keys.length;\n        iterate = iterator.length === 3 ? objectIteratorWithKey : objectIterator;\n      }\n\n      if (!size || isNaN(limit) || limit < 1) {\n        return callback(null);\n      }\n\n      timesSync(limit > size ? size : limit, iterate);\n\n      function arrayIterator() {\n        index = started++;\n\n        if (index < size) {\n          value = collection[index];\n          iterator(value, createCallback(value));\n        }\n      }\n\n      function arrayIteratorWithIndex() {\n        index = started++;\n\n        if (index < size) {\n          value = collection[index];\n          iterator(value, index, createCallback(value));\n        }\n      }\n\n      function symbolIterator() {\n        item = iter.next();\n\n        if (item.done === false) {\n          started++;\n          value = item.value;\n          iterator(value, createCallback(value));\n        } else if (completed === started && iterator !== noop) {\n          iterator = noop;\n          callback(null);\n        }\n      }\n\n      function symbolIteratorWithKey() {\n        item = iter.next();\n\n        if (item.done === false) {\n          value = item.value;\n          iterator(value, started++, createCallback(value));\n        } else if (completed === started && iterator !== noop) {\n          iterator = noop;\n          callback(null);\n        }\n      }\n\n      function objectIterator() {\n        index = started++;\n\n        if (index < size) {\n          value = collection[keys[index]];\n          iterator(value, createCallback(value));\n        }\n      }\n\n      function objectIteratorWithKey() {\n        if (started < size) {\n          key = keys[started++];\n          value = collection[key];\n          iterator(value, key, createCallback(value));\n        }\n      }\n\n      function createCallback(value) {\n        var called = false;\n        return function (err, res) {\n          if (called) {\n            throwError();\n          }\n\n          called = true;\n\n          if (err) {\n            iterate = noop;\n            callback = once(callback);\n            callback(err);\n          } else if (!!res === bool) {\n            iterate = noop;\n            callback = once(callback);\n            callback(null, value);\n          } else if (++completed === size) {\n            callback(null);\n          } else if (sync) {\n            nextTick(iterate);\n          } else {\n            sync = true;\n            iterate();\n          }\n\n          sync = false;\n        };\n      }\n    };\n  }\n  /**\n   * @private\n   * @param {Function} arrayEach\n   * @param {Function} baseEach\n   * @param {Function} symbolEach\n   * @param {boolean} bool\n   */\n\n\n  function createPick(arrayEach, baseEach, symbolEach, bool) {\n    return function (collection, iterator, callback) {\n      callback = callback || noop;\n      var size, keys;\n      var completed = 0;\n      var result = {};\n\n      if (isArray(collection)) {\n        size = collection.length;\n        arrayEach(collection, iterator, createCallback);\n      } else if (!collection) {} else if (iteratorSymbol && collection[iteratorSymbol]) {\n        size = symbolEach(collection, iterator, createCallback);\n        size && size === completed && callback(null, result);\n      } else if (typeof collection === obj) {\n        keys = nativeKeys(collection);\n        size = keys.length;\n        baseEach(collection, iterator, createCallback, keys);\n      }\n\n      if (!size) {\n        return callback(null, {});\n      }\n\n      function createCallback(key, value) {\n        return function done(err, res) {\n          if (key === null) {\n            throwError();\n          }\n\n          if (err) {\n            key = null;\n            callback = once(callback);\n            callback(err, objectClone(result));\n            return;\n          }\n\n          if (!!res === bool) {\n            result[key] = value;\n          }\n\n          key = null;\n\n          if (++completed === size) {\n            callback(null, result);\n          }\n        };\n      }\n    };\n  }\n  /**\n   * @private\n   * @param {boolean} bool\n   */\n\n\n  function createPickSeries(bool) {\n    return function (collection, iterator, callback) {\n      callback = onlyOnce(callback || noop);\n      var size, key, value, keys, iter, item, iterate;\n      var sync = false;\n      var result = {};\n      var completed = 0;\n\n      if (isArray(collection)) {\n        size = collection.length;\n        iterate = iterator.length === 3 ? arrayIteratorWithIndex : arrayIterator;\n      } else if (!collection) {} else if (iteratorSymbol && collection[iteratorSymbol]) {\n        size = Infinity;\n        iter = collection[iteratorSymbol]();\n        iterate = iterator.length === 3 ? symbolIteratorWithKey : symbolIterator;\n      } else if (typeof collection === obj) {\n        keys = nativeKeys(collection);\n        size = keys.length;\n        iterate = iterator.length === 3 ? objectIteratorWithKey : objectIterator;\n      }\n\n      if (!size) {\n        return callback(null, {});\n      }\n\n      iterate();\n\n      function arrayIterator() {\n        key = completed;\n        value = collection[completed];\n        iterator(value, done);\n      }\n\n      function arrayIteratorWithIndex() {\n        key = completed;\n        value = collection[completed];\n        iterator(value, completed, done);\n      }\n\n      function symbolIterator() {\n        key = completed;\n        item = iter.next();\n        value = item.value;\n        item.done ? callback(null, result) : iterator(value, done);\n      }\n\n      function symbolIteratorWithKey() {\n        key = completed;\n        item = iter.next();\n        value = item.value;\n        item.done ? callback(null, result) : iterator(value, key, done);\n      }\n\n      function objectIterator() {\n        key = keys[completed];\n        value = collection[key];\n        iterator(value, done);\n      }\n\n      function objectIteratorWithKey() {\n        key = keys[completed];\n        value = collection[key];\n        iterator(value, key, done);\n      }\n\n      function done(err, res) {\n        if (err) {\n          callback(err, result);\n          return;\n        }\n\n        if (!!res === bool) {\n          result[key] = value;\n        }\n\n        if (++completed === size) {\n          iterate = throwError;\n          callback(null, result);\n        } else if (sync) {\n          nextTick(iterate);\n        } else {\n          sync = true;\n          iterate();\n        }\n\n        sync = false;\n      }\n    };\n  }\n  /**\n   * @private\n   * @param {boolean} bool\n   */\n\n\n  function createPickLimit(bool) {\n    return function (collection, limit, iterator, callback) {\n      callback = callback || noop;\n      var size, index, key, value, keys, iter, item, iterate;\n      var sync = false;\n      var result = {};\n      var started = 0;\n      var completed = 0;\n\n      if (isArray(collection)) {\n        size = collection.length;\n        iterate = iterator.length === 3 ? arrayIteratorWithIndex : arrayIterator;\n      } else if (!collection) {} else if (iteratorSymbol && collection[iteratorSymbol]) {\n        size = Infinity;\n        iter = collection[iteratorSymbol]();\n        iterate = iterator.length === 3 ? symbolIteratorWithKey : symbolIterator;\n      } else if (typeof collection === obj) {\n        keys = nativeKeys(collection);\n        size = keys.length;\n        iterate = iterator.length === 3 ? objectIteratorWithKey : objectIterator;\n      }\n\n      if (!size || isNaN(limit) || limit < 1) {\n        return callback(null, {});\n      }\n\n      timesSync(limit > size ? size : limit, iterate);\n\n      function arrayIterator() {\n        index = started++;\n\n        if (index < size) {\n          value = collection[index];\n          iterator(value, createCallback(value, index));\n        }\n      }\n\n      function arrayIteratorWithIndex() {\n        index = started++;\n\n        if (index < size) {\n          value = collection[index];\n          iterator(value, index, createCallback(value, index));\n        }\n      }\n\n      function symbolIterator() {\n        item = iter.next();\n\n        if (item.done === false) {\n          value = item.value;\n          iterator(value, createCallback(value, started++));\n        } else if (completed === started && iterator !== noop) {\n          iterator = noop;\n          callback(null, result);\n        }\n      }\n\n      function symbolIteratorWithKey() {\n        item = iter.next();\n\n        if (item.done === false) {\n          value = item.value;\n          iterator(value, started, createCallback(value, started++));\n        } else if (completed === started && iterator !== noop) {\n          iterator = noop;\n          callback(null, result);\n        }\n      }\n\n      function objectIterator() {\n        if (started < size) {\n          key = keys[started++];\n          value = collection[key];\n          iterator(value, createCallback(value, key));\n        }\n      }\n\n      function objectIteratorWithKey() {\n        if (started < size) {\n          key = keys[started++];\n          value = collection[key];\n          iterator(value, key, createCallback(value, key));\n        }\n      }\n\n      function createCallback(value, key) {\n        return function (err, res) {\n          if (key === null) {\n            throwError();\n          }\n\n          if (err) {\n            key = null;\n            iterate = noop;\n            callback = once(callback);\n            callback(err, objectClone(result));\n            return;\n          }\n\n          if (!!res === bool) {\n            result[key] = value;\n          }\n\n          key = null;\n\n          if (++completed === size) {\n            iterate = throwError;\n            callback = onlyOnce(callback);\n            callback(null, result);\n          } else if (sync) {\n            nextTick(iterate);\n          } else {\n            sync = true;\n            iterate();\n          }\n\n          sync = false;\n        };\n      }\n    };\n  }\n  /**\n   * @memberof async\n   * @namespace reduce\n   * @param {Array|Object} collection\n   * @param {*} result\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var collection = [1, 3, 2, 4];\n   * var iterator = function(result, num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, result + num);\n   *   }, num * 10);\n   * };\n   * async.reduce(collection, 0, iterator, function(err, res) {\n   *   console.log(res); // 10\n   *   console.log(order); // [1, 3, 2, 4]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var collection = [1, 3, 2, 4];\n   * var iterator = function(result, num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, result + num);\n   *   }, num * 10);\n   * };\n   * async.reduce(collection, '', iterator, function(err, res) {\n   *   console.log(res); // '1324'\n   *   console.log(order); // [[1, 0], [3, 1], [2, 2], [4, 3]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2, d: 4 };\n   * var iterator = function(result, num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, result + num);\n   *   }, num * 10);\n   * };\n   * async.reduce(collection, '', iterator, function(err, res) {\n   *   console.log(res); // '1324'\n   *   console.log(order); // [1, 3, 2, 4]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2, d: 4 };\n   * var iterator = function(result, num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, result + num);\n   *   }, num * 10);\n   * };\n   * async.reduce(collection, 0, iterator, function(err, res) {\n   *   console.log(res); // 10\n   *   console.log(order); // [[1, 'a'], [3, 'b'], [2, 'b'], [4, 'd']]\n   * });\n   *\n   */\n\n\n  function reduce(collection, result, iterator, callback) {\n    callback = onlyOnce(callback || noop);\n    var size, key, keys, iter, item, iterate;\n    var sync = false;\n    var completed = 0;\n\n    if (isArray(collection)) {\n      size = collection.length;\n      iterate = iterator.length === 4 ? arrayIteratorWithIndex : arrayIterator;\n    } else if (!collection) {} else if (iteratorSymbol && collection[iteratorSymbol]) {\n      size = Infinity;\n      iter = collection[iteratorSymbol]();\n      iterate = iterator.length === 4 ? symbolIteratorWithKey : symbolIterator;\n    } else if (typeof collection === obj) {\n      keys = nativeKeys(collection);\n      size = keys.length;\n      iterate = iterator.length === 4 ? objectIteratorWithKey : objectIterator;\n    }\n\n    if (!size) {\n      return callback(null, result);\n    }\n\n    iterate(result);\n\n    function arrayIterator(result) {\n      iterator(result, collection[completed], done);\n    }\n\n    function arrayIteratorWithIndex(result) {\n      iterator(result, collection[completed], completed, done);\n    }\n\n    function symbolIterator(result) {\n      item = iter.next();\n      item.done ? callback(null, result) : iterator(result, item.value, done);\n    }\n\n    function symbolIteratorWithKey(result) {\n      item = iter.next();\n      item.done ? callback(null, result) : iterator(result, item.value, completed, done);\n    }\n\n    function objectIterator(result) {\n      iterator(result, collection[keys[completed]], done);\n    }\n\n    function objectIteratorWithKey(result) {\n      key = keys[completed];\n      iterator(result, collection[key], key, done);\n    }\n\n    function done(err, result) {\n      if (err) {\n        callback(err, result);\n      } else if (++completed === size) {\n        iterator = throwError;\n        callback(null, result);\n      } else if (sync) {\n        nextTick(function () {\n          iterate(result);\n        });\n      } else {\n        sync = true;\n        iterate(result);\n      }\n\n      sync = false;\n    }\n  }\n  /**\n   * @memberof async\n   * @namespace reduceRight\n   * @param {Array|Object} collection\n   * @param {*} result\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var collection = [1, 3, 2, 4];\n   * var iterator = function(result, num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, result + num);\n   *   }, num * 10);\n   * };\n   * async.reduceRight(collection, 0, iterator, function(err, res) {\n   *   console.log(res); // 10\n   *   console.log(order); // [4, 2, 3, 1]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var collection = [1, 3, 2, 4];\n   * var iterator = function(result, num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, result + num);\n   *   }, num * 10);\n   * };\n   * async.reduceRight(collection, '', iterator, function(err, res) {\n   *   console.log(res); // '4231'\n   *   console.log(order); // [[4, 3], [2, 2], [3, 1], [1, 0]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2, d: 4 };\n   * var iterator = function(result, num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, result + num);\n   *   }, num * 10);\n   * };\n   * async.reduceRight(collection, '', iterator, function(err, res) {\n   *   console.log(res); // '4231'\n   *   console.log(order); // [4, 2, 3, 1]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2, d: 4 };\n   * var iterator = function(result, num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, result + num);\n   *   }, num * 10);\n   * };\n   * async.reduceRight(collection, 0, iterator, function(err, res) {\n   *   console.log(res); // 10\n   *   console.log(order); // [[4, 3], [2, 2], [3, 1], [1, 0]]\n   * });\n   *\n   */\n\n\n  function reduceRight(collection, result, iterator, callback) {\n    callback = onlyOnce(callback || noop);\n    var resIndex, index, key, keys, iter, item, col, iterate;\n    var sync = false;\n\n    if (isArray(collection)) {\n      resIndex = collection.length;\n      iterate = iterator.length === 4 ? arrayIteratorWithIndex : arrayIterator;\n    } else if (!collection) {} else if (iteratorSymbol && collection[iteratorSymbol]) {\n      col = [];\n      iter = collection[iteratorSymbol]();\n      index = -1;\n\n      while ((item = iter.next()).done === false) {\n        col[++index] = item.value;\n      }\n\n      collection = col;\n      resIndex = col.length;\n      iterate = iterator.length === 4 ? arrayIteratorWithIndex : arrayIterator;\n    } else if (typeof collection === obj) {\n      keys = nativeKeys(collection);\n      resIndex = keys.length;\n      iterate = iterator.length === 4 ? objectIteratorWithKey : objectIterator;\n    }\n\n    if (!resIndex) {\n      return callback(null, result);\n    }\n\n    iterate(result);\n\n    function arrayIterator(result) {\n      iterator(result, collection[--resIndex], done);\n    }\n\n    function arrayIteratorWithIndex(result) {\n      iterator(result, collection[--resIndex], resIndex, done);\n    }\n\n    function objectIterator(result) {\n      iterator(result, collection[keys[--resIndex]], done);\n    }\n\n    function objectIteratorWithKey(result) {\n      key = keys[--resIndex];\n      iterator(result, collection[key], key, done);\n    }\n\n    function done(err, result) {\n      if (err) {\n        callback(err, result);\n      } else if (resIndex === 0) {\n        iterate = throwError;\n        callback(null, result);\n      } else if (sync) {\n        nextTick(function () {\n          iterate(result);\n        });\n      } else {\n        sync = true;\n        iterate(result);\n      }\n\n      sync = false;\n    }\n  }\n  /**\n   * @private\n   * @param {Function} arrayEach\n   * @param {Function} baseEach\n   * @param {Function} symbolEach\n   */\n\n\n  function createTransform(arrayEach, baseEach, symbolEach) {\n    return function transform(collection, accumulator, iterator, callback) {\n      if (arguments.length === 3) {\n        callback = iterator;\n        iterator = accumulator;\n        accumulator = undefined;\n      }\n\n      callback = callback || noop;\n      var size, keys, result;\n      var completed = 0;\n\n      if (isArray(collection)) {\n        size = collection.length;\n        result = accumulator !== undefined ? accumulator : [];\n        arrayEach(collection, result, iterator, done);\n      } else if (!collection) {} else if (iteratorSymbol && collection[iteratorSymbol]) {\n        result = accumulator !== undefined ? accumulator : {};\n        size = symbolEach(collection, result, iterator, done);\n        size && size === completed && callback(null, result);\n      } else if (typeof collection === obj) {\n        keys = nativeKeys(collection);\n        size = keys.length;\n        result = accumulator !== undefined ? accumulator : {};\n        baseEach(collection, result, iterator, done, keys);\n      }\n\n      if (!size) {\n        callback(null, accumulator !== undefined ? accumulator : result || {});\n      }\n\n      function done(err, bool) {\n        if (err) {\n          callback = once(callback);\n          callback(err, isArray(result) ? createArray(result) : objectClone(result));\n        } else if (++completed === size) {\n          callback(null, result);\n        } else if (bool === false) {\n          callback = once(callback);\n          callback(null, isArray(result) ? createArray(result) : objectClone(result));\n        }\n      }\n    };\n  }\n  /**\n   * @memberof async\n   * @namespace transformSeries\n   * @param {Array|Object} collection\n   * @param {Array|Object|Function} [accumulator]\n   * @param {Function} [iterator]\n   * @param {Function} [callback]\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var collection = [1, 3, 2, 4];\n   * var iterator = function(result, num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     result.push(num)\n   *     done();\n   *   }, num * 10);\n   * };\n   * async.transformSeries(collection, iterator, function(err, res) {\n   *   console.log(res); // [1, 3, 2, 4]\n   *   console.log(order); // [1, 3, 2, 4]\n   * });\n   *\n   * @example\n   *\n   * // array with index and accumulator\n   * var order = [];\n   * var collection = [1, 3, 2, 4];\n   * var iterator = function(result, num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     result[index] = num;\n   *     done();\n   *   }, num * 10);\n   * };\n   * async.transformSeries(collection, {}, iterator, function(err, res) {\n   *   console.log(res); // { '0': 1, '1': 3, '2': 2, '3': 4 }\n   *   console.log(order); // [[1, 0], [3, 1], [2, 2], [4, 3]]\n   * });\n   *\n   * @example\n   *\n   * // object with accumulator\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2, d: 4 };\n   * var iterator = function(result, num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     result.push(num);\n   *     done();\n   *   }, num * 10);\n   * };\n   * async.transformSeries(collection, [], iterator, function(err, res) {\n   *   console.log(res); // [1, 3, 2, 4]\n   *   console.log(order); // [1, 3, 2, 4]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2, d: 4 };\n   * var iterator = function(result, num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     result[key] = num;\n   *     done();\n   *   }, num * 10);\n   * };\n   * async.transformSeries(collection, iterator, function(err, res) {\n   *   console.log(res); //  { a: 1, b: 3, c: 2, d: 4 }\n   *   console.log(order); // [[1, 'a'], [3, 'b'], [2, 'b'], [4, 'd']]\n   * });\n   *\n   */\n\n\n  function transformSeries(collection, accumulator, iterator, callback) {\n    if (arguments.length === 3) {\n      callback = iterator;\n      iterator = accumulator;\n      accumulator = undefined;\n    }\n\n    callback = onlyOnce(callback || noop);\n    var size, key, keys, iter, item, iterate, result;\n    var sync = false;\n    var completed = 0;\n\n    if (isArray(collection)) {\n      size = collection.length;\n      result = accumulator !== undefined ? accumulator : [];\n      iterate = iterator.length === 4 ? arrayIteratorWithIndex : arrayIterator;\n    } else if (!collection) {} else if (iteratorSymbol && collection[iteratorSymbol]) {\n      size = Infinity;\n      iter = collection[iteratorSymbol]();\n      result = accumulator !== undefined ? accumulator : {};\n      iterate = iterator.length === 4 ? symbolIteratorWithKey : symbolIterator;\n    } else if (typeof collection === obj) {\n      keys = nativeKeys(collection);\n      size = keys.length;\n      result = accumulator !== undefined ? accumulator : {};\n      iterate = iterator.length === 4 ? objectIteratorWithKey : objectIterator;\n    }\n\n    if (!size) {\n      return callback(null, accumulator !== undefined ? accumulator : result || {});\n    }\n\n    iterate();\n\n    function arrayIterator() {\n      iterator(result, collection[completed], done);\n    }\n\n    function arrayIteratorWithIndex() {\n      iterator(result, collection[completed], completed, done);\n    }\n\n    function symbolIterator() {\n      item = iter.next();\n      item.done ? callback(null, result) : iterator(result, item.value, done);\n    }\n\n    function symbolIteratorWithKey() {\n      item = iter.next();\n      item.done ? callback(null, result) : iterator(result, item.value, completed, done);\n    }\n\n    function objectIterator() {\n      iterator(result, collection[keys[completed]], done);\n    }\n\n    function objectIteratorWithKey() {\n      key = keys[completed];\n      iterator(result, collection[key], key, done);\n    }\n\n    function done(err, bool) {\n      if (err) {\n        callback(err, result);\n      } else if (++completed === size || bool === false) {\n        iterate = throwError;\n        callback(null, result);\n      } else if (sync) {\n        nextTick(iterate);\n      } else {\n        sync = true;\n        iterate();\n      }\n\n      sync = false;\n    }\n  }\n  /**\n   * @memberof async\n   * @namespace transformLimit\n   * @param {Array|Object} collection\n   * @param {number} limit - limit >= 1\n   * @param {Array|Object|Function} [accumulator]\n   * @param {Function} [iterator]\n   * @param {Function} [callback]\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 5, 3, 4, 2];\n   * var iterator = function(result, num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     result.push(num);\n   *     done();\n   *   }, num * 10);\n   * };\n   * async.transformLimit(array, 2, iterator, function(err, res) {\n   *   console.log(res); // [1, 3, 5, 2, 4]\n   *   console.log(order); // [1, 3, 5, 2, 4]\n   * });\n   *\n   * @example\n   *\n   * // array with index and accumulator\n   * var order = [];\n   * var array = [1, 5, 3, 4, 2];\n   * var iterator = function(result, num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     result[index] = key;\n   *     done();\n   *   }, num * 10);\n   * };\n   * async.transformLimit(array, 2, {}, iterator, function(err, res) {\n   *   console.log(res); // { '0': 1, '1': 5, '2': 3, '3': 4, '4': 2 }\n   *   console.log(order); // [[1, 0], [3, 2], [5, 1], [2, 4], [4, 3]]\n   * });\n   *\n   * @example\n   *\n   * // object with accumulator\n   * var order = [];\n   * var object = { a: 1, b: 5, c: 3, d: 4, e: 2 };\n   * var iterator = function(result, num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     result.push(num);\n   *     done();\n   *   }, num * 10);\n   * };\n   * async.transformLimit(object, 2, [], iterator, function(err, res) {\n   *   console.log(res); // [1, 3, 5, 2, 4]\n   *   console.log(order); // [1, 3, 5, 2, 4]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 5, c: 3, d: 4, e: 2 };\n   * var iterator = function(result, num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     result[key] = num;\n   *     done();\n   *   }, num * 10);\n   * };\n   * async.transformLimit(object, 2, iterator, function(err, res) {\n   *   console.log(res); // { a: 1, b: 5, c: 3, d: 4, e: 2 };\n   *   console.log(order); // [[1, 'a'], [3, 'c'], [5, 'b'], [2, 'e'], [4, 'd']]\n   * });\n   *\n   */\n\n\n  function transformLimit(collection, limit, accumulator, iterator, callback) {\n    if (arguments.length === 4) {\n      callback = iterator;\n      iterator = accumulator;\n      accumulator = undefined;\n    }\n\n    callback = callback || noop;\n    var size, index, key, keys, iter, item, iterate, result;\n    var sync = false;\n    var started = 0;\n    var completed = 0;\n\n    if (isArray(collection)) {\n      size = collection.length;\n      result = accumulator !== undefined ? accumulator : [];\n      iterate = iterator.length === 4 ? arrayIteratorWithIndex : arrayIterator;\n    } else if (!collection) {} else if (iteratorSymbol && collection[iteratorSymbol]) {\n      size = Infinity;\n      iter = collection[iteratorSymbol]();\n      result = accumulator !== undefined ? accumulator : {};\n      iterate = iterator.length === 4 ? symbolIteratorWithKey : symbolIterator;\n    } else if (typeof collection === obj) {\n      keys = nativeKeys(collection);\n      size = keys.length;\n      result = accumulator !== undefined ? accumulator : {};\n      iterate = iterator.length === 4 ? objectIteratorWithKey : objectIterator;\n    }\n\n    if (!size || isNaN(limit) || limit < 1) {\n      return callback(null, accumulator !== undefined ? accumulator : result || {});\n    }\n\n    timesSync(limit > size ? size : limit, iterate);\n\n    function arrayIterator() {\n      index = started++;\n\n      if (index < size) {\n        iterator(result, collection[index], onlyOnce(done));\n      }\n    }\n\n    function arrayIteratorWithIndex() {\n      index = started++;\n\n      if (index < size) {\n        iterator(result, collection[index], index, onlyOnce(done));\n      }\n    }\n\n    function symbolIterator() {\n      item = iter.next();\n\n      if (item.done === false) {\n        started++;\n        iterator(result, item.value, onlyOnce(done));\n      } else if (completed === started && iterator !== noop) {\n        iterator = noop;\n        callback(null, result);\n      }\n    }\n\n    function symbolIteratorWithKey() {\n      item = iter.next();\n\n      if (item.done === false) {\n        iterator(result, item.value, started++, onlyOnce(done));\n      } else if (completed === started && iterator !== noop) {\n        iterator = noop;\n        callback(null, result);\n      }\n    }\n\n    function objectIterator() {\n      index = started++;\n\n      if (index < size) {\n        iterator(result, collection[keys[index]], onlyOnce(done));\n      }\n    }\n\n    function objectIteratorWithKey() {\n      index = started++;\n\n      if (index < size) {\n        key = keys[index];\n        iterator(result, collection[key], key, onlyOnce(done));\n      }\n    }\n\n    function done(err, bool) {\n      if (err || bool === false) {\n        iterate = noop;\n        callback(err || null, isArray(result) ? createArray(result) : objectClone(result));\n        callback = noop;\n      } else if (++completed === size) {\n        iterator = noop;\n        callback(null, result);\n      } else if (sync) {\n        nextTick(iterate);\n      } else {\n        sync = true;\n        iterate();\n      }\n\n      sync = false;\n    }\n  }\n  /**\n   * @private\n   * @param {function} arrayEach\n   * @param {function} baseEach\n   * @param {function} symbolEach\n   */\n\n\n  function createSortBy(arrayEach, baseEach, symbolEach) {\n    return function sortBy(collection, iterator, callback) {\n      callback = callback || noop;\n      var size, array, criteria;\n      var completed = 0;\n\n      if (isArray(collection)) {\n        size = collection.length;\n        array = Array(size);\n        criteria = Array(size);\n        arrayEach(collection, iterator, createCallback);\n      } else if (!collection) {} else if (iteratorSymbol && collection[iteratorSymbol]) {\n        array = [];\n        criteria = [];\n        size = symbolEach(collection, iterator, createCallback);\n        size && size === completed && callback(null, sortByCriteria(array, criteria));\n      } else if (typeof collection === obj) {\n        var keys = nativeKeys(collection);\n        size = keys.length;\n        array = Array(size);\n        criteria = Array(size);\n        baseEach(collection, iterator, createCallback, keys);\n      }\n\n      if (!size) {\n        callback(null, []);\n      }\n\n      function createCallback(index, value) {\n        var called = false;\n        array[index] = value;\n        return function done(err, criterion) {\n          if (called) {\n            throwError();\n          }\n\n          called = true;\n          criteria[index] = criterion;\n\n          if (err) {\n            callback = once(callback);\n            callback(err);\n          } else if (++completed === size) {\n            callback(null, sortByCriteria(array, criteria));\n          }\n        };\n      }\n    };\n  }\n  /**\n   * @memberof async\n   * @namespace sortBySeries\n   * @param {Array|Object} collection\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.sortBySeries(array, iterator, function(err, res) {\n   *   console.log(res); // [1, 2, 3];\n   *   console.log(order); // [1, 3, 2]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.sortBySeries(array, iterator, function(err, res) {\n   *   console.log(res); // [1, 2, 3]\n   *   console.log(order); // [[1, 0], [3, 1], [2, 2]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.sortBySeries(object, iterator, function(err, res) {\n   *   console.log(res); // [1, 2, 3]\n   *   console.log(order); // [1, 3, 2]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.sortBySeries(object, iterator, function(err, res) {\n   *   console.log(res); // [1, 2, 3]\n   *   console.log(order); // [[1, 'a'], [3, 'b'], [2, 'c']]\n   * });\n   *\n   */\n\n\n  function sortBySeries(collection, iterator, callback) {\n    callback = onlyOnce(callback || noop);\n    var size, key, value, keys, iter, item, array, criteria, iterate;\n    var sync = false;\n    var completed = 0;\n\n    if (isArray(collection)) {\n      size = collection.length;\n      array = collection;\n      criteria = Array(size);\n      iterate = iterator.length === 3 ? arrayIteratorWithIndex : arrayIterator;\n    } else if (!collection) {} else if (iteratorSymbol && collection[iteratorSymbol]) {\n      size = Infinity;\n      array = [];\n      criteria = [];\n      iter = collection[iteratorSymbol]();\n      iterate = iterator.length === 3 ? symbolIteratorWithKey : symbolIterator;\n    } else if (typeof collection === obj) {\n      keys = nativeKeys(collection);\n      size = keys.length;\n      array = Array(size);\n      criteria = Array(size);\n      iterate = iterator.length === 3 ? objectIteratorWithKey : objectIterator;\n    }\n\n    if (!size) {\n      return callback(null, []);\n    }\n\n    iterate();\n\n    function arrayIterator() {\n      value = collection[completed];\n      iterator(value, done);\n    }\n\n    function arrayIteratorWithIndex() {\n      value = collection[completed];\n      iterator(value, completed, done);\n    }\n\n    function symbolIterator() {\n      item = iter.next();\n\n      if (item.done) {\n        return callback(null, sortByCriteria(array, criteria));\n      }\n\n      value = item.value;\n      array[completed] = value;\n      iterator(value, done);\n    }\n\n    function symbolIteratorWithKey() {\n      item = iter.next();\n\n      if (item.done) {\n        return callback(null, sortByCriteria(array, criteria));\n      }\n\n      value = item.value;\n      array[completed] = value;\n      iterator(value, completed, done);\n    }\n\n    function objectIterator() {\n      value = collection[keys[completed]];\n      array[completed] = value;\n      iterator(value, done);\n    }\n\n    function objectIteratorWithKey() {\n      key = keys[completed];\n      value = collection[key];\n      array[completed] = value;\n      iterator(value, key, done);\n    }\n\n    function done(err, criterion) {\n      criteria[completed] = criterion;\n\n      if (err) {\n        callback(err);\n      } else if (++completed === size) {\n        iterate = throwError;\n        callback(null, sortByCriteria(array, criteria));\n      } else if (sync) {\n        nextTick(iterate);\n      } else {\n        sync = true;\n        iterate();\n      }\n\n      sync = false;\n    }\n  }\n  /**\n   * @memberof async\n   * @namespace sortByLimit\n   * @param {Array|Object} collection\n   * @param {number} limit - limit >= 1\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 5, 3, 4, 2];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.sortByLimit(array, 2, iterator, function(err, res) {\n   *   console.log(res); // [1, 2, 3, 4, 5]\n   *   console.log(order); // [1, 3, 5, 2, 4]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1, 5, 3, 4, 2];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.sortByLimit(array, 2, iterator, function(err, res) {\n   *   console.log(res); // [1, 2, 3, 4, 5]\n   *   console.log(order); // [[1, 0], [3, 2], [5, 1], [2, 4], [4, 3]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 5, c: 3, d: 4, e: 2 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.sortByLimit(object, 2, iterator, function(err, res) {\n   *   console.log(res); // [1, 2, 3, 4, 5]\n   *   console.log(order); // [1, 3, 5, 2, 4]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 5, c: 3, d: 4, e: 2 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.sortByLimit(object, 2, iterator, function(err, res) {\n   *   console.log(res); // [1, 2, 3, 4, 5]\n   *   console.log(order); // [[1, 'a'], [3, 'c'], [5, 'b'], [2, 'e'], [4, 'd']]\n   * });\n   *\n   */\n\n\n  function sortByLimit(collection, limit, iterator, callback) {\n    callback = callback || noop;\n    var size, index, key, value, array, keys, iter, item, criteria, iterate;\n    var sync = false;\n    var started = 0;\n    var completed = 0;\n\n    if (isArray(collection)) {\n      size = collection.length;\n      array = collection;\n      iterate = iterator.length === 3 ? arrayIteratorWithIndex : arrayIterator;\n    } else if (!collection) {} else if (iteratorSymbol && collection[iteratorSymbol]) {\n      size = Infinity;\n      iter = collection[iteratorSymbol]();\n      array = [];\n      criteria = [];\n      iterate = iterator.length === 3 ? symbolIteratorWithKey : symbolIterator;\n    } else if (typeof collection === obj) {\n      keys = nativeKeys(collection);\n      size = keys.length;\n      array = Array(size);\n      iterate = iterator.length === 3 ? objectIteratorWithKey : objectIterator;\n    }\n\n    if (!size || isNaN(limit) || limit < 1) {\n      return callback(null, []);\n    }\n\n    criteria = criteria || Array(size);\n    timesSync(limit > size ? size : limit, iterate);\n\n    function arrayIterator() {\n      if (started < size) {\n        value = collection[started];\n        iterator(value, createCallback(value, started++));\n      }\n    }\n\n    function arrayIteratorWithIndex() {\n      index = started++;\n\n      if (index < size) {\n        value = collection[index];\n        iterator(value, index, createCallback(value, index));\n      }\n    }\n\n    function symbolIterator() {\n      item = iter.next();\n\n      if (item.done === false) {\n        value = item.value;\n        array[started] = value;\n        iterator(value, createCallback(value, started++));\n      } else if (completed === started && iterator !== noop) {\n        iterator = noop;\n        callback(null, sortByCriteria(array, criteria));\n      }\n    }\n\n    function symbolIteratorWithKey() {\n      item = iter.next();\n\n      if (item.done === false) {\n        value = item.value;\n        array[started] = value;\n        iterator(value, started, createCallback(value, started++));\n      } else if (completed === started && iterator !== noop) {\n        iterator = noop;\n        callback(null, sortByCriteria(array, criteria));\n      }\n    }\n\n    function objectIterator() {\n      if (started < size) {\n        value = collection[keys[started]];\n        array[started] = value;\n        iterator(value, createCallback(value, started++));\n      }\n    }\n\n    function objectIteratorWithKey() {\n      if (started < size) {\n        key = keys[started];\n        value = collection[key];\n        array[started] = value;\n        iterator(value, key, createCallback(value, started++));\n      }\n    }\n\n    function createCallback(value, index) {\n      var called = false;\n      return function (err, criterion) {\n        if (called) {\n          throwError();\n        }\n\n        called = true;\n        criteria[index] = criterion;\n\n        if (err) {\n          iterate = noop;\n          callback(err);\n          callback = noop;\n        } else if (++completed === size) {\n          callback(null, sortByCriteria(array, criteria));\n        } else if (sync) {\n          nextTick(iterate);\n        } else {\n          sync = true;\n          iterate();\n        }\n\n        sync = false;\n      };\n    }\n  }\n  /**\n   * @memberof async\n   * @namespace some\n   * @param {Array|Object} collection\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.some(array, iterator, function(err, res) {\n   *   console.log(res); // true\n   *   console.log(order); // [1]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.some(array, iterator, function(err, res) {\n   *   console.log(res); // true\n   *   console.log(order); // [[1, 0]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.some(object, iterator, function(err, res) {\n   *   console.log(res); // true\n   *   console.log(order); // [1]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.some(object, iterator, function(err, res) {\n   *   console.log(res); // true\n   *   console.log(order); // [[1, 'a']]\n   * });\n   *\n   */\n\n\n  function some(collection, iterator, callback) {\n    callback = callback || noop;\n    detect(collection, iterator, done);\n\n    function done(err, res) {\n      if (err) {\n        return callback(err);\n      }\n\n      callback(null, !!res);\n    }\n  }\n  /**\n   * @memberof async\n   * @namespace someSeries\n   * @param {Array|Object} collection\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.someSeries(array, iterator, function(err, res) {\n   *   console.log(res); // true\n   *   console.log(order); // [1]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.someSeries(array, iterator, function(err, res) {\n   *   console.log(res); // true\n   *   console.log(order); // [[1, 0]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.someSeries(object, iterator, function(err, res) {\n   *   console.log(res); // true\n   *   console.log(order); // [1]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.someSeries(object, iterator, function(err, res) {\n   *   console.log(res); // true\n   *   console.log(order); // [[1, 'a']]\n   * });\n   *\n   */\n\n\n  function someSeries(collection, iterator, callback) {\n    callback = callback || noop;\n    detectSeries(collection, iterator, done);\n\n    function done(err, res) {\n      if (err) {\n        return callback(err);\n      }\n\n      callback(null, !!res);\n    }\n  }\n  /**\n   * @memberof async\n   * @namespace someLimit\n   * @param {Array|Object} collection\n   * @param {number} limit - limit >= 1\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 5, 3, 4, 2];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.someLimit(array, 2, iterator, function(err, res) {\n   *   console.log(res); // true\n   *   console.log(order); // [1]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1, 5, 3, 4, 2];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.someLimit(array, 2, iterator, function(err, res) {\n   *   console.log(res); // true\n   *   console.log(order); // [[1, 0]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 5, c: 3, d: 4, e: 2 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.someLimit(object, 2, iterator, function(err, res) {\n   *   console.log(res); // true\n   *   console.log(order); // [1]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 5, c: 3, d: 4, e: 2 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.someLimit(object, 2, iterator, function(err, res) {\n   *   console.log(res); // true\n   *   console.log(order); // [[1, 'a']]\n   * });\n   *\n   */\n\n\n  function someLimit(collection, limit, iterator, callback) {\n    callback = callback || noop;\n    detectLimit(collection, limit, iterator, done);\n\n    function done(err, res) {\n      if (err) {\n        return callback(err);\n      }\n\n      callback(null, !!res);\n    }\n  }\n  /**\n   * @private\n   * @param {Function} arrayEach\n   * @param {Function} baseEach\n   * @param {Function} symbolEach\n   */\n\n\n  function createEvery(arrayEach, baseEach, symbolEach) {\n    var deny = createDetect(arrayEach, baseEach, symbolEach, false);\n    return function every(collection, iterator, callback) {\n      callback = callback || noop;\n      deny(collection, iterator, done);\n\n      function done(err, res) {\n        if (err) {\n          return callback(err);\n        }\n\n        callback(null, !res);\n      }\n    };\n  }\n  /**\n   * @private\n   */\n\n\n  function createEverySeries() {\n    var denySeries = createDetectSeries(false);\n    return function everySeries(collection, iterator, callback) {\n      callback = callback || noop;\n      denySeries(collection, iterator, done);\n\n      function done(err, res) {\n        if (err) {\n          return callback(err);\n        }\n\n        callback(null, !res);\n      }\n    };\n  }\n  /**\n   * @private\n   */\n\n\n  function createEveryLimit() {\n    var denyLimit = createDetectLimit(false);\n    return function everyLimit(collection, limit, iterator, callback) {\n      callback = callback || noop;\n      denyLimit(collection, limit, iterator, done);\n\n      function done(err, res) {\n        if (err) {\n          return callback(err);\n        }\n\n        callback(null, !res);\n      }\n    };\n  }\n  /**\n   * @private\n   * @param {Function} arrayEach\n   * @param {Function} baseEach\n   * @param {Function} symbolEach\n   */\n\n\n  function createConcat(arrayEach, baseEach, symbolEach) {\n    return function concat(collection, iterator, callback) {\n      callback = callback || noop;\n      var size, result;\n      var completed = 0;\n\n      if (isArray(collection)) {\n        size = collection.length;\n        result = Array(size);\n        arrayEach(collection, iterator, createCallback);\n      } else if (!collection) {} else if (iteratorSymbol && collection[iteratorSymbol]) {\n        result = [];\n        size = symbolEach(collection, iterator, createCallback);\n        size && size === completed && callback(null, result);\n      } else if (typeof collection === obj) {\n        var keys = nativeKeys(collection);\n        size = keys.length;\n        result = Array(size);\n        baseEach(collection, iterator, createCallback, keys);\n      }\n\n      if (!size) {\n        callback(null, []);\n      }\n\n      function createCallback(index) {\n        return function done(err, res) {\n          if (index === null) {\n            throwError();\n          }\n\n          if (err) {\n            index = null;\n            callback = once(callback);\n            arrayEachSync(result, function (array, index) {\n              if (array === undefined) {\n                result[index] = noop;\n              }\n            });\n            callback(err, makeConcatResult(result));\n            return;\n          }\n\n          switch (arguments.length) {\n            case 0:\n            case 1:\n              result[index] = noop;\n              break;\n\n            case 2:\n              result[index] = res;\n              break;\n\n            default:\n              result[index] = slice(arguments, 1);\n              break;\n          }\n\n          index = null;\n\n          if (++completed === size) {\n            callback(null, makeConcatResult(result));\n          }\n        };\n      }\n    };\n  }\n  /**\n   * @memberof async\n   * @namespace concatSeries\n   * @param {Array|Object} collection\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, [num]);\n   *   }, num * 10);\n   * };\n   * async.concatSeries(array, iterator, function(err, res) {\n   *   console.log(res); // [1, 3, 2];\n   *   console.log(order); // [1, 3, 2]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, [num]);\n   *   }, num * 10);\n   * };\n   * async.concatSeries(array, iterator, function(err, res) {\n   *   console.log(res); // [1, 3, 2]\n   *   console.log(order); // [[1, 0], [3, 1], [2, 2]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, [num]);\n   *   }, num * 10);\n   * };\n   * async.concatSeries(object, iterator, function(err, res) {\n   *   console.log(res); // [1, 3, 2]\n   *   console.log(order); // [1, 3, 2]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, [num]);\n   *   }, num * 10);\n   * };\n   * async.concatSeries(object, iterator, function(err, res) {\n   *   console.log(res); // [1, 3, 2]\n   *   console.log(order); // [[1, 'a'], [3, 'b'], [2, 'c']]\n   * });\n   *\n   */\n\n\n  function concatSeries(collection, iterator, callback) {\n    callback = onlyOnce(callback || noop);\n    var size, key, keys, iter, item, iterate;\n    var sync = false;\n    var result = [];\n    var completed = 0;\n\n    if (isArray(collection)) {\n      size = collection.length;\n      iterate = iterator.length === 3 ? arrayIteratorWithIndex : arrayIterator;\n    } else if (!collection) {} else if (iteratorSymbol && collection[iteratorSymbol]) {\n      size = Infinity;\n      iter = collection[iteratorSymbol]();\n      iterate = iterator.length === 3 ? symbolIteratorWithKey : symbolIterator;\n    } else if (typeof collection === obj) {\n      keys = nativeKeys(collection);\n      size = keys.length;\n      iterate = iterator.length === 3 ? objectIteratorWithKey : objectIterator;\n    }\n\n    if (!size) {\n      return callback(null, result);\n    }\n\n    iterate();\n\n    function arrayIterator() {\n      iterator(collection[completed], done);\n    }\n\n    function arrayIteratorWithIndex() {\n      iterator(collection[completed], completed, done);\n    }\n\n    function symbolIterator() {\n      item = iter.next();\n      item.done ? callback(null, result) : iterator(item.value, done);\n    }\n\n    function symbolIteratorWithKey() {\n      item = iter.next();\n      item.done ? callback(null, result) : iterator(item.value, completed, done);\n    }\n\n    function objectIterator() {\n      iterator(collection[keys[completed]], done);\n    }\n\n    function objectIteratorWithKey() {\n      key = keys[completed];\n      iterator(collection[key], key, done);\n    }\n\n    function done(err, array) {\n      if (isArray(array)) {\n        nativePush.apply(result, array);\n      } else if (arguments.length >= 2) {\n        nativePush.apply(result, slice(arguments, 1));\n      }\n\n      if (err) {\n        callback(err, result);\n      } else if (++completed === size) {\n        iterate = throwError;\n        callback(null, result);\n      } else if (sync) {\n        nextTick(iterate);\n      } else {\n        sync = true;\n        iterate();\n      }\n\n      sync = false;\n    }\n  }\n  /**\n   * @memberof async\n   * @namespace concatLimit\n   * @param {Array|Object} collection\n   * @param {number} limit - limit >= 1\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 5, 3, 4, 2];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, [num]);\n   *   }, num * 10);\n   * };\n   * async.concatLimit(array, 2, iterator, function(err, res) {\n   *   console.log(res); // [1, 3, 5, 2, 4]\n   *   console.log(order); // [1, 3, 5, 2, 4]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1, 5, 3, 4, 2];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, [num]);\n   *   }, num * 10);\n   * };\n   * async.cocnatLimit(array, 2, iterator, function(err, res) {\n   *   console.log(res); // [1, 3, 5, 2, 4]\n   *   console.log(order); // [[1, 0], [3, 2], [5, 1], [2, 4], [4, 3]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 5, c: 3, d: 4, e: 2 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, [num]);\n   *   }, num * 10);\n   * };\n   * async.concatLimit(object, 2, iterator, function(err, res) {\n   *   console.log(res); // [1, 3, 5, 2, 4]\n   *   console.log(order); // [1, 3, 5, 2, 4]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 5, c: 3, d: 4, e: 2 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.cocnatLimit(object, 2, iterator, function(err, res) {\n   *   console.log(res); // [1, 3, 5, 2, 4]\n   *   console.log(order); // [[1, 'a'], [3, 'c'], [5, 'b'], [2, 'e'], [4, 'd']]\n   * });\n   *\n   */\n\n\n  function concatLimit(collection, limit, iterator, callback) {\n    callback = callback || noop;\n    var size, key, iter, item, iterate, result;\n    var sync = false;\n    var started = 0;\n    var completed = 0;\n\n    if (isArray(collection)) {\n      size = collection.length;\n      iterate = iterator.length === 3 ? arrayIteratorWithIndex : arrayIterator;\n    } else if (!collection) {} else if (iteratorSymbol && collection[iteratorSymbol]) {\n      size = Infinity;\n      result = [];\n      iter = collection[iteratorSymbol]();\n      iterate = iterator.length === 3 ? symbolIteratorWithKey : symbolIterator;\n    } else if (typeof collection === obj) {\n      var keys = nativeKeys(collection);\n      size = keys.length;\n      iterate = iterator.length === 3 ? objectIteratorWithKey : objectIterator;\n    }\n\n    if (!size || isNaN(limit) || limit < 1) {\n      return callback(null, []);\n    }\n\n    result = result || Array(size);\n    timesSync(limit > size ? size : limit, iterate);\n\n    function arrayIterator() {\n      if (started < size) {\n        iterator(collection[started], createCallback(started++));\n      }\n    }\n\n    function arrayIteratorWithIndex() {\n      if (started < size) {\n        iterator(collection[started], started, createCallback(started++));\n      }\n    }\n\n    function symbolIterator() {\n      item = iter.next();\n\n      if (item.done === false) {\n        iterator(item.value, createCallback(started++));\n      } else if (completed === started && iterator !== noop) {\n        iterator = noop;\n        callback(null, makeConcatResult(result));\n      }\n    }\n\n    function symbolIteratorWithKey() {\n      item = iter.next();\n\n      if (item.done === false) {\n        iterator(item.value, started, createCallback(started++));\n      } else if (completed === started && iterator !== noop) {\n        iterator = noop;\n        callback(null, makeConcatResult(result));\n      }\n    }\n\n    function objectIterator() {\n      if (started < size) {\n        iterator(collection[keys[started]], createCallback(started++));\n      }\n    }\n\n    function objectIteratorWithKey() {\n      if (started < size) {\n        key = keys[started];\n        iterator(collection[key], key, createCallback(started++));\n      }\n    }\n\n    function createCallback(index) {\n      return function (err, res) {\n        if (index === null) {\n          throwError();\n        }\n\n        if (err) {\n          index = null;\n          iterate = noop;\n          callback = once(callback);\n          arrayEachSync(result, function (array, index) {\n            if (array === undefined) {\n              result[index] = noop;\n            }\n          });\n          callback(err, makeConcatResult(result));\n          return;\n        }\n\n        switch (arguments.length) {\n          case 0:\n          case 1:\n            result[index] = noop;\n            break;\n\n          case 2:\n            result[index] = res;\n            break;\n\n          default:\n            result[index] = slice(arguments, 1);\n            break;\n        }\n\n        index = null;\n\n        if (++completed === size) {\n          iterate = throwError;\n          callback(null, makeConcatResult(result));\n          callback = throwError;\n        } else if (sync) {\n          nextTick(iterate);\n        } else {\n          sync = true;\n          iterate();\n        }\n\n        sync = false;\n      };\n    }\n  }\n  /**\n   * @private\n   * @param {Function} arrayEach\n   * @param {Function} baseEach\n   * @param {Function} symbolEach\n   */\n\n\n  function createGroupBy(arrayEach, baseEach, symbolEach) {\n    return function groupBy(collection, iterator, callback) {\n      callback = callback || noop;\n      var size;\n      var completed = 0;\n      var result = {};\n\n      if (isArray(collection)) {\n        size = collection.length;\n        arrayEach(collection, iterator, createCallback);\n      } else if (!collection) {} else if (iteratorSymbol && collection[iteratorSymbol]) {\n        size = symbolEach(collection, iterator, createCallback);\n        size && size === completed && callback(null, result);\n      } else if (typeof collection === obj) {\n        var keys = nativeKeys(collection);\n        size = keys.length;\n        baseEach(collection, iterator, createCallback, keys);\n      }\n\n      if (!size) {\n        callback(null, {});\n      }\n\n      function createCallback(value) {\n        var called = false;\n        return function done(err, key) {\n          if (called) {\n            throwError();\n          }\n\n          called = true;\n\n          if (err) {\n            callback = once(callback);\n            callback(err, objectClone(result));\n            return;\n          }\n\n          var array = result[key];\n\n          if (!array) {\n            result[key] = [value];\n          } else {\n            array.push(value);\n          }\n\n          if (++completed === size) {\n            callback(null, result);\n          }\n        };\n      }\n    };\n  }\n  /**\n   * @memberof async\n   * @namespace groupBySeries\n   * @param {Array|Object} collection\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [4.2, 6.4, 6.1];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, Math.floor(num));\n   *   }, num * 10);\n   * };\n   * async.groupBySeries(array, iterator, function(err, res) {\n   *   console.log(res); // { '4': [4.2], '6': [6.4, 6.1] }\n   *   console.log(order); // [4.2, 6.4, 6.1]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [4.2, 6.4, 6.1];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, Math.floor(num));\n   *   }, num * 10);\n   * };\n   * async.groupBySeries(array, iterator, function(err, res) {\n   *   console.log(res); // { '4': [4.2], '6': [6.4, 6.1] }\n   *   console.log(order); // [[4.2, 0], [6.4, 1], [6.1, 2]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 4.2, b: 6.4, c: 6.1 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, Math.floor(num));\n   *   }, num * 10);\n   * };\n   * async.groupBySeries(object, iterator, function(err, res) {\n   *   console.log(res); // { '4': [4.2], '6': [6.4, 6.1] }\n   *   console.log(order); // [4.2, 6.4, 6.1]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 4.2, b: 6.4, c: 6.1 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, Math.floor(num));\n   *   }, num * 10);\n   * };\n   * async.groupBySeries(object, iterator, function(err, res) {\n   *   console.log(res); // { '4': [4.2], '6': [6.4, 6.1] }\n   *   console.log(order); // [[4.2, 'a'], [6.4, 'b'], [6.1, 'c']]\n   * });\n   *\n   */\n\n\n  function groupBySeries(collection, iterator, callback) {\n    callback = onlyOnce(callback || noop);\n    var size, key, value, keys, iter, item, iterate;\n    var sync = false;\n    var completed = 0;\n    var result = {};\n\n    if (isArray(collection)) {\n      size = collection.length;\n      iterate = iterator.length === 3 ? arrayIteratorWithIndex : arrayIterator;\n    } else if (!collection) {} else if (iteratorSymbol && collection[iteratorSymbol]) {\n      size = Infinity;\n      iter = collection[iteratorSymbol]();\n      iterate = iterator.length === 3 ? symbolIteratorWithKey : symbolIterator;\n    } else if (typeof collection === obj) {\n      keys = nativeKeys(collection);\n      size = keys.length;\n      iterate = iterator.length === 3 ? objectIteratorWithKey : objectIterator;\n    }\n\n    if (!size) {\n      return callback(null, result);\n    }\n\n    iterate();\n\n    function arrayIterator() {\n      value = collection[completed];\n      iterator(value, done);\n    }\n\n    function arrayIteratorWithIndex() {\n      value = collection[completed];\n      iterator(value, completed, done);\n    }\n\n    function symbolIterator() {\n      item = iter.next();\n      value = item.value;\n      item.done ? callback(null, result) : iterator(value, done);\n    }\n\n    function symbolIteratorWithKey() {\n      item = iter.next();\n      value = item.value;\n      item.done ? callback(null, result) : iterator(value, completed, done);\n    }\n\n    function objectIterator() {\n      value = collection[keys[completed]];\n      iterator(value, done);\n    }\n\n    function objectIteratorWithKey() {\n      key = keys[completed];\n      value = collection[key];\n      iterator(value, key, done);\n    }\n\n    function done(err, key) {\n      if (err) {\n        iterate = throwError;\n        callback = onlyOnce(callback);\n        callback(err, objectClone(result));\n        return;\n      }\n\n      var array = result[key];\n\n      if (!array) {\n        result[key] = [value];\n      } else {\n        array.push(value);\n      }\n\n      if (++completed === size) {\n        iterate = throwError;\n        callback(null, result);\n      } else if (sync) {\n        nextTick(iterate);\n      } else {\n        sync = true;\n        iterate();\n      }\n\n      sync = false;\n    }\n  }\n  /**\n   * @memberof async\n   * @namespace groupByLimit\n   * @param {Array|Object} collection\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1.1, 5.9, 3.2, 3.9, 2.1];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, Math.floor(num));\n   *   }, num * 10);\n   * };\n   * async.groupByLimit(array, 2, iterator, function(err, res) {\n   *   console.log(res); // { '1': [1.1], '3': [3.2, 3.9], '5': [5.9], '2': [2.1] }\n   *   console.log(order); // [1.1, 3.2, 5.9, 2.1, 3.9]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1.1, 5.9, 3.2, 3.9, 2.1];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, Math.floor(num));\n   *   }, num * 10);\n   * };\n   * async.groupByLimit(array, 2, iterator, function(err, res) {\n   *   console.log(res); // { '1': [1.1], '3': [3.2, 3.9], '5': [5.9], '2': [2.1] }\n   *   console.log(order); // [[1.1, 0], [3.2, 2], [5.9, 1], [2.1, 4], [3.9, 3]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1.1, b: 5.9, c: 3.2, d: 3.9, e: 2.1 }\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, Math.floor(num));\n   *   }, num * 10);\n   * };\n   * async.groupByLimit(object, 2, iterator, function(err, res) {\n   *   console.log(res); // { '1': [1.1], '3': [3.2, 3.9], '5': [5.9], '2': [2.1] }\n   *   console.log(order); // [1.1, 3.2, 5.9, 2.1, 3.9]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1.1, b: 5.9, c: 3.2, d: 3.9, e: 2.1 }\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, Math.floor(num));\n   *   }, num * 10);\n   * };\n   * async.groupByLimit(object, 2, iterator, function(err, res) {\n   *   console.log(res); // { '1': [1.1], '3': [3.2, 3.9], '5': [5.9], '2': [2.1] }\n   *   console.log(order); // [[1.1, 'a'], [3.2, 'c'], [5.9, 'b'], [2.1, 'e'], [3.9, 'd']]\n   * });\n   *\n   */\n\n\n  function groupByLimit(collection, limit, iterator, callback) {\n    callback = callback || noop;\n    var size, index, key, value, keys, iter, item, iterate;\n    var sync = false;\n    var started = 0;\n    var completed = 0;\n    var result = {};\n\n    if (isArray(collection)) {\n      size = collection.length;\n      iterate = iterator.length === 3 ? arrayIteratorWithIndex : arrayIterator;\n    } else if (!collection) {} else if (iteratorSymbol && collection[iteratorSymbol]) {\n      size = Infinity;\n      iter = collection[iteratorSymbol]();\n      iterate = iterator.length === 3 ? symbolIteratorWithKey : symbolIterator;\n    } else if (typeof collection === obj) {\n      keys = nativeKeys(collection);\n      size = keys.length;\n      iterate = iterator.length === 3 ? objectIteratorWithKey : objectIterator;\n    }\n\n    if (!size || isNaN(limit) || limit < 1) {\n      return callback(null, result);\n    }\n\n    timesSync(limit > size ? size : limit, iterate);\n\n    function arrayIterator() {\n      if (started < size) {\n        value = collection[started++];\n        iterator(value, createCallback(value));\n      }\n    }\n\n    function arrayIteratorWithIndex() {\n      index = started++;\n\n      if (index < size) {\n        value = collection[index];\n        iterator(value, index, createCallback(value));\n      }\n    }\n\n    function symbolIterator() {\n      item = iter.next();\n\n      if (item.done === false) {\n        started++;\n        value = item.value;\n        iterator(value, createCallback(value));\n      } else if (completed === started && iterator !== noop) {\n        iterator = noop;\n        callback(null, result);\n      }\n    }\n\n    function symbolIteratorWithKey() {\n      item = iter.next();\n\n      if (item.done === false) {\n        value = item.value;\n        iterator(value, started++, createCallback(value));\n      } else if (completed === started && iterator !== noop) {\n        iterator = noop;\n        callback(null, result);\n      }\n    }\n\n    function objectIterator() {\n      if (started < size) {\n        value = collection[keys[started++]];\n        iterator(value, createCallback(value));\n      }\n    }\n\n    function objectIteratorWithKey() {\n      if (started < size) {\n        key = keys[started++];\n        value = collection[key];\n        iterator(value, key, createCallback(value));\n      }\n    }\n\n    function createCallback(value) {\n      var called = false;\n      return function (err, key) {\n        if (called) {\n          throwError();\n        }\n\n        called = true;\n\n        if (err) {\n          iterate = noop;\n          callback = once(callback);\n          callback(err, objectClone(result));\n          return;\n        }\n\n        var array = result[key];\n\n        if (!array) {\n          result[key] = [value];\n        } else {\n          array.push(value);\n        }\n\n        if (++completed === size) {\n          callback(null, result);\n        } else if (sync) {\n          nextTick(iterate);\n        } else {\n          sync = true;\n          iterate();\n        }\n\n        sync = false;\n      };\n    }\n  }\n  /**\n   * @private\n   * @param {Function} arrayEach\n   * @param {Function} baseEach\n   */\n\n\n  function createParallel(arrayEach, baseEach) {\n    return function parallel(tasks, callback) {\n      callback = callback || noop;\n      var size, keys, result;\n      var completed = 0;\n\n      if (isArray(tasks)) {\n        size = tasks.length;\n        result = Array(size);\n        arrayEach(tasks, createCallback);\n      } else if (tasks && typeof tasks === obj) {\n        keys = nativeKeys(tasks);\n        size = keys.length;\n        result = {};\n        baseEach(tasks, createCallback, keys);\n      }\n\n      if (!size) {\n        callback(null, result);\n      }\n\n      function createCallback(key) {\n        return function (err, res) {\n          if (key === null) {\n            throwError();\n          }\n\n          if (err) {\n            key = null;\n            callback = once(callback);\n            callback(err, result);\n            return;\n          }\n\n          result[key] = arguments.length <= 2 ? res : slice(arguments, 1);\n          key = null;\n\n          if (++completed === size) {\n            callback(null, result);\n          }\n        };\n      }\n    };\n  }\n  /**\n   * @memberof async\n   * @namespace series\n   * @param {Array|Object} tasks - functions\n   * @param {Function} callback\n   * @example\n   *\n   * var order = [];\n   * var tasks = [\n   *  function(done) {\n   *    setTimeout(function() {\n   *      order.push(1);\n   *      done(null, 1);\n   *    }, 10);\n   *  },\n   *  function(done) {\n   *    setTimeout(function() {\n   *      order.push(2);\n   *      done(null, 2);\n   *    }, 30);\n   *  },\n   *  function(done) {\n   *    setTimeout(function() {\n   *      order.push(3);\n   *      done(null, 3);\n   *    }, 40);\n   *  },\n   *  function(done) {\n   *    setTimeout(function() {\n   *      order.push(4);\n   *      done(null, 4);\n   *    }, 20);\n   *  }\n   * ];\n   * async.series(tasks, function(err, res) {\n   *   console.log(res); // [1, 2, 3, 4];\n   *   console.log(order); // [1, 2, 3, 4]\n   * });\n   *\n   * @example\n   *\n   * var order = [];\n   * var tasks = {\n   *   'a': function(done) {\n   *     setTimeout(function() {\n   *       order.push(1);\n   *       done(null, 1);\n   *     }, 10);\n   *   },\n   *   'b': function(done) {\n   *     setTimeout(function() {\n   *       order.push(2);\n   *       done(null, 2);\n   *     }, 30);\n   *   },\n   *   'c': function(done) {\n   *     setTimeout(function() {\n   *       order.push(3);\n   *       done(null, 3);\n   *     }, 40);\n   *   },\n   *   'd': function(done) {\n   *     setTimeout(function() {\n   *       order.push(4);\n   *       done(null, 4);\n   *     }, 20);\n   *   }\n   * };\n   * async.series(tasks, function(err, res) {\n   *   console.log(res); // { a: 1, b: 2, c: 3, d:4 }\n   *   console.log(order); // [1, 4, 2, 3]\n   * });\n   *\n   */\n\n\n  function series(tasks, callback) {\n    callback = callback || noop;\n    var size, key, keys, result, iterate;\n    var sync = false;\n    var completed = 0;\n\n    if (isArray(tasks)) {\n      size = tasks.length;\n      result = Array(size);\n      iterate = arrayIterator;\n    } else if (tasks && typeof tasks === obj) {\n      keys = nativeKeys(tasks);\n      size = keys.length;\n      result = {};\n      iterate = objectIterator;\n    } else {\n      return callback(null);\n    }\n\n    if (!size) {\n      return callback(null, result);\n    }\n\n    iterate();\n\n    function arrayIterator() {\n      key = completed;\n      tasks[completed](done);\n    }\n\n    function objectIterator() {\n      key = keys[completed];\n      tasks[key](done);\n    }\n\n    function done(err, res) {\n      if (err) {\n        iterate = throwError;\n        callback = onlyOnce(callback);\n        callback(err, result);\n        return;\n      }\n\n      result[key] = arguments.length <= 2 ? res : slice(arguments, 1);\n\n      if (++completed === size) {\n        iterate = throwError;\n        callback(null, result);\n      } else if (sync) {\n        nextTick(iterate);\n      } else {\n        sync = true;\n        iterate();\n      }\n\n      sync = false;\n    }\n  }\n  /**\n   * @memberof async\n   * @namespace parallelLimit\n   * @param {Array|Object} tasks - functions\n   * @param {number} limit - limit >= 1\n   * @param {Function} callback\n   * @example\n   *\n   * var order = [];\n   * var tasks = [\n   *  function(done) {\n   *    setTimeout(function() {\n   *      order.push(1);\n   *      done(null, 1);\n   *    }, 10);\n   *  },\n   *  function(done) {\n   *    setTimeout(function() {\n   *      order.push(2);\n   *      done(null, 2);\n   *    }, 50);\n   *  },\n   *  function(done) {\n   *    setTimeout(function() {\n   *      order.push(3);\n   *      done(null, 3);\n   *    }, 30);\n   *  },\n   *  function(done) {\n   *    setTimeout(function() {\n   *      order.push(4);\n   *      done(null, 4);\n   *    }, 40);\n   *  }\n   * ];\n   * async.parallelLimit(tasks, 2, function(err, res) {\n   *   console.log(res); // [1, 2, 3, 4];\n   *   console.log(order); // [1, 3, 2, 4]\n   * });\n   *\n   * @example\n   *\n   * var order = [];\n   * var tasks = {\n   *   'a': function(done) {\n   *     setTimeout(function() {\n   *       order.push(1);\n   *       done(null, 1);\n   *     }, 10);\n   *   },\n   *   'b': function(done) {\n   *     setTimeout(function() {\n   *       order.push(2);\n   *       done(null, 2);\n   *     }, 50);\n   *   },\n   *   'c': function(done) {\n   *     setTimeout(function() {\n   *       order.push(3);\n   *       done(null, 3);\n   *     }, 20);\n   *   },\n   *   'd': function(done) {\n   *     setTimeout(function() {\n   *       order.push(4);\n   *       done(null, 4);\n   *     }, 40);\n   *   }\n   * };\n   * async.parallelLimit(tasks, 2, function(err, res) {\n   *   console.log(res); // { a: 1, b: 2, c: 3, d:4 }\n   *   console.log(order); // [1, 3, 2, 4]\n   * });\n   *\n   */\n\n\n  function parallelLimit(tasks, limit, callback) {\n    callback = callback || noop;\n    var size, index, key, keys, result, iterate;\n    var sync = false;\n    var started = 0;\n    var completed = 0;\n\n    if (isArray(tasks)) {\n      size = tasks.length;\n      result = Array(size);\n      iterate = arrayIterator;\n    } else if (tasks && typeof tasks === obj) {\n      keys = nativeKeys(tasks);\n      size = keys.length;\n      result = {};\n      iterate = objectIterator;\n    }\n\n    if (!size || isNaN(limit) || limit < 1) {\n      return callback(null, result);\n    }\n\n    timesSync(limit > size ? size : limit, iterate);\n\n    function arrayIterator() {\n      index = started++;\n\n      if (index < size) {\n        tasks[index](createCallback(index));\n      }\n    }\n\n    function objectIterator() {\n      if (started < size) {\n        key = keys[started++];\n        tasks[key](createCallback(key));\n      }\n    }\n\n    function createCallback(key) {\n      return function (err, res) {\n        if (key === null) {\n          throwError();\n        }\n\n        if (err) {\n          key = null;\n          iterate = noop;\n          callback = once(callback);\n          callback(err, result);\n          return;\n        }\n\n        result[key] = arguments.length <= 2 ? res : slice(arguments, 1);\n        key = null;\n\n        if (++completed === size) {\n          callback(null, result);\n        } else if (sync) {\n          nextTick(iterate);\n        } else {\n          sync = true;\n          iterate();\n        }\n\n        sync = false;\n      };\n    }\n  }\n  /**\n   * @memberof async\n   * @namespace tryEach\n   * @param {Array|Object} tasks - functions\n   * @param {Function} callback\n   * @example\n   *\n   * var tasks = [\n   *  function(done) {\n   *    setTimeout(function() {\n   *      done(new Error('error'));\n   *    }, 10);\n   *  },\n   *  function(done) {\n   *    setTimeout(function() {\n   *      done(null, 2);\n   *    }, 10);\n   *  }\n   * ];\n   * async.tryEach(tasks, function(err, res) {\n   *   console.log(res); // 2\n   * });\n   *\n   * @example\n   *\n   * var tasks = [\n   *  function(done) {\n   *    setTimeout(function() {\n   *      done(new Error('error1'));\n   *    }, 10);\n   *  },\n   *  function(done) {\n   *    setTimeout(function() {\n   *      done(new Error('error2');\n   *    }, 10);\n   *  }\n   * ];\n   * async.tryEach(tasks, function(err, res) {\n   *   console.log(err); // error2\n   *   console.log(res); // undefined\n   * });\n   *\n   */\n\n\n  function tryEach(tasks, callback) {\n    callback = callback || noop;\n    var size, keys, iterate;\n    var sync = false;\n    var completed = 0;\n\n    if (isArray(tasks)) {\n      size = tasks.length;\n      iterate = arrayIterator;\n    } else if (tasks && typeof tasks === obj) {\n      keys = nativeKeys(tasks);\n      size = keys.length;\n      iterate = objectIterator;\n    }\n\n    if (!size) {\n      return callback(null);\n    }\n\n    iterate();\n\n    function arrayIterator() {\n      tasks[completed](done);\n    }\n\n    function objectIterator() {\n      tasks[keys[completed]](done);\n    }\n\n    function done(err, res) {\n      if (!err) {\n        if (arguments.length <= 2) {\n          callback(null, res);\n        } else {\n          callback(null, slice(arguments, 1));\n        }\n      } else if (++completed === size) {\n        callback(err);\n      } else {\n        sync = true;\n        iterate();\n      }\n\n      sync = false;\n    }\n  }\n  /**\n   * check for waterfall tasks\n   * @private\n   * @param {Array} tasks\n   * @param {Function} callback\n   * @return {boolean}\n   */\n\n\n  function checkWaterfallTasks(tasks, callback) {\n    if (!isArray(tasks)) {\n      callback(new Error('First argument to waterfall must be an array of functions'));\n      return false;\n    }\n\n    if (tasks.length === 0) {\n      callback(null);\n      return false;\n    }\n\n    return true;\n  }\n  /**\n   * check for waterfall tasks\n   * @private\n   * @param {function} func\n   * @param {Array|Object} args - arguments\n   * @return {function} next\n   */\n\n\n  function waterfallIterator(func, args, next) {\n    switch (args.length) {\n      case 0:\n      case 1:\n        return func(next);\n\n      case 2:\n        return func(args[1], next);\n\n      case 3:\n        return func(args[1], args[2], next);\n\n      case 4:\n        return func(args[1], args[2], args[3], next);\n\n      case 5:\n        return func(args[1], args[2], args[3], args[4], next);\n\n      case 6:\n        return func(args[1], args[2], args[3], args[4], args[5], next);\n\n      default:\n        args = slice(args, 1);\n        args.push(next);\n        return func.apply(null, args);\n    }\n  }\n  /**\n   * @memberof async\n   * @namespace waterfall\n   * @param {Array} tasks - functions\n   * @param {Function} callback\n   * @example\n   *\n   * var order = [];\n   * var tasks = [\n   *   function(next) {\n   *     setTimeout(function() {\n   *       order.push(1);\n   *       next(null, 1);\n   *     }, 10);\n   *   },\n   *   function(arg1, next) {\n   *     setTimeout(function() {\n   *       order.push(2);\n   *       next(null, 1, 2);\n   *     }, 30);\n   *   },\n   *   function(arg1, arg2, next) {\n   *     setTimeout(function() {\n   *       order.push(3);\n   *       next(null, 3);\n   *     }, 20);\n   *   },\n   *   function(arg1, next) {\n   *     setTimeout(function() {\n   *       order.push(4);\n   *       next(null, 1, 2, 3, 4);\n   *     }, 40);\n   *   }\n   * ];\n   * async.waterfall(tasks, function(err, arg1, arg2, arg3, arg4) {\n   *   console.log(arg1, arg2, arg3, arg4); // 1 2 3 4\n   * });\n   *\n   */\n\n\n  function waterfall(tasks, callback) {\n    callback = callback || noop;\n\n    if (!checkWaterfallTasks(tasks, callback)) {\n      return;\n    }\n\n    var func, args, done, sync;\n    var completed = 0;\n    var size = tasks.length;\n    waterfallIterator(tasks[0], [], createCallback(0));\n\n    function iterate() {\n      waterfallIterator(func, args, createCallback(func));\n    }\n\n    function createCallback(index) {\n      return function next(err, res) {\n        if (index === undefined) {\n          callback = noop;\n          throwError();\n        }\n\n        index = undefined;\n\n        if (err) {\n          done = callback;\n          callback = throwError;\n          done(err);\n          return;\n        }\n\n        if (++completed === size) {\n          done = callback;\n          callback = throwError;\n\n          if (arguments.length <= 2) {\n            done(err, res);\n          } else {\n            done.apply(null, createArray(arguments));\n          }\n\n          return;\n        }\n\n        if (sync) {\n          args = arguments;\n          func = tasks[completed] || throwError;\n          nextTick(iterate);\n        } else {\n          sync = true;\n          waterfallIterator(tasks[completed] || throwError, arguments, createCallback(completed));\n        }\n\n        sync = false;\n      };\n    }\n  }\n  /**\n   * `angelFall` is like `waterfall` and inject callback to last argument of next task.\n   *\n   * @memberof async\n   * @namespace angelFall\n   * @param {Array} tasks - functions\n   * @param {Function} callback\n   * @example\n   *\n   * var order = [];\n   * var tasks = [\n   *   function(next) {\n   *     setTimeout(function() {\n   *       order.push(1);\n   *       next(null, 1);\n   *     }, 10);\n   *   },\n   *   function(arg1, empty, next) {\n   *     setTimeout(function() {\n   *       order.push(2);\n   *       next(null, 1, 2);\n   *     }, 30);\n   *   },\n   *   function(next) {\n   *     setTimeout(function() {\n   *       order.push(3);\n   *       next(null, 3);\n   *     }, 20);\n   *   },\n   *   function(arg1, empty1, empty2, empty3, next) {\n   *     setTimeout(function() {\n   *       order.push(4);\n   *       next(null, 1, 2, 3, 4);\n   *     }, 40);\n   *   }\n   * ];\n   * async.angelFall(tasks, function(err, arg1, arg2, arg3, arg4) {\n   *   console.log(arg1, arg2, arg3, arg4); // 1 2 3 4\n   * });\n   *\n   */\n\n\n  function angelFall(tasks, callback) {\n    callback = callback || noop;\n\n    if (!checkWaterfallTasks(tasks, callback)) {\n      return;\n    }\n\n    var completed = 0;\n    var sync = false;\n    var size = tasks.length;\n    var func = tasks[completed];\n    var args = [];\n\n    var iterate = function () {\n      switch (func.length) {\n        case 0:\n          try {\n            next(null, func());\n          } catch (e) {\n            next(e);\n          }\n\n          return;\n\n        case 1:\n          return func(next);\n\n        case 2:\n          return func(args[1], next);\n\n        case 3:\n          return func(args[1], args[2], next);\n\n        case 4:\n          return func(args[1], args[2], args[3], next);\n\n        case 5:\n          return func(args[1], args[2], args[3], args[4], next);\n\n        default:\n          args = slice(args, 1);\n          args[func.length - 1] = next;\n          return func.apply(null, args);\n      }\n    };\n\n    iterate();\n\n    function next(err, res) {\n      if (err) {\n        iterate = throwError;\n        callback = onlyOnce(callback);\n        callback(err);\n        return;\n      }\n\n      if (++completed === size) {\n        iterate = throwError;\n        var done = callback;\n        callback = throwError;\n\n        if (arguments.length === 2) {\n          done(err, res);\n        } else {\n          done.apply(null, createArray(arguments));\n        }\n\n        return;\n      }\n\n      func = tasks[completed];\n      args = arguments;\n\n      if (sync) {\n        nextTick(iterate);\n      } else {\n        sync = true;\n        iterate();\n      }\n\n      sync = false;\n    }\n  }\n  /**\n   * @memberof async\n   * @namespace whilst\n   * @param {Function} test\n   * @param {Function} iterator\n   * @param {Function} callback\n   */\n\n\n  function whilst(test, iterator, callback) {\n    callback = callback || noop;\n    var sync = false;\n\n    if (test()) {\n      iterate();\n    } else {\n      callback(null);\n    }\n\n    function iterate() {\n      if (sync) {\n        nextTick(next);\n      } else {\n        sync = true;\n        iterator(done);\n      }\n\n      sync = false;\n    }\n\n    function next() {\n      iterator(done);\n    }\n\n    function done(err, arg) {\n      if (err) {\n        return callback(err);\n      }\n\n      if (arguments.length <= 2) {\n        if (test(arg)) {\n          iterate();\n        } else {\n          callback(null, arg);\n        }\n\n        return;\n      }\n\n      arg = slice(arguments, 1);\n\n      if (test.apply(null, arg)) {\n        iterate();\n      } else {\n        callback.apply(null, [null].concat(arg));\n      }\n    }\n  }\n  /**\n   * @memberof async\n   * @namespace doWhilst\n   * @param {Function} iterator\n   * @param {Function} test\n   * @param {Function} callback\n   */\n\n\n  function doWhilst(iterator, test, callback) {\n    callback = callback || noop;\n    var sync = false;\n    next();\n\n    function iterate() {\n      if (sync) {\n        nextTick(next);\n      } else {\n        sync = true;\n        iterator(done);\n      }\n\n      sync = false;\n    }\n\n    function next() {\n      iterator(done);\n    }\n\n    function done(err, arg) {\n      if (err) {\n        return callback(err);\n      }\n\n      if (arguments.length <= 2) {\n        if (test(arg)) {\n          iterate();\n        } else {\n          callback(null, arg);\n        }\n\n        return;\n      }\n\n      arg = slice(arguments, 1);\n\n      if (test.apply(null, arg)) {\n        iterate();\n      } else {\n        callback.apply(null, [null].concat(arg));\n      }\n    }\n  }\n  /**\n   * @memberof async\n   * @namespace until\n   * @param {Function} test\n   * @param {Function} iterator\n   * @param {Function} callback\n   */\n\n\n  function until(test, iterator, callback) {\n    callback = callback || noop;\n    var sync = false;\n\n    if (!test()) {\n      iterate();\n    } else {\n      callback(null);\n    }\n\n    function iterate() {\n      if (sync) {\n        nextTick(next);\n      } else {\n        sync = true;\n        iterator(done);\n      }\n\n      sync = false;\n    }\n\n    function next() {\n      iterator(done);\n    }\n\n    function done(err, arg) {\n      if (err) {\n        return callback(err);\n      }\n\n      if (arguments.length <= 2) {\n        if (!test(arg)) {\n          iterate();\n        } else {\n          callback(null, arg);\n        }\n\n        return;\n      }\n\n      arg = slice(arguments, 1);\n\n      if (!test.apply(null, arg)) {\n        iterate();\n      } else {\n        callback.apply(null, [null].concat(arg));\n      }\n    }\n  }\n  /**\n   * @memberof async\n   * @namespace doUntil\n   * @param {Function} iterator\n   * @param {Function} test\n   * @param {Function} callback\n   */\n\n\n  function doUntil(iterator, test, callback) {\n    callback = callback || noop;\n    var sync = false;\n    next();\n\n    function iterate() {\n      if (sync) {\n        nextTick(next);\n      } else {\n        sync = true;\n        iterator(done);\n      }\n\n      sync = false;\n    }\n\n    function next() {\n      iterator(done);\n    }\n\n    function done(err, arg) {\n      if (err) {\n        return callback(err);\n      }\n\n      if (arguments.length <= 2) {\n        if (!test(arg)) {\n          iterate();\n        } else {\n          callback(null, arg);\n        }\n\n        return;\n      }\n\n      arg = slice(arguments, 1);\n\n      if (!test.apply(null, arg)) {\n        iterate();\n      } else {\n        callback.apply(null, [null].concat(arg));\n      }\n    }\n  }\n  /**\n   * @memberof async\n   * @namespace during\n   * @param {Function} test\n   * @param {Function} iterator\n   * @param {Function} callback\n   */\n\n\n  function during(test, iterator, callback) {\n    callback = callback || noop;\n\n    _test();\n\n    function _test() {\n      test(iterate);\n    }\n\n    function iterate(err, truth) {\n      if (err) {\n        return callback(err);\n      }\n\n      if (truth) {\n        iterator(done);\n      } else {\n        callback(null);\n      }\n    }\n\n    function done(err) {\n      if (err) {\n        return callback(err);\n      }\n\n      _test();\n    }\n  }\n  /**\n   * @memberof async\n   * @namespace doDuring\n   * @param {Function} test\n   * @param {Function} iterator\n   * @param {Function} callback\n   */\n\n\n  function doDuring(iterator, test, callback) {\n    callback = callback || noop;\n    iterate(null, true);\n\n    function iterate(err, truth) {\n      if (err) {\n        return callback(err);\n      }\n\n      if (truth) {\n        iterator(done);\n      } else {\n        callback(null);\n      }\n    }\n\n    function done(err, res) {\n      if (err) {\n        return callback(err);\n      }\n\n      switch (arguments.length) {\n        case 0:\n        case 1:\n          test(iterate);\n          break;\n\n        case 2:\n          test(res, iterate);\n          break;\n\n        default:\n          var args = slice(arguments, 1);\n          args.push(iterate);\n          test.apply(null, args);\n          break;\n      }\n    }\n  }\n  /**\n   * @memberof async\n   * @namespace forever\n   */\n\n\n  function forever(iterator, callback) {\n    var sync = false;\n    iterate();\n\n    function iterate() {\n      iterator(next);\n    }\n\n    function next(err) {\n      if (err) {\n        if (callback) {\n          return callback(err);\n        }\n\n        throw err;\n      }\n\n      if (sync) {\n        nextTick(iterate);\n      } else {\n        sync = true;\n        iterate();\n      }\n\n      sync = false;\n    }\n  }\n  /**\n   * @memberof async\n   * @namespace compose\n   */\n\n\n  function compose() {\n    return seq.apply(null, reverse(arguments));\n  }\n  /**\n   * @memberof async\n   * @namespace seq\n   */\n\n\n  function\n    /* functions... */\n  seq() {\n    var fns = createArray(arguments);\n    return function () {\n      var self = this;\n      var args = createArray(arguments);\n      var callback = args[args.length - 1];\n\n      if (typeof callback === func) {\n        args.pop();\n      } else {\n        callback = noop;\n      }\n\n      reduce(fns, args, iterator, done);\n\n      function iterator(newargs, fn, callback) {\n        var func = function (err) {\n          var nextargs = slice(arguments, 1);\n          callback(err, nextargs);\n        };\n\n        newargs.push(func);\n        fn.apply(self, newargs);\n      }\n\n      function done(err, res) {\n        res = isArray(res) ? res : [res];\n        res.unshift(err);\n        callback.apply(self, res);\n      }\n    };\n  }\n\n  function createApplyEach(func) {\n    return function applyEach(fns\n    /* arguments */\n    ) {\n      var go = function () {\n        var self = this;\n        var args = createArray(arguments);\n        var callback = args.pop() || noop;\n        return func(fns, iterator, callback);\n\n        function iterator(fn, done) {\n          fn.apply(self, args.concat([done]));\n        }\n      };\n\n      if (arguments.length > 1) {\n        var args = slice(arguments, 1);\n        return go.apply(this, args);\n      } else {\n        return go;\n      }\n    };\n  }\n  /**\n   * @see https://github.com/caolan/async/blob/master/lib/internal/DoublyLinkedList.js\n   */\n\n\n  function DLL() {\n    this.head = null;\n    this.tail = null;\n    this.length = 0;\n  }\n\n  DLL.prototype._removeLink = function (node) {\n    var prev = node.prev;\n    var next = node.next;\n\n    if (prev) {\n      prev.next = next;\n    } else {\n      this.head = next;\n    }\n\n    if (next) {\n      next.prev = prev;\n    } else {\n      this.tail = prev;\n    }\n\n    node.prev = null;\n    node.next = null;\n    this.length--;\n    return node;\n  };\n\n  DLL.prototype.empty = DLL;\n\n  DLL.prototype._setInitial = function (node) {\n    this.length = 1;\n    this.head = this.tail = node;\n  };\n\n  DLL.prototype.insertBefore = function (node, newNode) {\n    newNode.prev = node.prev;\n    newNode.next = node;\n\n    if (node.prev) {\n      node.prev.next = newNode;\n    } else {\n      this.head = newNode;\n    }\n\n    node.prev = newNode;\n    this.length++;\n  };\n\n  DLL.prototype.unshift = function (node) {\n    if (this.head) {\n      this.insertBefore(this.head, node);\n    } else {\n      this._setInitial(node);\n    }\n  };\n\n  DLL.prototype.push = function (node) {\n    var tail = this.tail;\n\n    if (tail) {\n      node.prev = tail;\n      node.next = tail.next;\n      this.tail = node;\n      tail.next = node;\n      this.length++;\n    } else {\n      this._setInitial(node);\n    }\n  };\n\n  DLL.prototype.shift = function () {\n    return this.head && this._removeLink(this.head);\n  };\n\n  DLL.prototype.splice = function (end) {\n    var task;\n    var tasks = [];\n\n    while (end-- && (task = this.shift())) {\n      tasks.push(task);\n    }\n\n    return tasks;\n  };\n\n  DLL.prototype.remove = function (test) {\n    var node = this.head;\n\n    while (node) {\n      if (test(node)) {\n        this._removeLink(node);\n      }\n\n      node = node.next;\n    }\n\n    return this;\n  };\n  /**\n   * @private\n   */\n\n\n  function baseQueue(isQueue, worker, concurrency, payload) {\n    if (concurrency === undefined) {\n      concurrency = 1;\n    } else if (isNaN(concurrency) || concurrency < 1) {\n      throw new Error('Concurrency must not be zero');\n    }\n\n    var workers = 0;\n    var workersList = [];\n\n    var _callback, _unshift;\n\n    var q = {\n      _tasks: new DLL(),\n      concurrency: concurrency,\n      payload: payload,\n      saturated: noop,\n      unsaturated: noop,\n      buffer: concurrency / 4,\n      empty: noop,\n      drain: noop,\n      error: noop,\n      started: false,\n      paused: false,\n      push: push,\n      kill: kill,\n      unshift: unshift,\n      remove: remove,\n      process: isQueue ? runQueue : runCargo,\n      length: getLength,\n      running: running,\n      workersList: getWorkersList,\n      idle: idle,\n      pause: pause,\n      resume: resume,\n      _worker: worker\n    };\n    return q;\n\n    function push(tasks, callback) {\n      _insert(tasks, callback);\n    }\n\n    function unshift(tasks, callback) {\n      _insert(tasks, callback, true);\n    }\n\n    function _exec(task) {\n      var item = {\n        data: task,\n        callback: _callback\n      };\n\n      if (_unshift) {\n        q._tasks.unshift(item);\n      } else {\n        q._tasks.push(item);\n      }\n\n      nextTick(q.process);\n    }\n\n    function _insert(tasks, callback, unshift) {\n      if (callback == null) {\n        callback = noop;\n      } else if (typeof callback !== 'function') {\n        throw new Error('task callback must be a function');\n      }\n\n      q.started = true;\n\n      var _tasks = isArray(tasks) ? tasks : [tasks];\n\n      if (tasks === undefined || !_tasks.length) {\n        if (q.idle()) {\n          nextTick(q.drain);\n        }\n\n        return;\n      }\n\n      _unshift = unshift;\n      _callback = callback;\n      arrayEachSync(_tasks, _exec); // Avoid leaking the callback\n\n      _callback = undefined;\n    }\n\n    function kill() {\n      q.drain = noop;\n\n      q._tasks.empty();\n    }\n\n    function _next(q, tasks) {\n      var called = false;\n      return function done(err, res) {\n        if (called) {\n          throwError();\n        }\n\n        called = true;\n        workers--;\n        var task;\n        var index = -1;\n        var size = workersList.length;\n        var taskIndex = -1;\n        var taskSize = tasks.length;\n        var useApply = arguments.length > 2;\n        var args = useApply && createArray(arguments);\n\n        while (++taskIndex < taskSize) {\n          task = tasks[taskIndex];\n\n          while (++index < size) {\n            if (workersList[index] === task) {\n              if (index === 0) {\n                workersList.shift();\n              } else {\n                workersList.splice(index, 1);\n              }\n\n              index = size;\n              size--;\n            }\n          }\n\n          index = -1;\n\n          if (useApply) {\n            task.callback.apply(task, args);\n          } else {\n            task.callback(err, res);\n          }\n\n          if (err) {\n            q.error(err, task.data);\n          }\n        }\n\n        if (workers <= q.concurrency - q.buffer) {\n          q.unsaturated();\n        }\n\n        if (q._tasks.length + workers === 0) {\n          q.drain();\n        }\n\n        q.process();\n      };\n    }\n\n    function runQueue() {\n      while (!q.paused && workers < q.concurrency && q._tasks.length) {\n        var task = q._tasks.shift();\n\n        workers++;\n        workersList.push(task);\n\n        if (q._tasks.length === 0) {\n          q.empty();\n        }\n\n        if (workers === q.concurrency) {\n          q.saturated();\n        }\n\n        var done = _next(q, [task]);\n\n        worker(task.data, done);\n      }\n    }\n\n    function runCargo() {\n      while (!q.paused && workers < q.concurrency && q._tasks.length) {\n        var tasks = q._tasks.splice(q.payload || q._tasks.length);\n\n        var index = -1;\n        var size = tasks.length;\n        var data = Array(size);\n\n        while (++index < size) {\n          data[index] = tasks[index].data;\n        }\n\n        workers++;\n        nativePush.apply(workersList, tasks);\n\n        if (q._tasks.length === 0) {\n          q.empty();\n        }\n\n        if (workers === q.concurrency) {\n          q.saturated();\n        }\n\n        var done = _next(q, tasks);\n\n        worker(data, done);\n      }\n    }\n\n    function getLength() {\n      return q._tasks.length;\n    }\n\n    function running() {\n      return workers;\n    }\n\n    function getWorkersList() {\n      return workersList;\n    }\n\n    function idle() {\n      return q.length() + workers === 0;\n    }\n\n    function pause() {\n      q.paused = true;\n    }\n\n    function _resume() {\n      nextTick(q.process);\n    }\n\n    function resume() {\n      if (q.paused === false) {\n        return;\n      }\n\n      q.paused = false;\n      var count = q.concurrency < q._tasks.length ? q.concurrency : q._tasks.length;\n      timesSync(count, _resume);\n    }\n    /**\n     * @param {Function} test\n     */\n\n\n    function remove(test) {\n      q._tasks.remove(test);\n    }\n  }\n  /**\n   * @memberof async\n   * @namespace queue\n   */\n\n\n  function queue(worker, concurrency) {\n    return baseQueue(true, worker, concurrency);\n  }\n  /**\n   * @memberof async\n   * @namespace priorityQueue\n   */\n\n\n  function priorityQueue(worker, concurrency) {\n    var q = baseQueue(true, worker, concurrency);\n    q.push = push;\n    delete q.unshift;\n    return q;\n\n    function push(tasks, priority, callback) {\n      q.started = true;\n      priority = priority || 0;\n\n      var _tasks = isArray(tasks) ? tasks : [tasks];\n\n      var taskSize = _tasks.length;\n\n      if (tasks === undefined || taskSize === 0) {\n        if (q.idle()) {\n          nextTick(q.drain);\n        }\n\n        return;\n      }\n\n      callback = typeof callback === func ? callback : noop;\n      var nextNode = q._tasks.head;\n\n      while (nextNode && priority >= nextNode.priority) {\n        nextNode = nextNode.next;\n      }\n\n      while (taskSize--) {\n        var item = {\n          data: _tasks[taskSize],\n          priority: priority,\n          callback: callback\n        };\n\n        if (nextNode) {\n          q._tasks.insertBefore(nextNode, item);\n        } else {\n          q._tasks.push(item);\n        }\n\n        nextTick(q.process);\n      }\n    }\n  }\n  /**\n   * @memberof async\n   * @namespace cargo\n   */\n\n\n  function cargo(worker, payload) {\n    return baseQueue(false, worker, 1, payload);\n  }\n  /**\n   * @memberof async\n   * @namespace auto\n   * @param {Object} tasks\n   * @param {number} [concurrency]\n   * @param {Function} [callback]\n   */\n\n\n  function auto(tasks, concurrency, callback) {\n    if (typeof concurrency === func) {\n      callback = concurrency;\n      concurrency = null;\n    }\n\n    var keys = nativeKeys(tasks);\n    var rest = keys.length;\n    var results = {};\n\n    if (rest === 0) {\n      return callback(null, results);\n    }\n\n    var runningTasks = 0;\n    var readyTasks = new DLL();\n    var listeners = Object.create(null);\n    callback = onlyOnce(callback || noop);\n    concurrency = concurrency || rest;\n    baseEachSync(tasks, iterator, keys);\n    proceedQueue();\n\n    function iterator(task, key) {\n      // no dependencies\n      var _task, _taskSize;\n\n      if (!isArray(task)) {\n        _task = task;\n        _taskSize = 0;\n        readyTasks.push([_task, _taskSize, done]);\n        return;\n      }\n\n      var dependencySize = task.length - 1;\n      _task = task[dependencySize];\n      _taskSize = dependencySize;\n\n      if (dependencySize === 0) {\n        readyTasks.push([_task, _taskSize, done]);\n        return;\n      } // dependencies\n\n\n      var index = -1;\n\n      while (++index < dependencySize) {\n        var dependencyName = task[index];\n\n        if (notInclude(keys, dependencyName)) {\n          var msg = 'async.auto task `' + key + '` has non-existent dependency `' + dependencyName + '` in ' + task.join(', ');\n          throw new Error(msg);\n        }\n\n        var taskListeners = listeners[dependencyName];\n\n        if (!taskListeners) {\n          taskListeners = listeners[dependencyName] = [];\n        }\n\n        taskListeners.push(taskListener);\n      }\n\n      function done(err, arg) {\n        if (key === null) {\n          throwError();\n        }\n\n        arg = arguments.length <= 2 ? arg : slice(arguments, 1);\n\n        if (err) {\n          rest = 0;\n          runningTasks = 0;\n          readyTasks.length = 0;\n          var safeResults = objectClone(results);\n          safeResults[key] = arg;\n          key = null;\n          var _callback = callback;\n          callback = noop;\n\n          _callback(err, safeResults);\n\n          return;\n        }\n\n        runningTasks--;\n        rest--;\n        results[key] = arg;\n        taskComplete(key);\n        key = null;\n      }\n\n      function taskListener() {\n        if (--dependencySize === 0) {\n          readyTasks.push([_task, _taskSize, done]);\n        }\n      }\n    }\n\n    function proceedQueue() {\n      if (readyTasks.length === 0 && runningTasks === 0) {\n        if (rest !== 0) {\n          throw new Error('async.auto task has cyclic dependencies');\n        }\n\n        return callback(null, results);\n      }\n\n      while (readyTasks.length && runningTasks < concurrency && callback !== noop) {\n        runningTasks++;\n        var array = readyTasks.shift();\n\n        if (array[1] === 0) {\n          array[0](array[2]);\n        } else {\n          array[0](results, array[2]);\n        }\n      }\n    }\n\n    function taskComplete(key) {\n      var taskListeners = listeners[key] || [];\n      arrayEachSync(taskListeners, function (task) {\n        task();\n      });\n      proceedQueue();\n    }\n  }\n\n  var FN_ARGS = /^(function)?\\s*[^\\(]*\\(\\s*([^\\)]*)\\)/m;\n  var FN_ARG_SPLIT = /,/;\n  var FN_ARG = /(=.+)?(\\s*)$/;\n  var STRIP_COMMENTS = /((\\/\\/.*$)|(\\/\\*[\\s\\S]*?\\*\\/))/gm;\n  /**\n   * parse function arguments for `autoInject`\n   *\n   * @private\n   */\n\n  function parseParams(func) {\n    func = func.toString().replace(STRIP_COMMENTS, '');\n    func = func.match(FN_ARGS)[2].replace(' ', '');\n    func = func ? func.split(FN_ARG_SPLIT) : [];\n    func = func.map(function (arg) {\n      return arg.replace(FN_ARG, '').trim();\n    });\n    return func;\n  }\n  /**\n   * @memberof async\n   * @namespace autoInject\n   * @param {Object} tasks\n   * @param {number} [concurrency]\n   * @param {Function} [callback]\n   */\n\n\n  function autoInject(tasks, concurrency, callback) {\n    var newTasks = {};\n    baseEachSync(tasks, iterator, nativeKeys(tasks));\n    auto(newTasks, concurrency, callback);\n\n    function iterator(task, key) {\n      var params;\n      var taskLength = task.length;\n\n      if (isArray(task)) {\n        if (taskLength === 0) {\n          throw new Error('autoInject task functions require explicit parameters.');\n        }\n\n        params = createArray(task);\n        taskLength = params.length - 1;\n        task = params[taskLength];\n\n        if (taskLength === 0) {\n          newTasks[key] = task;\n          return;\n        }\n      } else if (taskLength === 1) {\n        newTasks[key] = task;\n        return;\n      } else {\n        params = parseParams(task);\n\n        if (taskLength === 0 && params.length === 0) {\n          throw new Error('autoInject task functions require explicit parameters.');\n        }\n\n        taskLength = params.length - 1;\n      }\n\n      params[taskLength] = newTask;\n      newTasks[key] = params;\n\n      function newTask(results, done) {\n        switch (taskLength) {\n          case 1:\n            task(results[params[0]], done);\n            break;\n\n          case 2:\n            task(results[params[0]], results[params[1]], done);\n            break;\n\n          case 3:\n            task(results[params[0]], results[params[1]], results[params[2]], done);\n            break;\n\n          default:\n            var i = -1;\n\n            while (++i < taskLength) {\n              params[i] = results[params[i]];\n            }\n\n            params[i] = done;\n            task.apply(null, params);\n            break;\n        }\n      }\n    }\n  }\n  /**\n   * @memberof async\n   * @namespace retry\n   * @param {integer|Object|Function} opts\n   * @param {Function} [task]\n   * @param {Function} [callback]\n   */\n\n\n  function retry(opts, task, callback) {\n    var times, intervalFunc, errorFilter;\n    var count = 0;\n\n    if (arguments.length < 3 && typeof opts === func) {\n      callback = task || noop;\n      task = opts;\n      opts = null;\n      times = DEFAULT_TIMES;\n    } else {\n      callback = callback || noop;\n\n      switch (typeof opts) {\n        case 'object':\n          if (typeof opts.errorFilter === func) {\n            errorFilter = opts.errorFilter;\n          }\n\n          var interval = opts.interval;\n\n          switch (typeof interval) {\n            case func:\n              intervalFunc = interval;\n              break;\n\n            case 'string':\n            case 'number':\n              interval = +interval;\n              intervalFunc = interval ? function () {\n                return interval;\n              } : function () {\n                return DEFAULT_INTERVAL;\n              };\n              break;\n          }\n\n          times = +opts.times || DEFAULT_TIMES;\n          break;\n\n        case 'number':\n          times = opts || DEFAULT_TIMES;\n          break;\n\n        case 'string':\n          times = +opts || DEFAULT_TIMES;\n          break;\n\n        default:\n          throw new Error('Invalid arguments for async.retry');\n      }\n    }\n\n    if (typeof task !== 'function') {\n      throw new Error('Invalid arguments for async.retry');\n    }\n\n    if (intervalFunc) {\n      task(intervalCallback);\n    } else {\n      task(simpleCallback);\n    }\n\n    function simpleIterator() {\n      task(simpleCallback);\n    }\n\n    function simpleCallback(err, res) {\n      if (++count === times || !err || errorFilter && !errorFilter(err)) {\n        if (arguments.length <= 2) {\n          return callback(err, res);\n        }\n\n        var args = createArray(arguments);\n        return callback.apply(null, args);\n      }\n\n      simpleIterator();\n    }\n\n    function intervalIterator() {\n      task(intervalCallback);\n    }\n\n    function intervalCallback(err, res) {\n      if (++count === times || !err || errorFilter && !errorFilter(err)) {\n        if (arguments.length <= 2) {\n          return callback(err, res);\n        }\n\n        var args = createArray(arguments);\n        return callback.apply(null, args);\n      }\n\n      setTimeout(intervalIterator, intervalFunc(count));\n    }\n  }\n\n  function retryable(opts, task) {\n    if (!task) {\n      task = opts;\n      opts = null;\n    }\n\n    return done;\n\n    function done() {\n      var taskFn;\n      var args = createArray(arguments);\n      var lastIndex = args.length - 1;\n      var callback = args[lastIndex];\n\n      switch (task.length) {\n        case 1:\n          taskFn = task1;\n          break;\n\n        case 2:\n          taskFn = task2;\n          break;\n\n        case 3:\n          taskFn = task3;\n          break;\n\n        default:\n          taskFn = task4;\n      }\n\n      if (opts) {\n        retry(opts, taskFn, callback);\n      } else {\n        retry(taskFn, callback);\n      }\n\n      function task1(done) {\n        task(done);\n      }\n\n      function task2(done) {\n        task(args[0], done);\n      }\n\n      function task3(done) {\n        task(args[0], args[1], done);\n      }\n\n      function task4(callback) {\n        args[lastIndex] = callback;\n        task.apply(null, args);\n      }\n    }\n  }\n  /**\n   * @memberof async\n   * @namespace iterator\n   */\n\n\n  function iterator(tasks) {\n    var size = 0;\n    var keys = [];\n\n    if (isArray(tasks)) {\n      size = tasks.length;\n    } else {\n      keys = nativeKeys(tasks);\n      size = keys.length;\n    }\n\n    return makeCallback(0);\n\n    function makeCallback(index) {\n      var fn = function () {\n        if (size) {\n          var key = keys[index] || index;\n          tasks[key].apply(null, createArray(arguments));\n        }\n\n        return fn.next();\n      };\n\n      fn.next = function () {\n        return index < size - 1 ? makeCallback(index + 1) : null;\n      };\n\n      return fn;\n    }\n  }\n  /**\n   * @memberof async\n   * @namespace apply\n   */\n\n\n  function apply(func) {\n    switch (arguments.length) {\n      case 0:\n      case 1:\n        return func;\n\n      case 2:\n        return func.bind(null, arguments[1]);\n\n      case 3:\n        return func.bind(null, arguments[1], arguments[2]);\n\n      case 4:\n        return func.bind(null, arguments[1], arguments[2], arguments[3]);\n\n      case 5:\n        return func.bind(null, arguments[1], arguments[2], arguments[3], arguments[4]);\n\n      default:\n        var size = arguments.length;\n        var index = 0;\n        var args = Array(size);\n        args[index] = null;\n\n        while (++index < size) {\n          args[index] = arguments[index];\n        }\n\n        return func.bind.apply(func, args);\n    }\n  }\n  /**\n   * @memberof async\n   * @namespace timeout\n   * @param {Function} func\n   * @param {number} millisec\n   * @param {*} info\n   */\n\n\n  function timeout(func, millisec, info) {\n    var callback, timer;\n    return wrappedFunc;\n\n    function wrappedFunc() {\n      timer = setTimeout(timeoutCallback, millisec);\n      var args = createArray(arguments);\n      var lastIndex = args.length - 1;\n      callback = args[lastIndex];\n      args[lastIndex] = injectedCallback;\n      simpleApply(func, args);\n    }\n\n    function timeoutCallback() {\n      var name = func.name || 'anonymous';\n      var err = new Error('Callback function \"' + name + '\" timed out.');\n      err.code = 'ETIMEDOUT';\n\n      if (info) {\n        err.info = info;\n      }\n\n      timer = null;\n      callback(err);\n    }\n\n    function injectedCallback() {\n      if (timer !== null) {\n        simpleApply(callback, createArray(arguments));\n        clearTimeout(timer);\n      }\n    }\n\n    function simpleApply(func, args) {\n      switch (args.length) {\n        case 0:\n          func();\n          break;\n\n        case 1:\n          func(args[0]);\n          break;\n\n        case 2:\n          func(args[0], args[1]);\n          break;\n\n        default:\n          func.apply(null, args);\n          break;\n      }\n    }\n  }\n  /**\n   * @memberof async\n   * @namespace times\n   * @param {number} n - n >= 1\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * var iterator = function(n, done) {\n   *   done(null, n);\n   * };\n   * async.times(4, iterator, function(err, res) {\n   *   console.log(res); // [0, 1, 2, 3];\n   * });\n   *\n   */\n\n\n  function times(n, iterator, callback) {\n    callback = callback || noop;\n    n = +n;\n\n    if (isNaN(n) || n < 1) {\n      return callback(null, []);\n    }\n\n    var result = Array(n);\n    timesSync(n, iterate);\n\n    function iterate(num) {\n      iterator(num, createCallback(num));\n    }\n\n    function createCallback(index) {\n      return function (err, res) {\n        if (index === null) {\n          throwError();\n        }\n\n        result[index] = res;\n        index = null;\n\n        if (err) {\n          callback(err);\n          callback = noop;\n        } else if (--n === 0) {\n          callback(null, result);\n        }\n      };\n    }\n  }\n  /**\n   * @memberof async\n   * @namespace timesSeries\n   * @param {number} n - n >= 1\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * var iterator = function(n, done) {\n   *   done(null, n);\n   * };\n   * async.timesSeries(4, iterator, function(err, res) {\n   *   console.log(res); // [0, 1, 2, 3];\n   * });\n   *\n   */\n\n\n  function timesSeries(n, iterator, callback) {\n    callback = callback || noop;\n    n = +n;\n\n    if (isNaN(n) || n < 1) {\n      return callback(null, []);\n    }\n\n    var result = Array(n);\n    var sync = false;\n    var completed = 0;\n    iterate();\n\n    function iterate() {\n      iterator(completed, done);\n    }\n\n    function done(err, res) {\n      result[completed] = res;\n\n      if (err) {\n        callback(err);\n        callback = throwError;\n      } else if (++completed >= n) {\n        callback(null, result);\n        callback = throwError;\n      } else if (sync) {\n        nextTick(iterate);\n      } else {\n        sync = true;\n        iterate();\n      }\n\n      sync = false;\n    }\n  }\n  /**\n   * @memberof async\n   * @namespace timesLimit\n   * @param {number} n - n >= 1\n   * @param {number} limit - n >= 1\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * var iterator = function(n, done) {\n   *   done(null, n);\n   * };\n   * async.timesLimit(4, 2, iterator, function(err, res) {\n   *   console.log(res); // [0, 1, 2, 3];\n   * });\n   *\n   */\n\n\n  function timesLimit(n, limit, iterator, callback) {\n    callback = callback || noop;\n    n = +n;\n\n    if (isNaN(n) || n < 1 || isNaN(limit) || limit < 1) {\n      return callback(null, []);\n    }\n\n    var result = Array(n);\n    var sync = false;\n    var started = 0;\n    var completed = 0;\n    timesSync(limit > n ? n : limit, iterate);\n\n    function iterate() {\n      var index = started++;\n\n      if (index < n) {\n        iterator(index, createCallback(index));\n      }\n    }\n\n    function createCallback(index) {\n      return function (err, res) {\n        if (index === null) {\n          throwError();\n        }\n\n        result[index] = res;\n        index = null;\n\n        if (err) {\n          callback(err);\n          callback = noop;\n        } else if (++completed >= n) {\n          callback(null, result);\n          callback = throwError;\n        } else if (sync) {\n          nextTick(iterate);\n        } else {\n          sync = true;\n          iterate();\n        }\n\n        sync = false;\n      };\n    }\n  }\n  /**\n   * @memberof async\n   * @namespace race\n   * @param {Array|Object} tasks - functions\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var called = 0;\n   * var tasks = [\n   *   function(done) {\n   *     setTimeout(function() {\n   *       called++;\n   *       done(null, '1');\n   *     }, 30);\n   *   },\n   *   function(done) {\n   *     setTimeout(function() {\n   *       called++;\n   *       done(null, '2');\n   *     }, 20);\n   *   },\n   *   function(done) {\n   *     setTimeout(function() {\n   *       called++;\n   *       done(null, '3');\n   *     }, 10);\n   *   }\n   * ];\n   * async.race(tasks, function(err, res) {\n   *   console.log(res); // '3'\n   *   console.log(called); // 1\n   *   setTimeout(function() {\n   *     console.log(called); // 3\n   *   }, 50);\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var called = 0;\n   * var tasks = {\n   *   'test1': function(done) {\n   *     setTimeout(function() {\n   *       called++;\n   *       done(null, '1');\n   *     }, 30);\n   *   },\n   *   'test2': function(done) {\n   *     setTimeout(function() {\n   *       called++;\n   *       done(null, '2');\n   *     }, 20);\n   *   },\n   *   'test3': function(done) {\n   *     setTimeout(function() {\n   *       called++;\n   *       done(null, '3');\n   *     }, 10);\n   *   }\n   * };\n   * async.race(tasks, function(err, res) {\n   *   console.log(res); // '3'\n   *   console.log(called); // 1\n   *   setTimeout(function() {\n   *     console.log(called); // 3\n   *     done();\n   *   }, 50);\n   * });\n   *\n   */\n\n\n  function race(tasks, callback) {\n    callback = once(callback || noop);\n    var size, keys;\n    var index = -1;\n\n    if (isArray(tasks)) {\n      size = tasks.length;\n\n      while (++index < size) {\n        tasks[index](callback);\n      }\n    } else if (tasks && typeof tasks === obj) {\n      keys = nativeKeys(tasks);\n      size = keys.length;\n\n      while (++index < size) {\n        tasks[keys[index]](callback);\n      }\n    } else {\n      return callback(new TypeError('First argument to race must be a collection of functions'));\n    }\n\n    if (!size) {\n      callback(null);\n    }\n  }\n  /**\n   * @memberof async\n   * @namespace memoize\n   */\n\n\n  function memoize(fn, hasher) {\n    hasher = hasher || function (hash) {\n      return hash;\n    };\n\n    var memo = {};\n    var queues = {};\n\n    var memoized = function () {\n      var args = createArray(arguments);\n      var callback = args.pop();\n      var key = hasher.apply(null, args);\n\n      if (has(memo, key)) {\n        nextTick(function () {\n          callback.apply(null, memo[key]);\n        });\n        return;\n      }\n\n      if (has(queues, key)) {\n        return queues[key].push(callback);\n      }\n\n      queues[key] = [callback];\n      args.push(done);\n      fn.apply(null, args);\n\n      function done(err) {\n        var args = createArray(arguments);\n\n        if (!err) {\n          memo[key] = args;\n        }\n\n        var q = queues[key];\n        delete queues[key];\n        var i = -1;\n        var size = q.length;\n\n        while (++i < size) {\n          q[i].apply(null, args);\n        }\n      }\n    };\n\n    memoized.memo = memo;\n    memoized.unmemoized = fn;\n    return memoized;\n  }\n  /**\n   * @memberof async\n   * @namespace unmemoize\n   */\n\n\n  function unmemoize(fn) {\n    return function () {\n      return (fn.unmemoized || fn).apply(null, arguments);\n    };\n  }\n  /**\n   * @memberof async\n   * @namespace ensureAsync\n   */\n\n\n  function ensureAsync(fn) {\n    return function\n      /* ...args, callback */\n    () {\n      var args = createArray(arguments);\n      var lastIndex = args.length - 1;\n      var callback = args[lastIndex];\n      var sync = true;\n      args[lastIndex] = done;\n      fn.apply(this, args);\n      sync = false;\n\n      function done() {\n        var innerArgs = createArray(arguments);\n\n        if (sync) {\n          nextTick(function () {\n            callback.apply(null, innerArgs);\n          });\n        } else {\n          callback.apply(null, innerArgs);\n        }\n      }\n    };\n  }\n  /**\n   * @memberof async\n   * @namespace constant\n   */\n\n\n  function\n    /* values... */\n  constant() {\n    var args = [null].concat(createArray(arguments));\n    return function (callback) {\n      callback = arguments[arguments.length - 1];\n      callback.apply(this, args);\n    };\n  }\n\n  function asyncify(fn) {\n    return function\n      /* args..., callback */\n    () {\n      var args = createArray(arguments);\n      var callback = args.pop();\n      var result;\n\n      try {\n        result = fn.apply(this, args);\n      } catch (e) {\n        return callback(e);\n      }\n\n      if (result && typeof result.then === func) {\n        result.then(function (value) {\n          invokeCallback(callback, null, value);\n        }, function (err) {\n          invokeCallback(callback, err && err.message ? err : new Error(err));\n        });\n      } else {\n        callback(null, result);\n      }\n    };\n  }\n\n  function invokeCallback(callback, err, value) {\n    try {\n      callback(err, value);\n    } catch (e) {\n      nextTick(rethrow, e);\n    }\n  }\n\n  function rethrow(error) {\n    throw error;\n  }\n  /**\n   * @memberof async\n   * @namespace reflect\n   * @param {Function} func\n   * @return {Function}\n   */\n\n\n  function reflect(func) {\n    return function\n      /* args..., callback */\n    () {\n      var callback;\n\n      switch (arguments.length) {\n        case 1:\n          callback = arguments[0];\n          return func(done);\n\n        case 2:\n          callback = arguments[1];\n          return func(arguments[0], done);\n\n        default:\n          var args = createArray(arguments);\n          var lastIndex = args.length - 1;\n          callback = args[lastIndex];\n          args[lastIndex] = done;\n          func.apply(this, args);\n      }\n\n      function done(err, res) {\n        if (err) {\n          return callback(null, {\n            error: err\n          });\n        }\n\n        if (arguments.length > 2) {\n          res = slice(arguments, 1);\n        }\n\n        callback(null, {\n          value: res\n        });\n      }\n    };\n  }\n  /**\n   * @memberof async\n   * @namespace reflectAll\n   * @param {Array[]|Object} tasks\n   * @return {Function}\n   */\n\n\n  function reflectAll(tasks) {\n    var newTasks, keys;\n\n    if (isArray(tasks)) {\n      newTasks = Array(tasks.length);\n      arrayEachSync(tasks, iterate);\n    } else if (tasks && typeof tasks === obj) {\n      keys = nativeKeys(tasks);\n      newTasks = {};\n      baseEachSync(tasks, iterate, keys);\n    }\n\n    return newTasks;\n\n    function iterate(func, key) {\n      newTasks[key] = reflect(func);\n    }\n  }\n  /**\n   * @memberof async\n   * @namespace createLogger\n   */\n\n\n  function createLogger(name) {\n    return function (fn) {\n      var args = slice(arguments, 1);\n      args.push(done);\n      fn.apply(null, args);\n    };\n\n    function done(err) {\n      if (typeof console === obj) {\n        if (err) {\n          if (console.error) {\n            console.error(err);\n          }\n\n          return;\n        }\n\n        if (console[name]) {\n          var args = slice(arguments, 1);\n          arrayEachSync(args, function (arg) {\n            console[name](arg);\n          });\n        }\n      }\n    }\n  }\n  /**\n   * @memberof async\n   * @namespace safe\n   */\n\n\n  function safe() {\n    createImmediate();\n    return exports;\n  }\n  /**\n   * @memberof async\n   * @namespace fast\n   */\n\n\n  function fast() {\n    createImmediate(false);\n    return exports;\n  }\n});","map":{"version":3,"names":["global","factory","exports","module","define","amd","async","neo_async","noop","throwError","Error","DEFAULT_TIMES","DEFAULT_INTERVAL","obj","func","isArray","Array","nativeKeys","Object","keys","nativePush","prototype","push","iteratorSymbol","Symbol","iterator","nextTick","asyncNextTick","asyncSetImmediate","createImmediate","each","createEach","arrayEach","baseEach","symbolEach","map","createMap","arrayEachIndex","baseEachIndex","symbolEachIndex","mapValues","baseEachKey","symbolEachKey","filter","createFilter","arrayEachIndexValue","baseEachIndexValue","symbolEachIndexValue","filterSeries","createFilterSeries","filterLimit","createFilterLimit","reject","rejectSeries","rejectLimit","detect","createDetect","arrayEachValue","baseEachValue","symbolEachValue","detectSeries","createDetectSeries","detectLimit","createDetectLimit","every","createEvery","everySeries","createEverySeries","everyLimit","createEveryLimit","pick","createPick","baseEachKeyValue","symbolEachKeyValue","pickSeries","createPickSeries","pickLimit","createPickLimit","omit","omitSeries","omitLimit","transform","createTransform","arrayEachResult","baseEachResult","symbolEachResult","sortBy","createSortBy","concat","createConcat","groupBy","createGroupBy","parallel","createParallel","arrayEachFunc","baseEachFunc","applyEach","createApplyEach","applyEachSeries","mapSeries","log","createLogger","dir","index","VERSION","eachSeries","eachLimit","forEach","forEachSeries","forEachLimit","eachOf","eachOfSeries","eachOfLimit","forEachOf","forEachOfSeries","forEachOfLimit","mapLimit","mapValuesSeries","mapValuesLimit","select","selectSeries","selectLimit","find","findSeries","findLimit","reduce","inject","foldl","reduceRight","foldr","transformSeries","transformLimit","sortBySeries","sortByLimit","some","someSeries","someLimit","any","anySeries","anyLimit","all","allSeries","allLimit","concatSeries","concatLimit","groupBySeries","groupByLimit","series","parallelLimit","tryEach","waterfall","angelFall","angelfall","whilst","doWhilst","until","doUntil","during","doDuring","forever","compose","seq","queue","priorityQueue","cargo","auto","autoInject","retry","retryable","times","timesSeries","timesLimit","race","apply","setImmediate","memoize","unmemoize","ensureAsync","constant","asyncify","wrapSync","reflect","reflectAll","timeout","safe","fast","baseEachSync","key","safeMode","delay","fn","args","slice","arguments","setTimeout","process","test","version","cb","createArray","array","size","length","result","start","end","objectClone","object","compact","value","reverse","resIndex","has","hasOwnProperty","notInclude","target","arrayEachSync","timesSync","n","sortByCriteria","criteria","l","indices","i","quickSort","undefined","partition","j","mid","r","swap","k","p","makeConcatResult","callback","onlyOnce","collection","iter","item","next","done","createCallback","err","res","once","completed","bool","useArray","init","clone","iterate","sync","arrayIteratorWithIndex","arrayIterator","Infinity","symbolIteratorWithKey","symbolIterator","objectIteratorWithKey","objectIterator","limit","started","isNaN","called","col","accumulator","criterion","deny","denySeries","denyLimit","tasks","checkWaterfallTasks","waterfallIterator","e","arg","_test","truth","fns","self","pop","newargs","nextargs","unshift","go","DLL","head","tail","_removeLink","node","prev","empty","_setInitial","insertBefore","newNode","shift","splice","task","remove","baseQueue","isQueue","worker","concurrency","payload","workers","workersList","_callback","_unshift","q","_tasks","saturated","unsaturated","buffer","drain","error","paused","kill","runQueue","runCargo","getLength","running","getWorkersList","idle","pause","resume","_worker","_insert","_exec","data","_next","taskIndex","taskSize","useApply","_resume","count","priority","nextNode","rest","results","runningTasks","readyTasks","listeners","create","proceedQueue","_task","_taskSize","dependencySize","dependencyName","msg","join","taskListeners","taskListener","safeResults","taskComplete","FN_ARGS","FN_ARG_SPLIT","FN_ARG","STRIP_COMMENTS","parseParams","toString","replace","match","split","trim","newTasks","params","taskLength","newTask","opts","intervalFunc","errorFilter","interval","intervalCallback","simpleCallback","simpleIterator","intervalIterator","taskFn","lastIndex","task1","task2","task3","task4","makeCallback","bind","millisec","info","timer","wrappedFunc","timeoutCallback","injectedCallback","simpleApply","name","code","clearTimeout","num","TypeError","hasher","hash","memo","queues","memoized","unmemoized","innerArgs","then","invokeCallback","message","rethrow","console"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/neo-async/async.js"],"sourcesContent":["(function(global, factory) {\n  /*jshint -W030 */\n  'use strict';\n  typeof exports === 'object' && typeof module !== 'undefined'\n    ? factory(exports)\n    : typeof define === 'function' && define.amd\n    ? define(['exports'], factory)\n    : global.async\n    ? factory((global.neo_async = global.neo_async || {}))\n    : factory((global.async = global.async || {}));\n})(this, function(exports) {\n  'use strict';\n\n  var noop = function noop() {};\n  var throwError = function throwError() {\n    throw new Error('Callback was already called.');\n  };\n\n  var DEFAULT_TIMES = 5;\n  var DEFAULT_INTERVAL = 0;\n\n  var obj = 'object';\n  var func = 'function';\n  var isArray = Array.isArray;\n  var nativeKeys = Object.keys;\n  var nativePush = Array.prototype.push;\n  var iteratorSymbol = typeof Symbol === func && Symbol.iterator;\n\n  var nextTick, asyncNextTick, asyncSetImmediate;\n  createImmediate();\n\n  /**\n   * @memberof async\n   * @namespace each\n   * @param {Array|Object} collection\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done();\n   *   }, num * 10);\n   * };\n   * async.each(array, iterator, function(err, res) {\n   *   console.log(res); // undefined\n   *   console.log(order); // [1, 2, 3]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done();\n   *   }, num * 10);\n   * };\n   * async.each(array, iterator, function(err, res) {\n   *   console.log(res); // undefined\n   *   console.log(order); // [[1, 0], [2, 2], [3, 1]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done();\n   *   }, num * 10);\n   * };\n   * async.each(object, iterator, function(err, res) {\n   *   console.log(res); // undefined\n   *   console.log(order); // [1, 2, 3]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done();\n   *   }, num * 10);\n   * };\n   * async.each(object, iterator, function(err, res) {\n   *   console.log(res); // undefined\n   *   console.log(order); // [[1, 'a'], [2, 'c'], [3, 'b']]\n   * });\n   *\n   * @example\n   *\n   * // break\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num !== 2);\n   *   }, num * 10);\n   * };\n   * async.each(array, iterator, function(err, res) {\n   *   console.log(res); // undefined\n   *   console.log(order); // [1, 2]\n   * });\n   *\n   */\n  var each = createEach(arrayEach, baseEach, symbolEach);\n\n  /**\n   * @memberof async\n   * @namespace map\n   * @param {Array|Object} collection\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.map(array, iterator, function(err, res) {\n   *   console.log(res); // [1, 3, 2];\n   *   console.log(order); // [1, 2, 3]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.map(array, iterator, function(err, res) {\n   *   console.log(res); // [1, 3, 2]\n   *   console.log(order); // [[1, 0], [2, 2], [3, 1]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.map(object, iterator, function(err, res) {\n   *   console.log(res); // [1, 3, 2]\n   *   console.log(order); // [1, 2, 3]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.map(object, iterator, function(err, res) {\n   *   console.log(res); // [1, 3, 2]\n   *   console.log(order); // [[1, 'a'], [2, 'c'], [3, 'b']]\n   * });\n   *\n   */\n  var map = createMap(arrayEachIndex, baseEachIndex, symbolEachIndex, true);\n\n  /**\n   * @memberof async\n   * @namespace mapValues\n   * @param {Array|Object} collection\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.mapValues(array, iterator, function(err, res) {\n   *   console.log(res); // { '0': 1, '1': 3, '2': 2 }\n   *   console.log(order); // [1, 2, 3]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.mapValues(array, iterator, function(err, res) {\n   *   console.log(res); // { '0': 1, '1': 3, '2': 2 }\n   *   console.log(order); // [[1, 0], [2, 2], [3, 1]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.mapValues(object, iterator, function(err, res) {\n   *   console.log(res); // { a: 1, b: 3, c: 2 }\n   *   console.log(order); // [1, 2, 3]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.mapValues(object, iterator, function(err, res) {\n   *   console.log(res); // { a: 1, b: 3, c: 2 }\n   *   console.log(order); // [[1, 'a'], [2, 'c'], [3, 'b']]\n   * });\n   *\n   */\n  var mapValues = createMap(arrayEachIndex, baseEachKey, symbolEachKey, false);\n\n  /**\n   * @memberof async\n   * @namespace filter\n   * @param {Array|Object} collection\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.filter(array, iterator, function(err, res) {\n   *   console.log(res); // [1, 3];\n   *   console.log(order); // [1, 2, 3]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.filter(array, iterator, function(err, res) {\n   *   console.log(res); // [1, 3];\n   *   console.log(order); // [[1, 0], [2, 2], [3, 1]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.filter(object, iterator, function(err, res) {\n   *   console.log(res); // [1, 3];\n   *   console.log(order); // [1, 2, 3]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.filter(object, iterator, function(err, res) {\n   *   console.log(res); // [1, 3];\n   *   console.log(order); // [[1, 'a'], [2, 'c'], [3, 'b']]\n   * });\n   *\n   */\n  var filter = createFilter(arrayEachIndexValue, baseEachIndexValue, symbolEachIndexValue, true);\n\n  /**\n   * @memberof async\n   * @namespace filterSeries\n   * @param {Array|Object} collection\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.filterSeries(array, iterator, function(err, res) {\n   *   console.log(res); // [1, 3];\n   *   console.log(order); // [1, 3, 2]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.filterSeries(array, iterator, function(err, res) {\n   *   console.log(res); // [1, 3]\n   *   console.log(order); // [[1, 0], [3, 1], [2, 2]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.filterSeries(object, iterator, function(err, res) {\n   *   console.log(res); // [1, 3]\n   *   console.log(order); // [1, 3, 2]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.filterSeries(object, iterator, function(err, res) {\n   *   console.log(res); // [1, 3]\n   *   console.log(order); // [[1, 'a'], [3, 'b'], [2, 'c']]\n   * });\n   *\n   */\n  var filterSeries = createFilterSeries(true);\n\n  /**\n   * @memberof async\n   * @namespace filterLimit\n   * @param {Array|Object} collection\n   * @param {number} limit - limit >= 1\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 5, 3, 4, 2];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.filterLimit(array, 2, iterator, function(err, res) {\n   *   console.log(res); // [1, 5, 3]\n   *   console.log(order); // [1, 3, 5, 2, 4]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1, 5, 3, 4, 2];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.filterLimit(array, 2, iterator, function(err, res) {\n   *   console.log(res); // [1, 5, 3]\n   *   console.log(order); // [[1, 0], [3, 2], [5, 1], [2, 4], [4, 3]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 5, c: 3, d: 4, e: 2 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.filterLimit(object, 2, iterator, function(err, res) {\n   *   console.log(res); // [1, 5, 3]\n   *   console.log(order); // [1, 3, 5, 2, 4]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 5, c: 3, d: 4, e: 2 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.filterLimit(object, 2, iterator, function(err, res) {\n   *   console.log(res); // [1, 5, 3]\n   *   console.log(order); // [[1, 'a'], [3, 'c'], [5, 'b'], [2, 'e'], [4, 'd']]\n   * });\n   *\n   */\n  var filterLimit = createFilterLimit(true);\n\n  /**\n   * @memberof async\n   * @namespace reject\n   * @param {Array|Object} collection\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.reject(array, iterator, function(err, res) {\n   *   console.log(res); // [2];\n   *   console.log(order); // [1, 2, 3]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.reject(array, iterator, function(err, res) {\n   *   console.log(res); // [2];\n   *   console.log(order); // [[1, 0], [2, 2], [3, 1]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.reject(object, iterator, function(err, res) {\n   *   console.log(res); // [2];\n   *   console.log(order); // [1, 2, 3]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.reject(object, iterator, function(err, res) {\n   *   console.log(res); // [2];\n   *   console.log(order); // [[1, 'a'], [2, 'c'], [3, 'b']]\n   * });\n   *\n   */\n  var reject = createFilter(arrayEachIndexValue, baseEachIndexValue, symbolEachIndexValue, false);\n\n  /**\n   * @memberof async\n   * @namespace rejectSeries\n   * @param {Array|Object} collection\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.rejectSeries(array, iterator, function(err, res) {\n   *   console.log(res); // [2];\n   *   console.log(order); // [1, 3, 2]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.rejectSeries(object, iterator, function(err, res) {\n   *   console.log(res); // [2];\n   *   console.log(order); // [1, 3, 2]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.rejectSeries(object, iterator, function(err, res) {\n   *   console.log(res); // [2];\n   *   console.log(order); // [[1, 'a'], [3, 'b'], [2, 'c']]\n   * });\n   *\n   */\n  var rejectSeries = createFilterSeries(false);\n\n  /**\n   * @memberof async\n   * @namespace rejectLimit\n   * @param {Array|Object} collection\n   * @param {number} limit - limit >= 1\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 5, 3, 4, 2];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.rejectLimit(array, 2, iterator, function(err, res) {\n   *   console.log(res); // [4, 2]\n   *   console.log(order); // [1, 3, 5, 2, 4]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1, 5, 3, 4, 2];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.rejectLimit(array, 2, iterator, function(err, res) {\n   *   console.log(res); // [4, 2]\n   *   console.log(order); // [[1, 0], [3, 2], [5, 1], [2, 4], [4, 3]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 5, c: 3, d: 4, e: 2 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.rejectLimit(object, 2, iterator, function(err, res) {\n   *   console.log(res); // [4, 2]\n   *   console.log(order); // [1, 3, 5, 2, 4]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 5, c: 3, d: 4, e: 2 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.rejectLimit(object, 2, iterator, function(err, res) {\n   *   console.log(res); // [4, 2]\n   *   console.log(order); // [[1, 'a'], [3, 'c'], [5, 'b'], [2, 'e'], [4, 'd']]\n   * });\n   *\n   */\n  var rejectLimit = createFilterLimit(false);\n\n  /**\n   * @memberof async\n   * @namespace detect\n   * @param {Array|Object} collection\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.detect(array, iterator, function(err, res) {\n   *   console.log(res); // 1\n   *   console.log(order); // [1]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.detect(array, iterator, function(err, res) {\n   *   console.log(res); // 1\n   *   console.log(order); // [[1, 0]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.detect(object, iterator, function(err, res) {\n   *   console.log(res); // 1\n   *   console.log(order); // [1]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.detect(object, iterator, function(err, res) {\n   *   console.log(res); // 1\n   *   console.log(order); // [[1, 'a']]\n   * });\n   *\n   */\n  var detect = createDetect(arrayEachValue, baseEachValue, symbolEachValue, true);\n\n  /**\n   * @memberof async\n   * @namespace detectSeries\n   * @param {Array|Object} collection\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.detectSeries(array, iterator, function(err, res) {\n   *   console.log(res); // 1\n   *   console.log(order); // [1]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.detectSeries(array, iterator, function(err, res) {\n   *   console.log(res); // 1\n   *   console.log(order); // [[1, 0]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.detectSeries(object, iterator, function(err, res) {\n   *   console.log(res); // 1\n   *   console.log(order); // [1]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.detectSeries(object, iterator, function(err, res) {\n   *   console.log(res); // 1\n   *   console.log(order); // [[1, 'a']]\n   * });\n   *\n   */\n  var detectSeries = createDetectSeries(true);\n\n  /**\n   * @memberof async\n   * @namespace detectLimit\n   * @param {Array|Object} collection\n   * @param {number} limit - limit >= 1\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 5, 3, 4, 2];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.detectLimit(array, 2, iterator, function(err, res) {\n   *   console.log(res); // 1\n   *   console.log(order); // [1]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1, 5, 3, 4, 2];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.detectLimit(array, 2, iterator, function(err, res) {\n   *   console.log(res); // 1\n   *   console.log(order); // [[1, 0]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 5, c: 3, d: 4, e: 2 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.detectLimit(object, 2, iterator, function(err, res) {\n   *   console.log(res); // 1\n   *   console.log(order); // [1]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 5, c: 3, d: 4, e: 2 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.detectLimit(object, 2, iterator, function(err, res) {\n   *   console.log(res); // 1\n   *   console.log(order); // [[1, 'a']]\n   * });\n   *\n   */\n  var detectLimit = createDetectLimit(true);\n\n  /**\n   * @memberof async\n   * @namespace every\n   * @param {Array|Object} collection\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.every(array, iterator, function(err, res) {\n   *   console.log(res); // false\n   *   console.log(order); // [1, 2]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.every(array, iterator, function(err, res) {\n   *   console.log(res); // false\n   *   console.log(order); // [[1, 0], [2, 2]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.every(object, iterator, function(err, res) {\n   *   console.log(res); // false\n   *   console.log(order); // [1, 2]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.every(object, iterator, function(err, res) {\n   *   console.log(res); // false\n   *   console.log(order); // [[1, 'a'], [2, 'c']]\n   * });\n   *\n   */\n  var every = createEvery(arrayEachValue, baseEachValue, symbolEachValue);\n\n  /**\n   * @memberof async\n   * @namespace everySeries\n   * @param {Array|Object} collection\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.everySeries(array, iterator, function(err, res) {\n   *   console.log(res); // false\n   *   console.log(order); // [1, 3, 2]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.everySeries(array, iterator, function(err, res) {\n   *   console.log(res); // false\n   *   console.log(order); // [[1, 0], [3, 1], [2, 2]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.everySeries(object, iterator, function(err, res) {\n   *   console.log(res); // false\n   *   console.log(order); // [1, 3, 2]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.everySeries(object, iterator, function(err, res) {\n   *   console.log(res); // false\n   *   console.log(order); // [[1, 'a'], [3, 'b'] [2, 'c']]\n   * });\n   *\n   */\n  var everySeries = createEverySeries();\n\n  /**\n   * @memberof async\n   * @namespace everyLimit\n   * @param {Array|Object} collection\n   * @param {number} limit - limit >= 1\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 5, 3, 4, 2];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.everyLimit(array, 2, iterator, function(err, res) {\n   *   console.log(res); // false\n   *   console.log(order); // [1, 3, 5, 2]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1, 5, 3, 4, 2];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.everyLimit(array, 2, iterator, function(err, res) {\n   *   console.log(res); // false\n   *   console.log(order); // [[1, 0], [3, 2], [5, 1], [2, 4]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 5, c: 3, d: 4, e: 2 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.everyLimit(object, 2, iterator, function(err, res) {\n   *   console.log(res); // false\n   *   console.log(order); // [1, 3, 5, 2]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 5, c: 3, d: 4, e: 2 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.everyLimit(object, 2, iterator, function(err, res) {\n   *   console.log(res); // false\n   *   console.log(order); // [[1, 'a'], [3, 'c'], [5, 'b'], [2, 'e']]\n   * });\n   *\n   */\n  var everyLimit = createEveryLimit();\n\n  /**\n   * @memberof async\n   * @namespace pick\n   * @param {Array|Object} collection\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 3, 2, 4];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.pick(array, iterator, function(err, res) {\n   *   console.log(res); // { '0': 1, '1': 3 }\n   *   console.log(order); // [1, 2, 3, 4]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1, 3, 2, 4];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.pick(array, iterator, function(err, res) {\n   *   console.log(res); // { '0': 1, '1': 3 }\n   *   console.log(order); // [[0, 1], [2, 2], [3, 1], [4, 3]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2, d: 4 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.pick(object, iterator, function(err, res) {\n   *   console.log(res); // { a: 1, b: 3 }\n   *   console.log(order); // [1, 2, 3, 4]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2, d: 4 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.pick(object, iterator, function(err, res) {\n   *   console.log(res); // { a: 1, b: 3 }\n   *   console.log(order); // [[1, 'a'], [2, 'c'], [3, 'b'], [4, 'd']]\n   * });\n   *\n   */\n  var pick = createPick(arrayEachIndexValue, baseEachKeyValue, symbolEachKeyValue, true);\n\n  /**\n   * @memberof async\n   * @namespace pickSeries\n   * @param {Array|Object} collection\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 3, 2, 4];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.pickSeries(array, iterator, function(err, res) {\n   *   console.log(res); // { '0': 1, '1': 3 }\n   *   console.log(order); // [1, 3, 2, 4]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1, 3, 2, 4];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.pickSeries(array, iterator, function(err, res) {\n   *   console.log(res); // { '0': 1, '1': 3 }\n   *   console.log(order); // [[0, 1], [3, 1], [2, 2], [4, 3]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2, d: 4 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.pickSeries(object, iterator, function(err, res) {\n   *   console.log(res); // { a: 1, b: 3 }\n   *   console.log(order); // [1, 3, 2, 4]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2, d: 4 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.pickSeries(object, iterator, function(err, res) {\n   *   console.log(res); // { a: 1, b: 3 }\n   *   console.log(order); // [[1, 'a'], [3, 'b'], [2, 'c'], [4, 'd']]\n   * });\n   *\n   */\n  var pickSeries = createPickSeries(true);\n\n  /**\n   * @memberof async\n   * @namespace pickLimit\n   * @param {Array|Object} collection\n   * @param {number} limit - limit >= 1\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 5, 3, 4, 2];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.pickLimit(array, 2, iterator, function(err, res) {\n   *   console.log(res); // { '0': 1, '1': 5, '2': 3 }\n   *   console.log(order); // [1, 3, 5, 2, 4]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1, 5, 3, 4, 2];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.pickLimit(array, 2, iterator, function(err, res) {\n   *   console.log(res); // { '0': 1, '1': 5, '2': 3 }\n   *   console.log(order); // [[1, 0], [3, 2], [5, 1], [2, 4], [4, 3]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 5, c: 3, d: 4, e: 2 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.pickLimit(object, 2, iterator, function(err, res) {\n   *   console.log(res); // { a: 1, b: 5, c: 3 }\n   *   console.log(order); // [1, 3, 5, 2, 4]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 5, c: 3, d: 4, e: 2 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.pickLimit(object, 2, iterator, function(err, res) {\n   *   console.log(res); // { a: 1, b: 5, c: 3 }\n   *   console.log(order); // [[1, 'a'], [3, 'c'], [5, 'b'], [2, 'e'], [4, 'd']]\n   * });\n   *\n   */\n  var pickLimit = createPickLimit(true);\n\n  /**\n   * @memberof async\n   * @namespace omit\n   * @param {Array|Object} collection\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 3, 2, 4];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.omit(array, iterator, function(err, res) {\n   *   console.log(res); // { '2': 2, '3': 4 }\n   *   console.log(order); // [1, 2, 3, 4]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1, 3, 2, 4];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.omit(array, iterator, function(err, res) {\n   *   console.log(res); // { '2': 2, '3': 4 }\n   *   console.log(order); // [[0, 1], [2, 2], [3, 1], [4, 3]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2, d: 4 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.omit(object, iterator, function(err, res) {\n   *   console.log(res); // { c: 2, d: 4 }\n   *   console.log(order); // [1, 2, 3, 4]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2, d: 4 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.omit(object, iterator, function(err, res) {\n   *   console.log(res); // { c: 2, d: 4 }\n   *   console.log(order); // [[1, 'a'], [2, 'c'], [3, 'b'], [4, 'd']]\n   * });\n   *\n   */\n  var omit = createPick(arrayEachIndexValue, baseEachKeyValue, symbolEachKeyValue, false);\n\n  /**\n   * @memberof async\n   * @namespace omitSeries\n   * @param {Array|Object} collection\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 3, 2, 4];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.omitSeries(array, iterator, function(err, res) {\n   *   console.log(res); // { '2': 2, '3': 4 }\n   *   console.log(order); // [1, 3, 2, 4]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1, 3, 2, 4];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.omitSeries(array, iterator, function(err, res) {\n   *   console.log(res); // { '2': 2, '3': 4 }\n   *   console.log(order); // [[0, 1], [3, 1], [2, 2], [4, 3]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2, d: 4 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.omitSeries(object, iterator, function(err, res) {\n   *   console.log(res); // { c: 2, d: 4 }\n   *   console.log(order); // [1, 3, 2, 4]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2, d: 4 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.omitSeries(object, iterator, function(err, res) {\n   *   console.log(res); // { c: 2, d: 4 }\n   *   console.log(order); // [[1, 'a'], [3, 'b'], [2, 'c'], [4, 'd']]\n   * });\n   *\n   */\n  var omitSeries = createPickSeries(false);\n\n  /**\n   * @memberof async\n   * @namespace omitLimit\n   * @param {Array|Object} collection\n   * @param {number} limit - limit >= 1\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 5, 3, 4, 2];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.omitLimit(array, 2, iterator, function(err, res) {\n   *   console.log(res); // { '3': 4, '4': 2 }\n   *   console.log(order); // [1, 3, 5, 2, 4]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1, 5, 3, 4, 2];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.omitLimit(array, 2, iterator, function(err, res) {\n   *   console.log(res); // { '3': 4, '4': 2 }\n   *   console.log(order); // [[1, 0], [3, 2], [5, 1], [2, 4], [4, 3]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 5, c: 3, d: 4, e: 2 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.omitLimit(object, 2, iterator, function(err, res) {\n   *   console.log(res); // { d: 4, e: 2 }\n   *   console.log(order); // [1, 3, 5, 2, 4]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 5, c: 3, d: 4, e: 2 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.omitLimit(object, 2, iterator, function(err, res) {\n   *   console.log(res); // { d: 4, e: 2 }\n   *   console.log(order); // [[1, 'a'], [3, 'c'], [5, 'b'], [2, 'e'], [4, 'd']]\n   * });\n   *\n   */\n  var omitLimit = createPickLimit(false);\n\n  /**\n   * @memberof async\n   * @namespace transform\n   * @param {Array|Object} collection\n   * @param {Array|Object|Function} [accumulator]\n   * @param {Function} [iterator]\n   * @param {Function} [callback]\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var collection = [1, 3, 2, 4];\n   * var iterator = function(result, num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     result.push(num)\n   *     done();\n   *   }, num * 10);\n   * };\n   * async.transform(collection, iterator, function(err, res) {\n   *   console.log(res); // [1, 2, 3, 4]\n   *   console.log(order); // [1, 2, 3, 4]\n   * });\n   *\n   * @example\n   *\n   * // array with index and accumulator\n   * var order = [];\n   * var collection = [1, 3, 2, 4];\n   * var iterator = function(result, num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     result[index] = num;\n   *     done();\n   *   }, num * 10);\n   * };\n   * async.transform(collection, {}, iterator, function(err, res) {\n   *   console.log(res); // { '0': 1, '1': 3, '2': 2, '3': 4 }\n   *   console.log(order); // [[1, 0], [2, 2], [3, 1], [4, 3]]\n   * });\n   *\n   * @example\n   *\n   * // object with accumulator\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2, d: 4 };\n   * var iterator = function(result, num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     result.push(num);\n   *     done();\n   *   }, num * 10);\n   * };\n   * async.transform(collection, [], iterator, function(err, res) {\n   *   console.log(res); // [1, 2, 3, 4]\n   *   console.log(order); // [1, 2, 3, 4]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2, d: 4 };\n   * var iterator = function(result, num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     result[key] = num;\n   *     done();\n   *   }, num * 10);\n   * };\n   * async.transform(collection, iterator, function(err, res) {\n   *   console.log(res); //  { a: 1, b: 3, c: 2, d: 4 }\n   *   console.log(order); // [[1, 'a'], [2, 'c'], [3, 'b'], [4, 'd']]\n   * });\n   *\n   */\n  var transform = createTransform(arrayEachResult, baseEachResult, symbolEachResult);\n\n  /**\n   * @memberof async\n   * @namespace sortBy\n   * @param {Array|Object} collection\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.sortBy(array, iterator, function(err, res) {\n   *   console.log(res); // [1, 2, 3];\n   *   console.log(order); // [1, 2, 3]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.sortBy(array, iterator, function(err, res) {\n   *   console.log(res); // [1, 2, 3]\n   *   console.log(order); // [[1, 0], [2, 2], [3, 1]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.sortBy(object, iterator, function(err, res) {\n   *   console.log(res); // [1, 2, 3]\n   *   console.log(order); // [1, 2, 3]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.sortBy(object, iterator, function(err, res) {\n   *   console.log(res); // [1, 2, 3]\n   *   console.log(order); // [[1, 'a'], [2, 'c'], [3, 'b']]\n   * });\n   *\n   */\n  var sortBy = createSortBy(arrayEachIndexValue, baseEachIndexValue, symbolEachIndexValue);\n\n  /**\n   * @memberof async\n   * @namespace concat\n   * @param {Array|Object} collection\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, [num]);\n   *   }, num * 10);\n   * };\n   * async.concat(array, iterator, function(err, res) {\n   *   console.log(res); // [1, 2, 3];\n   *   console.log(order); // [1, 2, 3]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, [num]);\n   *   }, num * 10);\n   * };\n   * async.concat(array, iterator, function(err, res) {\n   *   console.log(res); // [1, 2, 3]\n   *   console.log(order); // [[1, 0], [2, 2], [3, 1]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, [num]);\n   *   }, num * 10);\n   * };\n   * async.concat(object, iterator, function(err, res) {\n   *   console.log(res); // [1, 2, 3]\n   *   console.log(order); // [1, 2, 3]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, [num]);\n   *   }, num * 10);\n   * };\n   * async.concat(object, iterator, function(err, res) {\n   *   console.log(res); // [1, 2, 3]\n   *   console.log(order); // [[1, 'a'], [2, 'c'], [3, 'b']]\n   * });\n   *\n   */\n  var concat = createConcat(arrayEachIndex, baseEachIndex, symbolEachIndex);\n\n  /**\n   * @memberof async\n   * @namespace groupBy\n   * @param {Array|Object} collection\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [4.2, 6.4, 6.1];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, Math.floor(num));\n   *   }, num * 10);\n   * };\n   * async.groupBy(array, iterator, function(err, res) {\n   *   console.log(res); // { '4': [4.2], '6': [6.1, 6.4] }\n   *   console.log(order); // [4.2, 6.1, 6.4]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [4.2, 6.4, 6.1];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, Math.floor(num));\n   *   }, num * 10);\n   * };\n   * async.groupBy(array, iterator, function(err, res) {\n   *   console.log(res); // { '4': [4.2], '6': [6.1, 6.4] }\n   *   console.log(order); // [[4.2, 0], [6.1, 2], [6.4, 1]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 4.2, b: 6.4, c: 6.1 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, Math.floor(num));\n   *   }, num * 10);\n   * };\n   * async.groupBy(object, iterator, function(err, res) {\n   *   console.log(res); // { '4': [4.2], '6': [6.1, 6.4] }\n   *   console.log(order); // [4.2, 6.1, 6.4]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 4.2, b: 6.4, c: 6.1 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, Math.floor(num));\n   *   }, num * 10);\n   * };\n   * async.groupBy(object, iterator, function(err, res) {\n   *   console.log(res); // { '4': [4.2], '6': [6.1, 6.4] }\n   *   console.log(order); // [[4.2, 'a'], [6.1, 'c'], [6.4, 'b']]\n   * });\n   *\n   */\n  var groupBy = createGroupBy(arrayEachValue, baseEachValue, symbolEachValue);\n\n  /**\n   * @memberof async\n   * @namespace parallel\n   * @param {Array|Object} tasks - functions\n   * @param {Function} callback\n   * @example\n   *\n   * var order = [];\n   * var tasks = [\n   *  function(done) {\n   *    setTimeout(function() {\n   *      order.push(1);\n   *      done(null, 1);\n   *    }, 10);\n   *  },\n   *  function(done) {\n   *    setTimeout(function() {\n   *      order.push(2);\n   *      done(null, 2);\n   *    }, 30);\n   *  },\n   *  function(done) {\n   *    setTimeout(function() {\n   *      order.push(3);\n   *      done(null, 3);\n   *    }, 40);\n   *  },\n   *  function(done) {\n   *    setTimeout(function() {\n   *      order.push(4);\n   *      done(null, 4);\n   *    }, 20);\n   *  }\n   * ];\n   * async.parallel(tasks, function(err, res) {\n   *   console.log(res); // [1, 2, 3, 4];\n   *   console.log(order); // [1, 4, 2, 3]\n   * });\n   *\n   * @example\n   *\n   * var order = [];\n   * var tasks = {\n   *   'a': function(done) {\n   *     setTimeout(function() {\n   *       order.push(1);\n   *       done(null, 1);\n   *     }, 10);\n   *   },\n   *   'b': function(done) {\n   *     setTimeout(function() {\n   *       order.push(2);\n   *       done(null, 2);\n   *     }, 30);\n   *   },\n   *   'c': function(done) {\n   *     setTimeout(function() {\n   *       order.push(3);\n   *       done(null, 3);\n   *     }, 40);\n   *   },\n   *   'd': function(done) {\n   *     setTimeout(function() {\n   *       order.push(4);\n   *       done(null, 4);\n   *     }, 20);\n   *   }\n   * };\n   * async.parallel(tasks, function(err, res) {\n   *   console.log(res); // { a: 1, b: 2, c: 3, d:4 }\n   *   console.log(order); // [1, 4, 2, 3]\n   * });\n   *\n   */\n  var parallel = createParallel(arrayEachFunc, baseEachFunc);\n\n  /**\n   * @memberof async\n   * @namespace applyEach\n   */\n  var applyEach = createApplyEach(map);\n\n  /**\n   * @memberof async\n   * @namespace applyEachSeries\n   */\n  var applyEachSeries = createApplyEach(mapSeries);\n\n  /**\n   * @memberof async\n   * @namespace log\n   */\n  var log = createLogger('log');\n\n  /**\n   * @memberof async\n   * @namespace dir\n   */\n  var dir = createLogger('dir');\n\n  /**\n   * @version 2.6.2\n   * @namespace async\n   */\n  var index = {\n    VERSION: '2.6.2',\n\n    // Collections\n    each: each,\n    eachSeries: eachSeries,\n    eachLimit: eachLimit,\n    forEach: each,\n    forEachSeries: eachSeries,\n    forEachLimit: eachLimit,\n    eachOf: each,\n    eachOfSeries: eachSeries,\n    eachOfLimit: eachLimit,\n    forEachOf: each,\n    forEachOfSeries: eachSeries,\n    forEachOfLimit: eachLimit,\n    map: map,\n    mapSeries: mapSeries,\n    mapLimit: mapLimit,\n    mapValues: mapValues,\n    mapValuesSeries: mapValuesSeries,\n    mapValuesLimit: mapValuesLimit,\n    filter: filter,\n    filterSeries: filterSeries,\n    filterLimit: filterLimit,\n    select: filter,\n    selectSeries: filterSeries,\n    selectLimit: filterLimit,\n    reject: reject,\n    rejectSeries: rejectSeries,\n    rejectLimit: rejectLimit,\n    detect: detect,\n    detectSeries: detectSeries,\n    detectLimit: detectLimit,\n    find: detect,\n    findSeries: detectSeries,\n    findLimit: detectLimit,\n    pick: pick,\n    pickSeries: pickSeries,\n    pickLimit: pickLimit,\n    omit: omit,\n    omitSeries: omitSeries,\n    omitLimit: omitLimit,\n    reduce: reduce,\n    inject: reduce,\n    foldl: reduce,\n    reduceRight: reduceRight,\n    foldr: reduceRight,\n    transform: transform,\n    transformSeries: transformSeries,\n    transformLimit: transformLimit,\n    sortBy: sortBy,\n    sortBySeries: sortBySeries,\n    sortByLimit: sortByLimit,\n    some: some,\n    someSeries: someSeries,\n    someLimit: someLimit,\n    any: some,\n    anySeries: someSeries,\n    anyLimit: someLimit,\n    every: every,\n    everySeries: everySeries,\n    everyLimit: everyLimit,\n    all: every,\n    allSeries: everySeries,\n    allLimit: everyLimit,\n    concat: concat,\n    concatSeries: concatSeries,\n    concatLimit: concatLimit,\n    groupBy: groupBy,\n    groupBySeries: groupBySeries,\n    groupByLimit: groupByLimit,\n\n    // Control Flow\n    parallel: parallel,\n    series: series,\n    parallelLimit: parallelLimit,\n    tryEach: tryEach,\n    waterfall: waterfall,\n    angelFall: angelFall,\n    angelfall: angelFall,\n    whilst: whilst,\n    doWhilst: doWhilst,\n    until: until,\n    doUntil: doUntil,\n    during: during,\n    doDuring: doDuring,\n    forever: forever,\n    compose: compose,\n    seq: seq,\n    applyEach: applyEach,\n    applyEachSeries: applyEachSeries,\n    queue: queue,\n    priorityQueue: priorityQueue,\n    cargo: cargo,\n    auto: auto,\n    autoInject: autoInject,\n    retry: retry,\n    retryable: retryable,\n    iterator: iterator,\n    times: times,\n    timesSeries: timesSeries,\n    timesLimit: timesLimit,\n    race: race,\n\n    // Utils\n    apply: apply,\n    nextTick: asyncNextTick,\n    setImmediate: asyncSetImmediate,\n    memoize: memoize,\n    unmemoize: unmemoize,\n    ensureAsync: ensureAsync,\n    constant: constant,\n    asyncify: asyncify,\n    wrapSync: asyncify,\n    log: log,\n    dir: dir,\n    reflect: reflect,\n    reflectAll: reflectAll,\n    timeout: timeout,\n    createLogger: createLogger,\n\n    // Mode\n    safe: safe,\n    fast: fast\n  };\n\n  exports['default'] = index;\n  baseEachSync(\n    index,\n    function(func, key) {\n      exports[key] = func;\n    },\n    nativeKeys(index)\n  );\n\n  /**\n   * @private\n   */\n  function createImmediate(safeMode) {\n    var delay = function delay(fn) {\n      var args = slice(arguments, 1);\n      setTimeout(function() {\n        fn.apply(null, args);\n      });\n    };\n    asyncSetImmediate = typeof setImmediate === func ? setImmediate : delay;\n    if (typeof process === obj && typeof process.nextTick === func) {\n      nextTick = /^v0.10/.test(process.version) ? asyncSetImmediate : process.nextTick;\n      asyncNextTick = /^v0/.test(process.version) ? asyncSetImmediate : process.nextTick;\n    } else {\n      asyncNextTick = nextTick = asyncSetImmediate;\n    }\n    if (safeMode === false) {\n      nextTick = function(cb) {\n        cb();\n      };\n    }\n  }\n\n  /* sync functions based on lodash */\n\n  /**\n   * Converts `arguments` to an array.\n   *\n   * @private\n   * @param {Array} array = The array to slice.\n   */\n  function createArray(array) {\n    var index = -1;\n    var size = array.length;\n    var result = Array(size);\n\n    while (++index < size) {\n      result[index] = array[index];\n    }\n    return result;\n  }\n\n  /**\n   * Create an array from `start`\n   *\n   * @private\n   * @param {Array} array - The array to slice.\n   * @param {number} start - The start position.\n   */\n  function slice(array, start) {\n    var end = array.length;\n    var index = -1;\n    var size = end - start;\n    if (size <= 0) {\n      return [];\n    }\n    var result = Array(size);\n\n    while (++index < size) {\n      result[index] = array[index + start];\n    }\n    return result;\n  }\n\n  /**\n   * @private\n   * @param {Object} object\n   */\n  function objectClone(object) {\n    var keys = nativeKeys(object);\n    var size = keys.length;\n    var index = -1;\n    var result = {};\n\n    while (++index < size) {\n      var key = keys[index];\n      result[key] = object[key];\n    }\n    return result;\n  }\n\n  /**\n   * Create an array with all falsey values removed.\n   *\n   * @private\n   * @param {Array} array - The array to compact.\n   */\n  function compact(array) {\n    var index = -1;\n    var size = array.length;\n    var result = [];\n\n    while (++index < size) {\n      var value = array[index];\n      if (value) {\n        result[result.length] = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Create an array of reverse sequence.\n   *\n   * @private\n   * @param {Array} array - The array to reverse.\n   */\n  function reverse(array) {\n    var index = -1;\n    var size = array.length;\n    var result = Array(size);\n    var resIndex = size;\n\n    while (++index < size) {\n      result[--resIndex] = array[index];\n    }\n    return result;\n  }\n\n  /**\n   * Checks if key exists in object property.\n   *\n   * @private\n   * @param {Object} object - The object to inspect.\n   * @param {string} key - The key to check.\n   */\n  function has(object, key) {\n    return object.hasOwnProperty(key);\n  }\n\n  /**\n   * Check if target exists in array.\n   * @private\n   * @param {Array} array\n   * @param {*} target\n   */\n  function notInclude(array, target) {\n    var index = -1;\n    var size = array.length;\n\n    while (++index < size) {\n      if (array[index] === target) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {Array} array - The array to iterate over.\n   * @param {Function} iterator - The function invoked per iteration.\n   */\n  function arrayEachSync(array, iterator) {\n    var index = -1;\n    var size = array.length;\n\n    while (++index < size) {\n      iterator(array[index], index);\n    }\n    return array;\n  }\n\n  /**\n   * @private\n   * @param {Object} object - The object to iterate over.\n   * @param {Function} iterator - The function invoked per iteration.\n   * @param {Array} keys\n   */\n  function baseEachSync(object, iterator, keys) {\n    var index = -1;\n    var size = keys.length;\n\n    while (++index < size) {\n      var key = keys[index];\n      iterator(object[key], key);\n    }\n    return object;\n  }\n\n  /**\n   * @private\n   * @param {number} n\n   * @param {Function} iterator\n   */\n  function timesSync(n, iterator) {\n    var index = -1;\n    while (++index < n) {\n      iterator(index);\n    }\n  }\n\n  /**\n   * @private\n   * @param {Array} array\n   * @param {number[]} criteria\n   */\n  function sortByCriteria(array, criteria) {\n    var l = array.length;\n    var indices = Array(l);\n    var i;\n    for (i = 0; i < l; i++) {\n      indices[i] = i;\n    }\n    quickSort(criteria, 0, l - 1, indices);\n    var result = Array(l);\n    for (var n = 0; n < l; n++) {\n      i = indices[n];\n      result[n] = i === undefined ? array[n] : array[i];\n    }\n    return result;\n  }\n\n  function partition(array, i, j, mid, indices) {\n    var l = i;\n    var r = j;\n    while (l <= r) {\n      i = l;\n      while (l < r && array[l] < mid) {\n        l++;\n      }\n      while (r >= i && array[r] >= mid) {\n        r--;\n      }\n      if (l > r) {\n        break;\n      }\n      swap(array, indices, l++, r--);\n    }\n    return l;\n  }\n\n  function swap(array, indices, l, r) {\n    var n = array[l];\n    array[l] = array[r];\n    array[r] = n;\n    var i = indices[l];\n    indices[l] = indices[r];\n    indices[r] = i;\n  }\n\n  function quickSort(array, i, j, indices) {\n    if (i === j) {\n      return;\n    }\n    var k = i;\n    while (++k <= j && array[i] === array[k]) {\n      var l = k - 1;\n      if (indices[l] > indices[k]) {\n        var index = indices[l];\n        indices[l] = indices[k];\n        indices[k] = index;\n      }\n    }\n    if (k > j) {\n      return;\n    }\n    var p = array[i] > array[k] ? i : k;\n    k = partition(array, i, j, array[p], indices);\n    quickSort(array, i, k - 1, indices);\n    quickSort(array, k, j, indices);\n  }\n\n  /**\n   * @Private\n   */\n  function makeConcatResult(array) {\n    var result = [];\n    arrayEachSync(array, function(value) {\n      if (value === noop) {\n        return;\n      }\n      if (isArray(value)) {\n        nativePush.apply(result, value);\n      } else {\n        result.push(value);\n      }\n    });\n    return result;\n  }\n\n  /* async functions */\n\n  /**\n   * @private\n   */\n  function arrayEach(array, iterator, callback) {\n    var index = -1;\n    var size = array.length;\n\n    if (iterator.length === 3) {\n      while (++index < size) {\n        iterator(array[index], index, onlyOnce(callback));\n      }\n    } else {\n      while (++index < size) {\n        iterator(array[index], onlyOnce(callback));\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  function baseEach(object, iterator, callback, keys) {\n    var key;\n    var index = -1;\n    var size = keys.length;\n\n    if (iterator.length === 3) {\n      while (++index < size) {\n        key = keys[index];\n        iterator(object[key], key, onlyOnce(callback));\n      }\n    } else {\n      while (++index < size) {\n        iterator(object[keys[index]], onlyOnce(callback));\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  function symbolEach(collection, iterator, callback) {\n    var iter = collection[iteratorSymbol]();\n    var index = 0;\n    var item;\n    if (iterator.length === 3) {\n      while ((item = iter.next()).done === false) {\n        iterator(item.value, index++, onlyOnce(callback));\n      }\n    } else {\n      while ((item = iter.next()).done === false) {\n        index++;\n        iterator(item.value, onlyOnce(callback));\n      }\n    }\n    return index;\n  }\n\n  /**\n   * @private\n   */\n  function arrayEachResult(array, result, iterator, callback) {\n    var index = -1;\n    var size = array.length;\n\n    if (iterator.length === 4) {\n      while (++index < size) {\n        iterator(result, array[index], index, onlyOnce(callback));\n      }\n    } else {\n      while (++index < size) {\n        iterator(result, array[index], onlyOnce(callback));\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  function baseEachResult(object, result, iterator, callback, keys) {\n    var key;\n    var index = -1;\n    var size = keys.length;\n\n    if (iterator.length === 4) {\n      while (++index < size) {\n        key = keys[index];\n        iterator(result, object[key], key, onlyOnce(callback));\n      }\n    } else {\n      while (++index < size) {\n        iterator(result, object[keys[index]], onlyOnce(callback));\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  function symbolEachResult(collection, result, iterator, callback) {\n    var item;\n    var index = 0;\n    var iter = collection[iteratorSymbol]();\n\n    if (iterator.length === 4) {\n      while ((item = iter.next()).done === false) {\n        iterator(result, item.value, index++, onlyOnce(callback));\n      }\n    } else {\n      while ((item = iter.next()).done === false) {\n        index++;\n        iterator(result, item.value, onlyOnce(callback));\n      }\n    }\n    return index;\n  }\n\n  /**\n   * @private\n   */\n  function arrayEachFunc(array, createCallback) {\n    var index = -1;\n    var size = array.length;\n\n    while (++index < size) {\n      array[index](createCallback(index));\n    }\n  }\n\n  /**\n   * @private\n   */\n  function baseEachFunc(object, createCallback, keys) {\n    var key;\n    var index = -1;\n    var size = keys.length;\n\n    while (++index < size) {\n      key = keys[index];\n      object[key](createCallback(key));\n    }\n  }\n\n  /**\n   * @private\n   */\n  function arrayEachIndex(array, iterator, createCallback) {\n    var index = -1;\n    var size = array.length;\n\n    if (iterator.length === 3) {\n      while (++index < size) {\n        iterator(array[index], index, createCallback(index));\n      }\n    } else {\n      while (++index < size) {\n        iterator(array[index], createCallback(index));\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  function baseEachIndex(object, iterator, createCallback, keys) {\n    var key;\n    var index = -1;\n    var size = keys.length;\n\n    if (iterator.length === 3) {\n      while (++index < size) {\n        key = keys[index];\n        iterator(object[key], key, createCallback(index));\n      }\n    } else {\n      while (++index < size) {\n        iterator(object[keys[index]], createCallback(index));\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  function symbolEachIndex(collection, iterator, createCallback) {\n    var item;\n    var index = 0;\n    var iter = collection[iteratorSymbol]();\n\n    if (iterator.length === 3) {\n      while ((item = iter.next()).done === false) {\n        iterator(item.value, index, createCallback(index++));\n      }\n    } else {\n      while ((item = iter.next()).done === false) {\n        iterator(item.value, createCallback(index++));\n      }\n    }\n    return index;\n  }\n\n  /**\n   * @private\n   */\n  function baseEachKey(object, iterator, createCallback, keys) {\n    var key;\n    var index = -1;\n    var size = keys.length;\n\n    if (iterator.length === 3) {\n      while (++index < size) {\n        key = keys[index];\n        iterator(object[key], key, createCallback(key));\n      }\n    } else {\n      while (++index < size) {\n        key = keys[index];\n        iterator(object[key], createCallback(key));\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  function symbolEachKey(collection, iterator, createCallback) {\n    var item;\n    var index = 0;\n    var iter = collection[iteratorSymbol]();\n\n    if (iterator.length === 3) {\n      while ((item = iter.next()).done === false) {\n        iterator(item.value, index, createCallback(index++));\n      }\n    } else {\n      while ((item = iter.next()).done === false) {\n        iterator(item.value, createCallback(index++));\n      }\n    }\n    return index;\n  }\n\n  /**\n   * @private\n   */\n  function arrayEachValue(array, iterator, createCallback) {\n    var value;\n    var index = -1;\n    var size = array.length;\n\n    if (iterator.length === 3) {\n      while (++index < size) {\n        value = array[index];\n        iterator(value, index, createCallback(value));\n      }\n    } else {\n      while (++index < size) {\n        value = array[index];\n        iterator(value, createCallback(value));\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  function baseEachValue(object, iterator, createCallback, keys) {\n    var key, value;\n    var index = -1;\n    var size = keys.length;\n\n    if (iterator.length === 3) {\n      while (++index < size) {\n        key = keys[index];\n        value = object[key];\n        iterator(value, key, createCallback(value));\n      }\n    } else {\n      while (++index < size) {\n        value = object[keys[index]];\n        iterator(value, createCallback(value));\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  function symbolEachValue(collection, iterator, createCallback) {\n    var value, item;\n    var index = 0;\n    var iter = collection[iteratorSymbol]();\n\n    if (iterator.length === 3) {\n      while ((item = iter.next()).done === false) {\n        value = item.value;\n        iterator(value, index++, createCallback(value));\n      }\n    } else {\n      while ((item = iter.next()).done === false) {\n        index++;\n        value = item.value;\n        iterator(value, createCallback(value));\n      }\n    }\n    return index;\n  }\n\n  /**\n   * @private\n   */\n  function arrayEachIndexValue(array, iterator, createCallback) {\n    var value;\n    var index = -1;\n    var size = array.length;\n\n    if (iterator.length === 3) {\n      while (++index < size) {\n        value = array[index];\n        iterator(value, index, createCallback(index, value));\n      }\n    } else {\n      while (++index < size) {\n        value = array[index];\n        iterator(value, createCallback(index, value));\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  function baseEachIndexValue(object, iterator, createCallback, keys) {\n    var key, value;\n    var index = -1;\n    var size = keys.length;\n\n    if (iterator.length === 3) {\n      while (++index < size) {\n        key = keys[index];\n        value = object[key];\n        iterator(value, key, createCallback(index, value));\n      }\n    } else {\n      while (++index < size) {\n        value = object[keys[index]];\n        iterator(value, createCallback(index, value));\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  function symbolEachIndexValue(collection, iterator, createCallback) {\n    var value, item;\n    var index = 0;\n    var iter = collection[iteratorSymbol]();\n\n    if (iterator.length === 3) {\n      while ((item = iter.next()).done === false) {\n        value = item.value;\n        iterator(value, index, createCallback(index++, value));\n      }\n    } else {\n      while ((item = iter.next()).done === false) {\n        value = item.value;\n        iterator(value, createCallback(index++, value));\n      }\n    }\n    return index;\n  }\n\n  /**\n   * @private\n   */\n  function baseEachKeyValue(object, iterator, createCallback, keys) {\n    var key, value;\n    var index = -1;\n    var size = keys.length;\n\n    if (iterator.length === 3) {\n      while (++index < size) {\n        key = keys[index];\n        value = object[key];\n        iterator(value, key, createCallback(key, value));\n      }\n    } else {\n      while (++index < size) {\n        key = keys[index];\n        value = object[key];\n        iterator(value, createCallback(key, value));\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  function symbolEachKeyValue(collection, iterator, createCallback) {\n    var value, item;\n    var index = 0;\n    var iter = collection[iteratorSymbol]();\n\n    if (iterator.length === 3) {\n      while ((item = iter.next()).done === false) {\n        value = item.value;\n        iterator(value, index, createCallback(index++, value));\n      }\n    } else {\n      while ((item = iter.next()).done === false) {\n        value = item.value;\n        iterator(value, createCallback(index++, value));\n      }\n    }\n    return index;\n  }\n\n  /**\n   * @private\n   * @param {Function} func\n   */\n  function onlyOnce(func) {\n    return function(err, res) {\n      var fn = func;\n      func = throwError;\n      fn(err, res);\n    };\n  }\n\n  /**\n   * @private\n   * @param {Function} func\n   */\n  function once(func) {\n    return function(err, res) {\n      var fn = func;\n      func = noop;\n      fn(err, res);\n    };\n  }\n\n  /**\n   * @private\n   * @param {Function} arrayEach\n   * @param {Function} baseEach\n   */\n  function createEach(arrayEach, baseEach, symbolEach) {\n    return function each(collection, iterator, callback) {\n      callback = once(callback || noop);\n      var size, keys;\n      var completed = 0;\n      if (isArray(collection)) {\n        size = collection.length;\n        arrayEach(collection, iterator, done);\n      } else if (!collection) {\n      } else if (iteratorSymbol && collection[iteratorSymbol]) {\n        size = symbolEach(collection, iterator, done);\n        size && size === completed && callback(null);\n      } else if (typeof collection === obj) {\n        keys = nativeKeys(collection);\n        size = keys.length;\n        baseEach(collection, iterator, done, keys);\n      }\n      if (!size) {\n        callback(null);\n      }\n\n      function done(err, bool) {\n        if (err) {\n          callback = once(callback);\n          callback(err);\n        } else if (++completed === size) {\n          callback(null);\n        } else if (bool === false) {\n          callback = once(callback);\n          callback(null);\n        }\n      }\n    };\n  }\n\n  /**\n   * @private\n   * @param {Function} arrayEach\n   * @param {Function} baseEach\n   * @param {Function} symbolEach\n   */\n  function createMap(arrayEach, baseEach, symbolEach, useArray) {\n    var init, clone;\n    if (useArray) {\n      init = Array;\n      clone = createArray;\n    } else {\n      init = function() {\n        return {};\n      };\n      clone = objectClone;\n    }\n\n    return function(collection, iterator, callback) {\n      callback = callback || noop;\n      var size, keys, result;\n      var completed = 0;\n\n      if (isArray(collection)) {\n        size = collection.length;\n        result = init(size);\n        arrayEach(collection, iterator, createCallback);\n      } else if (!collection) {\n      } else if (iteratorSymbol && collection[iteratorSymbol]) {\n        // TODO: size could be changed\n        result = init(0);\n        size = symbolEach(collection, iterator, createCallback);\n        size && size === completed && callback(null, result);\n      } else if (typeof collection === obj) {\n        keys = nativeKeys(collection);\n        size = keys.length;\n        result = init(size);\n        baseEach(collection, iterator, createCallback, keys);\n      }\n      if (!size) {\n        callback(null, init());\n      }\n\n      function createCallback(key) {\n        return function done(err, res) {\n          if (key === null) {\n            throwError();\n          }\n          if (err) {\n            key = null;\n            callback = once(callback);\n            callback(err, clone(result));\n            return;\n          }\n          result[key] = res;\n          key = null;\n          if (++completed === size) {\n            callback(null, result);\n          }\n        };\n      }\n    };\n  }\n\n  /**\n   * @private\n   * @param {Function} arrayEach\n   * @param {Function} baseEach\n   * @param {Function} symbolEach\n   * @param {boolean} bool\n   */\n  function createFilter(arrayEach, baseEach, symbolEach, bool) {\n    return function(collection, iterator, callback) {\n      callback = callback || noop;\n      var size, keys, result;\n      var completed = 0;\n\n      if (isArray(collection)) {\n        size = collection.length;\n        result = Array(size);\n        arrayEach(collection, iterator, createCallback);\n      } else if (!collection) {\n      } else if (iteratorSymbol && collection[iteratorSymbol]) {\n        result = [];\n        size = symbolEach(collection, iterator, createCallback);\n        size && size === completed && callback(null, compact(result));\n      } else if (typeof collection === obj) {\n        keys = nativeKeys(collection);\n        size = keys.length;\n        result = Array(size);\n        baseEach(collection, iterator, createCallback, keys);\n      }\n      if (!size) {\n        return callback(null, []);\n      }\n\n      function createCallback(index, value) {\n        return function done(err, res) {\n          if (index === null) {\n            throwError();\n          }\n          if (err) {\n            index = null;\n            callback = once(callback);\n            callback(err);\n            return;\n          }\n          if (!!res === bool) {\n            result[index] = value;\n          }\n          index = null;\n          if (++completed === size) {\n            callback(null, compact(result));\n          }\n        };\n      }\n    };\n  }\n\n  /**\n   * @private\n   * @param {boolean} bool\n   */\n  function createFilterSeries(bool) {\n    return function(collection, iterator, callback) {\n      callback = onlyOnce(callback || noop);\n      var size, key, value, keys, iter, item, iterate;\n      var sync = false;\n      var completed = 0;\n      var result = [];\n\n      if (isArray(collection)) {\n        size = collection.length;\n        iterate = iterator.length === 3 ? arrayIteratorWithIndex : arrayIterator;\n      } else if (!collection) {\n      } else if (iteratorSymbol && collection[iteratorSymbol]) {\n        size = Infinity;\n        iter = collection[iteratorSymbol]();\n        iterate = iterator.length === 3 ? symbolIteratorWithKey : symbolIterator;\n      } else if (typeof collection === obj) {\n        keys = nativeKeys(collection);\n        size = keys.length;\n        iterate = iterator.length === 3 ? objectIteratorWithKey : objectIterator;\n      }\n      if (!size) {\n        return callback(null, []);\n      }\n      iterate();\n\n      function arrayIterator() {\n        value = collection[completed];\n        iterator(value, done);\n      }\n\n      function arrayIteratorWithIndex() {\n        value = collection[completed];\n        iterator(value, completed, done);\n      }\n\n      function symbolIterator() {\n        item = iter.next();\n        value = item.value;\n        item.done ? callback(null, result) : iterator(value, done);\n      }\n\n      function symbolIteratorWithKey() {\n        item = iter.next();\n        value = item.value;\n        item.done ? callback(null, result) : iterator(value, completed, done);\n      }\n\n      function objectIterator() {\n        key = keys[completed];\n        value = collection[key];\n        iterator(value, done);\n      }\n\n      function objectIteratorWithKey() {\n        key = keys[completed];\n        value = collection[key];\n        iterator(value, key, done);\n      }\n\n      function done(err, res) {\n        if (err) {\n          callback(err);\n          return;\n        }\n        if (!!res === bool) {\n          result[result.length] = value;\n        }\n        if (++completed === size) {\n          iterate = throwError;\n          callback(null, result);\n        } else if (sync) {\n          nextTick(iterate);\n        } else {\n          sync = true;\n          iterate();\n        }\n        sync = false;\n      }\n    };\n  }\n\n  /**\n   * @private\n   * @param {boolean} bool\n   */\n  function createFilterLimit(bool) {\n    return function(collection, limit, iterator, callback) {\n      callback = callback || noop;\n      var size, index, key, value, keys, iter, item, iterate, result;\n      var sync = false;\n      var started = 0;\n      var completed = 0;\n\n      if (isArray(collection)) {\n        size = collection.length;\n        iterate = iterator.length === 3 ? arrayIteratorWithIndex : arrayIterator;\n      } else if (!collection) {\n      } else if (iteratorSymbol && collection[iteratorSymbol]) {\n        size = Infinity;\n        result = [];\n        iter = collection[iteratorSymbol]();\n        iterate = iterator.length === 3 ? symbolIteratorWithKey : symbolIterator;\n      } else if (typeof collection === obj) {\n        keys = nativeKeys(collection);\n        size = keys.length;\n        iterate = iterator.length === 3 ? objectIteratorWithKey : objectIterator;\n      }\n      if (!size || isNaN(limit) || limit < 1) {\n        return callback(null, []);\n      }\n      result = result || Array(size);\n      timesSync(limit > size ? size : limit, iterate);\n\n      function arrayIterator() {\n        index = started++;\n        if (index < size) {\n          value = collection[index];\n          iterator(value, createCallback(value, index));\n        }\n      }\n\n      function arrayIteratorWithIndex() {\n        index = started++;\n        if (index < size) {\n          value = collection[index];\n          iterator(value, index, createCallback(value, index));\n        }\n      }\n\n      function symbolIterator() {\n        item = iter.next();\n        if (item.done === false) {\n          value = item.value;\n          iterator(value, createCallback(value, started++));\n        } else if (completed === started && iterator !== noop) {\n          iterator = noop;\n          callback(null, compact(result));\n        }\n      }\n\n      function symbolIteratorWithKey() {\n        item = iter.next();\n        if (item.done === false) {\n          value = item.value;\n          iterator(value, started, createCallback(value, started++));\n        } else if (completed === started && iterator !== noop) {\n          iterator = noop;\n          callback(null, compact(result));\n        }\n      }\n\n      function objectIterator() {\n        index = started++;\n        if (index < size) {\n          value = collection[keys[index]];\n          iterator(value, createCallback(value, index));\n        }\n      }\n\n      function objectIteratorWithKey() {\n        index = started++;\n        if (index < size) {\n          key = keys[index];\n          value = collection[key];\n          iterator(value, key, createCallback(value, index));\n        }\n      }\n\n      function createCallback(value, index) {\n        return function(err, res) {\n          if (index === null) {\n            throwError();\n          }\n          if (err) {\n            index = null;\n            iterate = noop;\n            callback = once(callback);\n            callback(err);\n            return;\n          }\n          if (!!res === bool) {\n            result[index] = value;\n          }\n          index = null;\n          if (++completed === size) {\n            callback = onlyOnce(callback);\n            callback(null, compact(result));\n          } else if (sync) {\n            nextTick(iterate);\n          } else {\n            sync = true;\n            iterate();\n          }\n          sync = false;\n        };\n      }\n    };\n  }\n\n  /**\n   * @memberof async\n   * @namespace eachSeries\n   * @param {Array|Object} collection\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done();\n   *   }, num * 10);\n   * };\n   * async.eachSeries(array, iterator, function(err, res) {\n   *   console.log(res); // undefined\n   *   console.log(order); // [1, 3, 2]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done();\n   *   }, num * 10);\n   * };\n   * async.eachSeries(array, iterator, function(err, res) {\n   *   console.log(res); // undefined\n   *   console.log(order); // [[1, 0], [3, 1], [2, 2]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done();\n   *   }, num * 10);\n   * };\n   * async.eachSeries(object, iterator, function(err, res) {\n   *   console.log(res); // undefined\n   *   console.log(order); // [1, 3, 2]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done();\n   *   }, num * 10);\n   * };\n   * async.eachSeries(object, iterator, function(err, res) {\n   *   console.log(res); // undefined\n   *   console.log(order); // [[1, 'a'], [3, 'b'], [2, 'b']]\n   * });\n   *\n   * @example\n   *\n   * // break\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num !== 3);\n   *   }, num * 10);\n   * };\n   * async.eachSeries(array, iterator, function(err, res) {\n   *   console.log(res); // undefined\n   *   console.log(order); // [1, 3]\n   * });\n   */\n  function eachSeries(collection, iterator, callback) {\n    callback = onlyOnce(callback || noop);\n    var size, key, keys, iter, item, iterate;\n    var sync = false;\n    var completed = 0;\n\n    if (isArray(collection)) {\n      size = collection.length;\n      iterate = iterator.length === 3 ? arrayIteratorWithIndex : arrayIterator;\n    } else if (!collection) {\n    } else if (iteratorSymbol && collection[iteratorSymbol]) {\n      size = Infinity;\n      iter = collection[iteratorSymbol]();\n      iterate = iterator.length === 3 ? symbolIteratorWithKey : symbolIterator;\n    } else if (typeof collection === obj) {\n      keys = nativeKeys(collection);\n      size = keys.length;\n      iterate = iterator.length === 3 ? objectIteratorWithKey : objectIterator;\n    }\n    if (!size) {\n      return callback(null);\n    }\n    iterate();\n\n    function arrayIterator() {\n      iterator(collection[completed], done);\n    }\n\n    function arrayIteratorWithIndex() {\n      iterator(collection[completed], completed, done);\n    }\n\n    function symbolIterator() {\n      item = iter.next();\n      item.done ? callback(null) : iterator(item.value, done);\n    }\n\n    function symbolIteratorWithKey() {\n      item = iter.next();\n      item.done ? callback(null) : iterator(item.value, completed, done);\n    }\n\n    function objectIterator() {\n      iterator(collection[keys[completed]], done);\n    }\n\n    function objectIteratorWithKey() {\n      key = keys[completed];\n      iterator(collection[key], key, done);\n    }\n\n    function done(err, bool) {\n      if (err) {\n        callback(err);\n      } else if (++completed === size || bool === false) {\n        iterate = throwError;\n        callback(null);\n      } else if (sync) {\n        nextTick(iterate);\n      } else {\n        sync = true;\n        iterate();\n      }\n      sync = false;\n    }\n  }\n\n  /**\n   * @memberof async\n   * @namespace eachLimit\n   * @param {Array|Object} collection\n   * @param {number} limit - limit >= 1\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 5, 3, 4, 2];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done();\n   *   }, num * 10);\n   * };\n   * async.eachLimit(array, 2, iterator, function(err, res) {\n   *   console.log(res); // undefined\n   *   console.log(order); // [1, 3, 5, 2, 4]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1, 5, 3, 4, 2];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done();\n   *   }, num * 10);\n   * };\n   * async.eachLimit(array, 2, iterator, function(err, res) {\n   *   console.log(res); // undefined\n   *   console.log(order); // [[1, 0], [3, 2], [5, 1], [2, 4], [4, 3]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 5, c: 3, d: 4, e: 2 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done();\n   *   }, num * 10);\n   * };\n   * async.eachLimit(object, 2, iterator, function(err, res) {\n   *   console.log(res); // undefined\n   *   console.log(order); // [1, 3, 5, 2, 4]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 5, c: 3, d: 4, e: 2 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done();\n   *   }, num * 10);\n   * };\n   * async.eachLimit(object, 2, iterator, function(err, res) {\n   *   console.log(res); // undefined\n   *   console.log(order); // [[1, 'a'], [3, 'c'], [5, 'b'], [2, 'e'], [4, 'd']]\n   * });\n   *\n   * @example\n   *\n   * // break\n   * var order = [];\n   * var array = [1, 5, 3, 4, 2];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num !== 5);\n   *   }, num * 10);\n   * };\n   * async.eachLimit(array, 2, iterator, function(err, res) {\n   *   console.log(res); // undefined\n   *   console.log(order); // [1, 3, 5]\n   * });\n   *\n   */\n  function eachLimit(collection, limit, iterator, callback) {\n    callback = callback || noop;\n    var size, index, key, keys, iter, item, iterate;\n    var sync = false;\n    var started = 0;\n    var completed = 0;\n\n    if (isArray(collection)) {\n      size = collection.length;\n      iterate = iterator.length === 3 ? arrayIteratorWithIndex : arrayIterator;\n    } else if (!collection) {\n    } else if (iteratorSymbol && collection[iteratorSymbol]) {\n      size = Infinity;\n      iter = collection[iteratorSymbol]();\n      iterate = iterator.length === 3 ? symbolIteratorWithKey : symbolIterator;\n    } else if (typeof collection === obj) {\n      keys = nativeKeys(collection);\n      size = keys.length;\n      iterate = iterator.length === 3 ? objectIteratorWithKey : objectIterator;\n    } else {\n      return callback(null);\n    }\n    if (!size || isNaN(limit) || limit < 1) {\n      return callback(null);\n    }\n    timesSync(limit > size ? size : limit, iterate);\n\n    function arrayIterator() {\n      if (started < size) {\n        iterator(collection[started++], done);\n      }\n    }\n\n    function arrayIteratorWithIndex() {\n      index = started++;\n      if (index < size) {\n        iterator(collection[index], index, done);\n      }\n    }\n\n    function symbolIterator() {\n      item = iter.next();\n      if (item.done === false) {\n        started++;\n        iterator(item.value, done);\n      } else if (completed === started && iterator !== noop) {\n        iterator = noop;\n        callback(null);\n      }\n    }\n\n    function symbolIteratorWithKey() {\n      item = iter.next();\n      if (item.done === false) {\n        iterator(item.value, started++, done);\n      } else if (completed === started && iterator !== noop) {\n        iterator = noop;\n        callback(null);\n      }\n    }\n\n    function objectIterator() {\n      if (started < size) {\n        iterator(collection[keys[started++]], done);\n      }\n    }\n\n    function objectIteratorWithKey() {\n      index = started++;\n      if (index < size) {\n        key = keys[index];\n        iterator(collection[key], key, done);\n      }\n    }\n\n    function done(err, bool) {\n      if (err || bool === false) {\n        iterate = noop;\n        callback = once(callback);\n        callback(err);\n      } else if (++completed === size) {\n        iterator = noop;\n        iterate = throwError;\n        callback = onlyOnce(callback);\n        callback(null);\n      } else if (sync) {\n        nextTick(iterate);\n      } else {\n        sync = true;\n        iterate();\n      }\n      sync = false;\n    }\n  }\n\n  /**\n   * @memberof async\n   * @namespace mapSeries\n   * @param {Array|Object} collection\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.mapSeries(array, iterator, function(err, res) {\n   *   console.log(res); // [1, 3, 2];\n   *   console.log(order); // [1, 3, 2]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.mapSeries(array, iterator, function(err, res) {\n   *   console.log(res); // [1, 3, 2]\n   *   console.log(order); // [[1, 0], [3, 1], [2, 2]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.mapSeries(object, iterator, function(err, res) {\n   *   console.log(res); // [1, 3, 2]\n   *   console.log(order); // [1, 3, 2]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.mapSeries(object, iterator, function(err, res) {\n   *   console.log(res); // [1, 3, 2]\n   *   console.log(order); // [[1, 'a'], [3, 'b'], [2, 'c']]\n   * });\n   *\n   */\n  function mapSeries(collection, iterator, callback) {\n    callback = callback || noop;\n    var size, key, keys, iter, item, result, iterate;\n    var sync = false;\n    var completed = 0;\n\n    if (isArray(collection)) {\n      size = collection.length;\n      iterate = iterator.length === 3 ? arrayIteratorWithIndex : arrayIterator;\n    } else if (!collection) {\n    } else if (iteratorSymbol && collection[iteratorSymbol]) {\n      size = Infinity;\n      result = [];\n      iter = collection[iteratorSymbol]();\n      iterate = iterator.length === 3 ? symbolIteratorWithKey : symbolIterator;\n    } else if (typeof collection === obj) {\n      keys = nativeKeys(collection);\n      size = keys.length;\n      iterate = iterator.length === 3 ? objectIteratorWithKey : objectIterator;\n    }\n    if (!size) {\n      return callback(null, []);\n    }\n    result = result || Array(size);\n    iterate();\n\n    function arrayIterator() {\n      iterator(collection[completed], done);\n    }\n\n    function arrayIteratorWithIndex() {\n      iterator(collection[completed], completed, done);\n    }\n\n    function symbolIterator() {\n      item = iter.next();\n      item.done ? callback(null, result) : iterator(item.value, done);\n    }\n\n    function symbolIteratorWithKey() {\n      item = iter.next();\n      item.done ? callback(null, result) : iterator(item.value, completed, done);\n    }\n\n    function objectIterator() {\n      iterator(collection[keys[completed]], done);\n    }\n\n    function objectIteratorWithKey() {\n      key = keys[completed];\n      iterator(collection[key], key, done);\n    }\n\n    function done(err, res) {\n      if (err) {\n        iterate = throwError;\n        callback = onlyOnce(callback);\n        callback(err, createArray(result));\n        return;\n      }\n      result[completed] = res;\n      if (++completed === size) {\n        iterate = throwError;\n        callback(null, result);\n        callback = throwError;\n      } else if (sync) {\n        nextTick(iterate);\n      } else {\n        sync = true;\n        iterate();\n      }\n      sync = false;\n    }\n  }\n\n  /**\n   * @memberof async\n   * @namespace mapLimit\n   * @param {Array|Object} collection\n   * @param {number} limit - limit >= 1\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 5, 3, 4, 2];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.mapLimit(array, 2, iterator, function(err, res) {\n   *   console.log(res); // [1, 5, 3, 4, 2]\n   *   console.log(order); // [1, 3, 5, 2, 4]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1, 5, 3, 4, 2];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.mapLimit(array, 2, iterator, function(err, res) {\n   *   console.log(res); // [1, 5, 3, 4, 2]\n   *   console.log(order); // [[1, 0], [3, 2], [5, 1], [2, 4], [4, 3]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 5, c: 3, d: 4, e: 2 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.mapLimit(object, 2, iterator, function(err, res) {\n   *   console.log(res); // [1, 5, 3, 4, 2]\n   *   console.log(order); // [1, 3, 5, 2, 4]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 5, c: 3, d: 4, e: 2 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.mapLimit(object, 2, iterator, function(err, res) {\n   *   console.log(res); // [1, 5, 3, 4, 2]\n   *   console.log(order); // [[1, 'a'], [3, 'c'], [5, 'b'], [2, 'e'], [4, 'd']]\n   * });\n   *\n   */\n  function mapLimit(collection, limit, iterator, callback) {\n    callback = callback || noop;\n    var size, index, key, keys, iter, item, result, iterate;\n    var sync = false;\n    var started = 0;\n    var completed = 0;\n\n    if (isArray(collection)) {\n      size = collection.length;\n      iterate = iterator.length === 3 ? arrayIteratorWithIndex : arrayIterator;\n    } else if (!collection) {\n    } else if (iteratorSymbol && collection[iteratorSymbol]) {\n      size = Infinity;\n      result = [];\n      iter = collection[iteratorSymbol]();\n      iterate = iterator.length === 3 ? symbolIteratorWithKey : symbolIterator;\n    } else if (typeof collection === obj) {\n      keys = nativeKeys(collection);\n      size = keys.length;\n      iterate = iterator.length === 3 ? objectIteratorWithKey : objectIterator;\n    }\n    if (!size || isNaN(limit) || limit < 1) {\n      return callback(null, []);\n    }\n    result = result || Array(size);\n    timesSync(limit > size ? size : limit, iterate);\n\n    function arrayIterator() {\n      index = started++;\n      if (index < size) {\n        iterator(collection[index], createCallback(index));\n      }\n    }\n\n    function arrayIteratorWithIndex() {\n      index = started++;\n      if (index < size) {\n        iterator(collection[index], index, createCallback(index));\n      }\n    }\n\n    function symbolIterator() {\n      item = iter.next();\n      if (item.done === false) {\n        iterator(item.value, createCallback(started++));\n      } else if (completed === started && iterator !== noop) {\n        iterator = noop;\n        callback(null, result);\n      }\n    }\n\n    function symbolIteratorWithKey() {\n      item = iter.next();\n      if (item.done === false) {\n        iterator(item.value, started, createCallback(started++));\n      } else if (completed === started && iterator !== noop) {\n        iterator = noop;\n        callback(null, result);\n      }\n    }\n\n    function objectIterator() {\n      index = started++;\n      if (index < size) {\n        iterator(collection[keys[index]], createCallback(index));\n      }\n    }\n\n    function objectIteratorWithKey() {\n      index = started++;\n      if (index < size) {\n        key = keys[index];\n        iterator(collection[key], key, createCallback(index));\n      }\n    }\n\n    function createCallback(index) {\n      return function(err, res) {\n        if (index === null) {\n          throwError();\n        }\n        if (err) {\n          index = null;\n          iterate = noop;\n          callback = once(callback);\n          callback(err, createArray(result));\n          return;\n        }\n        result[index] = res;\n        index = null;\n        if (++completed === size) {\n          iterate = throwError;\n          callback(null, result);\n          callback = throwError;\n        } else if (sync) {\n          nextTick(iterate);\n        } else {\n          sync = true;\n          iterate();\n        }\n        sync = false;\n      };\n    }\n  }\n\n  /**\n   * @memberof async\n   * @namespace mapValuesSeries\n   * @param {Array|Object} collection\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.mapValuesSeries(array, iterator, function(err, res) {\n   *   console.log(res); // { '0': 1, '1': 3, '2': 2 }\n   *   console.log(order); // [1, 3, 2]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.mapValuesSeries(array, iterator, function(err, res) {\n   *   console.log(res); // { '0': 1, '1': 3, '2': 2 }\n   *   console.log(order); // [[1, 0], [3, 1], [2, 2]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.mapValuesSeries(object, iterator, function(err, res) {\n   *   console.log(res); // { a: 1, b: 3, c: 2 }\n   *   console.log(order); // [1, 3, 2]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.mapValuesSeries(object, iterator, function(err, res) {\n   *   console.log(res); // { a: 1, b: 3, c: 2 }\n   *   console.log(order); // [[1, 'a'], [3, 'b'], [2, 'c']]\n   * });\n   *\n   */\n  function mapValuesSeries(collection, iterator, callback) {\n    callback = callback || noop;\n    var size, key, keys, iter, item, iterate;\n    var sync = false;\n    var result = {};\n    var completed = 0;\n\n    if (isArray(collection)) {\n      size = collection.length;\n      iterate = iterator.length === 3 ? arrayIteratorWithIndex : arrayIterator;\n    } else if (!collection) {\n    } else if (iteratorSymbol && collection[iteratorSymbol]) {\n      size = Infinity;\n      iter = collection[iteratorSymbol]();\n      iterate = iterator.length === 3 ? symbolIteratorWithKey : symbolIterator;\n    } else if (typeof collection === obj) {\n      keys = nativeKeys(collection);\n      size = keys.length;\n      iterate = iterator.length === 3 ? objectIteratorWithKey : objectIterator;\n    }\n    if (!size) {\n      return callback(null, result);\n    }\n    iterate();\n\n    function arrayIterator() {\n      key = completed;\n      iterator(collection[completed], done);\n    }\n\n    function arrayIteratorWithIndex() {\n      key = completed;\n      iterator(collection[completed], completed, done);\n    }\n\n    function symbolIterator() {\n      key = completed;\n      item = iter.next();\n      item.done ? callback(null, result) : iterator(item.value, done);\n    }\n\n    function symbolIteratorWithKey() {\n      key = completed;\n      item = iter.next();\n      item.done ? callback(null, result) : iterator(item.value, completed, done);\n    }\n\n    function objectIterator() {\n      key = keys[completed];\n      iterator(collection[key], done);\n    }\n\n    function objectIteratorWithKey() {\n      key = keys[completed];\n      iterator(collection[key], key, done);\n    }\n\n    function done(err, res) {\n      if (err) {\n        iterate = throwError;\n        callback = onlyOnce(callback);\n        callback(err, objectClone(result));\n        return;\n      }\n      result[key] = res;\n      if (++completed === size) {\n        iterate = throwError;\n        callback(null, result);\n        callback = throwError;\n      } else if (sync) {\n        nextTick(iterate);\n      } else {\n        sync = true;\n        iterate();\n      }\n      sync = false;\n    }\n  }\n\n  /**\n   * @memberof async\n   * @namespace mapValuesLimit\n   * @param {Array|Object} collection\n   * @param {number} limit - limit >= 1\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 5, 3, 4, 2];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.mapValuesLimit(array, 2, iterator, function(err, res) {\n   *   console.log(res); // { '0': 1, '1': 5, '2': 3, '3': 4, '4': 2 }\n   *   console.log(order); // [1, 3, 5, 2, 4]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1, 5, 3, 4, 2];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.mapValuesLimit(array, 2, iterator, function(err, res) {\n   *   console.log(res); // { '0': 1, '1': 5, '2': 3, '3': 4, '4': 2 }\n   *   console.log(order); // [[1, 0], [3, 2], [5, 1], [2, 4], [4, 3]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 5, c: 3, d: 4, e: 2 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.mapValuesLimit(object, 2, iterator, function(err, res) {\n   *   console.log(res); // { a: 1, b: 5, c: 3, d: 4, e: 2 }\n   *   console.log(order); // [1, 3, 5, 2, 4]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 5, c: 3, d: 4, e: 2 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.mapValuesLimit(object, 2, iterator, function(err, res) {\n   *   console.log(res); // { a: 1, b: 5, c: 3, d: 4, e: 2 }\n   *   console.log(order); // [[1, 'a'], [3, 'c'], [5, 'b'], [2, 'e'], [4, 'd']]\n   * });\n   *\n   */\n  function mapValuesLimit(collection, limit, iterator, callback) {\n    callback = callback || noop;\n    var size, index, key, keys, iter, item, iterate;\n    var sync = false;\n    var result = {};\n    var started = 0;\n    var completed = 0;\n\n    if (isArray(collection)) {\n      size = collection.length;\n      iterate = iterator.length === 3 ? arrayIteratorWithIndex : arrayIterator;\n    } else if (!collection) {\n    } else if (iteratorSymbol && collection[iteratorSymbol]) {\n      size = Infinity;\n      iter = collection[iteratorSymbol]();\n      iterate = iterator.length === 3 ? symbolIteratorWithKey : symbolIterator;\n    } else if (typeof collection === obj) {\n      keys = nativeKeys(collection);\n      size = keys.length;\n      iterate = iterator.length === 3 ? objectIteratorWithKey : objectIterator;\n    }\n    if (!size || isNaN(limit) || limit < 1) {\n      return callback(null, result);\n    }\n    timesSync(limit > size ? size : limit, iterate);\n\n    function arrayIterator() {\n      index = started++;\n      if (index < size) {\n        iterator(collection[index], createCallback(index));\n      }\n    }\n\n    function arrayIteratorWithIndex() {\n      index = started++;\n      if (index < size) {\n        iterator(collection[index], index, createCallback(index));\n      }\n    }\n\n    function symbolIterator() {\n      item = iter.next();\n      if (item.done === false) {\n        iterator(item.value, createCallback(started++));\n      } else if (completed === started && iterator !== noop) {\n        iterator = noop;\n        callback(null, result);\n      }\n    }\n\n    function symbolIteratorWithKey() {\n      item = iter.next();\n      if (item.done === false) {\n        iterator(item.value, started, createCallback(started++));\n      } else if (completed === started && iterator !== noop) {\n        iterator = noop;\n        callback(null, result);\n      }\n    }\n\n    function objectIterator() {\n      index = started++;\n      if (index < size) {\n        key = keys[index];\n        iterator(collection[key], createCallback(key));\n      }\n    }\n\n    function objectIteratorWithKey() {\n      index = started++;\n      if (index < size) {\n        key = keys[index];\n        iterator(collection[key], key, createCallback(key));\n      }\n    }\n\n    function createCallback(key) {\n      return function(err, res) {\n        if (key === null) {\n          throwError();\n        }\n        if (err) {\n          key = null;\n          iterate = noop;\n          callback = once(callback);\n          callback(err, objectClone(result));\n          return;\n        }\n        result[key] = res;\n        key = null;\n        if (++completed === size) {\n          callback(null, result);\n        } else if (sync) {\n          nextTick(iterate);\n        } else {\n          sync = true;\n          iterate();\n        }\n        sync = false;\n      };\n    }\n  }\n\n  /**\n   * @private\n   * @param {Function} arrayEach\n   * @param {Function} baseEach\n   * @param {Function} symbolEach\n   * @param {boolean} bool\n   */\n  function createDetect(arrayEach, baseEach, symbolEach, bool) {\n    return function(collection, iterator, callback) {\n      callback = callback || noop;\n      var size, keys;\n      var completed = 0;\n\n      if (isArray(collection)) {\n        size = collection.length;\n        arrayEach(collection, iterator, createCallback);\n      } else if (!collection) {\n      } else if (iteratorSymbol && collection[iteratorSymbol]) {\n        size = symbolEach(collection, iterator, createCallback);\n        size && size === completed && callback(null);\n      } else if (typeof collection === obj) {\n        keys = nativeKeys(collection);\n        size = keys.length;\n        baseEach(collection, iterator, createCallback, keys);\n      }\n      if (!size) {\n        callback(null);\n      }\n\n      function createCallback(value) {\n        var called = false;\n        return function done(err, res) {\n          if (called) {\n            throwError();\n          }\n          called = true;\n          if (err) {\n            callback = once(callback);\n            callback(err);\n          } else if (!!res === bool) {\n            callback = once(callback);\n            callback(null, value);\n          } else if (++completed === size) {\n            callback(null);\n          }\n        };\n      }\n    };\n  }\n\n  /**\n   * @private\n   * @param {boolean} bool\n   */\n  function createDetectSeries(bool) {\n    return function(collection, iterator, callback) {\n      callback = onlyOnce(callback || noop);\n      var size, key, value, keys, iter, item, iterate;\n      var sync = false;\n      var completed = 0;\n\n      if (isArray(collection)) {\n        size = collection.length;\n        iterate = iterator.length === 3 ? arrayIteratorWithIndex : arrayIterator;\n      } else if (!collection) {\n      } else if (iteratorSymbol && collection[iteratorSymbol]) {\n        size = Infinity;\n        iter = collection[iteratorSymbol]();\n        iterate = iterator.length === 3 ? symbolIteratorWithKey : symbolIterator;\n      } else if (typeof collection === obj) {\n        keys = nativeKeys(collection);\n        size = keys.length;\n        iterate = iterator.length === 3 ? objectIteratorWithKey : objectIterator;\n      }\n      if (!size) {\n        return callback(null);\n      }\n      iterate();\n\n      function arrayIterator() {\n        value = collection[completed];\n        iterator(value, done);\n      }\n\n      function arrayIteratorWithIndex() {\n        value = collection[completed];\n        iterator(value, completed, done);\n      }\n\n      function symbolIterator() {\n        item = iter.next();\n        value = item.value;\n        item.done ? callback(null) : iterator(value, done);\n      }\n\n      function symbolIteratorWithKey() {\n        item = iter.next();\n        value = item.value;\n        item.done ? callback(null) : iterator(value, completed, done);\n      }\n\n      function objectIterator() {\n        value = collection[keys[completed]];\n        iterator(value, done);\n      }\n\n      function objectIteratorWithKey() {\n        key = keys[completed];\n        value = collection[key];\n        iterator(value, key, done);\n      }\n\n      function done(err, res) {\n        if (err) {\n          callback(err);\n        } else if (!!res === bool) {\n          iterate = throwError;\n          callback(null, value);\n        } else if (++completed === size) {\n          iterate = throwError;\n          callback(null);\n        } else if (sync) {\n          nextTick(iterate);\n        } else {\n          sync = true;\n          iterate();\n        }\n        sync = false;\n      }\n    };\n  }\n\n  /**\n   * @private\n   * @param {boolean} bool\n   */\n  function createDetectLimit(bool) {\n    return function(collection, limit, iterator, callback) {\n      callback = callback || noop;\n      var size, index, key, value, keys, iter, item, iterate;\n      var sync = false;\n      var started = 0;\n      var completed = 0;\n\n      if (isArray(collection)) {\n        size = collection.length;\n        iterate = iterator.length === 3 ? arrayIteratorWithIndex : arrayIterator;\n      } else if (!collection) {\n      } else if (iteratorSymbol && collection[iteratorSymbol]) {\n        size = Infinity;\n        iter = collection[iteratorSymbol]();\n        iterate = iterator.length === 3 ? symbolIteratorWithKey : symbolIterator;\n      } else if (typeof collection === obj) {\n        keys = nativeKeys(collection);\n        size = keys.length;\n        iterate = iterator.length === 3 ? objectIteratorWithKey : objectIterator;\n      }\n      if (!size || isNaN(limit) || limit < 1) {\n        return callback(null);\n      }\n      timesSync(limit > size ? size : limit, iterate);\n\n      function arrayIterator() {\n        index = started++;\n        if (index < size) {\n          value = collection[index];\n          iterator(value, createCallback(value));\n        }\n      }\n\n      function arrayIteratorWithIndex() {\n        index = started++;\n        if (index < size) {\n          value = collection[index];\n          iterator(value, index, createCallback(value));\n        }\n      }\n\n      function symbolIterator() {\n        item = iter.next();\n        if (item.done === false) {\n          started++;\n          value = item.value;\n          iterator(value, createCallback(value));\n        } else if (completed === started && iterator !== noop) {\n          iterator = noop;\n          callback(null);\n        }\n      }\n\n      function symbolIteratorWithKey() {\n        item = iter.next();\n        if (item.done === false) {\n          value = item.value;\n          iterator(value, started++, createCallback(value));\n        } else if (completed === started && iterator !== noop) {\n          iterator = noop;\n          callback(null);\n        }\n      }\n\n      function objectIterator() {\n        index = started++;\n        if (index < size) {\n          value = collection[keys[index]];\n          iterator(value, createCallback(value));\n        }\n      }\n\n      function objectIteratorWithKey() {\n        if (started < size) {\n          key = keys[started++];\n          value = collection[key];\n          iterator(value, key, createCallback(value));\n        }\n      }\n\n      function createCallback(value) {\n        var called = false;\n        return function(err, res) {\n          if (called) {\n            throwError();\n          }\n          called = true;\n          if (err) {\n            iterate = noop;\n            callback = once(callback);\n            callback(err);\n          } else if (!!res === bool) {\n            iterate = noop;\n            callback = once(callback);\n            callback(null, value);\n          } else if (++completed === size) {\n            callback(null);\n          } else if (sync) {\n            nextTick(iterate);\n          } else {\n            sync = true;\n            iterate();\n          }\n          sync = false;\n        };\n      }\n    };\n  }\n\n  /**\n   * @private\n   * @param {Function} arrayEach\n   * @param {Function} baseEach\n   * @param {Function} symbolEach\n   * @param {boolean} bool\n   */\n  function createPick(arrayEach, baseEach, symbolEach, bool) {\n    return function(collection, iterator, callback) {\n      callback = callback || noop;\n      var size, keys;\n      var completed = 0;\n      var result = {};\n\n      if (isArray(collection)) {\n        size = collection.length;\n        arrayEach(collection, iterator, createCallback);\n      } else if (!collection) {\n      } else if (iteratorSymbol && collection[iteratorSymbol]) {\n        size = symbolEach(collection, iterator, createCallback);\n        size && size === completed && callback(null, result);\n      } else if (typeof collection === obj) {\n        keys = nativeKeys(collection);\n        size = keys.length;\n        baseEach(collection, iterator, createCallback, keys);\n      }\n      if (!size) {\n        return callback(null, {});\n      }\n\n      function createCallback(key, value) {\n        return function done(err, res) {\n          if (key === null) {\n            throwError();\n          }\n          if (err) {\n            key = null;\n            callback = once(callback);\n            callback(err, objectClone(result));\n            return;\n          }\n          if (!!res === bool) {\n            result[key] = value;\n          }\n          key = null;\n          if (++completed === size) {\n            callback(null, result);\n          }\n        };\n      }\n    };\n  }\n\n  /**\n   * @private\n   * @param {boolean} bool\n   */\n  function createPickSeries(bool) {\n    return function(collection, iterator, callback) {\n      callback = onlyOnce(callback || noop);\n      var size, key, value, keys, iter, item, iterate;\n      var sync = false;\n      var result = {};\n      var completed = 0;\n\n      if (isArray(collection)) {\n        size = collection.length;\n        iterate = iterator.length === 3 ? arrayIteratorWithIndex : arrayIterator;\n      } else if (!collection) {\n      } else if (iteratorSymbol && collection[iteratorSymbol]) {\n        size = Infinity;\n        iter = collection[iteratorSymbol]();\n        iterate = iterator.length === 3 ? symbolIteratorWithKey : symbolIterator;\n      } else if (typeof collection === obj) {\n        keys = nativeKeys(collection);\n        size = keys.length;\n        iterate = iterator.length === 3 ? objectIteratorWithKey : objectIterator;\n      }\n      if (!size) {\n        return callback(null, {});\n      }\n      iterate();\n\n      function arrayIterator() {\n        key = completed;\n        value = collection[completed];\n        iterator(value, done);\n      }\n\n      function arrayIteratorWithIndex() {\n        key = completed;\n        value = collection[completed];\n        iterator(value, completed, done);\n      }\n\n      function symbolIterator() {\n        key = completed;\n        item = iter.next();\n        value = item.value;\n        item.done ? callback(null, result) : iterator(value, done);\n      }\n\n      function symbolIteratorWithKey() {\n        key = completed;\n        item = iter.next();\n        value = item.value;\n        item.done ? callback(null, result) : iterator(value, key, done);\n      }\n\n      function objectIterator() {\n        key = keys[completed];\n        value = collection[key];\n        iterator(value, done);\n      }\n\n      function objectIteratorWithKey() {\n        key = keys[completed];\n        value = collection[key];\n        iterator(value, key, done);\n      }\n\n      function done(err, res) {\n        if (err) {\n          callback(err, result);\n          return;\n        }\n        if (!!res === bool) {\n          result[key] = value;\n        }\n        if (++completed === size) {\n          iterate = throwError;\n          callback(null, result);\n        } else if (sync) {\n          nextTick(iterate);\n        } else {\n          sync = true;\n          iterate();\n        }\n        sync = false;\n      }\n    };\n  }\n\n  /**\n   * @private\n   * @param {boolean} bool\n   */\n  function createPickLimit(bool) {\n    return function(collection, limit, iterator, callback) {\n      callback = callback || noop;\n      var size, index, key, value, keys, iter, item, iterate;\n      var sync = false;\n      var result = {};\n      var started = 0;\n      var completed = 0;\n\n      if (isArray(collection)) {\n        size = collection.length;\n        iterate = iterator.length === 3 ? arrayIteratorWithIndex : arrayIterator;\n      } else if (!collection) {\n      } else if (iteratorSymbol && collection[iteratorSymbol]) {\n        size = Infinity;\n        iter = collection[iteratorSymbol]();\n        iterate = iterator.length === 3 ? symbolIteratorWithKey : symbolIterator;\n      } else if (typeof collection === obj) {\n        keys = nativeKeys(collection);\n        size = keys.length;\n        iterate = iterator.length === 3 ? objectIteratorWithKey : objectIterator;\n      }\n      if (!size || isNaN(limit) || limit < 1) {\n        return callback(null, {});\n      }\n      timesSync(limit > size ? size : limit, iterate);\n\n      function arrayIterator() {\n        index = started++;\n        if (index < size) {\n          value = collection[index];\n          iterator(value, createCallback(value, index));\n        }\n      }\n\n      function arrayIteratorWithIndex() {\n        index = started++;\n        if (index < size) {\n          value = collection[index];\n          iterator(value, index, createCallback(value, index));\n        }\n      }\n\n      function symbolIterator() {\n        item = iter.next();\n        if (item.done === false) {\n          value = item.value;\n          iterator(value, createCallback(value, started++));\n        } else if (completed === started && iterator !== noop) {\n          iterator = noop;\n          callback(null, result);\n        }\n      }\n\n      function symbolIteratorWithKey() {\n        item = iter.next();\n        if (item.done === false) {\n          value = item.value;\n          iterator(value, started, createCallback(value, started++));\n        } else if (completed === started && iterator !== noop) {\n          iterator = noop;\n          callback(null, result);\n        }\n      }\n\n      function objectIterator() {\n        if (started < size) {\n          key = keys[started++];\n          value = collection[key];\n          iterator(value, createCallback(value, key));\n        }\n      }\n\n      function objectIteratorWithKey() {\n        if (started < size) {\n          key = keys[started++];\n          value = collection[key];\n          iterator(value, key, createCallback(value, key));\n        }\n      }\n\n      function createCallback(value, key) {\n        return function(err, res) {\n          if (key === null) {\n            throwError();\n          }\n          if (err) {\n            key = null;\n            iterate = noop;\n            callback = once(callback);\n            callback(err, objectClone(result));\n            return;\n          }\n          if (!!res === bool) {\n            result[key] = value;\n          }\n          key = null;\n          if (++completed === size) {\n            iterate = throwError;\n            callback = onlyOnce(callback);\n            callback(null, result);\n          } else if (sync) {\n            nextTick(iterate);\n          } else {\n            sync = true;\n            iterate();\n          }\n          sync = false;\n        };\n      }\n    };\n  }\n\n  /**\n   * @memberof async\n   * @namespace reduce\n   * @param {Array|Object} collection\n   * @param {*} result\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var collection = [1, 3, 2, 4];\n   * var iterator = function(result, num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, result + num);\n   *   }, num * 10);\n   * };\n   * async.reduce(collection, 0, iterator, function(err, res) {\n   *   console.log(res); // 10\n   *   console.log(order); // [1, 3, 2, 4]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var collection = [1, 3, 2, 4];\n   * var iterator = function(result, num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, result + num);\n   *   }, num * 10);\n   * };\n   * async.reduce(collection, '', iterator, function(err, res) {\n   *   console.log(res); // '1324'\n   *   console.log(order); // [[1, 0], [3, 1], [2, 2], [4, 3]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2, d: 4 };\n   * var iterator = function(result, num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, result + num);\n   *   }, num * 10);\n   * };\n   * async.reduce(collection, '', iterator, function(err, res) {\n   *   console.log(res); // '1324'\n   *   console.log(order); // [1, 3, 2, 4]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2, d: 4 };\n   * var iterator = function(result, num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, result + num);\n   *   }, num * 10);\n   * };\n   * async.reduce(collection, 0, iterator, function(err, res) {\n   *   console.log(res); // 10\n   *   console.log(order); // [[1, 'a'], [3, 'b'], [2, 'b'], [4, 'd']]\n   * });\n   *\n   */\n  function reduce(collection, result, iterator, callback) {\n    callback = onlyOnce(callback || noop);\n    var size, key, keys, iter, item, iterate;\n    var sync = false;\n    var completed = 0;\n\n    if (isArray(collection)) {\n      size = collection.length;\n      iterate = iterator.length === 4 ? arrayIteratorWithIndex : arrayIterator;\n    } else if (!collection) {\n    } else if (iteratorSymbol && collection[iteratorSymbol]) {\n      size = Infinity;\n      iter = collection[iteratorSymbol]();\n      iterate = iterator.length === 4 ? symbolIteratorWithKey : symbolIterator;\n    } else if (typeof collection === obj) {\n      keys = nativeKeys(collection);\n      size = keys.length;\n      iterate = iterator.length === 4 ? objectIteratorWithKey : objectIterator;\n    }\n    if (!size) {\n      return callback(null, result);\n    }\n    iterate(result);\n\n    function arrayIterator(result) {\n      iterator(result, collection[completed], done);\n    }\n\n    function arrayIteratorWithIndex(result) {\n      iterator(result, collection[completed], completed, done);\n    }\n\n    function symbolIterator(result) {\n      item = iter.next();\n      item.done ? callback(null, result) : iterator(result, item.value, done);\n    }\n\n    function symbolIteratorWithKey(result) {\n      item = iter.next();\n      item.done ? callback(null, result) : iterator(result, item.value, completed, done);\n    }\n\n    function objectIterator(result) {\n      iterator(result, collection[keys[completed]], done);\n    }\n\n    function objectIteratorWithKey(result) {\n      key = keys[completed];\n      iterator(result, collection[key], key, done);\n    }\n\n    function done(err, result) {\n      if (err) {\n        callback(err, result);\n      } else if (++completed === size) {\n        iterator = throwError;\n        callback(null, result);\n      } else if (sync) {\n        nextTick(function() {\n          iterate(result);\n        });\n      } else {\n        sync = true;\n        iterate(result);\n      }\n      sync = false;\n    }\n  }\n\n  /**\n   * @memberof async\n   * @namespace reduceRight\n   * @param {Array|Object} collection\n   * @param {*} result\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var collection = [1, 3, 2, 4];\n   * var iterator = function(result, num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, result + num);\n   *   }, num * 10);\n   * };\n   * async.reduceRight(collection, 0, iterator, function(err, res) {\n   *   console.log(res); // 10\n   *   console.log(order); // [4, 2, 3, 1]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var collection = [1, 3, 2, 4];\n   * var iterator = function(result, num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, result + num);\n   *   }, num * 10);\n   * };\n   * async.reduceRight(collection, '', iterator, function(err, res) {\n   *   console.log(res); // '4231'\n   *   console.log(order); // [[4, 3], [2, 2], [3, 1], [1, 0]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2, d: 4 };\n   * var iterator = function(result, num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, result + num);\n   *   }, num * 10);\n   * };\n   * async.reduceRight(collection, '', iterator, function(err, res) {\n   *   console.log(res); // '4231'\n   *   console.log(order); // [4, 2, 3, 1]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2, d: 4 };\n   * var iterator = function(result, num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, result + num);\n   *   }, num * 10);\n   * };\n   * async.reduceRight(collection, 0, iterator, function(err, res) {\n   *   console.log(res); // 10\n   *   console.log(order); // [[4, 3], [2, 2], [3, 1], [1, 0]]\n   * });\n   *\n   */\n  function reduceRight(collection, result, iterator, callback) {\n    callback = onlyOnce(callback || noop);\n    var resIndex, index, key, keys, iter, item, col, iterate;\n    var sync = false;\n\n    if (isArray(collection)) {\n      resIndex = collection.length;\n      iterate = iterator.length === 4 ? arrayIteratorWithIndex : arrayIterator;\n    } else if (!collection) {\n    } else if (iteratorSymbol && collection[iteratorSymbol]) {\n      col = [];\n      iter = collection[iteratorSymbol]();\n      index = -1;\n      while ((item = iter.next()).done === false) {\n        col[++index] = item.value;\n      }\n      collection = col;\n      resIndex = col.length;\n      iterate = iterator.length === 4 ? arrayIteratorWithIndex : arrayIterator;\n    } else if (typeof collection === obj) {\n      keys = nativeKeys(collection);\n      resIndex = keys.length;\n      iterate = iterator.length === 4 ? objectIteratorWithKey : objectIterator;\n    }\n    if (!resIndex) {\n      return callback(null, result);\n    }\n    iterate(result);\n\n    function arrayIterator(result) {\n      iterator(result, collection[--resIndex], done);\n    }\n\n    function arrayIteratorWithIndex(result) {\n      iterator(result, collection[--resIndex], resIndex, done);\n    }\n\n    function objectIterator(result) {\n      iterator(result, collection[keys[--resIndex]], done);\n    }\n\n    function objectIteratorWithKey(result) {\n      key = keys[--resIndex];\n      iterator(result, collection[key], key, done);\n    }\n\n    function done(err, result) {\n      if (err) {\n        callback(err, result);\n      } else if (resIndex === 0) {\n        iterate = throwError;\n        callback(null, result);\n      } else if (sync) {\n        nextTick(function() {\n          iterate(result);\n        });\n      } else {\n        sync = true;\n        iterate(result);\n      }\n      sync = false;\n    }\n  }\n\n  /**\n   * @private\n   * @param {Function} arrayEach\n   * @param {Function} baseEach\n   * @param {Function} symbolEach\n   */\n  function createTransform(arrayEach, baseEach, symbolEach) {\n    return function transform(collection, accumulator, iterator, callback) {\n      if (arguments.length === 3) {\n        callback = iterator;\n        iterator = accumulator;\n        accumulator = undefined;\n      }\n      callback = callback || noop;\n      var size, keys, result;\n      var completed = 0;\n\n      if (isArray(collection)) {\n        size = collection.length;\n        result = accumulator !== undefined ? accumulator : [];\n        arrayEach(collection, result, iterator, done);\n      } else if (!collection) {\n      } else if (iteratorSymbol && collection[iteratorSymbol]) {\n        result = accumulator !== undefined ? accumulator : {};\n        size = symbolEach(collection, result, iterator, done);\n        size && size === completed && callback(null, result);\n      } else if (typeof collection === obj) {\n        keys = nativeKeys(collection);\n        size = keys.length;\n        result = accumulator !== undefined ? accumulator : {};\n        baseEach(collection, result, iterator, done, keys);\n      }\n      if (!size) {\n        callback(null, accumulator !== undefined ? accumulator : result || {});\n      }\n\n      function done(err, bool) {\n        if (err) {\n          callback = once(callback);\n          callback(err, isArray(result) ? createArray(result) : objectClone(result));\n        } else if (++completed === size) {\n          callback(null, result);\n        } else if (bool === false) {\n          callback = once(callback);\n          callback(null, isArray(result) ? createArray(result) : objectClone(result));\n        }\n      }\n    };\n  }\n\n  /**\n   * @memberof async\n   * @namespace transformSeries\n   * @param {Array|Object} collection\n   * @param {Array|Object|Function} [accumulator]\n   * @param {Function} [iterator]\n   * @param {Function} [callback]\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var collection = [1, 3, 2, 4];\n   * var iterator = function(result, num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     result.push(num)\n   *     done();\n   *   }, num * 10);\n   * };\n   * async.transformSeries(collection, iterator, function(err, res) {\n   *   console.log(res); // [1, 3, 2, 4]\n   *   console.log(order); // [1, 3, 2, 4]\n   * });\n   *\n   * @example\n   *\n   * // array with index and accumulator\n   * var order = [];\n   * var collection = [1, 3, 2, 4];\n   * var iterator = function(result, num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     result[index] = num;\n   *     done();\n   *   }, num * 10);\n   * };\n   * async.transformSeries(collection, {}, iterator, function(err, res) {\n   *   console.log(res); // { '0': 1, '1': 3, '2': 2, '3': 4 }\n   *   console.log(order); // [[1, 0], [3, 1], [2, 2], [4, 3]]\n   * });\n   *\n   * @example\n   *\n   * // object with accumulator\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2, d: 4 };\n   * var iterator = function(result, num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     result.push(num);\n   *     done();\n   *   }, num * 10);\n   * };\n   * async.transformSeries(collection, [], iterator, function(err, res) {\n   *   console.log(res); // [1, 3, 2, 4]\n   *   console.log(order); // [1, 3, 2, 4]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2, d: 4 };\n   * var iterator = function(result, num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     result[key] = num;\n   *     done();\n   *   }, num * 10);\n   * };\n   * async.transformSeries(collection, iterator, function(err, res) {\n   *   console.log(res); //  { a: 1, b: 3, c: 2, d: 4 }\n   *   console.log(order); // [[1, 'a'], [3, 'b'], [2, 'b'], [4, 'd']]\n   * });\n   *\n   */\n  function transformSeries(collection, accumulator, iterator, callback) {\n    if (arguments.length === 3) {\n      callback = iterator;\n      iterator = accumulator;\n      accumulator = undefined;\n    }\n    callback = onlyOnce(callback || noop);\n    var size, key, keys, iter, item, iterate, result;\n    var sync = false;\n    var completed = 0;\n\n    if (isArray(collection)) {\n      size = collection.length;\n      result = accumulator !== undefined ? accumulator : [];\n      iterate = iterator.length === 4 ? arrayIteratorWithIndex : arrayIterator;\n    } else if (!collection) {\n    } else if (iteratorSymbol && collection[iteratorSymbol]) {\n      size = Infinity;\n      iter = collection[iteratorSymbol]();\n      result = accumulator !== undefined ? accumulator : {};\n      iterate = iterator.length === 4 ? symbolIteratorWithKey : symbolIterator;\n    } else if (typeof collection === obj) {\n      keys = nativeKeys(collection);\n      size = keys.length;\n      result = accumulator !== undefined ? accumulator : {};\n      iterate = iterator.length === 4 ? objectIteratorWithKey : objectIterator;\n    }\n    if (!size) {\n      return callback(null, accumulator !== undefined ? accumulator : result || {});\n    }\n    iterate();\n\n    function arrayIterator() {\n      iterator(result, collection[completed], done);\n    }\n\n    function arrayIteratorWithIndex() {\n      iterator(result, collection[completed], completed, done);\n    }\n\n    function symbolIterator() {\n      item = iter.next();\n      item.done ? callback(null, result) : iterator(result, item.value, done);\n    }\n\n    function symbolIteratorWithKey() {\n      item = iter.next();\n      item.done ? callback(null, result) : iterator(result, item.value, completed, done);\n    }\n\n    function objectIterator() {\n      iterator(result, collection[keys[completed]], done);\n    }\n\n    function objectIteratorWithKey() {\n      key = keys[completed];\n      iterator(result, collection[key], key, done);\n    }\n\n    function done(err, bool) {\n      if (err) {\n        callback(err, result);\n      } else if (++completed === size || bool === false) {\n        iterate = throwError;\n        callback(null, result);\n      } else if (sync) {\n        nextTick(iterate);\n      } else {\n        sync = true;\n        iterate();\n      }\n      sync = false;\n    }\n  }\n\n  /**\n   * @memberof async\n   * @namespace transformLimit\n   * @param {Array|Object} collection\n   * @param {number} limit - limit >= 1\n   * @param {Array|Object|Function} [accumulator]\n   * @param {Function} [iterator]\n   * @param {Function} [callback]\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 5, 3, 4, 2];\n   * var iterator = function(result, num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     result.push(num);\n   *     done();\n   *   }, num * 10);\n   * };\n   * async.transformLimit(array, 2, iterator, function(err, res) {\n   *   console.log(res); // [1, 3, 5, 2, 4]\n   *   console.log(order); // [1, 3, 5, 2, 4]\n   * });\n   *\n   * @example\n   *\n   * // array with index and accumulator\n   * var order = [];\n   * var array = [1, 5, 3, 4, 2];\n   * var iterator = function(result, num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     result[index] = key;\n   *     done();\n   *   }, num * 10);\n   * };\n   * async.transformLimit(array, 2, {}, iterator, function(err, res) {\n   *   console.log(res); // { '0': 1, '1': 5, '2': 3, '3': 4, '4': 2 }\n   *   console.log(order); // [[1, 0], [3, 2], [5, 1], [2, 4], [4, 3]]\n   * });\n   *\n   * @example\n   *\n   * // object with accumulator\n   * var order = [];\n   * var object = { a: 1, b: 5, c: 3, d: 4, e: 2 };\n   * var iterator = function(result, num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     result.push(num);\n   *     done();\n   *   }, num * 10);\n   * };\n   * async.transformLimit(object, 2, [], iterator, function(err, res) {\n   *   console.log(res); // [1, 3, 5, 2, 4]\n   *   console.log(order); // [1, 3, 5, 2, 4]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 5, c: 3, d: 4, e: 2 };\n   * var iterator = function(result, num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     result[key] = num;\n   *     done();\n   *   }, num * 10);\n   * };\n   * async.transformLimit(object, 2, iterator, function(err, res) {\n   *   console.log(res); // { a: 1, b: 5, c: 3, d: 4, e: 2 };\n   *   console.log(order); // [[1, 'a'], [3, 'c'], [5, 'b'], [2, 'e'], [4, 'd']]\n   * });\n   *\n   */\n  function transformLimit(collection, limit, accumulator, iterator, callback) {\n    if (arguments.length === 4) {\n      callback = iterator;\n      iterator = accumulator;\n      accumulator = undefined;\n    }\n    callback = callback || noop;\n    var size, index, key, keys, iter, item, iterate, result;\n    var sync = false;\n    var started = 0;\n    var completed = 0;\n\n    if (isArray(collection)) {\n      size = collection.length;\n      result = accumulator !== undefined ? accumulator : [];\n      iterate = iterator.length === 4 ? arrayIteratorWithIndex : arrayIterator;\n    } else if (!collection) {\n    } else if (iteratorSymbol && collection[iteratorSymbol]) {\n      size = Infinity;\n      iter = collection[iteratorSymbol]();\n      result = accumulator !== undefined ? accumulator : {};\n      iterate = iterator.length === 4 ? symbolIteratorWithKey : symbolIterator;\n    } else if (typeof collection === obj) {\n      keys = nativeKeys(collection);\n      size = keys.length;\n      result = accumulator !== undefined ? accumulator : {};\n      iterate = iterator.length === 4 ? objectIteratorWithKey : objectIterator;\n    }\n    if (!size || isNaN(limit) || limit < 1) {\n      return callback(null, accumulator !== undefined ? accumulator : result || {});\n    }\n    timesSync(limit > size ? size : limit, iterate);\n\n    function arrayIterator() {\n      index = started++;\n      if (index < size) {\n        iterator(result, collection[index], onlyOnce(done));\n      }\n    }\n\n    function arrayIteratorWithIndex() {\n      index = started++;\n      if (index < size) {\n        iterator(result, collection[index], index, onlyOnce(done));\n      }\n    }\n\n    function symbolIterator() {\n      item = iter.next();\n      if (item.done === false) {\n        started++;\n        iterator(result, item.value, onlyOnce(done));\n      } else if (completed === started && iterator !== noop) {\n        iterator = noop;\n        callback(null, result);\n      }\n    }\n\n    function symbolIteratorWithKey() {\n      item = iter.next();\n      if (item.done === false) {\n        iterator(result, item.value, started++, onlyOnce(done));\n      } else if (completed === started && iterator !== noop) {\n        iterator = noop;\n        callback(null, result);\n      }\n    }\n\n    function objectIterator() {\n      index = started++;\n      if (index < size) {\n        iterator(result, collection[keys[index]], onlyOnce(done));\n      }\n    }\n\n    function objectIteratorWithKey() {\n      index = started++;\n      if (index < size) {\n        key = keys[index];\n        iterator(result, collection[key], key, onlyOnce(done));\n      }\n    }\n\n    function done(err, bool) {\n      if (err || bool === false) {\n        iterate = noop;\n        callback(err || null, isArray(result) ? createArray(result) : objectClone(result));\n        callback = noop;\n      } else if (++completed === size) {\n        iterator = noop;\n        callback(null, result);\n      } else if (sync) {\n        nextTick(iterate);\n      } else {\n        sync = true;\n        iterate();\n      }\n      sync = false;\n    }\n  }\n\n  /**\n   * @private\n   * @param {function} arrayEach\n   * @param {function} baseEach\n   * @param {function} symbolEach\n   */\n  function createSortBy(arrayEach, baseEach, symbolEach) {\n    return function sortBy(collection, iterator, callback) {\n      callback = callback || noop;\n      var size, array, criteria;\n      var completed = 0;\n\n      if (isArray(collection)) {\n        size = collection.length;\n        array = Array(size);\n        criteria = Array(size);\n        arrayEach(collection, iterator, createCallback);\n      } else if (!collection) {\n      } else if (iteratorSymbol && collection[iteratorSymbol]) {\n        array = [];\n        criteria = [];\n        size = symbolEach(collection, iterator, createCallback);\n        size && size === completed && callback(null, sortByCriteria(array, criteria));\n      } else if (typeof collection === obj) {\n        var keys = nativeKeys(collection);\n        size = keys.length;\n        array = Array(size);\n        criteria = Array(size);\n        baseEach(collection, iterator, createCallback, keys);\n      }\n      if (!size) {\n        callback(null, []);\n      }\n\n      function createCallback(index, value) {\n        var called = false;\n        array[index] = value;\n        return function done(err, criterion) {\n          if (called) {\n            throwError();\n          }\n          called = true;\n          criteria[index] = criterion;\n          if (err) {\n            callback = once(callback);\n            callback(err);\n          } else if (++completed === size) {\n            callback(null, sortByCriteria(array, criteria));\n          }\n        };\n      }\n    };\n  }\n\n  /**\n   * @memberof async\n   * @namespace sortBySeries\n   * @param {Array|Object} collection\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.sortBySeries(array, iterator, function(err, res) {\n   *   console.log(res); // [1, 2, 3];\n   *   console.log(order); // [1, 3, 2]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.sortBySeries(array, iterator, function(err, res) {\n   *   console.log(res); // [1, 2, 3]\n   *   console.log(order); // [[1, 0], [3, 1], [2, 2]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.sortBySeries(object, iterator, function(err, res) {\n   *   console.log(res); // [1, 2, 3]\n   *   console.log(order); // [1, 3, 2]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.sortBySeries(object, iterator, function(err, res) {\n   *   console.log(res); // [1, 2, 3]\n   *   console.log(order); // [[1, 'a'], [3, 'b'], [2, 'c']]\n   * });\n   *\n   */\n  function sortBySeries(collection, iterator, callback) {\n    callback = onlyOnce(callback || noop);\n    var size, key, value, keys, iter, item, array, criteria, iterate;\n    var sync = false;\n    var completed = 0;\n\n    if (isArray(collection)) {\n      size = collection.length;\n      array = collection;\n      criteria = Array(size);\n      iterate = iterator.length === 3 ? arrayIteratorWithIndex : arrayIterator;\n    } else if (!collection) {\n    } else if (iteratorSymbol && collection[iteratorSymbol]) {\n      size = Infinity;\n      array = [];\n      criteria = [];\n      iter = collection[iteratorSymbol]();\n      iterate = iterator.length === 3 ? symbolIteratorWithKey : symbolIterator;\n    } else if (typeof collection === obj) {\n      keys = nativeKeys(collection);\n      size = keys.length;\n      array = Array(size);\n      criteria = Array(size);\n      iterate = iterator.length === 3 ? objectIteratorWithKey : objectIterator;\n    }\n    if (!size) {\n      return callback(null, []);\n    }\n    iterate();\n\n    function arrayIterator() {\n      value = collection[completed];\n      iterator(value, done);\n    }\n\n    function arrayIteratorWithIndex() {\n      value = collection[completed];\n      iterator(value, completed, done);\n    }\n\n    function symbolIterator() {\n      item = iter.next();\n      if (item.done) {\n        return callback(null, sortByCriteria(array, criteria));\n      }\n      value = item.value;\n      array[completed] = value;\n      iterator(value, done);\n    }\n\n    function symbolIteratorWithKey() {\n      item = iter.next();\n      if (item.done) {\n        return callback(null, sortByCriteria(array, criteria));\n      }\n      value = item.value;\n      array[completed] = value;\n      iterator(value, completed, done);\n    }\n\n    function objectIterator() {\n      value = collection[keys[completed]];\n      array[completed] = value;\n      iterator(value, done);\n    }\n\n    function objectIteratorWithKey() {\n      key = keys[completed];\n      value = collection[key];\n      array[completed] = value;\n      iterator(value, key, done);\n    }\n\n    function done(err, criterion) {\n      criteria[completed] = criterion;\n      if (err) {\n        callback(err);\n      } else if (++completed === size) {\n        iterate = throwError;\n        callback(null, sortByCriteria(array, criteria));\n      } else if (sync) {\n        nextTick(iterate);\n      } else {\n        sync = true;\n        iterate();\n      }\n      sync = false;\n    }\n  }\n\n  /**\n   * @memberof async\n   * @namespace sortByLimit\n   * @param {Array|Object} collection\n   * @param {number} limit - limit >= 1\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 5, 3, 4, 2];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.sortByLimit(array, 2, iterator, function(err, res) {\n   *   console.log(res); // [1, 2, 3, 4, 5]\n   *   console.log(order); // [1, 3, 5, 2, 4]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1, 5, 3, 4, 2];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.sortByLimit(array, 2, iterator, function(err, res) {\n   *   console.log(res); // [1, 2, 3, 4, 5]\n   *   console.log(order); // [[1, 0], [3, 2], [5, 1], [2, 4], [4, 3]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 5, c: 3, d: 4, e: 2 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.sortByLimit(object, 2, iterator, function(err, res) {\n   *   console.log(res); // [1, 2, 3, 4, 5]\n   *   console.log(order); // [1, 3, 5, 2, 4]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 5, c: 3, d: 4, e: 2 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.sortByLimit(object, 2, iterator, function(err, res) {\n   *   console.log(res); // [1, 2, 3, 4, 5]\n   *   console.log(order); // [[1, 'a'], [3, 'c'], [5, 'b'], [2, 'e'], [4, 'd']]\n   * });\n   *\n   */\n  function sortByLimit(collection, limit, iterator, callback) {\n    callback = callback || noop;\n    var size, index, key, value, array, keys, iter, item, criteria, iterate;\n    var sync = false;\n    var started = 0;\n    var completed = 0;\n\n    if (isArray(collection)) {\n      size = collection.length;\n      array = collection;\n      iterate = iterator.length === 3 ? arrayIteratorWithIndex : arrayIterator;\n    } else if (!collection) {\n    } else if (iteratorSymbol && collection[iteratorSymbol]) {\n      size = Infinity;\n      iter = collection[iteratorSymbol]();\n      array = [];\n      criteria = [];\n      iterate = iterator.length === 3 ? symbolIteratorWithKey : symbolIterator;\n    } else if (typeof collection === obj) {\n      keys = nativeKeys(collection);\n      size = keys.length;\n      array = Array(size);\n      iterate = iterator.length === 3 ? objectIteratorWithKey : objectIterator;\n    }\n    if (!size || isNaN(limit) || limit < 1) {\n      return callback(null, []);\n    }\n    criteria = criteria || Array(size);\n    timesSync(limit > size ? size : limit, iterate);\n\n    function arrayIterator() {\n      if (started < size) {\n        value = collection[started];\n        iterator(value, createCallback(value, started++));\n      }\n    }\n\n    function arrayIteratorWithIndex() {\n      index = started++;\n      if (index < size) {\n        value = collection[index];\n        iterator(value, index, createCallback(value, index));\n      }\n    }\n\n    function symbolIterator() {\n      item = iter.next();\n      if (item.done === false) {\n        value = item.value;\n        array[started] = value;\n        iterator(value, createCallback(value, started++));\n      } else if (completed === started && iterator !== noop) {\n        iterator = noop;\n        callback(null, sortByCriteria(array, criteria));\n      }\n    }\n\n    function symbolIteratorWithKey() {\n      item = iter.next();\n      if (item.done === false) {\n        value = item.value;\n        array[started] = value;\n        iterator(value, started, createCallback(value, started++));\n      } else if (completed === started && iterator !== noop) {\n        iterator = noop;\n        callback(null, sortByCriteria(array, criteria));\n      }\n    }\n\n    function objectIterator() {\n      if (started < size) {\n        value = collection[keys[started]];\n        array[started] = value;\n        iterator(value, createCallback(value, started++));\n      }\n    }\n\n    function objectIteratorWithKey() {\n      if (started < size) {\n        key = keys[started];\n        value = collection[key];\n        array[started] = value;\n        iterator(value, key, createCallback(value, started++));\n      }\n    }\n\n    function createCallback(value, index) {\n      var called = false;\n      return function(err, criterion) {\n        if (called) {\n          throwError();\n        }\n        called = true;\n        criteria[index] = criterion;\n        if (err) {\n          iterate = noop;\n          callback(err);\n          callback = noop;\n        } else if (++completed === size) {\n          callback(null, sortByCriteria(array, criteria));\n        } else if (sync) {\n          nextTick(iterate);\n        } else {\n          sync = true;\n          iterate();\n        }\n        sync = false;\n      };\n    }\n  }\n\n  /**\n   * @memberof async\n   * @namespace some\n   * @param {Array|Object} collection\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.some(array, iterator, function(err, res) {\n   *   console.log(res); // true\n   *   console.log(order); // [1]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.some(array, iterator, function(err, res) {\n   *   console.log(res); // true\n   *   console.log(order); // [[1, 0]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.some(object, iterator, function(err, res) {\n   *   console.log(res); // true\n   *   console.log(order); // [1]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.some(object, iterator, function(err, res) {\n   *   console.log(res); // true\n   *   console.log(order); // [[1, 'a']]\n   * });\n   *\n   */\n  function some(collection, iterator, callback) {\n    callback = callback || noop;\n    detect(collection, iterator, done);\n\n    function done(err, res) {\n      if (err) {\n        return callback(err);\n      }\n      callback(null, !!res);\n    }\n  }\n\n  /**\n   * @memberof async\n   * @namespace someSeries\n   * @param {Array|Object} collection\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.someSeries(array, iterator, function(err, res) {\n   *   console.log(res); // true\n   *   console.log(order); // [1]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.someSeries(array, iterator, function(err, res) {\n   *   console.log(res); // true\n   *   console.log(order); // [[1, 0]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.someSeries(object, iterator, function(err, res) {\n   *   console.log(res); // true\n   *   console.log(order); // [1]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.someSeries(object, iterator, function(err, res) {\n   *   console.log(res); // true\n   *   console.log(order); // [[1, 'a']]\n   * });\n   *\n   */\n  function someSeries(collection, iterator, callback) {\n    callback = callback || noop;\n    detectSeries(collection, iterator, done);\n\n    function done(err, res) {\n      if (err) {\n        return callback(err);\n      }\n      callback(null, !!res);\n    }\n  }\n\n  /**\n   * @memberof async\n   * @namespace someLimit\n   * @param {Array|Object} collection\n   * @param {number} limit - limit >= 1\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 5, 3, 4, 2];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.someLimit(array, 2, iterator, function(err, res) {\n   *   console.log(res); // true\n   *   console.log(order); // [1]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1, 5, 3, 4, 2];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.someLimit(array, 2, iterator, function(err, res) {\n   *   console.log(res); // true\n   *   console.log(order); // [[1, 0]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 5, c: 3, d: 4, e: 2 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.someLimit(object, 2, iterator, function(err, res) {\n   *   console.log(res); // true\n   *   console.log(order); // [1]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 5, c: 3, d: 4, e: 2 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, num % 2);\n   *   }, num * 10);\n   * };\n   * async.someLimit(object, 2, iterator, function(err, res) {\n   *   console.log(res); // true\n   *   console.log(order); // [[1, 'a']]\n   * });\n   *\n   */\n  function someLimit(collection, limit, iterator, callback) {\n    callback = callback || noop;\n    detectLimit(collection, limit, iterator, done);\n\n    function done(err, res) {\n      if (err) {\n        return callback(err);\n      }\n      callback(null, !!res);\n    }\n  }\n\n  /**\n   * @private\n   * @param {Function} arrayEach\n   * @param {Function} baseEach\n   * @param {Function} symbolEach\n   */\n  function createEvery(arrayEach, baseEach, symbolEach) {\n    var deny = createDetect(arrayEach, baseEach, symbolEach, false);\n\n    return function every(collection, iterator, callback) {\n      callback = callback || noop;\n      deny(collection, iterator, done);\n\n      function done(err, res) {\n        if (err) {\n          return callback(err);\n        }\n        callback(null, !res);\n      }\n    };\n  }\n\n  /**\n   * @private\n   */\n  function createEverySeries() {\n    var denySeries = createDetectSeries(false);\n\n    return function everySeries(collection, iterator, callback) {\n      callback = callback || noop;\n      denySeries(collection, iterator, done);\n\n      function done(err, res) {\n        if (err) {\n          return callback(err);\n        }\n        callback(null, !res);\n      }\n    };\n  }\n\n  /**\n   * @private\n   */\n  function createEveryLimit() {\n    var denyLimit = createDetectLimit(false);\n\n    return function everyLimit(collection, limit, iterator, callback) {\n      callback = callback || noop;\n      denyLimit(collection, limit, iterator, done);\n\n      function done(err, res) {\n        if (err) {\n          return callback(err);\n        }\n        callback(null, !res);\n      }\n    };\n  }\n\n  /**\n   * @private\n   * @param {Function} arrayEach\n   * @param {Function} baseEach\n   * @param {Function} symbolEach\n   */\n  function createConcat(arrayEach, baseEach, symbolEach) {\n    return function concat(collection, iterator, callback) {\n      callback = callback || noop;\n      var size, result;\n      var completed = 0;\n\n      if (isArray(collection)) {\n        size = collection.length;\n        result = Array(size);\n        arrayEach(collection, iterator, createCallback);\n      } else if (!collection) {\n      } else if (iteratorSymbol && collection[iteratorSymbol]) {\n        result = [];\n        size = symbolEach(collection, iterator, createCallback);\n        size && size === completed && callback(null, result);\n      } else if (typeof collection === obj) {\n        var keys = nativeKeys(collection);\n        size = keys.length;\n        result = Array(size);\n        baseEach(collection, iterator, createCallback, keys);\n      }\n      if (!size) {\n        callback(null, []);\n      }\n\n      function createCallback(index) {\n        return function done(err, res) {\n          if (index === null) {\n            throwError();\n          }\n          if (err) {\n            index = null;\n            callback = once(callback);\n            arrayEachSync(result, function(array, index) {\n              if (array === undefined) {\n                result[index] = noop;\n              }\n            });\n            callback(err, makeConcatResult(result));\n            return;\n          }\n          switch (arguments.length) {\n            case 0:\n            case 1:\n              result[index] = noop;\n              break;\n            case 2:\n              result[index] = res;\n              break;\n            default:\n              result[index] = slice(arguments, 1);\n              break;\n          }\n          index = null;\n          if (++completed === size) {\n            callback(null, makeConcatResult(result));\n          }\n        };\n      }\n    };\n  }\n\n  /**\n   * @memberof async\n   * @namespace concatSeries\n   * @param {Array|Object} collection\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, [num]);\n   *   }, num * 10);\n   * };\n   * async.concatSeries(array, iterator, function(err, res) {\n   *   console.log(res); // [1, 3, 2];\n   *   console.log(order); // [1, 3, 2]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1, 3, 2];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, [num]);\n   *   }, num * 10);\n   * };\n   * async.concatSeries(array, iterator, function(err, res) {\n   *   console.log(res); // [1, 3, 2]\n   *   console.log(order); // [[1, 0], [3, 1], [2, 2]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, [num]);\n   *   }, num * 10);\n   * };\n   * async.concatSeries(object, iterator, function(err, res) {\n   *   console.log(res); // [1, 3, 2]\n   *   console.log(order); // [1, 3, 2]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 3, c: 2 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, [num]);\n   *   }, num * 10);\n   * };\n   * async.concatSeries(object, iterator, function(err, res) {\n   *   console.log(res); // [1, 3, 2]\n   *   console.log(order); // [[1, 'a'], [3, 'b'], [2, 'c']]\n   * });\n   *\n   */\n  function concatSeries(collection, iterator, callback) {\n    callback = onlyOnce(callback || noop);\n    var size, key, keys, iter, item, iterate;\n    var sync = false;\n    var result = [];\n    var completed = 0;\n\n    if (isArray(collection)) {\n      size = collection.length;\n      iterate = iterator.length === 3 ? arrayIteratorWithIndex : arrayIterator;\n    } else if (!collection) {\n    } else if (iteratorSymbol && collection[iteratorSymbol]) {\n      size = Infinity;\n      iter = collection[iteratorSymbol]();\n      iterate = iterator.length === 3 ? symbolIteratorWithKey : symbolIterator;\n    } else if (typeof collection === obj) {\n      keys = nativeKeys(collection);\n      size = keys.length;\n      iterate = iterator.length === 3 ? objectIteratorWithKey : objectIterator;\n    }\n    if (!size) {\n      return callback(null, result);\n    }\n    iterate();\n\n    function arrayIterator() {\n      iterator(collection[completed], done);\n    }\n\n    function arrayIteratorWithIndex() {\n      iterator(collection[completed], completed, done);\n    }\n\n    function symbolIterator() {\n      item = iter.next();\n      item.done ? callback(null, result) : iterator(item.value, done);\n    }\n\n    function symbolIteratorWithKey() {\n      item = iter.next();\n      item.done ? callback(null, result) : iterator(item.value, completed, done);\n    }\n\n    function objectIterator() {\n      iterator(collection[keys[completed]], done);\n    }\n\n    function objectIteratorWithKey() {\n      key = keys[completed];\n      iterator(collection[key], key, done);\n    }\n\n    function done(err, array) {\n      if (isArray(array)) {\n        nativePush.apply(result, array);\n      } else if (arguments.length >= 2) {\n        nativePush.apply(result, slice(arguments, 1));\n      }\n      if (err) {\n        callback(err, result);\n      } else if (++completed === size) {\n        iterate = throwError;\n        callback(null, result);\n      } else if (sync) {\n        nextTick(iterate);\n      } else {\n        sync = true;\n        iterate();\n      }\n      sync = false;\n    }\n  }\n\n  /**\n   * @memberof async\n   * @namespace concatLimit\n   * @param {Array|Object} collection\n   * @param {number} limit - limit >= 1\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1, 5, 3, 4, 2];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, [num]);\n   *   }, num * 10);\n   * };\n   * async.concatLimit(array, 2, iterator, function(err, res) {\n   *   console.log(res); // [1, 3, 5, 2, 4]\n   *   console.log(order); // [1, 3, 5, 2, 4]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1, 5, 3, 4, 2];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, [num]);\n   *   }, num * 10);\n   * };\n   * async.cocnatLimit(array, 2, iterator, function(err, res) {\n   *   console.log(res); // [1, 3, 5, 2, 4]\n   *   console.log(order); // [[1, 0], [3, 2], [5, 1], [2, 4], [4, 3]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1, b: 5, c: 3, d: 4, e: 2 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, [num]);\n   *   }, num * 10);\n   * };\n   * async.concatLimit(object, 2, iterator, function(err, res) {\n   *   console.log(res); // [1, 3, 5, 2, 4]\n   *   console.log(order); // [1, 3, 5, 2, 4]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1, b: 5, c: 3, d: 4, e: 2 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, num);\n   *   }, num * 10);\n   * };\n   * async.cocnatLimit(object, 2, iterator, function(err, res) {\n   *   console.log(res); // [1, 3, 5, 2, 4]\n   *   console.log(order); // [[1, 'a'], [3, 'c'], [5, 'b'], [2, 'e'], [4, 'd']]\n   * });\n   *\n   */\n  function concatLimit(collection, limit, iterator, callback) {\n    callback = callback || noop;\n    var size, key, iter, item, iterate, result;\n    var sync = false;\n    var started = 0;\n    var completed = 0;\n\n    if (isArray(collection)) {\n      size = collection.length;\n      iterate = iterator.length === 3 ? arrayIteratorWithIndex : arrayIterator;\n    } else if (!collection) {\n    } else if (iteratorSymbol && collection[iteratorSymbol]) {\n      size = Infinity;\n      result = [];\n      iter = collection[iteratorSymbol]();\n      iterate = iterator.length === 3 ? symbolIteratorWithKey : symbolIterator;\n    } else if (typeof collection === obj) {\n      var keys = nativeKeys(collection);\n      size = keys.length;\n      iterate = iterator.length === 3 ? objectIteratorWithKey : objectIterator;\n    }\n    if (!size || isNaN(limit) || limit < 1) {\n      return callback(null, []);\n    }\n    result = result || Array(size);\n    timesSync(limit > size ? size : limit, iterate);\n\n    function arrayIterator() {\n      if (started < size) {\n        iterator(collection[started], createCallback(started++));\n      }\n    }\n\n    function arrayIteratorWithIndex() {\n      if (started < size) {\n        iterator(collection[started], started, createCallback(started++));\n      }\n    }\n\n    function symbolIterator() {\n      item = iter.next();\n      if (item.done === false) {\n        iterator(item.value, createCallback(started++));\n      } else if (completed === started && iterator !== noop) {\n        iterator = noop;\n        callback(null, makeConcatResult(result));\n      }\n    }\n\n    function symbolIteratorWithKey() {\n      item = iter.next();\n      if (item.done === false) {\n        iterator(item.value, started, createCallback(started++));\n      } else if (completed === started && iterator !== noop) {\n        iterator = noop;\n        callback(null, makeConcatResult(result));\n      }\n    }\n\n    function objectIterator() {\n      if (started < size) {\n        iterator(collection[keys[started]], createCallback(started++));\n      }\n    }\n\n    function objectIteratorWithKey() {\n      if (started < size) {\n        key = keys[started];\n        iterator(collection[key], key, createCallback(started++));\n      }\n    }\n\n    function createCallback(index) {\n      return function(err, res) {\n        if (index === null) {\n          throwError();\n        }\n        if (err) {\n          index = null;\n          iterate = noop;\n          callback = once(callback);\n          arrayEachSync(result, function(array, index) {\n            if (array === undefined) {\n              result[index] = noop;\n            }\n          });\n          callback(err, makeConcatResult(result));\n          return;\n        }\n        switch (arguments.length) {\n          case 0:\n          case 1:\n            result[index] = noop;\n            break;\n          case 2:\n            result[index] = res;\n            break;\n          default:\n            result[index] = slice(arguments, 1);\n            break;\n        }\n        index = null;\n        if (++completed === size) {\n          iterate = throwError;\n          callback(null, makeConcatResult(result));\n          callback = throwError;\n        } else if (sync) {\n          nextTick(iterate);\n        } else {\n          sync = true;\n          iterate();\n        }\n        sync = false;\n      };\n    }\n  }\n\n  /**\n   * @private\n   * @param {Function} arrayEach\n   * @param {Function} baseEach\n   * @param {Function} symbolEach\n   */\n  function createGroupBy(arrayEach, baseEach, symbolEach) {\n    return function groupBy(collection, iterator, callback) {\n      callback = callback || noop;\n      var size;\n      var completed = 0;\n      var result = {};\n\n      if (isArray(collection)) {\n        size = collection.length;\n        arrayEach(collection, iterator, createCallback);\n      } else if (!collection) {\n      } else if (iteratorSymbol && collection[iteratorSymbol]) {\n        size = symbolEach(collection, iterator, createCallback);\n        size && size === completed && callback(null, result);\n      } else if (typeof collection === obj) {\n        var keys = nativeKeys(collection);\n        size = keys.length;\n        baseEach(collection, iterator, createCallback, keys);\n      }\n      if (!size) {\n        callback(null, {});\n      }\n\n      function createCallback(value) {\n        var called = false;\n        return function done(err, key) {\n          if (called) {\n            throwError();\n          }\n          called = true;\n          if (err) {\n            callback = once(callback);\n            callback(err, objectClone(result));\n            return;\n          }\n          var array = result[key];\n          if (!array) {\n            result[key] = [value];\n          } else {\n            array.push(value);\n          }\n          if (++completed === size) {\n            callback(null, result);\n          }\n        };\n      }\n    };\n  }\n\n  /**\n   * @memberof async\n   * @namespace groupBySeries\n   * @param {Array|Object} collection\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [4.2, 6.4, 6.1];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, Math.floor(num));\n   *   }, num * 10);\n   * };\n   * async.groupBySeries(array, iterator, function(err, res) {\n   *   console.log(res); // { '4': [4.2], '6': [6.4, 6.1] }\n   *   console.log(order); // [4.2, 6.4, 6.1]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [4.2, 6.4, 6.1];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, Math.floor(num));\n   *   }, num * 10);\n   * };\n   * async.groupBySeries(array, iterator, function(err, res) {\n   *   console.log(res); // { '4': [4.2], '6': [6.4, 6.1] }\n   *   console.log(order); // [[4.2, 0], [6.4, 1], [6.1, 2]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 4.2, b: 6.4, c: 6.1 };\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, Math.floor(num));\n   *   }, num * 10);\n   * };\n   * async.groupBySeries(object, iterator, function(err, res) {\n   *   console.log(res); // { '4': [4.2], '6': [6.4, 6.1] }\n   *   console.log(order); // [4.2, 6.4, 6.1]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 4.2, b: 6.4, c: 6.1 };\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, Math.floor(num));\n   *   }, num * 10);\n   * };\n   * async.groupBySeries(object, iterator, function(err, res) {\n   *   console.log(res); // { '4': [4.2], '6': [6.4, 6.1] }\n   *   console.log(order); // [[4.2, 'a'], [6.4, 'b'], [6.1, 'c']]\n   * });\n   *\n   */\n  function groupBySeries(collection, iterator, callback) {\n    callback = onlyOnce(callback || noop);\n    var size, key, value, keys, iter, item, iterate;\n    var sync = false;\n    var completed = 0;\n    var result = {};\n\n    if (isArray(collection)) {\n      size = collection.length;\n      iterate = iterator.length === 3 ? arrayIteratorWithIndex : arrayIterator;\n    } else if (!collection) {\n    } else if (iteratorSymbol && collection[iteratorSymbol]) {\n      size = Infinity;\n      iter = collection[iteratorSymbol]();\n      iterate = iterator.length === 3 ? symbolIteratorWithKey : symbolIterator;\n    } else if (typeof collection === obj) {\n      keys = nativeKeys(collection);\n      size = keys.length;\n      iterate = iterator.length === 3 ? objectIteratorWithKey : objectIterator;\n    }\n    if (!size) {\n      return callback(null, result);\n    }\n    iterate();\n\n    function arrayIterator() {\n      value = collection[completed];\n      iterator(value, done);\n    }\n\n    function arrayIteratorWithIndex() {\n      value = collection[completed];\n      iterator(value, completed, done);\n    }\n\n    function symbolIterator() {\n      item = iter.next();\n      value = item.value;\n      item.done ? callback(null, result) : iterator(value, done);\n    }\n\n    function symbolIteratorWithKey() {\n      item = iter.next();\n      value = item.value;\n      item.done ? callback(null, result) : iterator(value, completed, done);\n    }\n\n    function objectIterator() {\n      value = collection[keys[completed]];\n      iterator(value, done);\n    }\n\n    function objectIteratorWithKey() {\n      key = keys[completed];\n      value = collection[key];\n      iterator(value, key, done);\n    }\n\n    function done(err, key) {\n      if (err) {\n        iterate = throwError;\n        callback = onlyOnce(callback);\n        callback(err, objectClone(result));\n        return;\n      }\n      var array = result[key];\n      if (!array) {\n        result[key] = [value];\n      } else {\n        array.push(value);\n      }\n      if (++completed === size) {\n        iterate = throwError;\n        callback(null, result);\n      } else if (sync) {\n        nextTick(iterate);\n      } else {\n        sync = true;\n        iterate();\n      }\n      sync = false;\n    }\n  }\n\n  /**\n   * @memberof async\n   * @namespace groupByLimit\n   * @param {Array|Object} collection\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var order = [];\n   * var array = [1.1, 5.9, 3.2, 3.9, 2.1];\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, Math.floor(num));\n   *   }, num * 10);\n   * };\n   * async.groupByLimit(array, 2, iterator, function(err, res) {\n   *   console.log(res); // { '1': [1.1], '3': [3.2, 3.9], '5': [5.9], '2': [2.1] }\n   *   console.log(order); // [1.1, 3.2, 5.9, 2.1, 3.9]\n   * });\n   *\n   * @example\n   *\n   * // array with index\n   * var order = [];\n   * var array = [1.1, 5.9, 3.2, 3.9, 2.1];\n   * var iterator = function(num, index, done) {\n   *   setTimeout(function() {\n   *     order.push([num, index]);\n   *     done(null, Math.floor(num));\n   *   }, num * 10);\n   * };\n   * async.groupByLimit(array, 2, iterator, function(err, res) {\n   *   console.log(res); // { '1': [1.1], '3': [3.2, 3.9], '5': [5.9], '2': [2.1] }\n   *   console.log(order); // [[1.1, 0], [3.2, 2], [5.9, 1], [2.1, 4], [3.9, 3]]\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var order = [];\n   * var object = { a: 1.1, b: 5.9, c: 3.2, d: 3.9, e: 2.1 }\n   * var iterator = function(num, done) {\n   *   setTimeout(function() {\n   *     order.push(num);\n   *     done(null, Math.floor(num));\n   *   }, num * 10);\n   * };\n   * async.groupByLimit(object, 2, iterator, function(err, res) {\n   *   console.log(res); // { '1': [1.1], '3': [3.2, 3.9], '5': [5.9], '2': [2.1] }\n   *   console.log(order); // [1.1, 3.2, 5.9, 2.1, 3.9]\n   * });\n   *\n   * @example\n   *\n   * // object with key\n   * var order = [];\n   * var object = { a: 1.1, b: 5.9, c: 3.2, d: 3.9, e: 2.1 }\n   * var iterator = function(num, key, done) {\n   *   setTimeout(function() {\n   *     order.push([num, key]);\n   *     done(null, Math.floor(num));\n   *   }, num * 10);\n   * };\n   * async.groupByLimit(object, 2, iterator, function(err, res) {\n   *   console.log(res); // { '1': [1.1], '3': [3.2, 3.9], '5': [5.9], '2': [2.1] }\n   *   console.log(order); // [[1.1, 'a'], [3.2, 'c'], [5.9, 'b'], [2.1, 'e'], [3.9, 'd']]\n   * });\n   *\n   */\n  function groupByLimit(collection, limit, iterator, callback) {\n    callback = callback || noop;\n    var size, index, key, value, keys, iter, item, iterate;\n    var sync = false;\n    var started = 0;\n    var completed = 0;\n    var result = {};\n\n    if (isArray(collection)) {\n      size = collection.length;\n      iterate = iterator.length === 3 ? arrayIteratorWithIndex : arrayIterator;\n    } else if (!collection) {\n    } else if (iteratorSymbol && collection[iteratorSymbol]) {\n      size = Infinity;\n      iter = collection[iteratorSymbol]();\n      iterate = iterator.length === 3 ? symbolIteratorWithKey : symbolIterator;\n    } else if (typeof collection === obj) {\n      keys = nativeKeys(collection);\n      size = keys.length;\n      iterate = iterator.length === 3 ? objectIteratorWithKey : objectIterator;\n    }\n    if (!size || isNaN(limit) || limit < 1) {\n      return callback(null, result);\n    }\n    timesSync(limit > size ? size : limit, iterate);\n\n    function arrayIterator() {\n      if (started < size) {\n        value = collection[started++];\n        iterator(value, createCallback(value));\n      }\n    }\n\n    function arrayIteratorWithIndex() {\n      index = started++;\n      if (index < size) {\n        value = collection[index];\n        iterator(value, index, createCallback(value));\n      }\n    }\n\n    function symbolIterator() {\n      item = iter.next();\n      if (item.done === false) {\n        started++;\n        value = item.value;\n        iterator(value, createCallback(value));\n      } else if (completed === started && iterator !== noop) {\n        iterator = noop;\n        callback(null, result);\n      }\n    }\n\n    function symbolIteratorWithKey() {\n      item = iter.next();\n      if (item.done === false) {\n        value = item.value;\n        iterator(value, started++, createCallback(value));\n      } else if (completed === started && iterator !== noop) {\n        iterator = noop;\n        callback(null, result);\n      }\n    }\n\n    function objectIterator() {\n      if (started < size) {\n        value = collection[keys[started++]];\n        iterator(value, createCallback(value));\n      }\n    }\n\n    function objectIteratorWithKey() {\n      if (started < size) {\n        key = keys[started++];\n        value = collection[key];\n        iterator(value, key, createCallback(value));\n      }\n    }\n\n    function createCallback(value) {\n      var called = false;\n      return function(err, key) {\n        if (called) {\n          throwError();\n        }\n        called = true;\n        if (err) {\n          iterate = noop;\n          callback = once(callback);\n          callback(err, objectClone(result));\n          return;\n        }\n        var array = result[key];\n        if (!array) {\n          result[key] = [value];\n        } else {\n          array.push(value);\n        }\n        if (++completed === size) {\n          callback(null, result);\n        } else if (sync) {\n          nextTick(iterate);\n        } else {\n          sync = true;\n          iterate();\n        }\n        sync = false;\n      };\n    }\n  }\n\n  /**\n   * @private\n   * @param {Function} arrayEach\n   * @param {Function} baseEach\n   */\n  function createParallel(arrayEach, baseEach) {\n    return function parallel(tasks, callback) {\n      callback = callback || noop;\n      var size, keys, result;\n      var completed = 0;\n\n      if (isArray(tasks)) {\n        size = tasks.length;\n        result = Array(size);\n        arrayEach(tasks, createCallback);\n      } else if (tasks && typeof tasks === obj) {\n        keys = nativeKeys(tasks);\n        size = keys.length;\n        result = {};\n        baseEach(tasks, createCallback, keys);\n      }\n      if (!size) {\n        callback(null, result);\n      }\n\n      function createCallback(key) {\n        return function(err, res) {\n          if (key === null) {\n            throwError();\n          }\n          if (err) {\n            key = null;\n            callback = once(callback);\n            callback(err, result);\n            return;\n          }\n          result[key] = arguments.length <= 2 ? res : slice(arguments, 1);\n          key = null;\n          if (++completed === size) {\n            callback(null, result);\n          }\n        };\n      }\n    };\n  }\n\n  /**\n   * @memberof async\n   * @namespace series\n   * @param {Array|Object} tasks - functions\n   * @param {Function} callback\n   * @example\n   *\n   * var order = [];\n   * var tasks = [\n   *  function(done) {\n   *    setTimeout(function() {\n   *      order.push(1);\n   *      done(null, 1);\n   *    }, 10);\n   *  },\n   *  function(done) {\n   *    setTimeout(function() {\n   *      order.push(2);\n   *      done(null, 2);\n   *    }, 30);\n   *  },\n   *  function(done) {\n   *    setTimeout(function() {\n   *      order.push(3);\n   *      done(null, 3);\n   *    }, 40);\n   *  },\n   *  function(done) {\n   *    setTimeout(function() {\n   *      order.push(4);\n   *      done(null, 4);\n   *    }, 20);\n   *  }\n   * ];\n   * async.series(tasks, function(err, res) {\n   *   console.log(res); // [1, 2, 3, 4];\n   *   console.log(order); // [1, 2, 3, 4]\n   * });\n   *\n   * @example\n   *\n   * var order = [];\n   * var tasks = {\n   *   'a': function(done) {\n   *     setTimeout(function() {\n   *       order.push(1);\n   *       done(null, 1);\n   *     }, 10);\n   *   },\n   *   'b': function(done) {\n   *     setTimeout(function() {\n   *       order.push(2);\n   *       done(null, 2);\n   *     }, 30);\n   *   },\n   *   'c': function(done) {\n   *     setTimeout(function() {\n   *       order.push(3);\n   *       done(null, 3);\n   *     }, 40);\n   *   },\n   *   'd': function(done) {\n   *     setTimeout(function() {\n   *       order.push(4);\n   *       done(null, 4);\n   *     }, 20);\n   *   }\n   * };\n   * async.series(tasks, function(err, res) {\n   *   console.log(res); // { a: 1, b: 2, c: 3, d:4 }\n   *   console.log(order); // [1, 4, 2, 3]\n   * });\n   *\n   */\n  function series(tasks, callback) {\n    callback = callback || noop;\n    var size, key, keys, result, iterate;\n    var sync = false;\n    var completed = 0;\n\n    if (isArray(tasks)) {\n      size = tasks.length;\n      result = Array(size);\n      iterate = arrayIterator;\n    } else if (tasks && typeof tasks === obj) {\n      keys = nativeKeys(tasks);\n      size = keys.length;\n      result = {};\n      iterate = objectIterator;\n    } else {\n      return callback(null);\n    }\n    if (!size) {\n      return callback(null, result);\n    }\n    iterate();\n\n    function arrayIterator() {\n      key = completed;\n      tasks[completed](done);\n    }\n\n    function objectIterator() {\n      key = keys[completed];\n      tasks[key](done);\n    }\n\n    function done(err, res) {\n      if (err) {\n        iterate = throwError;\n        callback = onlyOnce(callback);\n        callback(err, result);\n        return;\n      }\n      result[key] = arguments.length <= 2 ? res : slice(arguments, 1);\n      if (++completed === size) {\n        iterate = throwError;\n        callback(null, result);\n      } else if (sync) {\n        nextTick(iterate);\n      } else {\n        sync = true;\n        iterate();\n      }\n      sync = false;\n    }\n  }\n\n  /**\n   * @memberof async\n   * @namespace parallelLimit\n   * @param {Array|Object} tasks - functions\n   * @param {number} limit - limit >= 1\n   * @param {Function} callback\n   * @example\n   *\n   * var order = [];\n   * var tasks = [\n   *  function(done) {\n   *    setTimeout(function() {\n   *      order.push(1);\n   *      done(null, 1);\n   *    }, 10);\n   *  },\n   *  function(done) {\n   *    setTimeout(function() {\n   *      order.push(2);\n   *      done(null, 2);\n   *    }, 50);\n   *  },\n   *  function(done) {\n   *    setTimeout(function() {\n   *      order.push(3);\n   *      done(null, 3);\n   *    }, 30);\n   *  },\n   *  function(done) {\n   *    setTimeout(function() {\n   *      order.push(4);\n   *      done(null, 4);\n   *    }, 40);\n   *  }\n   * ];\n   * async.parallelLimit(tasks, 2, function(err, res) {\n   *   console.log(res); // [1, 2, 3, 4];\n   *   console.log(order); // [1, 3, 2, 4]\n   * });\n   *\n   * @example\n   *\n   * var order = [];\n   * var tasks = {\n   *   'a': function(done) {\n   *     setTimeout(function() {\n   *       order.push(1);\n   *       done(null, 1);\n   *     }, 10);\n   *   },\n   *   'b': function(done) {\n   *     setTimeout(function() {\n   *       order.push(2);\n   *       done(null, 2);\n   *     }, 50);\n   *   },\n   *   'c': function(done) {\n   *     setTimeout(function() {\n   *       order.push(3);\n   *       done(null, 3);\n   *     }, 20);\n   *   },\n   *   'd': function(done) {\n   *     setTimeout(function() {\n   *       order.push(4);\n   *       done(null, 4);\n   *     }, 40);\n   *   }\n   * };\n   * async.parallelLimit(tasks, 2, function(err, res) {\n   *   console.log(res); // { a: 1, b: 2, c: 3, d:4 }\n   *   console.log(order); // [1, 3, 2, 4]\n   * });\n   *\n   */\n  function parallelLimit(tasks, limit, callback) {\n    callback = callback || noop;\n    var size, index, key, keys, result, iterate;\n    var sync = false;\n    var started = 0;\n    var completed = 0;\n\n    if (isArray(tasks)) {\n      size = tasks.length;\n      result = Array(size);\n      iterate = arrayIterator;\n    } else if (tasks && typeof tasks === obj) {\n      keys = nativeKeys(tasks);\n      size = keys.length;\n      result = {};\n      iterate = objectIterator;\n    }\n    if (!size || isNaN(limit) || limit < 1) {\n      return callback(null, result);\n    }\n    timesSync(limit > size ? size : limit, iterate);\n\n    function arrayIterator() {\n      index = started++;\n      if (index < size) {\n        tasks[index](createCallback(index));\n      }\n    }\n\n    function objectIterator() {\n      if (started < size) {\n        key = keys[started++];\n        tasks[key](createCallback(key));\n      }\n    }\n\n    function createCallback(key) {\n      return function(err, res) {\n        if (key === null) {\n          throwError();\n        }\n        if (err) {\n          key = null;\n          iterate = noop;\n          callback = once(callback);\n          callback(err, result);\n          return;\n        }\n        result[key] = arguments.length <= 2 ? res : slice(arguments, 1);\n        key = null;\n        if (++completed === size) {\n          callback(null, result);\n        } else if (sync) {\n          nextTick(iterate);\n        } else {\n          sync = true;\n          iterate();\n        }\n        sync = false;\n      };\n    }\n  }\n\n  /**\n   * @memberof async\n   * @namespace tryEach\n   * @param {Array|Object} tasks - functions\n   * @param {Function} callback\n   * @example\n   *\n   * var tasks = [\n   *  function(done) {\n   *    setTimeout(function() {\n   *      done(new Error('error'));\n   *    }, 10);\n   *  },\n   *  function(done) {\n   *    setTimeout(function() {\n   *      done(null, 2);\n   *    }, 10);\n   *  }\n   * ];\n   * async.tryEach(tasks, function(err, res) {\n   *   console.log(res); // 2\n   * });\n   *\n   * @example\n   *\n   * var tasks = [\n   *  function(done) {\n   *    setTimeout(function() {\n   *      done(new Error('error1'));\n   *    }, 10);\n   *  },\n   *  function(done) {\n   *    setTimeout(function() {\n   *      done(new Error('error2');\n   *    }, 10);\n   *  }\n   * ];\n   * async.tryEach(tasks, function(err, res) {\n   *   console.log(err); // error2\n   *   console.log(res); // undefined\n   * });\n   *\n   */\n  function tryEach(tasks, callback) {\n    callback = callback || noop;\n    var size, keys, iterate;\n    var sync = false;\n    var completed = 0;\n\n    if (isArray(tasks)) {\n      size = tasks.length;\n      iterate = arrayIterator;\n    } else if (tasks && typeof tasks === obj) {\n      keys = nativeKeys(tasks);\n      size = keys.length;\n      iterate = objectIterator;\n    }\n    if (!size) {\n      return callback(null);\n    }\n    iterate();\n\n    function arrayIterator() {\n      tasks[completed](done);\n    }\n\n    function objectIterator() {\n      tasks[keys[completed]](done);\n    }\n\n    function done(err, res) {\n      if (!err) {\n        if (arguments.length <= 2) {\n          callback(null, res);\n        } else {\n          callback(null, slice(arguments, 1));\n        }\n      } else if (++completed === size) {\n        callback(err);\n      } else {\n        sync = true;\n        iterate();\n      }\n      sync = false;\n    }\n  }\n\n  /**\n   * check for waterfall tasks\n   * @private\n   * @param {Array} tasks\n   * @param {Function} callback\n   * @return {boolean}\n   */\n  function checkWaterfallTasks(tasks, callback) {\n    if (!isArray(tasks)) {\n      callback(new Error('First argument to waterfall must be an array of functions'));\n      return false;\n    }\n    if (tasks.length === 0) {\n      callback(null);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * check for waterfall tasks\n   * @private\n   * @param {function} func\n   * @param {Array|Object} args - arguments\n   * @return {function} next\n   */\n  function waterfallIterator(func, args, next) {\n    switch (args.length) {\n      case 0:\n      case 1:\n        return func(next);\n      case 2:\n        return func(args[1], next);\n      case 3:\n        return func(args[1], args[2], next);\n      case 4:\n        return func(args[1], args[2], args[3], next);\n      case 5:\n        return func(args[1], args[2], args[3], args[4], next);\n      case 6:\n        return func(args[1], args[2], args[3], args[4], args[5], next);\n      default:\n        args = slice(args, 1);\n        args.push(next);\n        return func.apply(null, args);\n    }\n  }\n\n  /**\n   * @memberof async\n   * @namespace waterfall\n   * @param {Array} tasks - functions\n   * @param {Function} callback\n   * @example\n   *\n   * var order = [];\n   * var tasks = [\n   *   function(next) {\n   *     setTimeout(function() {\n   *       order.push(1);\n   *       next(null, 1);\n   *     }, 10);\n   *   },\n   *   function(arg1, next) {\n   *     setTimeout(function() {\n   *       order.push(2);\n   *       next(null, 1, 2);\n   *     }, 30);\n   *   },\n   *   function(arg1, arg2, next) {\n   *     setTimeout(function() {\n   *       order.push(3);\n   *       next(null, 3);\n   *     }, 20);\n   *   },\n   *   function(arg1, next) {\n   *     setTimeout(function() {\n   *       order.push(4);\n   *       next(null, 1, 2, 3, 4);\n   *     }, 40);\n   *   }\n   * ];\n   * async.waterfall(tasks, function(err, arg1, arg2, arg3, arg4) {\n   *   console.log(arg1, arg2, arg3, arg4); // 1 2 3 4\n   * });\n   *\n   */\n  function waterfall(tasks, callback) {\n    callback = callback || noop;\n    if (!checkWaterfallTasks(tasks, callback)) {\n      return;\n    }\n    var func, args, done, sync;\n    var completed = 0;\n    var size = tasks.length;\n    waterfallIterator(tasks[0], [], createCallback(0));\n\n    function iterate() {\n      waterfallIterator(func, args, createCallback(func));\n    }\n\n    function createCallback(index) {\n      return function next(err, res) {\n        if (index === undefined) {\n          callback = noop;\n          throwError();\n        }\n        index = undefined;\n        if (err) {\n          done = callback;\n          callback = throwError;\n          done(err);\n          return;\n        }\n        if (++completed === size) {\n          done = callback;\n          callback = throwError;\n          if (arguments.length <= 2) {\n            done(err, res);\n          } else {\n            done.apply(null, createArray(arguments));\n          }\n          return;\n        }\n        if (sync) {\n          args = arguments;\n          func = tasks[completed] || throwError;\n          nextTick(iterate);\n        } else {\n          sync = true;\n          waterfallIterator(tasks[completed] || throwError, arguments, createCallback(completed));\n        }\n        sync = false;\n      };\n    }\n  }\n\n  /**\n   * `angelFall` is like `waterfall` and inject callback to last argument of next task.\n   *\n   * @memberof async\n   * @namespace angelFall\n   * @param {Array} tasks - functions\n   * @param {Function} callback\n   * @example\n   *\n   * var order = [];\n   * var tasks = [\n   *   function(next) {\n   *     setTimeout(function() {\n   *       order.push(1);\n   *       next(null, 1);\n   *     }, 10);\n   *   },\n   *   function(arg1, empty, next) {\n   *     setTimeout(function() {\n   *       order.push(2);\n   *       next(null, 1, 2);\n   *     }, 30);\n   *   },\n   *   function(next) {\n   *     setTimeout(function() {\n   *       order.push(3);\n   *       next(null, 3);\n   *     }, 20);\n   *   },\n   *   function(arg1, empty1, empty2, empty3, next) {\n   *     setTimeout(function() {\n   *       order.push(4);\n   *       next(null, 1, 2, 3, 4);\n   *     }, 40);\n   *   }\n   * ];\n   * async.angelFall(tasks, function(err, arg1, arg2, arg3, arg4) {\n   *   console.log(arg1, arg2, arg3, arg4); // 1 2 3 4\n   * });\n   *\n   */\n  function angelFall(tasks, callback) {\n    callback = callback || noop;\n    if (!checkWaterfallTasks(tasks, callback)) {\n      return;\n    }\n    var completed = 0;\n    var sync = false;\n    var size = tasks.length;\n    var func = tasks[completed];\n    var args = [];\n    var iterate = function() {\n      switch (func.length) {\n        case 0:\n          try {\n            next(null, func());\n          } catch (e) {\n            next(e);\n          }\n          return;\n        case 1:\n          return func(next);\n        case 2:\n          return func(args[1], next);\n        case 3:\n          return func(args[1], args[2], next);\n        case 4:\n          return func(args[1], args[2], args[3], next);\n        case 5:\n          return func(args[1], args[2], args[3], args[4], next);\n        default:\n          args = slice(args, 1);\n          args[func.length - 1] = next;\n          return func.apply(null, args);\n      }\n    };\n    iterate();\n\n    function next(err, res) {\n      if (err) {\n        iterate = throwError;\n        callback = onlyOnce(callback);\n        callback(err);\n        return;\n      }\n      if (++completed === size) {\n        iterate = throwError;\n        var done = callback;\n        callback = throwError;\n        if (arguments.length === 2) {\n          done(err, res);\n        } else {\n          done.apply(null, createArray(arguments));\n        }\n        return;\n      }\n      func = tasks[completed];\n      args = arguments;\n      if (sync) {\n        nextTick(iterate);\n      } else {\n        sync = true;\n        iterate();\n      }\n      sync = false;\n    }\n  }\n\n  /**\n   * @memberof async\n   * @namespace whilst\n   * @param {Function} test\n   * @param {Function} iterator\n   * @param {Function} callback\n   */\n  function whilst(test, iterator, callback) {\n    callback = callback || noop;\n    var sync = false;\n    if (test()) {\n      iterate();\n    } else {\n      callback(null);\n    }\n\n    function iterate() {\n      if (sync) {\n        nextTick(next);\n      } else {\n        sync = true;\n        iterator(done);\n      }\n      sync = false;\n    }\n\n    function next() {\n      iterator(done);\n    }\n\n    function done(err, arg) {\n      if (err) {\n        return callback(err);\n      }\n      if (arguments.length <= 2) {\n        if (test(arg)) {\n          iterate();\n        } else {\n          callback(null, arg);\n        }\n        return;\n      }\n      arg = slice(arguments, 1);\n      if (test.apply(null, arg)) {\n        iterate();\n      } else {\n        callback.apply(null, [null].concat(arg));\n      }\n    }\n  }\n\n  /**\n   * @memberof async\n   * @namespace doWhilst\n   * @param {Function} iterator\n   * @param {Function} test\n   * @param {Function} callback\n   */\n  function doWhilst(iterator, test, callback) {\n    callback = callback || noop;\n    var sync = false;\n    next();\n\n    function iterate() {\n      if (sync) {\n        nextTick(next);\n      } else {\n        sync = true;\n        iterator(done);\n      }\n      sync = false;\n    }\n\n    function next() {\n      iterator(done);\n    }\n\n    function done(err, arg) {\n      if (err) {\n        return callback(err);\n      }\n      if (arguments.length <= 2) {\n        if (test(arg)) {\n          iterate();\n        } else {\n          callback(null, arg);\n        }\n        return;\n      }\n      arg = slice(arguments, 1);\n      if (test.apply(null, arg)) {\n        iterate();\n      } else {\n        callback.apply(null, [null].concat(arg));\n      }\n    }\n  }\n\n  /**\n   * @memberof async\n   * @namespace until\n   * @param {Function} test\n   * @param {Function} iterator\n   * @param {Function} callback\n   */\n  function until(test, iterator, callback) {\n    callback = callback || noop;\n    var sync = false;\n    if (!test()) {\n      iterate();\n    } else {\n      callback(null);\n    }\n\n    function iterate() {\n      if (sync) {\n        nextTick(next);\n      } else {\n        sync = true;\n        iterator(done);\n      }\n      sync = false;\n    }\n\n    function next() {\n      iterator(done);\n    }\n\n    function done(err, arg) {\n      if (err) {\n        return callback(err);\n      }\n      if (arguments.length <= 2) {\n        if (!test(arg)) {\n          iterate();\n        } else {\n          callback(null, arg);\n        }\n        return;\n      }\n      arg = slice(arguments, 1);\n      if (!test.apply(null, arg)) {\n        iterate();\n      } else {\n        callback.apply(null, [null].concat(arg));\n      }\n    }\n  }\n\n  /**\n   * @memberof async\n   * @namespace doUntil\n   * @param {Function} iterator\n   * @param {Function} test\n   * @param {Function} callback\n   */\n  function doUntil(iterator, test, callback) {\n    callback = callback || noop;\n    var sync = false;\n    next();\n\n    function iterate() {\n      if (sync) {\n        nextTick(next);\n      } else {\n        sync = true;\n        iterator(done);\n      }\n      sync = false;\n    }\n\n    function next() {\n      iterator(done);\n    }\n\n    function done(err, arg) {\n      if (err) {\n        return callback(err);\n      }\n      if (arguments.length <= 2) {\n        if (!test(arg)) {\n          iterate();\n        } else {\n          callback(null, arg);\n        }\n        return;\n      }\n      arg = slice(arguments, 1);\n      if (!test.apply(null, arg)) {\n        iterate();\n      } else {\n        callback.apply(null, [null].concat(arg));\n      }\n    }\n  }\n\n  /**\n   * @memberof async\n   * @namespace during\n   * @param {Function} test\n   * @param {Function} iterator\n   * @param {Function} callback\n   */\n  function during(test, iterator, callback) {\n    callback = callback || noop;\n    _test();\n\n    function _test() {\n      test(iterate);\n    }\n\n    function iterate(err, truth) {\n      if (err) {\n        return callback(err);\n      }\n      if (truth) {\n        iterator(done);\n      } else {\n        callback(null);\n      }\n    }\n\n    function done(err) {\n      if (err) {\n        return callback(err);\n      }\n      _test();\n    }\n  }\n\n  /**\n   * @memberof async\n   * @namespace doDuring\n   * @param {Function} test\n   * @param {Function} iterator\n   * @param {Function} callback\n   */\n  function doDuring(iterator, test, callback) {\n    callback = callback || noop;\n    iterate(null, true);\n\n    function iterate(err, truth) {\n      if (err) {\n        return callback(err);\n      }\n      if (truth) {\n        iterator(done);\n      } else {\n        callback(null);\n      }\n    }\n\n    function done(err, res) {\n      if (err) {\n        return callback(err);\n      }\n      switch (arguments.length) {\n        case 0:\n        case 1:\n          test(iterate);\n          break;\n        case 2:\n          test(res, iterate);\n          break;\n        default:\n          var args = slice(arguments, 1);\n          args.push(iterate);\n          test.apply(null, args);\n          break;\n      }\n    }\n  }\n\n  /**\n   * @memberof async\n   * @namespace forever\n   */\n  function forever(iterator, callback) {\n    var sync = false;\n    iterate();\n\n    function iterate() {\n      iterator(next);\n    }\n\n    function next(err) {\n      if (err) {\n        if (callback) {\n          return callback(err);\n        }\n        throw err;\n      }\n      if (sync) {\n        nextTick(iterate);\n      } else {\n        sync = true;\n        iterate();\n      }\n      sync = false;\n    }\n  }\n\n  /**\n   * @memberof async\n   * @namespace compose\n   */\n  function compose() {\n    return seq.apply(null, reverse(arguments));\n  }\n\n  /**\n   * @memberof async\n   * @namespace seq\n   */\n  function seq(/* functions... */) {\n    var fns = createArray(arguments);\n\n    return function() {\n      var self = this;\n      var args = createArray(arguments);\n      var callback = args[args.length - 1];\n      if (typeof callback === func) {\n        args.pop();\n      } else {\n        callback = noop;\n      }\n      reduce(fns, args, iterator, done);\n\n      function iterator(newargs, fn, callback) {\n        var func = function(err) {\n          var nextargs = slice(arguments, 1);\n          callback(err, nextargs);\n        };\n        newargs.push(func);\n        fn.apply(self, newargs);\n      }\n\n      function done(err, res) {\n        res = isArray(res) ? res : [res];\n        res.unshift(err);\n        callback.apply(self, res);\n      }\n    };\n  }\n\n  function createApplyEach(func) {\n    return function applyEach(fns /* arguments */) {\n      var go = function() {\n        var self = this;\n        var args = createArray(arguments);\n        var callback = args.pop() || noop;\n        return func(fns, iterator, callback);\n\n        function iterator(fn, done) {\n          fn.apply(self, args.concat([done]));\n        }\n      };\n      if (arguments.length > 1) {\n        var args = slice(arguments, 1);\n        return go.apply(this, args);\n      } else {\n        return go;\n      }\n    };\n  }\n\n  /**\n   * @see https://github.com/caolan/async/blob/master/lib/internal/DoublyLinkedList.js\n   */\n  function DLL() {\n    this.head = null;\n    this.tail = null;\n    this.length = 0;\n  }\n\n  DLL.prototype._removeLink = function(node) {\n    var prev = node.prev;\n    var next = node.next;\n    if (prev) {\n      prev.next = next;\n    } else {\n      this.head = next;\n    }\n    if (next) {\n      next.prev = prev;\n    } else {\n      this.tail = prev;\n    }\n    node.prev = null;\n    node.next = null;\n    this.length--;\n    return node;\n  };\n\n  DLL.prototype.empty = DLL;\n\n  DLL.prototype._setInitial = function(node) {\n    this.length = 1;\n    this.head = this.tail = node;\n  };\n\n  DLL.prototype.insertBefore = function(node, newNode) {\n    newNode.prev = node.prev;\n    newNode.next = node;\n    if (node.prev) {\n      node.prev.next = newNode;\n    } else {\n      this.head = newNode;\n    }\n    node.prev = newNode;\n    this.length++;\n  };\n\n  DLL.prototype.unshift = function(node) {\n    if (this.head) {\n      this.insertBefore(this.head, node);\n    } else {\n      this._setInitial(node);\n    }\n  };\n\n  DLL.prototype.push = function(node) {\n    var tail = this.tail;\n    if (tail) {\n      node.prev = tail;\n      node.next = tail.next;\n      this.tail = node;\n      tail.next = node;\n      this.length++;\n    } else {\n      this._setInitial(node);\n    }\n  };\n\n  DLL.prototype.shift = function() {\n    return this.head && this._removeLink(this.head);\n  };\n\n  DLL.prototype.splice = function(end) {\n    var task;\n    var tasks = [];\n    while (end-- && (task = this.shift())) {\n      tasks.push(task);\n    }\n    return tasks;\n  };\n\n  DLL.prototype.remove = function(test) {\n    var node = this.head;\n    while (node) {\n      if (test(node)) {\n        this._removeLink(node);\n      }\n      node = node.next;\n    }\n    return this;\n  };\n\n  /**\n   * @private\n   */\n  function baseQueue(isQueue, worker, concurrency, payload) {\n    if (concurrency === undefined) {\n      concurrency = 1;\n    } else if (isNaN(concurrency) || concurrency < 1) {\n      throw new Error('Concurrency must not be zero');\n    }\n\n    var workers = 0;\n    var workersList = [];\n    var _callback, _unshift;\n\n    var q = {\n      _tasks: new DLL(),\n      concurrency: concurrency,\n      payload: payload,\n      saturated: noop,\n      unsaturated: noop,\n      buffer: concurrency / 4,\n      empty: noop,\n      drain: noop,\n      error: noop,\n      started: false,\n      paused: false,\n      push: push,\n      kill: kill,\n      unshift: unshift,\n      remove: remove,\n      process: isQueue ? runQueue : runCargo,\n      length: getLength,\n      running: running,\n      workersList: getWorkersList,\n      idle: idle,\n      pause: pause,\n      resume: resume,\n      _worker: worker\n    };\n    return q;\n\n    function push(tasks, callback) {\n      _insert(tasks, callback);\n    }\n\n    function unshift(tasks, callback) {\n      _insert(tasks, callback, true);\n    }\n\n    function _exec(task) {\n      var item = {\n        data: task,\n        callback: _callback\n      };\n      if (_unshift) {\n        q._tasks.unshift(item);\n      } else {\n        q._tasks.push(item);\n      }\n      nextTick(q.process);\n    }\n\n    function _insert(tasks, callback, unshift) {\n      if (callback == null) {\n        callback = noop;\n      } else if (typeof callback !== 'function') {\n        throw new Error('task callback must be a function');\n      }\n      q.started = true;\n      var _tasks = isArray(tasks) ? tasks : [tasks];\n\n      if (tasks === undefined || !_tasks.length) {\n        if (q.idle()) {\n          nextTick(q.drain);\n        }\n        return;\n      }\n\n      _unshift = unshift;\n      _callback = callback;\n      arrayEachSync(_tasks, _exec);\n      // Avoid leaking the callback\n      _callback = undefined;\n    }\n\n    function kill() {\n      q.drain = noop;\n      q._tasks.empty();\n    }\n\n    function _next(q, tasks) {\n      var called = false;\n      return function done(err, res) {\n        if (called) {\n          throwError();\n        }\n        called = true;\n\n        workers--;\n        var task;\n        var index = -1;\n        var size = workersList.length;\n        var taskIndex = -1;\n        var taskSize = tasks.length;\n        var useApply = arguments.length > 2;\n        var args = useApply && createArray(arguments);\n        while (++taskIndex < taskSize) {\n          task = tasks[taskIndex];\n          while (++index < size) {\n            if (workersList[index] === task) {\n              if (index === 0) {\n                workersList.shift();\n              } else {\n                workersList.splice(index, 1);\n              }\n              index = size;\n              size--;\n            }\n          }\n          index = -1;\n          if (useApply) {\n            task.callback.apply(task, args);\n          } else {\n            task.callback(err, res);\n          }\n          if (err) {\n            q.error(err, task.data);\n          }\n        }\n\n        if (workers <= q.concurrency - q.buffer) {\n          q.unsaturated();\n        }\n\n        if (q._tasks.length + workers === 0) {\n          q.drain();\n        }\n        q.process();\n      };\n    }\n\n    function runQueue() {\n      while (!q.paused && workers < q.concurrency && q._tasks.length) {\n        var task = q._tasks.shift();\n        workers++;\n        workersList.push(task);\n        if (q._tasks.length === 0) {\n          q.empty();\n        }\n        if (workers === q.concurrency) {\n          q.saturated();\n        }\n        var done = _next(q, [task]);\n        worker(task.data, done);\n      }\n    }\n\n    function runCargo() {\n      while (!q.paused && workers < q.concurrency && q._tasks.length) {\n        var tasks = q._tasks.splice(q.payload || q._tasks.length);\n        var index = -1;\n        var size = tasks.length;\n        var data = Array(size);\n        while (++index < size) {\n          data[index] = tasks[index].data;\n        }\n        workers++;\n        nativePush.apply(workersList, tasks);\n        if (q._tasks.length === 0) {\n          q.empty();\n        }\n        if (workers === q.concurrency) {\n          q.saturated();\n        }\n        var done = _next(q, tasks);\n        worker(data, done);\n      }\n    }\n\n    function getLength() {\n      return q._tasks.length;\n    }\n\n    function running() {\n      return workers;\n    }\n\n    function getWorkersList() {\n      return workersList;\n    }\n\n    function idle() {\n      return q.length() + workers === 0;\n    }\n\n    function pause() {\n      q.paused = true;\n    }\n\n    function _resume() {\n      nextTick(q.process);\n    }\n\n    function resume() {\n      if (q.paused === false) {\n        return;\n      }\n      q.paused = false;\n      var count = q.concurrency < q._tasks.length ? q.concurrency : q._tasks.length;\n      timesSync(count, _resume);\n    }\n\n    /**\n     * @param {Function} test\n     */\n    function remove(test) {\n      q._tasks.remove(test);\n    }\n  }\n\n  /**\n   * @memberof async\n   * @namespace queue\n   */\n  function queue(worker, concurrency) {\n    return baseQueue(true, worker, concurrency);\n  }\n\n  /**\n   * @memberof async\n   * @namespace priorityQueue\n   */\n  function priorityQueue(worker, concurrency) {\n    var q = baseQueue(true, worker, concurrency);\n    q.push = push;\n    delete q.unshift;\n    return q;\n\n    function push(tasks, priority, callback) {\n      q.started = true;\n      priority = priority || 0;\n      var _tasks = isArray(tasks) ? tasks : [tasks];\n      var taskSize = _tasks.length;\n\n      if (tasks === undefined || taskSize === 0) {\n        if (q.idle()) {\n          nextTick(q.drain);\n        }\n        return;\n      }\n\n      callback = typeof callback === func ? callback : noop;\n      var nextNode = q._tasks.head;\n      while (nextNode && priority >= nextNode.priority) {\n        nextNode = nextNode.next;\n      }\n      while (taskSize--) {\n        var item = {\n          data: _tasks[taskSize],\n          priority: priority,\n          callback: callback\n        };\n        if (nextNode) {\n          q._tasks.insertBefore(nextNode, item);\n        } else {\n          q._tasks.push(item);\n        }\n        nextTick(q.process);\n      }\n    }\n  }\n\n  /**\n   * @memberof async\n   * @namespace cargo\n   */\n  function cargo(worker, payload) {\n    return baseQueue(false, worker, 1, payload);\n  }\n\n  /**\n   * @memberof async\n   * @namespace auto\n   * @param {Object} tasks\n   * @param {number} [concurrency]\n   * @param {Function} [callback]\n   */\n  function auto(tasks, concurrency, callback) {\n    if (typeof concurrency === func) {\n      callback = concurrency;\n      concurrency = null;\n    }\n    var keys = nativeKeys(tasks);\n    var rest = keys.length;\n    var results = {};\n    if (rest === 0) {\n      return callback(null, results);\n    }\n    var runningTasks = 0;\n    var readyTasks = new DLL();\n    var listeners = Object.create(null);\n    callback = onlyOnce(callback || noop);\n    concurrency = concurrency || rest;\n\n    baseEachSync(tasks, iterator, keys);\n    proceedQueue();\n\n    function iterator(task, key) {\n      // no dependencies\n      var _task, _taskSize;\n      if (!isArray(task)) {\n        _task = task;\n        _taskSize = 0;\n        readyTasks.push([_task, _taskSize, done]);\n        return;\n      }\n      var dependencySize = task.length - 1;\n      _task = task[dependencySize];\n      _taskSize = dependencySize;\n      if (dependencySize === 0) {\n        readyTasks.push([_task, _taskSize, done]);\n        return;\n      }\n      // dependencies\n      var index = -1;\n      while (++index < dependencySize) {\n        var dependencyName = task[index];\n        if (notInclude(keys, dependencyName)) {\n          var msg =\n            'async.auto task `' +\n            key +\n            '` has non-existent dependency `' +\n            dependencyName +\n            '` in ' +\n            task.join(', ');\n          throw new Error(msg);\n        }\n        var taskListeners = listeners[dependencyName];\n        if (!taskListeners) {\n          taskListeners = listeners[dependencyName] = [];\n        }\n        taskListeners.push(taskListener);\n      }\n\n      function done(err, arg) {\n        if (key === null) {\n          throwError();\n        }\n        arg = arguments.length <= 2 ? arg : slice(arguments, 1);\n        if (err) {\n          rest = 0;\n          runningTasks = 0;\n          readyTasks.length = 0;\n          var safeResults = objectClone(results);\n          safeResults[key] = arg;\n          key = null;\n          var _callback = callback;\n          callback = noop;\n          _callback(err, safeResults);\n          return;\n        }\n        runningTasks--;\n        rest--;\n        results[key] = arg;\n        taskComplete(key);\n        key = null;\n      }\n\n      function taskListener() {\n        if (--dependencySize === 0) {\n          readyTasks.push([_task, _taskSize, done]);\n        }\n      }\n    }\n\n    function proceedQueue() {\n      if (readyTasks.length === 0 && runningTasks === 0) {\n        if (rest !== 0) {\n          throw new Error('async.auto task has cyclic dependencies');\n        }\n        return callback(null, results);\n      }\n      while (readyTasks.length && runningTasks < concurrency && callback !== noop) {\n        runningTasks++;\n        var array = readyTasks.shift();\n        if (array[1] === 0) {\n          array[0](array[2]);\n        } else {\n          array[0](results, array[2]);\n        }\n      }\n    }\n\n    function taskComplete(key) {\n      var taskListeners = listeners[key] || [];\n      arrayEachSync(taskListeners, function(task) {\n        task();\n      });\n      proceedQueue();\n    }\n  }\n\n  var FN_ARGS = /^(function)?\\s*[^\\(]*\\(\\s*([^\\)]*)\\)/m;\n  var FN_ARG_SPLIT = /,/;\n  var FN_ARG = /(=.+)?(\\s*)$/;\n  var STRIP_COMMENTS = /((\\/\\/.*$)|(\\/\\*[\\s\\S]*?\\*\\/))/gm;\n\n  /**\n   * parse function arguments for `autoInject`\n   *\n   * @private\n   */\n  function parseParams(func) {\n    func = func.toString().replace(STRIP_COMMENTS, '');\n    func = func.match(FN_ARGS)[2].replace(' ', '');\n    func = func ? func.split(FN_ARG_SPLIT) : [];\n    func = func.map(function(arg) {\n      return arg.replace(FN_ARG, '').trim();\n    });\n    return func;\n  }\n\n  /**\n   * @memberof async\n   * @namespace autoInject\n   * @param {Object} tasks\n   * @param {number} [concurrency]\n   * @param {Function} [callback]\n   */\n  function autoInject(tasks, concurrency, callback) {\n    var newTasks = {};\n    baseEachSync(tasks, iterator, nativeKeys(tasks));\n    auto(newTasks, concurrency, callback);\n\n    function iterator(task, key) {\n      var params;\n      var taskLength = task.length;\n\n      if (isArray(task)) {\n        if (taskLength === 0) {\n          throw new Error('autoInject task functions require explicit parameters.');\n        }\n        params = createArray(task);\n        taskLength = params.length - 1;\n        task = params[taskLength];\n        if (taskLength === 0) {\n          newTasks[key] = task;\n          return;\n        }\n      } else if (taskLength === 1) {\n        newTasks[key] = task;\n        return;\n      } else {\n        params = parseParams(task);\n        if (taskLength === 0 && params.length === 0) {\n          throw new Error('autoInject task functions require explicit parameters.');\n        }\n        taskLength = params.length - 1;\n      }\n      params[taskLength] = newTask;\n      newTasks[key] = params;\n\n      function newTask(results, done) {\n        switch (taskLength) {\n          case 1:\n            task(results[params[0]], done);\n            break;\n          case 2:\n            task(results[params[0]], results[params[1]], done);\n            break;\n          case 3:\n            task(results[params[0]], results[params[1]], results[params[2]], done);\n            break;\n          default:\n            var i = -1;\n            while (++i < taskLength) {\n              params[i] = results[params[i]];\n            }\n            params[i] = done;\n            task.apply(null, params);\n            break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @memberof async\n   * @namespace retry\n   * @param {integer|Object|Function} opts\n   * @param {Function} [task]\n   * @param {Function} [callback]\n   */\n  function retry(opts, task, callback) {\n    var times, intervalFunc, errorFilter;\n    var count = 0;\n    if (arguments.length < 3 && typeof opts === func) {\n      callback = task || noop;\n      task = opts;\n      opts = null;\n      times = DEFAULT_TIMES;\n    } else {\n      callback = callback || noop;\n      switch (typeof opts) {\n        case 'object':\n          if (typeof opts.errorFilter === func) {\n            errorFilter = opts.errorFilter;\n          }\n          var interval = opts.interval;\n          switch (typeof interval) {\n            case func:\n              intervalFunc = interval;\n              break;\n            case 'string':\n            case 'number':\n              interval = +interval;\n              intervalFunc = interval\n                ? function() {\n                    return interval;\n                  }\n                : function() {\n                    return DEFAULT_INTERVAL;\n                  };\n              break;\n          }\n          times = +opts.times || DEFAULT_TIMES;\n          break;\n        case 'number':\n          times = opts || DEFAULT_TIMES;\n          break;\n        case 'string':\n          times = +opts || DEFAULT_TIMES;\n          break;\n        default:\n          throw new Error('Invalid arguments for async.retry');\n      }\n    }\n    if (typeof task !== 'function') {\n      throw new Error('Invalid arguments for async.retry');\n    }\n\n    if (intervalFunc) {\n      task(intervalCallback);\n    } else {\n      task(simpleCallback);\n    }\n\n    function simpleIterator() {\n      task(simpleCallback);\n    }\n\n    function simpleCallback(err, res) {\n      if (++count === times || !err || (errorFilter && !errorFilter(err))) {\n        if (arguments.length <= 2) {\n          return callback(err, res);\n        }\n        var args = createArray(arguments);\n        return callback.apply(null, args);\n      }\n      simpleIterator();\n    }\n\n    function intervalIterator() {\n      task(intervalCallback);\n    }\n\n    function intervalCallback(err, res) {\n      if (++count === times || !err || (errorFilter && !errorFilter(err))) {\n        if (arguments.length <= 2) {\n          return callback(err, res);\n        }\n        var args = createArray(arguments);\n        return callback.apply(null, args);\n      }\n      setTimeout(intervalIterator, intervalFunc(count));\n    }\n  }\n\n  function retryable(opts, task) {\n    if (!task) {\n      task = opts;\n      opts = null;\n    }\n    return done;\n\n    function done() {\n      var taskFn;\n      var args = createArray(arguments);\n      var lastIndex = args.length - 1;\n      var callback = args[lastIndex];\n      switch (task.length) {\n        case 1:\n          taskFn = task1;\n          break;\n        case 2:\n          taskFn = task2;\n          break;\n        case 3:\n          taskFn = task3;\n          break;\n        default:\n          taskFn = task4;\n      }\n      if (opts) {\n        retry(opts, taskFn, callback);\n      } else {\n        retry(taskFn, callback);\n      }\n\n      function task1(done) {\n        task(done);\n      }\n\n      function task2(done) {\n        task(args[0], done);\n      }\n\n      function task3(done) {\n        task(args[0], args[1], done);\n      }\n\n      function task4(callback) {\n        args[lastIndex] = callback;\n        task.apply(null, args);\n      }\n    }\n  }\n\n  /**\n   * @memberof async\n   * @namespace iterator\n   */\n  function iterator(tasks) {\n    var size = 0;\n    var keys = [];\n    if (isArray(tasks)) {\n      size = tasks.length;\n    } else {\n      keys = nativeKeys(tasks);\n      size = keys.length;\n    }\n    return makeCallback(0);\n\n    function makeCallback(index) {\n      var fn = function() {\n        if (size) {\n          var key = keys[index] || index;\n          tasks[key].apply(null, createArray(arguments));\n        }\n        return fn.next();\n      };\n      fn.next = function() {\n        return index < size - 1 ? makeCallback(index + 1) : null;\n      };\n      return fn;\n    }\n  }\n\n  /**\n   * @memberof async\n   * @namespace apply\n   */\n  function apply(func) {\n    switch (arguments.length) {\n      case 0:\n      case 1:\n        return func;\n      case 2:\n        return func.bind(null, arguments[1]);\n      case 3:\n        return func.bind(null, arguments[1], arguments[2]);\n      case 4:\n        return func.bind(null, arguments[1], arguments[2], arguments[3]);\n      case 5:\n        return func.bind(null, arguments[1], arguments[2], arguments[3], arguments[4]);\n      default:\n        var size = arguments.length;\n        var index = 0;\n        var args = Array(size);\n        args[index] = null;\n        while (++index < size) {\n          args[index] = arguments[index];\n        }\n        return func.bind.apply(func, args);\n    }\n  }\n\n  /**\n   * @memberof async\n   * @namespace timeout\n   * @param {Function} func\n   * @param {number} millisec\n   * @param {*} info\n   */\n  function timeout(func, millisec, info) {\n    var callback, timer;\n    return wrappedFunc;\n\n    function wrappedFunc() {\n      timer = setTimeout(timeoutCallback, millisec);\n      var args = createArray(arguments);\n      var lastIndex = args.length - 1;\n      callback = args[lastIndex];\n      args[lastIndex] = injectedCallback;\n      simpleApply(func, args);\n    }\n\n    function timeoutCallback() {\n      var name = func.name || 'anonymous';\n      var err = new Error('Callback function \"' + name + '\" timed out.');\n      err.code = 'ETIMEDOUT';\n      if (info) {\n        err.info = info;\n      }\n      timer = null;\n      callback(err);\n    }\n\n    function injectedCallback() {\n      if (timer !== null) {\n        simpleApply(callback, createArray(arguments));\n        clearTimeout(timer);\n      }\n    }\n\n    function simpleApply(func, args) {\n      switch (args.length) {\n        case 0:\n          func();\n          break;\n        case 1:\n          func(args[0]);\n          break;\n        case 2:\n          func(args[0], args[1]);\n          break;\n        default:\n          func.apply(null, args);\n          break;\n      }\n    }\n  }\n\n  /**\n   * @memberof async\n   * @namespace times\n   * @param {number} n - n >= 1\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * var iterator = function(n, done) {\n   *   done(null, n);\n   * };\n   * async.times(4, iterator, function(err, res) {\n   *   console.log(res); // [0, 1, 2, 3];\n   * });\n   *\n   */\n  function times(n, iterator, callback) {\n    callback = callback || noop;\n    n = +n;\n    if (isNaN(n) || n < 1) {\n      return callback(null, []);\n    }\n    var result = Array(n);\n    timesSync(n, iterate);\n\n    function iterate(num) {\n      iterator(num, createCallback(num));\n    }\n\n    function createCallback(index) {\n      return function(err, res) {\n        if (index === null) {\n          throwError();\n        }\n        result[index] = res;\n        index = null;\n        if (err) {\n          callback(err);\n          callback = noop;\n        } else if (--n === 0) {\n          callback(null, result);\n        }\n      };\n    }\n  }\n\n  /**\n   * @memberof async\n   * @namespace timesSeries\n   * @param {number} n - n >= 1\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * var iterator = function(n, done) {\n   *   done(null, n);\n   * };\n   * async.timesSeries(4, iterator, function(err, res) {\n   *   console.log(res); // [0, 1, 2, 3];\n   * });\n   *\n   */\n  function timesSeries(n, iterator, callback) {\n    callback = callback || noop;\n    n = +n;\n    if (isNaN(n) || n < 1) {\n      return callback(null, []);\n    }\n    var result = Array(n);\n    var sync = false;\n    var completed = 0;\n    iterate();\n\n    function iterate() {\n      iterator(completed, done);\n    }\n\n    function done(err, res) {\n      result[completed] = res;\n      if (err) {\n        callback(err);\n        callback = throwError;\n      } else if (++completed >= n) {\n        callback(null, result);\n        callback = throwError;\n      } else if (sync) {\n        nextTick(iterate);\n      } else {\n        sync = true;\n        iterate();\n      }\n      sync = false;\n    }\n  }\n\n  /**\n   * @memberof async\n   * @namespace timesLimit\n   * @param {number} n - n >= 1\n   * @param {number} limit - n >= 1\n   * @param {Function} iterator\n   * @param {Function} callback\n   * @example\n   *\n   * var iterator = function(n, done) {\n   *   done(null, n);\n   * };\n   * async.timesLimit(4, 2, iterator, function(err, res) {\n   *   console.log(res); // [0, 1, 2, 3];\n   * });\n   *\n   */\n  function timesLimit(n, limit, iterator, callback) {\n    callback = callback || noop;\n    n = +n;\n    if (isNaN(n) || n < 1 || isNaN(limit) || limit < 1) {\n      return callback(null, []);\n    }\n    var result = Array(n);\n    var sync = false;\n    var started = 0;\n    var completed = 0;\n    timesSync(limit > n ? n : limit, iterate);\n\n    function iterate() {\n      var index = started++;\n      if (index < n) {\n        iterator(index, createCallback(index));\n      }\n    }\n\n    function createCallback(index) {\n      return function(err, res) {\n        if (index === null) {\n          throwError();\n        }\n        result[index] = res;\n        index = null;\n        if (err) {\n          callback(err);\n          callback = noop;\n        } else if (++completed >= n) {\n          callback(null, result);\n          callback = throwError;\n        } else if (sync) {\n          nextTick(iterate);\n        } else {\n          sync = true;\n          iterate();\n        }\n        sync = false;\n      };\n    }\n  }\n\n  /**\n   * @memberof async\n   * @namespace race\n   * @param {Array|Object} tasks - functions\n   * @param {Function} callback\n   * @example\n   *\n   * // array\n   * var called = 0;\n   * var tasks = [\n   *   function(done) {\n   *     setTimeout(function() {\n   *       called++;\n   *       done(null, '1');\n   *     }, 30);\n   *   },\n   *   function(done) {\n   *     setTimeout(function() {\n   *       called++;\n   *       done(null, '2');\n   *     }, 20);\n   *   },\n   *   function(done) {\n   *     setTimeout(function() {\n   *       called++;\n   *       done(null, '3');\n   *     }, 10);\n   *   }\n   * ];\n   * async.race(tasks, function(err, res) {\n   *   console.log(res); // '3'\n   *   console.log(called); // 1\n   *   setTimeout(function() {\n   *     console.log(called); // 3\n   *   }, 50);\n   * });\n   *\n   * @example\n   *\n   * // object\n   * var called = 0;\n   * var tasks = {\n   *   'test1': function(done) {\n   *     setTimeout(function() {\n   *       called++;\n   *       done(null, '1');\n   *     }, 30);\n   *   },\n   *   'test2': function(done) {\n   *     setTimeout(function() {\n   *       called++;\n   *       done(null, '2');\n   *     }, 20);\n   *   },\n   *   'test3': function(done) {\n   *     setTimeout(function() {\n   *       called++;\n   *       done(null, '3');\n   *     }, 10);\n   *   }\n   * };\n   * async.race(tasks, function(err, res) {\n   *   console.log(res); // '3'\n   *   console.log(called); // 1\n   *   setTimeout(function() {\n   *     console.log(called); // 3\n   *     done();\n   *   }, 50);\n   * });\n   *\n   */\n  function race(tasks, callback) {\n    callback = once(callback || noop);\n    var size, keys;\n    var index = -1;\n    if (isArray(tasks)) {\n      size = tasks.length;\n      while (++index < size) {\n        tasks[index](callback);\n      }\n    } else if (tasks && typeof tasks === obj) {\n      keys = nativeKeys(tasks);\n      size = keys.length;\n      while (++index < size) {\n        tasks[keys[index]](callback);\n      }\n    } else {\n      return callback(new TypeError('First argument to race must be a collection of functions'));\n    }\n    if (!size) {\n      callback(null);\n    }\n  }\n\n  /**\n   * @memberof async\n   * @namespace memoize\n   */\n  function memoize(fn, hasher) {\n    hasher =\n      hasher ||\n      function(hash) {\n        return hash;\n      };\n\n    var memo = {};\n    var queues = {};\n    var memoized = function() {\n      var args = createArray(arguments);\n      var callback = args.pop();\n      var key = hasher.apply(null, args);\n      if (has(memo, key)) {\n        nextTick(function() {\n          callback.apply(null, memo[key]);\n        });\n        return;\n      }\n      if (has(queues, key)) {\n        return queues[key].push(callback);\n      }\n\n      queues[key] = [callback];\n      args.push(done);\n      fn.apply(null, args);\n\n      function done(err) {\n        var args = createArray(arguments);\n        if (!err) {\n          memo[key] = args;\n        }\n        var q = queues[key];\n        delete queues[key];\n\n        var i = -1;\n        var size = q.length;\n        while (++i < size) {\n          q[i].apply(null, args);\n        }\n      }\n    };\n    memoized.memo = memo;\n    memoized.unmemoized = fn;\n    return memoized;\n  }\n\n  /**\n   * @memberof async\n   * @namespace unmemoize\n   */\n  function unmemoize(fn) {\n    return function() {\n      return (fn.unmemoized || fn).apply(null, arguments);\n    };\n  }\n\n  /**\n   * @memberof async\n   * @namespace ensureAsync\n   */\n  function ensureAsync(fn) {\n    return function(/* ...args, callback */) {\n      var args = createArray(arguments);\n      var lastIndex = args.length - 1;\n      var callback = args[lastIndex];\n      var sync = true;\n      args[lastIndex] = done;\n      fn.apply(this, args);\n      sync = false;\n\n      function done() {\n        var innerArgs = createArray(arguments);\n        if (sync) {\n          nextTick(function() {\n            callback.apply(null, innerArgs);\n          });\n        } else {\n          callback.apply(null, innerArgs);\n        }\n      }\n    };\n  }\n\n  /**\n   * @memberof async\n   * @namespace constant\n   */\n  function constant(/* values... */) {\n    var args = [null].concat(createArray(arguments));\n    return function(callback) {\n      callback = arguments[arguments.length - 1];\n      callback.apply(this, args);\n    };\n  }\n\n  function asyncify(fn) {\n    return function(/* args..., callback */) {\n      var args = createArray(arguments);\n      var callback = args.pop();\n      var result;\n      try {\n        result = fn.apply(this, args);\n      } catch (e) {\n        return callback(e);\n      }\n      if (result && typeof result.then === func) {\n        result.then(\n          function(value) {\n            invokeCallback(callback, null, value);\n          },\n          function(err) {\n            invokeCallback(callback, err && err.message ? err : new Error(err));\n          }\n        );\n      } else {\n        callback(null, result);\n      }\n    };\n  }\n\n  function invokeCallback(callback, err, value) {\n    try {\n      callback(err, value);\n    } catch (e) {\n      nextTick(rethrow, e);\n    }\n  }\n\n  function rethrow(error) {\n    throw error;\n  }\n\n  /**\n   * @memberof async\n   * @namespace reflect\n   * @param {Function} func\n   * @return {Function}\n   */\n  function reflect(func) {\n    return function(/* args..., callback */) {\n      var callback;\n      switch (arguments.length) {\n        case 1:\n          callback = arguments[0];\n          return func(done);\n        case 2:\n          callback = arguments[1];\n          return func(arguments[0], done);\n        default:\n          var args = createArray(arguments);\n          var lastIndex = args.length - 1;\n          callback = args[lastIndex];\n          args[lastIndex] = done;\n          func.apply(this, args);\n      }\n\n      function done(err, res) {\n        if (err) {\n          return callback(null, {\n            error: err\n          });\n        }\n        if (arguments.length > 2) {\n          res = slice(arguments, 1);\n        }\n        callback(null, {\n          value: res\n        });\n      }\n    };\n  }\n\n  /**\n   * @memberof async\n   * @namespace reflectAll\n   * @param {Array[]|Object} tasks\n   * @return {Function}\n   */\n  function reflectAll(tasks) {\n    var newTasks, keys;\n    if (isArray(tasks)) {\n      newTasks = Array(tasks.length);\n      arrayEachSync(tasks, iterate);\n    } else if (tasks && typeof tasks === obj) {\n      keys = nativeKeys(tasks);\n      newTasks = {};\n      baseEachSync(tasks, iterate, keys);\n    }\n    return newTasks;\n\n    function iterate(func, key) {\n      newTasks[key] = reflect(func);\n    }\n  }\n\n  /**\n   * @memberof async\n   * @namespace createLogger\n   */\n  function createLogger(name) {\n    return function(fn) {\n      var args = slice(arguments, 1);\n      args.push(done);\n      fn.apply(null, args);\n    };\n\n    function done(err) {\n      if (typeof console === obj) {\n        if (err) {\n          if (console.error) {\n            console.error(err);\n          }\n          return;\n        }\n        if (console[name]) {\n          var args = slice(arguments, 1);\n          arrayEachSync(args, function(arg) {\n            console[name](arg);\n          });\n        }\n      }\n    }\n  }\n\n  /**\n   * @memberof async\n   * @namespace safe\n   */\n  function safe() {\n    createImmediate();\n    return exports;\n  }\n\n  /**\n   * @memberof async\n   * @namespace fast\n   */\n  function fast() {\n    createImmediate(false);\n    return exports;\n  }\n});\n"],"mappings":"AAAA,CAAC,UAASA,MAAT,EAAiBC,OAAjB,EAA0B;EACzB;EACA;;EACA,OAAOC,OAAP,KAAmB,QAAnB,IAA+B,OAAOC,MAAP,KAAkB,WAAjD,GACIF,OAAO,CAACC,OAAD,CADX,GAEI,OAAOE,MAAP,KAAkB,UAAlB,IAAgCA,MAAM,CAACC,GAAvC,GACAD,MAAM,CAAC,CAAC,SAAD,CAAD,EAAcH,OAAd,CADN,GAEAD,MAAM,CAACM,KAAP,GACAL,OAAO,CAAED,MAAM,CAACO,SAAP,GAAmBP,MAAM,CAACO,SAAP,IAAoB,EAAzC,CADP,GAEAN,OAAO,CAAED,MAAM,CAACM,KAAP,GAAeN,MAAM,CAACM,KAAP,IAAgB,EAAjC,CANX;AAOD,CAVD,EAUG,IAVH,EAUS,UAASJ,OAAT,EAAkB;EACzB;;EAEA,IAAIM,IAAI,GAAG,SAASA,IAAT,GAAgB,CAAE,CAA7B;;EACA,IAAIC,UAAU,GAAG,SAASA,UAAT,GAAsB;IACrC,MAAM,IAAIC,KAAJ,CAAU,8BAAV,CAAN;EACD,CAFD;;EAIA,IAAIC,aAAa,GAAG,CAApB;EACA,IAAIC,gBAAgB,GAAG,CAAvB;EAEA,IAAIC,GAAG,GAAG,QAAV;EACA,IAAIC,IAAI,GAAG,UAAX;EACA,IAAIC,OAAO,GAAGC,KAAK,CAACD,OAApB;EACA,IAAIE,UAAU,GAAGC,MAAM,CAACC,IAAxB;EACA,IAAIC,UAAU,GAAGJ,KAAK,CAACK,SAAN,CAAgBC,IAAjC;EACA,IAAIC,cAAc,GAAG,OAAOC,MAAP,KAAkBV,IAAlB,IAA0BU,MAAM,CAACC,QAAtD;EAEA,IAAIC,QAAJ,EAAcC,aAAd,EAA6BC,iBAA7B;EACAC,eAAe;EAEf;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EACE,IAAIC,IAAI,GAAGC,UAAU,CAACC,SAAD,EAAYC,QAAZ,EAAsBC,UAAtB,CAArB;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EACE,IAAIC,GAAG,GAAGC,SAAS,CAACC,cAAD,EAAiBC,aAAjB,EAAgCC,eAAhC,EAAiD,IAAjD,CAAnB;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EACE,IAAIC,SAAS,GAAGJ,SAAS,CAACC,cAAD,EAAiBI,WAAjB,EAA8BC,aAA9B,EAA6C,KAA7C,CAAzB;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EACE,IAAIC,MAAM,GAAGC,YAAY,CAACC,mBAAD,EAAsBC,kBAAtB,EAA0CC,oBAA1C,EAAgE,IAAhE,CAAzB;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EACE,IAAIC,YAAY,GAAGC,kBAAkB,CAAC,IAAD,CAArC;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EACE,IAAIC,WAAW,GAAGC,iBAAiB,CAAC,IAAD,CAAnC;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EACE,IAAIC,MAAM,GAAGR,YAAY,CAACC,mBAAD,EAAsBC,kBAAtB,EAA0CC,oBAA1C,EAAgE,KAAhE,CAAzB;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EACE,IAAIM,YAAY,GAAGJ,kBAAkB,CAAC,KAAD,CAArC;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EACE,IAAIK,WAAW,GAAGH,iBAAiB,CAAC,KAAD,CAAnC;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EACE,IAAII,MAAM,GAAGC,YAAY,CAACC,cAAD,EAAiBC,aAAjB,EAAgCC,eAAhC,EAAiD,IAAjD,CAAzB;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EACE,IAAIC,YAAY,GAAGC,kBAAkB,CAAC,IAAD,CAArC;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EACE,IAAIC,WAAW,GAAGC,iBAAiB,CAAC,IAAD,CAAnC;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EACE,IAAIC,KAAK,GAAGC,WAAW,CAACR,cAAD,EAAiBC,aAAjB,EAAgCC,eAAhC,CAAvB;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EACE,IAAIO,WAAW,GAAGC,iBAAiB,EAAnC;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EACE,IAAIC,UAAU,GAAGC,gBAAgB,EAAjC;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EACE,IAAIC,IAAI,GAAGC,UAAU,CAAC1B,mBAAD,EAAsB2B,gBAAtB,EAAwCC,kBAAxC,EAA4D,IAA5D,CAArB;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EACE,IAAIC,UAAU,GAAGC,gBAAgB,CAAC,IAAD,CAAjC;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EACE,IAAIC,SAAS,GAAGC,eAAe,CAAC,IAAD,CAA/B;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EACE,IAAIC,IAAI,GAAGP,UAAU,CAAC1B,mBAAD,EAAsB2B,gBAAtB,EAAwCC,kBAAxC,EAA4D,KAA5D,CAArB;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EACE,IAAIM,UAAU,GAAGJ,gBAAgB,CAAC,KAAD,CAAjC;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EACE,IAAIK,SAAS,GAAGH,eAAe,CAAC,KAAD,CAA/B;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EACE,IAAII,SAAS,GAAGC,eAAe,CAACC,eAAD,EAAkBC,cAAlB,EAAkCC,gBAAlC,CAA/B;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EACE,IAAIC,MAAM,GAAGC,YAAY,CAAC1C,mBAAD,EAAsBC,kBAAtB,EAA0CC,oBAA1C,CAAzB;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EACE,IAAIyC,MAAM,GAAGC,YAAY,CAACpD,cAAD,EAAiBC,aAAjB,EAAgCC,eAAhC,CAAzB;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EACE,IAAImD,OAAO,GAAGC,aAAa,CAAClC,cAAD,EAAiBC,aAAjB,EAAgCC,eAAhC,CAA3B;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EACE,IAAIiC,QAAQ,GAAGC,cAAc,CAACC,aAAD,EAAgBC,YAAhB,CAA7B;EAEA;AACF;AACA;AACA;;EACE,IAAIC,SAAS,GAAGC,eAAe,CAAC9D,GAAD,CAA/B;EAEA;AACF;AACA;AACA;;EACE,IAAI+D,eAAe,GAAGD,eAAe,CAACE,SAAD,CAArC;EAEA;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AAS2I,GAAT,EAAcC,GAAd,EAAmB;UACxB,IAAI5I,KAAK,KAAK,IAAd,EAAoB;YAClB9F,UAAU;UACX;;UACD,IAAIyO,GAAJ,EAAS;YACP3I,KAAK,GAAG,IAAR;YACAmJ,OAAO,GAAGlP,IAAV;YACAkO,QAAQ,GAAGU,IAAI,CAACV,QAAD,CAAf;YACAA,QAAQ,CAACQ,GAAD,CAAR;YACA;UACD;;UACD,IAAI,CAAC,CAACC,GAAF,KAAUG,IAAd,EAAoB;YAClB3C,MAAM,CAACpG,KAAD,CAAN,GAAgB0G,KAAhB;UACD;;UACD1G,KAAK,GAAG,IAAR;;UACA,IAAI,EAAE8I,SAAF,KAAgB5C,IAApB,EAA0B;YACxBiC,QAAQ,GAAGC,QAAQ,CAACD,QAAD,CAAnB;YACAA,QAAQ,CAAC,IAAD,EAAO1B,OAAO,CAACL,MAAD,CAAd,CAAR;UACD,CAHD,MAGO,IAAIgD,IAAJ,EAAU;YACfjO,QAAQ,CAACgO,OAAD,CAAR;UACD,CAFM,MAEA;YACLC,IAAI,GAAG,IAAP;YACAD,OAAO;UACR;;UACDC,IAAI,GAAG,KAAP;QACD,CAzBD;MA0BD;IACF,CA9GD;EA+GD;EAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACE,SAASlJ,UAAT,CAAoBmI,UAApB,EAAgCnN,QAAhC,EAA0CiN,QAA1C,EAAoD;IAClDA,QAAQ,GAAGC,QAAQ,CAACD,QAAQ,IAAIlO,IAAb,CAAnB;IACA,IAAIiM,IAAJ,EAAUd,GAAV,EAAexK,IAAf,EAAqB0N,IAArB,EAA2BC,IAA3B,EAAiCY,OAAjC;IACA,IAAIC,IAAI,GAAG,KAAX;IACA,IAAIN,SAAS,GAAG,CAAhB;;IAEA,IAAItO,OAAO,CAAC6N,UAAD,CAAX,EAAyB;MACvBnC,IAAI,GAAGmC,UAAU,CAAClC,MAAlB;MACAgD,OAAO,GAAGjO,QAAQ,CAACiL,MAAT,KAAoB,CAApB,GAAwBkD,sBAAxB,GAAiDC,aAA3D;IACD,CAHD,MAGO,IAAI,CAACjB,UAAL,EAAiB,CACvB,CADM,MACA,IAAIrN,cAAc,IAAIqN,UAAU,CAACrN,cAAD,CAAhC,EAAkD;MACvDkL,IAAI,GAAGqD,QAAP;MACAjB,IAAI,GAAGD,UAAU,CAACrN,cAAD,CAAV,EAAP;MACAmO,OAAO,GAAGjO,QAAQ,CAACiL,MAAT,KAAoB,CAApB,GAAwBqD,qBAAxB,GAAgDC,cAA1D;IACD,CAJM,MAIA,IAAI,OAAOpB,UAAP,KAAsB/N,GAA1B,EAA+B;MACpCM,IAAI,GAAGF,UAAU,CAAC2N,UAAD,CAAjB;MACAnC,IAAI,GAAGtL,IAAI,CAACuL,MAAZ;MACAgD,OAAO,GAAGjO,QAAQ,CAACiL,MAAT,KAAoB,CAApB,GAAwBuD,qBAAxB,GAAgDC,cAA1D;IACD;;IACD,IAAI,CAACzD,IAAL,EAAW;MACT,OAAOiC,QAAQ,CAAC,IAAD,CAAf;IACD;;IACDgB,OAAO;;IAEP,SAASG,aAAT,GAAyB;MACvBpO,QAAQ,CAACmN,UAAU,CAACS,SAAD,CAAX,EAAwBL,IAAxB,CAAR;IACD;;IAED,SAASY,sBAAT,GAAkC;MAChCnO,QAAQ,CAACmN,UAAU,CAACS,SAAD,CAAX,EAAwBA,SAAxB,EAAmCL,IAAnC,CAAR;IACD;;IAED,SAASgB,cAAT,GAA0B;MACxBlB,IAAI,GAAGD,IAAI,CAACE,IAAL,EAAP;MACAD,IAAI,CAACE,IAAL,GAAYN,QAAQ,CAAC,IAAD,CAApB,GAA6BjN,QAAQ,CAACqN,IAAI,CAAC7B,KAAN,EAAa+B,IAAb,CAArC;IACD;;IAED,SAASe,qBAAT,GAAiC;MAC/BjB,IAAI,GAAGD,IAAI,CAACE,IAAL,EAAP;MACAD,IAAI,CAACE,IAAL,GAAYN,QAAQ,CAAC,IAAD,CAApB,GAA6BjN,QAAQ,CAACqN,IAAI,CAAC7B,KAAN,EAAaoC,SAAb,EAAwBL,IAAxB,CAArC;IACD;;IAED,SAASkB,cAAT,GAA0B;MACxBzO,QAAQ,CAACmN,UAAU,CAACzN,IAAI,CAACkO,SAAD,CAAL,CAAX,EAA8BL,IAA9B,CAAR;IACD;;IAED,SAASiB,qBAAT,GAAiC;MAC/BtE,GAAG,GAAGxK,IAAI,CAACkO,SAAD,CAAV;MACA5N,QAAQ,CAACmN,UAAU,CAACjD,GAAD,CAAX,EAAkBA,GAAlB,EAAuBqD,IAAvB,CAAR;IACD;;IAED,SAASA,IAAT,CAAcE,GAAd,EAAmBI,IAAnB,EAAyB;MACvB,IAAIJ,GAAJ,EAAS;QACPR,QAAQ,CAACQ,GAAD,CAAR;MACD,CAFD,MAEO,IAAI,EAAEG,SAAF,KAAgB5C,IAAhB,IAAwB6C,IAAI,KAAK,KAArC,EAA4C;QACjDI,OAAO,GAAGjP,UAAV;QACAiO,QAAQ,CAAC,IAAD,CAAR;MACD,CAHM,MAGA,IAAIiB,IAAJ,EAAU;QACfjO,QAAQ,CAACgO,OAAD,CAAR;MACD,CAFM,MAEA;QACLC,IAAI,GAAG,IAAP;QACAD,OAAO;MACR;;MACDC,IAAI,GAAG,KAAP;IACD;EACF;EAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA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ACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACE,SAASrH,IAAT,CAAcsG,UAAd,EAA0BnN,QAA1B,EAAoCiN,QAApC,EAA8C;IAC5CA,QAAQ,GAAGA,QAAQ,IAAIlO,IAAvB;IACA+C,MAAM,CAACqL,UAAD,EAAanN,QAAb,EAAuBuN,IAAvB,CAAN;;IAEA,SAASA,IAAT,CAAcE,GAAd,EAAmBC,GAAnB,EAAwB;MACtB,IAAID,GAAJ,EAAS;QACP,OAAOR,QAAQ,CAACQ,GAAD,CAAf;MACD;;MACDR,QAAQ,CAAC,IAAD,EAAO,CAAC,CAACS,GAAT,CAAR;IACD;EACF;EAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACE,SAAS5G,UAAT,CAAoBqG,UAApB,EAAgCnN,QAAhC,EAA0CiN,QAA1C,EAAoD;IAClDA,QAAQ,GAAGA,QAAQ,IAAIlO,IAAvB;IACAoD,YAAY,CAACgL,UAAD,EAAanN,QAAb,EAAuBuN,IAAvB,CAAZ;;IAEA,SAASA,IAAT,CAAcE,GAAd,EAAmBC,GAAnB,EAAwB;MACtB,IAAID,GAAJ,EAAS;QACP,OAAOR,QAAQ,CAACQ,GAAD,CAAf;MACD;;MACDR,QAAQ,CAAC,IAAD,EAAO,CAAC,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"},"metadata":{},"sourceType":"script"}