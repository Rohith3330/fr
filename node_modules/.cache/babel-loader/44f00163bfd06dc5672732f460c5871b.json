{"ast":null,"code":"/**\n * Extractor function for a OptionalMemberExpression type value node.\n * A member expression is accessing a property on an object `obj.property`.\n *\n * @param - value - AST Value object with type `OptionalMemberExpression`\n * @returns - The extracted value converted to correct type\n *  and maintaing `obj?.property` convention.\n */\nexport default function extractValueFromOptionalMemberExpression(value) {\n  // eslint-disable-next-line global-require\n  const getValue = require('.').default;\n\n  return `${getValue(value.object)}?.${getValue(value.property)}`;\n}","map":{"version":3,"names":["extractValueFromOptionalMemberExpression","value","getValue","require","default","object","property"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/jsx-ast-utils/src/values/expressions/OptionalMemberExpression.js"],"sourcesContent":["/**\n * Extractor function for a OptionalMemberExpression type value node.\n * A member expression is accessing a property on an object `obj.property`.\n *\n * @param - value - AST Value object with type `OptionalMemberExpression`\n * @returns - The extracted value converted to correct type\n *  and maintaing `obj?.property` convention.\n */\nexport default function extractValueFromOptionalMemberExpression(value) {\n  // eslint-disable-next-line global-require\n  const getValue = require('.').default;\n  return `${getValue(value.object)}?.${getValue(value.property)}`;\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASA,wCAAT,CAAkDC,KAAlD,EAAyD;EACtE;EACA,MAAMC,QAAQ,GAAGC,OAAO,CAAC,GAAD,CAAP,CAAaC,OAA9B;;EACA,OAAQ,GAAEF,QAAQ,CAACD,KAAK,CAACI,MAAP,CAAe,KAAIH,QAAQ,CAACD,KAAK,CAACK,QAAP,CAAiB,EAA9D;AACD"},"metadata":{},"sourceType":"module"}