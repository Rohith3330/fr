{"ast":null,"code":"var defaultIsMergeableObject = require('is-mergeable-object');\n\nfunction emptyTarget(val) {\n  return Array.isArray(val) ? [] : {};\n}\n\nfunction cloneUnlessOtherwiseSpecified(value, options) {\n  return options.clone !== false && options.isMergeableObject(value) ? deepmerge(emptyTarget(value), value, options) : value;\n}\n\nfunction defaultArrayMerge(target, source, options) {\n  return target.concat(source).map(function (element) {\n    return cloneUnlessOtherwiseSpecified(element, options);\n  });\n}\n\nfunction getMergeFunction(key, options) {\n  if (!options.customMerge) {\n    return deepmerge;\n  }\n\n  var customMerge = options.customMerge(key);\n  return typeof customMerge === 'function' ? customMerge : deepmerge;\n}\n\nfunction getEnumerableOwnPropertySymbols(target) {\n  return Object.getOwnPropertySymbols ? Object.getOwnPropertySymbols(target).filter(function (symbol) {\n    return target.propertyIsEnumerable(symbol);\n  }) : [];\n}\n\nfunction getKeys(target) {\n  return Object.keys(target).concat(getEnumerableOwnPropertySymbols(target));\n}\n\nfunction propertyIsOnObject(object, property) {\n  try {\n    return property in object;\n  } catch (_) {\n    return false;\n  }\n} // Protects from prototype poisoning and unexpected merging up the prototype chain.\n\n\nfunction propertyIsUnsafe(target, key) {\n  return propertyIsOnObject(target, key) // Properties are safe to merge if they don't exist in the target yet,\n  && !(Object.hasOwnProperty.call(target, key) // unsafe if they exist up the prototype chain,\n  && Object.propertyIsEnumerable.call(target, key)); // and also unsafe if they're nonenumerable.\n}\n\nfunction mergeObject(target, source, options) {\n  var destination = {};\n\n  if (options.isMergeableObject(target)) {\n    getKeys(target).forEach(function (key) {\n      destination[key] = cloneUnlessOtherwiseSpecified(target[key], options);\n    });\n  }\n\n  getKeys(source).forEach(function (key) {\n    if (propertyIsUnsafe(target, key)) {\n      return;\n    }\n\n    if (propertyIsOnObject(target, key) && options.isMergeableObject(source[key])) {\n      destination[key] = getMergeFunction(key, options)(target[key], source[key], options);\n    } else {\n      destination[key] = cloneUnlessOtherwiseSpecified(source[key], options);\n    }\n  });\n  return destination;\n}\n\nfunction deepmerge(target, source, options) {\n  options = options || {};\n  options.arrayMerge = options.arrayMerge || defaultArrayMerge;\n  options.isMergeableObject = options.isMergeableObject || defaultIsMergeableObject; // cloneUnlessOtherwiseSpecified is added to `options` so that custom arrayMerge()\n  // implementations can use it. The caller may not replace it.\n\n  options.cloneUnlessOtherwiseSpecified = cloneUnlessOtherwiseSpecified;\n  var sourceIsArray = Array.isArray(source);\n  var targetIsArray = Array.isArray(target);\n  var sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;\n\n  if (!sourceAndTargetTypesMatch) {\n    return cloneUnlessOtherwiseSpecified(source, options);\n  } else if (sourceIsArray) {\n    return options.arrayMerge(target, source, options);\n  } else {\n    return mergeObject(target, source, options);\n  }\n}\n\ndeepmerge.all = function deepmergeAll(array, options) {\n  if (!Array.isArray(array)) {\n    throw new Error('first argument should be an array');\n  }\n\n  return array.reduce(function (prev, next) {\n    return deepmerge(prev, next, options);\n  }, {});\n};\n\nmodule.exports = deepmerge;","map":{"version":3,"names":["defaultIsMergeableObject","require","emptyTarget","val","Array","isArray","cloneUnlessOtherwiseSpecified","value","options","clone","isMergeableObject","deepmerge","defaultArrayMerge","target","source","concat","map","element","getMergeFunction","key","customMerge","getEnumerableOwnPropertySymbols","Object","getOwnPropertySymbols","filter","symbol","propertyIsEnumerable","getKeys","keys","propertyIsOnObject","object","property","_","propertyIsUnsafe","hasOwnProperty","call","mergeObject","destination","forEach","arrayMerge","sourceIsArray","targetIsArray","sourceAndTargetTypesMatch","all","deepmergeAll","array","Error","reduce","prev","next","module","exports"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/deepmerge/index.js"],"sourcesContent":["var defaultIsMergeableObject = require('is-mergeable-object')\n\nfunction emptyTarget(val) {\n\treturn Array.isArray(val) ? [] : {}\n}\n\nfunction cloneUnlessOtherwiseSpecified(value, options) {\n\treturn (options.clone !== false && options.isMergeableObject(value))\n\t\t? deepmerge(emptyTarget(value), value, options)\n\t\t: value\n}\n\nfunction defaultArrayMerge(target, source, options) {\n\treturn target.concat(source).map(function(element) {\n\t\treturn cloneUnlessOtherwiseSpecified(element, options)\n\t})\n}\n\nfunction getMergeFunction(key, options) {\n\tif (!options.customMerge) {\n\t\treturn deepmerge\n\t}\n\tvar customMerge = options.customMerge(key)\n\treturn typeof customMerge === 'function' ? customMerge : deepmerge\n}\n\nfunction getEnumerableOwnPropertySymbols(target) {\n\treturn Object.getOwnPropertySymbols\n\t\t? Object.getOwnPropertySymbols(target).filter(function(symbol) {\n\t\t\treturn target.propertyIsEnumerable(symbol)\n\t\t})\n\t\t: []\n}\n\nfunction getKeys(target) {\n\treturn Object.keys(target).concat(getEnumerableOwnPropertySymbols(target))\n}\n\nfunction propertyIsOnObject(object, property) {\n\ttry {\n\t\treturn property in object\n\t} catch(_) {\n\t\treturn false\n\t}\n}\n\n// Protects from prototype poisoning and unexpected merging up the prototype chain.\nfunction propertyIsUnsafe(target, key) {\n\treturn propertyIsOnObject(target, key) // Properties are safe to merge if they don't exist in the target yet,\n\t\t&& !(Object.hasOwnProperty.call(target, key) // unsafe if they exist up the prototype chain,\n\t\t\t&& Object.propertyIsEnumerable.call(target, key)) // and also unsafe if they're nonenumerable.\n}\n\nfunction mergeObject(target, source, options) {\n\tvar destination = {}\n\tif (options.isMergeableObject(target)) {\n\t\tgetKeys(target).forEach(function(key) {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(target[key], options)\n\t\t})\n\t}\n\tgetKeys(source).forEach(function(key) {\n\t\tif (propertyIsUnsafe(target, key)) {\n\t\t\treturn\n\t\t}\n\n\t\tif (propertyIsOnObject(target, key) && options.isMergeableObject(source[key])) {\n\t\t\tdestination[key] = getMergeFunction(key, options)(target[key], source[key], options)\n\t\t} else {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(source[key], options)\n\t\t}\n\t})\n\treturn destination\n}\n\nfunction deepmerge(target, source, options) {\n\toptions = options || {}\n\toptions.arrayMerge = options.arrayMerge || defaultArrayMerge\n\toptions.isMergeableObject = options.isMergeableObject || defaultIsMergeableObject\n\t// cloneUnlessOtherwiseSpecified is added to `options` so that custom arrayMerge()\n\t// implementations can use it. The caller may not replace it.\n\toptions.cloneUnlessOtherwiseSpecified = cloneUnlessOtherwiseSpecified\n\n\tvar sourceIsArray = Array.isArray(source)\n\tvar targetIsArray = Array.isArray(target)\n\tvar sourceAndTargetTypesMatch = sourceIsArray === targetIsArray\n\n\tif (!sourceAndTargetTypesMatch) {\n\t\treturn cloneUnlessOtherwiseSpecified(source, options)\n\t} else if (sourceIsArray) {\n\t\treturn options.arrayMerge(target, source, options)\n\t} else {\n\t\treturn mergeObject(target, source, options)\n\t}\n}\n\ndeepmerge.all = function deepmergeAll(array, options) {\n\tif (!Array.isArray(array)) {\n\t\tthrow new Error('first argument should be an array')\n\t}\n\n\treturn array.reduce(function(prev, next) {\n\t\treturn deepmerge(prev, next, options)\n\t}, {})\n}\n\nmodule.exports = deepmerge\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}