{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst utils_1 = require(\"@typescript-eslint/utils\");\n\nconst util = __importStar(require(\"../util\"));\n\nconst getESLintCoreRule_1 = require(\"../util/getESLintCoreRule\");\n\nconst baseRule = (0, getESLintCoreRule_1.getESLintCoreRule)('lines-between-class-members');\nconst schema = util.deepMerge(Object.assign({}, baseRule.meta.schema), {\n  1: {\n    exceptAfterOverload: {\n      type: 'boolean',\n      default: true\n    }\n  }\n});\nexports.default = util.createRule({\n  name: 'lines-between-class-members',\n  meta: {\n    type: 'layout',\n    docs: {\n      description: 'Require or disallow an empty line between class members',\n      recommended: false,\n      extendsBaseRule: true\n    },\n    fixable: 'whitespace',\n    hasSuggestions: baseRule.meta.hasSuggestions,\n    schema,\n    messages: baseRule.meta.messages\n  },\n  defaultOptions: ['always', {\n    exceptAfterOverload: true,\n    exceptAfterSingleLine: false\n  }],\n\n  create(context, _ref) {\n    let [firstOption, secondOption] = _ref;\n    const rules = baseRule.create(context);\n    const exceptAfterOverload = (secondOption === null || secondOption === void 0 ? void 0 : secondOption.exceptAfterOverload) && firstOption === 'always';\n\n    function isOverload(node) {\n      return (node.type === utils_1.AST_NODE_TYPES.TSAbstractMethodDefinition || node.type === utils_1.AST_NODE_TYPES.MethodDefinition) && node.value.type === utils_1.AST_NODE_TYPES.TSEmptyBodyFunctionExpression;\n    }\n\n    return {\n      ClassBody(node) {\n        const body = exceptAfterOverload ? node.body.filter(node => !isOverload(node)) : node.body;\n        rules.ClassBody(Object.assign(Object.assign({}, node), {\n          body\n        }));\n      }\n\n    };\n  }\n\n});","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;;AAEA;;AACA;;AAEA,MAAMA,QAAQ,GAAG,2CAAkB,6BAAlB,CAAjB;AAKA,MAAMC,MAAM,GAAGC,IAAI,CAACC,SAAL,CAAcC,kBACtBJ,QAAQ,CAACK,IAAT,CAAcJ,MADQ,CAAd,EAEb;EACE,GAAG;IACDK,mBAAmB,EAAE;MACnBC,IAAI,EAAE,SADa;MAEnBC,OAAO,EAAE;IAFU;EADpB;AADL,CAFa,CAAf;AAYAC,kBAAeP,IAAI,CAACQ,UAAL,CAAqC;EAClDC,IAAI,EAAE,6BAD4C;EAElDN,IAAI,EAAE;IACJE,IAAI,EAAE,QADF;IAEJK,IAAI,EAAE;MACJC,WAAW,EAAE,yDADT;MAEJC,WAAW,EAAE,KAFT;MAGJC,eAAe,EAAE;IAHb,CAFF;IAOJC,OAAO,EAAE,YAPL;IAQJC,cAAc,EAAEjB,QAAQ,CAACK,IAAT,CAAcY,cAR1B;IASJhB,MATI;IAUJiB,QAAQ,EAAElB,QAAQ,CAACK,IAAT,CAAca;EAVpB,CAF4C;EAclDC,cAAc,EAAE,CACd,QADc,EAEd;IACEb,mBAAmB,EAAE,IADvB;IAEEc,qBAAqB,EAAE;EAFzB,CAFc,CAdkC;;EAqBlDC,MAAM,CAACC,OAAD,QAAqC;IAAA,IAA3B,CAACC,WAAD,EAAcC,YAAd,CAA2B;IACzC,MAAMC,KAAK,GAAGzB,QAAQ,CAACqB,MAAT,CAAgBC,OAAhB,CAAd;IACA,MAAMhB,mBAAmB,GACvB,aAAY,SAAZ,gBAAY,WAAZ,GAAY,MAAZ,eAAY,CAAEA,mBAAd,KAAqCiB,WAAW,KAAK,QADvD;;IAGA,SAASG,UAAT,CAAoBC,IAApB,EAAuC;MACrC,OACE,CAACA,IAAI,CAACpB,IAAL,KAAcqB,uBAAeC,0BAA7B,IACCF,IAAI,CAACpB,IAAL,KAAcqB,uBAAeE,gBAD/B,KAEAH,IAAI,CAACI,KAAL,CAAWxB,IAAX,KAAoBqB,uBAAeI,6BAHrC;IAKD;;IAED,OAAO;MACLC,SAAS,CAACN,IAAD,EAAK;QACZ,MAAMO,IAAI,GAAG5B,mBAAmB,GAC5BqB,IAAI,CAACO,IAAL,CAAUC,MAAV,CAAiBR,IAAI,IAAI,CAACD,UAAU,CAACC,IAAD,CAApC,CAD4B,GAE5BA,IAAI,CAACO,IAFT;QAIAT,KAAK,CAACQ,SAAN,CAAe7B,gCAAMuB,IAAN,GAAU;UAAEO;QAAF,CAAV,CAAf;MACD;;IAPI,CAAP;EASD;;AA3CiD,CAArC,CAAf","names":["baseRule","schema","util","deepMerge","Object","meta","exceptAfterOverload","type","default","exports","createRule","name","docs","description","recommended","extendsBaseRule","fixable","hasSuggestions","messages","defaultOptions","exceptAfterSingleLine","create","context","firstOption","secondOption","rules","isOverload","node","utils_1","TSAbstractMethodDefinition","MethodDefinition","value","TSEmptyBodyFunctionExpression","ClassBody","body","filter"],"sources":["../../src/rules/lines-between-class-members.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}