{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst ts = __importStar(require(\"typescript\"));\n\nconst util = __importStar(require(\"../util\"));\n\nexports.default = util.createRule({\n  name: 'no-for-in-array',\n  meta: {\n    docs: {\n      description: 'Disallow iterating over an array with a for-in loop',\n      recommended: 'error',\n      requiresTypeChecking: true\n    },\n    messages: {\n      forInViolation: 'For-in loops over arrays are forbidden. Use for-of or array.forEach instead.'\n    },\n    schema: [],\n    type: 'problem'\n  },\n  defaultOptions: [],\n\n  create(context) {\n    return {\n      ForInStatement(node) {\n        const parserServices = util.getParserServices(context);\n        const checker = parserServices.program.getTypeChecker();\n        const originalNode = parserServices.esTreeNodeToTSNodeMap.get(node);\n        const type = util.getConstrainedTypeAtLocation(checker, originalNode.expression);\n\n        if (util.isTypeArrayTypeOrUnionOfArrayTypes(type, checker) || (type.flags & ts.TypeFlags.StringLike) !== 0) {\n          context.report({\n            node,\n            messageId: 'forInViolation'\n          });\n        }\n      }\n\n    };\n  }\n\n});","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAEA;;AAEAA,kBAAeC,IAAI,CAACC,UAAL,CAAgB;EAC7BC,IAAI,EAAE,iBADuB;EAE7BC,IAAI,EAAE;IACJC,IAAI,EAAE;MACJC,WAAW,EAAE,qDADT;MAEJC,WAAW,EAAE,OAFT;MAGJC,oBAAoB,EAAE;IAHlB,CADF;IAMJC,QAAQ,EAAE;MACRC,cAAc,EACZ;IAFM,CANN;IAUJC,MAAM,EAAE,EAVJ;IAWJC,IAAI,EAAE;EAXF,CAFuB;EAe7BC,cAAc,EAAE,EAfa;;EAgB7BC,MAAM,CAACC,OAAD,EAAQ;IACZ,OAAO;MACLC,cAAc,CAACC,IAAD,EAAK;QACjB,MAAMC,cAAc,GAAGjB,IAAI,CAACkB,iBAAL,CAAuBJ,OAAvB,CAAvB;QACA,MAAMK,OAAO,GAAGF,cAAc,CAACG,OAAf,CAAuBC,cAAvB,EAAhB;QACA,MAAMC,YAAY,GAAGL,cAAc,CAACM,qBAAf,CAAqCC,GAArC,CAAyCR,IAAzC,CAArB;QAEA,MAAML,IAAI,GAAGX,IAAI,CAACyB,4BAAL,CACXN,OADW,EAEXG,YAAY,CAACI,UAFF,CAAb;;QAKA,IACE1B,IAAI,CAAC2B,kCAAL,CAAwChB,IAAxC,EAA8CQ,OAA9C,KACA,CAACR,IAAI,CAACiB,KAAL,GAAaC,EAAE,CAACC,SAAH,CAAaC,UAA3B,MAA2C,CAF7C,EAGE;UACAjB,OAAO,CAACkB,MAAR,CAAe;YACbhB,IADa;YAEbiB,SAAS,EAAE;UAFE,CAAf;QAID;MACF;;IApBI,CAAP;EAsBD;;AAvC4B,CAAhB,CAAf","names":["exports","util","createRule","name","meta","docs","description","recommended","requiresTypeChecking","messages","forInViolation","schema","type","defaultOptions","create","context","ForInStatement","node","parserServices","getParserServices","checker","program","getTypeChecker","originalNode","esTreeNodeToTSNodeMap","get","getConstrainedTypeAtLocation","expression","isTypeArrayTypeOrUnionOfArrayTypes","flags","ts","TypeFlags","StringLike","report","messageId"],"sources":["../../src/rules/no-for-in-array.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}