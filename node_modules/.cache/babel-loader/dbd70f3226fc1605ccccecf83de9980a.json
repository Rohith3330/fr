{"ast":null,"code":"/**\n * @fileoverview Prevent usage of dangerous JSX props\n * @author Scott Andrews\n */\n'use strict';\n\nconst has = require('object.hasown/polyfill')();\n\nconst fromEntries = require('object.fromentries/polyfill')();\n\nconst docsUrl = require('../util/docsUrl');\n\nconst jsxUtil = require('../util/jsx');\n\nconst report = require('../util/report'); // ------------------------------------------------------------------------------\n// Constants\n// ------------------------------------------------------------------------------\n\n\nconst DANGEROUS_PROPERTY_NAMES = ['dangerouslySetInnerHTML'];\nconst DANGEROUS_PROPERTIES = fromEntries(DANGEROUS_PROPERTY_NAMES.map(prop => [prop, prop])); // ------------------------------------------------------------------------------\n// Helpers\n// ------------------------------------------------------------------------------\n\n/**\n * Checks if a JSX attribute is dangerous.\n * @param {String} name - Name of the attribute to check.\n * @returns {boolean} Whether or not the attribute is dangerous.\n */\n\nfunction isDangerous(name) {\n  return has(DANGEROUS_PROPERTIES, name);\n} // ------------------------------------------------------------------------------\n// Rule Definition\n// ------------------------------------------------------------------------------\n\n\nconst messages = {\n  dangerousProp: 'Dangerous property \\'{{name}}\\' found'\n};\nmodule.exports = {\n  meta: {\n    docs: {\n      description: 'Disallow usage of dangerous JSX properties',\n      category: 'Best Practices',\n      recommended: false,\n      url: docsUrl('no-danger')\n    },\n    messages,\n    schema: []\n  },\n\n  create(context) {\n    return {\n      JSXAttribute(node) {\n        if (jsxUtil.isDOMComponent(node.parent) && isDangerous(node.name.name)) {\n          report(context, messages.dangerousProp, 'dangerousProp', {\n            node,\n            data: {\n              name: node.name.name\n            }\n          });\n        }\n      }\n\n    };\n  }\n\n};","map":{"version":3,"names":["has","require","fromEntries","docsUrl","jsxUtil","report","DANGEROUS_PROPERTY_NAMES","DANGEROUS_PROPERTIES","map","prop","isDangerous","name","messages","dangerousProp","module","exports","meta","docs","description","category","recommended","url","schema","create","context","JSXAttribute","node","isDOMComponent","parent","data"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/eslint-plugin-react/lib/rules/no-danger.js"],"sourcesContent":["/**\n * @fileoverview Prevent usage of dangerous JSX props\n * @author Scott Andrews\n */\n\n'use strict';\n\nconst has = require('object.hasown/polyfill')();\nconst fromEntries = require('object.fromentries/polyfill')();\n\nconst docsUrl = require('../util/docsUrl');\nconst jsxUtil = require('../util/jsx');\nconst report = require('../util/report');\n\n// ------------------------------------------------------------------------------\n// Constants\n// ------------------------------------------------------------------------------\n\nconst DANGEROUS_PROPERTY_NAMES = [\n  'dangerouslySetInnerHTML',\n];\n\nconst DANGEROUS_PROPERTIES = fromEntries(DANGEROUS_PROPERTY_NAMES.map((prop) => [prop, prop]));\n\n// ------------------------------------------------------------------------------\n// Helpers\n// ------------------------------------------------------------------------------\n\n/**\n * Checks if a JSX attribute is dangerous.\n * @param {String} name - Name of the attribute to check.\n * @returns {boolean} Whether or not the attribute is dangerous.\n */\nfunction isDangerous(name) {\n  return has(DANGEROUS_PROPERTIES, name);\n}\n\n// ------------------------------------------------------------------------------\n// Rule Definition\n// ------------------------------------------------------------------------------\n\nconst messages = {\n  dangerousProp: 'Dangerous property \\'{{name}}\\' found',\n};\n\nmodule.exports = {\n  meta: {\n    docs: {\n      description: 'Disallow usage of dangerous JSX properties',\n      category: 'Best Practices',\n      recommended: false,\n      url: docsUrl('no-danger'),\n    },\n\n    messages,\n\n    schema: [],\n  },\n\n  create(context) {\n    return {\n      JSXAttribute(node) {\n        if (jsxUtil.isDOMComponent(node.parent) && isDangerous(node.name.name)) {\n          report(context, messages.dangerousProp, 'dangerousProp', {\n            node,\n            data: {\n              name: node.name.name,\n            },\n          });\n        }\n      },\n    };\n  },\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;;AAEA,MAAMA,GAAG,GAAGC,OAAO,CAAC,wBAAD,CAAP,EAAZ;;AACA,MAAMC,WAAW,GAAGD,OAAO,CAAC,6BAAD,CAAP,EAApB;;AAEA,MAAME,OAAO,GAAGF,OAAO,CAAC,iBAAD,CAAvB;;AACA,MAAMG,OAAO,GAAGH,OAAO,CAAC,aAAD,CAAvB;;AACA,MAAMI,MAAM,GAAGJ,OAAO,CAAC,gBAAD,CAAtB,C,CAEA;AACA;AACA;;;AAEA,MAAMK,wBAAwB,GAAG,CAC/B,yBAD+B,CAAjC;AAIA,MAAMC,oBAAoB,GAAGL,WAAW,CAACI,wBAAwB,CAACE,GAAzB,CAA8BC,IAAD,IAAU,CAACA,IAAD,EAAOA,IAAP,CAAvC,CAAD,CAAxC,C,CAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AACA,SAASC,WAAT,CAAqBC,IAArB,EAA2B;EACzB,OAAOX,GAAG,CAACO,oBAAD,EAAuBI,IAAvB,CAAV;AACD,C,CAED;AACA;AACA;;;AAEA,MAAMC,QAAQ,GAAG;EACfC,aAAa,EAAE;AADA,CAAjB;AAIAC,MAAM,CAACC,OAAP,GAAiB;EACfC,IAAI,EAAE;IACJC,IAAI,EAAE;MACJC,WAAW,EAAE,4CADT;MAEJC,QAAQ,EAAE,gBAFN;MAGJC,WAAW,EAAE,KAHT;MAIJC,GAAG,EAAElB,OAAO,CAAC,WAAD;IAJR,CADF;IAQJS,QARI;IAUJU,MAAM,EAAE;EAVJ,CADS;;EAcfC,MAAM,CAACC,OAAD,EAAU;IACd,OAAO;MACLC,YAAY,CAACC,IAAD,EAAO;QACjB,IAAItB,OAAO,CAACuB,cAAR,CAAuBD,IAAI,CAACE,MAA5B,KAAuClB,WAAW,CAACgB,IAAI,CAACf,IAAL,CAAUA,IAAX,CAAtD,EAAwE;UACtEN,MAAM,CAACmB,OAAD,EAAUZ,QAAQ,CAACC,aAAnB,EAAkC,eAAlC,EAAmD;YACvDa,IADuD;YAEvDG,IAAI,EAAE;cACJlB,IAAI,EAAEe,IAAI,CAACf,IAAL,CAAUA;YADZ;UAFiD,CAAnD,CAAN;QAMD;MACF;;IAVI,CAAP;EAYD;;AA3Bc,CAAjB"},"metadata":{},"sourceType":"script"}