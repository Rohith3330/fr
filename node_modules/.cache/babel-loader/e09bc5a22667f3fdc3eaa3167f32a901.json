{"ast":null,"code":"'use strict';\n\nconst {\n  test\n} = require('uvu');\n\nconst assert = require('uvu/assert');\n\nconst postcss = require('postcss');\n\nconst reduceCalc = require('../index.js');\n\nconst postcssOpts = {\n  from: undefined\n};\n\nfunction testValue(fixture, expected) {\n  let opts = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  fixture = `foo{bar:${fixture}}`;\n  expected = `foo{bar:${expected}}`;\n  return async () => {\n    const result = await postcss(reduceCalc(opts)).process(fixture, postcssOpts);\n    assert.is(result.css, expected);\n  };\n}\n\nfunction testCss(fixture, expected) {\n  let opts = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  return async () => {\n    const result = await postcss(reduceCalc(opts)).process(fixture, postcssOpts);\n    assert.is(result.css, expected);\n  };\n}\n\nfunction testThrows(fixture, expected, warning) {\n  let opts = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  fixture = `foo{bar:${fixture}}`;\n  expected = `foo{bar:${expected}}`;\n  return async () => {\n    const result = await postcss(reduceCalc(opts)).process(fixture, postcssOpts);\n    const warnings = result.warnings();\n    assert.is(result.css, expected);\n    assert.is(warnings[0].text, warning);\n  };\n}\n\ntest('should reduce simple calc (1)', testValue('calc(1px + 1px)', '2px'));\ntest('should reduce simple calc (2)', testValue('calc(1px + 1px);baz:calc(2px+3px)', '2px;baz:5px'));\ntest('should reduce simple calc (3)', testValue('calc(1rem * 1.5)', '1.5rem'));\ntest('should reduce simple calc (4)', testValue('calc(3em - 1em)', '2em'));\ntest('should reduce simple calc (5', testValue('calc(2ex / 2)', '1ex'));\ntest('should reduce simple calc (6)', testValue('calc(50px - (20px - 30px))', '60px'));\ntest('should reduce simple calc (7)', testValue('calc(100px - (100px - 100%))', '100%'));\ntest('should reduce simple calc (8)', testValue('calc(100px + (100px - 100%))', 'calc(200px - 100%)'));\ntest('should reduce additions and subtractions (1)', testValue('calc(100% - 10px + 20px)', 'calc(100% + 10px)'));\ntest('should reduce additions and subtractions (2)', testValue('calc(100% + 10px - 20px)', 'calc(100% - 10px)'));\ntest('should reduce additions and subtractions (3)', testValue('calc(1px - (2em + 3%))', 'calc(1px - 2em - 3%)'));\ntest('should reduce additions and subtractions (4)', testValue('calc((100vw - 50em) / 2)', 'calc(50vw - 25em)'));\ntest('should reduce additions and subtractions (5)', testValue('calc(10px - (100vw - 50em) / 2)', 'calc(10px - 50vw + 25em)'));\ntest('should reduce additions and subtractions (6)', testValue('calc(1px - (2em + 4vh + 3%))', 'calc(1px - 2em - 4vh - 3%)'));\ntest('should reduce additions and subtractions (7)', testValue('calc(0px - (24px - (var(--a) - var(--b)) / 2 + var(--c)))', 'calc(-24px + (var(--a) - var(--b))/2 - var(--c))'));\ntest('should reduce additions and subtractions (8)', testValue('calc(1px + (2em + (3vh + 4px)))', 'calc(5px + 2em + 3vh)'));\ntest('should reduce additions and subtractions (9)', testValue('calc(1px - (2em + 4px - 6vh) / 2)', 'calc(-1px - 1em + 3vh)'));\ntest('should reduce multiplication', testValue('calc(((var(--a) + 4px) * 2) * 2)', 'calc((var(--a) + 4px)*2*2)'));\ntest('should reduce multiplication before reducing additions', testValue('calc(((var(--a) + 4px) * 2) * 2 + 4px)', 'calc((var(--a) + 4px)*2*2 + 4px)'));\ntest('should reduce division', testValue('calc(((var(--a) + 4px) / 2) / 2)', 'calc((var(--a) + 4px)/2/2)'));\ntest('should reduce division before reducing additions', testValue('calc(((var(--a) + 4px) / 2) / 2 + 4px)', 'calc((var(--a) + 4px)/2/2 + 4px)'));\ntest('should ignore value surrounding calc function (1)', testValue('a calc(1px + 1px)', 'a 2px'));\ntest('should ignore value surrounding calc function (2)', testValue('calc(1px + 1px) a', '2px a'));\ntest('should ignore value surrounding calc function (3)', testValue('a calc(1px + 1px) b', 'a 2px b'));\ntest('should ignore value surrounding calc function (4)', testValue('a calc(1px + 1px) b calc(1em + 2em) c', 'a 2px b 3em c'));\ntest('should reduce nested calc', testValue('calc(100% - calc(50% + 25px))', 'calc(50% - 25px)'));\ntest('should reduce vendor-prefixed nested calc', testValue('-webkit-calc(100% - -webkit-calc(50% + 25px))', '-webkit-calc(50% - 25px)'));\ntest('should reduce uppercase calc (1)', testValue('CALC(1px + 1px)', '2px'));\ntest('should reduce uppercase calc (2)', testValue('CALC(1px + CALC(2px / 2))', '2px'));\ntest('should reduce uppercase calc (3)', testValue('-WEBKIT-CALC(1px + 1px)', '2px'));\ntest('should reduce uppercase calc (4)', testValue('-WEBKIT-CALC(1px + -WEBKIT-CALC(2px / 2))', '2px'));\ntest('should ignore calc with css variables (1)', testValue('calc(var(--mouseX) * 1px)', 'calc(var(--mouseX)*1px)'));\ntest('should ignore calc with css variables (2)', testValue('calc(10px - (100px * var(--mouseX)))', 'calc(10px - 100px*var(--mouseX))'));\ntest('should ignore calc with css variables (3)', testValue('calc(10px - (100px + var(--mouseX)))', 'calc(-90px - var(--mouseX))'));\ntest('should ignore calc with css variables (4)', testValue('calc(10px - (100px / var(--mouseX)))', 'calc(10px - 100px/var(--mouseX))'));\ntest('should ignore calc with css variables (5)', testValue('calc(10px - (100px - var(--mouseX)))', 'calc(-90px + var(--mouseX))'));\ntest('should ignore calc with css variables (6)', testValue('calc(var(--popupHeight) / 2)', 'calc(var(--popupHeight)/2)'));\ntest('should ignore calc with css variables (7)', testValue('calc(var(--popupHeight) / 2 + var(--popupWidth) / 2)', 'calc(var(--popupHeight)/2 + var(--popupWidth)/2)'));\ntest('should reduce calc with newline characters', testValue('calc(\\n1rem \\n* 2 \\n* 1.5)', '3rem'));\ntest('should preserve calc with incompatible units', testValue('calc(100% + 1px)', 'calc(100% + 1px)'));\ntest('should parse fractions without leading zero', testValue('calc(2rem - .14285em)', 'calc(2rem - 0.14285em)'));\ntest('should handle precision correctly (1)', testValue('calc(1/100)', '0.01'));\ntest('should handle precision correctly (2)', testValue('calc(5/1000000)', '0.00001'));\ntest('should handle precision correctly (3)', testValue('calc(5/1000000)', '0.000005', {\n  precision: 6\n}));\ntest('should reduce browser-prefixed calc (1)', testValue('-webkit-calc(1px + 1px)', '2px'));\ntest('should reduce browser-prefixed calc (2)', testValue('-moz-calc(1px + 1px)', '2px'));\ntest('should discard zero values (#2) (1)', testValue('calc(100vw / 2 - 6px + 0px)', 'calc(50vw - 6px)'));\ntest('should discard zero values (#2) (2)', testValue('calc(500px - 0px)', '500px'));\ntest('should not perform addition on unitless values (#3)', testValue('calc(1px + 1)', 'calc(1px + 1)'));\ntest('should reduce consecutive substractions (#24) (1)', testValue('calc(100% - 120px - 60px)', 'calc(100% - 180px)'));\ntest('should reduce consecutive substractions (#24) (2)', testValue('calc(100% - 10px - 20px)', 'calc(100% - 30px)'));\ntest('should reduce mixed units of time (postcss-calc#33)', testValue('calc(1s - 50ms)', '0.95s'));\ntest('should correctly reduce calc with mixed units (cssnano#211)', testValue('calc(99.99% * 1/1 - 0rem)', '99.99%'));\ntest('should apply optimization (cssnano#320)', testValue('calc(50% + (5em + 5%))', 'calc(55% + 5em)'));\ntest('should reduce substraction from zero', testValue('calc( 0 - 10px)', '-10px'));\ntest('should reduce subtracted expression from zero', testValue('calc( 0 - calc(1px + 1em) )', 'calc(-1px - 1em)'));\ntest('should reduce substracted expression from zero (1)', testValue('calc( 0 - (100vw - 10px) / 2 )', 'calc(-50vw + 5px)'));\ntest('should reduce substracted expression from zero (2)', testValue('calc( 0px - (100vw - 10px))', 'calc(10px - 100vw)'));\ntest('should reduce substracted expression from zero (3)', testValue('calc( 0px - (100vw - 10px) * 2 )', 'calc(20px - 200vw)'));\ntest('should reduce substracted expression from zero (4)', testValue('calc( 0px - (100vw + 10px))', 'calc(-10px - 100vw)'));\ntest('should reduce substracted expression from zero (css-variable)', testValue('calc( 0px - (var(--foo, 4px) / 2))', 'calc(0px - var(--foo, 4px)/2)'));\ntest('should reduce nested expression', testValue('calc( (1em - calc( 10px + 1em)) / 2)', '-5px'));\ntest('should skip constant function', testValue('calc(constant(safe-area-inset-left))', 'calc(constant(safe-area-inset-left))'));\ntest('should skip env function', testValue('calc(env(safe-area-inset-left))', 'calc(env(safe-area-inset-left))'));\ntest('should skip env function (#1)', testValue('calc(env(safe-area-inset-left, 50px 20px))', 'calc(env(safe-area-inset-left, 50px 20px))'));\ntest('should skip unknown function', testValue('calc(unknown(safe-area-inset-left))', 'calc(unknown(safe-area-inset-left))'));\ntest('should preserve the original declaration when `preserve` option is set to true', testCss('foo{bar:calc(1rem * 1.5)}', 'foo{bar:1.5rem;bar:calc(1rem * 1.5)}', {\n  preserve: true\n}));\ntest('should not yield warnings when nothing is wrong', testValue('calc(500px - 0px)', '500px', {\n  warnWhenCannotResolve: true\n}));\ntest('should warn when calc expression cannot be reduced to a single value', testValue('calc(100% + 1px)', 'calc(100% + 1px)', {\n  warnWhenCannotResolve: true\n}));\ntest('should reduce mixed units of time (#33)', testValue('calc(1s - 50ms)', '0.95s'));\ntest('should not parse variables as calc expressions (#35)', testCss('foo:nth-child(2n + $var-calc){}', 'foo:nth-child(2n + $var-calc){}', {\n  selectors: true\n}));\ntest('should apply algebraic reduction (cssnano#319)', testValue('calc((100px - 1em) + (-50px + 1em))', '50px'));\ntest('should discard zero values (reduce-css-calc#2) (1)', testValue('calc(100vw / 2 - 6px + 0px)', 'calc(50vw - 6px)'));\ntest('should discard zero values (reduce-css-calc#2) (2)', testValue('calc(500px - 0px)', '500px'));\ntest('should not perform addition on unitless values (reduce-css-calc#3)', testValue('calc(1px + 1)', 'calc(1px + 1)'));\ntest('should return the same and not thrown an exception for attribute selectors without a value', testCss('button[disabled]{}', 'button[disabled]{}', {\n  selectors: true\n}));\ntest('should ignore reducing custom property', testCss(':root { --foo: calc(var(--bar) / 8); }', ':root { --foo: calc(var(--bar)/8); }'));\ntest('should ignore media queries', testCss('@media (min-width:calc(10px+10px)){}', '@media (min-width:calc(10px+10px)){}'));\ntest('should reduce calc in media queries when `mediaQueries` option is set to true', testCss('@media (min-width:calc(10px+10px)){}', '@media (min-width:20px){}', {\n  mediaQueries: true\n}));\ntest('should ignore selectors (1)', testCss('div[data-size=\"calc(3*3)\"]{}', 'div[data-size=\"calc(3*3)\"]{}'));\ntest('should ignore selectors (2)', testCss('div:nth-child(2n + calc(3*3)){}', 'div:nth-child(2n + calc(3*3)){}'));\ntest('should reduce calc in selectors when `selectors` option is set to true (1)', testCss('div[data-size=\"calc(3*3)\"]{}', 'div[data-size=\"9\"]{}', {\n  selectors: true\n}));\ntest('should reduce calc in selectors when `selectors` option is set to true (2)', testCss('div:nth-child(2n + calc(3*3)){}', 'div:nth-child(2n + 9){}', {\n  selectors: true\n}));\ntest('should not reduce 100% to 1 (reduce-css-calc#44)', testCss('.@supports (width:calc(100% - constant(safe-area-inset-left))){.a{width:calc(100% - constant(safe-area-inset-left))}}', '.@supports (width:calc(100% - constant(safe-area-inset-left))){.a{width:calc(100% - constant(safe-area-inset-left))}}'));\ntest('should not break css variables that have \"calc\" in their names', testCss('a{transform: translateY(calc(-100% - var(--tooltip-calculated-offset)))}', 'a{transform: translateY(calc(-100% - var(--tooltip-calculated-offset)))}'));\ntest('should handle complex calculations (reduce-css-calc#45) (1)', testValue('calc(100% + (2 * 100px) - ((75.37% - 63.5px) - 900px))', 'calc(24.63% + 1163.5px)'));\ntest('should handle complex calculations (reduce-css-calc#45) (2)', testValue('calc(((((100% + (2 * 30px) + 63.5px) / 0.7537) - (100vw - 60px)) / 2) + 30px)', 'calc(66.33939% + 141.92915px - 50vw)'));\ntest('should handle advanced arithmetic (1)', testValue('calc(((75.37% - 63.5px) - 900px) + (2 * 100px))', 'calc(75.37% - 763.5px)'));\ntest('should handle advanced arithmetic (2)', testValue('calc((900px - (10% - 63.5px)) + (2 * 100px))', 'calc(1163.5px - 10%)'));\ntest('should handle nested calc statements (reduce-css-calc#49)', testValue('calc(calc(2.25rem + 2px) - 1px * 2)', '2.25rem'));\ntest('should throw an exception when attempting to divide by zero', testThrows('calc(500px/0)', 'calc(500px/0)', 'Cannot divide by zero'));\ntest('should throw an exception when attempting to divide by unit (#1)', testThrows('calc(500px/2px)', 'calc(500px/2px)', 'Cannot divide by \"px\", number expected'));\ntest('nested var (reduce-css-calc#50)', testValue('calc(var(--xxx, var(--yyy)) / 2)', 'calc(var(--xxx, var(--yyy))/2)'));\ntest('should not throw an exception when unknow function exist in calc', testValue('calc(unknown(#fff) - other-unknown(200px))', 'calc(unknown(#fff) - other-unknown(200px))'));\ntest('should not throw an exception when unknow function exist in calc (#1)', testValue('calc(unknown(#fff) * other-unknown(200px))', 'calc(unknown(#fff)*other-unknown(200px))'));\ntest('should not strip calc with single CSS custom variable', testValue('calc(var(--foo))', 'calc(var(--foo))'));\ntest('should strip unnecessary calc with single CSS custom variable', testValue('calc(calc(var(--foo)))', 'calc(var(--foo))'));\ntest('should not strip calc with single CSS custom variables and value', testValue('calc(var(--foo) + 10px)', 'calc(var(--foo) + 10px)'));\ntest('should reduce calc (uppercase)', testValue('CALC(1PX + 1PX)', '2PX'));\ntest('should reduce calc (uppercase) (#1)', testValue('CALC(VAR(--foo) + VAR(--bar))', 'CALC(VAR(--foo) + VAR(--bar))'));\ntest('should reduce calc (uppercase) (#2)', testValue('CALC( (1EM - CALC( 10PX + 1EM)) / 2)', '-5PX'));\ntest('should handle nested calc function (#1)', testValue('calc(calc(var(--foo) + var(--bar)) + var(--baz))', 'calc(var(--foo) + var(--bar) + var(--baz))'));\ntest('should handle nested calc function (#2)', testValue('calc(var(--foo) + calc(var(--bar) + var(--baz)))', 'calc(var(--foo) + var(--bar) + var(--baz))'));\ntest('should handle nested calc function (#3)', testValue('calc(calc(var(--foo) - var(--bar)) - var(--baz))', 'calc(var(--foo) - var(--bar) - var(--baz))'));\ntest('should handle nested calc function (#4)', testValue('calc(var(--foo) - calc(var(--bar) - var(--baz)))', 'calc(var(--foo) - var(--bar) + var(--baz))'));\ntest('should handle nested calc function (#5)', testValue('calc(calc(var(--foo) + var(--bar)) - var(--baz))', 'calc(var(--foo) + var(--bar) - var(--baz))'));\ntest('should handle nested calc function (#6)', testValue('calc(var(--foo) + calc(var(--bar) - var(--baz)))', 'calc(var(--foo) + var(--bar) - var(--baz))'));\ntest('should handle nested calc function (#7)', testValue('calc(calc(var(--foo) - var(--bar)) + var(--baz))', 'calc(var(--foo) - var(--bar) + var(--baz))'));\ntest('should handle nested calc function (#8)', testValue('calc(var(--foo) - calc(var(--bar) + var(--baz)))', 'calc(var(--foo) - var(--bar) - var(--baz))'));\ntest('should handle nested calc function (#9)', testValue('calc(calc(var(--foo) + var(--bar)) * var(--baz))', 'calc((var(--foo) + var(--bar))*var(--baz))'));\ntest('should handle nested calc function (#10)', testValue('calc(var(--foo) * calc(var(--bar) + var(--baz)))', 'calc(var(--foo)*(var(--bar) + var(--baz)))'));\ntest('should handle nested calc function (#11)', testValue('calc(calc(var(--foo) + var(--bar)) / var(--baz))', 'calc((var(--foo) + var(--bar))/var(--baz))'));\ntest('should handle nested calc function (#12)', testValue('calc(var(--foo) / calc(var(--bar) + var(--baz)))', 'calc(var(--foo)/(var(--bar) + var(--baz)))'));\ntest('should handle nested calc function (#13)', testValue('calc(100vh - 5rem - calc(10rem + 100px))', 'calc(100vh - 15rem - 100px)'));\ntest('should handle nested calc function (#14)', testValue('calc(100% - calc(10px + 2vw))', 'calc(100% - 10px - 2vw)'));\ntest('should handle nested calc function (#15)', testValue('calc(100% - calc(10px - 2vw))', 'calc(100% - 10px + 2vw)'));\ntest('should preserve division precedence', testValue('calc(100%/(var(--aspect-ratio)))', 'calc(100%/(var(--aspect-ratio)))'));\ntest('should preserve division precedence (2)', testValue(`calc(\n        (var(--fluid-screen) - ((var(--fluid-min-width) / 16) * 1rem)) /\n        ((var(--fluid-max-width) / 16) - (var(--fluid-min-width) / 16))\n    )`, 'calc((var(--fluid-screen) - ((var(--fluid-min-width)/16)*1rem))/(var(--fluid-max-width)/16 - var(--fluid-min-width)/16))'));\ntest('should preserve division precedence (3)', testValue('calc(1/(10/var(--dot-size)))', 'calc(1/(10/var(--dot-size)))'));\ntest('should correctly preserve parentheses', testValue('calc(1/((var(--a) - var(--b))/16))', 'calc(1/(var(--a) - var(--b))/16)'));\ntest('precision for calc', testValue('calc(100% / 3 * 3)', '100%'));\ntest('precision for nested calc', testValue('calc(calc(100% / 3) * 3)', '100%'));\ntest('plus sign', testValue('calc(+100px + +100px)', '200px'));\ntest('plus sign (#1)', testValue('calc(+100px - +100px)', '0px'));\ntest('plus sign (#2)', testValue('calc(200px * +1)', '200px'));\ntest('plus sign (#3)', testValue('calc(200px / +1)', '200px'));\ntest('minus sign', testValue('calc(-100px + -100px)', '-200px'));\ntest('minus sign (#2)', testValue('calc(-100px - -100px)', '0px'));\ntest('minus sign (#3)', testValue('calc(200px * -1)', '-200px'));\ntest('minus sign (#4)', testValue('calc(200px / -1)', '-200px'));\ntest('whitespace', testValue('calc( 100px + 100px )', '200px'));\ntest('whitespace (#1)', testValue('calc(\\t100px\\t+\\t100px\\t)', '200px'));\ntest('whitespace (#2)', testValue('calc(\\n100px\\n+\\n100px\\n)', '200px'));\ntest('whitespace (#4)', testValue('calc(\\r\\n100px\\r\\n+\\r\\n100px\\r\\n)', '200px'));\ntest('comments', testValue('calc(/*test*/100px/*test*/ + /*test*/100px/*test*/)', '200px'));\ntest('comments (#1)', testValue('calc(/*test*/100px/*test*/*/*test*/2/*test*/)', '200px'));\ntest('comments nested', testValue('calc(/*test*/100px + calc(/*test*/100px/*test*/ + /*test*/100px/*test*/))', '300px'));\ntest('exponent composed', testValue('calc(1.1e+1px + 1.1e+1px)', '22px'));\ntest('exponent composed (#1)', testValue('calc(10e+1px + 10e+1px)', '200px'));\ntest('exponent composed (#2)', testValue('calc(1.1e+10px + 1.1e+10px)', '22000000000px'));\ntest('exponent composed (#3)', testValue('calc(9e+1 * 1px)', '90px'));\ntest('exponent composed (#4)', testValue('calc(9e+1% + 10%)', '100%'));\ntest('exponent composed (uppercase)', testValue('calc(1.1E+1px + 1.1E+1px)', '22px'));\ntest('convert units', testValue('calc(1cm + 1px)', '1.02646cm'));\ntest('convert units (#1)', testValue('calc(1px + 1cm)', '38.79528px'));\ntest('convert units (#2)', testValue('calc(10Q + 10Q)', '20Q'));\ntest('convert units (#3)', testValue('calc(100.9q + 10px)', '111.48333q'));\ntest('convert units (#4)', testValue('calc(10px + 100.9q)', '105.33858px'));\ntest('convert units (#5)', testValue('calc(10cm + 1px)', '10.02646cm'));\ntest('convert units (#6)', testValue('calc(10mm + 1px)', '10.26458mm'));\ntest('convert units (#7)', testValue('calc(10px + 1q)', '10.94488px'));\ntest('convert units (#8)', testValue('calc(10cm + 1q)', '10.025cm'));\ntest('convert units (#9)', testValue('calc(10mm + 1q)', '10.25mm'));\ntest('convert units (#10)', testValue('calc(10in + 1q)', '10.00984in'));\ntest('convert units (#11)', testValue('calc(10pt + 1q)', '10.70866pt'));\ntest('convert units (#12)', testValue('calc(10pc + 1q)', '10.05906pc'));\ntest('convert units (#13)', testValue('calc(1q + 10px)', '11.58333q'));\ntest('convert units (#14)', testValue('calc(1q + 10cm)', '401q'));\ntest('convert units (#15)', testValue('calc(1q + 10mm)', '41q'));\ntest('convert units (#16)', testValue('calc(1q + 10in)', '1017q'));\ntest('convert units (#17)', testValue('calc(1q + 10pt)', '15.11111q'));\ntest('convert units (#18)', testValue('calc(1q + 10pc)', '170.33333q'));\ntest('unknown units', testValue('calc(1unknown + 2unknown)', 'calc(1unknown + 2unknown)'));\ntest('unknown units with known', testValue('calc(1unknown + 2px)', 'calc(1unknown + 2px)'));\ntest('unknown units with known (#1)', testValue('calc(1px + 2unknown)', 'calc(1px + 2unknown)'));\ntest('error with parsing', testThrows('calc(10pc + unknown)', 'calc(10pc + unknown)', 'Lexical error on line 1: Unrecognized text.\\n\\n  Erroneous area:\\n1: 10pc + unknown\\n^.........^'));\ntest.run();","map":{"version":3,"names":["test","require","assert","postcss","reduceCalc","postcssOpts","from","undefined","testValue","fixture","expected","opts","result","process","is","css","testCss","testThrows","warning","warnings","text","precision","preserve","warnWhenCannotResolve","selectors","mediaQueries","run"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/postcss-calc/src/__tests__/index.js"],"sourcesContent":["'use strict';\nconst { test } = require('uvu');\nconst assert = require('uvu/assert');\nconst postcss = require('postcss');\n\nconst reduceCalc = require('../index.js');\n\nconst postcssOpts = { from: undefined };\n\nfunction testValue(fixture, expected, opts = {}) {\n  fixture = `foo{bar:${fixture}}`;\n  expected = `foo{bar:${expected}}`;\n\n  return async () => {\n    const result = await postcss(reduceCalc(opts)).process(\n      fixture,\n      postcssOpts\n    );\n    assert.is(result.css, expected);\n  };\n}\n\nfunction testCss(fixture, expected, opts = {}) {\n  return async () => {\n    const result = await postcss(reduceCalc(opts)).process(\n      fixture,\n      postcssOpts\n    );\n    assert.is(result.css, expected);\n  };\n}\n\nfunction testThrows(fixture, expected, warning, opts = {}) {\n  fixture = `foo{bar:${fixture}}`;\n  expected = `foo{bar:${expected}}`;\n\n  return async () => {\n    const result = await postcss(reduceCalc(opts)).process(\n      fixture,\n      postcssOpts\n    );\n    const warnings = result.warnings();\n    assert.is(result.css, expected);\n    assert.is(warnings[0].text, warning);\n  };\n}\n\ntest('should reduce simple calc (1)', testValue('calc(1px + 1px)', '2px'));\n\ntest(\n  'should reduce simple calc (2)',\n  testValue('calc(1px + 1px);baz:calc(2px+3px)', '2px;baz:5px')\n);\n\ntest('should reduce simple calc (3)', testValue('calc(1rem * 1.5)', '1.5rem'));\n\ntest('should reduce simple calc (4)', testValue('calc(3em - 1em)', '2em'));\n\ntest('should reduce simple calc (5', testValue('calc(2ex / 2)', '1ex'));\n\ntest(\n  'should reduce simple calc (6)',\n  testValue('calc(50px - (20px - 30px))', '60px')\n);\n\ntest(\n  'should reduce simple calc (7)',\n  testValue('calc(100px - (100px - 100%))', '100%')\n);\n\ntest(\n  'should reduce simple calc (8)',\n  testValue('calc(100px + (100px - 100%))', 'calc(200px - 100%)')\n);\n\ntest(\n  'should reduce additions and subtractions (1)',\n  testValue('calc(100% - 10px + 20px)', 'calc(100% + 10px)')\n);\n\ntest(\n  'should reduce additions and subtractions (2)',\n  testValue('calc(100% + 10px - 20px)', 'calc(100% - 10px)')\n);\n\ntest(\n  'should reduce additions and subtractions (3)',\n  testValue('calc(1px - (2em + 3%))', 'calc(1px - 2em - 3%)')\n);\n\ntest(\n  'should reduce additions and subtractions (4)',\n  testValue('calc((100vw - 50em) / 2)', 'calc(50vw - 25em)')\n);\n\ntest(\n  'should reduce additions and subtractions (5)',\n  testValue('calc(10px - (100vw - 50em) / 2)', 'calc(10px - 50vw + 25em)')\n);\n\ntest(\n  'should reduce additions and subtractions (6)',\n  testValue('calc(1px - (2em + 4vh + 3%))', 'calc(1px - 2em - 4vh - 3%)')\n);\n\ntest(\n  'should reduce additions and subtractions (7)',\n  testValue(\n    'calc(0px - (24px - (var(--a) - var(--b)) / 2 + var(--c)))',\n    'calc(-24px + (var(--a) - var(--b))/2 - var(--c))'\n  )\n);\n\ntest(\n  'should reduce additions and subtractions (8)',\n  testValue('calc(1px + (2em + (3vh + 4px)))', 'calc(5px + 2em + 3vh)')\n);\n\ntest(\n  'should reduce additions and subtractions (9)',\n  testValue('calc(1px - (2em + 4px - 6vh) / 2)', 'calc(-1px - 1em + 3vh)')\n);\n\ntest(\n  'should reduce multiplication',\n  testValue('calc(((var(--a) + 4px) * 2) * 2)', 'calc((var(--a) + 4px)*2*2)')\n);\n\ntest(\n  'should reduce multiplication before reducing additions',\n  testValue(\n    'calc(((var(--a) + 4px) * 2) * 2 + 4px)',\n    'calc((var(--a) + 4px)*2*2 + 4px)'\n  )\n);\n\ntest(\n  'should reduce division',\n  testValue('calc(((var(--a) + 4px) / 2) / 2)', 'calc((var(--a) + 4px)/2/2)')\n);\n\ntest(\n  'should reduce division before reducing additions',\n  testValue(\n    'calc(((var(--a) + 4px) / 2) / 2 + 4px)',\n    'calc((var(--a) + 4px)/2/2 + 4px)'\n  )\n);\n\ntest(\n  'should ignore value surrounding calc function (1)',\n  testValue('a calc(1px + 1px)', 'a 2px')\n);\n\ntest(\n  'should ignore value surrounding calc function (2)',\n  testValue('calc(1px + 1px) a', '2px a')\n);\n\ntest(\n  'should ignore value surrounding calc function (3)',\n  testValue('a calc(1px + 1px) b', 'a 2px b')\n);\n\ntest(\n  'should ignore value surrounding calc function (4)',\n  testValue('a calc(1px + 1px) b calc(1em + 2em) c', 'a 2px b 3em c')\n);\n\ntest(\n  'should reduce nested calc',\n  testValue('calc(100% - calc(50% + 25px))', 'calc(50% - 25px)')\n);\n\ntest(\n  'should reduce vendor-prefixed nested calc',\n  testValue(\n    '-webkit-calc(100% - -webkit-calc(50% + 25px))',\n    '-webkit-calc(50% - 25px)'\n  )\n);\n\ntest('should reduce uppercase calc (1)', testValue('CALC(1px + 1px)', '2px'));\n\ntest(\n  'should reduce uppercase calc (2)',\n  testValue('CALC(1px + CALC(2px / 2))', '2px')\n);\n\ntest(\n  'should reduce uppercase calc (3)',\n  testValue('-WEBKIT-CALC(1px + 1px)', '2px')\n);\n\ntest(\n  'should reduce uppercase calc (4)',\n  testValue('-WEBKIT-CALC(1px + -WEBKIT-CALC(2px / 2))', '2px')\n);\n\ntest(\n  'should ignore calc with css variables (1)',\n  testValue('calc(var(--mouseX) * 1px)', 'calc(var(--mouseX)*1px)')\n);\n\ntest(\n  'should ignore calc with css variables (2)',\n  testValue(\n    'calc(10px - (100px * var(--mouseX)))',\n    'calc(10px - 100px*var(--mouseX))'\n  )\n);\n\ntest(\n  'should ignore calc with css variables (3)',\n  testValue(\n    'calc(10px - (100px + var(--mouseX)))',\n    'calc(-90px - var(--mouseX))'\n  )\n);\n\ntest(\n  'should ignore calc with css variables (4)',\n  testValue(\n    'calc(10px - (100px / var(--mouseX)))',\n    'calc(10px - 100px/var(--mouseX))'\n  )\n);\n\ntest(\n  'should ignore calc with css variables (5)',\n  testValue(\n    'calc(10px - (100px - var(--mouseX)))',\n    'calc(-90px + var(--mouseX))'\n  )\n);\n\ntest(\n  'should ignore calc with css variables (6)',\n  testValue('calc(var(--popupHeight) / 2)', 'calc(var(--popupHeight)/2)')\n);\n\ntest(\n  'should ignore calc with css variables (7)',\n  testValue(\n    'calc(var(--popupHeight) / 2 + var(--popupWidth) / 2)',\n    'calc(var(--popupHeight)/2 + var(--popupWidth)/2)'\n  )\n);\n\ntest(\n  'should reduce calc with newline characters',\n  testValue('calc(\\n1rem \\n* 2 \\n* 1.5)', '3rem')\n);\n\ntest(\n  'should preserve calc with incompatible units',\n  testValue('calc(100% + 1px)', 'calc(100% + 1px)')\n);\n\ntest(\n  'should parse fractions without leading zero',\n  testValue('calc(2rem - .14285em)', 'calc(2rem - 0.14285em)')\n);\n\ntest('should handle precision correctly (1)', testValue('calc(1/100)', '0.01'));\n\ntest(\n  'should handle precision correctly (2)',\n  testValue('calc(5/1000000)', '0.00001')\n);\n\ntest(\n  'should handle precision correctly (3)',\n  testValue('calc(5/1000000)', '0.000005', { precision: 6 })\n);\n\ntest(\n  'should reduce browser-prefixed calc (1)',\n  testValue('-webkit-calc(1px + 1px)', '2px')\n);\n\ntest(\n  'should reduce browser-prefixed calc (2)',\n  testValue('-moz-calc(1px + 1px)', '2px')\n);\n\ntest(\n  'should discard zero values (#2) (1)',\n  testValue('calc(100vw / 2 - 6px + 0px)', 'calc(50vw - 6px)')\n);\n\ntest(\n  'should discard zero values (#2) (2)',\n  testValue('calc(500px - 0px)', '500px')\n);\n\ntest(\n  'should not perform addition on unitless values (#3)',\n  testValue('calc(1px + 1)', 'calc(1px + 1)')\n);\n\ntest(\n  'should reduce consecutive substractions (#24) (1)',\n  testValue('calc(100% - 120px - 60px)', 'calc(100% - 180px)')\n);\n\ntest(\n  'should reduce consecutive substractions (#24) (2)',\n  testValue('calc(100% - 10px - 20px)', 'calc(100% - 30px)')\n);\n\ntest(\n  'should reduce mixed units of time (postcss-calc#33)',\n  testValue('calc(1s - 50ms)', '0.95s')\n);\n\ntest(\n  'should correctly reduce calc with mixed units (cssnano#211)',\n  testValue('calc(99.99% * 1/1 - 0rem)', '99.99%')\n);\n\ntest(\n  'should apply optimization (cssnano#320)',\n  testValue('calc(50% + (5em + 5%))', 'calc(55% + 5em)')\n);\n\ntest(\n  'should reduce substraction from zero',\n  testValue('calc( 0 - 10px)', '-10px')\n);\n\ntest(\n  'should reduce subtracted expression from zero',\n  testValue('calc( 0 - calc(1px + 1em) )', 'calc(-1px - 1em)')\n);\n\ntest(\n  'should reduce substracted expression from zero (1)',\n  testValue('calc( 0 - (100vw - 10px) / 2 )', 'calc(-50vw + 5px)')\n);\n\ntest(\n  'should reduce substracted expression from zero (2)',\n  testValue('calc( 0px - (100vw - 10px))', 'calc(10px - 100vw)')\n);\n\ntest(\n  'should reduce substracted expression from zero (3)',\n  testValue('calc( 0px - (100vw - 10px) * 2 )', 'calc(20px - 200vw)')\n);\n\ntest(\n  'should reduce substracted expression from zero (4)',\n  testValue('calc( 0px - (100vw + 10px))', 'calc(-10px - 100vw)')\n);\n\ntest(\n  'should reduce substracted expression from zero (css-variable)',\n  testValue(\n    'calc( 0px - (var(--foo, 4px) / 2))',\n    'calc(0px - var(--foo, 4px)/2)'\n  )\n);\n\ntest(\n  'should reduce nested expression',\n  testValue('calc( (1em - calc( 10px + 1em)) / 2)', '-5px')\n);\n\ntest(\n  'should skip constant function',\n  testValue(\n    'calc(constant(safe-area-inset-left))',\n    'calc(constant(safe-area-inset-left))'\n  )\n);\n\ntest(\n  'should skip env function',\n  testValue(\n    'calc(env(safe-area-inset-left))',\n    'calc(env(safe-area-inset-left))'\n  )\n);\n\ntest(\n  'should skip env function (#1)',\n  testValue(\n    'calc(env(safe-area-inset-left, 50px 20px))',\n    'calc(env(safe-area-inset-left, 50px 20px))'\n  )\n);\n\ntest(\n  'should skip unknown function',\n  testValue(\n    'calc(unknown(safe-area-inset-left))',\n    'calc(unknown(safe-area-inset-left))'\n  )\n);\n\ntest(\n  'should preserve the original declaration when `preserve` option is set to true',\n  testCss('foo{bar:calc(1rem * 1.5)}', 'foo{bar:1.5rem;bar:calc(1rem * 1.5)}', {\n    preserve: true,\n  })\n);\n\ntest(\n  'should not yield warnings when nothing is wrong',\n  testValue('calc(500px - 0px)', '500px', { warnWhenCannotResolve: true })\n);\n\ntest(\n  'should warn when calc expression cannot be reduced to a single value',\n  testValue('calc(100% + 1px)', 'calc(100% + 1px)', {\n    warnWhenCannotResolve: true,\n  })\n);\n\ntest(\n  'should reduce mixed units of time (#33)',\n  testValue('calc(1s - 50ms)', '0.95s')\n);\n\ntest(\n  'should not parse variables as calc expressions (#35)',\n  testCss(\n    'foo:nth-child(2n + $var-calc){}',\n    'foo:nth-child(2n + $var-calc){}',\n    { selectors: true }\n  )\n);\n\ntest(\n  'should apply algebraic reduction (cssnano#319)',\n  testValue('calc((100px - 1em) + (-50px + 1em))', '50px')\n);\n\ntest(\n  'should discard zero values (reduce-css-calc#2) (1)',\n  testValue('calc(100vw / 2 - 6px + 0px)', 'calc(50vw - 6px)')\n);\n\ntest(\n  'should discard zero values (reduce-css-calc#2) (2)',\n  testValue('calc(500px - 0px)', '500px')\n);\n\ntest(\n  'should not perform addition on unitless values (reduce-css-calc#3)',\n  testValue('calc(1px + 1)', 'calc(1px + 1)')\n);\n\ntest(\n  'should return the same and not thrown an exception for attribute selectors without a value',\n  testCss('button[disabled]{}', 'button[disabled]{}', { selectors: true })\n);\n\ntest(\n  'should ignore reducing custom property',\n  testCss(\n    ':root { --foo: calc(var(--bar) / 8); }',\n    ':root { --foo: calc(var(--bar)/8); }'\n  )\n);\n\ntest(\n  'should ignore media queries',\n  testCss(\n    '@media (min-width:calc(10px+10px)){}',\n    '@media (min-width:calc(10px+10px)){}'\n  )\n);\n\ntest(\n  'should reduce calc in media queries when `mediaQueries` option is set to true',\n  testCss('@media (min-width:calc(10px+10px)){}', '@media (min-width:20px){}', {\n    mediaQueries: true,\n  })\n);\n\ntest(\n  'should ignore selectors (1)',\n  testCss('div[data-size=\"calc(3*3)\"]{}', 'div[data-size=\"calc(3*3)\"]{}')\n);\n\ntest(\n  'should ignore selectors (2)',\n  testCss('div:nth-child(2n + calc(3*3)){}', 'div:nth-child(2n + calc(3*3)){}')\n);\n\ntest(\n  'should reduce calc in selectors when `selectors` option is set to true (1)',\n  testCss('div[data-size=\"calc(3*3)\"]{}', 'div[data-size=\"9\"]{}', {\n    selectors: true,\n  })\n);\n\ntest(\n  'should reduce calc in selectors when `selectors` option is set to true (2)',\n  testCss('div:nth-child(2n + calc(3*3)){}', 'div:nth-child(2n + 9){}', {\n    selectors: true,\n  })\n);\n\ntest(\n  'should not reduce 100% to 1 (reduce-css-calc#44)',\n  testCss(\n    '.@supports (width:calc(100% - constant(safe-area-inset-left))){.a{width:calc(100% - constant(safe-area-inset-left))}}',\n    '.@supports (width:calc(100% - constant(safe-area-inset-left))){.a{width:calc(100% - constant(safe-area-inset-left))}}'\n  )\n);\n\ntest(\n  'should not break css variables that have \"calc\" in their names',\n  testCss(\n    'a{transform: translateY(calc(-100% - var(--tooltip-calculated-offset)))}',\n    'a{transform: translateY(calc(-100% - var(--tooltip-calculated-offset)))}'\n  )\n);\n\ntest(\n  'should handle complex calculations (reduce-css-calc#45) (1)',\n  testValue(\n    'calc(100% + (2 * 100px) - ((75.37% - 63.5px) - 900px))',\n    'calc(24.63% + 1163.5px)'\n  )\n);\n\ntest(\n  'should handle complex calculations (reduce-css-calc#45) (2)',\n  testValue(\n    'calc(((((100% + (2 * 30px) + 63.5px) / 0.7537) - (100vw - 60px)) / 2) + 30px)',\n    'calc(66.33939% + 141.92915px - 50vw)'\n  )\n);\n\ntest(\n  'should handle advanced arithmetic (1)',\n  testValue(\n    'calc(((75.37% - 63.5px) - 900px) + (2 * 100px))',\n    'calc(75.37% - 763.5px)'\n  )\n);\n\ntest(\n  'should handle advanced arithmetic (2)',\n  testValue(\n    'calc((900px - (10% - 63.5px)) + (2 * 100px))',\n    'calc(1163.5px - 10%)'\n  )\n);\n\ntest(\n  'should handle nested calc statements (reduce-css-calc#49)',\n  testValue('calc(calc(2.25rem + 2px) - 1px * 2)', '2.25rem')\n);\n\ntest(\n  'should throw an exception when attempting to divide by zero',\n  testThrows('calc(500px/0)', 'calc(500px/0)', 'Cannot divide by zero')\n);\n\ntest(\n  'should throw an exception when attempting to divide by unit (#1)',\n  testThrows(\n    'calc(500px/2px)',\n    'calc(500px/2px)',\n    'Cannot divide by \"px\", number expected'\n  )\n);\n\ntest(\n  'nested var (reduce-css-calc#50)',\n  testValue(\n    'calc(var(--xxx, var(--yyy)) / 2)',\n    'calc(var(--xxx, var(--yyy))/2)'\n  )\n);\n\ntest(\n  'should not throw an exception when unknow function exist in calc',\n  testValue(\n    'calc(unknown(#fff) - other-unknown(200px))',\n    'calc(unknown(#fff) - other-unknown(200px))'\n  )\n);\n\ntest(\n  'should not throw an exception when unknow function exist in calc (#1)',\n  testValue(\n    'calc(unknown(#fff) * other-unknown(200px))',\n    'calc(unknown(#fff)*other-unknown(200px))'\n  )\n);\n\ntest(\n  'should not strip calc with single CSS custom variable',\n  testValue('calc(var(--foo))', 'calc(var(--foo))')\n);\n\ntest(\n  'should strip unnecessary calc with single CSS custom variable',\n  testValue('calc(calc(var(--foo)))', 'calc(var(--foo))')\n);\n\ntest(\n  'should not strip calc with single CSS custom variables and value',\n  testValue('calc(var(--foo) + 10px)', 'calc(var(--foo) + 10px)')\n);\n\ntest('should reduce calc (uppercase)', testValue('CALC(1PX + 1PX)', '2PX'));\n\ntest(\n  'should reduce calc (uppercase) (#1)',\n  testValue('CALC(VAR(--foo) + VAR(--bar))', 'CALC(VAR(--foo) + VAR(--bar))')\n);\n\ntest(\n  'should reduce calc (uppercase) (#2)',\n  testValue('CALC( (1EM - CALC( 10PX + 1EM)) / 2)', '-5PX')\n);\n\ntest(\n  'should handle nested calc function (#1)',\n  testValue(\n    'calc(calc(var(--foo) + var(--bar)) + var(--baz))',\n    'calc(var(--foo) + var(--bar) + var(--baz))'\n  )\n);\n\ntest(\n  'should handle nested calc function (#2)',\n  testValue(\n    'calc(var(--foo) + calc(var(--bar) + var(--baz)))',\n    'calc(var(--foo) + var(--bar) + var(--baz))'\n  )\n);\n\ntest(\n  'should handle nested calc function (#3)',\n  testValue(\n    'calc(calc(var(--foo) - var(--bar)) - var(--baz))',\n    'calc(var(--foo) - var(--bar) - var(--baz))'\n  )\n);\n\ntest(\n  'should handle nested calc function (#4)',\n  testValue(\n    'calc(var(--foo) - calc(var(--bar) - var(--baz)))',\n    'calc(var(--foo) - var(--bar) + var(--baz))'\n  )\n);\n\ntest(\n  'should handle nested calc function (#5)',\n  testValue(\n    'calc(calc(var(--foo) + var(--bar)) - var(--baz))',\n    'calc(var(--foo) + var(--bar) - var(--baz))'\n  )\n);\n\ntest(\n  'should handle nested calc function (#6)',\n  testValue(\n    'calc(var(--foo) + calc(var(--bar) - var(--baz)))',\n    'calc(var(--foo) + var(--bar) - var(--baz))'\n  )\n);\n\ntest(\n  'should handle nested calc function (#7)',\n  testValue(\n    'calc(calc(var(--foo) - var(--bar)) + var(--baz))',\n    'calc(var(--foo) - var(--bar) + var(--baz))'\n  )\n);\n\ntest(\n  'should handle nested calc function (#8)',\n  testValue(\n    'calc(var(--foo) - calc(var(--bar) + var(--baz)))',\n    'calc(var(--foo) - var(--bar) - var(--baz))'\n  )\n);\n\ntest(\n  'should handle nested calc function (#9)',\n  testValue(\n    'calc(calc(var(--foo) + var(--bar)) * var(--baz))',\n    'calc((var(--foo) + var(--bar))*var(--baz))'\n  )\n);\n\ntest(\n  'should handle nested calc function (#10)',\n  testValue(\n    'calc(var(--foo) * calc(var(--bar) + var(--baz)))',\n    'calc(var(--foo)*(var(--bar) + var(--baz)))'\n  )\n);\n\ntest(\n  'should handle nested calc function (#11)',\n  testValue(\n    'calc(calc(var(--foo) + var(--bar)) / var(--baz))',\n    'calc((var(--foo) + var(--bar))/var(--baz))'\n  )\n);\n\ntest(\n  'should handle nested calc function (#12)',\n  testValue(\n    'calc(var(--foo) / calc(var(--bar) + var(--baz)))',\n    'calc(var(--foo)/(var(--bar) + var(--baz)))'\n  )\n);\n\ntest(\n  'should handle nested calc function (#13)',\n  testValue(\n    'calc(100vh - 5rem - calc(10rem + 100px))',\n    'calc(100vh - 15rem - 100px)'\n  )\n);\n\ntest(\n  'should handle nested calc function (#14)',\n  testValue('calc(100% - calc(10px + 2vw))', 'calc(100% - 10px - 2vw)')\n);\n\ntest(\n  'should handle nested calc function (#15)',\n  testValue('calc(100% - calc(10px - 2vw))', 'calc(100% - 10px + 2vw)')\n);\n\ntest(\n  'should preserve division precedence',\n  testValue(\n    'calc(100%/(var(--aspect-ratio)))',\n    'calc(100%/(var(--aspect-ratio)))'\n  )\n);\n\ntest(\n  'should preserve division precedence (2)',\n  testValue(\n    `calc(\n        (var(--fluid-screen) - ((var(--fluid-min-width) / 16) * 1rem)) /\n        ((var(--fluid-max-width) / 16) - (var(--fluid-min-width) / 16))\n    )`,\n    'calc((var(--fluid-screen) - ((var(--fluid-min-width)/16)*1rem))/(var(--fluid-max-width)/16 - var(--fluid-min-width)/16))'\n  )\n);\n\ntest(\n  'should preserve division precedence (3)',\n  testValue('calc(1/(10/var(--dot-size)))', 'calc(1/(10/var(--dot-size)))')\n);\n\ntest(\n  'should correctly preserve parentheses',\n  testValue(\n    'calc(1/((var(--a) - var(--b))/16))',\n    'calc(1/(var(--a) - var(--b))/16)'\n  )\n);\n\ntest('precision for calc', testValue('calc(100% / 3 * 3)', '100%'));\n\ntest(\n  'precision for nested calc',\n  testValue('calc(calc(100% / 3) * 3)', '100%')\n);\n\ntest('plus sign', testValue('calc(+100px + +100px)', '200px'));\n\ntest('plus sign (#1)', testValue('calc(+100px - +100px)', '0px'));\n\ntest('plus sign (#2)', testValue('calc(200px * +1)', '200px'));\n\ntest('plus sign (#3)', testValue('calc(200px / +1)', '200px'));\n\ntest('minus sign', testValue('calc(-100px + -100px)', '-200px'));\n\ntest('minus sign (#2)', testValue('calc(-100px - -100px)', '0px'));\n\ntest('minus sign (#3)', testValue('calc(200px * -1)', '-200px'));\n\ntest('minus sign (#4)', testValue('calc(200px / -1)', '-200px'));\n\ntest('whitespace', testValue('calc( 100px + 100px )', '200px'));\n\ntest('whitespace (#1)', testValue('calc(\\t100px\\t+\\t100px\\t)', '200px'));\n\ntest('whitespace (#2)', testValue('calc(\\n100px\\n+\\n100px\\n)', '200px'));\n\ntest(\n  'whitespace (#4)',\n  testValue('calc(\\r\\n100px\\r\\n+\\r\\n100px\\r\\n)', '200px')\n);\n\ntest(\n  'comments',\n  testValue('calc(/*test*/100px/*test*/ + /*test*/100px/*test*/)', '200px')\n);\n\ntest(\n  'comments (#1)',\n  testValue('calc(/*test*/100px/*test*/*/*test*/2/*test*/)', '200px')\n);\n\ntest(\n  'comments nested',\n  testValue(\n    'calc(/*test*/100px + calc(/*test*/100px/*test*/ + /*test*/100px/*test*/))',\n    '300px'\n  )\n);\n\ntest('exponent composed', testValue('calc(1.1e+1px + 1.1e+1px)', '22px'));\n\ntest('exponent composed (#1)', testValue('calc(10e+1px + 10e+1px)', '200px'));\n\ntest(\n  'exponent composed (#2)',\n  testValue('calc(1.1e+10px + 1.1e+10px)', '22000000000px')\n);\n\ntest('exponent composed (#3)', testValue('calc(9e+1 * 1px)', '90px'));\n\ntest('exponent composed (#4)', testValue('calc(9e+1% + 10%)', '100%'));\n\ntest(\n  'exponent composed (uppercase)',\n  testValue('calc(1.1E+1px + 1.1E+1px)', '22px')\n);\n\ntest('convert units', testValue('calc(1cm + 1px)', '1.02646cm'));\n\ntest('convert units (#1)', testValue('calc(1px + 1cm)', '38.79528px'));\n\ntest('convert units (#2)', testValue('calc(10Q + 10Q)', '20Q'));\n\ntest('convert units (#3)', testValue('calc(100.9q + 10px)', '111.48333q'));\n\ntest('convert units (#4)', testValue('calc(10px + 100.9q)', '105.33858px'));\n\ntest('convert units (#5)', testValue('calc(10cm + 1px)', '10.02646cm'));\n\ntest('convert units (#6)', testValue('calc(10mm + 1px)', '10.26458mm'));\n\ntest('convert units (#7)', testValue('calc(10px + 1q)', '10.94488px'));\n\ntest('convert units (#8)', testValue('calc(10cm + 1q)', '10.025cm'));\n\ntest('convert units (#9)', testValue('calc(10mm + 1q)', '10.25mm'));\n\ntest('convert units (#10)', testValue('calc(10in + 1q)', '10.00984in'));\n\ntest('convert units (#11)', testValue('calc(10pt + 1q)', '10.70866pt'));\n\ntest('convert units (#12)', testValue('calc(10pc + 1q)', '10.05906pc'));\n\ntest('convert units (#13)', testValue('calc(1q + 10px)', '11.58333q'));\n\ntest('convert units (#14)', testValue('calc(1q + 10cm)', '401q'));\n\ntest('convert units (#15)', testValue('calc(1q + 10mm)', '41q'));\n\ntest('convert units (#16)', testValue('calc(1q + 10in)', '1017q'));\n\ntest('convert units (#17)', testValue('calc(1q + 10pt)', '15.11111q'));\n\ntest('convert units (#18)', testValue('calc(1q + 10pc)', '170.33333q'));\n\ntest(\n  'unknown units',\n  testValue('calc(1unknown + 2unknown)', 'calc(1unknown + 2unknown)')\n);\n\ntest(\n  'unknown units with known',\n  testValue('calc(1unknown + 2px)', 'calc(1unknown + 2px)')\n);\n\ntest(\n  'unknown units with known (#1)',\n  testValue('calc(1px + 2unknown)', 'calc(1px + 2unknown)')\n);\n\ntest(\n  'error with parsing',\n  testThrows(\n    'calc(10pc + unknown)',\n    'calc(10pc + unknown)',\n    'Lexical error on line 1: Unrecognized text.\\n\\n  Erroneous area:\\n1: 10pc + unknown\\n^.........^'\n  )\n);\n\ntest.run();\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}