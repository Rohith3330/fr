{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getFindByQueryVariant = exports.WAIT_METHODS = exports.RULE_NAME = void 0;\n\nconst utils_1 = require(\"@typescript-eslint/utils\");\n\nconst create_testing_library_rule_1 = require(\"../create-testing-library-rule\");\n\nconst node_utils_1 = require(\"../node-utils\");\n\nexports.RULE_NAME = 'prefer-find-by';\nexports.WAIT_METHODS = ['waitFor', 'waitForElement', 'wait'];\n\nfunction getFindByQueryVariant(queryMethod) {\n  return queryMethod.includes('All') ? 'findAllBy' : 'findBy';\n}\n\nexports.getFindByQueryVariant = getFindByQueryVariant;\n\nfunction findRenderDefinitionDeclaration(scope, query) {\n  var _a;\n\n  if (!scope) {\n    return null;\n  }\n\n  const variable = scope.variables.find(v => v.name === query);\n\n  if (variable) {\n    return (_a = variable.defs.map(_ref => {\n      let {\n        name\n      } = _ref;\n      return name;\n    }).filter(utils_1.ASTUtils.isIdentifier).find(_ref2 => {\n      let {\n        name\n      } = _ref2;\n      return name === query;\n    })) !== null && _a !== void 0 ? _a : null;\n  }\n\n  return findRenderDefinitionDeclaration(scope.upper, query);\n}\n\nexports.default = (0, create_testing_library_rule_1.createTestingLibraryRule)({\n  name: exports.RULE_NAME,\n  meta: {\n    type: 'suggestion',\n    docs: {\n      description: 'Suggest using `find(All)By*` query instead of `waitFor` + `get(All)By*` to wait for elements',\n      recommendedConfig: {\n        dom: 'error',\n        angular: 'error',\n        react: 'error',\n        vue: 'error',\n        marko: 'error'\n      }\n    },\n    messages: {\n      preferFindBy: 'Prefer `{{queryVariant}}{{queryMethod}}` query over using `{{waitForMethodName}}` + `{{prevQuery}}`'\n    },\n    fixable: 'code',\n    schema: []\n  },\n  defaultOptions: [],\n\n  create(context, _, helpers) {\n    const sourceCode = context.getSourceCode();\n\n    function reportInvalidUsage(node, replacementParams) {\n      const {\n        queryMethod,\n        queryVariant,\n        prevQuery,\n        waitForMethodName,\n        fix\n      } = replacementParams;\n      context.report({\n        node,\n        messageId: 'preferFindBy',\n        data: {\n          queryVariant,\n          queryMethod,\n          prevQuery,\n          waitForMethodName\n        },\n        fix\n      });\n    }\n\n    function getWrongQueryNameInAssertion(node) {\n      if (!(0, node_utils_1.isCallExpression)(node.body) || !(0, node_utils_1.isMemberExpression)(node.body.callee)) {\n        return null;\n      }\n\n      if ((0, node_utils_1.isCallExpression)(node.body.callee.object) && (0, node_utils_1.isCallExpression)(node.body.callee.object.arguments[0]) && utils_1.ASTUtils.isIdentifier(node.body.callee.object.arguments[0].callee)) {\n        return node.body.callee.object.arguments[0].callee.name;\n      }\n\n      if (!utils_1.ASTUtils.isIdentifier(node.body.callee.property)) {\n        return null;\n      }\n\n      if ((0, node_utils_1.isCallExpression)(node.body.callee.object) && (0, node_utils_1.isCallExpression)(node.body.callee.object.arguments[0]) && (0, node_utils_1.isMemberExpression)(node.body.callee.object.arguments[0].callee) && utils_1.ASTUtils.isIdentifier(node.body.callee.object.arguments[0].callee.property)) {\n        return node.body.callee.object.arguments[0].callee.property.name;\n      }\n\n      if ((0, node_utils_1.isMemberExpression)(node.body.callee.object) && (0, node_utils_1.isCallExpression)(node.body.callee.object.object) && (0, node_utils_1.isCallExpression)(node.body.callee.object.object.arguments[0]) && (0, node_utils_1.isMemberExpression)(node.body.callee.object.object.arguments[0].callee) && utils_1.ASTUtils.isIdentifier(node.body.callee.object.object.arguments[0].callee.property)) {\n        return node.body.callee.object.object.arguments[0].callee.property.name;\n      }\n\n      if ((0, node_utils_1.isMemberExpression)(node.body.callee.object) && (0, node_utils_1.isCallExpression)(node.body.callee.object.object) && (0, node_utils_1.isCallExpression)(node.body.callee.object.object.arguments[0]) && utils_1.ASTUtils.isIdentifier(node.body.callee.object.object.arguments[0].callee)) {\n        return node.body.callee.object.object.arguments[0].callee.name;\n      }\n\n      return node.body.callee.property.name;\n    }\n\n    function getWrongQueryName(node) {\n      if (!(0, node_utils_1.isCallExpression)(node.body)) {\n        return null;\n      }\n\n      if (utils_1.ASTUtils.isIdentifier(node.body.callee) && helpers.isSyncQuery(node.body.callee)) {\n        return node.body.callee.name;\n      }\n\n      return getWrongQueryNameInAssertion(node);\n    }\n\n    function getCaller(node) {\n      if (!(0, node_utils_1.isCallExpression)(node.body) || !(0, node_utils_1.isMemberExpression)(node.body.callee)) {\n        return null;\n      }\n\n      if (utils_1.ASTUtils.isIdentifier(node.body.callee.object)) {\n        return node.body.callee.object.name;\n      }\n\n      if ((0, node_utils_1.isCallExpression)(node.body.callee.object) && utils_1.ASTUtils.isIdentifier(node.body.callee.object.callee) && (0, node_utils_1.isCallExpression)(node.body.callee.object.arguments[0]) && (0, node_utils_1.isMemberExpression)(node.body.callee.object.arguments[0].callee) && utils_1.ASTUtils.isIdentifier(node.body.callee.object.arguments[0].callee.object)) {\n        return node.body.callee.object.arguments[0].callee.object.name;\n      }\n\n      if ((0, node_utils_1.isMemberExpression)(node.body.callee.object) && (0, node_utils_1.isCallExpression)(node.body.callee.object.object) && (0, node_utils_1.isCallExpression)(node.body.callee.object.object.arguments[0]) && (0, node_utils_1.isMemberExpression)(node.body.callee.object.object.arguments[0].callee) && utils_1.ASTUtils.isIdentifier(node.body.callee.object.object.arguments[0].callee.object)) {\n        return node.body.callee.object.object.arguments[0].callee.object.name;\n      }\n\n      return null;\n    }\n\n    function isSyncQuery(node) {\n      if (!(0, node_utils_1.isCallExpression)(node.body)) {\n        return false;\n      }\n\n      const isQuery = utils_1.ASTUtils.isIdentifier(node.body.callee) && helpers.isSyncQuery(node.body.callee);\n      const isWrappedInPresenceAssert = (0, node_utils_1.isMemberExpression)(node.body.callee) && (0, node_utils_1.isCallExpression)(node.body.callee.object) && (0, node_utils_1.isCallExpression)(node.body.callee.object.arguments[0]) && utils_1.ASTUtils.isIdentifier(node.body.callee.object.arguments[0].callee) && helpers.isSyncQuery(node.body.callee.object.arguments[0].callee) && helpers.isPresenceAssert(node.body.callee);\n      const isWrappedInNegatedPresenceAssert = (0, node_utils_1.isMemberExpression)(node.body.callee) && (0, node_utils_1.isMemberExpression)(node.body.callee.object) && (0, node_utils_1.isCallExpression)(node.body.callee.object.object) && (0, node_utils_1.isCallExpression)(node.body.callee.object.object.arguments[0]) && utils_1.ASTUtils.isIdentifier(node.body.callee.object.object.arguments[0].callee) && helpers.isSyncQuery(node.body.callee.object.object.arguments[0].callee) && helpers.isPresenceAssert(node.body.callee.object);\n      return isQuery || isWrappedInPresenceAssert || isWrappedInNegatedPresenceAssert;\n    }\n\n    function isScreenSyncQuery(node) {\n      if (!(0, node_utils_1.isArrowFunctionExpression)(node) || !(0, node_utils_1.isCallExpression)(node.body)) {\n        return false;\n      }\n\n      if (!(0, node_utils_1.isMemberExpression)(node.body.callee) || !utils_1.ASTUtils.isIdentifier(node.body.callee.property)) {\n        return false;\n      }\n\n      if (!utils_1.ASTUtils.isIdentifier(node.body.callee.object) && !(0, node_utils_1.isCallExpression)(node.body.callee.object) && !(0, node_utils_1.isMemberExpression)(node.body.callee.object)) {\n        return false;\n      }\n\n      const isWrappedInPresenceAssert = helpers.isPresenceAssert(node.body.callee) && (0, node_utils_1.isCallExpression)(node.body.callee.object) && (0, node_utils_1.isCallExpression)(node.body.callee.object.arguments[0]) && (0, node_utils_1.isMemberExpression)(node.body.callee.object.arguments[0].callee) && utils_1.ASTUtils.isIdentifier(node.body.callee.object.arguments[0].callee.object);\n      const isWrappedInNegatedPresenceAssert = (0, node_utils_1.isMemberExpression)(node.body.callee.object) && helpers.isPresenceAssert(node.body.callee.object) && (0, node_utils_1.isCallExpression)(node.body.callee.object.object) && (0, node_utils_1.isCallExpression)(node.body.callee.object.object.arguments[0]) && (0, node_utils_1.isMemberExpression)(node.body.callee.object.object.arguments[0].callee);\n      return helpers.isSyncQuery(node.body.callee.property) || isWrappedInPresenceAssert || isWrappedInNegatedPresenceAssert;\n    }\n\n    function getQueryArguments(node) {\n      if ((0, node_utils_1.isMemberExpression)(node.callee) && (0, node_utils_1.isCallExpression)(node.callee.object) && (0, node_utils_1.isCallExpression)(node.callee.object.arguments[0])) {\n        return node.callee.object.arguments[0].arguments;\n      }\n\n      if ((0, node_utils_1.isMemberExpression)(node.callee) && (0, node_utils_1.isMemberExpression)(node.callee.object) && (0, node_utils_1.isCallExpression)(node.callee.object.object) && (0, node_utils_1.isCallExpression)(node.callee.object.object.arguments[0])) {\n        return node.callee.object.object.arguments[0].arguments;\n      }\n\n      return node.arguments;\n    }\n\n    return {\n      'AwaitExpression > CallExpression'(node) {\n        if (!utils_1.ASTUtils.isIdentifier(node.callee) || !helpers.isAsyncUtil(node.callee, exports.WAIT_METHODS)) {\n          return;\n        }\n\n        const argument = node.arguments[0];\n\n        if (!(0, node_utils_1.isArrowFunctionExpression)(argument) || !(0, node_utils_1.isCallExpression)(argument.body)) {\n          return;\n        }\n\n        const waitForMethodName = node.callee.name;\n\n        if (isScreenSyncQuery(argument)) {\n          const caller = getCaller(argument);\n\n          if (!caller) {\n            return;\n          }\n\n          const fullQueryMethod = getWrongQueryName(argument);\n\n          if (!fullQueryMethod) {\n            return;\n          }\n\n          const queryVariant = getFindByQueryVariant(fullQueryMethod);\n          const callArguments = getQueryArguments(argument.body);\n          const queryMethod = fullQueryMethod.split('By')[1];\n\n          if (!queryMethod) {\n            return;\n          }\n\n          reportInvalidUsage(node, {\n            queryMethod,\n            queryVariant,\n            prevQuery: fullQueryMethod,\n            waitForMethodName,\n\n            fix(fixer) {\n              const property = argument.body.callee.property;\n\n              if (helpers.isCustomQuery(property)) {\n                return null;\n              }\n\n              const newCode = `${caller}.${queryVariant}${queryMethod}(${callArguments.map(callArgNode => sourceCode.getText(callArgNode)).join(', ')})`;\n              return fixer.replaceText(node, newCode);\n            }\n\n          });\n          return;\n        }\n\n        if (!isSyncQuery(argument)) {\n          return;\n        }\n\n        const fullQueryMethod = getWrongQueryName(argument);\n\n        if (!fullQueryMethod) {\n          return;\n        }\n\n        const queryMethod = fullQueryMethod.split('By')[1];\n        const queryVariant = getFindByQueryVariant(fullQueryMethod);\n        const callArguments = getQueryArguments(argument.body);\n        reportInvalidUsage(node, {\n          queryMethod,\n          queryVariant,\n          prevQuery: fullQueryMethod,\n          waitForMethodName,\n\n          fix(fixer) {\n            if (helpers.isCustomQuery(argument.body.callee)) {\n              return null;\n            }\n\n            const findByMethod = `${queryVariant}${queryMethod}`;\n            const allFixes = [];\n            const newCode = `${findByMethod}(${callArguments.map(callArgNode => sourceCode.getText(callArgNode)).join(', ')})`;\n            allFixes.push(fixer.replaceText(node, newCode));\n            const definition = findRenderDefinitionDeclaration(context.getScope(), fullQueryMethod);\n\n            if (!definition) {\n              return allFixes;\n            }\n\n            if (definition.parent && (0, node_utils_1.isObjectPattern)(definition.parent.parent)) {\n              const allVariableDeclarations = definition.parent.parent;\n\n              if (allVariableDeclarations.properties.some(p => (0, node_utils_1.isProperty)(p) && utils_1.ASTUtils.isIdentifier(p.key) && p.key.name === findByMethod)) {\n                return allFixes;\n              }\n\n              const textDestructuring = sourceCode.getText(allVariableDeclarations);\n              const text = textDestructuring.replace(/(\\s*})$/, `, ${findByMethod}$1`);\n              allFixes.push(fixer.replaceText(allVariableDeclarations, text));\n            }\n\n            return allFixes;\n          }\n\n        });\n      }\n\n    };\n  }\n\n});","map":{"version":3,"names":["Object","defineProperty","exports","value","getFindByQueryVariant","WAIT_METHODS","RULE_NAME","utils_1","require","create_testing_library_rule_1","node_utils_1","queryMethod","includes","findRenderDefinitionDeclaration","scope","query","_a","variable","variables","find","v","name","defs","map","filter","ASTUtils","isIdentifier","upper","default","createTestingLibraryRule","meta","type","docs","description","recommendedConfig","dom","angular","react","vue","marko","messages","preferFindBy","fixable","schema","defaultOptions","create","context","_","helpers","sourceCode","getSourceCode","reportInvalidUsage","node","replacementParams","queryVariant","prevQuery","waitForMethodName","fix","report","messageId","data","getWrongQueryNameInAssertion","isCallExpression","body","isMemberExpression","callee","object","arguments","property","getWrongQueryName","isSyncQuery","getCaller","isQuery","isWrappedInPresenceAssert","isPresenceAssert","isWrappedInNegatedPresenceAssert","isScreenSyncQuery","isArrowFunctionExpression","getQueryArguments","isAsyncUtil","argument","caller","fullQueryMethod","callArguments","split","fixer","isCustomQuery","newCode","callArgNode","getText","join","replaceText","findByMethod","allFixes","push","definition","getScope","parent","isObjectPattern","allVariableDeclarations","properties","some","p","isProperty","key","textDestructuring","text","replace"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/eslint-plugin-testing-library/rules/prefer-find-by.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getFindByQueryVariant = exports.WAIT_METHODS = exports.RULE_NAME = void 0;\nconst utils_1 = require(\"@typescript-eslint/utils\");\nconst create_testing_library_rule_1 = require(\"../create-testing-library-rule\");\nconst node_utils_1 = require(\"../node-utils\");\nexports.RULE_NAME = 'prefer-find-by';\nexports.WAIT_METHODS = ['waitFor', 'waitForElement', 'wait'];\nfunction getFindByQueryVariant(queryMethod) {\n    return queryMethod.includes('All') ? 'findAllBy' : 'findBy';\n}\nexports.getFindByQueryVariant = getFindByQueryVariant;\nfunction findRenderDefinitionDeclaration(scope, query) {\n    var _a;\n    if (!scope) {\n        return null;\n    }\n    const variable = scope.variables.find((v) => v.name === query);\n    if (variable) {\n        return ((_a = variable.defs\n            .map(({ name }) => name)\n            .filter(utils_1.ASTUtils.isIdentifier)\n            .find(({ name }) => name === query)) !== null && _a !== void 0 ? _a : null);\n    }\n    return findRenderDefinitionDeclaration(scope.upper, query);\n}\nexports.default = (0, create_testing_library_rule_1.createTestingLibraryRule)({\n    name: exports.RULE_NAME,\n    meta: {\n        type: 'suggestion',\n        docs: {\n            description: 'Suggest using `find(All)By*` query instead of `waitFor` + `get(All)By*` to wait for elements',\n            recommendedConfig: {\n                dom: 'error',\n                angular: 'error',\n                react: 'error',\n                vue: 'error',\n                marko: 'error',\n            },\n        },\n        messages: {\n            preferFindBy: 'Prefer `{{queryVariant}}{{queryMethod}}` query over using `{{waitForMethodName}}` + `{{prevQuery}}`',\n        },\n        fixable: 'code',\n        schema: [],\n    },\n    defaultOptions: [],\n    create(context, _, helpers) {\n        const sourceCode = context.getSourceCode();\n        function reportInvalidUsage(node, replacementParams) {\n            const { queryMethod, queryVariant, prevQuery, waitForMethodName, fix } = replacementParams;\n            context.report({\n                node,\n                messageId: 'preferFindBy',\n                data: {\n                    queryVariant,\n                    queryMethod,\n                    prevQuery,\n                    waitForMethodName,\n                },\n                fix,\n            });\n        }\n        function getWrongQueryNameInAssertion(node) {\n            if (!(0, node_utils_1.isCallExpression)(node.body) ||\n                !(0, node_utils_1.isMemberExpression)(node.body.callee)) {\n                return null;\n            }\n            if ((0, node_utils_1.isCallExpression)(node.body.callee.object) &&\n                (0, node_utils_1.isCallExpression)(node.body.callee.object.arguments[0]) &&\n                utils_1.ASTUtils.isIdentifier(node.body.callee.object.arguments[0].callee)) {\n                return node.body.callee.object.arguments[0].callee.name;\n            }\n            if (!utils_1.ASTUtils.isIdentifier(node.body.callee.property)) {\n                return null;\n            }\n            if ((0, node_utils_1.isCallExpression)(node.body.callee.object) &&\n                (0, node_utils_1.isCallExpression)(node.body.callee.object.arguments[0]) &&\n                (0, node_utils_1.isMemberExpression)(node.body.callee.object.arguments[0].callee) &&\n                utils_1.ASTUtils.isIdentifier(node.body.callee.object.arguments[0].callee.property)) {\n                return node.body.callee.object.arguments[0].callee.property.name;\n            }\n            if ((0, node_utils_1.isMemberExpression)(node.body.callee.object) &&\n                (0, node_utils_1.isCallExpression)(node.body.callee.object.object) &&\n                (0, node_utils_1.isCallExpression)(node.body.callee.object.object.arguments[0]) &&\n                (0, node_utils_1.isMemberExpression)(node.body.callee.object.object.arguments[0].callee) &&\n                utils_1.ASTUtils.isIdentifier(node.body.callee.object.object.arguments[0].callee.property)) {\n                return node.body.callee.object.object.arguments[0].callee.property.name;\n            }\n            if ((0, node_utils_1.isMemberExpression)(node.body.callee.object) &&\n                (0, node_utils_1.isCallExpression)(node.body.callee.object.object) &&\n                (0, node_utils_1.isCallExpression)(node.body.callee.object.object.arguments[0]) &&\n                utils_1.ASTUtils.isIdentifier(node.body.callee.object.object.arguments[0].callee)) {\n                return node.body.callee.object.object.arguments[0].callee.name;\n            }\n            return node.body.callee.property.name;\n        }\n        function getWrongQueryName(node) {\n            if (!(0, node_utils_1.isCallExpression)(node.body)) {\n                return null;\n            }\n            if (utils_1.ASTUtils.isIdentifier(node.body.callee) &&\n                helpers.isSyncQuery(node.body.callee)) {\n                return node.body.callee.name;\n            }\n            return getWrongQueryNameInAssertion(node);\n        }\n        function getCaller(node) {\n            if (!(0, node_utils_1.isCallExpression)(node.body) ||\n                !(0, node_utils_1.isMemberExpression)(node.body.callee)) {\n                return null;\n            }\n            if (utils_1.ASTUtils.isIdentifier(node.body.callee.object)) {\n                return node.body.callee.object.name;\n            }\n            if ((0, node_utils_1.isCallExpression)(node.body.callee.object) &&\n                utils_1.ASTUtils.isIdentifier(node.body.callee.object.callee) &&\n                (0, node_utils_1.isCallExpression)(node.body.callee.object.arguments[0]) &&\n                (0, node_utils_1.isMemberExpression)(node.body.callee.object.arguments[0].callee) &&\n                utils_1.ASTUtils.isIdentifier(node.body.callee.object.arguments[0].callee.object)) {\n                return node.body.callee.object.arguments[0].callee.object.name;\n            }\n            if ((0, node_utils_1.isMemberExpression)(node.body.callee.object) &&\n                (0, node_utils_1.isCallExpression)(node.body.callee.object.object) &&\n                (0, node_utils_1.isCallExpression)(node.body.callee.object.object.arguments[0]) &&\n                (0, node_utils_1.isMemberExpression)(node.body.callee.object.object.arguments[0].callee) &&\n                utils_1.ASTUtils.isIdentifier(node.body.callee.object.object.arguments[0].callee.object)) {\n                return node.body.callee.object.object.arguments[0].callee.object.name;\n            }\n            return null;\n        }\n        function isSyncQuery(node) {\n            if (!(0, node_utils_1.isCallExpression)(node.body)) {\n                return false;\n            }\n            const isQuery = utils_1.ASTUtils.isIdentifier(node.body.callee) &&\n                helpers.isSyncQuery(node.body.callee);\n            const isWrappedInPresenceAssert = (0, node_utils_1.isMemberExpression)(node.body.callee) &&\n                (0, node_utils_1.isCallExpression)(node.body.callee.object) &&\n                (0, node_utils_1.isCallExpression)(node.body.callee.object.arguments[0]) &&\n                utils_1.ASTUtils.isIdentifier(node.body.callee.object.arguments[0].callee) &&\n                helpers.isSyncQuery(node.body.callee.object.arguments[0].callee) &&\n                helpers.isPresenceAssert(node.body.callee);\n            const isWrappedInNegatedPresenceAssert = (0, node_utils_1.isMemberExpression)(node.body.callee) &&\n                (0, node_utils_1.isMemberExpression)(node.body.callee.object) &&\n                (0, node_utils_1.isCallExpression)(node.body.callee.object.object) &&\n                (0, node_utils_1.isCallExpression)(node.body.callee.object.object.arguments[0]) &&\n                utils_1.ASTUtils.isIdentifier(node.body.callee.object.object.arguments[0].callee) &&\n                helpers.isSyncQuery(node.body.callee.object.object.arguments[0].callee) &&\n                helpers.isPresenceAssert(node.body.callee.object);\n            return (isQuery || isWrappedInPresenceAssert || isWrappedInNegatedPresenceAssert);\n        }\n        function isScreenSyncQuery(node) {\n            if (!(0, node_utils_1.isArrowFunctionExpression)(node) || !(0, node_utils_1.isCallExpression)(node.body)) {\n                return false;\n            }\n            if (!(0, node_utils_1.isMemberExpression)(node.body.callee) ||\n                !utils_1.ASTUtils.isIdentifier(node.body.callee.property)) {\n                return false;\n            }\n            if (!utils_1.ASTUtils.isIdentifier(node.body.callee.object) &&\n                !(0, node_utils_1.isCallExpression)(node.body.callee.object) &&\n                !(0, node_utils_1.isMemberExpression)(node.body.callee.object)) {\n                return false;\n            }\n            const isWrappedInPresenceAssert = helpers.isPresenceAssert(node.body.callee) &&\n                (0, node_utils_1.isCallExpression)(node.body.callee.object) &&\n                (0, node_utils_1.isCallExpression)(node.body.callee.object.arguments[0]) &&\n                (0, node_utils_1.isMemberExpression)(node.body.callee.object.arguments[0].callee) &&\n                utils_1.ASTUtils.isIdentifier(node.body.callee.object.arguments[0].callee.object);\n            const isWrappedInNegatedPresenceAssert = (0, node_utils_1.isMemberExpression)(node.body.callee.object) &&\n                helpers.isPresenceAssert(node.body.callee.object) &&\n                (0, node_utils_1.isCallExpression)(node.body.callee.object.object) &&\n                (0, node_utils_1.isCallExpression)(node.body.callee.object.object.arguments[0]) &&\n                (0, node_utils_1.isMemberExpression)(node.body.callee.object.object.arguments[0].callee);\n            return (helpers.isSyncQuery(node.body.callee.property) ||\n                isWrappedInPresenceAssert ||\n                isWrappedInNegatedPresenceAssert);\n        }\n        function getQueryArguments(node) {\n            if ((0, node_utils_1.isMemberExpression)(node.callee) &&\n                (0, node_utils_1.isCallExpression)(node.callee.object) &&\n                (0, node_utils_1.isCallExpression)(node.callee.object.arguments[0])) {\n                return node.callee.object.arguments[0].arguments;\n            }\n            if ((0, node_utils_1.isMemberExpression)(node.callee) &&\n                (0, node_utils_1.isMemberExpression)(node.callee.object) &&\n                (0, node_utils_1.isCallExpression)(node.callee.object.object) &&\n                (0, node_utils_1.isCallExpression)(node.callee.object.object.arguments[0])) {\n                return node.callee.object.object.arguments[0].arguments;\n            }\n            return node.arguments;\n        }\n        return {\n            'AwaitExpression > CallExpression'(node) {\n                if (!utils_1.ASTUtils.isIdentifier(node.callee) ||\n                    !helpers.isAsyncUtil(node.callee, exports.WAIT_METHODS)) {\n                    return;\n                }\n                const argument = node.arguments[0];\n                if (!(0, node_utils_1.isArrowFunctionExpression)(argument) ||\n                    !(0, node_utils_1.isCallExpression)(argument.body)) {\n                    return;\n                }\n                const waitForMethodName = node.callee.name;\n                if (isScreenSyncQuery(argument)) {\n                    const caller = getCaller(argument);\n                    if (!caller) {\n                        return;\n                    }\n                    const fullQueryMethod = getWrongQueryName(argument);\n                    if (!fullQueryMethod) {\n                        return;\n                    }\n                    const queryVariant = getFindByQueryVariant(fullQueryMethod);\n                    const callArguments = getQueryArguments(argument.body);\n                    const queryMethod = fullQueryMethod.split('By')[1];\n                    if (!queryMethod) {\n                        return;\n                    }\n                    reportInvalidUsage(node, {\n                        queryMethod,\n                        queryVariant,\n                        prevQuery: fullQueryMethod,\n                        waitForMethodName,\n                        fix(fixer) {\n                            const property = argument.body\n                                .callee.property;\n                            if (helpers.isCustomQuery(property)) {\n                                return null;\n                            }\n                            const newCode = `${caller}.${queryVariant}${queryMethod}(${callArguments\n                                .map((callArgNode) => sourceCode.getText(callArgNode))\n                                .join(', ')})`;\n                            return fixer.replaceText(node, newCode);\n                        },\n                    });\n                    return;\n                }\n                if (!isSyncQuery(argument)) {\n                    return;\n                }\n                const fullQueryMethod = getWrongQueryName(argument);\n                if (!fullQueryMethod) {\n                    return;\n                }\n                const queryMethod = fullQueryMethod.split('By')[1];\n                const queryVariant = getFindByQueryVariant(fullQueryMethod);\n                const callArguments = getQueryArguments(argument.body);\n                reportInvalidUsage(node, {\n                    queryMethod,\n                    queryVariant,\n                    prevQuery: fullQueryMethod,\n                    waitForMethodName,\n                    fix(fixer) {\n                        if (helpers.isCustomQuery(argument.body\n                            .callee)) {\n                            return null;\n                        }\n                        const findByMethod = `${queryVariant}${queryMethod}`;\n                        const allFixes = [];\n                        const newCode = `${findByMethod}(${callArguments\n                            .map((callArgNode) => sourceCode.getText(callArgNode))\n                            .join(', ')})`;\n                        allFixes.push(fixer.replaceText(node, newCode));\n                        const definition = findRenderDefinitionDeclaration(context.getScope(), fullQueryMethod);\n                        if (!definition) {\n                            return allFixes;\n                        }\n                        if (definition.parent &&\n                            (0, node_utils_1.isObjectPattern)(definition.parent.parent)) {\n                            const allVariableDeclarations = definition.parent.parent;\n                            if (allVariableDeclarations.properties.some((p) => (0, node_utils_1.isProperty)(p) &&\n                                utils_1.ASTUtils.isIdentifier(p.key) &&\n                                p.key.name === findByMethod)) {\n                                return allFixes;\n                            }\n                            const textDestructuring = sourceCode.getText(allVariableDeclarations);\n                            const text = textDestructuring.replace(/(\\s*})$/, `, ${findByMethod}$1`);\n                            allFixes.push(fixer.replaceText(allVariableDeclarations, text));\n                        }\n                        return allFixes;\n                    },\n                });\n            },\n        };\n    },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}