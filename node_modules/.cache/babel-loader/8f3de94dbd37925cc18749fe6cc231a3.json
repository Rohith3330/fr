{"ast":null,"code":"var lengthOfArrayLike = require('../internals/length-of-array-like'); // https://tc39.es/proposal-change-array-by-copy/#sec-array.prototype.toReversed\n// https://tc39.es/proposal-change-array-by-copy/#sec-%typedarray%.prototype.toReversed\n\n\nmodule.exports = function (O, C) {\n  var len = lengthOfArrayLike(O);\n  var A = new C(len);\n  var k = 0;\n\n  for (; k < len; k++) A[k] = O[len - k - 1];\n\n  return A;\n};","map":{"version":3,"names":["lengthOfArrayLike","require","module","exports","O","C","len","A","k"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/core-js/internals/array-to-reversed.js"],"sourcesContent":["var lengthOfArrayLike = require('../internals/length-of-array-like');\n\n// https://tc39.es/proposal-change-array-by-copy/#sec-array.prototype.toReversed\n// https://tc39.es/proposal-change-array-by-copy/#sec-%typedarray%.prototype.toReversed\nmodule.exports = function (O, C) {\n  var len = lengthOfArrayLike(O);\n  var A = new C(len);\n  var k = 0;\n  for (; k < len; k++) A[k] = O[len - k - 1];\n  return A;\n};\n"],"mappings":"AAAA,IAAIA,iBAAiB,GAAGC,OAAO,CAAC,mCAAD,CAA/B,C,CAEA;AACA;;;AACAC,MAAM,CAACC,OAAP,GAAiB,UAAUC,CAAV,EAAaC,CAAb,EAAgB;EAC/B,IAAIC,GAAG,GAAGN,iBAAiB,CAACI,CAAD,CAA3B;EACA,IAAIG,CAAC,GAAG,IAAIF,CAAJ,CAAMC,GAAN,CAAR;EACA,IAAIE,CAAC,GAAG,CAAR;;EACA,OAAOA,CAAC,GAAGF,GAAX,EAAgBE,CAAC,EAAjB,EAAqBD,CAAC,CAACC,CAAD,CAAD,GAAOJ,CAAC,CAACE,GAAG,GAAGE,CAAN,GAAU,CAAX,CAAR;;EACrB,OAAOD,CAAP;AACD,CAND"},"metadata":{},"sourceType":"script"}