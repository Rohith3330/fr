{"ast":null,"code":"function addPath(node, parentPath) {\n  if (!parentPath) {\n    return node;\n  }\n\n  return { ...node,\n    file: parentPath + '/' + node.file\n  };\n}\n\nfunction flatten(nodes, parentPath) {\n  let children = [];\n\n  for (let i = 0; i < nodes.length; i++) {\n    const child = nodes[i];\n\n    if (child.children) {\n      children = [...children, ...flatten(child.children, (parentPath ? parentPath + '/' : '') + child.file)];\n    } else {\n      children.push(addPath(child, parentPath));\n    }\n  }\n\n  return children;\n}\n\nfunction filterByFile(nodes, fileFilter, parentPath) {\n  let children = [];\n\n  for (let i = 0; i < nodes.length; i++) {\n    const child = nodes[i];\n    const childFullPath = (parentPath ? parentPath + '/' : '') + child.file;\n    const isChildUnderFilter = fileFilter === childFullPath || fileFilter.indexOf(childFullPath + '/') === 0;\n    const isChildAboveFilter = childFullPath.indexOf(fileFilter + '/') === 0;\n\n    if (isChildUnderFilter) {\n      // flatten and continue looking underneath\n      children = [...children, ...filterByFile(child.children, fileFilter, childFullPath)];\n    } else if (isChildAboveFilter) {\n      // remove the parent path and add everything underneath\n      const charsToRemoveFromFile = fileFilter.length - (parentPath ? parentPath.length : 0);\n      let childFilename = child.file.slice(charsToRemoveFromFile);\n\n      if (childFilename[0] === '/') {\n        childFilename = childFilename.slice(1);\n      }\n\n      children.push({ ...child,\n        file: childFilename\n      });\n    }\n  }\n\n  return children;\n}\n\nfunction sort(childData, activeSort) {\n  const top = activeSort.order === 'asc' ? 1 : -1;\n  const bottom = activeSort.order === 'asc' ? -1 : 1;\n  childData.sort((a, b) => {\n    let valueA;\n    let valueB;\n\n    if (activeSort.sortKey === 'file') {\n      valueA = a.file;\n      valueB = b.file;\n    } else {\n      const [metricType, valueType] = activeSort.sortKey.split('.');\n      valueA = a.metrics[metricType][valueType];\n      valueB = b.metrics[metricType][valueType];\n    }\n\n    if (valueA === valueB) {\n      return 0;\n    }\n\n    return valueA < valueB ? top : bottom;\n  });\n\n  for (let i = 0; i < childData.length; i++) {\n    const child = childData[i];\n\n    if (child.children) {\n      childData[i] = { ...child,\n        children: sort(child.children, activeSort)\n      };\n    }\n  }\n\n  return childData;\n}\n\nfunction filter(nodes, metricsMap, activeFilters) {\n  const children = [];\n\n  for (let i = 0; i < nodes.length; i++) {\n    let child = nodes[i];\n\n    if (child.children) {\n      const newSubChildren = filter(child.children, metricsMap, activeFilters);\n\n      if (newSubChildren.length) {\n        child = { ...child,\n          children: newSubChildren\n        };\n        children.push(child);\n      }\n    } else {\n      if (metricsMap.statements && activeFilters[child.metrics.statements.classForPercent] || metricsMap.branches && activeFilters[child.metrics.branches.classForPercent] || metricsMap.functions && activeFilters[child.metrics.functions.classForPercent] || metricsMap.lines && activeFilters[child.metrics.lines.classForPercent]) {\n        children.push(child);\n      }\n    }\n  }\n\n  return children;\n}\n\nmodule.exports = function getChildData(sourceData, metricsToShow, activeSort, isFlat, activeFilters, fileFilter) {\n  let childData = sourceData.children;\n\n  if (isFlat) {\n    childData = flatten(childData.slice(0));\n  }\n\n  if (fileFilter) {\n    childData = filterByFile(childData, fileFilter);\n  }\n\n  if (activeFilters.low) {\n    activeFilters = { ...activeFilters,\n      empty: true\n    };\n  }\n\n  childData = filter(childData, metricsToShow, activeFilters);\n\n  if (activeSort) {\n    childData = sort(childData, activeSort);\n  }\n\n  return childData;\n};","map":{"version":3,"names":["addPath","node","parentPath","file","flatten","nodes","children","i","length","child","push","filterByFile","fileFilter","childFullPath","isChildUnderFilter","indexOf","isChildAboveFilter","charsToRemoveFromFile","childFilename","slice","sort","childData","activeSort","top","order","bottom","a","b","valueA","valueB","sortKey","metricType","valueType","split","metrics","filter","metricsMap","activeFilters","newSubChildren","statements","classForPercent","branches","functions","lines","module","exports","getChildData","sourceData","metricsToShow","isFlat","low","empty"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/istanbul-reports/lib/html-spa/src/getChildData.js"],"sourcesContent":["function addPath(node, parentPath) {\n    if (!parentPath) {\n        return node;\n    }\n    return { ...node, file: parentPath + '/' + node.file };\n}\n\nfunction flatten(nodes, parentPath) {\n    let children = [];\n    for (let i = 0; i < nodes.length; i++) {\n        const child = nodes[i];\n        if (child.children) {\n            children = [\n                ...children,\n                ...flatten(\n                    child.children,\n                    (parentPath ? parentPath + '/' : '') + child.file\n                )\n            ];\n        } else {\n            children.push(addPath(child, parentPath));\n        }\n    }\n    return children;\n}\n\nfunction filterByFile(nodes, fileFilter, parentPath) {\n    let children = [];\n\n    for (let i = 0; i < nodes.length; i++) {\n        const child = nodes[i];\n        const childFullPath = (parentPath ? parentPath + '/' : '') + child.file;\n\n        const isChildUnderFilter =\n            fileFilter === childFullPath ||\n            fileFilter.indexOf(childFullPath + '/') === 0;\n        const isChildAboveFilter =\n            childFullPath.indexOf(fileFilter + '/') === 0;\n\n        if (isChildUnderFilter) {\n            // flatten and continue looking underneath\n            children = [\n                ...children,\n                ...filterByFile(child.children, fileFilter, childFullPath)\n            ];\n        } else if (isChildAboveFilter) {\n            // remove the parent path and add everything underneath\n            const charsToRemoveFromFile =\n                fileFilter.length - (parentPath ? parentPath.length : 0);\n            let childFilename = child.file.slice(charsToRemoveFromFile);\n            if (childFilename[0] === '/') {\n                childFilename = childFilename.slice(1);\n            }\n            children.push({\n                ...child,\n                file: childFilename\n            });\n        }\n    }\n    return children;\n}\n\nfunction sort(childData, activeSort) {\n    const top = activeSort.order === 'asc' ? 1 : -1;\n    const bottom = activeSort.order === 'asc' ? -1 : 1;\n    childData.sort((a, b) => {\n        let valueA;\n        let valueB;\n        if (activeSort.sortKey === 'file') {\n            valueA = a.file;\n            valueB = b.file;\n        } else {\n            const [metricType, valueType] = activeSort.sortKey.split('.');\n            valueA = a.metrics[metricType][valueType];\n            valueB = b.metrics[metricType][valueType];\n        }\n\n        if (valueA === valueB) {\n            return 0;\n        }\n        return valueA < valueB ? top : bottom;\n    });\n\n    for (let i = 0; i < childData.length; i++) {\n        const child = childData[i];\n        if (child.children) {\n            childData[i] = {\n                ...child,\n                children: sort(child.children, activeSort)\n            };\n        }\n    }\n    return childData;\n}\n\nfunction filter(nodes, metricsMap, activeFilters) {\n    const children = [];\n    for (let i = 0; i < nodes.length; i++) {\n        let child = nodes[i];\n        if (child.children) {\n            const newSubChildren = filter(\n                child.children,\n                metricsMap,\n                activeFilters\n            );\n            if (newSubChildren.length) {\n                child = { ...child, children: newSubChildren };\n                children.push(child);\n            }\n        } else {\n            if (\n                (metricsMap.statements &&\n                    activeFilters[child.metrics.statements.classForPercent]) ||\n                (metricsMap.branches &&\n                    activeFilters[child.metrics.branches.classForPercent]) ||\n                (metricsMap.functions &&\n                    activeFilters[child.metrics.functions.classForPercent]) ||\n                (metricsMap.lines &&\n                    activeFilters[child.metrics.lines.classForPercent])\n            ) {\n                children.push(child);\n            }\n        }\n    }\n    return children;\n}\n\nmodule.exports = function getChildData(\n    sourceData,\n    metricsToShow,\n    activeSort,\n    isFlat,\n    activeFilters,\n    fileFilter\n) {\n    let childData = sourceData.children;\n\n    if (isFlat) {\n        childData = flatten(childData.slice(0));\n    }\n\n    if (fileFilter) {\n        childData = filterByFile(childData, fileFilter);\n    }\n\n    if (activeFilters.low) {\n        activeFilters = { ...activeFilters, empty: true };\n    }\n    childData = filter(childData, metricsToShow, activeFilters);\n\n    if (activeSort) {\n        childData = sort(childData, activeSort);\n    }\n    return childData;\n};\n"],"mappings":"AAAA,SAASA,OAAT,CAAiBC,IAAjB,EAAuBC,UAAvB,EAAmC;EAC/B,IAAI,CAACA,UAAL,EAAiB;IACb,OAAOD,IAAP;EACH;;EACD,OAAO,EAAE,GAAGA,IAAL;IAAWE,IAAI,EAAED,UAAU,GAAG,GAAb,GAAmBD,IAAI,CAACE;EAAzC,CAAP;AACH;;AAED,SAASC,OAAT,CAAiBC,KAAjB,EAAwBH,UAAxB,EAAoC;EAChC,IAAII,QAAQ,GAAG,EAAf;;EACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,KAAK,CAACG,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;IACnC,MAAME,KAAK,GAAGJ,KAAK,CAACE,CAAD,CAAnB;;IACA,IAAIE,KAAK,CAACH,QAAV,EAAoB;MAChBA,QAAQ,GAAG,CACP,GAAGA,QADI,EAEP,GAAGF,OAAO,CACNK,KAAK,CAACH,QADA,EAEN,CAACJ,UAAU,GAAGA,UAAU,GAAG,GAAhB,GAAsB,EAAjC,IAAuCO,KAAK,CAACN,IAFvC,CAFH,CAAX;IAOH,CARD,MAQO;MACHG,QAAQ,CAACI,IAAT,CAAcV,OAAO,CAACS,KAAD,EAAQP,UAAR,CAArB;IACH;EACJ;;EACD,OAAOI,QAAP;AACH;;AAED,SAASK,YAAT,CAAsBN,KAAtB,EAA6BO,UAA7B,EAAyCV,UAAzC,EAAqD;EACjD,IAAII,QAAQ,GAAG,EAAf;;EAEA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,KAAK,CAACG,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;IACnC,MAAME,KAAK,GAAGJ,KAAK,CAACE,CAAD,CAAnB;IACA,MAAMM,aAAa,GAAG,CAACX,UAAU,GAAGA,UAAU,GAAG,GAAhB,GAAsB,EAAjC,IAAuCO,KAAK,CAACN,IAAnE;IAEA,MAAMW,kBAAkB,GACpBF,UAAU,KAAKC,aAAf,IACAD,UAAU,CAACG,OAAX,CAAmBF,aAAa,GAAG,GAAnC,MAA4C,CAFhD;IAGA,MAAMG,kBAAkB,GACpBH,aAAa,CAACE,OAAd,CAAsBH,UAAU,GAAG,GAAnC,MAA4C,CADhD;;IAGA,IAAIE,kBAAJ,EAAwB;MACpB;MACAR,QAAQ,GAAG,CACP,GAAGA,QADI,EAEP,GAAGK,YAAY,CAACF,KAAK,CAACH,QAAP,EAAiBM,UAAjB,EAA6BC,aAA7B,CAFR,CAAX;IAIH,CAND,MAMO,IAAIG,kBAAJ,EAAwB;MAC3B;MACA,MAAMC,qBAAqB,GACvBL,UAAU,CAACJ,MAAX,IAAqBN,UAAU,GAAGA,UAAU,CAACM,MAAd,GAAuB,CAAtD,CADJ;MAEA,IAAIU,aAAa,GAAGT,KAAK,CAACN,IAAN,CAAWgB,KAAX,CAAiBF,qBAAjB,CAApB;;MACA,IAAIC,aAAa,CAAC,CAAD,CAAb,KAAqB,GAAzB,EAA8B;QAC1BA,aAAa,GAAGA,aAAa,CAACC,KAAd,CAAoB,CAApB,CAAhB;MACH;;MACDb,QAAQ,CAACI,IAAT,CAAc,EACV,GAAGD,KADO;QAEVN,IAAI,EAAEe;MAFI,CAAd;IAIH;EACJ;;EACD,OAAOZ,QAAP;AACH;;AAED,SAASc,IAAT,CAAcC,SAAd,EAAyBC,UAAzB,EAAqC;EACjC,MAAMC,GAAG,GAAGD,UAAU,CAACE,KAAX,KAAqB,KAArB,GAA6B,CAA7B,GAAiC,CAAC,CAA9C;EACA,MAAMC,MAAM,GAAGH,UAAU,CAACE,KAAX,KAAqB,KAArB,GAA6B,CAAC,CAA9B,GAAkC,CAAjD;EACAH,SAAS,CAACD,IAAV,CAAe,CAACM,CAAD,EAAIC,CAAJ,KAAU;IACrB,IAAIC,MAAJ;IACA,IAAIC,MAAJ;;IACA,IAAIP,UAAU,CAACQ,OAAX,KAAuB,MAA3B,EAAmC;MAC/BF,MAAM,GAAGF,CAAC,CAACvB,IAAX;MACA0B,MAAM,GAAGF,CAAC,CAACxB,IAAX;IACH,CAHD,MAGO;MACH,MAAM,CAAC4B,UAAD,EAAaC,SAAb,IAA0BV,UAAU,CAACQ,OAAX,CAAmBG,KAAnB,CAAyB,GAAzB,CAAhC;MACAL,MAAM,GAAGF,CAAC,CAACQ,OAAF,CAAUH,UAAV,EAAsBC,SAAtB,CAAT;MACAH,MAAM,GAAGF,CAAC,CAACO,OAAF,CAAUH,UAAV,EAAsBC,SAAtB,CAAT;IACH;;IAED,IAAIJ,MAAM,KAAKC,MAAf,EAAuB;MACnB,OAAO,CAAP;IACH;;IACD,OAAOD,MAAM,GAAGC,MAAT,GAAkBN,GAAlB,GAAwBE,MAA/B;EACH,CAhBD;;EAkBA,KAAK,IAAIlB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGc,SAAS,CAACb,MAA9B,EAAsCD,CAAC,EAAvC,EAA2C;IACvC,MAAME,KAAK,GAAGY,SAAS,CAACd,CAAD,CAAvB;;IACA,IAAIE,KAAK,CAACH,QAAV,EAAoB;MAChBe,SAAS,CAACd,CAAD,CAAT,GAAe,EACX,GAAGE,KADQ;QAEXH,QAAQ,EAAEc,IAAI,CAACX,KAAK,CAACH,QAAP,EAAiBgB,UAAjB;MAFH,CAAf;IAIH;EACJ;;EACD,OAAOD,SAAP;AACH;;AAED,SAASc,MAAT,CAAgB9B,KAAhB,EAAuB+B,UAAvB,EAAmCC,aAAnC,EAAkD;EAC9C,MAAM/B,QAAQ,GAAG,EAAjB;;EACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,KAAK,CAACG,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;IACnC,IAAIE,KAAK,GAAGJ,KAAK,CAACE,CAAD,CAAjB;;IACA,IAAIE,KAAK,CAACH,QAAV,EAAoB;MAChB,MAAMgC,cAAc,GAAGH,MAAM,CACzB1B,KAAK,CAACH,QADmB,EAEzB8B,UAFyB,EAGzBC,aAHyB,CAA7B;;MAKA,IAAIC,cAAc,CAAC9B,MAAnB,EAA2B;QACvBC,KAAK,GAAG,EAAE,GAAGA,KAAL;UAAYH,QAAQ,EAAEgC;QAAtB,CAAR;QACAhC,QAAQ,CAACI,IAAT,CAAcD,KAAd;MACH;IACJ,CAVD,MAUO;MACH,IACK2B,UAAU,CAACG,UAAX,IACGF,aAAa,CAAC5B,KAAK,CAACyB,OAAN,CAAcK,UAAd,CAAyBC,eAA1B,CADjB,IAECJ,UAAU,CAACK,QAAX,IACGJ,aAAa,CAAC5B,KAAK,CAACyB,OAAN,CAAcO,QAAd,CAAuBD,eAAxB,CAHjB,IAICJ,UAAU,CAACM,SAAX,IACGL,aAAa,CAAC5B,KAAK,CAACyB,OAAN,CAAcQ,SAAd,CAAwBF,eAAzB,CALjB,IAMCJ,UAAU,CAACO,KAAX,IACGN,aAAa,CAAC5B,KAAK,CAACyB,OAAN,CAAcS,KAAd,CAAoBH,eAArB,CARrB,EASE;QACElC,QAAQ,CAACI,IAAT,CAAcD,KAAd;MACH;IACJ;EACJ;;EACD,OAAOH,QAAP;AACH;;AAEDsC,MAAM,CAACC,OAAP,GAAiB,SAASC,YAAT,CACbC,UADa,EAEbC,aAFa,EAGb1B,UAHa,EAIb2B,MAJa,EAKbZ,aALa,EAMbzB,UANa,EAOf;EACE,IAAIS,SAAS,GAAG0B,UAAU,CAACzC,QAA3B;;EAEA,IAAI2C,MAAJ,EAAY;IACR5B,SAAS,GAAGjB,OAAO,CAACiB,SAAS,CAACF,KAAV,CAAgB,CAAhB,CAAD,CAAnB;EACH;;EAED,IAAIP,UAAJ,EAAgB;IACZS,SAAS,GAAGV,YAAY,CAACU,SAAD,EAAYT,UAAZ,CAAxB;EACH;;EAED,IAAIyB,aAAa,CAACa,GAAlB,EAAuB;IACnBb,aAAa,GAAG,EAAE,GAAGA,aAAL;MAAoBc,KAAK,EAAE;IAA3B,CAAhB;EACH;;EACD9B,SAAS,GAAGc,MAAM,CAACd,SAAD,EAAY2B,aAAZ,EAA2BX,aAA3B,CAAlB;;EAEA,IAAIf,UAAJ,EAAgB;IACZD,SAAS,GAAGD,IAAI,CAACC,SAAD,EAAYC,UAAZ,CAAhB;EACH;;EACD,OAAOD,SAAP;AACH,CA3BD"},"metadata":{},"sourceType":"script"}