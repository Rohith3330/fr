{"ast":null,"code":"'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar has = require('has');\n\nvar $assign = GetIntrinsic('%Object%').assign;\n\nmodule.exports = function assign(target, source) {\n  if ($assign) {\n    return $assign(target, source);\n  } // eslint-disable-next-line no-restricted-syntax\n\n\n  for (var key in source) {\n    if (has(source, key)) {\n      // eslint-disable-next-line no-param-reassign\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n};","map":{"version":3,"names":["GetIntrinsic","require","has","$assign","assign","module","exports","target","source","key"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/es-abstract/helpers/assign.js"],"sourcesContent":["'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar has = require('has');\n\nvar $assign = GetIntrinsic('%Object%').assign;\n\nmodule.exports = function assign(target, source) {\n\tif ($assign) {\n\t\treturn $assign(target, source);\n\t}\n\n\t// eslint-disable-next-line no-restricted-syntax\n\tfor (var key in source) {\n\t\tif (has(source, key)) {\n\t\t\t// eslint-disable-next-line no-param-reassign\n\t\t\ttarget[key] = source[key];\n\t\t}\n\t}\n\treturn target;\n};\n"],"mappings":"AAAA;;AAEA,IAAIA,YAAY,GAAGC,OAAO,CAAC,eAAD,CAA1B;;AAEA,IAAIC,GAAG,GAAGD,OAAO,CAAC,KAAD,CAAjB;;AAEA,IAAIE,OAAO,GAAGH,YAAY,CAAC,UAAD,CAAZ,CAAyBI,MAAvC;;AAEAC,MAAM,CAACC,OAAP,GAAiB,SAASF,MAAT,CAAgBG,MAAhB,EAAwBC,MAAxB,EAAgC;EAChD,IAAIL,OAAJ,EAAa;IACZ,OAAOA,OAAO,CAACI,MAAD,EAASC,MAAT,CAAd;EACA,CAH+C,CAKhD;;;EACA,KAAK,IAAIC,GAAT,IAAgBD,MAAhB,EAAwB;IACvB,IAAIN,GAAG,CAACM,MAAD,EAASC,GAAT,CAAP,EAAsB;MACrB;MACAF,MAAM,CAACE,GAAD,CAAN,GAAcD,MAAM,CAACC,GAAD,CAApB;IACA;EACD;;EACD,OAAOF,MAAP;AACA,CAbD"},"metadata":{},"sourceType":"script"}