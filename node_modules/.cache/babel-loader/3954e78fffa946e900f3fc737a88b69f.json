{"ast":null,"code":"/* eslint-env mocha */\nvar assert = require('assert');\n\nvar net = require('net');\n\nvar streamPair = require('stream-pair');\n\nvar thing = require('../');\n\ndescribe('Handle Thing', function () {\n  var handle;\n  var pair;\n  var socket;\n  ['normal', 'lazy'].forEach(function (mode) {\n    describe(mode, function () {\n      beforeEach(function () {\n        pair = streamPair.create();\n        handle = thing.create(mode === 'normal' ? pair.other : null);\n        socket = new net.Socket({\n          handle: handle,\n          readable: true,\n          writable: true\n        });\n\n        if (mode === 'lazy') {\n          setTimeout(function () {\n            handle.setStream(pair.other);\n          }, 50);\n        }\n      });\n      afterEach(function () {\n        assert(handle._stream);\n      });\n      it('should write data to Socket', function (done) {\n        pair.write('hello');\n        pair.write(' world');\n        pair.end('... ok');\n        var chunks = '';\n        socket.on('data', function (chunk) {\n          chunks += chunk;\n        });\n        socket.on('end', function () {\n          assert.strictEqual(chunks, 'hello world... ok'); // allowHalfOpen is `false`, so the `end` should be followed by `close`\n\n          socket.once('close', function () {\n            done();\n          });\n        });\n      });\n      it('should read data from Socket', function (done) {\n        socket.write('hello');\n        socket.write(' world');\n        socket.end('... ok');\n        var chunks = '';\n        pair.on('data', function (chunk) {\n          chunks += chunk;\n        });\n        pair.on('end', function () {\n          assert.strictEqual(chunks, 'hello world... ok');\n          done();\n        });\n      });\n      it('should invoke `close` callback', function (done) {\n        handle._options.close = function (callback) {\n          done();\n          process.nextTick(callback);\n        };\n\n        pair.end('hello');\n        socket.resume();\n      });\n      it('should kill pending requests', function (done) {\n        handle._options.close = function () {\n          setTimeout(done, 75);\n        };\n\n        socket.write('hello');\n        socket.destroy();\n      });\n\n      if (mode === 'normal') {\n        it('should invoke `getPeerName` callback', function () {\n          handle._options.getPeerName = function () {\n            return {\n              address: 'ohai'\n            };\n          };\n\n          assert.strictEqual(socket.remoteAddress, 'ohai');\n        });\n        it('should emit ECONNRESET at `close` event', function (done) {\n          pair.other.emit('close');\n          socket.on('error', function (err) {\n            assert(/ECONNRESET/.test(err.message));\n            done();\n          });\n        });\n      }\n    });\n  });\n});","map":{"version":3,"names":["assert","require","net","streamPair","thing","describe","handle","pair","socket","forEach","mode","beforeEach","create","other","Socket","readable","writable","setTimeout","setStream","afterEach","_stream","it","done","write","end","chunks","on","chunk","strictEqual","once","_options","close","callback","process","nextTick","resume","destroy","getPeerName","address","remoteAddress","emit","err","test","message"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/handle-thing/test/api-test.js"],"sourcesContent":["/* eslint-env mocha */\n\nvar assert = require('assert')\nvar net = require('net')\nvar streamPair = require('stream-pair')\n\nvar thing = require('../')\n\ndescribe('Handle Thing', function () {\n  var handle\n  var pair\n  var socket;\n\n  [ 'normal', 'lazy' ].forEach(function (mode) {\n    describe(mode, function () {\n      beforeEach(function () {\n        pair = streamPair.create()\n        handle = thing.create(mode === 'normal' ? pair.other : null)\n        socket = new net.Socket({\n          handle: handle,\n          readable: true,\n          writable: true\n        })\n\n        if (mode === 'lazy') {\n          setTimeout(function () {\n            handle.setStream(pair.other)\n          }, 50)\n        }\n      })\n\n      afterEach(function () {\n        assert(handle._stream)\n      })\n\n      it('should write data to Socket', function (done) {\n        pair.write('hello')\n        pair.write(' world')\n        pair.end('... ok')\n\n        var chunks = ''\n        socket.on('data', function (chunk) {\n          chunks += chunk\n        })\n        socket.on('end', function () {\n          assert.strictEqual(chunks, 'hello world... ok')\n\n          // allowHalfOpen is `false`, so the `end` should be followed by `close`\n          socket.once('close', function () {\n            done()\n          })\n        })\n      })\n\n      it('should read data from Socket', function (done) {\n        socket.write('hello')\n        socket.write(' world')\n        socket.end('... ok')\n\n        var chunks = ''\n        pair.on('data', function (chunk) {\n          chunks += chunk\n        })\n        pair.on('end', function () {\n          assert.strictEqual(chunks, 'hello world... ok')\n\n          done()\n        })\n      })\n\n      it('should invoke `close` callback', function (done) {\n        handle._options.close = function (callback) {\n          done()\n          process.nextTick(callback)\n        }\n\n        pair.end('hello')\n        socket.resume()\n      })\n\n      it('should kill pending requests', function (done) {\n        handle._options.close = function () {\n          setTimeout(done, 75)\n        }\n\n        socket.write('hello')\n        socket.destroy()\n      })\n\n      if (mode === 'normal') {\n        it('should invoke `getPeerName` callback', function () {\n          handle._options.getPeerName = function () {\n            return { address: 'ohai' }\n          }\n\n          assert.strictEqual(socket.remoteAddress, 'ohai')\n        })\n\n        it('should emit ECONNRESET at `close` event', function (done) {\n          pair.other.emit('close')\n\n          socket.on('error', function (err) {\n            assert(/ECONNRESET/.test(err.message))\n            done()\n          })\n        })\n      }\n    })\n  })\n})\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}