{"ast":null,"code":"import fs from 'fs';\nimport postcss from 'postcss';\nimport tailwind from '..';\n\nfunction build(_ref) {\n  let {\n    from,\n    to,\n    config\n  } = _ref;\n  return new Promise((resolve, reject) => {\n    console.log(`Processing ./${from}...`);\n    fs.readFile(`./${from}`, (err, css) => {\n      if (err) throw err;\n      return postcss([tailwind(config)]).process(css, {\n        from: undefined\n      }).then(result => {\n        fs.writeFileSync(`./${to}`, result.css);\n        return result;\n      }).then(resolve).catch(error => {\n        console.log(error);\n        reject();\n      });\n    });\n  });\n}\n\nconsole.info('\\nRebuilding fixtures...\\n');\nPromise.all([build({\n  from: 'tests/fixtures/tailwind-input.css',\n  to: 'tests/fixtures/tailwind-output.css',\n  config: {}\n}), build({\n  from: 'tests/fixtures/tailwind-input.css',\n  to: 'tests/fixtures/tailwind-output-important.css',\n  config: {\n    important: true\n  }\n}), build({\n  from: 'tests/fixtures/tailwind-input.css',\n  to: 'tests/fixtures/tailwind-output-no-color-opacity.css',\n  config: {\n    corePlugins: {\n      textOpacity: false,\n      backgroundOpacity: false,\n      borderOpacity: false,\n      placeholderOpacity: false,\n      divideOpacity: false\n    }\n  }\n}), build({\n  from: 'tests/fixtures/tailwind-input.css',\n  to: 'tests/fixtures/tailwind-output-flagged.css',\n  config: {\n    future: 'all',\n    experimental: 'all'\n  }\n})]).then(() => {\n  console.log('\\nFinished rebuilding fixtures.');\n  console.log('\\nPlease triple check that the fixture output matches what you expect before committing this change.');\n});","map":{"version":3,"names":["fs","postcss","tailwind","build","from","to","config","Promise","resolve","reject","console","log","readFile","err","css","process","undefined","then","result","writeFileSync","catch","error","info","all","important","corePlugins","textOpacity","backgroundOpacity","borderOpacity","placeholderOpacity","divideOpacity","future","experimental"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/tailwindcss/scripts/rebuildFixtures.js"],"sourcesContent":["import fs from 'fs'\nimport postcss from 'postcss'\nimport tailwind from '..'\n\nfunction build({ from, to, config }) {\n  return new Promise((resolve, reject) => {\n    console.log(`Processing ./${from}...`)\n\n    fs.readFile(`./${from}`, (err, css) => {\n      if (err) throw err\n\n      return postcss([tailwind(config)])\n        .process(css, {\n          from: undefined,\n        })\n        .then((result) => {\n          fs.writeFileSync(`./${to}`, result.css)\n          return result\n        })\n        .then(resolve)\n        .catch((error) => {\n          console.log(error)\n          reject()\n        })\n    })\n  })\n}\n\nconsole.info('\\nRebuilding fixtures...\\n')\n\nPromise.all([\n  build({\n    from: 'tests/fixtures/tailwind-input.css',\n    to: 'tests/fixtures/tailwind-output.css',\n    config: {},\n  }),\n  build({\n    from: 'tests/fixtures/tailwind-input.css',\n    to: 'tests/fixtures/tailwind-output-important.css',\n    config: { important: true },\n  }),\n  build({\n    from: 'tests/fixtures/tailwind-input.css',\n    to: 'tests/fixtures/tailwind-output-no-color-opacity.css',\n    config: {\n      corePlugins: {\n        textOpacity: false,\n        backgroundOpacity: false,\n        borderOpacity: false,\n        placeholderOpacity: false,\n        divideOpacity: false,\n      },\n    },\n  }),\n  build({\n    from: 'tests/fixtures/tailwind-input.css',\n    to: 'tests/fixtures/tailwind-output-flagged.css',\n    config: {\n      future: 'all',\n      experimental: 'all',\n    },\n  }),\n]).then(() => {\n  console.log('\\nFinished rebuilding fixtures.')\n  console.log(\n    '\\nPlease triple check that the fixture output matches what you expect before committing this change.'\n  )\n})\n"],"mappings":"AAAA,OAAOA,EAAP,MAAe,IAAf;AACA,OAAOC,OAAP,MAAoB,SAApB;AACA,OAAOC,QAAP,MAAqB,IAArB;;AAEA,SAASC,KAAT,OAAqC;EAAA,IAAtB;IAAEC,IAAF;IAAQC,EAAR;IAAYC;EAAZ,CAAsB;EACnC,OAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;IACtCC,OAAO,CAACC,GAAR,CAAa,gBAAeP,IAAK,KAAjC;IAEAJ,EAAE,CAACY,QAAH,CAAa,KAAIR,IAAK,EAAtB,EAAyB,CAACS,GAAD,EAAMC,GAAN,KAAc;MACrC,IAAID,GAAJ,EAAS,MAAMA,GAAN;MAET,OAAOZ,OAAO,CAAC,CAACC,QAAQ,CAACI,MAAD,CAAT,CAAD,CAAP,CACJS,OADI,CACID,GADJ,EACS;QACZV,IAAI,EAAEY;MADM,CADT,EAIJC,IAJI,CAIEC,MAAD,IAAY;QAChBlB,EAAE,CAACmB,aAAH,CAAkB,KAAId,EAAG,EAAzB,EAA4Ba,MAAM,CAACJ,GAAnC;QACA,OAAOI,MAAP;MACD,CAPI,EAQJD,IARI,CAQCT,OARD,EASJY,KATI,CASGC,KAAD,IAAW;QAChBX,OAAO,CAACC,GAAR,CAAYU,KAAZ;QACAZ,MAAM;MACP,CAZI,CAAP;IAaD,CAhBD;EAiBD,CApBM,CAAP;AAqBD;;AAEDC,OAAO,CAACY,IAAR,CAAa,4BAAb;AAEAf,OAAO,CAACgB,GAAR,CAAY,CACVpB,KAAK,CAAC;EACJC,IAAI,EAAE,mCADF;EAEJC,EAAE,EAAE,oCAFA;EAGJC,MAAM,EAAE;AAHJ,CAAD,CADK,EAMVH,KAAK,CAAC;EACJC,IAAI,EAAE,mCADF;EAEJC,EAAE,EAAE,8CAFA;EAGJC,MAAM,EAAE;IAAEkB,SAAS,EAAE;EAAb;AAHJ,CAAD,CANK,EAWVrB,KAAK,CAAC;EACJC,IAAI,EAAE,mCADF;EAEJC,EAAE,EAAE,qDAFA;EAGJC,MAAM,EAAE;IACNmB,WAAW,EAAE;MACXC,WAAW,EAAE,KADF;MAEXC,iBAAiB,EAAE,KAFR;MAGXC,aAAa,EAAE,KAHJ;MAIXC,kBAAkB,EAAE,KAJT;MAKXC,aAAa,EAAE;IALJ;EADP;AAHJ,CAAD,CAXK,EAwBV3B,KAAK,CAAC;EACJC,IAAI,EAAE,mCADF;EAEJC,EAAE,EAAE,4CAFA;EAGJC,MAAM,EAAE;IACNyB,MAAM,EAAE,KADF;IAENC,YAAY,EAAE;EAFR;AAHJ,CAAD,CAxBK,CAAZ,EAgCGf,IAhCH,CAgCQ,MAAM;EACZP,OAAO,CAACC,GAAR,CAAY,iCAAZ;EACAD,OAAO,CAACC,GAAR,CACE,sGADF;AAGD,CArCD"},"metadata":{},"sourceType":"module"}