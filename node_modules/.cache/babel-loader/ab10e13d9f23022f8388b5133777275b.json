{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isUniqueESSymbolType = exports.isUnionType = exports.isUnionOrIntersectionType = exports.isTypeVariable = exports.isTypeReference = exports.isTypeParameter = exports.isSubstitutionType = exports.isObjectType = exports.isLiteralType = exports.isIntersectionType = exports.isInterfaceType = exports.isInstantiableType = exports.isIndexedAccessype = exports.isIndexedAccessType = exports.isGenericType = exports.isEnumType = exports.isConditionalType = void 0;\n\nconst ts = require(\"typescript\");\n\nfunction isConditionalType(type) {\n  return (type.flags & ts.TypeFlags.Conditional) !== 0;\n}\n\nexports.isConditionalType = isConditionalType;\n\nfunction isEnumType(type) {\n  return (type.flags & ts.TypeFlags.Enum) !== 0;\n}\n\nexports.isEnumType = isEnumType;\n\nfunction isGenericType(type) {\n  return (type.flags & ts.TypeFlags.Object) !== 0 && (type.objectFlags & ts.ObjectFlags.ClassOrInterface) !== 0 && (type.objectFlags & ts.ObjectFlags.Reference) !== 0;\n}\n\nexports.isGenericType = isGenericType;\n\nfunction isIndexedAccessType(type) {\n  return (type.flags & ts.TypeFlags.IndexedAccess) !== 0;\n}\n\nexports.isIndexedAccessType = isIndexedAccessType;\n\nfunction isIndexedAccessype(type) {\n  return (type.flags & ts.TypeFlags.Index) !== 0;\n}\n\nexports.isIndexedAccessype = isIndexedAccessype;\n\nfunction isInstantiableType(type) {\n  return (type.flags & ts.TypeFlags.Instantiable) !== 0;\n}\n\nexports.isInstantiableType = isInstantiableType;\n\nfunction isInterfaceType(type) {\n  return (type.flags & ts.TypeFlags.Object) !== 0 && (type.objectFlags & ts.ObjectFlags.ClassOrInterface) !== 0;\n}\n\nexports.isInterfaceType = isInterfaceType;\n\nfunction isIntersectionType(type) {\n  return (type.flags & ts.TypeFlags.Intersection) !== 0;\n}\n\nexports.isIntersectionType = isIntersectionType;\n\nfunction isLiteralType(type) {\n  return (type.flags & (ts.TypeFlags.StringOrNumberLiteral | ts.TypeFlags.BigIntLiteral)) !== 0;\n}\n\nexports.isLiteralType = isLiteralType;\n\nfunction isObjectType(type) {\n  return (type.flags & ts.TypeFlags.Object) !== 0;\n}\n\nexports.isObjectType = isObjectType;\n\nfunction isSubstitutionType(type) {\n  return (type.flags & ts.TypeFlags.Substitution) !== 0;\n}\n\nexports.isSubstitutionType = isSubstitutionType;\n\nfunction isTypeParameter(type) {\n  return (type.flags & ts.TypeFlags.TypeParameter) !== 0;\n}\n\nexports.isTypeParameter = isTypeParameter;\n\nfunction isTypeReference(type) {\n  return (type.flags & ts.TypeFlags.Object) !== 0 && (type.objectFlags & ts.ObjectFlags.Reference) !== 0;\n}\n\nexports.isTypeReference = isTypeReference;\n\nfunction isTypeVariable(type) {\n  return (type.flags & ts.TypeFlags.TypeVariable) !== 0;\n}\n\nexports.isTypeVariable = isTypeVariable;\n\nfunction isUnionOrIntersectionType(type) {\n  return (type.flags & ts.TypeFlags.UnionOrIntersection) !== 0;\n}\n\nexports.isUnionOrIntersectionType = isUnionOrIntersectionType;\n\nfunction isUnionType(type) {\n  return (type.flags & ts.TypeFlags.Union) !== 0;\n}\n\nexports.isUnionType = isUnionType;\n\nfunction isUniqueESSymbolType(type) {\n  return (type.flags & ts.TypeFlags.UniqueESSymbol) !== 0;\n}\n\nexports.isUniqueESSymbolType = isUniqueESSymbolType;","map":{"version":3,"mappings":"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","names":["isConditionalType","type","flags","ts","TypeFlags","Conditional","exports","isEnumType","Enum","isGenericType","Object","objectFlags","ObjectFlags","ClassOrInterface","Reference","isIndexedAccessType","IndexedAccess","isIndexedAccessype","Index","isInstantiableType","Instantiable","isInterfaceType","isIntersectionType","Intersection","isLiteralType","StringOrNumberLiteral","BigIntLiteral","isObjectType","isSubstitutionType","Substitution","isTypeParameter","TypeParameter","isTypeReference","isTypeVariable","TypeVariable","isUnionOrIntersectionType","UnionOrIntersection","isUnionType","Union","isUniqueESSymbolType","UniqueESSymbol"],"sources":["type.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}