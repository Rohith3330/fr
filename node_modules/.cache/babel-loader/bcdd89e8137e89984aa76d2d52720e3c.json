{"ast":null,"code":"/**\n * @fileoverview Prefer exact proptype definitions\n */\n'use strict';\n\nconst Components = require('../util/Components');\n\nconst docsUrl = require('../util/docsUrl');\n\nconst propsUtil = require('../util/props');\n\nconst propWrapperUtil = require('../util/propWrapper');\n\nconst variableUtil = require('../util/variable');\n\nconst report = require('../util/report'); // -----------------------------------------------------------------------------\n// Rule Definition\n// -----------------------------------------------------------------------------\n\n\nconst messages = {\n  propTypes: 'Component propTypes should be exact by using {{exactPropWrappers}}.',\n  flow: 'Component flow props should be set with exact objects.'\n};\nmodule.exports = {\n  meta: {\n    docs: {\n      description: 'Prefer exact proptype definitions',\n      category: 'Possible Errors',\n      recommended: false,\n      url: docsUrl('prefer-exact-props')\n    },\n    messages,\n    schema: []\n  },\n  create: Components.detect((context, components, utils) => {\n    const typeAliases = {};\n    const exactWrappers = propWrapperUtil.getExactPropWrapperFunctions(context);\n    const sourceCode = context.getSourceCode();\n\n    function getPropTypesErrorMessage() {\n      const formattedWrappers = propWrapperUtil.formatPropWrapperFunctions(exactWrappers);\n      const message = exactWrappers.size > 1 ? `one of ${formattedWrappers}` : formattedWrappers;\n      return {\n        exactPropWrappers: message\n      };\n    }\n\n    function isNonExactObjectTypeAnnotation(node) {\n      return node && node.type === 'ObjectTypeAnnotation' && node.properties.length > 0 && !node.exact;\n    }\n\n    function hasNonExactObjectTypeAnnotation(node) {\n      const typeAnnotation = node.typeAnnotation;\n      return typeAnnotation && typeAnnotation.typeAnnotation && isNonExactObjectTypeAnnotation(typeAnnotation.typeAnnotation);\n    }\n\n    function hasGenericTypeAnnotation(node) {\n      const typeAnnotation = node.typeAnnotation;\n      return typeAnnotation && typeAnnotation.typeAnnotation && typeAnnotation.typeAnnotation.type === 'GenericTypeAnnotation';\n    }\n\n    function isNonEmptyObjectExpression(node) {\n      return node && node.type === 'ObjectExpression' && node.properties.length > 0;\n    }\n\n    function isNonExactPropWrapperFunction(node) {\n      return node && node.type === 'CallExpression' && !propWrapperUtil.isExactPropWrapperFunction(context, sourceCode.getText(node.callee));\n    }\n\n    function reportPropTypesError(node) {\n      report(context, messages.propTypes, 'propTypes', {\n        node,\n        data: getPropTypesErrorMessage()\n      });\n    }\n\n    function reportFlowError(node) {\n      report(context, messages.flow, 'flow', {\n        node\n      });\n    }\n\n    return {\n      TypeAlias(node) {\n        // working around an issue with eslint@3 and babel-eslint not finding the TypeAlias in scope\n        typeAliases[node.id.name] = node;\n      },\n\n      'ClassProperty, PropertyDefinition'(node) {\n        if (!propsUtil.isPropTypesDeclaration(node)) {\n          return;\n        }\n\n        if (hasNonExactObjectTypeAnnotation(node)) {\n          reportFlowError(node);\n        } else if (exactWrappers.size > 0 && isNonEmptyObjectExpression(node.value)) {\n          reportPropTypesError(node);\n        } else if (exactWrappers.size > 0 && isNonExactPropWrapperFunction(node.value)) {\n          reportPropTypesError(node);\n        }\n      },\n\n      Identifier(node) {\n        if (!utils.getStatelessComponent(node.parent)) {\n          return;\n        }\n\n        if (hasNonExactObjectTypeAnnotation(node)) {\n          reportFlowError(node);\n        } else if (hasGenericTypeAnnotation(node)) {\n          const identifier = node.typeAnnotation.typeAnnotation.id.name;\n          const typeAlias = typeAliases[identifier];\n          const propsDefinition = typeAlias ? typeAlias.right : null;\n\n          if (isNonExactObjectTypeAnnotation(propsDefinition)) {\n            reportFlowError(node);\n          }\n        }\n      },\n\n      MemberExpression(node) {\n        if (!propsUtil.isPropTypesDeclaration(node) || exactWrappers.size === 0) {\n          return;\n        }\n\n        const right = node.parent.right;\n\n        if (isNonEmptyObjectExpression(right)) {\n          reportPropTypesError(node);\n        } else if (isNonExactPropWrapperFunction(right)) {\n          reportPropTypesError(node);\n        } else if (right.type === 'Identifier') {\n          const identifier = right.name;\n          const propsDefinition = variableUtil.findVariableByName(context, identifier);\n\n          if (isNonEmptyObjectExpression(propsDefinition)) {\n            reportPropTypesError(node);\n          } else if (isNonExactPropWrapperFunction(propsDefinition)) {\n            reportPropTypesError(node);\n          }\n        }\n      }\n\n    };\n  })\n};","map":{"version":3,"names":["Components","require","docsUrl","propsUtil","propWrapperUtil","variableUtil","report","messages","propTypes","flow","module","exports","meta","docs","description","category","recommended","url","schema","create","detect","context","components","utils","typeAliases","exactWrappers","getExactPropWrapperFunctions","sourceCode","getSourceCode","getPropTypesErrorMessage","formattedWrappers","formatPropWrapperFunctions","message","size","exactPropWrappers","isNonExactObjectTypeAnnotation","node","type","properties","length","exact","hasNonExactObjectTypeAnnotation","typeAnnotation","hasGenericTypeAnnotation","isNonEmptyObjectExpression","isNonExactPropWrapperFunction","isExactPropWrapperFunction","getText","callee","reportPropTypesError","data","reportFlowError","TypeAlias","id","name","isPropTypesDeclaration","value","Identifier","getStatelessComponent","parent","identifier","typeAlias","propsDefinition","right","MemberExpression","findVariableByName"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/eslint-plugin-react/lib/rules/prefer-exact-props.js"],"sourcesContent":["/**\n * @fileoverview Prefer exact proptype definitions\n */\n\n'use strict';\n\nconst Components = require('../util/Components');\nconst docsUrl = require('../util/docsUrl');\nconst propsUtil = require('../util/props');\nconst propWrapperUtil = require('../util/propWrapper');\nconst variableUtil = require('../util/variable');\nconst report = require('../util/report');\n\n// -----------------------------------------------------------------------------\n// Rule Definition\n// -----------------------------------------------------------------------------\n\nconst messages = {\n  propTypes: 'Component propTypes should be exact by using {{exactPropWrappers}}.',\n  flow: 'Component flow props should be set with exact objects.',\n};\n\nmodule.exports = {\n  meta: {\n    docs: {\n      description: 'Prefer exact proptype definitions',\n      category: 'Possible Errors',\n      recommended: false,\n      url: docsUrl('prefer-exact-props'),\n    },\n    messages,\n    schema: [],\n  },\n\n  create: Components.detect((context, components, utils) => {\n    const typeAliases = {};\n    const exactWrappers = propWrapperUtil.getExactPropWrapperFunctions(context);\n    const sourceCode = context.getSourceCode();\n\n    function getPropTypesErrorMessage() {\n      const formattedWrappers = propWrapperUtil.formatPropWrapperFunctions(exactWrappers);\n      const message = exactWrappers.size > 1 ? `one of ${formattedWrappers}` : formattedWrappers;\n      return { exactPropWrappers: message };\n    }\n\n    function isNonExactObjectTypeAnnotation(node) {\n      return (\n        node\n        && node.type === 'ObjectTypeAnnotation'\n        && node.properties.length > 0\n        && !node.exact\n      );\n    }\n\n    function hasNonExactObjectTypeAnnotation(node) {\n      const typeAnnotation = node.typeAnnotation;\n      return (\n        typeAnnotation\n        && typeAnnotation.typeAnnotation\n        && isNonExactObjectTypeAnnotation(typeAnnotation.typeAnnotation)\n      );\n    }\n\n    function hasGenericTypeAnnotation(node) {\n      const typeAnnotation = node.typeAnnotation;\n      return (\n        typeAnnotation\n        && typeAnnotation.typeAnnotation\n        && typeAnnotation.typeAnnotation.type === 'GenericTypeAnnotation'\n      );\n    }\n\n    function isNonEmptyObjectExpression(node) {\n      return (\n        node\n        && node.type === 'ObjectExpression'\n        && node.properties.length > 0\n      );\n    }\n\n    function isNonExactPropWrapperFunction(node) {\n      return (\n        node\n        && node.type === 'CallExpression'\n        && !propWrapperUtil.isExactPropWrapperFunction(context, sourceCode.getText(node.callee))\n      );\n    }\n\n    function reportPropTypesError(node) {\n      report(context, messages.propTypes, 'propTypes', {\n        node,\n        data: getPropTypesErrorMessage(),\n      });\n    }\n\n    function reportFlowError(node) {\n      report(context, messages.flow, 'flow', {\n        node,\n      });\n    }\n\n    return {\n      TypeAlias(node) {\n        // working around an issue with eslint@3 and babel-eslint not finding the TypeAlias in scope\n        typeAliases[node.id.name] = node;\n      },\n\n      'ClassProperty, PropertyDefinition'(node) {\n        if (!propsUtil.isPropTypesDeclaration(node)) {\n          return;\n        }\n\n        if (hasNonExactObjectTypeAnnotation(node)) {\n          reportFlowError(node);\n        } else if (exactWrappers.size > 0 && isNonEmptyObjectExpression(node.value)) {\n          reportPropTypesError(node);\n        } else if (exactWrappers.size > 0 && isNonExactPropWrapperFunction(node.value)) {\n          reportPropTypesError(node);\n        }\n      },\n\n      Identifier(node) {\n        if (!utils.getStatelessComponent(node.parent)) {\n          return;\n        }\n\n        if (hasNonExactObjectTypeAnnotation(node)) {\n          reportFlowError(node);\n        } else if (hasGenericTypeAnnotation(node)) {\n          const identifier = node.typeAnnotation.typeAnnotation.id.name;\n          const typeAlias = typeAliases[identifier];\n          const propsDefinition = typeAlias ? typeAlias.right : null;\n          if (isNonExactObjectTypeAnnotation(propsDefinition)) {\n            reportFlowError(node);\n          }\n        }\n      },\n\n      MemberExpression(node) {\n        if (!propsUtil.isPropTypesDeclaration(node) || exactWrappers.size === 0) {\n          return;\n        }\n\n        const right = node.parent.right;\n        if (isNonEmptyObjectExpression(right)) {\n          reportPropTypesError(node);\n        } else if (isNonExactPropWrapperFunction(right)) {\n          reportPropTypesError(node);\n        } else if (right.type === 'Identifier') {\n          const identifier = right.name;\n          const propsDefinition = variableUtil.findVariableByName(context, identifier);\n          if (isNonEmptyObjectExpression(propsDefinition)) {\n            reportPropTypesError(node);\n          } else if (isNonExactPropWrapperFunction(propsDefinition)) {\n            reportPropTypesError(node);\n          }\n        }\n      },\n    };\n  }),\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}