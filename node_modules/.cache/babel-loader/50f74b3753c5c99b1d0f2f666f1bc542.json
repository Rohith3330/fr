{"ast":null,"code":"/**\n * @fileoverview Enforce label tags have htmlFor attribute.\n * @author Ethan Cohen\n */\n// -----------------------------------------------------------------------------\n// Requirements\n// -----------------------------------------------------------------------------\nimport { RuleTester } from 'eslint';\nimport assign from 'object.assign';\nimport parserOptionsMapper from '../../__util__/parserOptionsMapper';\nimport rule from '../../../src/rules/label-has-for'; // -----------------------------------------------------------------------------\n// Tests\n// -----------------------------------------------------------------------------\n\nconst ruleTester = new RuleTester();\nconst expectedNestingError = {\n  message: 'Form label must have the following type of associated control: nesting',\n  type: 'JSXOpeningElement'\n};\nconst expectedSomeError = {\n  message: 'Form label must have ANY of the following types of associated control: nesting, id',\n  type: 'JSXOpeningElement'\n};\nconst expectedEveryError = {\n  message: 'Form label must have ALL of the following types of associated control: nesting, id',\n  type: 'JSXOpeningElement'\n};\nconst optionsComponents = [{\n  components: ['Label', 'Descriptor']\n}];\nconst optionsRequiredNesting = [{\n  required: 'nesting'\n}];\nconst optionsRequiredSome = [{\n  required: {\n    some: ['nesting', 'id']\n  }\n}];\nconst optionsRequiredEvery = [{\n  required: {\n    every: ['nesting', 'id']\n  }\n}];\nconst optionsChildrenAllowed = [{\n  allowChildren: true\n}];\nruleTester.run('label-has-for', rule, {\n  valid: [// DEFAULT ELEMENT 'label' TESTS\n  {\n    code: '<div />'\n  }, {\n    code: '<label htmlFor=\"foo\"><input /></label>'\n  }, {\n    code: '<label htmlFor=\"foo\"><textarea /></label>'\n  }, {\n    code: '<Label />'\n  }, // lower-case convention refers to real HTML elements.\n  {\n    code: '<Label htmlFor=\"foo\" />'\n  }, {\n    code: '<Descriptor />'\n  }, {\n    code: '<Descriptor htmlFor=\"foo\">Test!</Descriptor>'\n  }, {\n    code: '<UX.Layout>test</UX.Layout>'\n  }, // CUSTOM ELEMENT ARRAY OPTION TESTS\n  {\n    code: '<Label htmlFor=\"foo\" />',\n    options: [assign({}, optionsComponents[0], optionsRequiredSome[0])]\n  }, {\n    code: '<Label htmlFor={\"foo\"} />',\n    options: [assign({}, optionsComponents[0], optionsRequiredSome[0])]\n  }, {\n    code: '<Label htmlFor={foo} />',\n    options: [assign({}, optionsComponents[0], optionsRequiredSome[0])]\n  }, {\n    code: '<Label htmlFor={`${id}`} />',\n    options: [assign({}, optionsComponents[0], optionsRequiredSome[0])]\n  }, {\n    code: '<div />',\n    options: optionsComponents\n  }, {\n    code: '<Label htmlFor=\"something\"><input /></Label>',\n    options: optionsComponents\n  }, {\n    code: '<Label htmlFor=\"foo\">Test!</Label>',\n    options: [assign({}, optionsComponents[0], optionsRequiredSome[0])]\n  }, {\n    code: '<Descriptor htmlFor=\"foo\" />',\n    options: [assign({}, optionsComponents[0], optionsRequiredSome[0])]\n  }, {\n    code: '<Descriptor htmlFor={\"foo\"} />',\n    options: [assign({}, optionsComponents[0], optionsRequiredSome[0])]\n  }, {\n    code: '<Descriptor htmlFor={foo} />',\n    options: [assign({}, optionsComponents[0], optionsRequiredSome[0])]\n  }, {\n    code: '<Descriptor htmlFor={`${id}`} />',\n    options: [assign({}, optionsComponents[0], optionsRequiredSome[0])]\n  }, {\n    code: '<Descriptor htmlFor=\"foo\">Test!</Descriptor>',\n    options: [assign({}, optionsComponents[0], optionsRequiredSome[0])]\n  }, {\n    code: '<label htmlFor=\"foo\" />',\n    options: optionsRequiredSome\n  }, {\n    code: '<label htmlFor={\"foo\"} />',\n    options: optionsRequiredSome\n  }, {\n    code: '<label htmlFor={foo} />',\n    options: optionsRequiredSome\n  }, {\n    code: '<label htmlFor={`${id}`} />',\n    options: optionsRequiredSome\n  }, {\n    code: '<label htmlFor=\"foo\">Test!</label>',\n    options: optionsRequiredSome\n  }, {\n    code: '<label><input /></label>',\n    options: optionsRequiredSome\n  }, {\n    code: '<label><input /></label>',\n    options: optionsRequiredNesting\n  }, {\n    code: '<label htmlFor=\"input\"><input /></label>',\n    options: optionsRequiredEvery\n  }, {\n    code: '<label><input /></label>',\n    options: optionsChildrenAllowed\n  }, {\n    code: '<Descriptor htmlFor=\"foo\">Test!</Descriptor>',\n    options: [assign({}, optionsComponents, optionsChildrenAllowed)]\n  }, {\n    code: '<label>Test!</label>',\n    options: optionsChildrenAllowed\n  }, {\n    code: '<label htmlFor=\"foo\">Test!</label>',\n    options: optionsChildrenAllowed\n  }, {\n    code: '<label>{children}</label>',\n    options: optionsChildrenAllowed\n  }, {\n    code: '<label htmlFor=\"children\">{children}</label>',\n    options: optionsChildrenAllowed\n  }, {\n    code: '<label htmlFor={id}>{ labelText }<div><input id={id} type=\"checkbox\" name={id} value={value} /></div></label>',\n    options: optionsRequiredEvery\n  }, {\n    code: '<label htmlFor={id}>{ labelText }<div><div><div><div><input id={id} type=\"checkbox\" name={id} value={value} /></div></div></div></div></label>',\n    options: optionsRequiredEvery\n  }].map(parserOptionsMapper),\n  invalid: [// DEFAULT ELEMENT 'label' TESTS\n  {\n    code: '<label id=\"foo\" />',\n    errors: [expectedEveryError],\n    options: optionsRequiredEvery\n  }, {\n    code: '<label htmlFor={undefined} />',\n    errors: [expectedEveryError],\n    options: optionsRequiredEvery\n  }, {\n    code: '<label htmlFor={`${undefined}`} />',\n    errors: [expectedEveryError],\n    options: optionsRequiredEvery\n  }, {\n    code: '<label>First Name</label>',\n    errors: [expectedEveryError],\n    options: optionsRequiredEvery\n  }, {\n    code: '<label {...props}>Foo</label>',\n    errors: [expectedEveryError],\n    options: optionsRequiredEvery\n  }, {\n    code: '<label><input /></label>',\n    errors: [expectedEveryError],\n    options: optionsRequiredEvery\n  }, {\n    code: '<label><textarea /></label>',\n    errors: [expectedEveryError],\n    options: optionsRequiredEvery\n  }, {\n    code: '<label>{children}</label>',\n    errors: [expectedEveryError],\n    options: optionsRequiredEvery\n  }, {\n    code: '<label htmlFor=\"foo\" />',\n    errors: [expectedEveryError],\n    options: optionsRequiredEvery\n  }, {\n    code: '<label htmlFor={\"foo\"} />',\n    errors: [expectedEveryError],\n    options: optionsRequiredEvery\n  }, {\n    code: '<label htmlFor={foo} />',\n    errors: [expectedEveryError],\n    options: optionsRequiredEvery\n  }, {\n    code: '<label htmlFor={`${id}`} />',\n    errors: [expectedEveryError],\n    options: optionsRequiredEvery\n  }, {\n    code: '<label htmlFor=\"foo\">Test!</label>',\n    errors: [expectedEveryError],\n    options: optionsRequiredEvery\n  }, {\n    code: '<label htmlFor={id}>{ labelText }<div><div><div><div><div id={id} type=\"checkbox\" name={id} value={value} /></div></div></div></div></label>',\n    errors: [expectedEveryError],\n    options: optionsRequiredEvery\n  }, //\n  // // CUSTOM ELEMENT ARRAY OPTION TESTS\n  {\n    code: '<Label></Label>',\n    errors: [expectedEveryError],\n    options: optionsComponents\n  }, {\n    code: '<Label htmlFor=\"foo\" />',\n    errors: [expectedEveryError],\n    options: [{ ...optionsComponents[0],\n      ...optionsRequiredEvery[0]\n    }]\n  }, {\n    code: '<Label htmlFor={\"foo\"} />',\n    errors: [expectedEveryError],\n    options: [{ ...optionsComponents[0],\n      ...optionsRequiredEvery[0]\n    }]\n  }, {\n    code: '<Label htmlFor={foo} />',\n    errors: [expectedEveryError],\n    options: [{ ...optionsComponents[0],\n      ...optionsRequiredEvery[0]\n    }]\n  }, {\n    code: '<Label htmlFor={`${id}`} />',\n    errors: [expectedEveryError],\n    options: [{ ...optionsComponents[0],\n      ...optionsRequiredEvery[0]\n    }]\n  }, {\n    code: '<Label htmlFor=\"foo\">Test!</Label>',\n    errors: [expectedEveryError],\n    options: [{ ...optionsComponents[0],\n      ...optionsRequiredEvery[0]\n    }]\n  }, {\n    code: '<Descriptor htmlFor=\"foo\" />',\n    errors: [expectedEveryError],\n    options: [{ ...optionsComponents[0],\n      ...optionsRequiredEvery[0]\n    }]\n  }, {\n    code: '<Descriptor htmlFor={\"foo\"} />',\n    errors: [expectedEveryError],\n    options: [{ ...optionsComponents[0],\n      ...optionsRequiredEvery[0]\n    }]\n  }, {\n    code: '<Descriptor htmlFor={foo} />',\n    errors: [expectedEveryError],\n    options: [{ ...optionsComponents[0],\n      ...optionsRequiredEvery[0]\n    }]\n  }, {\n    code: '<Descriptor htmlFor={`${id}`} />',\n    errors: [expectedEveryError],\n    options: [{ ...optionsComponents[0],\n      ...optionsRequiredEvery[0]\n    }]\n  }, {\n    code: '<Descriptor htmlFor=\"foo\">Test!</Descriptor>',\n    errors: [expectedEveryError],\n    options: [{ ...optionsComponents[0],\n      ...optionsRequiredEvery[0]\n    }]\n  }, {\n    code: '<Label id=\"foo\" />',\n    errors: [expectedEveryError],\n    options: optionsComponents\n  }, {\n    code: '<Label htmlFor={undefined} />',\n    errors: [expectedEveryError],\n    options: optionsComponents\n  }, {\n    code: '<Label htmlFor={`${undefined}`} />',\n    errors: [expectedEveryError],\n    options: optionsComponents\n  }, {\n    code: '<Label>First Name</Label>',\n    errors: [expectedEveryError],\n    options: optionsComponents\n  }, {\n    code: '<Label {...props}>Foo</Label>',\n    errors: [expectedEveryError],\n    options: optionsComponents\n  }, {\n    code: '<Descriptor id=\"foo\" />',\n    errors: [expectedEveryError],\n    options: optionsComponents\n  }, {\n    code: '<Descriptor htmlFor={undefined} />',\n    errors: [expectedEveryError],\n    options: optionsComponents\n  }, {\n    code: '<Descriptor htmlFor={`${undefined}`} />',\n    errors: [expectedEveryError],\n    options: optionsComponents\n  }, {\n    code: '<Descriptor>First Name</Descriptor>',\n    errors: [expectedEveryError],\n    options: optionsComponents\n  }, {\n    code: '<Descriptor {...props}>Foo</Descriptor>',\n    errors: [expectedEveryError],\n    options: optionsComponents\n  }, {\n    code: '<label>{children}</label>',\n    errors: [expectedEveryError],\n    options: optionsComponents\n  }, {\n    code: '<label htmlFor=\"foo\" />',\n    errors: [expectedNestingError],\n    options: optionsRequiredNesting\n  }, {\n    code: '<label>First Name</label>',\n    errors: [expectedNestingError],\n    options: optionsRequiredNesting\n  }, {\n    code: '<label>First Name</label>',\n    errors: [expectedSomeError],\n    options: optionsRequiredSome\n  }, {\n    code: '<label>{children}</label>',\n    errors: [expectedSomeError],\n    options: optionsRequiredSome\n  }, {\n    code: '<label>{children}</label>',\n    errors: [expectedNestingError],\n    options: optionsRequiredNesting\n  }, {\n    code: '<form><input type=\"text\" id=\"howmuch\" value=\"1\" /><label htmlFor=\"howmuch\">How much ?</label></form>',\n    errors: [expectedEveryError],\n    options: optionsRequiredEvery\n  }, {\n    code: '<form><input type=\"text\" id=\"howmuch\" value=\"1\" /><label htmlFor=\"howmuch\">How much ?<span /></label></form>',\n    errors: [expectedEveryError],\n    options: optionsRequiredEvery\n  }].map(parserOptionsMapper)\n});","map":{"version":3,"names":["RuleTester","assign","parserOptionsMapper","rule","ruleTester","expectedNestingError","message","type","expectedSomeError","expectedEveryError","optionsComponents","components","optionsRequiredNesting","required","optionsRequiredSome","some","optionsRequiredEvery","every","optionsChildrenAllowed","allowChildren","run","valid","code","options","map","invalid","errors"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/eslint-plugin-jsx-a11y/__tests__/src/rules/label-has-for-test.js"],"sourcesContent":["/**\n * @fileoverview Enforce label tags have htmlFor attribute.\n * @author Ethan Cohen\n */\n\n// -----------------------------------------------------------------------------\n// Requirements\n// -----------------------------------------------------------------------------\n\nimport { RuleTester } from 'eslint';\nimport assign from 'object.assign';\nimport parserOptionsMapper from '../../__util__/parserOptionsMapper';\nimport rule from '../../../src/rules/label-has-for';\n\n// -----------------------------------------------------------------------------\n// Tests\n// -----------------------------------------------------------------------------\n\nconst ruleTester = new RuleTester();\n\nconst expectedNestingError = {\n  message: 'Form label must have the following type of associated control: nesting',\n  type: 'JSXOpeningElement',\n};\n\nconst expectedSomeError = {\n  message: 'Form label must have ANY of the following types of associated control: nesting, id',\n  type: 'JSXOpeningElement',\n};\n\nconst expectedEveryError = {\n  message: 'Form label must have ALL of the following types of associated control: nesting, id',\n  type: 'JSXOpeningElement',\n};\n\nconst optionsComponents = [{\n  components: ['Label', 'Descriptor'],\n}];\nconst optionsRequiredNesting = [{\n  required: 'nesting',\n}];\nconst optionsRequiredSome = [{\n  required: { some: ['nesting', 'id'] },\n}];\nconst optionsRequiredEvery = [{\n  required: { every: ['nesting', 'id'] },\n}];\nconst optionsChildrenAllowed = [{\n  allowChildren: true,\n}];\n\nruleTester.run('label-has-for', rule, {\n  valid: [\n    // DEFAULT ELEMENT 'label' TESTS\n    { code: '<div />' },\n    { code: '<label htmlFor=\"foo\"><input /></label>' },\n    { code: '<label htmlFor=\"foo\"><textarea /></label>' },\n    { code: '<Label />' }, // lower-case convention refers to real HTML elements.\n    { code: '<Label htmlFor=\"foo\" />' },\n    { code: '<Descriptor />' },\n    { code: '<Descriptor htmlFor=\"foo\">Test!</Descriptor>' },\n    { code: '<UX.Layout>test</UX.Layout>' },\n\n    // CUSTOM ELEMENT ARRAY OPTION TESTS\n    { code: '<Label htmlFor=\"foo\" />', options: [assign({}, optionsComponents[0], optionsRequiredSome[0])] },\n    { code: '<Label htmlFor={\"foo\"} />', options: [assign({}, optionsComponents[0], optionsRequiredSome[0])] },\n    { code: '<Label htmlFor={foo} />', options: [assign({}, optionsComponents[0], optionsRequiredSome[0])] },\n    { code: '<Label htmlFor={`${id}`} />', options: [assign({}, optionsComponents[0], optionsRequiredSome[0])] },\n    { code: '<div />', options: optionsComponents },\n    { code: '<Label htmlFor=\"something\"><input /></Label>', options: optionsComponents },\n    { code: '<Label htmlFor=\"foo\">Test!</Label>', options: [assign({}, optionsComponents[0], optionsRequiredSome[0])] },\n    { code: '<Descriptor htmlFor=\"foo\" />', options: [assign({}, optionsComponents[0], optionsRequiredSome[0])] },\n    { code: '<Descriptor htmlFor={\"foo\"} />', options: [assign({}, optionsComponents[0], optionsRequiredSome[0])] },\n    { code: '<Descriptor htmlFor={foo} />', options: [assign({}, optionsComponents[0], optionsRequiredSome[0])] },\n    { code: '<Descriptor htmlFor={`${id}`} />', options: [assign({}, optionsComponents[0], optionsRequiredSome[0])] },\n    { code: '<Descriptor htmlFor=\"foo\">Test!</Descriptor>', options: [assign({}, optionsComponents[0], optionsRequiredSome[0])] },\n    { code: '<label htmlFor=\"foo\" />', options: optionsRequiredSome },\n    { code: '<label htmlFor={\"foo\"} />', options: optionsRequiredSome },\n    { code: '<label htmlFor={foo} />', options: optionsRequiredSome },\n    { code: '<label htmlFor={`${id}`} />', options: optionsRequiredSome },\n    { code: '<label htmlFor=\"foo\">Test!</label>', options: optionsRequiredSome },\n    { code: '<label><input /></label>', options: optionsRequiredSome },\n    { code: '<label><input /></label>', options: optionsRequiredNesting },\n    { code: '<label htmlFor=\"input\"><input /></label>', options: optionsRequiredEvery },\n    { code: '<label><input /></label>', options: optionsChildrenAllowed },\n    { code: '<Descriptor htmlFor=\"foo\">Test!</Descriptor>', options: [assign({}, optionsComponents, optionsChildrenAllowed)] },\n    { code: '<label>Test!</label>', options: optionsChildrenAllowed },\n    { code: '<label htmlFor=\"foo\">Test!</label>', options: optionsChildrenAllowed },\n    { code: '<label>{children}</label>', options: optionsChildrenAllowed },\n    { code: '<label htmlFor=\"children\">{children}</label>', options: optionsChildrenAllowed },\n    { code: '<label htmlFor={id}>{ labelText }<div><input id={id} type=\"checkbox\" name={id} value={value} /></div></label>', options: optionsRequiredEvery },\n    { code: '<label htmlFor={id}>{ labelText }<div><div><div><div><input id={id} type=\"checkbox\" name={id} value={value} /></div></div></div></div></label>', options: optionsRequiredEvery },\n  ].map(parserOptionsMapper),\n  invalid: [\n    // DEFAULT ELEMENT 'label' TESTS\n    { code: '<label id=\"foo\" />', errors: [expectedEveryError], options: optionsRequiredEvery },\n    { code: '<label htmlFor={undefined} />', errors: [expectedEveryError], options: optionsRequiredEvery },\n    { code: '<label htmlFor={`${undefined}`} />', errors: [expectedEveryError], options: optionsRequiredEvery },\n    { code: '<label>First Name</label>', errors: [expectedEveryError], options: optionsRequiredEvery },\n    { code: '<label {...props}>Foo</label>', errors: [expectedEveryError], options: optionsRequiredEvery },\n    { code: '<label><input /></label>', errors: [expectedEveryError], options: optionsRequiredEvery },\n    { code: '<label><textarea /></label>', errors: [expectedEveryError], options: optionsRequiredEvery },\n    { code: '<label>{children}</label>', errors: [expectedEveryError], options: optionsRequiredEvery },\n    { code: '<label htmlFor=\"foo\" />', errors: [expectedEveryError], options: optionsRequiredEvery },\n    { code: '<label htmlFor={\"foo\"} />', errors: [expectedEveryError], options: optionsRequiredEvery },\n    { code: '<label htmlFor={foo} />', errors: [expectedEveryError], options: optionsRequiredEvery },\n    { code: '<label htmlFor={`${id}`} />', errors: [expectedEveryError], options: optionsRequiredEvery },\n    { code: '<label htmlFor=\"foo\">Test!</label>', errors: [expectedEveryError], options: optionsRequiredEvery },\n    { code: '<label htmlFor={id}>{ labelText }<div><div><div><div><div id={id} type=\"checkbox\" name={id} value={value} /></div></div></div></div></label>', errors: [expectedEveryError], options: optionsRequiredEvery },\n    //\n    // // CUSTOM ELEMENT ARRAY OPTION TESTS\n    {\n      code: '<Label></Label>',\n      errors: [expectedEveryError],\n      options: optionsComponents,\n    },\n    {\n      code: '<Label htmlFor=\"foo\" />',\n      errors: [expectedEveryError],\n      options: [{ ...optionsComponents[0], ...optionsRequiredEvery[0] }],\n    },\n    {\n      code: '<Label htmlFor={\"foo\"} />',\n      errors: [expectedEveryError],\n      options: [{ ...optionsComponents[0], ...optionsRequiredEvery[0] }],\n    },\n    {\n      code: '<Label htmlFor={foo} />',\n      errors: [expectedEveryError],\n      options: [{ ...optionsComponents[0], ...optionsRequiredEvery[0] }],\n    },\n    {\n      code: '<Label htmlFor={`${id}`} />',\n      errors: [expectedEveryError],\n      options: [{ ...optionsComponents[0], ...optionsRequiredEvery[0] }],\n    },\n    {\n      code: '<Label htmlFor=\"foo\">Test!</Label>',\n      errors: [expectedEveryError],\n      options: [{ ...optionsComponents[0], ...optionsRequiredEvery[0] }],\n    },\n    {\n      code: '<Descriptor htmlFor=\"foo\" />',\n      errors: [expectedEveryError],\n      options: [{ ...optionsComponents[0], ...optionsRequiredEvery[0] }],\n    },\n    {\n      code: '<Descriptor htmlFor={\"foo\"} />',\n      errors: [expectedEveryError],\n      options: [{ ...optionsComponents[0], ...optionsRequiredEvery[0] }],\n    },\n    {\n      code: '<Descriptor htmlFor={foo} />',\n      errors: [expectedEveryError],\n      options: [{ ...optionsComponents[0], ...optionsRequiredEvery[0] }],\n    },\n    {\n      code: '<Descriptor htmlFor={`${id}`} />',\n      errors: [expectedEveryError],\n      options: [{ ...optionsComponents[0], ...optionsRequiredEvery[0] }],\n    },\n    {\n      code: '<Descriptor htmlFor=\"foo\">Test!</Descriptor>',\n      errors: [expectedEveryError],\n      options: [{ ...optionsComponents[0], ...optionsRequiredEvery[0] }],\n    },\n    { code: '<Label id=\"foo\" />', errors: [expectedEveryError], options: optionsComponents },\n    {\n      code: '<Label htmlFor={undefined} />',\n      errors: [expectedEveryError],\n      options: optionsComponents,\n    },\n    {\n      code: '<Label htmlFor={`${undefined}`} />',\n      errors: [expectedEveryError],\n      options: optionsComponents,\n    },\n    { code: '<Label>First Name</Label>', errors: [expectedEveryError], options: optionsComponents },\n    {\n      code: '<Label {...props}>Foo</Label>',\n      errors: [expectedEveryError],\n      options: optionsComponents,\n    },\n    { code: '<Descriptor id=\"foo\" />', errors: [expectedEveryError], options: optionsComponents },\n    {\n      code: '<Descriptor htmlFor={undefined} />',\n      errors: [expectedEveryError],\n      options: optionsComponents,\n    },\n    {\n      code: '<Descriptor htmlFor={`${undefined}`} />',\n      errors: [expectedEveryError],\n      options: optionsComponents,\n    },\n    {\n      code: '<Descriptor>First Name</Descriptor>',\n      errors: [expectedEveryError],\n      options: optionsComponents,\n    },\n    {\n      code: '<Descriptor {...props}>Foo</Descriptor>',\n      errors: [expectedEveryError],\n      options: optionsComponents,\n    },\n    { code: '<label>{children}</label>', errors: [expectedEveryError], options: optionsComponents },\n    { code: '<label htmlFor=\"foo\" />', errors: [expectedNestingError], options: optionsRequiredNesting },\n    { code: '<label>First Name</label>', errors: [expectedNestingError], options: optionsRequiredNesting },\n    { code: '<label>First Name</label>', errors: [expectedSomeError], options: optionsRequiredSome },\n    { code: '<label>{children}</label>', errors: [expectedSomeError], options: optionsRequiredSome },\n    { code: '<label>{children}</label>', errors: [expectedNestingError], options: optionsRequiredNesting },\n    {\n      code: '<form><input type=\"text\" id=\"howmuch\" value=\"1\" /><label htmlFor=\"howmuch\">How much ?</label></form>',\n      errors: [expectedEveryError],\n      options: optionsRequiredEvery,\n    },\n    {\n      code: '<form><input type=\"text\" id=\"howmuch\" value=\"1\" /><label htmlFor=\"howmuch\">How much ?<span /></label></form>',\n      errors: [expectedEveryError],\n      options: optionsRequiredEvery,\n    },\n  ].map(parserOptionsMapper),\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}