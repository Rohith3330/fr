{"ast":null,"code":"'use strict';\n\nconst {\n  list\n} = require('postcss');\n\nconst {\n  isWidth,\n  isStyle,\n  isColor\n} = require('./validateWsc.js');\n\nconst none = /^\\s*(none|medium)(\\s+none(\\s+(none|currentcolor))?)?\\s*$/i;\n/* Approximate https://drafts.csswg.org/css-values-4/#typedef-dashed-ident */\n// eslint-disable-next-line no-control-regex\n\nconst varRE = /--(\\w|-|[^\\x00-\\x7F])+/g;\n/** @type {(v: string) => string} */\n\nconst toLower = v => {\n  let match;\n  let lastIndex = 0;\n  let result = '';\n  varRE.lastIndex = 0;\n\n  while ((match = varRE.exec(v)) !== null) {\n    if (match.index > lastIndex) {\n      result += v.substring(lastIndex, match.index).toLowerCase();\n    }\n\n    result += match[0];\n    lastIndex = match.index + match[0].length;\n  }\n\n  if (lastIndex < v.length) {\n    result += v.substring(lastIndex).toLowerCase();\n  }\n\n  if (result === '') {\n    return v;\n  }\n\n  return result;\n};\n/**\n * @param {string} value\n * @return {[string, string, string]}\n */\n\n\nmodule.exports = function parseWsc(value) {\n  if (none.test(value)) {\n    return ['medium', 'none', 'currentcolor'];\n  }\n\n  let width, style, color;\n  const values = list.space(value);\n\n  if (values.length > 1 && isStyle(values[1]) && values[0].toLowerCase() === 'none') {\n    values.unshift();\n    width = '0';\n  }\n  /** @type {string[]} */\n\n\n  const unknown = [];\n  values.forEach(v => {\n    if (isStyle(v)) {\n      style = toLower(v);\n    } else if (isWidth(v)) {\n      width = toLower(v);\n    } else if (isColor(v)) {\n      color = toLower(v);\n    } else {\n      unknown.push(v);\n    }\n  });\n\n  if (unknown.length) {\n    if (!width && style && color) {\n      width = unknown.pop();\n    }\n\n    if (width && !style && color) {\n      style = unknown.pop();\n    }\n\n    if (width && style && !color) {\n      color = unknown.pop();\n    }\n  }\n\n  return (\n    /** @type {[string, string, string]} */\n    [width, style, color]\n  );\n};","map":{"version":3,"names":["list","require","isWidth","isStyle","isColor","none","varRE","toLower","v","match","lastIndex","result","exec","index","substring","toLowerCase","length","module","exports","parseWsc","value","test","width","style","color","values","space","unshift","unknown","forEach","push","pop"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/postcss-merge-longhand/src/lib/parseWsc.js"],"sourcesContent":["'use strict';\nconst { list } = require('postcss');\nconst { isWidth, isStyle, isColor } = require('./validateWsc.js');\n\nconst none = /^\\s*(none|medium)(\\s+none(\\s+(none|currentcolor))?)?\\s*$/i;\n\n/* Approximate https://drafts.csswg.org/css-values-4/#typedef-dashed-ident */\n// eslint-disable-next-line no-control-regex\nconst varRE = /--(\\w|-|[^\\x00-\\x7F])+/g;\n/** @type {(v: string) => string} */\nconst toLower = (v) => {\n  let match;\n  let lastIndex = 0;\n  let result = '';\n  varRE.lastIndex = 0;\n  while ((match = varRE.exec(v)) !== null) {\n    if (match.index > lastIndex) {\n      result += v.substring(lastIndex, match.index).toLowerCase();\n    }\n    result += match[0];\n    lastIndex = match.index + match[0].length;\n  }\n  if (lastIndex < v.length) {\n    result += v.substring(lastIndex).toLowerCase();\n  }\n  if (result === '') {\n    return v;\n  }\n  return result;\n};\n\n/**\n * @param {string} value\n * @return {[string, string, string]}\n */\nmodule.exports = function parseWsc(value) {\n  if (none.test(value)) {\n    return ['medium', 'none', 'currentcolor'];\n  }\n\n  let width, style, color;\n\n  const values = list.space(value);\n  if (\n    values.length > 1 &&\n    isStyle(values[1]) &&\n    values[0].toLowerCase() === 'none'\n  ) {\n    values.unshift();\n    width = '0';\n  }\n\n  /** @type {string[]} */\n  const unknown = [];\n\n  values.forEach((v) => {\n    if (isStyle(v)) {\n      style = toLower(v);\n    } else if (isWidth(v)) {\n      width = toLower(v);\n    } else if (isColor(v)) {\n      color = toLower(v);\n    } else {\n      unknown.push(v);\n    }\n  });\n\n  if (unknown.length) {\n    if (!width && style && color) {\n      width = unknown.pop();\n    }\n\n    if (width && !style && color) {\n      style = unknown.pop();\n    }\n\n    if (width && style && !color) {\n      color = unknown.pop();\n    }\n  }\n\n  return /** @type {[string, string, string]} */ ([width, style, color]);\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}