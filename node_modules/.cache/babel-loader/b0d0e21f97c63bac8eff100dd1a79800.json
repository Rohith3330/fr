{"ast":null,"code":"/* global ʎɐɹɔosǝʌɹǝs */\nconst {\n  ClientSocket\n} = require('webpack-plugin-serve/lib/client/ClientSocket');\n/**\n * Initializes a socket server for HMR for webpack-plugin-serve.\n * @param {function(*): void} messageHandler A handler to consume Webpack compilation messages.\n * @returns {void}\n */\n\n\nfunction initWPSSocket(messageHandler) {\n  /**\n   * The hard-coded options injection key from webpack-plugin-serve.\n   *\n   * [Ref](https://github.com/shellscape/webpack-plugin-serve/blob/aeb49f14e900802c98df4a4607a76bc67b1cffdf/lib/index.js#L258)\n   * @type {Object | undefined}\n   */\n  let options;\n\n  try {\n    options = ʎɐɹɔosǝʌɹǝs;\n  } catch (e) {\n    // Bail out because this indicates the plugin is not included\n    return;\n  }\n\n  const {\n    address,\n    client = {},\n    secure\n  } = options;\n  const protocol = secure ? 'wss' : 'ws';\n  const socket = new ClientSocket(client, protocol + '://' + (client.address || address) + '/wps');\n  socket.addEventListener('message', function listener(message) {\n    const {\n      action,\n      data\n    } = JSON.parse(message.data);\n\n    switch (action) {\n      case 'done':\n        {\n          messageHandler({\n            type: 'ok'\n          });\n          break;\n        }\n\n      case 'problems':\n        {\n          if (data.errors.length) {\n            messageHandler({\n              type: 'errors',\n              data: data.errors\n            });\n          } else if (data.warnings.length) {\n            messageHandler({\n              type: 'warnings',\n              data: data.warnings\n            });\n          }\n\n          break;\n        }\n\n      default:\n        {// Do nothing\n        }\n    }\n  });\n}\n\nmodule.exports = {\n  init: initWPSSocket\n};","map":{"version":3,"names":["ClientSocket","require","initWPSSocket","messageHandler","options","ʎɐɹɔosǝʌɹǝs","e","address","client","secure","protocol","socket","addEventListener","listener","message","action","data","JSON","parse","type","errors","length","warnings","module","exports","init"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/@pmmmwh/react-refresh-webpack-plugin/sockets/WPSSocket.js"],"sourcesContent":["/* global ʎɐɹɔosǝʌɹǝs */\nconst { ClientSocket } = require('webpack-plugin-serve/lib/client/ClientSocket');\n\n/**\n * Initializes a socket server for HMR for webpack-plugin-serve.\n * @param {function(*): void} messageHandler A handler to consume Webpack compilation messages.\n * @returns {void}\n */\nfunction initWPSSocket(messageHandler) {\n  /**\n   * The hard-coded options injection key from webpack-plugin-serve.\n   *\n   * [Ref](https://github.com/shellscape/webpack-plugin-serve/blob/aeb49f14e900802c98df4a4607a76bc67b1cffdf/lib/index.js#L258)\n   * @type {Object | undefined}\n   */\n  let options;\n  try {\n    options = ʎɐɹɔosǝʌɹǝs;\n  } catch (e) {\n    // Bail out because this indicates the plugin is not included\n    return;\n  }\n\n  const { address, client = {}, secure } = options;\n  const protocol = secure ? 'wss' : 'ws';\n  const socket = new ClientSocket(client, protocol + '://' + (client.address || address) + '/wps');\n\n  socket.addEventListener('message', function listener(message) {\n    const { action, data } = JSON.parse(message.data);\n\n    switch (action) {\n      case 'done': {\n        messageHandler({ type: 'ok' });\n        break;\n      }\n      case 'problems': {\n        if (data.errors.length) {\n          messageHandler({ type: 'errors', data: data.errors });\n        } else if (data.warnings.length) {\n          messageHandler({ type: 'warnings', data: data.warnings });\n        }\n        break;\n      }\n      default: {\n        // Do nothing\n      }\n    }\n  });\n}\n\nmodule.exports = { init: initWPSSocket };\n"],"mappings":"AAAA;AACA,MAAM;EAAEA;AAAF,IAAmBC,OAAO,CAAC,8CAAD,CAAhC;AAEA;AACA;AACA;AACA;AACA;;;AACA,SAASC,aAAT,CAAuBC,cAAvB,EAAuC;EACrC;AACF;AACA;AACA;AACA;AACA;EACE,IAAIC,OAAJ;;EACA,IAAI;IACFA,OAAO,GAAGC,WAAV;EACD,CAFD,CAEE,OAAOC,CAAP,EAAU;IACV;IACA;EACD;;EAED,MAAM;IAAEC,OAAF;IAAWC,MAAM,GAAG,EAApB;IAAwBC;EAAxB,IAAmCL,OAAzC;EACA,MAAMM,QAAQ,GAAGD,MAAM,GAAG,KAAH,GAAW,IAAlC;EACA,MAAME,MAAM,GAAG,IAAIX,YAAJ,CAAiBQ,MAAjB,EAAyBE,QAAQ,GAAG,KAAX,IAAoBF,MAAM,CAACD,OAAP,IAAkBA,OAAtC,IAAiD,MAA1E,CAAf;EAEAI,MAAM,CAACC,gBAAP,CAAwB,SAAxB,EAAmC,SAASC,QAAT,CAAkBC,OAAlB,EAA2B;IAC5D,MAAM;MAAEC,MAAF;MAAUC;IAAV,IAAmBC,IAAI,CAACC,KAAL,CAAWJ,OAAO,CAACE,IAAnB,CAAzB;;IAEA,QAAQD,MAAR;MACE,KAAK,MAAL;QAAa;UACXZ,cAAc,CAAC;YAAEgB,IAAI,EAAE;UAAR,CAAD,CAAd;UACA;QACD;;MACD,KAAK,UAAL;QAAiB;UACf,IAAIH,IAAI,CAACI,MAAL,CAAYC,MAAhB,EAAwB;YACtBlB,cAAc,CAAC;cAAEgB,IAAI,EAAE,QAAR;cAAkBH,IAAI,EAAEA,IAAI,CAACI;YAA7B,CAAD,CAAd;UACD,CAFD,MAEO,IAAIJ,IAAI,CAACM,QAAL,CAAcD,MAAlB,EAA0B;YAC/BlB,cAAc,CAAC;cAAEgB,IAAI,EAAE,UAAR;cAAoBH,IAAI,EAAEA,IAAI,CAACM;YAA/B,CAAD,CAAd;UACD;;UACD;QACD;;MACD;QAAS,CACP;QACD;IAfH;EAiBD,CApBD;AAqBD;;AAEDC,MAAM,CAACC,OAAP,GAAiB;EAAEC,IAAI,EAAEvB;AAAR,CAAjB"},"metadata":{},"sourceType":"script"}