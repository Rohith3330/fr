{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nconst schema = [{\n  enum: ['always', 'never'],\n  type: 'string'\n}, {\n  additionalProperties: false,\n  properties: {\n    allowNull: {\n      type: 'boolean'\n    }\n  },\n  type: 'object'\n}];\n\nconst create = context => {\n  const always = (context.options[0] || 'always') === 'always';\n  const allowNull = !(context.options[1] && context.options[1].allowNull === false);\n\n  if (always) {\n    return {\n      IntersectionTypeAnnotation(node) {\n        if (allowNull && node.types.length === 2 && (node.types[0].type === 'NullLiteralTypeAnnotation' || node.types[1].type === 'NullLiteralTypeAnnotation')) {\n          return;\n        }\n\n        if (node.parent.type !== 'TypeAlias') {\n          context.report({\n            message: 'All intersection types must be declared with named type alias.',\n            node\n          });\n        }\n      },\n\n      UnionTypeAnnotation(node) {\n        if (allowNull && node.types.length === 2 && (node.types[0].type === 'NullLiteralTypeAnnotation' || node.types[1].type === 'NullLiteralTypeAnnotation')) {\n          return;\n        }\n\n        if (node.parent.type !== 'TypeAlias') {\n          context.report({\n            message: 'All union types must be declared with named type alias.',\n            node\n          });\n        }\n      }\n\n    };\n  }\n\n  return {};\n};\n\nvar _default = {\n  create,\n  schema\n};\nexports.default = _default;\nmodule.exports = exports.default;","map":{"version":3,"names":["Object","defineProperty","exports","value","default","schema","enum","type","additionalProperties","properties","allowNull","create","context","always","options","IntersectionTypeAnnotation","node","types","length","parent","report","message","UnionTypeAnnotation","_default","module"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/eslint-plugin-flowtype/dist/rules/requireCompoundTypeAlias.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nconst schema = [{\n  enum: ['always', 'never'],\n  type: 'string'\n}, {\n  additionalProperties: false,\n  properties: {\n    allowNull: {\n      type: 'boolean'\n    }\n  },\n  type: 'object'\n}];\n\nconst create = context => {\n  const always = (context.options[0] || 'always') === 'always';\n  const allowNull = !(context.options[1] && context.options[1].allowNull === false);\n\n  if (always) {\n    return {\n      IntersectionTypeAnnotation(node) {\n        if (allowNull && node.types.length === 2 && (node.types[0].type === 'NullLiteralTypeAnnotation' || node.types[1].type === 'NullLiteralTypeAnnotation')) {\n          return;\n        }\n\n        if (node.parent.type !== 'TypeAlias') {\n          context.report({\n            message: 'All intersection types must be declared with named type alias.',\n            node\n          });\n        }\n      },\n\n      UnionTypeAnnotation(node) {\n        if (allowNull && node.types.length === 2 && (node.types[0].type === 'NullLiteralTypeAnnotation' || node.types[1].type === 'NullLiteralTypeAnnotation')) {\n          return;\n        }\n\n        if (node.parent.type !== 'TypeAlias') {\n          context.report({\n            message: 'All union types must be declared with named type alias.',\n            node\n          });\n        }\n      }\n\n    };\n  }\n\n  return {};\n};\n\nvar _default = {\n  create,\n  schema\n};\nexports.default = _default;\nmodule.exports = exports.default;"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAC3CC,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;AACA,MAAMC,MAAM,GAAG,CAAC;EACdC,IAAI,EAAE,CAAC,QAAD,EAAW,OAAX,CADQ;EAEdC,IAAI,EAAE;AAFQ,CAAD,EAGZ;EACDC,oBAAoB,EAAE,KADrB;EAEDC,UAAU,EAAE;IACVC,SAAS,EAAE;MACTH,IAAI,EAAE;IADG;EADD,CAFX;EAODA,IAAI,EAAE;AAPL,CAHY,CAAf;;AAaA,MAAMI,MAAM,GAAGC,OAAO,IAAI;EACxB,MAAMC,MAAM,GAAG,CAACD,OAAO,CAACE,OAAR,CAAgB,CAAhB,KAAsB,QAAvB,MAAqC,QAApD;EACA,MAAMJ,SAAS,GAAG,EAAEE,OAAO,CAACE,OAAR,CAAgB,CAAhB,KAAsBF,OAAO,CAACE,OAAR,CAAgB,CAAhB,EAAmBJ,SAAnB,KAAiC,KAAzD,CAAlB;;EAEA,IAAIG,MAAJ,EAAY;IACV,OAAO;MACLE,0BAA0B,CAACC,IAAD,EAAO;QAC/B,IAAIN,SAAS,IAAIM,IAAI,CAACC,KAAL,CAAWC,MAAX,KAAsB,CAAnC,KAAyCF,IAAI,CAACC,KAAL,CAAW,CAAX,EAAcV,IAAd,KAAuB,2BAAvB,IAAsDS,IAAI,CAACC,KAAL,CAAW,CAAX,EAAcV,IAAd,KAAuB,2BAAtH,CAAJ,EAAwJ;UACtJ;QACD;;QAED,IAAIS,IAAI,CAACG,MAAL,CAAYZ,IAAZ,KAAqB,WAAzB,EAAsC;UACpCK,OAAO,CAACQ,MAAR,CAAe;YACbC,OAAO,EAAE,gEADI;YAEbL;UAFa,CAAf;QAID;MACF,CAZI;;MAcLM,mBAAmB,CAACN,IAAD,EAAO;QACxB,IAAIN,SAAS,IAAIM,IAAI,CAACC,KAAL,CAAWC,MAAX,KAAsB,CAAnC,KAAyCF,IAAI,CAACC,KAAL,CAAW,CAAX,EAAcV,IAAd,KAAuB,2BAAvB,IAAsDS,IAAI,CAACC,KAAL,CAAW,CAAX,EAAcV,IAAd,KAAuB,2BAAtH,CAAJ,EAAwJ;UACtJ;QACD;;QAED,IAAIS,IAAI,CAACG,MAAL,CAAYZ,IAAZ,KAAqB,WAAzB,EAAsC;UACpCK,OAAO,CAACQ,MAAR,CAAe;YACbC,OAAO,EAAE,yDADI;YAEbL;UAFa,CAAf;QAID;MACF;;IAzBI,CAAP;EA4BD;;EAED,OAAO,EAAP;AACD,CApCD;;AAsCA,IAAIO,QAAQ,GAAG;EACbZ,MADa;EAEbN;AAFa,CAAf;AAIAH,OAAO,CAACE,OAAR,GAAkBmB,QAAlB;AACAC,MAAM,CAACtB,OAAP,GAAiBA,OAAO,CAACE,OAAzB"},"metadata":{},"sourceType":"script"}