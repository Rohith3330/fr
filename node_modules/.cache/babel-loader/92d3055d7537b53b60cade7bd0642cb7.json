{"ast":null,"code":"/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';\n\nvar chalk = require('chalk');\n\nvar execSync = require('child_process').execSync;\n\nvar spawn = require('cross-spawn');\n\nvar open = require('open'); // https://github.com/sindresorhus/open#app\n\n\nvar OSX_CHROME = 'google chrome';\nconst Actions = Object.freeze({\n  NONE: 0,\n  BROWSER: 1,\n  SCRIPT: 2\n});\n\nfunction getBrowserEnv() {\n  // Attempt to honor this environment variable.\n  // It is specific to the operating system.\n  // See https://github.com/sindresorhus/open#app for documentation.\n  const value = process.env.BROWSER;\n  const args = process.env.BROWSER_ARGS ? process.env.BROWSER_ARGS.split(' ') : [];\n  let action;\n\n  if (!value) {\n    // Default.\n    action = Actions.BROWSER;\n  } else if (value.toLowerCase().endsWith('.js')) {\n    action = Actions.SCRIPT;\n  } else if (value.toLowerCase() === 'none') {\n    action = Actions.NONE;\n  } else {\n    action = Actions.BROWSER;\n  }\n\n  return {\n    action,\n    value,\n    args\n  };\n}\n\nfunction executeNodeScript(scriptPath, url) {\n  const extraArgs = process.argv.slice(2);\n  const child = spawn(process.execPath, [scriptPath, ...extraArgs, url], {\n    stdio: 'inherit'\n  });\n  child.on('close', code => {\n    if (code !== 0) {\n      console.log();\n      console.log(chalk.red('The script specified as BROWSER environment variable failed.'));\n      console.log(chalk.cyan(scriptPath) + ' exited with code ' + code + '.');\n      console.log();\n      return;\n    }\n  });\n  return true;\n}\n\nfunction startBrowserProcess(browser, url, args) {\n  // If we're on OS X, the user hasn't specifically\n  // requested a different browser, we can try opening\n  // Chrome with AppleScript. This lets us reuse an\n  // existing tab when possible instead of creating a new one.\n  const shouldTryOpenChromiumWithAppleScript = process.platform === 'darwin' && (typeof browser !== 'string' || browser === OSX_CHROME);\n\n  if (shouldTryOpenChromiumWithAppleScript) {\n    // Will use the first open browser found from list\n    const supportedChromiumBrowsers = ['Google Chrome Canary', 'Google Chrome', 'Microsoft Edge', 'Brave Browser', 'Vivaldi', 'Chromium'];\n\n    for (let chromiumBrowser of supportedChromiumBrowsers) {\n      try {\n        // Try our best to reuse existing tab\n        // on OSX Chromium-based browser with AppleScript\n        execSync('ps cax | grep \"' + chromiumBrowser + '\"');\n        execSync('osascript openChrome.applescript \"' + encodeURI(url) + '\" \"' + chromiumBrowser + '\"', {\n          cwd: __dirname,\n          stdio: 'ignore'\n        });\n        return true;\n      } catch (err) {// Ignore errors.\n      }\n    }\n  } // Another special case: on OS X, check if BROWSER has been set to \"open\".\n  // In this case, instead of passing `open` to `opn` (which won't work),\n  // just ignore it (thus ensuring the intended behavior, i.e. opening the system browser):\n  // https://github.com/facebook/create-react-app/pull/1690#issuecomment-283518768\n\n\n  if (process.platform === 'darwin' && browser === 'open') {\n    browser = undefined;\n  } // If there are arguments, they must be passed as array with the browser\n\n\n  if (typeof browser === 'string' && args.length > 0) {\n    browser = [browser].concat(args);\n  } // Fallback to open\n  // (It will always open new tab)\n\n\n  try {\n    var options = {\n      app: browser,\n      wait: false,\n      url: true\n    };\n    open(url, options).catch(() => {}); // Prevent `unhandledRejection` error.\n\n    return true;\n  } catch (err) {\n    return false;\n  }\n}\n/**\n * Reads the BROWSER environment variable and decides what to do with it. Returns\n * true if it opened a browser or ran a node.js script, otherwise false.\n */\n\n\nfunction openBrowser(url) {\n  const {\n    action,\n    value,\n    args\n  } = getBrowserEnv();\n\n  switch (action) {\n    case Actions.NONE:\n      // Special case: BROWSER=\"none\" will prevent opening completely.\n      return false;\n\n    case Actions.SCRIPT:\n      return executeNodeScript(value, url);\n\n    case Actions.BROWSER:\n      return startBrowserProcess(value, url, args);\n\n    default:\n      throw new Error('Not implemented.');\n  }\n}\n\nmodule.exports = openBrowser;","map":{"version":3,"names":["chalk","require","execSync","spawn","open","OSX_CHROME","Actions","Object","freeze","NONE","BROWSER","SCRIPT","getBrowserEnv","value","process","env","args","BROWSER_ARGS","split","action","toLowerCase","endsWith","executeNodeScript","scriptPath","url","extraArgs","argv","slice","child","execPath","stdio","on","code","console","log","red","cyan","startBrowserProcess","browser","shouldTryOpenChromiumWithAppleScript","platform","supportedChromiumBrowsers","chromiumBrowser","encodeURI","cwd","__dirname","err","undefined","length","concat","options","app","wait","catch","openBrowser","Error","module","exports"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/react-dev-utils/openBrowser.js"],"sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar chalk = require('chalk');\nvar execSync = require('child_process').execSync;\nvar spawn = require('cross-spawn');\nvar open = require('open');\n\n// https://github.com/sindresorhus/open#app\nvar OSX_CHROME = 'google chrome';\n\nconst Actions = Object.freeze({\n  NONE: 0,\n  BROWSER: 1,\n  SCRIPT: 2,\n});\n\nfunction getBrowserEnv() {\n  // Attempt to honor this environment variable.\n  // It is specific to the operating system.\n  // See https://github.com/sindresorhus/open#app for documentation.\n  const value = process.env.BROWSER;\n  const args = process.env.BROWSER_ARGS\n    ? process.env.BROWSER_ARGS.split(' ')\n    : [];\n  let action;\n  if (!value) {\n    // Default.\n    action = Actions.BROWSER;\n  } else if (value.toLowerCase().endsWith('.js')) {\n    action = Actions.SCRIPT;\n  } else if (value.toLowerCase() === 'none') {\n    action = Actions.NONE;\n  } else {\n    action = Actions.BROWSER;\n  }\n  return { action, value, args };\n}\n\nfunction executeNodeScript(scriptPath, url) {\n  const extraArgs = process.argv.slice(2);\n  const child = spawn(process.execPath, [scriptPath, ...extraArgs, url], {\n    stdio: 'inherit',\n  });\n  child.on('close', code => {\n    if (code !== 0) {\n      console.log();\n      console.log(\n        chalk.red(\n          'The script specified as BROWSER environment variable failed.'\n        )\n      );\n      console.log(chalk.cyan(scriptPath) + ' exited with code ' + code + '.');\n      console.log();\n      return;\n    }\n  });\n  return true;\n}\n\nfunction startBrowserProcess(browser, url, args) {\n  // If we're on OS X, the user hasn't specifically\n  // requested a different browser, we can try opening\n  // Chrome with AppleScript. This lets us reuse an\n  // existing tab when possible instead of creating a new one.\n  const shouldTryOpenChromiumWithAppleScript =\n    process.platform === 'darwin' &&\n    (typeof browser !== 'string' || browser === OSX_CHROME);\n\n  if (shouldTryOpenChromiumWithAppleScript) {\n    // Will use the first open browser found from list\n    const supportedChromiumBrowsers = [\n      'Google Chrome Canary',\n      'Google Chrome',\n      'Microsoft Edge',\n      'Brave Browser',\n      'Vivaldi',\n      'Chromium',\n    ];\n\n    for (let chromiumBrowser of supportedChromiumBrowsers) {\n      try {\n        // Try our best to reuse existing tab\n        // on OSX Chromium-based browser with AppleScript\n        execSync('ps cax | grep \"' + chromiumBrowser + '\"');\n        execSync(\n          'osascript openChrome.applescript \"' +\n            encodeURI(url) +\n            '\" \"' +\n            chromiumBrowser +\n            '\"',\n          {\n            cwd: __dirname,\n            stdio: 'ignore',\n          }\n        );\n        return true;\n      } catch (err) {\n        // Ignore errors.\n      }\n    }\n  }\n\n  // Another special case: on OS X, check if BROWSER has been set to \"open\".\n  // In this case, instead of passing `open` to `opn` (which won't work),\n  // just ignore it (thus ensuring the intended behavior, i.e. opening the system browser):\n  // https://github.com/facebook/create-react-app/pull/1690#issuecomment-283518768\n  if (process.platform === 'darwin' && browser === 'open') {\n    browser = undefined;\n  }\n\n  // If there are arguments, they must be passed as array with the browser\n  if (typeof browser === 'string' && args.length > 0) {\n    browser = [browser].concat(args);\n  }\n\n  // Fallback to open\n  // (It will always open new tab)\n  try {\n    var options = { app: browser, wait: false, url: true };\n    open(url, options).catch(() => {}); // Prevent `unhandledRejection` error.\n    return true;\n  } catch (err) {\n    return false;\n  }\n}\n\n/**\n * Reads the BROWSER environment variable and decides what to do with it. Returns\n * true if it opened a browser or ran a node.js script, otherwise false.\n */\nfunction openBrowser(url) {\n  const { action, value, args } = getBrowserEnv();\n  switch (action) {\n    case Actions.NONE:\n      // Special case: BROWSER=\"none\" will prevent opening completely.\n      return false;\n    case Actions.SCRIPT:\n      return executeNodeScript(value, url);\n    case Actions.BROWSER:\n      return startBrowserProcess(value, url, args);\n    default:\n      throw new Error('Not implemented.');\n  }\n}\n\nmodule.exports = openBrowser;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}