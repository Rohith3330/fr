{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _jsxAstUtils = require(\"jsx-ast-utils\");\n\nvar _schemas = require(\"../util/schemas\");\n\nvar _getElementType = _interopRequireDefault(require(\"../util/getElementType\"));\n/**\n * @fileoverview Enforce usage of onBlur over onChange for accessibility.\n * @author Ethan Cohen\n */\n// ----------------------------------------------------------------------------\n// Rule Definition\n// ----------------------------------------------------------------------------\n\n\nvar errorMessage = 'onBlur must be used instead of onchange, unless absolutely necessary and it causes no negative consequences for keyboard only or screen reader users.';\nvar applicableTypes = ['select', 'option'];\nvar schema = (0, _schemas.generateObjSchema)();\nvar _default = {\n  meta: {\n    docs: {\n      url: 'https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/tree/HEAD/docs/rules/no-onchange.md',\n      description: 'Enforce usage of `onBlur` over `onChange` on select menus for accessibility.'\n    },\n    deprecated: true,\n    schema: [schema]\n  },\n  create: function create(context) {\n    var elementType = (0, _getElementType[\"default\"])(context);\n    return {\n      JSXOpeningElement: function JSXOpeningElement(node) {\n        var nodeType = elementType(node);\n\n        if (applicableTypes.indexOf(nodeType) === -1) {\n          return;\n        }\n\n        var onChange = (0, _jsxAstUtils.getProp)(node.attributes, 'onChange');\n        var hasOnBlur = (0, _jsxAstUtils.getProp)(node.attributes, 'onBlur') !== undefined;\n\n        if (onChange && !hasOnBlur) {\n          context.report({\n            node,\n            message: errorMessage\n          });\n        }\n      }\n    };\n  }\n};\nexports[\"default\"] = _default;\nmodule.exports = exports.default;","map":{"version":3,"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","_jsxAstUtils","_schemas","_getElementType","errorMessage","applicableTypes","schema","generateObjSchema","_default","meta","docs","url","description","deprecated","create","context","elementType","JSXOpeningElement","node","nodeType","indexOf","onChange","getProp","attributes","hasOnBlur","undefined","report","message","module","default"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/eslint-plugin-jsx-a11y/lib/rules/no-onchange.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _jsxAstUtils = require(\"jsx-ast-utils\");\n\nvar _schemas = require(\"../util/schemas\");\n\nvar _getElementType = _interopRequireDefault(require(\"../util/getElementType\"));\n\n/**\n * @fileoverview Enforce usage of onBlur over onChange for accessibility.\n * @author Ethan Cohen\n */\n// ----------------------------------------------------------------------------\n// Rule Definition\n// ----------------------------------------------------------------------------\nvar errorMessage = 'onBlur must be used instead of onchange, unless absolutely necessary and it causes no negative consequences for keyboard only or screen reader users.';\nvar applicableTypes = ['select', 'option'];\nvar schema = (0, _schemas.generateObjSchema)();\nvar _default = {\n  meta: {\n    docs: {\n      url: 'https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/tree/HEAD/docs/rules/no-onchange.md',\n      description: 'Enforce usage of `onBlur` over `onChange` on select menus for accessibility.'\n    },\n    deprecated: true,\n    schema: [schema]\n  },\n  create: function create(context) {\n    var elementType = (0, _getElementType[\"default\"])(context);\n    return {\n      JSXOpeningElement: function JSXOpeningElement(node) {\n        var nodeType = elementType(node);\n\n        if (applicableTypes.indexOf(nodeType) === -1) {\n          return;\n        }\n\n        var onChange = (0, _jsxAstUtils.getProp)(node.attributes, 'onChange');\n        var hasOnBlur = (0, _jsxAstUtils.getProp)(node.attributes, 'onBlur') !== undefined;\n\n        if (onChange && !hasOnBlur) {\n          context.report({\n            node,\n            message: errorMessage\n          });\n        }\n      }\n    };\n  }\n};\nexports[\"default\"] = _default;\nmodule.exports = exports.default;"],"mappings":"AAAA;;AAEA,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAAD,CAApC;;AAEAC,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAC3CC,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAAC,SAAD,CAAP,GAAqB,KAAK,CAA1B;;AAEA,IAAIE,YAAY,GAAGL,OAAO,CAAC,eAAD,CAA1B;;AAEA,IAAIM,QAAQ,GAAGN,OAAO,CAAC,iBAAD,CAAtB;;AAEA,IAAIO,eAAe,GAAGR,sBAAsB,CAACC,OAAO,CAAC,wBAAD,CAAR,CAA5C;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIQ,YAAY,GAAG,uJAAnB;AACA,IAAIC,eAAe,GAAG,CAAC,QAAD,EAAW,QAAX,CAAtB;AACA,IAAIC,MAAM,GAAG,CAAC,GAAGJ,QAAQ,CAACK,iBAAb,GAAb;AACA,IAAIC,QAAQ,GAAG;EACbC,IAAI,EAAE;IACJC,IAAI,EAAE;MACJC,GAAG,EAAE,0FADD;MAEJC,WAAW,EAAE;IAFT,CADF;IAKJC,UAAU,EAAE,IALR;IAMJP,MAAM,EAAE,CAACA,MAAD;EANJ,CADO;EASbQ,MAAM,EAAE,SAASA,MAAT,CAAgBC,OAAhB,EAAyB;IAC/B,IAAIC,WAAW,GAAG,CAAC,GAAGb,eAAe,CAAC,SAAD,CAAnB,EAAgCY,OAAhC,CAAlB;IACA,OAAO;MACLE,iBAAiB,EAAE,SAASA,iBAAT,CAA2BC,IAA3B,EAAiC;QAClD,IAAIC,QAAQ,GAAGH,WAAW,CAACE,IAAD,CAA1B;;QAEA,IAAIb,eAAe,CAACe,OAAhB,CAAwBD,QAAxB,MAAsC,CAAC,CAA3C,EAA8C;UAC5C;QACD;;QAED,IAAIE,QAAQ,GAAG,CAAC,GAAGpB,YAAY,CAACqB,OAAjB,EAA0BJ,IAAI,CAACK,UAA/B,EAA2C,UAA3C,CAAf;QACA,IAAIC,SAAS,GAAG,CAAC,GAAGvB,YAAY,CAACqB,OAAjB,EAA0BJ,IAAI,CAACK,UAA/B,EAA2C,QAA3C,MAAyDE,SAAzE;;QAEA,IAAIJ,QAAQ,IAAI,CAACG,SAAjB,EAA4B;UAC1BT,OAAO,CAACW,MAAR,CAAe;YACbR,IADa;YAEbS,OAAO,EAAEvB;UAFI,CAAf;QAID;MACF;IAjBI,CAAP;EAmBD;AA9BY,CAAf;AAgCAL,OAAO,CAAC,SAAD,CAAP,GAAqBS,QAArB;AACAoB,MAAM,CAAC7B,OAAP,GAAiBA,OAAO,CAAC8B,OAAzB"},"metadata":{},"sourceType":"script"}