{"ast":null,"code":"import expect from 'expect';\nimport mayContainChildComponent from '../../../src/util/mayContainChildComponent';\nimport JSXAttributeMock from '../../../__mocks__/JSXAttributeMock';\nimport JSXElementMock from '../../../__mocks__/JSXElementMock';\nimport JSXExpressionContainerMock from '../../../__mocks__/JSXExpressionContainerMock';\ndescribe('mayContainChildComponent', () => {\n  describe('no FancyComponent', () => {\n    it('should return false', () => {\n      expect(mayContainChildComponent(JSXElementMock('div', [], [JSXElementMock('div', [], [JSXElementMock('span', [], []), JSXElementMock('span', [], [JSXElementMock('span', [], []), JSXElementMock('span', [], [JSXElementMock('span', [], [])])])]), JSXElementMock('span', [], []), JSXElementMock('img', [JSXAttributeMock('src', 'some/path')])]), 'FancyComponent', 5)).toBe(false);\n    });\n  });\n  describe('contains an indicated component', () => {\n    it('should return true', () => {\n      expect(mayContainChildComponent(JSXElementMock('div', [], [JSXElementMock('input')]), 'input')).toBe(true);\n    });\n    it('should return true', () => {\n      expect(mayContainChildComponent(JSXElementMock('div', [], [JSXElementMock('FancyComponent')]), 'FancyComponent')).toBe(true);\n    });\n    it('FancyComponent is outside of default depth, should return false', () => {\n      expect(mayContainChildComponent(JSXElementMock('div', [], [JSXElementMock('div', [], [JSXElementMock('FancyComponent')])]), 'FancyComponent')).toBe(false);\n    });\n    it('FancyComponent is inside of custom depth, should return true', () => {\n      expect(mayContainChildComponent(JSXElementMock('div', [], [JSXElementMock('div', [], [JSXElementMock('FancyComponent')])]), 'FancyComponent', 2)).toBe(true);\n    });\n    it('deep nesting, should return true', () => {\n      expect(mayContainChildComponent(JSXElementMock('div', [], [JSXElementMock('div', [], [JSXElementMock('span', [], []), JSXElementMock('span', [], [JSXElementMock('span', [], []), JSXElementMock('span', [], [JSXElementMock('span', [], [JSXElementMock('span', [], [JSXElementMock('FancyComponent')])])])])]), JSXElementMock('span', [], []), JSXElementMock('img', [JSXAttributeMock('src', 'some/path')])]), 'FancyComponent', 6)).toBe(true);\n    });\n  });\n  describe('Intederminate situations', () => {\n    describe('expression container children', () => {\n      it('should return true', () => {\n        expect(mayContainChildComponent(JSXElementMock('div', [], [JSXExpressionContainerMock('mysteryBox')]), 'FancyComponent')).toBe(true);\n      });\n    });\n  });\n  describe('Glob name matching', () => {\n    describe('component name contains question mark ? - match any single character', () => {\n      it('should return true', () => {\n        expect(mayContainChildComponent(JSXElementMock('div', [], [JSXElementMock('FancyComponent')]), 'Fanc?Co??onent')).toBe(true);\n      });\n      it('should return false', () => {\n        expect(mayContainChildComponent(JSXElementMock('div', [], [JSXElementMock('FancyComponent')]), 'FancyComponent?')).toBe(false);\n      });\n    });\n    describe('component name contains asterisk * - match zero or more characters', () => {\n      it('should return true', () => {\n        expect(mayContainChildComponent(JSXElementMock('div', [], [JSXElementMock('FancyComponent')]), 'Fancy*')).toBe(true);\n      });\n      it('should return true', () => {\n        expect(mayContainChildComponent(JSXElementMock('div', [], [JSXElementMock('FancyComponent')]), '*Component')).toBe(true);\n      });\n      it('should return true', () => {\n        expect(mayContainChildComponent(JSXElementMock('div', [], [JSXElementMock('FancyComponent')]), 'Fancy*C*t')).toBe(true);\n      });\n    });\n  });\n  describe('using a custom elementType function', () => {\n    it('should return true when the custom elementType returns the proper name', () => {\n      expect(mayContainChildComponent(JSXElementMock('div', [], [JSXElementMock('CustomInput')]), 'input', 2, () => 'input')).toBe(true);\n    });\n    it('should return false when the custom elementType returns a wrong name', () => {\n      expect(mayContainChildComponent(JSXElementMock('div', [], [JSXElementMock('CustomInput')]), 'input', 2, () => 'button')).toBe(false);\n    });\n  });\n});","map":{"version":3,"names":["expect","mayContainChildComponent","JSXAttributeMock","JSXElementMock","JSXExpressionContainerMock","describe","it","toBe"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/eslint-plugin-jsx-a11y/__tests__/src/util/mayContainChildComponent-test.js"],"sourcesContent":["import expect from 'expect';\nimport mayContainChildComponent from '../../../src/util/mayContainChildComponent';\nimport JSXAttributeMock from '../../../__mocks__/JSXAttributeMock';\nimport JSXElementMock from '../../../__mocks__/JSXElementMock';\nimport JSXExpressionContainerMock from '../../../__mocks__/JSXExpressionContainerMock';\n\ndescribe('mayContainChildComponent', () => {\n  describe('no FancyComponent', () => {\n    it('should return false', () => {\n      expect(mayContainChildComponent(\n        JSXElementMock('div', [], [\n          JSXElementMock('div', [], [\n            JSXElementMock('span', [], []),\n            JSXElementMock('span', [], [\n              JSXElementMock('span', [], []),\n              JSXElementMock('span', [], [\n                JSXElementMock('span', [], []),\n              ]),\n            ]),\n          ]),\n          JSXElementMock('span', [], []),\n          JSXElementMock('img', [\n            JSXAttributeMock('src', 'some/path'),\n          ]),\n        ]),\n        'FancyComponent',\n        5,\n      )).toBe(false);\n    });\n  });\n  describe('contains an indicated component', () => {\n    it('should return true', () => {\n      expect(mayContainChildComponent(\n        JSXElementMock('div', [], [\n          JSXElementMock('input'),\n        ]),\n        'input',\n      )).toBe(true);\n    });\n    it('should return true', () => {\n      expect(mayContainChildComponent(\n        JSXElementMock('div', [], [\n          JSXElementMock('FancyComponent'),\n        ]),\n        'FancyComponent',\n      )).toBe(true);\n    });\n    it('FancyComponent is outside of default depth, should return false', () => {\n      expect(mayContainChildComponent(\n        JSXElementMock('div', [], [\n          JSXElementMock('div', [], [\n            JSXElementMock('FancyComponent'),\n          ]),\n        ]),\n        'FancyComponent',\n      )).toBe(false);\n    });\n    it('FancyComponent is inside of custom depth, should return true', () => {\n      expect(mayContainChildComponent(\n        JSXElementMock('div', [], [\n          JSXElementMock('div', [], [\n            JSXElementMock('FancyComponent'),\n          ]),\n        ]),\n        'FancyComponent',\n        2,\n      )).toBe(true);\n    });\n    it('deep nesting, should return true', () => {\n      expect(mayContainChildComponent(\n        JSXElementMock('div', [], [\n          JSXElementMock('div', [], [\n            JSXElementMock('span', [], []),\n            JSXElementMock('span', [], [\n              JSXElementMock('span', [], []),\n              JSXElementMock('span', [], [\n                JSXElementMock('span', [], [\n                  JSXElementMock('span', [], [\n                    JSXElementMock('FancyComponent'),\n                  ]),\n                ]),\n              ]),\n            ]),\n          ]),\n          JSXElementMock('span', [], []),\n          JSXElementMock('img', [\n            JSXAttributeMock('src', 'some/path'),\n          ]),\n        ]),\n        'FancyComponent',\n        6,\n      )).toBe(true);\n    });\n  });\n  describe('Intederminate situations', () => {\n    describe('expression container children', () => {\n      it('should return true', () => {\n        expect(mayContainChildComponent(\n          JSXElementMock('div', [], [\n            JSXExpressionContainerMock('mysteryBox'),\n          ]),\n          'FancyComponent',\n        )).toBe(true);\n      });\n    });\n  });\n\n  describe('Glob name matching', () => {\n    describe('component name contains question mark ? - match any single character', () => {\n      it('should return true', () => {\n        expect(mayContainChildComponent(\n          JSXElementMock('div', [], [\n            JSXElementMock('FancyComponent'),\n          ]),\n          'Fanc?Co??onent',\n        )).toBe(true);\n      });\n      it('should return false', () => {\n        expect(mayContainChildComponent(\n          JSXElementMock('div', [], [\n            JSXElementMock('FancyComponent'),\n          ]),\n          'FancyComponent?',\n        )).toBe(false);\n      });\n    });\n\n    describe('component name contains asterisk * - match zero or more characters', () => {\n      it('should return true', () => {\n        expect(mayContainChildComponent(\n          JSXElementMock('div', [], [\n            JSXElementMock('FancyComponent'),\n          ]),\n          'Fancy*',\n        )).toBe(true);\n      });\n      it('should return true', () => {\n        expect(mayContainChildComponent(\n          JSXElementMock('div', [], [\n            JSXElementMock('FancyComponent'),\n          ]),\n          '*Component',\n        )).toBe(true);\n      });\n      it('should return true', () => {\n        expect(mayContainChildComponent(\n          JSXElementMock('div', [], [\n            JSXElementMock('FancyComponent'),\n          ]),\n          'Fancy*C*t',\n        )).toBe(true);\n      });\n    });\n  });\n\n  describe('using a custom elementType function', () => {\n    it('should return true when the custom elementType returns the proper name', () => {\n      expect(mayContainChildComponent(\n        JSXElementMock('div', [], [\n          JSXElementMock('CustomInput'),\n        ]),\n        'input',\n        2,\n        () => 'input',\n      )).toBe(true);\n    });\n    it('should return false when the custom elementType returns a wrong name', () => {\n      expect(mayContainChildComponent(\n        JSXElementMock('div', [], [\n          JSXElementMock('CustomInput'),\n        ]),\n        'input',\n        2,\n        () => 'button',\n      )).toBe(false);\n    });\n  });\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}