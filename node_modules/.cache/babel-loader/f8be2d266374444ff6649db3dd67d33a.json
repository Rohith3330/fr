{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nconst create = context => {\n  const sourceCode = context.getSourceCode();\n  const {\n    checkIntersections = true,\n    checkUnions = true\n  } = context.options[1] || {};\n\n  const checkForDuplicates = node => {\n    const uniqueMembers = [];\n    const duplicates = [];\n    const source = node.types.map(type => {\n      return {\n        node: type,\n        text: sourceCode.getText(type)\n      };\n    });\n    const hasComments = node.types.some(type => {\n      const count = sourceCode.getCommentsBefore(type).length + sourceCode.getCommentsAfter(type).length;\n      return count > 0;\n    });\n\n    const fix = fixer => {\n      const result = uniqueMembers.map(t => {\n        return t.text;\n      }).join(node.type === 'UnionTypeAnnotation' ? ' | ' : ' & ');\n      return fixer.replaceText(node, result);\n    };\n\n    for (const member of source) {\n      const match = uniqueMembers.find(uniqueMember => {\n        return uniqueMember.text === member.text;\n      });\n\n      if (match) {\n        duplicates.push(member);\n      } else {\n        uniqueMembers.push(member);\n      }\n    }\n\n    for (const duplicate of duplicates) {\n      context.report(_objectSpread({\n        data: {\n          name: duplicate.text,\n          type: node.type === 'UnionTypeAnnotation' ? 'union' : 'intersection'\n        },\n        messageId: 'duplicate',\n        node\n      }, hasComments ? {\n        suggest: [{\n          fix,\n          messageId: 'suggestFix'\n        }]\n      } : {\n        fix\n      }));\n    }\n  };\n\n  return {\n    IntersectionTypeAnnotation(node) {\n      if (checkIntersections === true) {\n        checkForDuplicates(node);\n      }\n    },\n\n    UnionTypeAnnotation(node) {\n      if (checkUnions === true) {\n        checkForDuplicates(node);\n      }\n    }\n\n  };\n};\n\nvar _default = {\n  create,\n  meta: {\n    fixable: 'code',\n    messages: {\n      duplicate: 'Duplicate {{type}} member found \"{{name}}\".',\n      suggestFix: 'Remove duplicate members of type (removes all comments).'\n    },\n    schema: [{\n      properties: {\n        checkIntersections: {\n          type: 'boolean'\n        },\n        checkUnions: {\n          type: 'boolean'\n        }\n      },\n      type: 'object'\n    }]\n  }\n};\nexports.default = _default;\nmodule.exports = exports.default;","map":{"version":3,"names":["Object","defineProperty","exports","value","default","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","obj","configurable","writable","create","context","sourceCode","getSourceCode","checkIntersections","checkUnions","options","checkForDuplicates","node","uniqueMembers","duplicates","types","map","type","text","getText","hasComments","some","count","getCommentsBefore","getCommentsAfter","fix","fixer","result","t","join","replaceText","member","match","find","uniqueMember","duplicate","report","data","name","messageId","suggest","IntersectionTypeAnnotation","UnionTypeAnnotation","_default","meta","fixable","messages","suggestFix","schema","properties","module"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/eslint-plugin-flowtype/dist/rules/noDuplicateTypeUnionIntersectionMembers.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nconst create = context => {\n  const sourceCode = context.getSourceCode();\n  const {\n    checkIntersections = true,\n    checkUnions = true\n  } = context.options[1] || {};\n\n  const checkForDuplicates = node => {\n    const uniqueMembers = [];\n    const duplicates = [];\n    const source = node.types.map(type => {\n      return {\n        node: type,\n        text: sourceCode.getText(type)\n      };\n    });\n    const hasComments = node.types.some(type => {\n      const count = sourceCode.getCommentsBefore(type).length + sourceCode.getCommentsAfter(type).length;\n      return count > 0;\n    });\n\n    const fix = fixer => {\n      const result = uniqueMembers.map(t => {\n        return t.text;\n      }).join(node.type === 'UnionTypeAnnotation' ? ' | ' : ' & ');\n      return fixer.replaceText(node, result);\n    };\n\n    for (const member of source) {\n      const match = uniqueMembers.find(uniqueMember => {\n        return uniqueMember.text === member.text;\n      });\n\n      if (match) {\n        duplicates.push(member);\n      } else {\n        uniqueMembers.push(member);\n      }\n    }\n\n    for (const duplicate of duplicates) {\n      context.report(_objectSpread({\n        data: {\n          name: duplicate.text,\n          type: node.type === 'UnionTypeAnnotation' ? 'union' : 'intersection'\n        },\n        messageId: 'duplicate',\n        node\n      }, hasComments ? {\n        suggest: [{\n          fix,\n          messageId: 'suggestFix'\n        }]\n      } : {\n        fix\n      }));\n    }\n  };\n\n  return {\n    IntersectionTypeAnnotation(node) {\n      if (checkIntersections === true) {\n        checkForDuplicates(node);\n      }\n    },\n\n    UnionTypeAnnotation(node) {\n      if (checkUnions === true) {\n        checkForDuplicates(node);\n      }\n    }\n\n  };\n};\n\nvar _default = {\n  create,\n  meta: {\n    fixable: 'code',\n    messages: {\n      duplicate: 'Duplicate {{type}} member found \"{{name}}\".',\n      suggestFix: 'Remove duplicate members of type (removes all comments).'\n    },\n    schema: [{\n      properties: {\n        checkIntersections: {\n          type: 'boolean'\n        },\n        checkUnions: {\n          type: 'boolean'\n        }\n      },\n      type: 'object'\n    }]\n  }\n};\nexports.default = _default;\nmodule.exports = exports.default;"],"mappings":"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"},"metadata":{},"sourceType":"script"}