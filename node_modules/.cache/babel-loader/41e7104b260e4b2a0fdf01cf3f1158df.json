{"ast":null,"code":"\"use strict\";\n/*--------------------------------------------------------------------------\r\n\r\n@sinclair/typebox/conditional\r\n\r\nThe MIT License (MIT)\r\n\r\nCopyright (c) 2022 Haydn Paterson (sinclair) <haydn.developer@gmail.com>\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in\r\nall copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\nTHE SOFTWARE.\r\n\r\n---------------------------------------------------------------------------*/\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Conditional = void 0;\n\nconst Types = require(\"../typebox\");\n\nconst structural_1 = require(\"./structural\");\n\nconst index_1 = require(\"../guard/index\");\n/** Conditional Types */\n\n\nvar Conditional;\n\n(function (Conditional) {\n  /** (Experimental) Creates a conditional expression type */\n  function Extends(left, right, ok, fail) {\n    switch (structural_1.Structural.Check(left, right)) {\n      case structural_1.StructuralResult.Union:\n        return Types.Type.Union([Clone(ok), Clone(fail)]);\n\n      case structural_1.StructuralResult.True:\n        return Clone(ok);\n\n      case structural_1.StructuralResult.False:\n        return Clone(fail);\n    }\n  }\n\n  Conditional.Extends = Extends;\n  /** (Experimental) Constructs a type by excluding from UnionType all union members that are assignable to ExcludedMembers. */\n\n  function Exclude(unionType, excludedMembers) {\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    const anyOf = unionType.anyOf.filter(schema => {\n      const check = structural_1.Structural.Check(schema, excludedMembers);\n      return !(check === structural_1.StructuralResult.True || check === structural_1.StructuralResult.Union);\n    }).map(schema => Clone(schema));\n    return { ...options,\n      [Types.Kind]: 'Union',\n      anyOf\n    };\n  }\n\n  Conditional.Exclude = Exclude;\n  /** (Experimental) Constructs a type by extracting from Type all union members that are assignable to Union. */\n\n  function Extract(type, union) {\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    if (index_1.TypeGuard.TUnion(type)) {\n      const anyOf = type.anyOf.filter(schema => structural_1.Structural.Check(schema, union) === structural_1.StructuralResult.True).map(schema => Clone(schema));\n      return { ...options,\n        [Types.Kind]: 'Union',\n        anyOf\n      };\n    } else {\n      const anyOf = union.anyOf.filter(schema => structural_1.Structural.Check(type, schema) === structural_1.StructuralResult.True).map(schema => Clone(schema));\n      return { ...options,\n        [Types.Kind]: 'Union',\n        anyOf\n      };\n    }\n  }\n\n  Conditional.Extract = Extract;\n\n  function Clone(value) {\n    const isObject = object => typeof object === 'object' && object !== null && !Array.isArray(object);\n\n    const isArray = object => typeof object === 'object' && object !== null && Array.isArray(object);\n\n    if (isObject(value)) {\n      return Object.keys(value).reduce((acc, key) => ({ ...acc,\n        [key]: Clone(value[key])\n      }), Object.getOwnPropertySymbols(value).reduce((acc, key) => ({ ...acc,\n        [key]: Clone(value[key])\n      }), {}));\n    } else if (isArray(value)) {\n      return value.map(item => Clone(item));\n    } else {\n      return value;\n    }\n  }\n})(Conditional = exports.Conditional || (exports.Conditional = {}));","map":{"version":3,"names":["Object","defineProperty","exports","value","Conditional","Types","require","structural_1","index_1","Extends","left","right","ok","fail","Structural","Check","StructuralResult","Union","Type","Clone","True","False","Exclude","unionType","excludedMembers","options","anyOf","filter","schema","check","map","Kind","Extract","type","union","TypeGuard","TUnion","isObject","object","Array","isArray","keys","reduce","acc","key","getOwnPropertySymbols","item"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/@sinclair/typebox/conditional/conditional.js"],"sourcesContent":["\"use strict\";\r\n/*--------------------------------------------------------------------------\r\n\r\n@sinclair/typebox/conditional\r\n\r\nThe MIT License (MIT)\r\n\r\nCopyright (c) 2022 Haydn Paterson (sinclair) <haydn.developer@gmail.com>\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in\r\nall copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\nTHE SOFTWARE.\r\n\r\n---------------------------------------------------------------------------*/\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Conditional = void 0;\r\nconst Types = require(\"../typebox\");\r\nconst structural_1 = require(\"./structural\");\r\nconst index_1 = require(\"../guard/index\");\r\n/** Conditional Types */\r\nvar Conditional;\r\n(function (Conditional) {\r\n    /** (Experimental) Creates a conditional expression type */\r\n    function Extends(left, right, ok, fail) {\r\n        switch (structural_1.Structural.Check(left, right)) {\r\n            case structural_1.StructuralResult.Union:\r\n                return Types.Type.Union([Clone(ok), Clone(fail)]);\r\n            case structural_1.StructuralResult.True:\r\n                return Clone(ok);\r\n            case structural_1.StructuralResult.False:\r\n                return Clone(fail);\r\n        }\r\n    }\r\n    Conditional.Extends = Extends;\r\n    /** (Experimental) Constructs a type by excluding from UnionType all union members that are assignable to ExcludedMembers. */\r\n    function Exclude(unionType, excludedMembers, options = {}) {\r\n        const anyOf = unionType.anyOf\r\n            .filter((schema) => {\r\n            const check = structural_1.Structural.Check(schema, excludedMembers);\r\n            return !(check === structural_1.StructuralResult.True || check === structural_1.StructuralResult.Union);\r\n        })\r\n            .map((schema) => Clone(schema));\r\n        return { ...options, [Types.Kind]: 'Union', anyOf };\r\n    }\r\n    Conditional.Exclude = Exclude;\r\n    /** (Experimental) Constructs a type by extracting from Type all union members that are assignable to Union. */\r\n    function Extract(type, union, options = {}) {\r\n        if (index_1.TypeGuard.TUnion(type)) {\r\n            const anyOf = type.anyOf.filter((schema) => structural_1.Structural.Check(schema, union) === structural_1.StructuralResult.True).map((schema) => Clone(schema));\r\n            return { ...options, [Types.Kind]: 'Union', anyOf };\r\n        }\r\n        else {\r\n            const anyOf = union.anyOf.filter((schema) => structural_1.Structural.Check(type, schema) === structural_1.StructuralResult.True).map((schema) => Clone(schema));\r\n            return { ...options, [Types.Kind]: 'Union', anyOf };\r\n        }\r\n    }\r\n    Conditional.Extract = Extract;\r\n    function Clone(value) {\r\n        const isObject = (object) => typeof object === 'object' && object !== null && !Array.isArray(object);\r\n        const isArray = (object) => typeof object === 'object' && object !== null && Array.isArray(object);\r\n        if (isObject(value)) {\r\n            return Object.keys(value).reduce((acc, key) => ({\r\n                ...acc,\r\n                [key]: Clone(value[key]),\r\n            }), Object.getOwnPropertySymbols(value).reduce((acc, key) => ({\r\n                ...acc,\r\n                [key]: Clone(value[key]),\r\n            }), {}));\r\n        }\r\n        else if (isArray(value)) {\r\n            return value.map((item) => Clone(item));\r\n        }\r\n        else {\r\n            return value;\r\n        }\r\n    }\r\n})(Conditional = exports.Conditional || (exports.Conditional = {}));\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}