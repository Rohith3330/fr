{"ast":null,"code":"'use strict';\n\nvar test = require('tape');\n\nvar isDate = require('../');\n\nvar hasToStringTag = require('has-tostringtag/shams')();\n\ntest('not Dates', function (t) {\n  t.notOk(isDate(), 'undefined is not Date');\n  t.notOk(isDate(null), 'null is not Date');\n  t.notOk(isDate(false), 'false is not Date');\n  t.notOk(isDate(true), 'true is not Date');\n  t.notOk(isDate(42), 'number is not Date');\n  t.notOk(isDate('foo'), 'string is not Date');\n  t.notOk(isDate([]), 'array is not Date');\n  t.notOk(isDate({}), 'object is not Date');\n  t.notOk(isDate(function () {}), 'function is not Date');\n  t.notOk(isDate(/a/g), 'regex literal is not Date');\n  t.notOk(isDate(new RegExp('a', 'g')), 'regex object is not Date');\n  t.end();\n});\ntest('@@toStringTag', {\n  skip: !hasToStringTag\n}, function (t) {\n  var realDate = new Date();\n  var fakeDate = {\n    toString: function () {\n      return String(realDate);\n    },\n    valueOf: function () {\n      return realDate.getTime();\n    }\n  };\n  fakeDate[Symbol.toStringTag] = 'Date';\n  t.notOk(isDate(fakeDate), 'fake Date with @@toStringTag \"Date\" is not Date');\n  t.end();\n});\ntest('Dates', function (t) {\n  t.ok(isDate(new Date()), 'new Date() is Date');\n  t.end();\n});","map":{"version":3,"names":["test","require","isDate","hasToStringTag","t","notOk","RegExp","end","skip","realDate","Date","fakeDate","toString","String","valueOf","getTime","Symbol","toStringTag","ok"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/is-date-object/test/index.js"],"sourcesContent":["'use strict';\n\nvar test = require('tape');\nvar isDate = require('../');\nvar hasToStringTag = require('has-tostringtag/shams')();\n\ntest('not Dates', function (t) {\n\tt.notOk(isDate(), 'undefined is not Date');\n\tt.notOk(isDate(null), 'null is not Date');\n\tt.notOk(isDate(false), 'false is not Date');\n\tt.notOk(isDate(true), 'true is not Date');\n\tt.notOk(isDate(42), 'number is not Date');\n\tt.notOk(isDate('foo'), 'string is not Date');\n\tt.notOk(isDate([]), 'array is not Date');\n\tt.notOk(isDate({}), 'object is not Date');\n\tt.notOk(isDate(function () {}), 'function is not Date');\n\tt.notOk(isDate(/a/g), 'regex literal is not Date');\n\tt.notOk(isDate(new RegExp('a', 'g')), 'regex object is not Date');\n\tt.end();\n});\n\ntest('@@toStringTag', { skip: !hasToStringTag }, function (t) {\n\tvar realDate = new Date();\n\tvar fakeDate = {\n\t\ttoString: function () { return String(realDate); },\n\t\tvalueOf: function () { return realDate.getTime(); }\n\t};\n\tfakeDate[Symbol.toStringTag] = 'Date';\n\tt.notOk(isDate(fakeDate), 'fake Date with @@toStringTag \"Date\" is not Date');\n\tt.end();\n});\n\ntest('Dates', function (t) {\n\tt.ok(isDate(new Date()), 'new Date() is Date');\n\tt.end();\n});\n"],"mappings":"AAAA;;AAEA,IAAIA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAAlB;;AACA,IAAIC,MAAM,GAAGD,OAAO,CAAC,KAAD,CAApB;;AACA,IAAIE,cAAc,GAAGF,OAAO,CAAC,uBAAD,CAAP,EAArB;;AAEAD,IAAI,CAAC,WAAD,EAAc,UAAUI,CAAV,EAAa;EAC9BA,CAAC,CAACC,KAAF,CAAQH,MAAM,EAAd,EAAkB,uBAAlB;EACAE,CAAC,CAACC,KAAF,CAAQH,MAAM,CAAC,IAAD,CAAd,EAAsB,kBAAtB;EACAE,CAAC,CAACC,KAAF,CAAQH,MAAM,CAAC,KAAD,CAAd,EAAuB,mBAAvB;EACAE,CAAC,CAACC,KAAF,CAAQH,MAAM,CAAC,IAAD,CAAd,EAAsB,kBAAtB;EACAE,CAAC,CAACC,KAAF,CAAQH,MAAM,CAAC,EAAD,CAAd,EAAoB,oBAApB;EACAE,CAAC,CAACC,KAAF,CAAQH,MAAM,CAAC,KAAD,CAAd,EAAuB,oBAAvB;EACAE,CAAC,CAACC,KAAF,CAAQH,MAAM,CAAC,EAAD,CAAd,EAAoB,mBAApB;EACAE,CAAC,CAACC,KAAF,CAAQH,MAAM,CAAC,EAAD,CAAd,EAAoB,oBAApB;EACAE,CAAC,CAACC,KAAF,CAAQH,MAAM,CAAC,YAAY,CAAE,CAAf,CAAd,EAAgC,sBAAhC;EACAE,CAAC,CAACC,KAAF,CAAQH,MAAM,CAAC,IAAD,CAAd,EAAsB,2BAAtB;EACAE,CAAC,CAACC,KAAF,CAAQH,MAAM,CAAC,IAAII,MAAJ,CAAW,GAAX,EAAgB,GAAhB,CAAD,CAAd,EAAsC,0BAAtC;EACAF,CAAC,CAACG,GAAF;AACA,CAbG,CAAJ;AAeAP,IAAI,CAAC,eAAD,EAAkB;EAAEQ,IAAI,EAAE,CAACL;AAAT,CAAlB,EAA6C,UAAUC,CAAV,EAAa;EAC7D,IAAIK,QAAQ,GAAG,IAAIC,IAAJ,EAAf;EACA,IAAIC,QAAQ,GAAG;IACdC,QAAQ,EAAE,YAAY;MAAE,OAAOC,MAAM,CAACJ,QAAD,CAAb;IAA0B,CADpC;IAEdK,OAAO,EAAE,YAAY;MAAE,OAAOL,QAAQ,CAACM,OAAT,EAAP;IAA4B;EAFrC,CAAf;EAIAJ,QAAQ,CAACK,MAAM,CAACC,WAAR,CAAR,GAA+B,MAA/B;EACAb,CAAC,CAACC,KAAF,CAAQH,MAAM,CAACS,QAAD,CAAd,EAA0B,iDAA1B;EACAP,CAAC,CAACG,GAAF;AACA,CATG,CAAJ;AAWAP,IAAI,CAAC,OAAD,EAAU,UAAUI,CAAV,EAAa;EAC1BA,CAAC,CAACc,EAAF,CAAKhB,MAAM,CAAC,IAAIQ,IAAJ,EAAD,CAAX,EAAyB,oBAAzB;EACAN,CAAC,CAACG,GAAF;AACA,CAHG,CAAJ"},"metadata":{},"sourceType":"script"}