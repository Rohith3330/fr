{"ast":null,"code":"/**\n * @fileoverview Utility functions for propWrapperFunctions setting\n */\n'use strict';\n\nfunction searchPropWrapperFunctions(name, propWrapperFunctions) {\n  const splitName = name.split('.');\n  return Array.from(propWrapperFunctions).some(func => {\n    if (splitName.length === 2 && func.object === splitName[0] && func.property === splitName[1]) {\n      return true;\n    }\n\n    return name === func || func.property === name;\n  });\n}\n\nfunction getPropWrapperFunctions(context) {\n  return new Set(context.settings.propWrapperFunctions || []);\n}\n\nfunction isPropWrapperFunction(context, name) {\n  if (typeof name !== 'string') {\n    return false;\n  }\n\n  const propWrapperFunctions = getPropWrapperFunctions(context);\n  return searchPropWrapperFunctions(name, propWrapperFunctions);\n}\n\nfunction getExactPropWrapperFunctions(context) {\n  const propWrapperFunctions = getPropWrapperFunctions(context);\n  const exactPropWrappers = Array.from(propWrapperFunctions).filter(func => func.exact === true);\n  return new Set(exactPropWrappers);\n}\n\nfunction isExactPropWrapperFunction(context, name) {\n  const exactPropWrappers = getExactPropWrapperFunctions(context);\n  return searchPropWrapperFunctions(name, exactPropWrappers);\n}\n\nfunction formatPropWrapperFunctions(propWrapperFunctions) {\n  return Array.from(propWrapperFunctions, func => {\n    if (func.object && func.property) {\n      return `'${func.object}.${func.property}'`;\n    }\n\n    if (func.property) {\n      return `'${func.property}'`;\n    }\n\n    return `'${func}'`;\n  }).join(', ');\n}\n\nmodule.exports = {\n  formatPropWrapperFunctions,\n  getExactPropWrapperFunctions,\n  getPropWrapperFunctions,\n  isExactPropWrapperFunction,\n  isPropWrapperFunction\n};","map":{"version":3,"names":["searchPropWrapperFunctions","name","propWrapperFunctions","splitName","split","Array","from","some","func","length","object","property","getPropWrapperFunctions","context","Set","settings","isPropWrapperFunction","getExactPropWrapperFunctions","exactPropWrappers","filter","exact","isExactPropWrapperFunction","formatPropWrapperFunctions","join","module","exports"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/eslint-plugin-react/lib/util/propWrapper.js"],"sourcesContent":["/**\n * @fileoverview Utility functions for propWrapperFunctions setting\n */\n\n'use strict';\n\nfunction searchPropWrapperFunctions(name, propWrapperFunctions) {\n  const splitName = name.split('.');\n  return Array.from(propWrapperFunctions).some((func) => {\n    if (splitName.length === 2 && func.object === splitName[0] && func.property === splitName[1]) {\n      return true;\n    }\n    return name === func || func.property === name;\n  });\n}\n\nfunction getPropWrapperFunctions(context) {\n  return new Set(context.settings.propWrapperFunctions || []);\n}\n\nfunction isPropWrapperFunction(context, name) {\n  if (typeof name !== 'string') {\n    return false;\n  }\n  const propWrapperFunctions = getPropWrapperFunctions(context);\n  return searchPropWrapperFunctions(name, propWrapperFunctions);\n}\n\nfunction getExactPropWrapperFunctions(context) {\n  const propWrapperFunctions = getPropWrapperFunctions(context);\n  const exactPropWrappers = Array.from(propWrapperFunctions).filter((func) => func.exact === true);\n  return new Set(exactPropWrappers);\n}\n\nfunction isExactPropWrapperFunction(context, name) {\n  const exactPropWrappers = getExactPropWrapperFunctions(context);\n  return searchPropWrapperFunctions(name, exactPropWrappers);\n}\n\nfunction formatPropWrapperFunctions(propWrapperFunctions) {\n  return Array.from(propWrapperFunctions, (func) => {\n    if (func.object && func.property) {\n      return `'${func.object}.${func.property}'`;\n    }\n    if (func.property) {\n      return `'${func.property}'`;\n    }\n    return `'${func}'`;\n  }).join(', ');\n}\n\nmodule.exports = {\n  formatPropWrapperFunctions,\n  getExactPropWrapperFunctions,\n  getPropWrapperFunctions,\n  isExactPropWrapperFunction,\n  isPropWrapperFunction,\n};\n"],"mappings":"AAAA;AACA;AACA;AAEA;;AAEA,SAASA,0BAAT,CAAoCC,IAApC,EAA0CC,oBAA1C,EAAgE;EAC9D,MAAMC,SAAS,GAAGF,IAAI,CAACG,KAAL,CAAW,GAAX,CAAlB;EACA,OAAOC,KAAK,CAACC,IAAN,CAAWJ,oBAAX,EAAiCK,IAAjC,CAAuCC,IAAD,IAAU;IACrD,IAAIL,SAAS,CAACM,MAAV,KAAqB,CAArB,IAA0BD,IAAI,CAACE,MAAL,KAAgBP,SAAS,CAAC,CAAD,CAAnD,IAA0DK,IAAI,CAACG,QAAL,KAAkBR,SAAS,CAAC,CAAD,CAAzF,EAA8F;MAC5F,OAAO,IAAP;IACD;;IACD,OAAOF,IAAI,KAAKO,IAAT,IAAiBA,IAAI,CAACG,QAAL,KAAkBV,IAA1C;EACD,CALM,CAAP;AAMD;;AAED,SAASW,uBAAT,CAAiCC,OAAjC,EAA0C;EACxC,OAAO,IAAIC,GAAJ,CAAQD,OAAO,CAACE,QAAR,CAAiBb,oBAAjB,IAAyC,EAAjD,CAAP;AACD;;AAED,SAASc,qBAAT,CAA+BH,OAA/B,EAAwCZ,IAAxC,EAA8C;EAC5C,IAAI,OAAOA,IAAP,KAAgB,QAApB,EAA8B;IAC5B,OAAO,KAAP;EACD;;EACD,MAAMC,oBAAoB,GAAGU,uBAAuB,CAACC,OAAD,CAApD;EACA,OAAOb,0BAA0B,CAACC,IAAD,EAAOC,oBAAP,CAAjC;AACD;;AAED,SAASe,4BAAT,CAAsCJ,OAAtC,EAA+C;EAC7C,MAAMX,oBAAoB,GAAGU,uBAAuB,CAACC,OAAD,CAApD;EACA,MAAMK,iBAAiB,GAAGb,KAAK,CAACC,IAAN,CAAWJ,oBAAX,EAAiCiB,MAAjC,CAAyCX,IAAD,IAAUA,IAAI,CAACY,KAAL,KAAe,IAAjE,CAA1B;EACA,OAAO,IAAIN,GAAJ,CAAQI,iBAAR,CAAP;AACD;;AAED,SAASG,0BAAT,CAAoCR,OAApC,EAA6CZ,IAA7C,EAAmD;EACjD,MAAMiB,iBAAiB,GAAGD,4BAA4B,CAACJ,OAAD,CAAtD;EACA,OAAOb,0BAA0B,CAACC,IAAD,EAAOiB,iBAAP,CAAjC;AACD;;AAED,SAASI,0BAAT,CAAoCpB,oBAApC,EAA0D;EACxD,OAAOG,KAAK,CAACC,IAAN,CAAWJ,oBAAX,EAAkCM,IAAD,IAAU;IAChD,IAAIA,IAAI,CAACE,MAAL,IAAeF,IAAI,CAACG,QAAxB,EAAkC;MAChC,OAAQ,IAAGH,IAAI,CAACE,MAAO,IAAGF,IAAI,CAACG,QAAS,GAAxC;IACD;;IACD,IAAIH,IAAI,CAACG,QAAT,EAAmB;MACjB,OAAQ,IAAGH,IAAI,CAACG,QAAS,GAAzB;IACD;;IACD,OAAQ,IAAGH,IAAK,GAAhB;EACD,CARM,EAQJe,IARI,CAQC,IARD,CAAP;AASD;;AAEDC,MAAM,CAACC,OAAP,GAAiB;EACfH,0BADe;EAEfL,4BAFe;EAGfL,uBAHe;EAIfS,0BAJe;EAKfL;AALe,CAAjB"},"metadata":{},"sourceType":"script"}