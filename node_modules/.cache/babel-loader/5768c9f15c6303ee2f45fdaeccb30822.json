{"ast":null,"code":"\"use strict\"; // Always use the latest available version of Unicode!\n// https://tc39.github.io/ecma262/#sec-conformance\n\nconst version = \"15.0.0\";\n\nconst start = require(\"@unicode/unicode-\" + version + \"/Binary_Property/ID_Start/code-points.js\").filter(function (ch) {\n  return ch > 0x7f;\n});\n\nlet last = -1;\nconst cont = [0x200c, 0x200d].concat(require(\"@unicode/unicode-\" + version + \"/Binary_Property/ID_Continue/code-points.js\").filter(function (ch) {\n  return ch > 0x7f && search(start, ch, last + 1) == -1;\n}));\n\nfunction search(arr, ch, starting) {\n  for (let i = starting; arr[i] <= ch && i < arr.length; last = i++) {\n    if (arr[i] === ch) return i;\n  }\n\n  return -1;\n}\n\nfunction pad(str, width) {\n  while (str.length < width) str = \"0\" + str;\n\n  return str;\n}\n\nfunction esc(code) {\n  const hex = code.toString(16);\n  if (hex.length <= 2) return \"\\\\x\" + pad(hex, 2);else return \"\\\\u\" + pad(hex, 4);\n}\n\nfunction generate(chars) {\n  const astral = [];\n  let re = \"\";\n\n  for (let i = 0, at = 0x10000; i < chars.length; i++) {\n    const from = chars[i];\n    let to = from;\n\n    while (i < chars.length - 1 && chars[i + 1] == to + 1) {\n      i++;\n      to++;\n    }\n\n    if (to <= 0xffff) {\n      if (from == to) re += esc(from);else if (from + 1 == to) re += esc(from) + esc(to);else re += esc(from) + \"-\" + esc(to);\n    } else {\n      astral.push(from - at, to - from);\n      at = to;\n    }\n  }\n\n  return {\n    nonASCII: re,\n    astral: astral\n  };\n}\n\nconst startData = generate(start);\nconst contData = generate(cont);\nconsole.log(\"/* prettier-ignore */\");\nconsole.log('let nonASCIIidentifierStartChars = \"' + startData.nonASCII + '\";');\nconsole.log(\"/* prettier-ignore */\");\nconsole.log('let nonASCIIidentifierChars = \"' + contData.nonASCII + '\";');\nconsole.log(\"/* prettier-ignore */\");\nconsole.log(\"const astralIdentifierStartCodes = \" + JSON.stringify(startData.astral) + \";\");\nconsole.log(\"/* prettier-ignore */\");\nconsole.log(\"const astralIdentifierCodes = \" + JSON.stringify(contData.astral) + \";\");","map":{"version":3,"names":["version","start","require","filter","ch","last","cont","concat","search","arr","starting","i","length","pad","str","width","esc","code","hex","toString","generate","chars","astral","re","at","from","to","push","nonASCII","startData","contData","console","log","JSON","stringify"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/@babel/helper-validator-identifier/scripts/generate-identifier-regex.js"],"sourcesContent":["\"use strict\";\n\n// Always use the latest available version of Unicode!\n// https://tc39.github.io/ecma262/#sec-conformance\nconst version = \"15.0.0\";\n\nconst start = require(\"@unicode/unicode-\" +\n  version +\n  \"/Binary_Property/ID_Start/code-points.js\").filter(function (ch) {\n  return ch > 0x7f;\n});\nlet last = -1;\nconst cont = [0x200c, 0x200d].concat(\n  require(\"@unicode/unicode-\" +\n    version +\n    \"/Binary_Property/ID_Continue/code-points.js\").filter(function (ch) {\n    return ch > 0x7f && search(start, ch, last + 1) == -1;\n  })\n);\n\nfunction search(arr, ch, starting) {\n  for (let i = starting; arr[i] <= ch && i < arr.length; last = i++) {\n    if (arr[i] === ch) return i;\n  }\n  return -1;\n}\n\nfunction pad(str, width) {\n  while (str.length < width) str = \"0\" + str;\n  return str;\n}\n\nfunction esc(code) {\n  const hex = code.toString(16);\n  if (hex.length <= 2) return \"\\\\x\" + pad(hex, 2);\n  else return \"\\\\u\" + pad(hex, 4);\n}\n\nfunction generate(chars) {\n  const astral = [];\n  let re = \"\";\n  for (let i = 0, at = 0x10000; i < chars.length; i++) {\n    const from = chars[i];\n    let to = from;\n    while (i < chars.length - 1 && chars[i + 1] == to + 1) {\n      i++;\n      to++;\n    }\n    if (to <= 0xffff) {\n      if (from == to) re += esc(from);\n      else if (from + 1 == to) re += esc(from) + esc(to);\n      else re += esc(from) + \"-\" + esc(to);\n    } else {\n      astral.push(from - at, to - from);\n      at = to;\n    }\n  }\n  return { nonASCII: re, astral: astral };\n}\n\nconst startData = generate(start);\nconst contData = generate(cont);\n\nconsole.log(\"/* prettier-ignore */\");\nconsole.log('let nonASCIIidentifierStartChars = \"' + startData.nonASCII + '\";');\nconsole.log(\"/* prettier-ignore */\");\nconsole.log('let nonASCIIidentifierChars = \"' + contData.nonASCII + '\";');\nconsole.log(\"/* prettier-ignore */\");\nconsole.log(\n  \"const astralIdentifierStartCodes = \" + JSON.stringify(startData.astral) + \";\"\n);\nconsole.log(\"/* prettier-ignore */\");\nconsole.log(\n  \"const astralIdentifierCodes = \" + JSON.stringify(contData.astral) + \";\"\n);\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}