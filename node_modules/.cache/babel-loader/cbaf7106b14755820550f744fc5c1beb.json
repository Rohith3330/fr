{"ast":null,"code":"'use strict';\n/**\n * @typedef {import('../lib/types').XastElement} XastElement\n */\n\nconst {\n  detachNodeFromParent\n} = require('../lib/xast.js');\n\nconst {\n  elemsGroups\n} = require('./_collections.js');\n\nexports.type = 'visitor';\nexports.name = 'removeUselessDefs';\nexports.active = true;\nexports.description = 'removes elements in <defs> without id';\n/**\n * Removes content of defs and properties that aren't rendered directly without ids.\n *\n * @author Lev Solntsev\n *\n * @type {import('../lib/types').Plugin<void>}\n */\n\nexports.fn = () => {\n  return {\n    element: {\n      enter: (node, parentNode) => {\n        if (node.name === 'defs') {\n          /**\n           * @type {Array<XastElement>}\n           */\n          const usefulNodes = [];\n          collectUsefulNodes(node, usefulNodes);\n\n          if (usefulNodes.length === 0) {\n            detachNodeFromParent(node, parentNode);\n          } // TODO remove in SVGO 3\n\n\n          for (const usefulNode of usefulNodes) {\n            // @ts-ignore parentNode is legacy\n            usefulNode.parentNode = node;\n          }\n\n          node.children = usefulNodes;\n        } else if (elemsGroups.nonRendering.includes(node.name) && node.attributes.id == null) {\n          detachNodeFromParent(node, parentNode);\n        }\n      }\n    }\n  };\n};\n/**\n * @type {(node: XastElement, usefulNodes: Array<XastElement>) => void}\n */\n\n\nconst collectUsefulNodes = (node, usefulNodes) => {\n  for (const child of node.children) {\n    if (child.type === 'element') {\n      if (child.attributes.id != null || child.name === 'style') {\n        usefulNodes.push(child);\n      } else {\n        collectUsefulNodes(child, usefulNodes);\n      }\n    }\n  }\n};","map":{"version":3,"names":["detachNodeFromParent","require","elemsGroups","exports","type","name","active","description","fn","element","enter","node","parentNode","usefulNodes","collectUsefulNodes","length","usefulNode","children","nonRendering","includes","attributes","id","child","push"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/postcss-svgo/node_modules/svgo/plugins/removeUselessDefs.js"],"sourcesContent":["'use strict';\n\n/**\n * @typedef {import('../lib/types').XastElement} XastElement\n */\n\nconst { detachNodeFromParent } = require('../lib/xast.js');\nconst { elemsGroups } = require('./_collections.js');\n\nexports.type = 'visitor';\nexports.name = 'removeUselessDefs';\nexports.active = true;\nexports.description = 'removes elements in <defs> without id';\n\n/**\n * Removes content of defs and properties that aren't rendered directly without ids.\n *\n * @author Lev Solntsev\n *\n * @type {import('../lib/types').Plugin<void>}\n */\nexports.fn = () => {\n  return {\n    element: {\n      enter: (node, parentNode) => {\n        if (node.name === 'defs') {\n          /**\n           * @type {Array<XastElement>}\n           */\n          const usefulNodes = [];\n          collectUsefulNodes(node, usefulNodes);\n          if (usefulNodes.length === 0) {\n            detachNodeFromParent(node, parentNode);\n          }\n          // TODO remove in SVGO 3\n          for (const usefulNode of usefulNodes) {\n            // @ts-ignore parentNode is legacy\n            usefulNode.parentNode = node;\n          }\n          node.children = usefulNodes;\n        } else if (\n          elemsGroups.nonRendering.includes(node.name) &&\n          node.attributes.id == null\n        ) {\n          detachNodeFromParent(node, parentNode);\n        }\n      },\n    },\n  };\n};\n\n/**\n * @type {(node: XastElement, usefulNodes: Array<XastElement>) => void}\n */\nconst collectUsefulNodes = (node, usefulNodes) => {\n  for (const child of node.children) {\n    if (child.type === 'element') {\n      if (child.attributes.id != null || child.name === 'style') {\n        usefulNodes.push(child);\n      } else {\n        collectUsefulNodes(child, usefulNodes);\n      }\n    }\n  }\n};\n"],"mappings":"AAAA;AAEA;AACA;AACA;;AAEA,MAAM;EAAEA;AAAF,IAA2BC,OAAO,CAAC,gBAAD,CAAxC;;AACA,MAAM;EAAEC;AAAF,IAAkBD,OAAO,CAAC,mBAAD,CAA/B;;AAEAE,OAAO,CAACC,IAAR,GAAe,SAAf;AACAD,OAAO,CAACE,IAAR,GAAe,mBAAf;AACAF,OAAO,CAACG,MAAR,GAAiB,IAAjB;AACAH,OAAO,CAACI,WAAR,GAAsB,uCAAtB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAJ,OAAO,CAACK,EAAR,GAAa,MAAM;EACjB,OAAO;IACLC,OAAO,EAAE;MACPC,KAAK,EAAE,CAACC,IAAD,EAAOC,UAAP,KAAsB;QAC3B,IAAID,IAAI,CAACN,IAAL,KAAc,MAAlB,EAA0B;UACxB;AACV;AACA;UACU,MAAMQ,WAAW,GAAG,EAApB;UACAC,kBAAkB,CAACH,IAAD,EAAOE,WAAP,CAAlB;;UACA,IAAIA,WAAW,CAACE,MAAZ,KAAuB,CAA3B,EAA8B;YAC5Bf,oBAAoB,CAACW,IAAD,EAAOC,UAAP,CAApB;UACD,CARuB,CASxB;;;UACA,KAAK,MAAMI,UAAX,IAAyBH,WAAzB,EAAsC;YACpC;YACAG,UAAU,CAACJ,UAAX,GAAwBD,IAAxB;UACD;;UACDA,IAAI,CAACM,QAAL,GAAgBJ,WAAhB;QACD,CAfD,MAeO,IACLX,WAAW,CAACgB,YAAZ,CAAyBC,QAAzB,CAAkCR,IAAI,CAACN,IAAvC,KACAM,IAAI,CAACS,UAAL,CAAgBC,EAAhB,IAAsB,IAFjB,EAGL;UACArB,oBAAoB,CAACW,IAAD,EAAOC,UAAP,CAApB;QACD;MACF;IAvBM;EADJ,CAAP;AA2BD,CA5BD;AA8BA;AACA;AACA;;;AACA,MAAME,kBAAkB,GAAG,CAACH,IAAD,EAAOE,WAAP,KAAuB;EAChD,KAAK,MAAMS,KAAX,IAAoBX,IAAI,CAACM,QAAzB,EAAmC;IACjC,IAAIK,KAAK,CAAClB,IAAN,KAAe,SAAnB,EAA8B;MAC5B,IAAIkB,KAAK,CAACF,UAAN,CAAiBC,EAAjB,IAAuB,IAAvB,IAA+BC,KAAK,CAACjB,IAAN,KAAe,OAAlD,EAA2D;QACzDQ,WAAW,CAACU,IAAZ,CAAiBD,KAAjB;MACD,CAFD,MAEO;QACLR,kBAAkB,CAACQ,KAAD,EAAQT,WAAR,CAAlB;MACD;IACF;EACF;AACF,CAVD"},"metadata":{},"sourceType":"script"}