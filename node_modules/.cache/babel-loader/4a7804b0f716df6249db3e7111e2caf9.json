{"ast":null,"code":"// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\nvar common = require('./common');\n\nvar assert = require('assert');\n\nvar EventEmitter = require('../');\n\n{\n  var ee = new EventEmitter();\n  var events_new_listener_emitted = [];\n  var listeners_new_listener_emitted = []; // Sanity check\n\n  assert.strictEqual(ee.addListener, ee.on);\n  ee.on('newListener', function (event, listener) {\n    // Don't track newListener listeners.\n    if (event === 'newListener') return;\n    events_new_listener_emitted.push(event);\n    listeners_new_listener_emitted.push(listener);\n  });\n  var hello = common.mustCall(function (a, b) {\n    assert.strictEqual('a', a);\n    assert.strictEqual('b', b);\n  });\n  ee.once('newListener', function (name, listener) {\n    assert.strictEqual(name, 'hello');\n    assert.strictEqual(listener, hello);\n    var listeners = this.listeners('hello');\n    assert.ok(Array.isArray(listeners));\n    assert.strictEqual(listeners.length, 0);\n  });\n  ee.on('hello', hello);\n  ee.once('foo', assert.fail);\n  assert.ok(Array.isArray(events_new_listener_emitted));\n  assert.strictEqual(events_new_listener_emitted.length, 2);\n  assert.strictEqual(events_new_listener_emitted[0], 'hello');\n  assert.strictEqual(events_new_listener_emitted[1], 'foo');\n  assert.ok(Array.isArray(listeners_new_listener_emitted));\n  assert.strictEqual(listeners_new_listener_emitted.length, 2);\n  assert.strictEqual(listeners_new_listener_emitted[0], hello);\n  assert.strictEqual(listeners_new_listener_emitted[1], assert.fail);\n  ee.emit('hello', 'a', 'b');\n} // just make sure that this doesn't throw:\n\n{\n  var f = new EventEmitter();\n  f.setMaxListeners(0);\n}\n{\n  var listen1 = function () {};\n\n  var listen2 = function () {};\n\n  var ee = new EventEmitter();\n  ee.once('newListener', function () {\n    var listeners = ee.listeners('hello');\n    assert.ok(Array.isArray(listeners));\n    assert.strictEqual(listeners.length, 0);\n    ee.once('newListener', function () {\n      var listeners = ee.listeners('hello');\n      assert.ok(Array.isArray(listeners));\n      assert.strictEqual(listeners.length, 0);\n    });\n    ee.on('hello', listen2);\n  });\n  ee.on('hello', listen1); // The order of listeners on an event is not always the order in which the\n  // listeners were added.\n\n  var listeners = ee.listeners('hello');\n  assert.ok(Array.isArray(listeners));\n  assert.strictEqual(listeners.length, 2);\n  assert.strictEqual(listeners[0], listen2);\n  assert.strictEqual(listeners[1], listen1);\n} // Verify that the listener must be a function\n\nassert.throws(function () {\n  var ee = new EventEmitter();\n  ee.on('foo', null);\n}, /^TypeError: The \"listener\" argument must be of type Function. Received type object$/);","map":{"version":3,"names":["common","require","assert","EventEmitter","ee","events_new_listener_emitted","listeners_new_listener_emitted","strictEqual","addListener","on","event","listener","push","hello","mustCall","a","b","once","name","listeners","ok","Array","isArray","length","fail","emit","f","setMaxListeners","listen1","listen2","throws"],"sources":["C:/Users/Rohith/mern/frontend/node_modules/events/tests/add-listeners.js"],"sourcesContent":["// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar common = require('./common');\nvar assert = require('assert');\nvar EventEmitter = require('../');\n\n{\n  var ee = new EventEmitter();\n  var events_new_listener_emitted = [];\n  var listeners_new_listener_emitted = [];\n\n  // Sanity check\n  assert.strictEqual(ee.addListener, ee.on);\n\n  ee.on('newListener', function(event, listener) {\n    // Don't track newListener listeners.\n    if (event === 'newListener')\n      return;\n\n    events_new_listener_emitted.push(event);\n    listeners_new_listener_emitted.push(listener);\n  });\n\n  var hello = common.mustCall(function(a, b) {\n    assert.strictEqual('a', a);\n    assert.strictEqual('b', b);\n  });\n\n  ee.once('newListener', function(name, listener) {\n    assert.strictEqual(name, 'hello');\n    assert.strictEqual(listener, hello);\n\n    var listeners = this.listeners('hello');\n    assert.ok(Array.isArray(listeners));\n    assert.strictEqual(listeners.length, 0);\n  });\n\n  ee.on('hello', hello);\n  ee.once('foo', assert.fail);\n\n  assert.ok(Array.isArray(events_new_listener_emitted));\n  assert.strictEqual(events_new_listener_emitted.length, 2);\n  assert.strictEqual(events_new_listener_emitted[0], 'hello');\n  assert.strictEqual(events_new_listener_emitted[1], 'foo');\n\n  assert.ok(Array.isArray(listeners_new_listener_emitted));\n  assert.strictEqual(listeners_new_listener_emitted.length, 2);\n  assert.strictEqual(listeners_new_listener_emitted[0], hello);\n  assert.strictEqual(listeners_new_listener_emitted[1], assert.fail);\n\n  ee.emit('hello', 'a', 'b');\n}\n\n// just make sure that this doesn't throw:\n{\n  var f = new EventEmitter();\n\n  f.setMaxListeners(0);\n}\n\n{\n  var listen1 = function() {};\n  var listen2 = function() {};\n  var ee = new EventEmitter();\n\n  ee.once('newListener', function() {\n    var listeners = ee.listeners('hello');\n    assert.ok(Array.isArray(listeners));\n    assert.strictEqual(listeners.length, 0);\n    ee.once('newListener', function() {\n      var listeners = ee.listeners('hello');\n      assert.ok(Array.isArray(listeners));\n      assert.strictEqual(listeners.length, 0);\n    });\n    ee.on('hello', listen2);\n  });\n  ee.on('hello', listen1);\n  // The order of listeners on an event is not always the order in which the\n  // listeners were added.\n  var listeners = ee.listeners('hello');\n  assert.ok(Array.isArray(listeners));\n  assert.strictEqual(listeners.length, 2);\n  assert.strictEqual(listeners[0], listen2);\n  assert.strictEqual(listeners[1], listen1);\n}\n\n// Verify that the listener must be a function\nassert.throws(function() {\n  var ee = new EventEmitter();\n\n  ee.on('foo', null);\n}, /^TypeError: The \"listener\" argument must be of type Function. Received type object$/);\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}