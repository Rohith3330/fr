{"ast":null,"code":"import { lowerCase, localeLowerCase } from \".\";\nvar TEST_CASES = [[\"\", \"\"], [\"test\", \"test\"], [\"TEST\", \"test\"], [\"test string\", \"test string\"], [\"TEST STRING\", \"test string\"]];\nvar LOCALE_TEST_CASES = [[\"STRING\", \"strıng\", \"tr\"]];\ndescribe(\"lower case\", function () {\n  var _loop_1 = function (input, result) {\n    it(input + \" -> \" + result, function () {\n      expect(lowerCase(input)).toEqual(result);\n    });\n  };\n\n  for (var _i = 0, TEST_CASES_1 = TEST_CASES; _i < TEST_CASES_1.length; _i++) {\n    var _a = TEST_CASES_1[_i],\n        input = _a[0],\n        result = _a[1];\n\n    _loop_1(input, result);\n  }\n});\ndescribe(\"locale lower case\", function () {\n  var _loop_2 = function (input, result, locale) {\n    it(locale + \": \" + input + \" -> \" + result, function () {\n      expect(localeLowerCase(input, locale)).toEqual(result);\n    });\n  };\n\n  for (var _i = 0, LOCALE_TEST_CASES_1 = LOCALE_TEST_CASES; _i < LOCALE_TEST_CASES_1.length; _i++) {\n    var _a = LOCALE_TEST_CASES_1[_i],\n        input = _a[0],\n        result = _a[1],\n        locale = _a[2];\n\n    _loop_2(input, result, locale);\n  }\n});","map":{"version":3,"mappings":"AAAA,SAASA,SAAT,EAAoBC,eAApB,QAA2C,GAA3C;AAEA,IAAMC,UAAU,GAAuB,CACrC,CAAC,EAAD,EAAK,EAAL,CADqC,EAErC,CAAC,MAAD,EAAS,MAAT,CAFqC,EAGrC,CAAC,MAAD,EAAS,MAAT,CAHqC,EAIrC,CAAC,aAAD,EAAgB,aAAhB,CAJqC,EAKrC,CAAC,aAAD,EAAgB,aAAhB,CALqC,CAAvC;AAQA,IAAMC,iBAAiB,GAA+B,CACpD,CAAC,QAAD,EAAW,QAAX,EAAqB,IAArB,CADoD,CAAtD;AAIAC,QAAQ,CAAC,YAAD,EAAe;0BACTC,OAAOC,QAAM;IACvBC,EAAE,CAAIF,KAAK,SAAL,GAAYC,MAAhB,EAA0B;MAC1BE,MAAM,CAACR,SAAS,CAACK,KAAD,CAAV,CAAN,CAAyBI,OAAzB,CAAiCH,MAAjC;IACD,CAFC,CAAF;;;EADF,KAA8B,qCAA9B,EAA8BI,wBAA9B,EAA8BA,IAA9B,EAAwC;IAA7B;IAAA,IAACL,KAAK,QAAN;IAAA,IAAQC,MAAM,QAAd;;YAACD,OAAOC;EAIlB;AACF,CANO,CAAR;AAQAF,QAAQ,CAAC,mBAAD,EAAsB;0BAChBC,OAAOC,QAAQK,QAAM;IAC/BJ,EAAE,CAAII,MAAM,OAAN,GAAWN,KAAX,GAAgB,MAAhB,GAAuBC,MAA3B,EAAqC;MACrCE,MAAM,CAACP,eAAe,CAACI,KAAD,EAAQM,MAAR,CAAhB,CAAN,CAAuCF,OAAvC,CAA+CH,MAA/C;IACD,CAFC,CAAF;;;EADF,KAAsC,mDAAtC,EAAsCI,+BAAtC,EAAsCA,IAAtC,EAAuD;IAA5C;IAAA,IAACL,KAAK,QAAN;IAAA,IAAQC,MAAM,QAAd;IAAA,IAAgBK,MAAM,QAAtB;;YAACN,OAAOC,QAAQK;EAI1B;AACF,CANO,CAAR","names":["lowerCase","localeLowerCase","TEST_CASES","LOCALE_TEST_CASES","describe","input","result","it","expect","toEqual","_i","locale"],"sources":["C:\\Users\\Rohith\\mern\\frontend\\node_modules\\lower-case\\src\\index.spec.ts"],"sourcesContent":["import { lowerCase, localeLowerCase } from \".\";\n\nconst TEST_CASES: [string, string][] = [\n  [\"\", \"\"],\n  [\"test\", \"test\"],\n  [\"TEST\", \"test\"],\n  [\"test string\", \"test string\"],\n  [\"TEST STRING\", \"test string\"],\n];\n\nconst LOCALE_TEST_CASES: [string, string, string][] = [\n  [\"STRING\", \"strıng\", \"tr\"],\n];\n\ndescribe(\"lower case\", () => {\n  for (const [input, result] of TEST_CASES) {\n    it(`${input} -> ${result}`, () => {\n      expect(lowerCase(input)).toEqual(result);\n    });\n  }\n});\n\ndescribe(\"locale lower case\", () => {\n  for (const [input, result, locale] of LOCALE_TEST_CASES) {\n    it(`${locale}: ${input} -> ${result}`, () => {\n      expect(localeLowerCase(input, locale)).toEqual(result);\n    });\n  }\n});\n"]},"metadata":{},"sourceType":"module"}